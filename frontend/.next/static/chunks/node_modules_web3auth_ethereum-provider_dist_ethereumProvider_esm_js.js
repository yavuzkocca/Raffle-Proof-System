/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["node_modules_web3auth_ethereum-provider_dist_ethereumProvider_esm_js"],{

/***/ "./node_modules/@ethereumjs/common/dist.browser/chains/index.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@ethereumjs/common/dist.browser/chains/index.js ***!
  \**********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.chains = exports._getInitializedChains = void 0;\nvar mainnet_json_1 = __importDefault(__webpack_require__(/*! ./mainnet.json */ \"./node_modules/@ethereumjs/common/dist.browser/chains/mainnet.json\"));\nvar ropsten_json_1 = __importDefault(__webpack_require__(/*! ./ropsten.json */ \"./node_modules/@ethereumjs/common/dist.browser/chains/ropsten.json\"));\nvar rinkeby_json_1 = __importDefault(__webpack_require__(/*! ./rinkeby.json */ \"./node_modules/@ethereumjs/common/dist.browser/chains/rinkeby.json\"));\nvar kovan_json_1 = __importDefault(__webpack_require__(/*! ./kovan.json */ \"./node_modules/@ethereumjs/common/dist.browser/chains/kovan.json\"));\nvar goerli_json_1 = __importDefault(__webpack_require__(/*! ./goerli.json */ \"./node_modules/@ethereumjs/common/dist.browser/chains/goerli.json\"));\nvar sepolia_json_1 = __importDefault(__webpack_require__(/*! ./sepolia.json */ \"./node_modules/@ethereumjs/common/dist.browser/chains/sepolia.json\"));\n/**\n * @hidden\n */\nfunction _getInitializedChains(customChains) {\n    var e_1, _a;\n    var names = {\n        '1': 'mainnet',\n        '3': 'ropsten',\n        '4': 'rinkeby',\n        '42': 'kovan',\n        '5': 'goerli',\n        '11155111': 'sepolia',\n    };\n    var chains = {\n        mainnet: mainnet_json_1.default,\n        ropsten: ropsten_json_1.default,\n        rinkeby: rinkeby_json_1.default,\n        kovan: kovan_json_1.default,\n        goerli: goerli_json_1.default,\n        sepolia: sepolia_json_1.default,\n    };\n    if (customChains) {\n        try {\n            for (var customChains_1 = __values(customChains), customChains_1_1 = customChains_1.next(); !customChains_1_1.done; customChains_1_1 = customChains_1.next()) {\n                var chain = customChains_1_1.value;\n                var name_1 = chain.name;\n                names[chain.chainId.toString()] = name_1;\n                chains[name_1] = chain;\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (customChains_1_1 && !customChains_1_1.done && (_a = customChains_1.return)) _a.call(customChains_1);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n    }\n    chains['names'] = names;\n    return chains;\n}\nexports._getInitializedChains = _getInitializedChains;\n/**\n * @deprecated this constant will be internalized (removed)\n * on next major version update\n */\nexports.chains = _getInitializedChains();\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGV0aGVyZXVtanMvY29tbW9uL2Rpc3QuYnJvd3Nlci9jaGFpbnMvaW5kZXguanMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZDQUE2QztBQUM3QztBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxjQUFjLEdBQUcsNkJBQTZCO0FBQzlDLHFDQUFxQyxtQkFBTyxDQUFDLDBGQUFnQjtBQUM3RCxxQ0FBcUMsbUJBQU8sQ0FBQywwRkFBZ0I7QUFDN0QscUNBQXFDLG1CQUFPLENBQUMsMEZBQWdCO0FBQzdELG1DQUFtQyxtQkFBTyxDQUFDLHNGQUFjO0FBQ3pELG9DQUFvQyxtQkFBTyxDQUFDLHdGQUFlO0FBQzNELHFDQUFxQyxtQkFBTyxDQUFDLDBGQUFnQjtBQUM3RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0dBQXdHLHdCQUF3QjtBQUNoSTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsUUFBUTtBQUNoQztBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQjtBQUN0QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkJBQTZCO0FBQzdCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYztBQUNkIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AZXRoZXJldW1qcy9jb21tb24vZGlzdC5icm93c2VyL2NoYWlucy9pbmRleC5qcz9hNzdhIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9fdmFsdWVzID0gKHRoaXMgJiYgdGhpcy5fX3ZhbHVlcykgfHwgZnVuY3Rpb24obykge1xuICAgIHZhciBzID0gdHlwZW9mIFN5bWJvbCA9PT0gXCJmdW5jdGlvblwiICYmIFN5bWJvbC5pdGVyYXRvciwgbSA9IHMgJiYgb1tzXSwgaSA9IDA7XG4gICAgaWYgKG0pIHJldHVybiBtLmNhbGwobyk7XG4gICAgaWYgKG8gJiYgdHlwZW9mIG8ubGVuZ3RoID09PSBcIm51bWJlclwiKSByZXR1cm4ge1xuICAgICAgICBuZXh0OiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICBpZiAobyAmJiBpID49IG8ubGVuZ3RoKSBvID0gdm9pZCAwO1xuICAgICAgICAgICAgcmV0dXJuIHsgdmFsdWU6IG8gJiYgb1tpKytdLCBkb25lOiAhbyB9O1xuICAgICAgICB9XG4gICAgfTtcbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKHMgPyBcIk9iamVjdCBpcyBub3QgaXRlcmFibGUuXCIgOiBcIlN5bWJvbC5pdGVyYXRvciBpcyBub3QgZGVmaW5lZC5cIik7XG59O1xudmFyIF9faW1wb3J0RGVmYXVsdCA9ICh0aGlzICYmIHRoaXMuX19pbXBvcnREZWZhdWx0KSB8fCBmdW5jdGlvbiAobW9kKSB7XG4gICAgcmV0dXJuIChtb2QgJiYgbW9kLl9fZXNNb2R1bGUpID8gbW9kIDogeyBcImRlZmF1bHRcIjogbW9kIH07XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5jaGFpbnMgPSBleHBvcnRzLl9nZXRJbml0aWFsaXplZENoYWlucyA9IHZvaWQgMDtcbnZhciBtYWlubmV0X2pzb25fMSA9IF9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwiLi9tYWlubmV0Lmpzb25cIikpO1xudmFyIHJvcHN0ZW5fanNvbl8xID0gX19pbXBvcnREZWZhdWx0KHJlcXVpcmUoXCIuL3JvcHN0ZW4uanNvblwiKSk7XG52YXIgcmlua2VieV9qc29uXzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZShcIi4vcmlua2VieS5qc29uXCIpKTtcbnZhciBrb3Zhbl9qc29uXzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZShcIi4va292YW4uanNvblwiKSk7XG52YXIgZ29lcmxpX2pzb25fMSA9IF9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwiLi9nb2VybGkuanNvblwiKSk7XG52YXIgc2Vwb2xpYV9qc29uXzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZShcIi4vc2Vwb2xpYS5qc29uXCIpKTtcbi8qKlxuICogQGhpZGRlblxuICovXG5mdW5jdGlvbiBfZ2V0SW5pdGlhbGl6ZWRDaGFpbnMoY3VzdG9tQ2hhaW5zKSB7XG4gICAgdmFyIGVfMSwgX2E7XG4gICAgdmFyIG5hbWVzID0ge1xuICAgICAgICAnMSc6ICdtYWlubmV0JyxcbiAgICAgICAgJzMnOiAncm9wc3RlbicsXG4gICAgICAgICc0JzogJ3JpbmtlYnknLFxuICAgICAgICAnNDInOiAna292YW4nLFxuICAgICAgICAnNSc6ICdnb2VybGknLFxuICAgICAgICAnMTExNTUxMTEnOiAnc2Vwb2xpYScsXG4gICAgfTtcbiAgICB2YXIgY2hhaW5zID0ge1xuICAgICAgICBtYWlubmV0OiBtYWlubmV0X2pzb25fMS5kZWZhdWx0LFxuICAgICAgICByb3BzdGVuOiByb3BzdGVuX2pzb25fMS5kZWZhdWx0LFxuICAgICAgICByaW5rZWJ5OiByaW5rZWJ5X2pzb25fMS5kZWZhdWx0LFxuICAgICAgICBrb3Zhbjoga292YW5fanNvbl8xLmRlZmF1bHQsXG4gICAgICAgIGdvZXJsaTogZ29lcmxpX2pzb25fMS5kZWZhdWx0LFxuICAgICAgICBzZXBvbGlhOiBzZXBvbGlhX2pzb25fMS5kZWZhdWx0LFxuICAgIH07XG4gICAgaWYgKGN1c3RvbUNoYWlucykge1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgZm9yICh2YXIgY3VzdG9tQ2hhaW5zXzEgPSBfX3ZhbHVlcyhjdXN0b21DaGFpbnMpLCBjdXN0b21DaGFpbnNfMV8xID0gY3VzdG9tQ2hhaW5zXzEubmV4dCgpOyAhY3VzdG9tQ2hhaW5zXzFfMS5kb25lOyBjdXN0b21DaGFpbnNfMV8xID0gY3VzdG9tQ2hhaW5zXzEubmV4dCgpKSB7XG4gICAgICAgICAgICAgICAgdmFyIGNoYWluID0gY3VzdG9tQ2hhaW5zXzFfMS52YWx1ZTtcbiAgICAgICAgICAgICAgICB2YXIgbmFtZV8xID0gY2hhaW4ubmFtZTtcbiAgICAgICAgICAgICAgICBuYW1lc1tjaGFpbi5jaGFpbklkLnRvU3RyaW5nKCldID0gbmFtZV8xO1xuICAgICAgICAgICAgICAgIGNoYWluc1tuYW1lXzFdID0gY2hhaW47XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgY2F0Y2ggKGVfMV8xKSB7IGVfMSA9IHsgZXJyb3I6IGVfMV8xIH07IH1cbiAgICAgICAgZmluYWxseSB7XG4gICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgIGlmIChjdXN0b21DaGFpbnNfMV8xICYmICFjdXN0b21DaGFpbnNfMV8xLmRvbmUgJiYgKF9hID0gY3VzdG9tQ2hhaW5zXzEucmV0dXJuKSkgX2EuY2FsbChjdXN0b21DaGFpbnNfMSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBmaW5hbGx5IHsgaWYgKGVfMSkgdGhyb3cgZV8xLmVycm9yOyB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgY2hhaW5zWyduYW1lcyddID0gbmFtZXM7XG4gICAgcmV0dXJuIGNoYWlucztcbn1cbmV4cG9ydHMuX2dldEluaXRpYWxpemVkQ2hhaW5zID0gX2dldEluaXRpYWxpemVkQ2hhaW5zO1xuLyoqXG4gKiBAZGVwcmVjYXRlZCB0aGlzIGNvbnN0YW50IHdpbGwgYmUgaW50ZXJuYWxpemVkIChyZW1vdmVkKVxuICogb24gbmV4dCBtYWpvciB2ZXJzaW9uIHVwZGF0ZVxuICovXG5leHBvcnRzLmNoYWlucyA9IF9nZXRJbml0aWFsaXplZENoYWlucygpO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@ethereumjs/common/dist.browser/chains/index.js\n");

/***/ }),

/***/ "./node_modules/@ethereumjs/common/dist.browser/eips/index.js":
/*!********************************************************************!*\
  !*** ./node_modules/@ethereumjs/common/dist.browser/eips/index.js ***!
  \********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.EIPs = void 0;\nexports.EIPs = {\n    1153: __webpack_require__(/*! ./1153.json */ \"./node_modules/@ethereumjs/common/dist.browser/eips/1153.json\"),\n    1559: __webpack_require__(/*! ./1559.json */ \"./node_modules/@ethereumjs/common/dist.browser/eips/1559.json\"),\n    2315: __webpack_require__(/*! ./2315.json */ \"./node_modules/@ethereumjs/common/dist.browser/eips/2315.json\"),\n    2537: __webpack_require__(/*! ./2537.json */ \"./node_modules/@ethereumjs/common/dist.browser/eips/2537.json\"),\n    2565: __webpack_require__(/*! ./2565.json */ \"./node_modules/@ethereumjs/common/dist.browser/eips/2565.json\"),\n    2718: __webpack_require__(/*! ./2718.json */ \"./node_modules/@ethereumjs/common/dist.browser/eips/2718.json\"),\n    2929: __webpack_require__(/*! ./2929.json */ \"./node_modules/@ethereumjs/common/dist.browser/eips/2929.json\"),\n    2930: __webpack_require__(/*! ./2930.json */ \"./node_modules/@ethereumjs/common/dist.browser/eips/2930.json\"),\n    3198: __webpack_require__(/*! ./3198.json */ \"./node_modules/@ethereumjs/common/dist.browser/eips/3198.json\"),\n    3529: __webpack_require__(/*! ./3529.json */ \"./node_modules/@ethereumjs/common/dist.browser/eips/3529.json\"),\n    3540: __webpack_require__(/*! ./3540.json */ \"./node_modules/@ethereumjs/common/dist.browser/eips/3540.json\"),\n    3541: __webpack_require__(/*! ./3541.json */ \"./node_modules/@ethereumjs/common/dist.browser/eips/3541.json\"),\n    3554: __webpack_require__(/*! ./3554.json */ \"./node_modules/@ethereumjs/common/dist.browser/eips/3554.json\"),\n    3607: __webpack_require__(/*! ./3607.json */ \"./node_modules/@ethereumjs/common/dist.browser/eips/3607.json\"),\n    3651: __webpack_require__(/*! ./3651.json */ \"./node_modules/@ethereumjs/common/dist.browser/eips/3651.json\"),\n    3670: __webpack_require__(/*! ./3670.json */ \"./node_modules/@ethereumjs/common/dist.browser/eips/3670.json\"),\n    3675: __webpack_require__(/*! ./3675.json */ \"./node_modules/@ethereumjs/common/dist.browser/eips/3675.json\"),\n    3855: __webpack_require__(/*! ./3855.json */ \"./node_modules/@ethereumjs/common/dist.browser/eips/3855.json\"),\n    3860: __webpack_require__(/*! ./3860.json */ \"./node_modules/@ethereumjs/common/dist.browser/eips/3860.json\"),\n    4345: __webpack_require__(/*! ./4345.json */ \"./node_modules/@ethereumjs/common/dist.browser/eips/4345.json\"),\n    4399: __webpack_require__(/*! ./4399.json */ \"./node_modules/@ethereumjs/common/dist.browser/eips/4399.json\"),\n    5133: __webpack_require__(/*! ./5133.json */ \"./node_modules/@ethereumjs/common/dist.browser/eips/5133.json\"),\n};\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGV0aGVyZXVtanMvY29tbW9uL2Rpc3QuYnJvd3Nlci9laXBzL2luZGV4LmpzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELFlBQVk7QUFDWixZQUFZO0FBQ1osVUFBVSxtQkFBTyxDQUFDLGtGQUFhO0FBQy9CLFVBQVUsbUJBQU8sQ0FBQyxrRkFBYTtBQUMvQixVQUFVLG1CQUFPLENBQUMsa0ZBQWE7QUFDL0IsVUFBVSxtQkFBTyxDQUFDLGtGQUFhO0FBQy9CLFVBQVUsbUJBQU8sQ0FBQyxrRkFBYTtBQUMvQixVQUFVLG1CQUFPLENBQUMsa0ZBQWE7QUFDL0IsVUFBVSxtQkFBTyxDQUFDLGtGQUFhO0FBQy9CLFVBQVUsbUJBQU8sQ0FBQyxrRkFBYTtBQUMvQixVQUFVLG1CQUFPLENBQUMsa0ZBQWE7QUFDL0IsVUFBVSxtQkFBTyxDQUFDLGtGQUFhO0FBQy9CLFVBQVUsbUJBQU8sQ0FBQyxrRkFBYTtBQUMvQixVQUFVLG1CQUFPLENBQUMsa0ZBQWE7QUFDL0IsVUFBVSxtQkFBTyxDQUFDLGtGQUFhO0FBQy9CLFVBQVUsbUJBQU8sQ0FBQyxrRkFBYTtBQUMvQixVQUFVLG1CQUFPLENBQUMsa0ZBQWE7QUFDL0IsVUFBVSxtQkFBTyxDQUFDLGtGQUFhO0FBQy9CLFVBQVUsbUJBQU8sQ0FBQyxrRkFBYTtBQUMvQixVQUFVLG1CQUFPLENBQUMsa0ZBQWE7QUFDL0IsVUFBVSxtQkFBTyxDQUFDLGtGQUFhO0FBQy9CLFVBQVUsbUJBQU8sQ0FBQyxrRkFBYTtBQUMvQixVQUFVLG1CQUFPLENBQUMsa0ZBQWE7QUFDL0IsVUFBVSxtQkFBTyxDQUFDLGtGQUFhO0FBQy9CO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BldGhlcmV1bWpzL2NvbW1vbi9kaXN0LmJyb3dzZXIvZWlwcy9pbmRleC5qcz82NDY4Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5FSVBzID0gdm9pZCAwO1xuZXhwb3J0cy5FSVBzID0ge1xuICAgIDExNTM6IHJlcXVpcmUoJy4vMTE1My5qc29uJyksXG4gICAgMTU1OTogcmVxdWlyZSgnLi8xNTU5Lmpzb24nKSxcbiAgICAyMzE1OiByZXF1aXJlKCcuLzIzMTUuanNvbicpLFxuICAgIDI1Mzc6IHJlcXVpcmUoJy4vMjUzNy5qc29uJyksXG4gICAgMjU2NTogcmVxdWlyZSgnLi8yNTY1Lmpzb24nKSxcbiAgICAyNzE4OiByZXF1aXJlKCcuLzI3MTguanNvbicpLFxuICAgIDI5Mjk6IHJlcXVpcmUoJy4vMjkyOS5qc29uJyksXG4gICAgMjkzMDogcmVxdWlyZSgnLi8yOTMwLmpzb24nKSxcbiAgICAzMTk4OiByZXF1aXJlKCcuLzMxOTguanNvbicpLFxuICAgIDM1Mjk6IHJlcXVpcmUoJy4vMzUyOS5qc29uJyksXG4gICAgMzU0MDogcmVxdWlyZSgnLi8zNTQwLmpzb24nKSxcbiAgICAzNTQxOiByZXF1aXJlKCcuLzM1NDEuanNvbicpLFxuICAgIDM1NTQ6IHJlcXVpcmUoJy4vMzU1NC5qc29uJyksXG4gICAgMzYwNzogcmVxdWlyZSgnLi8zNjA3Lmpzb24nKSxcbiAgICAzNjUxOiByZXF1aXJlKCcuLzM2NTEuanNvbicpLFxuICAgIDM2NzA6IHJlcXVpcmUoJy4vMzY3MC5qc29uJyksXG4gICAgMzY3NTogcmVxdWlyZSgnLi8zNjc1Lmpzb24nKSxcbiAgICAzODU1OiByZXF1aXJlKCcuLzM4NTUuanNvbicpLFxuICAgIDM4NjA6IHJlcXVpcmUoJy4vMzg2MC5qc29uJyksXG4gICAgNDM0NTogcmVxdWlyZSgnLi80MzQ1Lmpzb24nKSxcbiAgICA0Mzk5OiByZXF1aXJlKCcuLzQzOTkuanNvbicpLFxuICAgIDUxMzM6IHJlcXVpcmUoJy4vNTEzMy5qc29uJyksXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@ethereumjs/common/dist.browser/eips/index.js\n");

/***/ }),

/***/ "./node_modules/@ethereumjs/common/dist.browser/hardforks/index.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@ethereumjs/common/dist.browser/hardforks/index.js ***!
  \*************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.hardforks = void 0;\nexports.hardforks = [\n    ['chainstart', __webpack_require__(/*! ./chainstart.json */ \"./node_modules/@ethereumjs/common/dist.browser/hardforks/chainstart.json\")],\n    ['homestead', __webpack_require__(/*! ./homestead.json */ \"./node_modules/@ethereumjs/common/dist.browser/hardforks/homestead.json\")],\n    ['dao', __webpack_require__(/*! ./dao.json */ \"./node_modules/@ethereumjs/common/dist.browser/hardforks/dao.json\")],\n    ['tangerineWhistle', __webpack_require__(/*! ./tangerineWhistle.json */ \"./node_modules/@ethereumjs/common/dist.browser/hardforks/tangerineWhistle.json\")],\n    ['spuriousDragon', __webpack_require__(/*! ./spuriousDragon.json */ \"./node_modules/@ethereumjs/common/dist.browser/hardforks/spuriousDragon.json\")],\n    ['byzantium', __webpack_require__(/*! ./byzantium.json */ \"./node_modules/@ethereumjs/common/dist.browser/hardforks/byzantium.json\")],\n    ['constantinople', __webpack_require__(/*! ./constantinople.json */ \"./node_modules/@ethereumjs/common/dist.browser/hardforks/constantinople.json\")],\n    ['petersburg', __webpack_require__(/*! ./petersburg.json */ \"./node_modules/@ethereumjs/common/dist.browser/hardforks/petersburg.json\")],\n    ['istanbul', __webpack_require__(/*! ./istanbul.json */ \"./node_modules/@ethereumjs/common/dist.browser/hardforks/istanbul.json\")],\n    ['muirGlacier', __webpack_require__(/*! ./muirGlacier.json */ \"./node_modules/@ethereumjs/common/dist.browser/hardforks/muirGlacier.json\")],\n    ['berlin', __webpack_require__(/*! ./berlin.json */ \"./node_modules/@ethereumjs/common/dist.browser/hardforks/berlin.json\")],\n    ['london', __webpack_require__(/*! ./london.json */ \"./node_modules/@ethereumjs/common/dist.browser/hardforks/london.json\")],\n    ['shanghai', __webpack_require__(/*! ./shanghai.json */ \"./node_modules/@ethereumjs/common/dist.browser/hardforks/shanghai.json\")],\n    ['arrowGlacier', __webpack_require__(/*! ./arrowGlacier.json */ \"./node_modules/@ethereumjs/common/dist.browser/hardforks/arrowGlacier.json\")],\n    ['grayGlacier', __webpack_require__(/*! ./grayGlacier.json */ \"./node_modules/@ethereumjs/common/dist.browser/hardforks/grayGlacier.json\")],\n    ['mergeForkIdTransition', __webpack_require__(/*! ./mergeForkIdTransition.json */ \"./node_modules/@ethereumjs/common/dist.browser/hardforks/mergeForkIdTransition.json\")],\n    ['merge', __webpack_require__(/*! ./merge.json */ \"./node_modules/@ethereumjs/common/dist.browser/hardforks/merge.json\")],\n];\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGV0aGVyZXVtanMvY29tbW9uL2Rpc3QuYnJvd3Nlci9oYXJkZm9ya3MvaW5kZXguanMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsaUJBQWlCO0FBQ2pCLGlCQUFpQjtBQUNqQixtQkFBbUIsbUJBQU8sQ0FBQyxtR0FBbUI7QUFDOUMsa0JBQWtCLG1CQUFPLENBQUMsaUdBQWtCO0FBQzVDLFlBQVksbUJBQU8sQ0FBQyxxRkFBWTtBQUNoQyx5QkFBeUIsbUJBQU8sQ0FBQywrR0FBeUI7QUFDMUQsdUJBQXVCLG1CQUFPLENBQUMsMkdBQXVCO0FBQ3RELGtCQUFrQixtQkFBTyxDQUFDLGlHQUFrQjtBQUM1Qyx1QkFBdUIsbUJBQU8sQ0FBQywyR0FBdUI7QUFDdEQsbUJBQW1CLG1CQUFPLENBQUMsbUdBQW1CO0FBQzlDLGlCQUFpQixtQkFBTyxDQUFDLCtGQUFpQjtBQUMxQyxvQkFBb0IsbUJBQU8sQ0FBQyxxR0FBb0I7QUFDaEQsZUFBZSxtQkFBTyxDQUFDLDJGQUFlO0FBQ3RDLGVBQWUsbUJBQU8sQ0FBQywyRkFBZTtBQUN0QyxpQkFBaUIsbUJBQU8sQ0FBQywrRkFBaUI7QUFDMUMscUJBQXFCLG1CQUFPLENBQUMsdUdBQXFCO0FBQ2xELG9CQUFvQixtQkFBTyxDQUFDLHFHQUFvQjtBQUNoRCw4QkFBOEIsbUJBQU8sQ0FBQyx5SEFBOEI7QUFDcEUsY0FBYyxtQkFBTyxDQUFDLHlGQUFjO0FBQ3BDO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BldGhlcmV1bWpzL2NvbW1vbi9kaXN0LmJyb3dzZXIvaGFyZGZvcmtzL2luZGV4LmpzPzY3YTMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmhhcmRmb3JrcyA9IHZvaWQgMDtcbmV4cG9ydHMuaGFyZGZvcmtzID0gW1xuICAgIFsnY2hhaW5zdGFydCcsIHJlcXVpcmUoJy4vY2hhaW5zdGFydC5qc29uJyldLFxuICAgIFsnaG9tZXN0ZWFkJywgcmVxdWlyZSgnLi9ob21lc3RlYWQuanNvbicpXSxcbiAgICBbJ2RhbycsIHJlcXVpcmUoJy4vZGFvLmpzb24nKV0sXG4gICAgWyd0YW5nZXJpbmVXaGlzdGxlJywgcmVxdWlyZSgnLi90YW5nZXJpbmVXaGlzdGxlLmpzb24nKV0sXG4gICAgWydzcHVyaW91c0RyYWdvbicsIHJlcXVpcmUoJy4vc3B1cmlvdXNEcmFnb24uanNvbicpXSxcbiAgICBbJ2J5emFudGl1bScsIHJlcXVpcmUoJy4vYnl6YW50aXVtLmpzb24nKV0sXG4gICAgWydjb25zdGFudGlub3BsZScsIHJlcXVpcmUoJy4vY29uc3RhbnRpbm9wbGUuanNvbicpXSxcbiAgICBbJ3BldGVyc2J1cmcnLCByZXF1aXJlKCcuL3BldGVyc2J1cmcuanNvbicpXSxcbiAgICBbJ2lzdGFuYnVsJywgcmVxdWlyZSgnLi9pc3RhbmJ1bC5qc29uJyldLFxuICAgIFsnbXVpckdsYWNpZXInLCByZXF1aXJlKCcuL211aXJHbGFjaWVyLmpzb24nKV0sXG4gICAgWydiZXJsaW4nLCByZXF1aXJlKCcuL2Jlcmxpbi5qc29uJyldLFxuICAgIFsnbG9uZG9uJywgcmVxdWlyZSgnLi9sb25kb24uanNvbicpXSxcbiAgICBbJ3NoYW5naGFpJywgcmVxdWlyZSgnLi9zaGFuZ2hhaS5qc29uJyldLFxuICAgIFsnYXJyb3dHbGFjaWVyJywgcmVxdWlyZSgnLi9hcnJvd0dsYWNpZXIuanNvbicpXSxcbiAgICBbJ2dyYXlHbGFjaWVyJywgcmVxdWlyZSgnLi9ncmF5R2xhY2llci5qc29uJyldLFxuICAgIFsnbWVyZ2VGb3JrSWRUcmFuc2l0aW9uJywgcmVxdWlyZSgnLi9tZXJnZUZvcmtJZFRyYW5zaXRpb24uanNvbicpXSxcbiAgICBbJ21lcmdlJywgcmVxdWlyZSgnLi9tZXJnZS5qc29uJyldLFxuXTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@ethereumjs/common/dist.browser/hardforks/index.js\n");

/***/ }),

/***/ "./node_modules/@ethereumjs/common/dist.browser/index.js":
/*!***************************************************************!*\
  !*** ./node_modules/@ethereumjs/common/dist.browser/index.js ***!
  \***************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"./node_modules/buffer/index.js\")[\"Buffer\"];\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ConsensusAlgorithm = exports.ConsensusType = exports.Hardfork = exports.Chain = exports.CustomChain = void 0;\nvar events_1 = __webpack_require__(/*! events */ \"./node_modules/events/events.js\");\nvar crc_32_1 = __webpack_require__(/*! crc-32 */ \"./node_modules/crc-32/crc32.js\");\nvar ethereumjs_util_1 = __webpack_require__(/*! ethereumjs-util */ \"./node_modules/@ethereumjs/common/node_modules/ethereumjs-util/dist.browser/index.js\");\nvar chains_1 = __webpack_require__(/*! ./chains */ \"./node_modules/@ethereumjs/common/dist.browser/chains/index.js\");\nvar hardforks_1 = __webpack_require__(/*! ./hardforks */ \"./node_modules/@ethereumjs/common/dist.browser/hardforks/index.js\");\nvar eips_1 = __webpack_require__(/*! ./eips */ \"./node_modules/@ethereumjs/common/dist.browser/eips/index.js\");\nvar CustomChain;\n(function (CustomChain) {\n    /**\n     * Polygon (Matic) Mainnet\n     *\n     * - [Documentation](https://docs.matic.network/docs/develop/network-details/network)\n     */\n    CustomChain[\"PolygonMainnet\"] = \"polygon-mainnet\";\n    /**\n     * Polygon (Matic) Mumbai Testnet\n     *\n     * - [Documentation](https://docs.matic.network/docs/develop/network-details/network)\n     */\n    CustomChain[\"PolygonMumbai\"] = \"polygon-mumbai\";\n    /**\n     * Arbitrum Rinkeby Testnet\n     *\n     * - [Documentation](https://developer.offchainlabs.com/docs/public_testnet)\n     */\n    CustomChain[\"ArbitrumRinkebyTestnet\"] = \"arbitrum-rinkeby-testnet\";\n    /**\n     * xDai EVM sidechain with a native stable token\n     *\n     * - [Documentation](https://www.xdaichain.com/)\n     */\n    CustomChain[\"xDaiChain\"] = \"x-dai-chain\";\n    /**\n     * Optimistic Kovan - testnet for Optimism roll-up\n     *\n     * - [Documentation](https://community.optimism.io/docs/developers/tutorials.html)\n     */\n    CustomChain[\"OptimisticKovan\"] = \"optimistic-kovan\";\n    /**\n     * Optimistic Ethereum - mainnet for Optimism roll-up\n     *\n     * - [Documentation](https://community.optimism.io/docs/developers/tutorials.html)\n     */\n    CustomChain[\"OptimisticEthereum\"] = \"optimistic-ethereum\";\n})(CustomChain = exports.CustomChain || (exports.CustomChain = {}));\nvar Chain;\n(function (Chain) {\n    Chain[Chain[\"Mainnet\"] = 1] = \"Mainnet\";\n    Chain[Chain[\"Ropsten\"] = 3] = \"Ropsten\";\n    Chain[Chain[\"Rinkeby\"] = 4] = \"Rinkeby\";\n    Chain[Chain[\"Kovan\"] = 42] = \"Kovan\";\n    Chain[Chain[\"Goerli\"] = 5] = \"Goerli\";\n    Chain[Chain[\"Sepolia\"] = 11155111] = \"Sepolia\";\n})(Chain = exports.Chain || (exports.Chain = {}));\nvar Hardfork;\n(function (Hardfork) {\n    Hardfork[\"Chainstart\"] = \"chainstart\";\n    Hardfork[\"Homestead\"] = \"homestead\";\n    Hardfork[\"Dao\"] = \"dao\";\n    Hardfork[\"TangerineWhistle\"] = \"tangerineWhistle\";\n    Hardfork[\"SpuriousDragon\"] = \"spuriousDragon\";\n    Hardfork[\"Byzantium\"] = \"byzantium\";\n    Hardfork[\"Constantinople\"] = \"constantinople\";\n    Hardfork[\"Petersburg\"] = \"petersburg\";\n    Hardfork[\"Istanbul\"] = \"istanbul\";\n    Hardfork[\"MuirGlacier\"] = \"muirGlacier\";\n    Hardfork[\"Berlin\"] = \"berlin\";\n    Hardfork[\"London\"] = \"london\";\n    Hardfork[\"ArrowGlacier\"] = \"arrowGlacier\";\n    Hardfork[\"GrayGlacier\"] = \"grayGlacier\";\n    Hardfork[\"MergeForkIdTransition\"] = \"mergeForkIdTransition\";\n    Hardfork[\"Merge\"] = \"merge\";\n    Hardfork[\"Shanghai\"] = \"shanghai\";\n})(Hardfork = exports.Hardfork || (exports.Hardfork = {}));\nvar ConsensusType;\n(function (ConsensusType) {\n    ConsensusType[\"ProofOfStake\"] = \"pos\";\n    ConsensusType[\"ProofOfWork\"] = \"pow\";\n    ConsensusType[\"ProofOfAuthority\"] = \"poa\";\n})(ConsensusType = exports.ConsensusType || (exports.ConsensusType = {}));\nvar ConsensusAlgorithm;\n(function (ConsensusAlgorithm) {\n    ConsensusAlgorithm[\"Ethash\"] = \"ethash\";\n    ConsensusAlgorithm[\"Clique\"] = \"clique\";\n    ConsensusAlgorithm[\"Casper\"] = \"casper\";\n})(ConsensusAlgorithm = exports.ConsensusAlgorithm || (exports.ConsensusAlgorithm = {}));\n/**\n * Common class to access chain and hardfork parameters and to provide\n * a unified and shared view on the network and hardfork state.\n *\n * Use the {@link Common.custom} static constructor for creating simple\n * custom chain {@link Common} objects (more complete custom chain setups\n * can be created via the main constructor and the {@link CommonOpts.customChains} parameter).\n */\nvar Common = /** @class */ (function (_super) {\n    __extends(Common, _super);\n    /**\n     *\n     * @constructor\n     */\n    function Common(opts) {\n        var e_1, _a;\n        var _this = this;\n        var _b, _c;\n        _this = _super.call(this) || this;\n        _this._supportedHardforks = [];\n        _this._eips = [];\n        _this._customChains = (_b = opts.customChains) !== null && _b !== void 0 ? _b : [];\n        _this._chainParams = _this.setChain(opts.chain);\n        _this.DEFAULT_HARDFORK = (_c = _this._chainParams.defaultHardfork) !== null && _c !== void 0 ? _c : Hardfork.Istanbul;\n        try {\n            for (var _d = __values(_this._chainParams.hardforks), _e = _d.next(); !_e.done; _e = _d.next()) {\n                var hf = _e.value;\n                if (!hf.forkHash) {\n                    hf.forkHash = _this._calcForkHash(hf.name);\n                }\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_e && !_e.done && (_a = _d.return)) _a.call(_d);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        _this._hardfork = _this.DEFAULT_HARDFORK;\n        if (opts.supportedHardforks) {\n            _this._supportedHardforks = opts.supportedHardforks;\n        }\n        if (opts.hardfork) {\n            _this.setHardfork(opts.hardfork);\n        }\n        if (opts.eips) {\n            _this.setEIPs(opts.eips);\n        }\n        return _this;\n    }\n    /**\n     * Creates a {@link Common} object for a custom chain, based on a standard one.\n     *\n     * It uses all the {@link Chain} parameters from the {@link baseChain} option except the ones overridden\n     * in a provided {@link chainParamsOrName} dictionary. Some usage example:\n     *\n     * ```javascript\n     * Common.custom({chainId: 123})\n     * ```\n     *\n     * There are also selected supported custom chains which can be initialized by using one of the\n     * {@link CustomChains} for {@link chainParamsOrName}, e.g.:\n     *\n     * ```javascript\n     * Common.custom(CustomChains.MaticMumbai)\n     * ```\n     *\n     * Note that these supported custom chains only provide some base parameters (usually the chain and\n     * network ID and a name) and can only be used for selected use cases (e.g. sending a tx with\n     * the `@ethereumjs/tx` library to a Layer-2 chain).\n     *\n     * @param chainParamsOrName Custom parameter dict (`name` will default to `custom-chain`) or string with name of a supported custom chain\n     * @param opts Custom chain options to set the {@link CustomCommonOpts.baseChain}, selected {@link CustomCommonOpts.hardfork} and others\n     */\n    Common.custom = function (chainParamsOrName, opts) {\n        var _a;\n        if (opts === void 0) { opts = {}; }\n        var baseChain = (_a = opts.baseChain) !== null && _a !== void 0 ? _a : 'mainnet';\n        var standardChainParams = __assign({}, Common._getChainParams(baseChain));\n        standardChainParams['name'] = 'custom-chain';\n        if (typeof chainParamsOrName !== 'string') {\n            return new Common(__assign({ chain: __assign(__assign({}, standardChainParams), chainParamsOrName) }, opts));\n        }\n        else {\n            if (chainParamsOrName === CustomChain.PolygonMainnet) {\n                return Common.custom({\n                    name: CustomChain.PolygonMainnet,\n                    chainId: 137,\n                    networkId: 137,\n                }, opts);\n            }\n            if (chainParamsOrName === CustomChain.PolygonMumbai) {\n                return Common.custom({\n                    name: CustomChain.PolygonMumbai,\n                    chainId: 80001,\n                    networkId: 80001,\n                }, opts);\n            }\n            if (chainParamsOrName === CustomChain.ArbitrumRinkebyTestnet) {\n                return Common.custom({\n                    name: CustomChain.ArbitrumRinkebyTestnet,\n                    chainId: 421611,\n                    networkId: 421611,\n                }, opts);\n            }\n            if (chainParamsOrName === CustomChain.xDaiChain) {\n                return Common.custom({\n                    name: CustomChain.xDaiChain,\n                    chainId: 100,\n                    networkId: 100,\n                }, opts);\n            }\n            if (chainParamsOrName === CustomChain.OptimisticKovan) {\n                return Common.custom({\n                    name: CustomChain.OptimisticKovan,\n                    chainId: 69,\n                    networkId: 69,\n                }, __assign({ hardfork: Hardfork.Berlin }, opts));\n            }\n            if (chainParamsOrName === CustomChain.OptimisticEthereum) {\n                return Common.custom({\n                    name: CustomChain.OptimisticEthereum,\n                    chainId: 10,\n                    networkId: 10,\n                }, __assign({ hardfork: Hardfork.Berlin }, opts));\n            }\n            throw new Error(\"Custom chain \".concat(chainParamsOrName, \" not supported\"));\n        }\n    };\n    /**\n     * Creates a {@link Common} object for a custom chain, based on a standard one. It uses all the `Chain`\n     * params from {@link baseChain} except the ones overridden in {@link customChainParams}.\n     *\n     * @deprecated Use {@link Common.custom} instead\n     *\n     * @param baseChain The name (`mainnet`) or id (`1`) of a standard chain used to base the custom\n     * chain params on.\n     * @param customChainParams The custom parameters of the chain.\n     * @param hardfork String identifier ('byzantium') for hardfork (optional)\n     * @param supportedHardforks Limit parameter returns to the given hardforks (optional)\n     */\n    Common.forCustomChain = function (baseChain, customChainParams, hardfork, supportedHardforks) {\n        var standardChainParams = Common._getChainParams(baseChain);\n        return new Common({\n            chain: __assign(__assign({}, standardChainParams), customChainParams),\n            hardfork: hardfork,\n            supportedHardforks: supportedHardforks,\n        });\n    };\n    /**\n     * Static method to determine if a {@link chainId} is supported as a standard chain\n     * @param chainId BN id (`1`) of a standard chain\n     * @returns boolean\n     */\n    Common.isSupportedChainId = function (chainId) {\n        var initializedChains = (0, chains_1._getInitializedChains)();\n        return Boolean(initializedChains['names'][chainId.toString()]);\n    };\n    Common._getChainParams = function (chain, customChains) {\n        var initializedChains = (0, chains_1._getInitializedChains)(customChains);\n        if (typeof chain === 'number' || ethereumjs_util_1.BN.isBN(chain)) {\n            chain = chain.toString();\n            if (initializedChains['names'][chain]) {\n                var name_1 = initializedChains['names'][chain];\n                return initializedChains[name_1];\n            }\n            throw new Error(\"Chain with ID \".concat(chain, \" not supported\"));\n        }\n        if (initializedChains[chain]) {\n            return initializedChains[chain];\n        }\n        throw new Error(\"Chain with name \".concat(chain, \" not supported\"));\n    };\n    /**\n     * Sets the chain\n     * @param chain String ('mainnet') or Number (1) chain\n     *     representation. Or, a Dictionary of chain parameters for a private network.\n     * @returns The dictionary with parameters set as chain\n     */\n    Common.prototype.setChain = function (chain) {\n        var e_2, _a;\n        if (typeof chain === 'number' || typeof chain === 'string' || ethereumjs_util_1.BN.isBN(chain)) {\n            // Filter out genesis states if passed in to customChains\n            var plainCustomChains = void 0;\n            if (this._customChains &&\n                this._customChains.length > 0 &&\n                Array.isArray(this._customChains[0])) {\n                plainCustomChains = this._customChains.map(function (e) { return e[0]; });\n            }\n            else {\n                plainCustomChains = this._customChains;\n            }\n            this._chainParams = Common._getChainParams(chain, plainCustomChains);\n        }\n        else if (typeof chain === 'object') {\n            if (this._customChains.length > 0) {\n                throw new Error('Chain must be a string, number, or BN when initialized with customChains passed in');\n            }\n            var required = ['networkId', 'genesis', 'hardforks', 'bootstrapNodes'];\n            try {\n                for (var required_1 = __values(required), required_1_1 = required_1.next(); !required_1_1.done; required_1_1 = required_1.next()) {\n                    var param = required_1_1.value;\n                    if (chain[param] === undefined) {\n                        throw new Error(\"Missing required chain parameter: \".concat(param));\n                    }\n                }\n            }\n            catch (e_2_1) { e_2 = { error: e_2_1 }; }\n            finally {\n                try {\n                    if (required_1_1 && !required_1_1.done && (_a = required_1.return)) _a.call(required_1);\n                }\n                finally { if (e_2) throw e_2.error; }\n            }\n            this._chainParams = chain;\n        }\n        else {\n            throw new Error('Wrong input format');\n        }\n        return this._chainParams;\n    };\n    /**\n     * Sets the hardfork to get params for\n     * @param hardfork String identifier (e.g. 'byzantium') or {@link Hardfork} enum\n     */\n    Common.prototype.setHardfork = function (hardfork) {\n        var e_3, _a;\n        if (!this._isSupportedHardfork(hardfork)) {\n            throw new Error(\"Hardfork \".concat(hardfork, \" not set as supported in supportedHardforks\"));\n        }\n        var existing = false;\n        try {\n            for (var HARDFORK_CHANGES_1 = __values(hardforks_1.hardforks), HARDFORK_CHANGES_1_1 = HARDFORK_CHANGES_1.next(); !HARDFORK_CHANGES_1_1.done; HARDFORK_CHANGES_1_1 = HARDFORK_CHANGES_1.next()) {\n                var hfChanges = HARDFORK_CHANGES_1_1.value;\n                if (hfChanges[0] === hardfork) {\n                    if (this._hardfork !== hardfork) {\n                        this._hardfork = hardfork;\n                        this.emit('hardforkChanged', hardfork);\n                    }\n                    existing = true;\n                }\n            }\n        }\n        catch (e_3_1) { e_3 = { error: e_3_1 }; }\n        finally {\n            try {\n                if (HARDFORK_CHANGES_1_1 && !HARDFORK_CHANGES_1_1.done && (_a = HARDFORK_CHANGES_1.return)) _a.call(HARDFORK_CHANGES_1);\n            }\n            finally { if (e_3) throw e_3.error; }\n        }\n        if (!existing) {\n            throw new Error(\"Hardfork with name \".concat(hardfork, \" not supported\"));\n        }\n    };\n    /**\n     * Returns the hardfork based on the block number or an optional\n     * total difficulty (Merge HF) provided.\n     *\n     * An optional TD takes precedence in case the corresponding HF block\n     * is set to `null` or otherwise needs to match (if not an error\n     * will be thrown).\n     *\n     * @param blockNumber\n     * @param td\n     * @returns The name of the HF\n     */\n    Common.prototype.getHardforkByBlockNumber = function (blockNumber, td) {\n        var e_4, _a;\n        blockNumber = (0, ethereumjs_util_1.toType)(blockNumber, ethereumjs_util_1.TypeOutput.BN);\n        td = (0, ethereumjs_util_1.toType)(td, ethereumjs_util_1.TypeOutput.BN);\n        var hardfork = Hardfork.Chainstart;\n        var minTdHF;\n        var maxTdHF;\n        var previousHF;\n        try {\n            for (var _b = __values(this.hardforks()), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var hf = _c.value;\n                // Skip comparison for not applied HFs\n                if (hf.block === null) {\n                    if (td !== undefined && td !== null && hf.td !== undefined && hf.td !== null) {\n                        if (td.gte(new ethereumjs_util_1.BN(hf.td))) {\n                            return hf.name;\n                        }\n                    }\n                    continue;\n                }\n                if (blockNumber.gte(new ethereumjs_util_1.BN(hf.block))) {\n                    hardfork = hf.name;\n                }\n                if (td && hf.td) {\n                    if (td.gte(new ethereumjs_util_1.BN(hf.td))) {\n                        minTdHF = hf.name;\n                    }\n                    else {\n                        maxTdHF = previousHF;\n                    }\n                }\n                previousHF = hf.name;\n            }\n        }\n        catch (e_4_1) { e_4 = { error: e_4_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_4) throw e_4.error; }\n        }\n        if (td) {\n            var msgAdd = \"block number: \".concat(blockNumber, \" (-> \").concat(hardfork, \"), \");\n            if (minTdHF) {\n                if (!this.hardforkGteHardfork(hardfork, minTdHF)) {\n                    var msg = 'HF determined by block number is lower than the minimum total difficulty HF';\n                    msgAdd += \"total difficulty: \".concat(td, \" (-> \").concat(minTdHF, \")\");\n                    throw new Error(\"\".concat(msg, \": \").concat(msgAdd));\n                }\n            }\n            if (maxTdHF) {\n                if (!this.hardforkGteHardfork(maxTdHF, hardfork)) {\n                    var msg = 'Maximum HF determined by total difficulty is lower than the block number HF';\n                    msgAdd += \"total difficulty: \".concat(td, \" (-> \").concat(maxTdHF, \")\");\n                    throw new Error(\"\".concat(msg, \": \").concat(msgAdd));\n                }\n            }\n        }\n        return hardfork;\n    };\n    /**\n     * Sets a new hardfork based on the block number or an optional\n     * total difficulty (Merge HF) provided.\n     *\n     * An optional TD takes precedence in case the corresponding HF block\n     * is set to `null` or otherwise needs to match (if not an error\n     * will be thrown).\n     *\n     * @param blockNumber\n     * @param td\n     * @returns The name of the HF set\n     */\n    Common.prototype.setHardforkByBlockNumber = function (blockNumber, td) {\n        var hardfork = this.getHardforkByBlockNumber(blockNumber, td);\n        this.setHardfork(hardfork);\n        return hardfork;\n    };\n    /**\n     * Internal helper function to choose between hardfork set and hardfork provided as param\n     * @param hardfork Hardfork given to function as a parameter\n     * @returns Hardfork chosen to be used\n     */\n    Common.prototype._chooseHardfork = function (hardfork, onlySupported) {\n        if (onlySupported === void 0) { onlySupported = true; }\n        if (!hardfork) {\n            hardfork = this._hardfork;\n        }\n        else if (onlySupported && !this._isSupportedHardfork(hardfork)) {\n            throw new Error(\"Hardfork \".concat(hardfork, \" not set as supported in supportedHardforks\"));\n        }\n        return hardfork;\n    };\n    /**\n     * Internal helper function, returns the params for the given hardfork for the chain set\n     * @param hardfork Hardfork name\n     * @returns Dictionary with hardfork params\n     */\n    Common.prototype._getHardfork = function (hardfork) {\n        var e_5, _a;\n        var hfs = this.hardforks();\n        try {\n            for (var hfs_1 = __values(hfs), hfs_1_1 = hfs_1.next(); !hfs_1_1.done; hfs_1_1 = hfs_1.next()) {\n                var hf = hfs_1_1.value;\n                if (hf['name'] === hardfork)\n                    return hf;\n            }\n        }\n        catch (e_5_1) { e_5 = { error: e_5_1 }; }\n        finally {\n            try {\n                if (hfs_1_1 && !hfs_1_1.done && (_a = hfs_1.return)) _a.call(hfs_1);\n            }\n            finally { if (e_5) throw e_5.error; }\n        }\n        throw new Error(\"Hardfork \".concat(hardfork, \" not defined for chain \").concat(this.chainName()));\n    };\n    /**\n     * Internal helper function to check if a hardfork is set to be supported by the library\n     * @param hardfork Hardfork name\n     * @returns True if hardfork is supported\n     */\n    Common.prototype._isSupportedHardfork = function (hardfork) {\n        var e_6, _a;\n        if (this._supportedHardforks.length > 0) {\n            try {\n                for (var _b = __values(this._supportedHardforks), _c = _b.next(); !_c.done; _c = _b.next()) {\n                    var supportedHf = _c.value;\n                    if (hardfork === supportedHf)\n                        return true;\n                }\n            }\n            catch (e_6_1) { e_6 = { error: e_6_1 }; }\n            finally {\n                try {\n                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n                }\n                finally { if (e_6) throw e_6.error; }\n            }\n        }\n        else {\n            return true;\n        }\n        return false;\n    };\n    /**\n     * Sets the active EIPs\n     * @param eips\n     */\n    Common.prototype.setEIPs = function (eips) {\n        var e_7, _a;\n        var _this = this;\n        if (eips === void 0) { eips = []; }\n        var _loop_1 = function (eip) {\n            if (!(eip in eips_1.EIPs)) {\n                throw new Error(\"\".concat(eip, \" not supported\"));\n            }\n            var minHF = this_1.gteHardfork(eips_1.EIPs[eip]['minimumHardfork']);\n            if (!minHF) {\n                throw new Error(\"\".concat(eip, \" cannot be activated on hardfork \").concat(this_1.hardfork(), \", minimumHardfork: \").concat(minHF));\n            }\n            if (eips_1.EIPs[eip].requiredEIPs) {\n                ;\n                eips_1.EIPs[eip].requiredEIPs.forEach(function (elem) {\n                    if (!(eips.includes(elem) || _this.isActivatedEIP(elem))) {\n                        throw new Error(\"\".concat(eip, \" requires EIP \").concat(elem, \", but is not included in the EIP list\"));\n                    }\n                });\n            }\n        };\n        var this_1 = this;\n        try {\n            for (var eips_2 = __values(eips), eips_2_1 = eips_2.next(); !eips_2_1.done; eips_2_1 = eips_2.next()) {\n                var eip = eips_2_1.value;\n                _loop_1(eip);\n            }\n        }\n        catch (e_7_1) { e_7 = { error: e_7_1 }; }\n        finally {\n            try {\n                if (eips_2_1 && !eips_2_1.done && (_a = eips_2.return)) _a.call(eips_2);\n            }\n            finally { if (e_7) throw e_7.error; }\n        }\n        this._eips = eips;\n    };\n    /**\n     * Returns a parameter for the current chain setup\n     *\n     * If the parameter is present in an EIP, the EIP always takes precendence.\n     * Otherwise the parameter if taken from the latest applied HF with\n     * a change on the respective parameter.\n     *\n     * @param topic Parameter topic ('gasConfig', 'gasPrices', 'vm', 'pow')\n     * @param name Parameter name (e.g. 'minGasLimit' for 'gasConfig' topic)\n     * @returns The value requested or `null` if not found\n     */\n    Common.prototype.param = function (topic, name) {\n        var e_8, _a;\n        // TODO: consider the case that different active EIPs\n        // can change the same parameter\n        var value = null;\n        try {\n            for (var _b = __values(this._eips), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var eip = _c.value;\n                value = this.paramByEIP(topic, name, eip);\n                if (value !== null) {\n                    return value;\n                }\n            }\n        }\n        catch (e_8_1) { e_8 = { error: e_8_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_8) throw e_8.error; }\n        }\n        return this.paramByHardfork(topic, name, this._hardfork);\n    };\n    /**\n     * Returns the parameter corresponding to a hardfork\n     * @param topic Parameter topic ('gasConfig', 'gasPrices', 'vm', 'pow')\n     * @param name Parameter name (e.g. 'minGasLimit' for 'gasConfig' topic)\n     * @param hardfork Hardfork name\n     * @returns The value requested or `null` if not found\n     */\n    Common.prototype.paramByHardfork = function (topic, name, hardfork) {\n        var e_9, _a, e_10, _b;\n        hardfork = this._chooseHardfork(hardfork);\n        var value = null;\n        try {\n            for (var HARDFORK_CHANGES_2 = __values(hardforks_1.hardforks), HARDFORK_CHANGES_2_1 = HARDFORK_CHANGES_2.next(); !HARDFORK_CHANGES_2_1.done; HARDFORK_CHANGES_2_1 = HARDFORK_CHANGES_2.next()) {\n                var hfChanges = HARDFORK_CHANGES_2_1.value;\n                // EIP-referencing HF file (e.g. berlin.json)\n                if ('eips' in hfChanges[1]) {\n                    var hfEIPs = hfChanges[1]['eips'];\n                    try {\n                        for (var hfEIPs_1 = (e_10 = void 0, __values(hfEIPs)), hfEIPs_1_1 = hfEIPs_1.next(); !hfEIPs_1_1.done; hfEIPs_1_1 = hfEIPs_1.next()) {\n                            var eip = hfEIPs_1_1.value;\n                            var valueEIP = this.paramByEIP(topic, name, eip);\n                            value = valueEIP !== null ? valueEIP : value;\n                        }\n                    }\n                    catch (e_10_1) { e_10 = { error: e_10_1 }; }\n                    finally {\n                        try {\n                            if (hfEIPs_1_1 && !hfEIPs_1_1.done && (_b = hfEIPs_1.return)) _b.call(hfEIPs_1);\n                        }\n                        finally { if (e_10) throw e_10.error; }\n                    }\n                    // Paramater-inlining HF file (e.g. istanbul.json)\n                }\n                else {\n                    if (!hfChanges[1][topic]) {\n                        throw new Error(\"Topic \".concat(topic, \" not defined\"));\n                    }\n                    if (hfChanges[1][topic][name] !== undefined) {\n                        value = hfChanges[1][topic][name].v;\n                    }\n                }\n                if (hfChanges[0] === hardfork)\n                    break;\n            }\n        }\n        catch (e_9_1) { e_9 = { error: e_9_1 }; }\n        finally {\n            try {\n                if (HARDFORK_CHANGES_2_1 && !HARDFORK_CHANGES_2_1.done && (_a = HARDFORK_CHANGES_2.return)) _a.call(HARDFORK_CHANGES_2);\n            }\n            finally { if (e_9) throw e_9.error; }\n        }\n        return value;\n    };\n    /**\n     * Returns a parameter corresponding to an EIP\n     * @param topic Parameter topic ('gasConfig', 'gasPrices', 'vm', 'pow')\n     * @param name Parameter name (e.g. 'minGasLimit' for 'gasConfig' topic)\n     * @param eip Number of the EIP\n     * @returns The value requested or `null` if not found\n     */\n    Common.prototype.paramByEIP = function (topic, name, eip) {\n        if (!(eip in eips_1.EIPs)) {\n            throw new Error(\"\".concat(eip, \" not supported\"));\n        }\n        var eipParams = eips_1.EIPs[eip];\n        if (!(topic in eipParams)) {\n            throw new Error(\"Topic \".concat(topic, \" not defined\"));\n        }\n        if (eipParams[topic][name] === undefined) {\n            return null;\n        }\n        var value = eipParams[topic][name].v;\n        return value;\n    };\n    /**\n     * Returns a parameter for the hardfork active on block number\n     * @param topic Parameter topic\n     * @param name Parameter name\n     * @param blockNumber Block number\n     */\n    Common.prototype.paramByBlock = function (topic, name, blockNumber) {\n        var activeHfs = this.activeHardforks(blockNumber);\n        var hardfork = activeHfs[activeHfs.length - 1]['name'];\n        return this.paramByHardfork(topic, name, hardfork);\n    };\n    /**\n     * Checks if an EIP is activated by either being included in the EIPs\n     * manually passed in with the {@link CommonOpts.eips} or in a\n     * hardfork currently being active\n     *\n     * Note: this method only works for EIPs being supported\n     * by the {@link CommonOpts.eips} constructor option\n     * @param eip\n     */\n    Common.prototype.isActivatedEIP = function (eip) {\n        var e_11, _a;\n        if (this.eips().includes(eip)) {\n            return true;\n        }\n        try {\n            for (var HARDFORK_CHANGES_3 = __values(hardforks_1.hardforks), HARDFORK_CHANGES_3_1 = HARDFORK_CHANGES_3.next(); !HARDFORK_CHANGES_3_1.done; HARDFORK_CHANGES_3_1 = HARDFORK_CHANGES_3.next()) {\n                var hfChanges = HARDFORK_CHANGES_3_1.value;\n                var hf = hfChanges[1];\n                if (this.gteHardfork(hf['name']) && 'eips' in hf) {\n                    if (hf['eips'].includes(eip)) {\n                        return true;\n                    }\n                }\n            }\n        }\n        catch (e_11_1) { e_11 = { error: e_11_1 }; }\n        finally {\n            try {\n                if (HARDFORK_CHANGES_3_1 && !HARDFORK_CHANGES_3_1.done && (_a = HARDFORK_CHANGES_3.return)) _a.call(HARDFORK_CHANGES_3);\n            }\n            finally { if (e_11) throw e_11.error; }\n        }\n        return false;\n    };\n    /**\n     * Checks if set or provided hardfork is active on block number\n     * @param hardfork Hardfork name or null (for HF set)\n     * @param blockNumber\n     * @param opts Hardfork options (onlyActive unused)\n     * @returns True if HF is active on block number\n     */\n    Common.prototype.hardforkIsActiveOnBlock = function (hardfork, blockNumber, opts) {\n        var _a;\n        if (opts === void 0) { opts = {}; }\n        blockNumber = (0, ethereumjs_util_1.toType)(blockNumber, ethereumjs_util_1.TypeOutput.BN);\n        var onlySupported = (_a = opts.onlySupported) !== null && _a !== void 0 ? _a : false;\n        hardfork = this._chooseHardfork(hardfork, onlySupported);\n        var hfBlock = this.hardforkBlockBN(hardfork);\n        if (hfBlock && blockNumber.gte(hfBlock)) {\n            return true;\n        }\n        return false;\n    };\n    /**\n     * Alias to hardforkIsActiveOnBlock when hardfork is set\n     * @param blockNumber\n     * @param opts Hardfork options (onlyActive unused)\n     * @returns True if HF is active on block number\n     */\n    Common.prototype.activeOnBlock = function (blockNumber, opts) {\n        return this.hardforkIsActiveOnBlock(null, blockNumber, opts);\n    };\n    /**\n     * Sequence based check if given or set HF1 is greater than or equal HF2\n     * @param hardfork1 Hardfork name or null (if set)\n     * @param hardfork2 Hardfork name\n     * @param opts Hardfork options\n     * @returns True if HF1 gte HF2\n     */\n    Common.prototype.hardforkGteHardfork = function (hardfork1, hardfork2, opts) {\n        var e_12, _a;\n        if (opts === void 0) { opts = {}; }\n        var onlyActive = opts.onlyActive === undefined ? false : opts.onlyActive;\n        hardfork1 = this._chooseHardfork(hardfork1, opts.onlySupported);\n        var hardforks;\n        if (onlyActive) {\n            hardforks = this.activeHardforks(null, opts);\n        }\n        else {\n            hardforks = this.hardforks();\n        }\n        var posHf1 = -1, posHf2 = -1;\n        var index = 0;\n        try {\n            for (var hardforks_2 = __values(hardforks), hardforks_2_1 = hardforks_2.next(); !hardforks_2_1.done; hardforks_2_1 = hardforks_2.next()) {\n                var hf = hardforks_2_1.value;\n                if (hf['name'] === hardfork1)\n                    posHf1 = index;\n                if (hf['name'] === hardfork2)\n                    posHf2 = index;\n                index += 1;\n            }\n        }\n        catch (e_12_1) { e_12 = { error: e_12_1 }; }\n        finally {\n            try {\n                if (hardforks_2_1 && !hardforks_2_1.done && (_a = hardforks_2.return)) _a.call(hardforks_2);\n            }\n            finally { if (e_12) throw e_12.error; }\n        }\n        return posHf1 >= posHf2 && posHf2 !== -1;\n    };\n    /**\n     * Alias to hardforkGteHardfork when hardfork is set\n     * @param hardfork Hardfork name\n     * @param opts Hardfork options\n     * @returns True if hardfork set is greater than hardfork provided\n     */\n    Common.prototype.gteHardfork = function (hardfork, opts) {\n        return this.hardforkGteHardfork(null, hardfork, opts);\n    };\n    /**\n     * Checks if given or set hardfork is active on the chain\n     * @param hardfork Hardfork name, optional if HF set\n     * @param opts Hardfork options (onlyActive unused)\n     * @returns True if hardfork is active on the chain\n     */\n    Common.prototype.hardforkIsActiveOnChain = function (hardfork, opts) {\n        var e_13, _a;\n        var _b;\n        if (opts === void 0) { opts = {}; }\n        var onlySupported = (_b = opts.onlySupported) !== null && _b !== void 0 ? _b : false;\n        hardfork = this._chooseHardfork(hardfork, onlySupported);\n        try {\n            for (var _c = __values(this.hardforks()), _d = _c.next(); !_d.done; _d = _c.next()) {\n                var hf = _d.value;\n                if (hf['name'] === hardfork && hf['block'] !== null)\n                    return true;\n            }\n        }\n        catch (e_13_1) { e_13 = { error: e_13_1 }; }\n        finally {\n            try {\n                if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n            }\n            finally { if (e_13) throw e_13.error; }\n        }\n        return false;\n    };\n    /**\n     * Returns the active hardfork switches for the current chain\n     * @param blockNumber up to block if provided, otherwise for the whole chain\n     * @param opts Hardfork options (onlyActive unused)\n     * @return Array with hardfork arrays\n     */\n    Common.prototype.activeHardforks = function (blockNumber, opts) {\n        var e_14, _a;\n        if (opts === void 0) { opts = {}; }\n        var activeHardforks = [];\n        var hfs = this.hardforks();\n        try {\n            for (var hfs_2 = __values(hfs), hfs_2_1 = hfs_2.next(); !hfs_2_1.done; hfs_2_1 = hfs_2.next()) {\n                var hf = hfs_2_1.value;\n                if (hf['block'] === null)\n                    continue;\n                if (blockNumber !== undefined && blockNumber !== null && blockNumber < hf['block'])\n                    break;\n                if (opts.onlySupported && !this._isSupportedHardfork(hf['name']))\n                    continue;\n                activeHardforks.push(hf);\n            }\n        }\n        catch (e_14_1) { e_14 = { error: e_14_1 }; }\n        finally {\n            try {\n                if (hfs_2_1 && !hfs_2_1.done && (_a = hfs_2.return)) _a.call(hfs_2);\n            }\n            finally { if (e_14) throw e_14.error; }\n        }\n        return activeHardforks;\n    };\n    /**\n     * Returns the latest active hardfork name for chain or block or throws if unavailable\n     * @param blockNumber up to block if provided, otherwise for the whole chain\n     * @param opts Hardfork options (onlyActive unused)\n     * @return Hardfork name\n     */\n    Common.prototype.activeHardfork = function (blockNumber, opts) {\n        if (opts === void 0) { opts = {}; }\n        var activeHardforks = this.activeHardforks(blockNumber, opts);\n        if (activeHardforks.length > 0) {\n            return activeHardforks[activeHardforks.length - 1]['name'];\n        }\n        else {\n            throw new Error(\"No (supported) active hardfork found\");\n        }\n    };\n    /**\n     * Returns the hardfork change block for hardfork provided or set\n     * @param hardfork Hardfork name, optional if HF set\n     * @returns Block number or null if unscheduled\n     * @deprecated Please use {@link Common.hardforkBlockBN} for large number support\n     */\n    Common.prototype.hardforkBlock = function (hardfork) {\n        var block = this.hardforkBlockBN(hardfork);\n        return (0, ethereumjs_util_1.toType)(block, ethereumjs_util_1.TypeOutput.Number);\n    };\n    /**\n     * Returns the hardfork change block for hardfork provided or set\n     * @param hardfork Hardfork name, optional if HF set\n     * @returns Block number or null if unscheduled\n     */\n    Common.prototype.hardforkBlockBN = function (hardfork) {\n        hardfork = this._chooseHardfork(hardfork, false);\n        var block = this._getHardfork(hardfork)['block'];\n        if (block === undefined || block === null) {\n            return null;\n        }\n        return new ethereumjs_util_1.BN(block);\n    };\n    /**\n     * Returns the hardfork change total difficulty (Merge HF) for hardfork provided or set\n     * @param hardfork Hardfork name, optional if HF set\n     * @returns Total difficulty or null if no set\n     */\n    Common.prototype.hardforkTD = function (hardfork) {\n        hardfork = this._chooseHardfork(hardfork, false);\n        var td = this._getHardfork(hardfork)['td'];\n        if (td === undefined || td === null) {\n            return null;\n        }\n        return new ethereumjs_util_1.BN(td);\n    };\n    /**\n     * True if block number provided is the hardfork (given or set) change block\n     * @param blockNumber Number of the block to check\n     * @param hardfork Hardfork name, optional if HF set\n     * @returns True if blockNumber is HF block\n     */\n    Common.prototype.isHardforkBlock = function (blockNumber, hardfork) {\n        blockNumber = (0, ethereumjs_util_1.toType)(blockNumber, ethereumjs_util_1.TypeOutput.BN);\n        hardfork = this._chooseHardfork(hardfork, false);\n        var block = this.hardforkBlockBN(hardfork);\n        return block ? block.eq(blockNumber) : false;\n    };\n    /**\n     * Returns the change block for the next hardfork after the hardfork provided or set\n     * @param hardfork Hardfork name, optional if HF set\n     * @returns Block number or null if not available\n     * @deprecated Please use {@link Common.nextHardforkBlockBN} for large number support\n     */\n    Common.prototype.nextHardforkBlock = function (hardfork) {\n        var block = this.nextHardforkBlockBN(hardfork);\n        return (0, ethereumjs_util_1.toType)(block, ethereumjs_util_1.TypeOutput.Number);\n    };\n    /**\n     * Returns the change block for the next hardfork after the hardfork provided or set\n     * @param hardfork Hardfork name, optional if HF set\n     * @returns Block number or null if not available\n     */\n    Common.prototype.nextHardforkBlockBN = function (hardfork) {\n        hardfork = this._chooseHardfork(hardfork, false);\n        var hfBlock = this.hardforkBlockBN(hardfork);\n        if (hfBlock === null) {\n            return null;\n        }\n        // Next fork block number or null if none available\n        // Logic: if accumulator is still null and on the first occurrence of\n        // a block greater than the current hfBlock set the accumulator,\n        // pass on the accumulator as the final result from this time on\n        var nextHfBlock = this.hardforks().reduce(function (acc, hf) {\n            var block = new ethereumjs_util_1.BN(hf.block);\n            return block.gt(hfBlock) && acc === null ? block : acc;\n        }, null);\n        return nextHfBlock;\n    };\n    /**\n     * True if block number provided is the hardfork change block following the hardfork given or set\n     * @param blockNumber Number of the block to check\n     * @param hardfork Hardfork name, optional if HF set\n     * @returns True if blockNumber is HF block\n     */\n    Common.prototype.isNextHardforkBlock = function (blockNumber, hardfork) {\n        blockNumber = (0, ethereumjs_util_1.toType)(blockNumber, ethereumjs_util_1.TypeOutput.BN);\n        hardfork = this._chooseHardfork(hardfork, false);\n        var nextHardforkBlock = this.nextHardforkBlockBN(hardfork);\n        return nextHardforkBlock === null ? false : nextHardforkBlock.eq(blockNumber);\n    };\n    /**\n     * Internal helper function to calculate a fork hash\n     * @param hardfork Hardfork name\n     * @returns Fork hash as hex string\n     */\n    Common.prototype._calcForkHash = function (hardfork) {\n        var e_15, _a;\n        var genesis = Buffer.from(this.genesis().hash.substr(2), 'hex');\n        var hfBuffer = Buffer.alloc(0);\n        var prevBlock = 0;\n        try {\n            for (var _b = __values(this.hardforks()), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var hf = _c.value;\n                var block = hf.block;\n                // Skip for chainstart (0), not applied HFs (null) and\n                // when already applied on same block number HFs\n                if (block !== 0 && block !== null && block !== prevBlock) {\n                    var hfBlockBuffer = Buffer.from(block.toString(16).padStart(16, '0'), 'hex');\n                    hfBuffer = Buffer.concat([hfBuffer, hfBlockBuffer]);\n                }\n                if (hf.name === hardfork)\n                    break;\n                if (block !== null) {\n                    prevBlock = block;\n                }\n            }\n        }\n        catch (e_15_1) { e_15 = { error: e_15_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_15) throw e_15.error; }\n        }\n        var inputBuffer = Buffer.concat([genesis, hfBuffer]);\n        // CRC32 delivers result as signed (negative) 32-bit integer,\n        // convert to hex string\n        var forkhash = (0, ethereumjs_util_1.intToBuffer)((0, crc_32_1.buf)(inputBuffer) >>> 0).toString('hex');\n        return \"0x\".concat(forkhash);\n    };\n    /**\n     * Returns an eth/64 compliant fork hash (EIP-2124)\n     * @param hardfork Hardfork name, optional if HF set\n     */\n    Common.prototype.forkHash = function (hardfork) {\n        hardfork = this._chooseHardfork(hardfork, false);\n        var data = this._getHardfork(hardfork);\n        if (data['block'] === null && data['td'] === undefined) {\n            var msg = 'No fork hash calculation possible for future hardfork';\n            throw new Error(msg);\n        }\n        if (data['forkHash'] !== undefined) {\n            return data['forkHash'];\n        }\n        return this._calcForkHash(hardfork);\n    };\n    /**\n     *\n     * @param forkHash Fork hash as a hex string\n     * @returns Array with hardfork data (name, block, forkHash)\n     */\n    Common.prototype.hardforkForForkHash = function (forkHash) {\n        var resArray = this.hardforks().filter(function (hf) {\n            return hf.forkHash === forkHash;\n        });\n        return resArray.length >= 1 ? resArray[resArray.length - 1] : null;\n    };\n    /**\n     * Returns the Genesis parameters of the current chain\n     * @returns Genesis dictionary\n     */\n    Common.prototype.genesis = function () {\n        return this._chainParams['genesis'];\n    };\n    /**\n     * Returns the Genesis state of the current chain,\n     * all values are provided as hex-prefixed strings.\n     */\n    Common.prototype.genesisState = function () {\n        var e_16, _a;\n        // Use require statements here in favor of import statements\n        // to load json files on demand\n        // (high memory usage by large mainnet.json genesis state file)\n        switch (this.chainName()) {\n            case 'mainnet':\n                return __webpack_require__(/*! ./genesisStates/mainnet.json */ \"./node_modules/@ethereumjs/common/dist.browser/genesisStates/mainnet.json\");\n            case 'ropsten':\n                return __webpack_require__(/*! ./genesisStates/ropsten.json */ \"./node_modules/@ethereumjs/common/dist.browser/genesisStates/ropsten.json\");\n            case 'rinkeby':\n                return __webpack_require__(/*! ./genesisStates/rinkeby.json */ \"./node_modules/@ethereumjs/common/dist.browser/genesisStates/rinkeby.json\");\n            case 'kovan':\n                return __webpack_require__(/*! ./genesisStates/kovan.json */ \"./node_modules/@ethereumjs/common/dist.browser/genesisStates/kovan.json\");\n            case 'goerli':\n                return __webpack_require__(/*! ./genesisStates/goerli.json */ \"./node_modules/@ethereumjs/common/dist.browser/genesisStates/goerli.json\");\n            case 'sepolia':\n                return __webpack_require__(/*! ./genesisStates/sepolia.json */ \"./node_modules/@ethereumjs/common/dist.browser/genesisStates/sepolia.json\");\n        }\n        // Custom chains with genesis state provided\n        if (this._customChains &&\n            this._customChains.length > 0 &&\n            Array.isArray(this._customChains[0])) {\n            try {\n                for (var _b = __values(this._customChains), _c = _b.next(); !_c.done; _c = _b.next()) {\n                    var chainArrayWithGenesis = _c.value;\n                    if (chainArrayWithGenesis[0].name === this.chainName()) {\n                        return chainArrayWithGenesis[1];\n                    }\n                }\n            }\n            catch (e_16_1) { e_16 = { error: e_16_1 }; }\n            finally {\n                try {\n                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n                }\n                finally { if (e_16) throw e_16.error; }\n            }\n        }\n        return {};\n    };\n    /**\n     * Returns the hardforks for current chain\n     * @returns {Array} Array with arrays of hardforks\n     */\n    Common.prototype.hardforks = function () {\n        return this._chainParams['hardforks'];\n    };\n    /**\n     * Returns bootstrap nodes for the current chain\n     * @returns {Dictionary} Dict with bootstrap nodes\n     */\n    Common.prototype.bootstrapNodes = function () {\n        return this._chainParams['bootstrapNodes'];\n    };\n    /**\n     * Returns DNS networks for the current chain\n     * @returns {String[]} Array of DNS ENR urls\n     */\n    Common.prototype.dnsNetworks = function () {\n        return this._chainParams['dnsNetworks'];\n    };\n    /**\n     * Returns the hardfork set\n     * @returns Hardfork name\n     */\n    Common.prototype.hardfork = function () {\n        return this._hardfork;\n    };\n    /**\n     * Returns the Id of current chain\n     * @returns chain Id\n     * @deprecated Please use {@link Common.chainIdBN} for large number support\n     */\n    Common.prototype.chainId = function () {\n        return (0, ethereumjs_util_1.toType)(this.chainIdBN(), ethereumjs_util_1.TypeOutput.Number);\n    };\n    /**\n     * Returns the Id of current chain\n     * @returns chain Id\n     */\n    Common.prototype.chainIdBN = function () {\n        return new ethereumjs_util_1.BN(this._chainParams['chainId']);\n    };\n    /**\n     * Returns the name of current chain\n     * @returns chain name (lower case)\n     */\n    Common.prototype.chainName = function () {\n        return this._chainParams['name'];\n    };\n    /**\n     * Returns the Id of current network\n     * @returns network Id\n     * @deprecated Please use {@link Common.networkIdBN} for large number support\n     */\n    Common.prototype.networkId = function () {\n        return (0, ethereumjs_util_1.toType)(this.networkIdBN(), ethereumjs_util_1.TypeOutput.Number);\n    };\n    /**\n     * Returns the Id of current network\n     * @returns network Id\n     */\n    Common.prototype.networkIdBN = function () {\n        return new ethereumjs_util_1.BN(this._chainParams['networkId']);\n    };\n    /**\n     * Returns the active EIPs\n     * @returns List of EIPs\n     */\n    Common.prototype.eips = function () {\n        return this._eips;\n    };\n    /**\n     * Returns the consensus type of the network\n     * Possible values: \"pow\"|\"poa\"|\"pos\"\n     *\n     * Note: This value can update along a hardfork.\n     */\n    Common.prototype.consensusType = function () {\n        var e_17, _a;\n        var hardfork = this.hardfork();\n        var value;\n        try {\n            for (var HARDFORK_CHANGES_4 = __values(hardforks_1.hardforks), HARDFORK_CHANGES_4_1 = HARDFORK_CHANGES_4.next(); !HARDFORK_CHANGES_4_1.done; HARDFORK_CHANGES_4_1 = HARDFORK_CHANGES_4.next()) {\n                var hfChanges = HARDFORK_CHANGES_4_1.value;\n                if ('consensus' in hfChanges[1]) {\n                    value = hfChanges[1]['consensus']['type'];\n                }\n                if (hfChanges[0] === hardfork)\n                    break;\n            }\n        }\n        catch (e_17_1) { e_17 = { error: e_17_1 }; }\n        finally {\n            try {\n                if (HARDFORK_CHANGES_4_1 && !HARDFORK_CHANGES_4_1.done && (_a = HARDFORK_CHANGES_4.return)) _a.call(HARDFORK_CHANGES_4);\n            }\n            finally { if (e_17) throw e_17.error; }\n        }\n        if (value) {\n            return value;\n        }\n        return this._chainParams['consensus']['type'];\n    };\n    /**\n     * Returns the concrete consensus implementation\n     * algorithm or protocol for the network\n     * e.g. \"ethash\" for \"pow\" consensus type,\n     * \"clique\" for \"poa\" consensus type or\n     * \"casper\" for \"pos\" consensus type.\n     *\n     * Note: This value can update along a hardfork.\n     */\n    Common.prototype.consensusAlgorithm = function () {\n        var e_18, _a;\n        var hardfork = this.hardfork();\n        var value;\n        try {\n            for (var HARDFORK_CHANGES_5 = __values(hardforks_1.hardforks), HARDFORK_CHANGES_5_1 = HARDFORK_CHANGES_5.next(); !HARDFORK_CHANGES_5_1.done; HARDFORK_CHANGES_5_1 = HARDFORK_CHANGES_5.next()) {\n                var hfChanges = HARDFORK_CHANGES_5_1.value;\n                if ('consensus' in hfChanges[1]) {\n                    value = hfChanges[1]['consensus']['algorithm'];\n                }\n                if (hfChanges[0] === hardfork)\n                    break;\n            }\n        }\n        catch (e_18_1) { e_18 = { error: e_18_1 }; }\n        finally {\n            try {\n                if (HARDFORK_CHANGES_5_1 && !HARDFORK_CHANGES_5_1.done && (_a = HARDFORK_CHANGES_5.return)) _a.call(HARDFORK_CHANGES_5);\n            }\n            finally { if (e_18) throw e_18.error; }\n        }\n        if (value) {\n            return value;\n        }\n        return this._chainParams['consensus']['algorithm'];\n    };\n    /**\n     * Returns a dictionary with consensus configuration\n     * parameters based on the consensus algorithm\n     *\n     * Expected returns (parameters must be present in\n     * the respective chain json files):\n     *\n     * ethash: -\n     * clique: period, epoch\n     * aura: -\n     * casper: -\n     *\n     * Note: This value can update along a hardfork.\n     */\n    Common.prototype.consensusConfig = function () {\n        var e_19, _a;\n        var hardfork = this.hardfork();\n        var value;\n        try {\n            for (var HARDFORK_CHANGES_6 = __values(hardforks_1.hardforks), HARDFORK_CHANGES_6_1 = HARDFORK_CHANGES_6.next(); !HARDFORK_CHANGES_6_1.done; HARDFORK_CHANGES_6_1 = HARDFORK_CHANGES_6.next()) {\n                var hfChanges = HARDFORK_CHANGES_6_1.value;\n                if ('consensus' in hfChanges[1]) {\n                    // The config parameter is named after the respective consensus algorithm\n                    value = hfChanges[1]['consensus'][hfChanges[1]['consensus']['algorithm']];\n                }\n                if (hfChanges[0] === hardfork)\n                    break;\n            }\n        }\n        catch (e_19_1) { e_19 = { error: e_19_1 }; }\n        finally {\n            try {\n                if (HARDFORK_CHANGES_6_1 && !HARDFORK_CHANGES_6_1.done && (_a = HARDFORK_CHANGES_6.return)) _a.call(HARDFORK_CHANGES_6);\n            }\n            finally { if (e_19) throw e_19.error; }\n        }\n        if (value) {\n            return value;\n        }\n        var consensusAlgorithm = this.consensusAlgorithm();\n        return this._chainParams['consensus'][consensusAlgorithm];\n    };\n    /**\n     * Returns a deep copy of this {@link Common} instance.\n     */\n    Common.prototype.copy = function () {\n        var copy = Object.assign(Object.create(Object.getPrototypeOf(this)), this);\n        copy.removeAllListeners();\n        return copy;\n    };\n    return Common;\n}(events_1.EventEmitter));\nexports[\"default\"] = Common;\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@ethereumjs/common/dist.browser/index.js\n");

/***/ }),

/***/ "./node_modules/@ethereumjs/common/node_modules/bn.js/lib/bn.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@ethereumjs/common/node_modules/bn.js/lib/bn.js ***!
  \**********************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("/* module decorator */ module = __webpack_require__.nmd(module);\n(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = (__webpack_require__(/*! buffer */ \"?d71a\").Buffer);\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [number & 0x3ffffff];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [0];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this._strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // '0' - '9'\n    if (c >= 48 && c <= 57) {\n      return c - 48;\n    // 'A' - 'F'\n    } else if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    } else {\n      assert(false, 'Invalid character in ' + string);\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this._strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var b = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        b = c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        b = c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        b = c;\n      }\n      assert(c >= 0 && b < mul, 'Invalid character');\n      r += b;\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [0];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this._strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  function move (dest, src) {\n    dest.words = src.words;\n    dest.length = src.length;\n    dest.negative = src.negative;\n    dest.red = src.red;\n  }\n\n  BN.prototype._move = function _move (dest) {\n    move(dest, this);\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype._strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  // Check Symbol.for because not everywhere where Symbol defined\n  // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol#Browser_compatibility\n  if (typeof Symbol !== 'undefined' && typeof Symbol.for === 'function') {\n    try {\n      BN.prototype[Symbol.for('nodejs.util.inspect.custom')] = inspect;\n    } catch (e) {\n      BN.prototype.inspect = inspect;\n    }\n  } else {\n    BN.prototype.inspect = inspect;\n  }\n\n  function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  }\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modrn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16, 2);\n  };\n\n  if (Buffer) {\n    BN.prototype.toBuffer = function toBuffer (endian, length) {\n      return this.toArrayLike(Buffer, endian, length);\n    };\n  }\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  var allocate = function allocate (ArrayType, size) {\n    if (ArrayType.allocUnsafe) {\n      return ArrayType.allocUnsafe(size);\n    }\n    return new ArrayType(size);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    this._strip();\n\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    var res = allocate(ArrayType, reqLength);\n    var postfix = endian === 'le' ? 'LE' : 'BE';\n    this['_toArrayLike' + postfix](res, byteLength);\n    return res;\n  };\n\n  BN.prototype._toArrayLikeLE = function _toArrayLikeLE (res, byteLength) {\n    var position = 0;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position++] = word & 0xff;\n      if (position < res.length) {\n        res[position++] = (word >> 8) & 0xff;\n      }\n      if (position < res.length) {\n        res[position++] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position < res.length) {\n          res[position++] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position < res.length) {\n      res[position++] = carry;\n\n      while (position < res.length) {\n        res[position++] = 0;\n      }\n    }\n  };\n\n  BN.prototype._toArrayLikeBE = function _toArrayLikeBE (res, byteLength) {\n    var position = res.length - 1;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position--] = word & 0xff;\n      if (position >= 0) {\n        res[position--] = (word >> 8) & 0xff;\n      }\n      if (position >= 0) {\n        res[position--] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position >= 0) {\n          res[position--] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position >= 0) {\n      res[position--] = carry;\n\n      while (position >= 0) {\n        res[position--] = 0;\n      }\n    }\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] >>> wbit) & 0x01;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this._strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this._strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this._strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    // Temporary disable, see https://github.com/indutny/bn.js/issues/211\n    // var fftm = new FFTM();\n    // return fftm.mulp(self, num, out);\n    return bigMulTo(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out._strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this._strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) <= num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this._strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this._strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q._strip();\n    }\n    a._strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modrn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modrn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || (r2 === 1 && cmp === 0)) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modrn = function modrn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return isNegNum ? -acc : acc;\n  };\n\n  // WARNING: DEPRECATED\n  BN.prototype.modn = function modn (num) {\n    return this.modrn(num);\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    this._strip();\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this._strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is a BN v4 instance\n        r.strip();\n      } else {\n        // r is a BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n\n    move(a, a.umod(this.m)._forceRed(this));\n    return a;\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})( false || module, this);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGV0aGVyZXVtanMvY29tbW9uL25vZGVfbW9kdWxlcy9ibi5qcy9saWIvYm4uanMuanMiLCJtYXBwaW5ncyI6IjtBQUFBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ04sZUFBZSxtREFBd0I7QUFDdkM7QUFDQSxJQUFJO0FBQ0o7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTix5Q0FBeUM7QUFDekM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLG9CQUFvQixpQkFBaUI7QUFDckM7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSx5Q0FBeUMsUUFBUTtBQUNqRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ04seUJBQXlCLG1CQUFtQjtBQUM1QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLGlCQUFpQjtBQUNyQztBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0Esa0NBQWtDLFlBQVk7QUFDOUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBVTtBQUNWO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBLDBEQUEwRCxtQkFBbUI7QUFDN0U7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBVTtBQUNWO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsU0FBUztBQUNqQzs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxRQUFRO0FBQ1I7O0FBRUE7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSx1Q0FBdUMsc0JBQXNCO0FBQzdEO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLHdCQUF3QixTQUFTO0FBQ2pDOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBLGtCQUFrQixTQUFTO0FBQzNCO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxvQkFBb0IsaUJBQWlCO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQixpQkFBaUI7QUFDdkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxVQUFVO0FBQ1Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxVQUFVO0FBQ1Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBLCtCQUErQixpQkFBaUI7QUFDaEQ7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUEsK0JBQStCLGlCQUFpQjtBQUNoRDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBLHNCQUFzQixnQkFBZ0I7QUFDdEM7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0Esb0JBQW9CLGlCQUFpQjtBQUNyQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxvQkFBb0IsZ0JBQWdCO0FBQ3BDO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBOztBQUVBLG9CQUFvQixjQUFjO0FBQ2xDO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBOztBQUVBLG9CQUFvQixjQUFjO0FBQ2xDO0FBQ0E7O0FBRUE7QUFDQSxhQUFhLGNBQWM7QUFDM0I7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLG9CQUFvQixpQkFBaUI7QUFDckM7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLG9CQUFvQixjQUFjO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyw2QkFBNkI7QUFDeEM7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTixhQUFhLGNBQWM7QUFDM0I7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxvQkFBb0IsY0FBYztBQUNsQztBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsNkJBQTZCO0FBQ3hDO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxhQUFhLGNBQWM7QUFDM0I7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBLG9CQUFvQixTQUFTO0FBQzdCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxREFBcUQsV0FBVztBQUNoRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLG9CQUFvQixvQkFBb0I7QUFDeEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscURBQXFELFdBQVc7QUFDaEU7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0EsTUFBTTtBQUNOO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQixPQUFPO0FBQzNCO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxvQkFBb0IsT0FBTztBQUMzQjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsT0FBTztBQUMzQjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBLG9CQUFvQixPQUFPO0FBQzNCOztBQUVBO0FBQ0E7O0FBRUEsc0JBQXNCLE9BQU87QUFDN0I7QUFDQTs7QUFFQSx3QkFBd0IsT0FBTztBQUMvQjtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLEdBQUc7QUFDM0I7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUEsb0JBQW9CLFdBQVc7QUFDL0I7O0FBRUE7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0Esb0JBQW9CLFdBQVc7QUFDL0I7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLG9CQUFvQixTQUFTO0FBQzdCOztBQUVBLG1DQUFtQztBQUNuQyx1Q0FBdUM7QUFDdkM7O0FBRUE7QUFDQSxzQkFBc0IsT0FBTztBQUM3QjtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0Esb0JBQW9CLE9BQU87QUFDM0I7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7O0FBRUE7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQSxvQkFBb0IsT0FBTztBQUMzQjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxvQkFBb0IsaUJBQWlCO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLG9CQUFvQixjQUFjO0FBQ2xDO0FBQ0E7O0FBRUE7QUFDQSw4QkFBOEIsY0FBYztBQUM1Qzs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBLGtCQUFrQixpQkFBaUI7QUFDbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsZ0NBQWdDLFFBQVE7QUFDeEM7QUFDQTs7QUFFQSxrQkFBa0IsT0FBTztBQUN6QjtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxzQkFBc0IsT0FBTztBQUM3QjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0Esa0JBQWtCLGlCQUFpQjtBQUNuQztBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLDhCQUE4QixtQ0FBbUM7QUFDakU7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0Esb0JBQW9CLCtDQUErQztBQUNuRTtBQUNBO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQSxzQkFBc0Isc0NBQXNDO0FBQzVEO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0EsZ0JBQWdCLGdCQUFnQjtBQUNoQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLHlCQUF5QjtBQUNwQztBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IsaUJBQWlCO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQixjQUFjO0FBQ3BDO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSx3QkFBd0IsUUFBUTtBQUNoQztBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBLGtDQUFrQyxRQUFRO0FBQzFDO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBLGtDQUFrQyxRQUFRO0FBQzFDO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0EsOEJBQThCLG1DQUFtQztBQUNqRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSw4QkFBOEIsbUNBQW1DO0FBQ2pFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTs7QUFFQTtBQUNBOztBQUVBOztBQUVBO0FBQ0EsOEJBQThCLG1DQUFtQztBQUNqRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBLDhCQUE4QixtQ0FBbUM7QUFDakU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0Esd0JBQXdCLDBCQUEwQjtBQUNsRDtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7O0FBRUE7QUFDQSxNQUFNOztBQUVOO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxvQkFBb0IsZ0NBQWdDO0FBQ3BEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxrQ0FBa0MsUUFBUTtBQUMxQztBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTs7QUFFTjtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLG9CQUFvQixZQUFZO0FBQ2hDO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQSxpQkFBaUIsa0JBQWtCO0FBQ25DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLG9CQUFvQixnQkFBZ0I7QUFDcEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsZ0JBQWdCO0FBQ3BDO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBLE1BQU07QUFDTjtBQUNBLE1BQU07QUFDTjtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQkFBc0Isb0JBQW9CO0FBQzFDO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsZ0JBQWdCO0FBQ3BDO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsNkJBQTZCLFFBQVE7QUFDckM7QUFDQSw4QkFBOEIsUUFBUTtBQUN0QztBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyxFQUFFLE1BQTZCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AZXRoZXJldW1qcy9jb21tb24vbm9kZV9tb2R1bGVzL2JuLmpzL2xpYi9ibi5qcz83M2JjIl0sInNvdXJjZXNDb250ZW50IjpbIihmdW5jdGlvbiAobW9kdWxlLCBleHBvcnRzKSB7XG4gICd1c2Ugc3RyaWN0JztcblxuICAvLyBVdGlsc1xuICBmdW5jdGlvbiBhc3NlcnQgKHZhbCwgbXNnKSB7XG4gICAgaWYgKCF2YWwpIHRocm93IG5ldyBFcnJvcihtc2cgfHwgJ0Fzc2VydGlvbiBmYWlsZWQnKTtcbiAgfVxuXG4gIC8vIENvdWxkIHVzZSBgaW5oZXJpdHNgIG1vZHVsZSwgYnV0IGRvbid0IHdhbnQgdG8gbW92ZSBmcm9tIHNpbmdsZSBmaWxlXG4gIC8vIGFyY2hpdGVjdHVyZSB5ZXQuXG4gIGZ1bmN0aW9uIGluaGVyaXRzIChjdG9yLCBzdXBlckN0b3IpIHtcbiAgICBjdG9yLnN1cGVyXyA9IHN1cGVyQ3RvcjtcbiAgICB2YXIgVGVtcEN0b3IgPSBmdW5jdGlvbiAoKSB7fTtcbiAgICBUZW1wQ3Rvci5wcm90b3R5cGUgPSBzdXBlckN0b3IucHJvdG90eXBlO1xuICAgIGN0b3IucHJvdG90eXBlID0gbmV3IFRlbXBDdG9yKCk7XG4gICAgY3Rvci5wcm90b3R5cGUuY29uc3RydWN0b3IgPSBjdG9yO1xuICB9XG5cbiAgLy8gQk5cblxuICBmdW5jdGlvbiBCTiAobnVtYmVyLCBiYXNlLCBlbmRpYW4pIHtcbiAgICBpZiAoQk4uaXNCTihudW1iZXIpKSB7XG4gICAgICByZXR1cm4gbnVtYmVyO1xuICAgIH1cblxuICAgIHRoaXMubmVnYXRpdmUgPSAwO1xuICAgIHRoaXMud29yZHMgPSBudWxsO1xuICAgIHRoaXMubGVuZ3RoID0gMDtcblxuICAgIC8vIFJlZHVjdGlvbiBjb250ZXh0XG4gICAgdGhpcy5yZWQgPSBudWxsO1xuXG4gICAgaWYgKG51bWJlciAhPT0gbnVsbCkge1xuICAgICAgaWYgKGJhc2UgPT09ICdsZScgfHwgYmFzZSA9PT0gJ2JlJykge1xuICAgICAgICBlbmRpYW4gPSBiYXNlO1xuICAgICAgICBiYXNlID0gMTA7XG4gICAgICB9XG5cbiAgICAgIHRoaXMuX2luaXQobnVtYmVyIHx8IDAsIGJhc2UgfHwgMTAsIGVuZGlhbiB8fCAnYmUnKTtcbiAgICB9XG4gIH1cbiAgaWYgKHR5cGVvZiBtb2R1bGUgPT09ICdvYmplY3QnKSB7XG4gICAgbW9kdWxlLmV4cG9ydHMgPSBCTjtcbiAgfSBlbHNlIHtcbiAgICBleHBvcnRzLkJOID0gQk47XG4gIH1cblxuICBCTi5CTiA9IEJOO1xuICBCTi53b3JkU2l6ZSA9IDI2O1xuXG4gIHZhciBCdWZmZXI7XG4gIHRyeSB7XG4gICAgaWYgKHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnICYmIHR5cGVvZiB3aW5kb3cuQnVmZmVyICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgQnVmZmVyID0gd2luZG93LkJ1ZmZlcjtcbiAgICB9IGVsc2Uge1xuICAgICAgQnVmZmVyID0gcmVxdWlyZSgnYnVmZmVyJykuQnVmZmVyO1xuICAgIH1cbiAgfSBjYXRjaCAoZSkge1xuICB9XG5cbiAgQk4uaXNCTiA9IGZ1bmN0aW9uIGlzQk4gKG51bSkge1xuICAgIGlmIChudW0gaW5zdGFuY2VvZiBCTikge1xuICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuXG4gICAgcmV0dXJuIG51bSAhPT0gbnVsbCAmJiB0eXBlb2YgbnVtID09PSAnb2JqZWN0JyAmJlxuICAgICAgbnVtLmNvbnN0cnVjdG9yLndvcmRTaXplID09PSBCTi53b3JkU2l6ZSAmJiBBcnJheS5pc0FycmF5KG51bS53b3Jkcyk7XG4gIH07XG5cbiAgQk4ubWF4ID0gZnVuY3Rpb24gbWF4IChsZWZ0LCByaWdodCkge1xuICAgIGlmIChsZWZ0LmNtcChyaWdodCkgPiAwKSByZXR1cm4gbGVmdDtcbiAgICByZXR1cm4gcmlnaHQ7XG4gIH07XG5cbiAgQk4ubWluID0gZnVuY3Rpb24gbWluIChsZWZ0LCByaWdodCkge1xuICAgIGlmIChsZWZ0LmNtcChyaWdodCkgPCAwKSByZXR1cm4gbGVmdDtcbiAgICByZXR1cm4gcmlnaHQ7XG4gIH07XG5cbiAgQk4ucHJvdG90eXBlLl9pbml0ID0gZnVuY3Rpb24gaW5pdCAobnVtYmVyLCBiYXNlLCBlbmRpYW4pIHtcbiAgICBpZiAodHlwZW9mIG51bWJlciA9PT0gJ251bWJlcicpIHtcbiAgICAgIHJldHVybiB0aGlzLl9pbml0TnVtYmVyKG51bWJlciwgYmFzZSwgZW5kaWFuKTtcbiAgICB9XG5cbiAgICBpZiAodHlwZW9mIG51bWJlciA9PT0gJ29iamVjdCcpIHtcbiAgICAgIHJldHVybiB0aGlzLl9pbml0QXJyYXkobnVtYmVyLCBiYXNlLCBlbmRpYW4pO1xuICAgIH1cblxuICAgIGlmIChiYXNlID09PSAnaGV4Jykge1xuICAgICAgYmFzZSA9IDE2O1xuICAgIH1cbiAgICBhc3NlcnQoYmFzZSA9PT0gKGJhc2UgfCAwKSAmJiBiYXNlID49IDIgJiYgYmFzZSA8PSAzNik7XG5cbiAgICBudW1iZXIgPSBudW1iZXIudG9TdHJpbmcoKS5yZXBsYWNlKC9cXHMrL2csICcnKTtcbiAgICB2YXIgc3RhcnQgPSAwO1xuICAgIGlmIChudW1iZXJbMF0gPT09ICctJykge1xuICAgICAgc3RhcnQrKztcbiAgICAgIHRoaXMubmVnYXRpdmUgPSAxO1xuICAgIH1cblxuICAgIGlmIChzdGFydCA8IG51bWJlci5sZW5ndGgpIHtcbiAgICAgIGlmIChiYXNlID09PSAxNikge1xuICAgICAgICB0aGlzLl9wYXJzZUhleChudW1iZXIsIHN0YXJ0LCBlbmRpYW4pO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdGhpcy5fcGFyc2VCYXNlKG51bWJlciwgYmFzZSwgc3RhcnQpO1xuICAgICAgICBpZiAoZW5kaWFuID09PSAnbGUnKSB7XG4gICAgICAgICAgdGhpcy5faW5pdEFycmF5KHRoaXMudG9BcnJheSgpLCBiYXNlLCBlbmRpYW4pO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9O1xuXG4gIEJOLnByb3RvdHlwZS5faW5pdE51bWJlciA9IGZ1bmN0aW9uIF9pbml0TnVtYmVyIChudW1iZXIsIGJhc2UsIGVuZGlhbikge1xuICAgIGlmIChudW1iZXIgPCAwKSB7XG4gICAgICB0aGlzLm5lZ2F0aXZlID0gMTtcbiAgICAgIG51bWJlciA9IC1udW1iZXI7XG4gICAgfVxuICAgIGlmIChudW1iZXIgPCAweDQwMDAwMDApIHtcbiAgICAgIHRoaXMud29yZHMgPSBbbnVtYmVyICYgMHgzZmZmZmZmXTtcbiAgICAgIHRoaXMubGVuZ3RoID0gMTtcbiAgICB9IGVsc2UgaWYgKG51bWJlciA8IDB4MTAwMDAwMDAwMDAwMDApIHtcbiAgICAgIHRoaXMud29yZHMgPSBbXG4gICAgICAgIG51bWJlciAmIDB4M2ZmZmZmZixcbiAgICAgICAgKG51bWJlciAvIDB4NDAwMDAwMCkgJiAweDNmZmZmZmZcbiAgICAgIF07XG4gICAgICB0aGlzLmxlbmd0aCA9IDI7XG4gICAgfSBlbHNlIHtcbiAgICAgIGFzc2VydChudW1iZXIgPCAweDIwMDAwMDAwMDAwMDAwKTsgLy8gMiBeIDUzICh1bnNhZmUpXG4gICAgICB0aGlzLndvcmRzID0gW1xuICAgICAgICBudW1iZXIgJiAweDNmZmZmZmYsXG4gICAgICAgIChudW1iZXIgLyAweDQwMDAwMDApICYgMHgzZmZmZmZmLFxuICAgICAgICAxXG4gICAgICBdO1xuICAgICAgdGhpcy5sZW5ndGggPSAzO1xuICAgIH1cblxuICAgIGlmIChlbmRpYW4gIT09ICdsZScpIHJldHVybjtcblxuICAgIC8vIFJldmVyc2UgdGhlIGJ5dGVzXG4gICAgdGhpcy5faW5pdEFycmF5KHRoaXMudG9BcnJheSgpLCBiYXNlLCBlbmRpYW4pO1xuICB9O1xuXG4gIEJOLnByb3RvdHlwZS5faW5pdEFycmF5ID0gZnVuY3Rpb24gX2luaXRBcnJheSAobnVtYmVyLCBiYXNlLCBlbmRpYW4pIHtcbiAgICAvLyBQZXJoYXBzIGEgVWludDhBcnJheVxuICAgIGFzc2VydCh0eXBlb2YgbnVtYmVyLmxlbmd0aCA9PT0gJ251bWJlcicpO1xuICAgIGlmIChudW1iZXIubGVuZ3RoIDw9IDApIHtcbiAgICAgIHRoaXMud29yZHMgPSBbMF07XG4gICAgICB0aGlzLmxlbmd0aCA9IDE7XG4gICAgICByZXR1cm4gdGhpcztcbiAgICB9XG5cbiAgICB0aGlzLmxlbmd0aCA9IE1hdGguY2VpbChudW1iZXIubGVuZ3RoIC8gMyk7XG4gICAgdGhpcy53b3JkcyA9IG5ldyBBcnJheSh0aGlzLmxlbmd0aCk7XG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCB0aGlzLmxlbmd0aDsgaSsrKSB7XG4gICAgICB0aGlzLndvcmRzW2ldID0gMDtcbiAgICB9XG5cbiAgICB2YXIgaiwgdztcbiAgICB2YXIgb2ZmID0gMDtcbiAgICBpZiAoZW5kaWFuID09PSAnYmUnKSB7XG4gICAgICBmb3IgKGkgPSBudW1iZXIubGVuZ3RoIC0gMSwgaiA9IDA7IGkgPj0gMDsgaSAtPSAzKSB7XG4gICAgICAgIHcgPSBudW1iZXJbaV0gfCAobnVtYmVyW2kgLSAxXSA8PCA4KSB8IChudW1iZXJbaSAtIDJdIDw8IDE2KTtcbiAgICAgICAgdGhpcy53b3Jkc1tqXSB8PSAodyA8PCBvZmYpICYgMHgzZmZmZmZmO1xuICAgICAgICB0aGlzLndvcmRzW2ogKyAxXSA9ICh3ID4+PiAoMjYgLSBvZmYpKSAmIDB4M2ZmZmZmZjtcbiAgICAgICAgb2ZmICs9IDI0O1xuICAgICAgICBpZiAob2ZmID49IDI2KSB7XG4gICAgICAgICAgb2ZmIC09IDI2O1xuICAgICAgICAgIGorKztcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0gZWxzZSBpZiAoZW5kaWFuID09PSAnbGUnKSB7XG4gICAgICBmb3IgKGkgPSAwLCBqID0gMDsgaSA8IG51bWJlci5sZW5ndGg7IGkgKz0gMykge1xuICAgICAgICB3ID0gbnVtYmVyW2ldIHwgKG51bWJlcltpICsgMV0gPDwgOCkgfCAobnVtYmVyW2kgKyAyXSA8PCAxNik7XG4gICAgICAgIHRoaXMud29yZHNbal0gfD0gKHcgPDwgb2ZmKSAmIDB4M2ZmZmZmZjtcbiAgICAgICAgdGhpcy53b3Jkc1tqICsgMV0gPSAodyA+Pj4gKDI2IC0gb2ZmKSkgJiAweDNmZmZmZmY7XG4gICAgICAgIG9mZiArPSAyNDtcbiAgICAgICAgaWYgKG9mZiA+PSAyNikge1xuICAgICAgICAgIG9mZiAtPSAyNjtcbiAgICAgICAgICBqKys7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHRoaXMuX3N0cmlwKCk7XG4gIH07XG5cbiAgZnVuY3Rpb24gcGFyc2VIZXg0Qml0cyAoc3RyaW5nLCBpbmRleCkge1xuICAgIHZhciBjID0gc3RyaW5nLmNoYXJDb2RlQXQoaW5kZXgpO1xuICAgIC8vICcwJyAtICc5J1xuICAgIGlmIChjID49IDQ4ICYmIGMgPD0gNTcpIHtcbiAgICAgIHJldHVybiBjIC0gNDg7XG4gICAgLy8gJ0EnIC0gJ0YnXG4gICAgfSBlbHNlIGlmIChjID49IDY1ICYmIGMgPD0gNzApIHtcbiAgICAgIHJldHVybiBjIC0gNTU7XG4gICAgLy8gJ2EnIC0gJ2YnXG4gICAgfSBlbHNlIGlmIChjID49IDk3ICYmIGMgPD0gMTAyKSB7XG4gICAgICByZXR1cm4gYyAtIDg3O1xuICAgIH0gZWxzZSB7XG4gICAgICBhc3NlcnQoZmFsc2UsICdJbnZhbGlkIGNoYXJhY3RlciBpbiAnICsgc3RyaW5nKTtcbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiBwYXJzZUhleEJ5dGUgKHN0cmluZywgbG93ZXJCb3VuZCwgaW5kZXgpIHtcbiAgICB2YXIgciA9IHBhcnNlSGV4NEJpdHMoc3RyaW5nLCBpbmRleCk7XG4gICAgaWYgKGluZGV4IC0gMSA+PSBsb3dlckJvdW5kKSB7XG4gICAgICByIHw9IHBhcnNlSGV4NEJpdHMoc3RyaW5nLCBpbmRleCAtIDEpIDw8IDQ7XG4gICAgfVxuICAgIHJldHVybiByO1xuICB9XG5cbiAgQk4ucHJvdG90eXBlLl9wYXJzZUhleCA9IGZ1bmN0aW9uIF9wYXJzZUhleCAobnVtYmVyLCBzdGFydCwgZW5kaWFuKSB7XG4gICAgLy8gQ3JlYXRlIHBvc3NpYmx5IGJpZ2dlciBhcnJheSB0byBlbnN1cmUgdGhhdCBpdCBmaXRzIHRoZSBudW1iZXJcbiAgICB0aGlzLmxlbmd0aCA9IE1hdGguY2VpbCgobnVtYmVyLmxlbmd0aCAtIHN0YXJ0KSAvIDYpO1xuICAgIHRoaXMud29yZHMgPSBuZXcgQXJyYXkodGhpcy5sZW5ndGgpO1xuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdGhpcy5sZW5ndGg7IGkrKykge1xuICAgICAgdGhpcy53b3Jkc1tpXSA9IDA7XG4gICAgfVxuXG4gICAgLy8gMjQtYml0cyBjaHVua3NcbiAgICB2YXIgb2ZmID0gMDtcbiAgICB2YXIgaiA9IDA7XG5cbiAgICB2YXIgdztcbiAgICBpZiAoZW5kaWFuID09PSAnYmUnKSB7XG4gICAgICBmb3IgKGkgPSBudW1iZXIubGVuZ3RoIC0gMTsgaSA+PSBzdGFydDsgaSAtPSAyKSB7XG4gICAgICAgIHcgPSBwYXJzZUhleEJ5dGUobnVtYmVyLCBzdGFydCwgaSkgPDwgb2ZmO1xuICAgICAgICB0aGlzLndvcmRzW2pdIHw9IHcgJiAweDNmZmZmZmY7XG4gICAgICAgIGlmIChvZmYgPj0gMTgpIHtcbiAgICAgICAgICBvZmYgLT0gMTg7XG4gICAgICAgICAgaiArPSAxO1xuICAgICAgICAgIHRoaXMud29yZHNbal0gfD0gdyA+Pj4gMjY7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgb2ZmICs9IDg7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIHBhcnNlTGVuZ3RoID0gbnVtYmVyLmxlbmd0aCAtIHN0YXJ0O1xuICAgICAgZm9yIChpID0gcGFyc2VMZW5ndGggJSAyID09PSAwID8gc3RhcnQgKyAxIDogc3RhcnQ7IGkgPCBudW1iZXIubGVuZ3RoOyBpICs9IDIpIHtcbiAgICAgICAgdyA9IHBhcnNlSGV4Qnl0ZShudW1iZXIsIHN0YXJ0LCBpKSA8PCBvZmY7XG4gICAgICAgIHRoaXMud29yZHNbal0gfD0gdyAmIDB4M2ZmZmZmZjtcbiAgICAgICAgaWYgKG9mZiA+PSAxOCkge1xuICAgICAgICAgIG9mZiAtPSAxODtcbiAgICAgICAgICBqICs9IDE7XG4gICAgICAgICAgdGhpcy53b3Jkc1tqXSB8PSB3ID4+PiAyNjtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBvZmYgKz0gODtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgIHRoaXMuX3N0cmlwKCk7XG4gIH07XG5cbiAgZnVuY3Rpb24gcGFyc2VCYXNlIChzdHIsIHN0YXJ0LCBlbmQsIG11bCkge1xuICAgIHZhciByID0gMDtcbiAgICB2YXIgYiA9IDA7XG4gICAgdmFyIGxlbiA9IE1hdGgubWluKHN0ci5sZW5ndGgsIGVuZCk7XG4gICAgZm9yICh2YXIgaSA9IHN0YXJ0OyBpIDwgbGVuOyBpKyspIHtcbiAgICAgIHZhciBjID0gc3RyLmNoYXJDb2RlQXQoaSkgLSA0ODtcblxuICAgICAgciAqPSBtdWw7XG5cbiAgICAgIC8vICdhJ1xuICAgICAgaWYgKGMgPj0gNDkpIHtcbiAgICAgICAgYiA9IGMgLSA0OSArIDB4YTtcblxuICAgICAgLy8gJ0EnXG4gICAgICB9IGVsc2UgaWYgKGMgPj0gMTcpIHtcbiAgICAgICAgYiA9IGMgLSAxNyArIDB4YTtcblxuICAgICAgLy8gJzAnIC0gJzknXG4gICAgICB9IGVsc2Uge1xuICAgICAgICBiID0gYztcbiAgICAgIH1cbiAgICAgIGFzc2VydChjID49IDAgJiYgYiA8IG11bCwgJ0ludmFsaWQgY2hhcmFjdGVyJyk7XG4gICAgICByICs9IGI7XG4gICAgfVxuICAgIHJldHVybiByO1xuICB9XG5cbiAgQk4ucHJvdG90eXBlLl9wYXJzZUJhc2UgPSBmdW5jdGlvbiBfcGFyc2VCYXNlIChudW1iZXIsIGJhc2UsIHN0YXJ0KSB7XG4gICAgLy8gSW5pdGlhbGl6ZSBhcyB6ZXJvXG4gICAgdGhpcy53b3JkcyA9IFswXTtcbiAgICB0aGlzLmxlbmd0aCA9IDE7XG5cbiAgICAvLyBGaW5kIGxlbmd0aCBvZiBsaW1iIGluIGJhc2VcbiAgICBmb3IgKHZhciBsaW1iTGVuID0gMCwgbGltYlBvdyA9IDE7IGxpbWJQb3cgPD0gMHgzZmZmZmZmOyBsaW1iUG93ICo9IGJhc2UpIHtcbiAgICAgIGxpbWJMZW4rKztcbiAgICB9XG4gICAgbGltYkxlbi0tO1xuICAgIGxpbWJQb3cgPSAobGltYlBvdyAvIGJhc2UpIHwgMDtcblxuICAgIHZhciB0b3RhbCA9IG51bWJlci5sZW5ndGggLSBzdGFydDtcbiAgICB2YXIgbW9kID0gdG90YWwgJSBsaW1iTGVuO1xuICAgIHZhciBlbmQgPSBNYXRoLm1pbih0b3RhbCwgdG90YWwgLSBtb2QpICsgc3RhcnQ7XG5cbiAgICB2YXIgd29yZCA9IDA7XG4gICAgZm9yICh2YXIgaSA9IHN0YXJ0OyBpIDwgZW5kOyBpICs9IGxpbWJMZW4pIHtcbiAgICAgIHdvcmQgPSBwYXJzZUJhc2UobnVtYmVyLCBpLCBpICsgbGltYkxlbiwgYmFzZSk7XG5cbiAgICAgIHRoaXMuaW11bG4obGltYlBvdyk7XG4gICAgICBpZiAodGhpcy53b3Jkc1swXSArIHdvcmQgPCAweDQwMDAwMDApIHtcbiAgICAgICAgdGhpcy53b3Jkc1swXSArPSB3b3JkO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdGhpcy5faWFkZG4od29yZCk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgaWYgKG1vZCAhPT0gMCkge1xuICAgICAgdmFyIHBvdyA9IDE7XG4gICAgICB3b3JkID0gcGFyc2VCYXNlKG51bWJlciwgaSwgbnVtYmVyLmxlbmd0aCwgYmFzZSk7XG5cbiAgICAgIGZvciAoaSA9IDA7IGkgPCBtb2Q7IGkrKykge1xuICAgICAgICBwb3cgKj0gYmFzZTtcbiAgICAgIH1cblxuICAgICAgdGhpcy5pbXVsbihwb3cpO1xuICAgICAgaWYgKHRoaXMud29yZHNbMF0gKyB3b3JkIDwgMHg0MDAwMDAwKSB7XG4gICAgICAgIHRoaXMud29yZHNbMF0gKz0gd29yZDtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHRoaXMuX2lhZGRuKHdvcmQpO1xuICAgICAgfVxuICAgIH1cblxuICAgIHRoaXMuX3N0cmlwKCk7XG4gIH07XG5cbiAgQk4ucHJvdG90eXBlLmNvcHkgPSBmdW5jdGlvbiBjb3B5IChkZXN0KSB7XG4gICAgZGVzdC53b3JkcyA9IG5ldyBBcnJheSh0aGlzLmxlbmd0aCk7XG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCB0aGlzLmxlbmd0aDsgaSsrKSB7XG4gICAgICBkZXN0LndvcmRzW2ldID0gdGhpcy53b3Jkc1tpXTtcbiAgICB9XG4gICAgZGVzdC5sZW5ndGggPSB0aGlzLmxlbmd0aDtcbiAgICBkZXN0Lm5lZ2F0aXZlID0gdGhpcy5uZWdhdGl2ZTtcbiAgICBkZXN0LnJlZCA9IHRoaXMucmVkO1xuICB9O1xuXG4gIGZ1bmN0aW9uIG1vdmUgKGRlc3QsIHNyYykge1xuICAgIGRlc3Qud29yZHMgPSBzcmMud29yZHM7XG4gICAgZGVzdC5sZW5ndGggPSBzcmMubGVuZ3RoO1xuICAgIGRlc3QubmVnYXRpdmUgPSBzcmMubmVnYXRpdmU7XG4gICAgZGVzdC5yZWQgPSBzcmMucmVkO1xuICB9XG5cbiAgQk4ucHJvdG90eXBlLl9tb3ZlID0gZnVuY3Rpb24gX21vdmUgKGRlc3QpIHtcbiAgICBtb3ZlKGRlc3QsIHRoaXMpO1xuICB9O1xuXG4gIEJOLnByb3RvdHlwZS5jbG9uZSA9IGZ1bmN0aW9uIGNsb25lICgpIHtcbiAgICB2YXIgciA9IG5ldyBCTihudWxsKTtcbiAgICB0aGlzLmNvcHkocik7XG4gICAgcmV0dXJuIHI7XG4gIH07XG5cbiAgQk4ucHJvdG90eXBlLl9leHBhbmQgPSBmdW5jdGlvbiBfZXhwYW5kIChzaXplKSB7XG4gICAgd2hpbGUgKHRoaXMubGVuZ3RoIDwgc2l6ZSkge1xuICAgICAgdGhpcy53b3Jkc1t0aGlzLmxlbmd0aCsrXSA9IDA7XG4gICAgfVxuICAgIHJldHVybiB0aGlzO1xuICB9O1xuXG4gIC8vIFJlbW92ZSBsZWFkaW5nIGAwYCBmcm9tIGB0aGlzYFxuICBCTi5wcm90b3R5cGUuX3N0cmlwID0gZnVuY3Rpb24gc3RyaXAgKCkge1xuICAgIHdoaWxlICh0aGlzLmxlbmd0aCA+IDEgJiYgdGhpcy53b3Jkc1t0aGlzLmxlbmd0aCAtIDFdID09PSAwKSB7XG4gICAgICB0aGlzLmxlbmd0aC0tO1xuICAgIH1cbiAgICByZXR1cm4gdGhpcy5fbm9ybVNpZ24oKTtcbiAgfTtcblxuICBCTi5wcm90b3R5cGUuX25vcm1TaWduID0gZnVuY3Rpb24gX25vcm1TaWduICgpIHtcbiAgICAvLyAtMCA9IDBcbiAgICBpZiAodGhpcy5sZW5ndGggPT09IDEgJiYgdGhpcy53b3Jkc1swXSA9PT0gMCkge1xuICAgICAgdGhpcy5uZWdhdGl2ZSA9IDA7XG4gICAgfVxuICAgIHJldHVybiB0aGlzO1xuICB9O1xuXG4gIC8vIENoZWNrIFN5bWJvbC5mb3IgYmVjYXVzZSBub3QgZXZlcnl3aGVyZSB3aGVyZSBTeW1ib2wgZGVmaW5lZFxuICAvLyBTZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvSmF2YVNjcmlwdC9SZWZlcmVuY2UvR2xvYmFsX09iamVjdHMvU3ltYm9sI0Jyb3dzZXJfY29tcGF0aWJpbGl0eVxuICBpZiAodHlwZW9mIFN5bWJvbCAhPT0gJ3VuZGVmaW5lZCcgJiYgdHlwZW9mIFN5bWJvbC5mb3IgPT09ICdmdW5jdGlvbicpIHtcbiAgICB0cnkge1xuICAgICAgQk4ucHJvdG90eXBlW1N5bWJvbC5mb3IoJ25vZGVqcy51dGlsLmluc3BlY3QuY3VzdG9tJyldID0gaW5zcGVjdDtcbiAgICB9IGNhdGNoIChlKSB7XG4gICAgICBCTi5wcm90b3R5cGUuaW5zcGVjdCA9IGluc3BlY3Q7XG4gICAgfVxuICB9IGVsc2Uge1xuICAgIEJOLnByb3RvdHlwZS5pbnNwZWN0ID0gaW5zcGVjdDtcbiAgfVxuXG4gIGZ1bmN0aW9uIGluc3BlY3QgKCkge1xuICAgIHJldHVybiAodGhpcy5yZWQgPyAnPEJOLVI6ICcgOiAnPEJOOiAnKSArIHRoaXMudG9TdHJpbmcoMTYpICsgJz4nO1xuICB9XG5cbiAgLypcblxuICB2YXIgemVyb3MgPSBbXTtcbiAgdmFyIGdyb3VwU2l6ZXMgPSBbXTtcbiAgdmFyIGdyb3VwQmFzZXMgPSBbXTtcblxuICB2YXIgcyA9ICcnO1xuICB2YXIgaSA9IC0xO1xuICB3aGlsZSAoKytpIDwgQk4ud29yZFNpemUpIHtcbiAgICB6ZXJvc1tpXSA9IHM7XG4gICAgcyArPSAnMCc7XG4gIH1cbiAgZ3JvdXBTaXplc1swXSA9IDA7XG4gIGdyb3VwU2l6ZXNbMV0gPSAwO1xuICBncm91cEJhc2VzWzBdID0gMDtcbiAgZ3JvdXBCYXNlc1sxXSA9IDA7XG4gIHZhciBiYXNlID0gMiAtIDE7XG4gIHdoaWxlICgrK2Jhc2UgPCAzNiArIDEpIHtcbiAgICB2YXIgZ3JvdXBTaXplID0gMDtcbiAgICB2YXIgZ3JvdXBCYXNlID0gMTtcbiAgICB3aGlsZSAoZ3JvdXBCYXNlIDwgKDEgPDwgQk4ud29yZFNpemUpIC8gYmFzZSkge1xuICAgICAgZ3JvdXBCYXNlICo9IGJhc2U7XG4gICAgICBncm91cFNpemUgKz0gMTtcbiAgICB9XG4gICAgZ3JvdXBTaXplc1tiYXNlXSA9IGdyb3VwU2l6ZTtcbiAgICBncm91cEJhc2VzW2Jhc2VdID0gZ3JvdXBCYXNlO1xuICB9XG5cbiAgKi9cblxuICB2YXIgemVyb3MgPSBbXG4gICAgJycsXG4gICAgJzAnLFxuICAgICcwMCcsXG4gICAgJzAwMCcsXG4gICAgJzAwMDAnLFxuICAgICcwMDAwMCcsXG4gICAgJzAwMDAwMCcsXG4gICAgJzAwMDAwMDAnLFxuICAgICcwMDAwMDAwMCcsXG4gICAgJzAwMDAwMDAwMCcsXG4gICAgJzAwMDAwMDAwMDAnLFxuICAgICcwMDAwMDAwMDAwMCcsXG4gICAgJzAwMDAwMDAwMDAwMCcsXG4gICAgJzAwMDAwMDAwMDAwMDAnLFxuICAgICcwMDAwMDAwMDAwMDAwMCcsXG4gICAgJzAwMDAwMDAwMDAwMDAwMCcsXG4gICAgJzAwMDAwMDAwMDAwMDAwMDAnLFxuICAgICcwMDAwMDAwMDAwMDAwMDAwMCcsXG4gICAgJzAwMDAwMDAwMDAwMDAwMDAwMCcsXG4gICAgJzAwMDAwMDAwMDAwMDAwMDAwMDAnLFxuICAgICcwMDAwMDAwMDAwMDAwMDAwMDAwMCcsXG4gICAgJzAwMDAwMDAwMDAwMDAwMDAwMDAwMCcsXG4gICAgJzAwMDAwMDAwMDAwMDAwMDAwMDAwMDAnLFxuICAgICcwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMCcsXG4gICAgJzAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMCcsXG4gICAgJzAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAnXG4gIF07XG5cbiAgdmFyIGdyb3VwU2l6ZXMgPSBbXG4gICAgMCwgMCxcbiAgICAyNSwgMTYsIDEyLCAxMSwgMTAsIDksIDgsXG4gICAgOCwgNywgNywgNywgNywgNiwgNixcbiAgICA2LCA2LCA2LCA2LCA2LCA1LCA1LFxuICAgIDUsIDUsIDUsIDUsIDUsIDUsIDUsXG4gICAgNSwgNSwgNSwgNSwgNSwgNSwgNVxuICBdO1xuXG4gIHZhciBncm91cEJhc2VzID0gW1xuICAgIDAsIDAsXG4gICAgMzM1NTQ0MzIsIDQzMDQ2NzIxLCAxNjc3NzIxNiwgNDg4MjgxMjUsIDYwNDY2MTc2LCA0MDM1MzYwNywgMTY3NzcyMTYsXG4gICAgNDMwNDY3MjEsIDEwMDAwMDAwLCAxOTQ4NzE3MSwgMzU4MzE4MDgsIDYyNzQ4NTE3LCA3NTI5NTM2LCAxMTM5MDYyNSxcbiAgICAxNjc3NzIxNiwgMjQxMzc1NjksIDM0MDEyMjI0LCA0NzA0NTg4MSwgNjQwMDAwMDAsIDQwODQxMDEsIDUxNTM2MzIsXG4gICAgNjQzNjM0MywgNzk2MjYyNCwgOTc2NTYyNSwgMTE4ODEzNzYsIDE0MzQ4OTA3LCAxNzIxMDM2OCwgMjA1MTExNDksXG4gICAgMjQzMDAwMDAsIDI4NjI5MTUxLCAzMzU1NDQzMiwgMzkxMzUzOTMsIDQ1NDM1NDI0LCA1MjUyMTg3NSwgNjA0NjYxNzZcbiAgXTtcblxuICBCTi5wcm90b3R5cGUudG9TdHJpbmcgPSBmdW5jdGlvbiB0b1N0cmluZyAoYmFzZSwgcGFkZGluZykge1xuICAgIGJhc2UgPSBiYXNlIHx8IDEwO1xuICAgIHBhZGRpbmcgPSBwYWRkaW5nIHwgMCB8fCAxO1xuXG4gICAgdmFyIG91dDtcbiAgICBpZiAoYmFzZSA9PT0gMTYgfHwgYmFzZSA9PT0gJ2hleCcpIHtcbiAgICAgIG91dCA9ICcnO1xuICAgICAgdmFyIG9mZiA9IDA7XG4gICAgICB2YXIgY2FycnkgPSAwO1xuICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCB0aGlzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIHZhciB3ID0gdGhpcy53b3Jkc1tpXTtcbiAgICAgICAgdmFyIHdvcmQgPSAoKCh3IDw8IG9mZikgfCBjYXJyeSkgJiAweGZmZmZmZikudG9TdHJpbmcoMTYpO1xuICAgICAgICBjYXJyeSA9ICh3ID4+PiAoMjQgLSBvZmYpKSAmIDB4ZmZmZmZmO1xuICAgICAgICBvZmYgKz0gMjtcbiAgICAgICAgaWYgKG9mZiA+PSAyNikge1xuICAgICAgICAgIG9mZiAtPSAyNjtcbiAgICAgICAgICBpLS07XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGNhcnJ5ICE9PSAwIHx8IGkgIT09IHRoaXMubGVuZ3RoIC0gMSkge1xuICAgICAgICAgIG91dCA9IHplcm9zWzYgLSB3b3JkLmxlbmd0aF0gKyB3b3JkICsgb3V0O1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIG91dCA9IHdvcmQgKyBvdXQ7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGlmIChjYXJyeSAhPT0gMCkge1xuICAgICAgICBvdXQgPSBjYXJyeS50b1N0cmluZygxNikgKyBvdXQ7XG4gICAgICB9XG4gICAgICB3aGlsZSAob3V0Lmxlbmd0aCAlIHBhZGRpbmcgIT09IDApIHtcbiAgICAgICAgb3V0ID0gJzAnICsgb3V0O1xuICAgICAgfVxuICAgICAgaWYgKHRoaXMubmVnYXRpdmUgIT09IDApIHtcbiAgICAgICAgb3V0ID0gJy0nICsgb3V0O1xuICAgICAgfVxuICAgICAgcmV0dXJuIG91dDtcbiAgICB9XG5cbiAgICBpZiAoYmFzZSA9PT0gKGJhc2UgfCAwKSAmJiBiYXNlID49IDIgJiYgYmFzZSA8PSAzNikge1xuICAgICAgLy8gdmFyIGdyb3VwU2l6ZSA9IE1hdGguZmxvb3IoQk4ud29yZFNpemUgKiBNYXRoLkxOMiAvIE1hdGgubG9nKGJhc2UpKTtcbiAgICAgIHZhciBncm91cFNpemUgPSBncm91cFNpemVzW2Jhc2VdO1xuICAgICAgLy8gdmFyIGdyb3VwQmFzZSA9IE1hdGgucG93KGJhc2UsIGdyb3VwU2l6ZSk7XG4gICAgICB2YXIgZ3JvdXBCYXNlID0gZ3JvdXBCYXNlc1tiYXNlXTtcbiAgICAgIG91dCA9ICcnO1xuICAgICAgdmFyIGMgPSB0aGlzLmNsb25lKCk7XG4gICAgICBjLm5lZ2F0aXZlID0gMDtcbiAgICAgIHdoaWxlICghYy5pc1plcm8oKSkge1xuICAgICAgICB2YXIgciA9IGMubW9kcm4oZ3JvdXBCYXNlKS50b1N0cmluZyhiYXNlKTtcbiAgICAgICAgYyA9IGMuaWRpdm4oZ3JvdXBCYXNlKTtcblxuICAgICAgICBpZiAoIWMuaXNaZXJvKCkpIHtcbiAgICAgICAgICBvdXQgPSB6ZXJvc1tncm91cFNpemUgLSByLmxlbmd0aF0gKyByICsgb3V0O1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIG91dCA9IHIgKyBvdXQ7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGlmICh0aGlzLmlzWmVybygpKSB7XG4gICAgICAgIG91dCA9ICcwJyArIG91dDtcbiAgICAgIH1cbiAgICAgIHdoaWxlIChvdXQubGVuZ3RoICUgcGFkZGluZyAhPT0gMCkge1xuICAgICAgICBvdXQgPSAnMCcgKyBvdXQ7XG4gICAgICB9XG4gICAgICBpZiAodGhpcy5uZWdhdGl2ZSAhPT0gMCkge1xuICAgICAgICBvdXQgPSAnLScgKyBvdXQ7XG4gICAgICB9XG4gICAgICByZXR1cm4gb3V0O1xuICAgIH1cblxuICAgIGFzc2VydChmYWxzZSwgJ0Jhc2Ugc2hvdWxkIGJlIGJldHdlZW4gMiBhbmQgMzYnKTtcbiAgfTtcblxuICBCTi5wcm90b3R5cGUudG9OdW1iZXIgPSBmdW5jdGlvbiB0b051bWJlciAoKSB7XG4gICAgdmFyIHJldCA9IHRoaXMud29yZHNbMF07XG4gICAgaWYgKHRoaXMubGVuZ3RoID09PSAyKSB7XG4gICAgICByZXQgKz0gdGhpcy53b3Jkc1sxXSAqIDB4NDAwMDAwMDtcbiAgICB9IGVsc2UgaWYgKHRoaXMubGVuZ3RoID09PSAzICYmIHRoaXMud29yZHNbMl0gPT09IDB4MDEpIHtcbiAgICAgIC8vIE5PVEU6IGF0IHRoaXMgc3RhZ2UgaXQgaXMga25vd24gdGhhdCB0aGUgdG9wIGJpdCBpcyBzZXRcbiAgICAgIHJldCArPSAweDEwMDAwMDAwMDAwMDAwICsgKHRoaXMud29yZHNbMV0gKiAweDQwMDAwMDApO1xuICAgIH0gZWxzZSBpZiAodGhpcy5sZW5ndGggPiAyKSB7XG4gICAgICBhc3NlcnQoZmFsc2UsICdOdW1iZXIgY2FuIG9ubHkgc2FmZWx5IHN0b3JlIHVwIHRvIDUzIGJpdHMnKTtcbiAgICB9XG4gICAgcmV0dXJuICh0aGlzLm5lZ2F0aXZlICE9PSAwKSA/IC1yZXQgOiByZXQ7XG4gIH07XG5cbiAgQk4ucHJvdG90eXBlLnRvSlNPTiA9IGZ1bmN0aW9uIHRvSlNPTiAoKSB7XG4gICAgcmV0dXJuIHRoaXMudG9TdHJpbmcoMTYsIDIpO1xuICB9O1xuXG4gIGlmIChCdWZmZXIpIHtcbiAgICBCTi5wcm90b3R5cGUudG9CdWZmZXIgPSBmdW5jdGlvbiB0b0J1ZmZlciAoZW5kaWFuLCBsZW5ndGgpIHtcbiAgICAgIHJldHVybiB0aGlzLnRvQXJyYXlMaWtlKEJ1ZmZlciwgZW5kaWFuLCBsZW5ndGgpO1xuICAgIH07XG4gIH1cblxuICBCTi5wcm90b3R5cGUudG9BcnJheSA9IGZ1bmN0aW9uIHRvQXJyYXkgKGVuZGlhbiwgbGVuZ3RoKSB7XG4gICAgcmV0dXJuIHRoaXMudG9BcnJheUxpa2UoQXJyYXksIGVuZGlhbiwgbGVuZ3RoKTtcbiAgfTtcblxuICB2YXIgYWxsb2NhdGUgPSBmdW5jdGlvbiBhbGxvY2F0ZSAoQXJyYXlUeXBlLCBzaXplKSB7XG4gICAgaWYgKEFycmF5VHlwZS5hbGxvY1Vuc2FmZSkge1xuICAgICAgcmV0dXJuIEFycmF5VHlwZS5hbGxvY1Vuc2FmZShzaXplKTtcbiAgICB9XG4gICAgcmV0dXJuIG5ldyBBcnJheVR5cGUoc2l6ZSk7XG4gIH07XG5cbiAgQk4ucHJvdG90eXBlLnRvQXJyYXlMaWtlID0gZnVuY3Rpb24gdG9BcnJheUxpa2UgKEFycmF5VHlwZSwgZW5kaWFuLCBsZW5ndGgpIHtcbiAgICB0aGlzLl9zdHJpcCgpO1xuXG4gICAgdmFyIGJ5dGVMZW5ndGggPSB0aGlzLmJ5dGVMZW5ndGgoKTtcbiAgICB2YXIgcmVxTGVuZ3RoID0gbGVuZ3RoIHx8IE1hdGgubWF4KDEsIGJ5dGVMZW5ndGgpO1xuICAgIGFzc2VydChieXRlTGVuZ3RoIDw9IHJlcUxlbmd0aCwgJ2J5dGUgYXJyYXkgbG9uZ2VyIHRoYW4gZGVzaXJlZCBsZW5ndGgnKTtcbiAgICBhc3NlcnQocmVxTGVuZ3RoID4gMCwgJ1JlcXVlc3RlZCBhcnJheSBsZW5ndGggPD0gMCcpO1xuXG4gICAgdmFyIHJlcyA9IGFsbG9jYXRlKEFycmF5VHlwZSwgcmVxTGVuZ3RoKTtcbiAgICB2YXIgcG9zdGZpeCA9IGVuZGlhbiA9PT0gJ2xlJyA/ICdMRScgOiAnQkUnO1xuICAgIHRoaXNbJ190b0FycmF5TGlrZScgKyBwb3N0Zml4XShyZXMsIGJ5dGVMZW5ndGgpO1xuICAgIHJldHVybiByZXM7XG4gIH07XG5cbiAgQk4ucHJvdG90eXBlLl90b0FycmF5TGlrZUxFID0gZnVuY3Rpb24gX3RvQXJyYXlMaWtlTEUgKHJlcywgYnl0ZUxlbmd0aCkge1xuICAgIHZhciBwb3NpdGlvbiA9IDA7XG4gICAgdmFyIGNhcnJ5ID0gMDtcblxuICAgIGZvciAodmFyIGkgPSAwLCBzaGlmdCA9IDA7IGkgPCB0aGlzLmxlbmd0aDsgaSsrKSB7XG4gICAgICB2YXIgd29yZCA9ICh0aGlzLndvcmRzW2ldIDw8IHNoaWZ0KSB8IGNhcnJ5O1xuXG4gICAgICByZXNbcG9zaXRpb24rK10gPSB3b3JkICYgMHhmZjtcbiAgICAgIGlmIChwb3NpdGlvbiA8IHJlcy5sZW5ndGgpIHtcbiAgICAgICAgcmVzW3Bvc2l0aW9uKytdID0gKHdvcmQgPj4gOCkgJiAweGZmO1xuICAgICAgfVxuICAgICAgaWYgKHBvc2l0aW9uIDwgcmVzLmxlbmd0aCkge1xuICAgICAgICByZXNbcG9zaXRpb24rK10gPSAod29yZCA+PiAxNikgJiAweGZmO1xuICAgICAgfVxuXG4gICAgICBpZiAoc2hpZnQgPT09IDYpIHtcbiAgICAgICAgaWYgKHBvc2l0aW9uIDwgcmVzLmxlbmd0aCkge1xuICAgICAgICAgIHJlc1twb3NpdGlvbisrXSA9ICh3b3JkID4+IDI0KSAmIDB4ZmY7XG4gICAgICAgIH1cbiAgICAgICAgY2FycnkgPSAwO1xuICAgICAgICBzaGlmdCA9IDA7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBjYXJyeSA9IHdvcmQgPj4+IDI0O1xuICAgICAgICBzaGlmdCArPSAyO1xuICAgICAgfVxuICAgIH1cblxuICAgIGlmIChwb3NpdGlvbiA8IHJlcy5sZW5ndGgpIHtcbiAgICAgIHJlc1twb3NpdGlvbisrXSA9IGNhcnJ5O1xuXG4gICAgICB3aGlsZSAocG9zaXRpb24gPCByZXMubGVuZ3RoKSB7XG4gICAgICAgIHJlc1twb3NpdGlvbisrXSA9IDA7XG4gICAgICB9XG4gICAgfVxuICB9O1xuXG4gIEJOLnByb3RvdHlwZS5fdG9BcnJheUxpa2VCRSA9IGZ1bmN0aW9uIF90b0FycmF5TGlrZUJFIChyZXMsIGJ5dGVMZW5ndGgpIHtcbiAgICB2YXIgcG9zaXRpb24gPSByZXMubGVuZ3RoIC0gMTtcbiAgICB2YXIgY2FycnkgPSAwO1xuXG4gICAgZm9yICh2YXIgaSA9IDAsIHNoaWZ0ID0gMDsgaSA8IHRoaXMubGVuZ3RoOyBpKyspIHtcbiAgICAgIHZhciB3b3JkID0gKHRoaXMud29yZHNbaV0gPDwgc2hpZnQpIHwgY2Fycnk7XG5cbiAgICAgIHJlc1twb3NpdGlvbi0tXSA9IHdvcmQgJiAweGZmO1xuICAgICAgaWYgKHBvc2l0aW9uID49IDApIHtcbiAgICAgICAgcmVzW3Bvc2l0aW9uLS1dID0gKHdvcmQgPj4gOCkgJiAweGZmO1xuICAgICAgfVxuICAgICAgaWYgKHBvc2l0aW9uID49IDApIHtcbiAgICAgICAgcmVzW3Bvc2l0aW9uLS1dID0gKHdvcmQgPj4gMTYpICYgMHhmZjtcbiAgICAgIH1cblxuICAgICAgaWYgKHNoaWZ0ID09PSA2KSB7XG4gICAgICAgIGlmIChwb3NpdGlvbiA+PSAwKSB7XG4gICAgICAgICAgcmVzW3Bvc2l0aW9uLS1dID0gKHdvcmQgPj4gMjQpICYgMHhmZjtcbiAgICAgICAgfVxuICAgICAgICBjYXJyeSA9IDA7XG4gICAgICAgIHNoaWZ0ID0gMDtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGNhcnJ5ID0gd29yZCA+Pj4gMjQ7XG4gICAgICAgIHNoaWZ0ICs9IDI7XG4gICAgICB9XG4gICAgfVxuXG4gICAgaWYgKHBvc2l0aW9uID49IDApIHtcbiAgICAgIHJlc1twb3NpdGlvbi0tXSA9IGNhcnJ5O1xuXG4gICAgICB3aGlsZSAocG9zaXRpb24gPj0gMCkge1xuICAgICAgICByZXNbcG9zaXRpb24tLV0gPSAwO1xuICAgICAgfVxuICAgIH1cbiAgfTtcblxuICBpZiAoTWF0aC5jbHozMikge1xuICAgIEJOLnByb3RvdHlwZS5fY291bnRCaXRzID0gZnVuY3Rpb24gX2NvdW50Qml0cyAodykge1xuICAgICAgcmV0dXJuIDMyIC0gTWF0aC5jbHozMih3KTtcbiAgICB9O1xuICB9IGVsc2Uge1xuICAgIEJOLnByb3RvdHlwZS5fY291bnRCaXRzID0gZnVuY3Rpb24gX2NvdW50Qml0cyAodykge1xuICAgICAgdmFyIHQgPSB3O1xuICAgICAgdmFyIHIgPSAwO1xuICAgICAgaWYgKHQgPj0gMHgxMDAwKSB7XG4gICAgICAgIHIgKz0gMTM7XG4gICAgICAgIHQgPj4+PSAxMztcbiAgICAgIH1cbiAgICAgIGlmICh0ID49IDB4NDApIHtcbiAgICAgICAgciArPSA3O1xuICAgICAgICB0ID4+Pj0gNztcbiAgICAgIH1cbiAgICAgIGlmICh0ID49IDB4OCkge1xuICAgICAgICByICs9IDQ7XG4gICAgICAgIHQgPj4+PSA0O1xuICAgICAgfVxuICAgICAgaWYgKHQgPj0gMHgwMikge1xuICAgICAgICByICs9IDI7XG4gICAgICAgIHQgPj4+PSAyO1xuICAgICAgfVxuICAgICAgcmV0dXJuIHIgKyB0O1xuICAgIH07XG4gIH1cblxuICBCTi5wcm90b3R5cGUuX3plcm9CaXRzID0gZnVuY3Rpb24gX3plcm9CaXRzICh3KSB7XG4gICAgLy8gU2hvcnQtY3V0XG4gICAgaWYgKHcgPT09IDApIHJldHVybiAyNjtcblxuICAgIHZhciB0ID0gdztcbiAgICB2YXIgciA9IDA7XG4gICAgaWYgKCh0ICYgMHgxZmZmKSA9PT0gMCkge1xuICAgICAgciArPSAxMztcbiAgICAgIHQgPj4+PSAxMztcbiAgICB9XG4gICAgaWYgKCh0ICYgMHg3ZikgPT09IDApIHtcbiAgICAgIHIgKz0gNztcbiAgICAgIHQgPj4+PSA3O1xuICAgIH1cbiAgICBpZiAoKHQgJiAweGYpID09PSAwKSB7XG4gICAgICByICs9IDQ7XG4gICAgICB0ID4+Pj0gNDtcbiAgICB9XG4gICAgaWYgKCh0ICYgMHgzKSA9PT0gMCkge1xuICAgICAgciArPSAyO1xuICAgICAgdCA+Pj49IDI7XG4gICAgfVxuICAgIGlmICgodCAmIDB4MSkgPT09IDApIHtcbiAgICAgIHIrKztcbiAgICB9XG4gICAgcmV0dXJuIHI7XG4gIH07XG5cbiAgLy8gUmV0dXJuIG51bWJlciBvZiB1c2VkIGJpdHMgaW4gYSBCTlxuICBCTi5wcm90b3R5cGUuYml0TGVuZ3RoID0gZnVuY3Rpb24gYml0TGVuZ3RoICgpIHtcbiAgICB2YXIgdyA9IHRoaXMud29yZHNbdGhpcy5sZW5ndGggLSAxXTtcbiAgICB2YXIgaGkgPSB0aGlzLl9jb3VudEJpdHModyk7XG4gICAgcmV0dXJuICh0aGlzLmxlbmd0aCAtIDEpICogMjYgKyBoaTtcbiAgfTtcblxuICBmdW5jdGlvbiB0b0JpdEFycmF5IChudW0pIHtcbiAgICB2YXIgdyA9IG5ldyBBcnJheShudW0uYml0TGVuZ3RoKCkpO1xuXG4gICAgZm9yICh2YXIgYml0ID0gMDsgYml0IDwgdy5sZW5ndGg7IGJpdCsrKSB7XG4gICAgICB2YXIgb2ZmID0gKGJpdCAvIDI2KSB8IDA7XG4gICAgICB2YXIgd2JpdCA9IGJpdCAlIDI2O1xuXG4gICAgICB3W2JpdF0gPSAobnVtLndvcmRzW29mZl0gPj4+IHdiaXQpICYgMHgwMTtcbiAgICB9XG5cbiAgICByZXR1cm4gdztcbiAgfVxuXG4gIC8vIE51bWJlciBvZiB0cmFpbGluZyB6ZXJvIGJpdHNcbiAgQk4ucHJvdG90eXBlLnplcm9CaXRzID0gZnVuY3Rpb24gemVyb0JpdHMgKCkge1xuICAgIGlmICh0aGlzLmlzWmVybygpKSByZXR1cm4gMDtcblxuICAgIHZhciByID0gMDtcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IHRoaXMubGVuZ3RoOyBpKyspIHtcbiAgICAgIHZhciBiID0gdGhpcy5femVyb0JpdHModGhpcy53b3Jkc1tpXSk7XG4gICAgICByICs9IGI7XG4gICAgICBpZiAoYiAhPT0gMjYpIGJyZWFrO1xuICAgIH1cbiAgICByZXR1cm4gcjtcbiAgfTtcblxuICBCTi5wcm90b3R5cGUuYnl0ZUxlbmd0aCA9IGZ1bmN0aW9uIGJ5dGVMZW5ndGggKCkge1xuICAgIHJldHVybiBNYXRoLmNlaWwodGhpcy5iaXRMZW5ndGgoKSAvIDgpO1xuICB9O1xuXG4gIEJOLnByb3RvdHlwZS50b1R3b3MgPSBmdW5jdGlvbiB0b1R3b3MgKHdpZHRoKSB7XG4gICAgaWYgKHRoaXMubmVnYXRpdmUgIT09IDApIHtcbiAgICAgIHJldHVybiB0aGlzLmFicygpLmlub3RuKHdpZHRoKS5pYWRkbigxKTtcbiAgICB9XG4gICAgcmV0dXJuIHRoaXMuY2xvbmUoKTtcbiAgfTtcblxuICBCTi5wcm90b3R5cGUuZnJvbVR3b3MgPSBmdW5jdGlvbiBmcm9tVHdvcyAod2lkdGgpIHtcbiAgICBpZiAodGhpcy50ZXN0bih3aWR0aCAtIDEpKSB7XG4gICAgICByZXR1cm4gdGhpcy5ub3RuKHdpZHRoKS5pYWRkbigxKS5pbmVnKCk7XG4gICAgfVxuICAgIHJldHVybiB0aGlzLmNsb25lKCk7XG4gIH07XG5cbiAgQk4ucHJvdG90eXBlLmlzTmVnID0gZnVuY3Rpb24gaXNOZWcgKCkge1xuICAgIHJldHVybiB0aGlzLm5lZ2F0aXZlICE9PSAwO1xuICB9O1xuXG4gIC8vIFJldHVybiBuZWdhdGl2ZSBjbG9uZSBvZiBgdGhpc2BcbiAgQk4ucHJvdG90eXBlLm5lZyA9IGZ1bmN0aW9uIG5lZyAoKSB7XG4gICAgcmV0dXJuIHRoaXMuY2xvbmUoKS5pbmVnKCk7XG4gIH07XG5cbiAgQk4ucHJvdG90eXBlLmluZWcgPSBmdW5jdGlvbiBpbmVnICgpIHtcbiAgICBpZiAoIXRoaXMuaXNaZXJvKCkpIHtcbiAgICAgIHRoaXMubmVnYXRpdmUgXj0gMTtcbiAgICB9XG5cbiAgICByZXR1cm4gdGhpcztcbiAgfTtcblxuICAvLyBPciBgbnVtYCB3aXRoIGB0aGlzYCBpbi1wbGFjZVxuICBCTi5wcm90b3R5cGUuaXVvciA9IGZ1bmN0aW9uIGl1b3IgKG51bSkge1xuICAgIHdoaWxlICh0aGlzLmxlbmd0aCA8IG51bS5sZW5ndGgpIHtcbiAgICAgIHRoaXMud29yZHNbdGhpcy5sZW5ndGgrK10gPSAwO1xuICAgIH1cblxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbnVtLmxlbmd0aDsgaSsrKSB7XG4gICAgICB0aGlzLndvcmRzW2ldID0gdGhpcy53b3Jkc1tpXSB8IG51bS53b3Jkc1tpXTtcbiAgICB9XG5cbiAgICByZXR1cm4gdGhpcy5fc3RyaXAoKTtcbiAgfTtcblxuICBCTi5wcm90b3R5cGUuaW9yID0gZnVuY3Rpb24gaW9yIChudW0pIHtcbiAgICBhc3NlcnQoKHRoaXMubmVnYXRpdmUgfCBudW0ubmVnYXRpdmUpID09PSAwKTtcbiAgICByZXR1cm4gdGhpcy5pdW9yKG51bSk7XG4gIH07XG5cbiAgLy8gT3IgYG51bWAgd2l0aCBgdGhpc2BcbiAgQk4ucHJvdG90eXBlLm9yID0gZnVuY3Rpb24gb3IgKG51bSkge1xuICAgIGlmICh0aGlzLmxlbmd0aCA+IG51bS5sZW5ndGgpIHJldHVybiB0aGlzLmNsb25lKCkuaW9yKG51bSk7XG4gICAgcmV0dXJuIG51bS5jbG9uZSgpLmlvcih0aGlzKTtcbiAgfTtcblxuICBCTi5wcm90b3R5cGUudW9yID0gZnVuY3Rpb24gdW9yIChudW0pIHtcbiAgICBpZiAodGhpcy5sZW5ndGggPiBudW0ubGVuZ3RoKSByZXR1cm4gdGhpcy5jbG9uZSgpLml1b3IobnVtKTtcbiAgICByZXR1cm4gbnVtLmNsb25lKCkuaXVvcih0aGlzKTtcbiAgfTtcblxuICAvLyBBbmQgYG51bWAgd2l0aCBgdGhpc2AgaW4tcGxhY2VcbiAgQk4ucHJvdG90eXBlLml1YW5kID0gZnVuY3Rpb24gaXVhbmQgKG51bSkge1xuICAgIC8vIGIgPSBtaW4tbGVuZ3RoKG51bSwgdGhpcylcbiAgICB2YXIgYjtcbiAgICBpZiAodGhpcy5sZW5ndGggPiBudW0ubGVuZ3RoKSB7XG4gICAgICBiID0gbnVtO1xuICAgIH0gZWxzZSB7XG4gICAgICBiID0gdGhpcztcbiAgICB9XG5cbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGIubGVuZ3RoOyBpKyspIHtcbiAgICAgIHRoaXMud29yZHNbaV0gPSB0aGlzLndvcmRzW2ldICYgbnVtLndvcmRzW2ldO1xuICAgIH1cblxuICAgIHRoaXMubGVuZ3RoID0gYi5sZW5ndGg7XG5cbiAgICByZXR1cm4gdGhpcy5fc3RyaXAoKTtcbiAgfTtcblxuICBCTi5wcm90b3R5cGUuaWFuZCA9IGZ1bmN0aW9uIGlhbmQgKG51bSkge1xuICAgIGFzc2VydCgodGhpcy5uZWdhdGl2ZSB8IG51bS5uZWdhdGl2ZSkgPT09IDApO1xuICAgIHJldHVybiB0aGlzLml1YW5kKG51bSk7XG4gIH07XG5cbiAgLy8gQW5kIGBudW1gIHdpdGggYHRoaXNgXG4gIEJOLnByb3RvdHlwZS5hbmQgPSBmdW5jdGlvbiBhbmQgKG51bSkge1xuICAgIGlmICh0aGlzLmxlbmd0aCA+IG51bS5sZW5ndGgpIHJldHVybiB0aGlzLmNsb25lKCkuaWFuZChudW0pO1xuICAgIHJldHVybiBudW0uY2xvbmUoKS5pYW5kKHRoaXMpO1xuICB9O1xuXG4gIEJOLnByb3RvdHlwZS51YW5kID0gZnVuY3Rpb24gdWFuZCAobnVtKSB7XG4gICAgaWYgKHRoaXMubGVuZ3RoID4gbnVtLmxlbmd0aCkgcmV0dXJuIHRoaXMuY2xvbmUoKS5pdWFuZChudW0pO1xuICAgIHJldHVybiBudW0uY2xvbmUoKS5pdWFuZCh0aGlzKTtcbiAgfTtcblxuICAvLyBYb3IgYG51bWAgd2l0aCBgdGhpc2AgaW4tcGxhY2VcbiAgQk4ucHJvdG90eXBlLml1eG9yID0gZnVuY3Rpb24gaXV4b3IgKG51bSkge1xuICAgIC8vIGEubGVuZ3RoID4gYi5sZW5ndGhcbiAgICB2YXIgYTtcbiAgICB2YXIgYjtcbiAgICBpZiAodGhpcy5sZW5ndGggPiBudW0ubGVuZ3RoKSB7XG4gICAgICBhID0gdGhpcztcbiAgICAgIGIgPSBudW07XG4gICAgfSBlbHNlIHtcbiAgICAgIGEgPSBudW07XG4gICAgICBiID0gdGhpcztcbiAgICB9XG5cbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGIubGVuZ3RoOyBpKyspIHtcbiAgICAgIHRoaXMud29yZHNbaV0gPSBhLndvcmRzW2ldIF4gYi53b3Jkc1tpXTtcbiAgICB9XG5cbiAgICBpZiAodGhpcyAhPT0gYSkge1xuICAgICAgZm9yICg7IGkgPCBhLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIHRoaXMud29yZHNbaV0gPSBhLndvcmRzW2ldO1xuICAgICAgfVxuICAgIH1cblxuICAgIHRoaXMubGVuZ3RoID0gYS5sZW5ndGg7XG5cbiAgICByZXR1cm4gdGhpcy5fc3RyaXAoKTtcbiAgfTtcblxuICBCTi5wcm90b3R5cGUuaXhvciA9IGZ1bmN0aW9uIGl4b3IgKG51bSkge1xuICAgIGFzc2VydCgodGhpcy5uZWdhdGl2ZSB8IG51bS5uZWdhdGl2ZSkgPT09IDApO1xuICAgIHJldHVybiB0aGlzLml1eG9yKG51bSk7XG4gIH07XG5cbiAgLy8gWG9yIGBudW1gIHdpdGggYHRoaXNgXG4gIEJOLnByb3RvdHlwZS54b3IgPSBmdW5jdGlvbiB4b3IgKG51bSkge1xuICAgIGlmICh0aGlzLmxlbmd0aCA+IG51bS5sZW5ndGgpIHJldHVybiB0aGlzLmNsb25lKCkuaXhvcihudW0pO1xuICAgIHJldHVybiBudW0uY2xvbmUoKS5peG9yKHRoaXMpO1xuICB9O1xuXG4gIEJOLnByb3RvdHlwZS51eG9yID0gZnVuY3Rpb24gdXhvciAobnVtKSB7XG4gICAgaWYgKHRoaXMubGVuZ3RoID4gbnVtLmxlbmd0aCkgcmV0dXJuIHRoaXMuY2xvbmUoKS5pdXhvcihudW0pO1xuICAgIHJldHVybiBudW0uY2xvbmUoKS5pdXhvcih0aGlzKTtcbiAgfTtcblxuICAvLyBOb3QgYGB0aGlzYGAgd2l0aCBgYHdpZHRoYGAgYml0d2lkdGhcbiAgQk4ucHJvdG90eXBlLmlub3RuID0gZnVuY3Rpb24gaW5vdG4gKHdpZHRoKSB7XG4gICAgYXNzZXJ0KHR5cGVvZiB3aWR0aCA9PT0gJ251bWJlcicgJiYgd2lkdGggPj0gMCk7XG5cbiAgICB2YXIgYnl0ZXNOZWVkZWQgPSBNYXRoLmNlaWwod2lkdGggLyAyNikgfCAwO1xuICAgIHZhciBiaXRzTGVmdCA9IHdpZHRoICUgMjY7XG5cbiAgICAvLyBFeHRlbmQgdGhlIGJ1ZmZlciB3aXRoIGxlYWRpbmcgemVyb2VzXG4gICAgdGhpcy5fZXhwYW5kKGJ5dGVzTmVlZGVkKTtcblxuICAgIGlmIChiaXRzTGVmdCA+IDApIHtcbiAgICAgIGJ5dGVzTmVlZGVkLS07XG4gICAgfVxuXG4gICAgLy8gSGFuZGxlIGNvbXBsZXRlIHdvcmRzXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBieXRlc05lZWRlZDsgaSsrKSB7XG4gICAgICB0aGlzLndvcmRzW2ldID0gfnRoaXMud29yZHNbaV0gJiAweDNmZmZmZmY7XG4gICAgfVxuXG4gICAgLy8gSGFuZGxlIHRoZSByZXNpZHVlXG4gICAgaWYgKGJpdHNMZWZ0ID4gMCkge1xuICAgICAgdGhpcy53b3Jkc1tpXSA9IH50aGlzLndvcmRzW2ldICYgKDB4M2ZmZmZmZiA+PiAoMjYgLSBiaXRzTGVmdCkpO1xuICAgIH1cblxuICAgIC8vIEFuZCByZW1vdmUgbGVhZGluZyB6ZXJvZXNcbiAgICByZXR1cm4gdGhpcy5fc3RyaXAoKTtcbiAgfTtcblxuICBCTi5wcm90b3R5cGUubm90biA9IGZ1bmN0aW9uIG5vdG4gKHdpZHRoKSB7XG4gICAgcmV0dXJuIHRoaXMuY2xvbmUoKS5pbm90bih3aWR0aCk7XG4gIH07XG5cbiAgLy8gU2V0IGBiaXRgIG9mIGB0aGlzYFxuICBCTi5wcm90b3R5cGUuc2V0biA9IGZ1bmN0aW9uIHNldG4gKGJpdCwgdmFsKSB7XG4gICAgYXNzZXJ0KHR5cGVvZiBiaXQgPT09ICdudW1iZXInICYmIGJpdCA+PSAwKTtcblxuICAgIHZhciBvZmYgPSAoYml0IC8gMjYpIHwgMDtcbiAgICB2YXIgd2JpdCA9IGJpdCAlIDI2O1xuXG4gICAgdGhpcy5fZXhwYW5kKG9mZiArIDEpO1xuXG4gICAgaWYgKHZhbCkge1xuICAgICAgdGhpcy53b3Jkc1tvZmZdID0gdGhpcy53b3Jkc1tvZmZdIHwgKDEgPDwgd2JpdCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMud29yZHNbb2ZmXSA9IHRoaXMud29yZHNbb2ZmXSAmIH4oMSA8PCB3Yml0KTtcbiAgICB9XG5cbiAgICByZXR1cm4gdGhpcy5fc3RyaXAoKTtcbiAgfTtcblxuICAvLyBBZGQgYG51bWAgdG8gYHRoaXNgIGluLXBsYWNlXG4gIEJOLnByb3RvdHlwZS5pYWRkID0gZnVuY3Rpb24gaWFkZCAobnVtKSB7XG4gICAgdmFyIHI7XG5cbiAgICAvLyBuZWdhdGl2ZSArIHBvc2l0aXZlXG4gICAgaWYgKHRoaXMubmVnYXRpdmUgIT09IDAgJiYgbnVtLm5lZ2F0aXZlID09PSAwKSB7XG4gICAgICB0aGlzLm5lZ2F0aXZlID0gMDtcbiAgICAgIHIgPSB0aGlzLmlzdWIobnVtKTtcbiAgICAgIHRoaXMubmVnYXRpdmUgXj0gMTtcbiAgICAgIHJldHVybiB0aGlzLl9ub3JtU2lnbigpO1xuXG4gICAgLy8gcG9zaXRpdmUgKyBuZWdhdGl2ZVxuICAgIH0gZWxzZSBpZiAodGhpcy5uZWdhdGl2ZSA9PT0gMCAmJiBudW0ubmVnYXRpdmUgIT09IDApIHtcbiAgICAgIG51bS5uZWdhdGl2ZSA9IDA7XG4gICAgICByID0gdGhpcy5pc3ViKG51bSk7XG4gICAgICBudW0ubmVnYXRpdmUgPSAxO1xuICAgICAgcmV0dXJuIHIuX25vcm1TaWduKCk7XG4gICAgfVxuXG4gICAgLy8gYS5sZW5ndGggPiBiLmxlbmd0aFxuICAgIHZhciBhLCBiO1xuICAgIGlmICh0aGlzLmxlbmd0aCA+IG51bS5sZW5ndGgpIHtcbiAgICAgIGEgPSB0aGlzO1xuICAgICAgYiA9IG51bTtcbiAgICB9IGVsc2Uge1xuICAgICAgYSA9IG51bTtcbiAgICAgIGIgPSB0aGlzO1xuICAgIH1cblxuICAgIHZhciBjYXJyeSA9IDA7XG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBiLmxlbmd0aDsgaSsrKSB7XG4gICAgICByID0gKGEud29yZHNbaV0gfCAwKSArIChiLndvcmRzW2ldIHwgMCkgKyBjYXJyeTtcbiAgICAgIHRoaXMud29yZHNbaV0gPSByICYgMHgzZmZmZmZmO1xuICAgICAgY2FycnkgPSByID4+PiAyNjtcbiAgICB9XG4gICAgZm9yICg7IGNhcnJ5ICE9PSAwICYmIGkgPCBhLmxlbmd0aDsgaSsrKSB7XG4gICAgICByID0gKGEud29yZHNbaV0gfCAwKSArIGNhcnJ5O1xuICAgICAgdGhpcy53b3Jkc1tpXSA9IHIgJiAweDNmZmZmZmY7XG4gICAgICBjYXJyeSA9IHIgPj4+IDI2O1xuICAgIH1cblxuICAgIHRoaXMubGVuZ3RoID0gYS5sZW5ndGg7XG4gICAgaWYgKGNhcnJ5ICE9PSAwKSB7XG4gICAgICB0aGlzLndvcmRzW3RoaXMubGVuZ3RoXSA9IGNhcnJ5O1xuICAgICAgdGhpcy5sZW5ndGgrKztcbiAgICAvLyBDb3B5IHRoZSByZXN0IG9mIHRoZSB3b3Jkc1xuICAgIH0gZWxzZSBpZiAoYSAhPT0gdGhpcykge1xuICAgICAgZm9yICg7IGkgPCBhLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIHRoaXMud29yZHNbaV0gPSBhLndvcmRzW2ldO1xuICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiB0aGlzO1xuICB9O1xuXG4gIC8vIEFkZCBgbnVtYCB0byBgdGhpc2BcbiAgQk4ucHJvdG90eXBlLmFkZCA9IGZ1bmN0aW9uIGFkZCAobnVtKSB7XG4gICAgdmFyIHJlcztcbiAgICBpZiAobnVtLm5lZ2F0aXZlICE9PSAwICYmIHRoaXMubmVnYXRpdmUgPT09IDApIHtcbiAgICAgIG51bS5uZWdhdGl2ZSA9IDA7XG4gICAgICByZXMgPSB0aGlzLnN1YihudW0pO1xuICAgICAgbnVtLm5lZ2F0aXZlIF49IDE7XG4gICAgICByZXR1cm4gcmVzO1xuICAgIH0gZWxzZSBpZiAobnVtLm5lZ2F0aXZlID09PSAwICYmIHRoaXMubmVnYXRpdmUgIT09IDApIHtcbiAgICAgIHRoaXMubmVnYXRpdmUgPSAwO1xuICAgICAgcmVzID0gbnVtLnN1Yih0aGlzKTtcbiAgICAgIHRoaXMubmVnYXRpdmUgPSAxO1xuICAgICAgcmV0dXJuIHJlcztcbiAgICB9XG5cbiAgICBpZiAodGhpcy5sZW5ndGggPiBudW0ubGVuZ3RoKSByZXR1cm4gdGhpcy5jbG9uZSgpLmlhZGQobnVtKTtcblxuICAgIHJldHVybiBudW0uY2xvbmUoKS5pYWRkKHRoaXMpO1xuICB9O1xuXG4gIC8vIFN1YnRyYWN0IGBudW1gIGZyb20gYHRoaXNgIGluLXBsYWNlXG4gIEJOLnByb3RvdHlwZS5pc3ViID0gZnVuY3Rpb24gaXN1YiAobnVtKSB7XG4gICAgLy8gdGhpcyAtICgtbnVtKSA9IHRoaXMgKyBudW1cbiAgICBpZiAobnVtLm5lZ2F0aXZlICE9PSAwKSB7XG4gICAgICBudW0ubmVnYXRpdmUgPSAwO1xuICAgICAgdmFyIHIgPSB0aGlzLmlhZGQobnVtKTtcbiAgICAgIG51bS5uZWdhdGl2ZSA9IDE7XG4gICAgICByZXR1cm4gci5fbm9ybVNpZ24oKTtcblxuICAgIC8vIC10aGlzIC0gbnVtID0gLSh0aGlzICsgbnVtKVxuICAgIH0gZWxzZSBpZiAodGhpcy5uZWdhdGl2ZSAhPT0gMCkge1xuICAgICAgdGhpcy5uZWdhdGl2ZSA9IDA7XG4gICAgICB0aGlzLmlhZGQobnVtKTtcbiAgICAgIHRoaXMubmVnYXRpdmUgPSAxO1xuICAgICAgcmV0dXJuIHRoaXMuX25vcm1TaWduKCk7XG4gICAgfVxuXG4gICAgLy8gQXQgdGhpcyBwb2ludCBib3RoIG51bWJlcnMgYXJlIHBvc2l0aXZlXG4gICAgdmFyIGNtcCA9IHRoaXMuY21wKG51bSk7XG5cbiAgICAvLyBPcHRpbWl6YXRpb24gLSB6ZXJvaWZ5XG4gICAgaWYgKGNtcCA9PT0gMCkge1xuICAgICAgdGhpcy5uZWdhdGl2ZSA9IDA7XG4gICAgICB0aGlzLmxlbmd0aCA9IDE7XG4gICAgICB0aGlzLndvcmRzWzBdID0gMDtcbiAgICAgIHJldHVybiB0aGlzO1xuICAgIH1cblxuICAgIC8vIGEgPiBiXG4gICAgdmFyIGEsIGI7XG4gICAgaWYgKGNtcCA+IDApIHtcbiAgICAgIGEgPSB0aGlzO1xuICAgICAgYiA9IG51bTtcbiAgICB9IGVsc2Uge1xuICAgICAgYSA9IG51bTtcbiAgICAgIGIgPSB0aGlzO1xuICAgIH1cblxuICAgIHZhciBjYXJyeSA9IDA7XG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBiLmxlbmd0aDsgaSsrKSB7XG4gICAgICByID0gKGEud29yZHNbaV0gfCAwKSAtIChiLndvcmRzW2ldIHwgMCkgKyBjYXJyeTtcbiAgICAgIGNhcnJ5ID0gciA+PiAyNjtcbiAgICAgIHRoaXMud29yZHNbaV0gPSByICYgMHgzZmZmZmZmO1xuICAgIH1cbiAgICBmb3IgKDsgY2FycnkgIT09IDAgJiYgaSA8IGEubGVuZ3RoOyBpKyspIHtcbiAgICAgIHIgPSAoYS53b3Jkc1tpXSB8IDApICsgY2Fycnk7XG4gICAgICBjYXJyeSA9IHIgPj4gMjY7XG4gICAgICB0aGlzLndvcmRzW2ldID0gciAmIDB4M2ZmZmZmZjtcbiAgICB9XG5cbiAgICAvLyBDb3B5IHJlc3Qgb2YgdGhlIHdvcmRzXG4gICAgaWYgKGNhcnJ5ID09PSAwICYmIGkgPCBhLmxlbmd0aCAmJiBhICE9PSB0aGlzKSB7XG4gICAgICBmb3IgKDsgaSA8IGEubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgdGhpcy53b3Jkc1tpXSA9IGEud29yZHNbaV07XG4gICAgICB9XG4gICAgfVxuXG4gICAgdGhpcy5sZW5ndGggPSBNYXRoLm1heCh0aGlzLmxlbmd0aCwgaSk7XG5cbiAgICBpZiAoYSAhPT0gdGhpcykge1xuICAgICAgdGhpcy5uZWdhdGl2ZSA9IDE7XG4gICAgfVxuXG4gICAgcmV0dXJuIHRoaXMuX3N0cmlwKCk7XG4gIH07XG5cbiAgLy8gU3VidHJhY3QgYG51bWAgZnJvbSBgdGhpc2BcbiAgQk4ucHJvdG90eXBlLnN1YiA9IGZ1bmN0aW9uIHN1YiAobnVtKSB7XG4gICAgcmV0dXJuIHRoaXMuY2xvbmUoKS5pc3ViKG51bSk7XG4gIH07XG5cbiAgZnVuY3Rpb24gc21hbGxNdWxUbyAoc2VsZiwgbnVtLCBvdXQpIHtcbiAgICBvdXQubmVnYXRpdmUgPSBudW0ubmVnYXRpdmUgXiBzZWxmLm5lZ2F0aXZlO1xuICAgIHZhciBsZW4gPSAoc2VsZi5sZW5ndGggKyBudW0ubGVuZ3RoKSB8IDA7XG4gICAgb3V0Lmxlbmd0aCA9IGxlbjtcbiAgICBsZW4gPSAobGVuIC0gMSkgfCAwO1xuXG4gICAgLy8gUGVlbCBvbmUgaXRlcmF0aW9uIChjb21waWxlciBjYW4ndCBkbyBpdCwgYmVjYXVzZSBvZiBjb2RlIGNvbXBsZXhpdHkpXG4gICAgdmFyIGEgPSBzZWxmLndvcmRzWzBdIHwgMDtcbiAgICB2YXIgYiA9IG51bS53b3Jkc1swXSB8IDA7XG4gICAgdmFyIHIgPSBhICogYjtcblxuICAgIHZhciBsbyA9IHIgJiAweDNmZmZmZmY7XG4gICAgdmFyIGNhcnJ5ID0gKHIgLyAweDQwMDAwMDApIHwgMDtcbiAgICBvdXQud29yZHNbMF0gPSBsbztcblxuICAgIGZvciAodmFyIGsgPSAxOyBrIDwgbGVuOyBrKyspIHtcbiAgICAgIC8vIFN1bSBhbGwgd29yZHMgd2l0aCB0aGUgc2FtZSBgaSArIGogPSBrYCBhbmQgYWNjdW11bGF0ZSBgbmNhcnJ5YCxcbiAgICAgIC8vIG5vdGUgdGhhdCBuY2FycnkgY291bGQgYmUgPj0gMHgzZmZmZmZmXG4gICAgICB2YXIgbmNhcnJ5ID0gY2FycnkgPj4+IDI2O1xuICAgICAgdmFyIHJ3b3JkID0gY2FycnkgJiAweDNmZmZmZmY7XG4gICAgICB2YXIgbWF4SiA9IE1hdGgubWluKGssIG51bS5sZW5ndGggLSAxKTtcbiAgICAgIGZvciAodmFyIGogPSBNYXRoLm1heCgwLCBrIC0gc2VsZi5sZW5ndGggKyAxKTsgaiA8PSBtYXhKOyBqKyspIHtcbiAgICAgICAgdmFyIGkgPSAoayAtIGopIHwgMDtcbiAgICAgICAgYSA9IHNlbGYud29yZHNbaV0gfCAwO1xuICAgICAgICBiID0gbnVtLndvcmRzW2pdIHwgMDtcbiAgICAgICAgciA9IGEgKiBiICsgcndvcmQ7XG4gICAgICAgIG5jYXJyeSArPSAociAvIDB4NDAwMDAwMCkgfCAwO1xuICAgICAgICByd29yZCA9IHIgJiAweDNmZmZmZmY7XG4gICAgICB9XG4gICAgICBvdXQud29yZHNba10gPSByd29yZCB8IDA7XG4gICAgICBjYXJyeSA9IG5jYXJyeSB8IDA7XG4gICAgfVxuICAgIGlmIChjYXJyeSAhPT0gMCkge1xuICAgICAgb3V0LndvcmRzW2tdID0gY2FycnkgfCAwO1xuICAgIH0gZWxzZSB7XG4gICAgICBvdXQubGVuZ3RoLS07XG4gICAgfVxuXG4gICAgcmV0dXJuIG91dC5fc3RyaXAoKTtcbiAgfVxuXG4gIC8vIFRPRE8oaW5kdXRueSk6IGl0IG1heSBiZSByZWFzb25hYmxlIHRvIG9taXQgaXQgZm9yIHVzZXJzIHdobyBkb24ndCBuZWVkXG4gIC8vIHRvIHdvcmsgd2l0aCAyNTYtYml0IG51bWJlcnMsIG90aGVyd2lzZSBpdCBnaXZlcyAyMCUgaW1wcm92ZW1lbnQgZm9yIDI1Ni1iaXRcbiAgLy8gbXVsdGlwbGljYXRpb24gKGxpa2UgZWxsaXB0aWMgc2VjcDI1NmsxKS5cbiAgdmFyIGNvbWIxME11bFRvID0gZnVuY3Rpb24gY29tYjEwTXVsVG8gKHNlbGYsIG51bSwgb3V0KSB7XG4gICAgdmFyIGEgPSBzZWxmLndvcmRzO1xuICAgIHZhciBiID0gbnVtLndvcmRzO1xuICAgIHZhciBvID0gb3V0LndvcmRzO1xuICAgIHZhciBjID0gMDtcbiAgICB2YXIgbG87XG4gICAgdmFyIG1pZDtcbiAgICB2YXIgaGk7XG4gICAgdmFyIGEwID0gYVswXSB8IDA7XG4gICAgdmFyIGFsMCA9IGEwICYgMHgxZmZmO1xuICAgIHZhciBhaDAgPSBhMCA+Pj4gMTM7XG4gICAgdmFyIGExID0gYVsxXSB8IDA7XG4gICAgdmFyIGFsMSA9IGExICYgMHgxZmZmO1xuICAgIHZhciBhaDEgPSBhMSA+Pj4gMTM7XG4gICAgdmFyIGEyID0gYVsyXSB8IDA7XG4gICAgdmFyIGFsMiA9IGEyICYgMHgxZmZmO1xuICAgIHZhciBhaDIgPSBhMiA+Pj4gMTM7XG4gICAgdmFyIGEzID0gYVszXSB8IDA7XG4gICAgdmFyIGFsMyA9IGEzICYgMHgxZmZmO1xuICAgIHZhciBhaDMgPSBhMyA+Pj4gMTM7XG4gICAgdmFyIGE0ID0gYVs0XSB8IDA7XG4gICAgdmFyIGFsNCA9IGE0ICYgMHgxZmZmO1xuICAgIHZhciBhaDQgPSBhNCA+Pj4gMTM7XG4gICAgdmFyIGE1ID0gYVs1XSB8IDA7XG4gICAgdmFyIGFsNSA9IGE1ICYgMHgxZmZmO1xuICAgIHZhciBhaDUgPSBhNSA+Pj4gMTM7XG4gICAgdmFyIGE2ID0gYVs2XSB8IDA7XG4gICAgdmFyIGFsNiA9IGE2ICYgMHgxZmZmO1xuICAgIHZhciBhaDYgPSBhNiA+Pj4gMTM7XG4gICAgdmFyIGE3ID0gYVs3XSB8IDA7XG4gICAgdmFyIGFsNyA9IGE3ICYgMHgxZmZmO1xuICAgIHZhciBhaDcgPSBhNyA+Pj4gMTM7XG4gICAgdmFyIGE4ID0gYVs4XSB8IDA7XG4gICAgdmFyIGFsOCA9IGE4ICYgMHgxZmZmO1xuICAgIHZhciBhaDggPSBhOCA+Pj4gMTM7XG4gICAgdmFyIGE5ID0gYVs5XSB8IDA7XG4gICAgdmFyIGFsOSA9IGE5ICYgMHgxZmZmO1xuICAgIHZhciBhaDkgPSBhOSA+Pj4gMTM7XG4gICAgdmFyIGIwID0gYlswXSB8IDA7XG4gICAgdmFyIGJsMCA9IGIwICYgMHgxZmZmO1xuICAgIHZhciBiaDAgPSBiMCA+Pj4gMTM7XG4gICAgdmFyIGIxID0gYlsxXSB8IDA7XG4gICAgdmFyIGJsMSA9IGIxICYgMHgxZmZmO1xuICAgIHZhciBiaDEgPSBiMSA+Pj4gMTM7XG4gICAgdmFyIGIyID0gYlsyXSB8IDA7XG4gICAgdmFyIGJsMiA9IGIyICYgMHgxZmZmO1xuICAgIHZhciBiaDIgPSBiMiA+Pj4gMTM7XG4gICAgdmFyIGIzID0gYlszXSB8IDA7XG4gICAgdmFyIGJsMyA9IGIzICYgMHgxZmZmO1xuICAgIHZhciBiaDMgPSBiMyA+Pj4gMTM7XG4gICAgdmFyIGI0ID0gYls0XSB8IDA7XG4gICAgdmFyIGJsNCA9IGI0ICYgMHgxZmZmO1xuICAgIHZhciBiaDQgPSBiNCA+Pj4gMTM7XG4gICAgdmFyIGI1ID0gYls1XSB8IDA7XG4gICAgdmFyIGJsNSA9IGI1ICYgMHgxZmZmO1xuICAgIHZhciBiaDUgPSBiNSA+Pj4gMTM7XG4gICAgdmFyIGI2ID0gYls2XSB8IDA7XG4gICAgdmFyIGJsNiA9IGI2ICYgMHgxZmZmO1xuICAgIHZhciBiaDYgPSBiNiA+Pj4gMTM7XG4gICAgdmFyIGI3ID0gYls3XSB8IDA7XG4gICAgdmFyIGJsNyA9IGI3ICYgMHgxZmZmO1xuICAgIHZhciBiaDcgPSBiNyA+Pj4gMTM7XG4gICAgdmFyIGI4ID0gYls4XSB8IDA7XG4gICAgdmFyIGJsOCA9IGI4ICYgMHgxZmZmO1xuICAgIHZhciBiaDggPSBiOCA+Pj4gMTM7XG4gICAgdmFyIGI5ID0gYls5XSB8IDA7XG4gICAgdmFyIGJsOSA9IGI5ICYgMHgxZmZmO1xuICAgIHZhciBiaDkgPSBiOSA+Pj4gMTM7XG5cbiAgICBvdXQubmVnYXRpdmUgPSBzZWxmLm5lZ2F0aXZlIF4gbnVtLm5lZ2F0aXZlO1xuICAgIG91dC5sZW5ndGggPSAxOTtcbiAgICAvKiBrID0gMCAqL1xuICAgIGxvID0gTWF0aC5pbXVsKGFsMCwgYmwwKTtcbiAgICBtaWQgPSBNYXRoLmltdWwoYWwwLCBiaDApO1xuICAgIG1pZCA9IChtaWQgKyBNYXRoLmltdWwoYWgwLCBibDApKSB8IDA7XG4gICAgaGkgPSBNYXRoLmltdWwoYWgwLCBiaDApO1xuICAgIHZhciB3MCA9ICgoKGMgKyBsbykgfCAwKSArICgobWlkICYgMHgxZmZmKSA8PCAxMykpIHwgMDtcbiAgICBjID0gKCgoaGkgKyAobWlkID4+PiAxMykpIHwgMCkgKyAodzAgPj4+IDI2KSkgfCAwO1xuICAgIHcwICY9IDB4M2ZmZmZmZjtcbiAgICAvKiBrID0gMSAqL1xuICAgIGxvID0gTWF0aC5pbXVsKGFsMSwgYmwwKTtcbiAgICBtaWQgPSBNYXRoLmltdWwoYWwxLCBiaDApO1xuICAgIG1pZCA9IChtaWQgKyBNYXRoLmltdWwoYWgxLCBibDApKSB8IDA7XG4gICAgaGkgPSBNYXRoLmltdWwoYWgxLCBiaDApO1xuICAgIGxvID0gKGxvICsgTWF0aC5pbXVsKGFsMCwgYmwxKSkgfCAwO1xuICAgIG1pZCA9IChtaWQgKyBNYXRoLmltdWwoYWwwLCBiaDEpKSB8IDA7XG4gICAgbWlkID0gKG1pZCArIE1hdGguaW11bChhaDAsIGJsMSkpIHwgMDtcbiAgICBoaSA9IChoaSArIE1hdGguaW11bChhaDAsIGJoMSkpIHwgMDtcbiAgICB2YXIgdzEgPSAoKChjICsgbG8pIHwgMCkgKyAoKG1pZCAmIDB4MWZmZikgPDwgMTMpKSB8IDA7XG4gICAgYyA9ICgoKGhpICsgKG1pZCA+Pj4gMTMpKSB8IDApICsgKHcxID4+PiAyNikpIHwgMDtcbiAgICB3MSAmPSAweDNmZmZmZmY7XG4gICAgLyogayA9IDIgKi9cbiAgICBsbyA9IE1hdGguaW11bChhbDIsIGJsMCk7XG4gICAgbWlkID0gTWF0aC5pbXVsKGFsMiwgYmgwKTtcbiAgICBtaWQgPSAobWlkICsgTWF0aC5pbXVsKGFoMiwgYmwwKSkgfCAwO1xuICAgIGhpID0gTWF0aC5pbXVsKGFoMiwgYmgwKTtcbiAgICBsbyA9IChsbyArIE1hdGguaW11bChhbDEsIGJsMSkpIHwgMDtcbiAgICBtaWQgPSAobWlkICsgTWF0aC5pbXVsKGFsMSwgYmgxKSkgfCAwO1xuICAgIG1pZCA9IChtaWQgKyBNYXRoLmltdWwoYWgxLCBibDEpKSB8IDA7XG4gICAgaGkgPSAoaGkgKyBNYXRoLmltdWwoYWgxLCBiaDEpKSB8IDA7XG4gICAgbG8gPSAobG8gKyBNYXRoLmltdWwoYWwwLCBibDIpKSB8IDA7XG4gICAgbWlkID0gKG1pZCArIE1hdGguaW11bChhbDAsIGJoMikpIHwgMDtcbiAgICBtaWQgPSAobWlkICsgTWF0aC5pbXVsKGFoMCwgYmwyKSkgfCAwO1xuICAgIGhpID0gKGhpICsgTWF0aC5pbXVsKGFoMCwgYmgyKSkgfCAwO1xuICAgIHZhciB3MiA9ICgoKGMgKyBsbykgfCAwKSArICgobWlkICYgMHgxZmZmKSA8PCAxMykpIHwgMDtcbiAgICBjID0gKCgoaGkgKyAobWlkID4+PiAxMykpIHwgMCkgKyAodzIgPj4+IDI2KSkgfCAwO1xuICAgIHcyICY9IDB4M2ZmZmZmZjtcbiAgICAvKiBrID0gMyAqL1xuICAgIGxvID0gTWF0aC5pbXVsKGFsMywgYmwwKTtcbiAgICBtaWQgPSBNYXRoLmltdWwoYWwzLCBiaDApO1xuICAgIG1pZCA9IChtaWQgKyBNYXRoLmltdWwoYWgzLCBibDApKSB8IDA7XG4gICAgaGkgPSBNYXRoLmltdWwoYWgzLCBiaDApO1xuICAgIGxvID0gKGxvICsgTWF0aC5pbXVsKGFsMiwgYmwxKSkgfCAwO1xuICAgIG1pZCA9IChtaWQgKyBNYXRoLmltdWwoYWwyLCBiaDEpKSB8IDA7XG4gICAgbWlkID0gKG1pZCArIE1hdGguaW11bChhaDIsIGJsMSkpIHwgMDtcbiAgICBoaSA9IChoaSArIE1hdGguaW11bChhaDIsIGJoMSkpIHwgMDtcbiAgICBsbyA9IChsbyArIE1hdGguaW11bChhbDEsIGJsMikpIHwgMDtcbiAgICBtaWQgPSAobWlkICsgTWF0aC5pbXVsKGFsMSwgYmgyKSkgfCAwO1xuICAgIG1pZCA9IChtaWQgKyBNYXRoLmltdWwoYWgxLCBibDIpKSB8IDA7XG4gICAgaGkgPSAoaGkgKyBNYXRoLmltdWwoYWgxLCBiaDIpKSB8IDA7XG4gICAgbG8gPSAobG8gKyBNYXRoLmltdWwoYWwwLCBibDMpKSB8IDA7XG4gICAgbWlkID0gKG1pZCArIE1hdGguaW11bChhbDAsIGJoMykpIHwgMDtcbiAgICBtaWQgPSAobWlkICsgTWF0aC5pbXVsKGFoMCwgYmwzKSkgfCAwO1xuICAgIGhpID0gKGhpICsgTWF0aC5pbXVsKGFoMCwgYmgzKSkgfCAwO1xuICAgIHZhciB3MyA9ICgoKGMgKyBsbykgfCAwKSArICgobWlkICYgMHgxZmZmKSA8PCAxMykpIHwgMDtcbiAgICBjID0gKCgoaGkgKyAobWlkID4+PiAxMykpIHwgMCkgKyAodzMgPj4+IDI2KSkgfCAwO1xuICAgIHczICY9IDB4M2ZmZmZmZjtcbiAgICAvKiBrID0gNCAqL1xuICAgIGxvID0gTWF0aC5pbXVsKGFsNCwgYmwwKTtcbiAgICBtaWQgPSBNYXRoLmltdWwoYWw0LCBiaDApO1xuICAgIG1pZCA9IChtaWQgKyBNYXRoLmltdWwoYWg0LCBibDApKSB8IDA7XG4gICAgaGkgPSBNYXRoLmltdWwoYWg0LCBiaDApO1xuICAgIGxvID0gKGxvICsgTWF0aC5pbXVsKGFsMywgYmwxKSkgfCAwO1xuICAgIG1pZCA9IChtaWQgKyBNYXRoLmltdWwoYWwzLCBiaDEpKSB8IDA7XG4gICAgbWlkID0gKG1pZCArIE1hdGguaW11bChhaDMsIGJsMSkpIHwgMDtcbiAgICBoaSA9IChoaSArIE1hdGguaW11bChhaDMsIGJoMSkpIHwgMDtcbiAgICBsbyA9IChsbyArIE1hdGguaW11bChhbDIsIGJsMikpIHwgMDtcbiAgICBtaWQgPSAobWlkICsgTWF0aC5pbXVsKGFsMiwgYmgyKSkgfCAwO1xuICAgIG1pZCA9IChtaWQgKyBNYXRoLmltdWwoYWgyLCBibDIpKSB8IDA7XG4gICAgaGkgPSAoaGkgKyBNYXRoLmltdWwoYWgyLCBiaDIpKSB8IDA7XG4gICAgbG8gPSAobG8gKyBNYXRoLmltdWwoYWwxLCBibDMpKSB8IDA7XG4gICAgbWlkID0gKG1pZCArIE1hdGguaW11bChhbDEsIGJoMykpIHwgMDtcbiAgICBtaWQgPSAobWlkICsgTWF0aC5pbXVsKGFoMSwgYmwzKSkgfCAwO1xuICAgIGhpID0gKGhpICsgTWF0aC5pbXVsKGFoMSwgYmgzKSkgfCAwO1xuICAgIGxvID0gKGxvICsgTWF0aC5pbXVsKGFsMCwgYmw0KSkgfCAwO1xuICAgIG1pZCA9IChtaWQgKyBNYXRoLmltdWwoYWwwLCBiaDQpKSB8IDA7XG4gICAgbWlkID0gKG1pZCArIE1hdGguaW11bChhaDAsIGJsNCkpIHwgMDtcbiAgICBoaSA9IChoaSArIE1hdGguaW11bChhaDAsIGJoNCkpIHwgMDtcbiAgICB2YXIgdzQgPSAoKChjICsgbG8pIHwgMCkgKyAoKG1pZCAmIDB4MWZmZikgPDwgMTMpKSB8IDA7XG4gICAgYyA9ICgoKGhpICsgKG1pZCA+Pj4gMTMpKSB8IDApICsgKHc0ID4+PiAyNikpIHwgMDtcbiAgICB3NCAmPSAweDNmZmZmZmY7XG4gICAgLyogayA9IDUgKi9cbiAgICBsbyA9IE1hdGguaW11bChhbDUsIGJsMCk7XG4gICAgbWlkID0gTWF0aC5pbXVsKGFsNSwgYmgwKTtcbiAgICBtaWQgPSAobWlkICsgTWF0aC5pbXVsKGFoNSwgYmwwKSkgfCAwO1xuICAgIGhpID0gTWF0aC5pbXVsKGFoNSwgYmgwKTtcbiAgICBsbyA9IChsbyArIE1hdGguaW11bChhbDQsIGJsMSkpIHwgMDtcbiAgICBtaWQgPSAobWlkICsgTWF0aC5pbXVsKGFsNCwgYmgxKSkgfCAwO1xuICAgIG1pZCA9IChtaWQgKyBNYXRoLmltdWwoYWg0LCBibDEpKSB8IDA7XG4gICAgaGkgPSAoaGkgKyBNYXRoLmltdWwoYWg0LCBiaDEpKSB8IDA7XG4gICAgbG8gPSAobG8gKyBNYXRoLmltdWwoYWwzLCBibDIpKSB8IDA7XG4gICAgbWlkID0gKG1pZCArIE1hdGguaW11bChhbDMsIGJoMikpIHwgMDtcbiAgICBtaWQgPSAobWlkICsgTWF0aC5pbXVsKGFoMywgYmwyKSkgfCAwO1xuICAgIGhpID0gKGhpICsgTWF0aC5pbXVsKGFoMywgYmgyKSkgfCAwO1xuICAgIGxvID0gKGxvICsgTWF0aC5pbXVsKGFsMiwgYmwzKSkgfCAwO1xuICAgIG1pZCA9IChtaWQgKyBNYXRoLmltdWwoYWwyLCBiaDMpKSB8IDA7XG4gICAgbWlkID0gKG1pZCArIE1hdGguaW11bChhaDIsIGJsMykpIHwgMDtcbiAgICBoaSA9IChoaSArIE1hdGguaW11bChhaDIsIGJoMykpIHwgMDtcbiAgICBsbyA9IChsbyArIE1hdGguaW11bChhbDEsIGJsNCkpIHwgMDtcbiAgICBtaWQgPSAobWlkICsgTWF0aC5pbXVsKGFsMSwgYmg0KSkgfCAwO1xuICAgIG1pZCA9IChtaWQgKyBNYXRoLmltdWwoYWgxLCBibDQpKSB8IDA7XG4gICAgaGkgPSAoaGkgKyBNYXRoLmltdWwoYWgxLCBiaDQpKSB8IDA7XG4gICAgbG8gPSAobG8gKyBNYXRoLmltdWwoYWwwLCBibDUpKSB8IDA7XG4gICAgbWlkID0gKG1pZCArIE1hdGguaW11bChhbDAsIGJoNSkpIHwgMDtcbiAgICBtaWQgPSAobWlkICsgTWF0aC5pbXVsKGFoMCwgYmw1KSkgfCAwO1xuICAgIGhpID0gKGhpICsgTWF0aC5pbXVsKGFoMCwgYmg1KSkgfCAwO1xuICAgIHZhciB3NSA9ICgoKGMgKyBsbykgfCAwKSArICgobWlkICYgMHgxZmZmKSA8PCAxMykpIHwgMDtcbiAgICBjID0gKCgoaGkgKyAobWlkID4+PiAxMykpIHwgMCkgKyAodzUgPj4+IDI2KSkgfCAwO1xuICAgIHc1ICY9IDB4M2ZmZmZmZjtcbiAgICAvKiBrID0gNiAqL1xuICAgIGxvID0gTWF0aC5pbXVsKGFsNiwgYmwwKTtcbiAgICBtaWQgPSBNYXRoLmltdWwoYWw2LCBiaDApO1xuICAgIG1pZCA9IChtaWQgKyBNYXRoLmltdWwoYWg2LCBibDApKSB8IDA7XG4gICAgaGkgPSBNYXRoLmltdWwoYWg2LCBiaDApO1xuICAgIGxvID0gKGxvICsgTWF0aC5pbXVsKGFsNSwgYmwxKSkgfCAwO1xuICAgIG1pZCA9IChtaWQgKyBNYXRoLmltdWwoYWw1LCBiaDEpKSB8IDA7XG4gICAgbWlkID0gKG1pZCArIE1hdGguaW11bChhaDUsIGJsMSkpIHwgMDtcbiAgICBoaSA9IChoaSArIE1hdGguaW11bChhaDUsIGJoMSkpIHwgMDtcbiAgICBsbyA9IChsbyArIE1hdGguaW11bChhbDQsIGJsMikpIHwgMDtcbiAgICBtaWQgPSAobWlkICsgTWF0aC5pbXVsKGFsNCwgYmgyKSkgfCAwO1xuICAgIG1pZCA9IChtaWQgKyBNYXRoLmltdWwoYWg0LCBibDIpKSB8IDA7XG4gICAgaGkgPSAoaGkgKyBNYXRoLmltdWwoYWg0LCBiaDIpKSB8IDA7XG4gICAgbG8gPSAobG8gKyBNYXRoLmltdWwoYWwzLCBibDMpKSB8IDA7XG4gICAgbWlkID0gKG1pZCArIE1hdGguaW11bChhbDMsIGJoMykpIHwgMDtcbiAgICBtaWQgPSAobWlkICsgTWF0aC5pbXVsKGFoMywgYmwzKSkgfCAwO1xuICAgIGhpID0gKGhpICsgTWF0aC5pbXVsKGFoMywgYmgzKSkgfCAwO1xuICAgIGxvID0gKGxvICsgTWF0aC5pbXVsKGFsMiwgYmw0KSkgfCAwO1xuICAgIG1pZCA9IChtaWQgKyBNYXRoLmltdWwoYWwyLCBiaDQpKSB8IDA7XG4gICAgbWlkID0gKG1pZCArIE1hdGguaW11bChhaDIsIGJsNCkpIHwgMDtcbiAgICBoaSA9IChoaSArIE1hdGguaW11bChhaDIsIGJoNCkpIHwgMDtcbiAgICBsbyA9IChsbyArIE1hdGguaW11bChhbDEsIGJsNSkpIHwgMDtcbiAgICBtaWQgPSAobWlkICsgTWF0aC5pbXVsKGFsMSwgYmg1KSkgfCAwO1xuICAgIG1pZCA9IChtaWQgKyBNYXRoLmltdWwoYWgxLCBibDUpKSB8IDA7XG4gICAgaGkgPSAoaGkgKyBNYXRoLmltdWwoYWgxLCBiaDUpKSB8IDA7XG4gICAgbG8gPSAobG8gKyBNYXRoLmltdWwoYWwwLCBibDYpKSB8IDA7XG4gICAgbWlkID0gKG1pZCArIE1hdGguaW11bChhbDAsIGJoNikpIHwgMDtcbiAgICBtaWQgPSAobWlkICsgTWF0aC5pbXVsKGFoMCwgYmw2KSkgfCAwO1xuICAgIGhpID0gKGhpICsgTWF0aC5pbXVsKGFoMCwgYmg2KSkgfCAwO1xuICAgIHZhciB3NiA9ICgoKGMgKyBsbykgfCAwKSArICgobWlkICYgMHgxZmZmKSA8PCAxMykpIHwgMDtcbiAgICBjID0gKCgoaGkgKyAobWlkID4+PiAxMykpIHwgMCkgKyAodzYgPj4+IDI2KSkgfCAwO1xuICAgIHc2ICY9IDB4M2ZmZmZmZjtcbiAgICAvKiBrID0gNyAqL1xuICAgIGxvID0gTWF0aC5pbXVsKGFsNywgYmwwKTtcbiAgICBtaWQgPSBNYXRoLmltdWwoYWw3LCBiaDApO1xuICAgIG1pZCA9IChtaWQgKyBNYXRoLmltdWwoYWg3LCBibDApKSB8IDA7XG4gICAgaGkgPSBNYXRoLmltdWwoYWg3LCBiaDApO1xuICAgIGxvID0gKGxvICsgTWF0aC5pbXVsKGFsNiwgYmwxKSkgfCAwO1xuICAgIG1pZCA9IChtaWQgKyBNYXRoLmltdWwoYWw2LCBiaDEpKSB8IDA7XG4gICAgbWlkID0gKG1pZCArIE1hdGguaW11bChhaDYsIGJsMSkpIHwgMDtcbiAgICBoaSA9IChoaSArIE1hdGguaW11bChhaDYsIGJoMSkpIHwgMDtcbiAgICBsbyA9IChsbyArIE1hdGguaW11bChhbDUsIGJsMikpIHwgMDtcbiAgICBtaWQgPSAobWlkICsgTWF0aC5pbXVsKGFsNSwgYmgyKSkgfCAwO1xuICAgIG1pZCA9IChtaWQgKyBNYXRoLmltdWwoYWg1LCBibDIpKSB8IDA7XG4gICAgaGkgPSAoaGkgKyBNYXRoLmltdWwoYWg1LCBiaDIpKSB8IDA7XG4gICAgbG8gPSAobG8gKyBNYXRoLmltdWwoYWw0LCBibDMpKSB8IDA7XG4gICAgbWlkID0gKG1pZCArIE1hdGguaW11bChhbDQsIGJoMykpIHwgMDtcbiAgICBtaWQgPSAobWlkICsgTWF0aC5pbXVsKGFoNCwgYmwzKSkgfCAwO1xuICAgIGhpID0gKGhpICsgTWF0aC5pbXVsKGFoNCwgYmgzKSkgfCAwO1xuICAgIGxvID0gKGxvICsgTWF0aC5pbXVsKGFsMywgYmw0KSkgfCAwO1xuICAgIG1pZCA9IChtaWQgKyBNYXRoLmltdWwoYWwzLCBiaDQpKSB8IDA7XG4gICAgbWlkID0gKG1pZCArIE1hdGguaW11bChhaDMsIGJsNCkpIHwgMDtcbiAgICBoaSA9IChoaSArIE1hdGguaW11bChhaDMsIGJoNCkpIHwgMDtcbiAgICBsbyA9IChsbyArIE1hdGguaW11bChhbDIsIGJsNSkpIHwgMDtcbiAgICBtaWQgPSAobWlkICsgTWF0aC5pbXVsKGFsMiwgYmg1KSkgfCAwO1xuICAgIG1pZCA9IChtaWQgKyBNYXRoLmltdWwoYWgyLCBibDUpKSB8IDA7XG4gICAgaGkgPSAoaGkgKyBNYXRoLmltdWwoYWgyLCBiaDUpKSB8IDA7XG4gICAgbG8gPSAobG8gKyBNYXRoLmltdWwoYWwxLCBibDYpKSB8IDA7XG4gICAgbWlkID0gKG1pZCArIE1hdGguaW11bChhbDEsIGJoNikpIHwgMDtcbiAgICBtaWQgPSAobWlkICsgTWF0aC5pbXVsKGFoMSwgYmw2KSkgfCAwO1xuICAgIGhpID0gKGhpICsgTWF0aC5pbXVsKGFoMSwgYmg2KSkgfCAwO1xuICAgIGxvID0gKGxvICsgTWF0aC5pbXVsKGFsMCwgYmw3KSkgfCAwO1xuICAgIG1pZCA9IChtaWQgKyBNYXRoLmltdWwoYWwwLCBiaDcpKSB8IDA7XG4gICAgbWlkID0gKG1pZCArIE1hdGguaW11bChhaDAsIGJsNykpIHwgMDtcbiAgICBoaSA9IChoaSArIE1hdGguaW11bChhaDAsIGJoNykpIHwgMDtcbiAgICB2YXIgdzcgPSAoKChjICsgbG8pIHwgMCkgKyAoKG1pZCAmIDB4MWZmZikgPDwgMTMpKSB8IDA7XG4gICAgYyA9ICgoKGhpICsgKG1pZCA+Pj4gMTMpKSB8IDApICsgKHc3ID4+PiAyNikpIHwgMDtcbiAgICB3NyAmPSAweDNmZmZmZmY7XG4gICAgLyogayA9IDggKi9cbiAgICBsbyA9IE1hdGguaW11bChhbDgsIGJsMCk7XG4gICAgbWlkID0gTWF0aC5pbXVsKGFsOCwgYmgwKTtcbiAgICBtaWQgPSAobWlkICsgTWF0aC5pbXVsKGFoOCwgYmwwKSkgfCAwO1xuICAgIGhpID0gTWF0aC5pbXVsKGFoOCwgYmgwKTtcbiAgICBsbyA9IChsbyArIE1hdGguaW11bChhbDcsIGJsMSkpIHwgMDtcbiAgICBtaWQgPSAobWlkICsgTWF0aC5pbXVsKGFsNywgYmgxKSkgfCAwO1xuICAgIG1pZCA9IChtaWQgKyBNYXRoLmltdWwoYWg3LCBibDEpKSB8IDA7XG4gICAgaGkgPSAoaGkgKyBNYXRoLmltdWwoYWg3LCBiaDEpKSB8IDA7XG4gICAgbG8gPSAobG8gKyBNYXRoLmltdWwoYWw2LCBibDIpKSB8IDA7XG4gICAgbWlkID0gKG1pZCArIE1hdGguaW11bChhbDYsIGJoMikpIHwgMDtcbiAgICBtaWQgPSAobWlkICsgTWF0aC5pbXVsKGFoNiwgYmwyKSkgfCAwO1xuICAgIGhpID0gKGhpICsgTWF0aC5pbXVsKGFoNiwgYmgyKSkgfCAwO1xuICAgIGxvID0gKGxvICsgTWF0aC5pbXVsKGFsNSwgYmwzKSkgfCAwO1xuICAgIG1pZCA9IChtaWQgKyBNYXRoLmltdWwoYWw1LCBiaDMpKSB8IDA7XG4gICAgbWlkID0gKG1pZCArIE1hdGguaW11bChhaDUsIGJsMykpIHwgMDtcbiAgICBoaSA9IChoaSArIE1hdGguaW11bChhaDUsIGJoMykpIHwgMDtcbiAgICBsbyA9IChsbyArIE1hdGguaW11bChhbDQsIGJsNCkpIHwgMDtcbiAgICBtaWQgPSAobWlkICsgTWF0aC5pbXVsKGFsNCwgYmg0KSkgfCAwO1xuICAgIG1pZCA9IChtaWQgKyBNYXRoLmltdWwoYWg0LCBibDQpKSB8IDA7XG4gICAgaGkgPSAoaGkgKyBNYXRoLmltdWwoYWg0LCBiaDQpKSB8IDA7XG4gICAgbG8gPSAobG8gKyBNYXRoLmltdWwoYWwzLCBibDUpKSB8IDA7XG4gICAgbWlkID0gKG1pZCArIE1hdGguaW11bChhbDMsIGJoNSkpIHwgMDtcbiAgICBtaWQgPSAobWlkICsgTWF0aC5pbXVsKGFoMywgYmw1KSkgfCAwO1xuICAgIGhpID0gKGhpICsgTWF0aC5pbXVsKGFoMywgYmg1KSkgfCAwO1xuICAgIGxvID0gKGxvICsgTWF0aC5pbXVsKGFsMiwgYmw2KSkgfCAwO1xuICAgIG1pZCA9IChtaWQgKyBNYXRoLmltdWwoYWwyLCBiaDYpKSB8IDA7XG4gICAgbWlkID0gKG1pZCArIE1hdGguaW11bChhaDIsIGJsNikpIHwgMDtcbiAgICBoaSA9IChoaSArIE1hdGguaW11bChhaDIsIGJoNikpIHwgMDtcbiAgICBsbyA9IChsbyArIE1hdGguaW11bChhbDEsIGJsNykpIHwgMDtcbiAgICBtaWQgPSAobWlkICsgTWF0aC5pbXVsKGFsMSwgYmg3KSkgfCAwO1xuICAgIG1pZCA9IChtaWQgKyBNYXRoLmltdWwoYWgxLCBibDcpKSB8IDA7XG4gICAgaGkgPSAoaGkgKyBNYXRoLmltdWwoYWgxLCBiaDcpKSB8IDA7XG4gICAgbG8gPSAobG8gKyBNYXRoLmltdWwoYWwwLCBibDgpKSB8IDA7XG4gICAgbWlkID0gKG1pZCArIE1hdGguaW11bChhbDAsIGJoOCkpIHwgMDtcbiAgICBtaWQgPSAobWlkICsgTWF0aC5pbXVsKGFoMCwgYmw4KSkgfCAwO1xuICAgIGhpID0gKGhpICsgTWF0aC5pbXVsKGFoMCwgYmg4KSkgfCAwO1xuICAgIHZhciB3OCA9ICgoKGMgKyBsbykgfCAwKSArICgobWlkICYgMHgxZmZmKSA8PCAxMykpIHwgMDtcbiAgICBjID0gKCgoaGkgKyAobWlkID4+PiAxMykpIHwgMCkgKyAodzggPj4+IDI2KSkgfCAwO1xuICAgIHc4ICY9IDB4M2ZmZmZmZjtcbiAgICAvKiBrID0gOSAqL1xuICAgIGxvID0gTWF0aC5pbXVsKGFsOSwgYmwwKTtcbiAgICBtaWQgPSBNYXRoLmltdWwoYWw5LCBiaDApO1xuICAgIG1pZCA9IChtaWQgKyBNYXRoLmltdWwoYWg5LCBibDApKSB8IDA7XG4gICAgaGkgPSBNYXRoLmltdWwoYWg5LCBiaDApO1xuICAgIGxvID0gKGxvICsgTWF0aC5pbXVsKGFsOCwgYmwxKSkgfCAwO1xuICAgIG1pZCA9IChtaWQgKyBNYXRoLmltdWwoYWw4LCBiaDEpKSB8IDA7XG4gICAgbWlkID0gKG1pZCArIE1hdGguaW11bChhaDgsIGJsMSkpIHwgMDtcbiAgICBoaSA9IChoaSArIE1hdGguaW11bChhaDgsIGJoMSkpIHwgMDtcbiAgICBsbyA9IChsbyArIE1hdGguaW11bChhbDcsIGJsMikpIHwgMDtcbiAgICBtaWQgPSAobWlkICsgTWF0aC5pbXVsKGFsNywgYmgyKSkgfCAwO1xuICAgIG1pZCA9IChtaWQgKyBNYXRoLmltdWwoYWg3LCBibDIpKSB8IDA7XG4gICAgaGkgPSAoaGkgKyBNYXRoLmltdWwoYWg3LCBiaDIpKSB8IDA7XG4gICAgbG8gPSAobG8gKyBNYXRoLmltdWwoYWw2LCBibDMpKSB8IDA7XG4gICAgbWlkID0gKG1pZCArIE1hdGguaW11bChhbDYsIGJoMykpIHwgMDtcbiAgICBtaWQgPSAobWlkICsgTWF0aC5pbXVsKGFoNiwgYmwzKSkgfCAwO1xuICAgIGhpID0gKGhpICsgTWF0aC5pbXVsKGFoNiwgYmgzKSkgfCAwO1xuICAgIGxvID0gKGxvICsgTWF0aC5pbXVsKGFsNSwgYmw0KSkgfCAwO1xuICAgIG1pZCA9IChtaWQgKyBNYXRoLmltdWwoYWw1LCBiaDQpKSB8IDA7XG4gICAgbWlkID0gKG1pZCArIE1hdGguaW11bChhaDUsIGJsNCkpIHwgMDtcbiAgICBoaSA9IChoaSArIE1hdGguaW11bChhaDUsIGJoNCkpIHwgMDtcbiAgICBsbyA9IChsbyArIE1hdGguaW11bChhbDQsIGJsNSkpIHwgMDtcbiAgICBtaWQgPSAobWlkICsgTWF0aC5pbXVsKGFsNCwgYmg1KSkgfCAwO1xuICAgIG1pZCA9IChtaWQgKyBNYXRoLmltdWwoYWg0LCBibDUpKSB8IDA7XG4gICAgaGkgPSAoaGkgKyBNYXRoLmltdWwoYWg0LCBiaDUpKSB8IDA7XG4gICAgbG8gPSAobG8gKyBNYXRoLmltdWwoYWwzLCBibDYpKSB8IDA7XG4gICAgbWlkID0gKG1pZCArIE1hdGguaW11bChhbDMsIGJoNikpIHwgMDtcbiAgICBtaWQgPSAobWlkICsgTWF0aC5pbXVsKGFoMywgYmw2KSkgfCAwO1xuICAgIGhpID0gKGhpICsgTWF0aC5pbXVsKGFoMywgYmg2KSkgfCAwO1xuICAgIGxvID0gKGxvICsgTWF0aC5pbXVsKGFsMiwgYmw3KSkgfCAwO1xuICAgIG1pZCA9IChtaWQgKyBNYXRoLmltdWwoYWwyLCBiaDcpKSB8IDA7XG4gICAgbWlkID0gKG1pZCArIE1hdGguaW11bChhaDIsIGJsNykpIHwgMDtcbiAgICBoaSA9IChoaSArIE1hdGguaW11bChhaDIsIGJoNykpIHwgMDtcbiAgICBsbyA9IChsbyArIE1hdGguaW11bChhbDEsIGJsOCkpIHwgMDtcbiAgICBtaWQgPSAobWlkICsgTWF0aC5pbXVsKGFsMSwgYmg4KSkgfCAwO1xuICAgIG1pZCA9IChtaWQgKyBNYXRoLmltdWwoYWgxLCBibDgpKSB8IDA7XG4gICAgaGkgPSAoaGkgKyBNYXRoLmltdWwoYWgxLCBiaDgpKSB8IDA7XG4gICAgbG8gPSAobG8gKyBNYXRoLmltdWwoYWwwLCBibDkpKSB8IDA7XG4gICAgbWlkID0gKG1pZCArIE1hdGguaW11bChhbDAsIGJoOSkpIHwgMDtcbiAgICBtaWQgPSAobWlkICsgTWF0aC5pbXVsKGFoMCwgYmw5KSkgfCAwO1xuICAgIGhpID0gKGhpICsgTWF0aC5pbXVsKGFoMCwgYmg5KSkgfCAwO1xuICAgIHZhciB3OSA9ICgoKGMgKyBsbykgfCAwKSArICgobWlkICYgMHgxZmZmKSA8PCAxMykpIHwgMDtcbiAgICBjID0gKCgoaGkgKyAobWlkID4+PiAxMykpIHwgMCkgKyAodzkgPj4+IDI2KSkgfCAwO1xuICAgIHc5ICY9IDB4M2ZmZmZmZjtcbiAgICAvKiBrID0gMTAgKi9cbiAgICBsbyA9IE1hdGguaW11bChhbDksIGJsMSk7XG4gICAgbWlkID0gTWF0aC5pbXVsKGFsOSwgYmgxKTtcbiAgICBtaWQgPSAobWlkICsgTWF0aC5pbXVsKGFoOSwgYmwxKSkgfCAwO1xuICAgIGhpID0gTWF0aC5pbXVsKGFoOSwgYmgxKTtcbiAgICBsbyA9IChsbyArIE1hdGguaW11bChhbDgsIGJsMikpIHwgMDtcbiAgICBtaWQgPSAobWlkICsgTWF0aC5pbXVsKGFsOCwgYmgyKSkgfCAwO1xuICAgIG1pZCA9IChtaWQgKyBNYXRoLmltdWwoYWg4LCBibDIpKSB8IDA7XG4gICAgaGkgPSAoaGkgKyBNYXRoLmltdWwoYWg4LCBiaDIpKSB8IDA7XG4gICAgbG8gPSAobG8gKyBNYXRoLmltdWwoYWw3LCBibDMpKSB8IDA7XG4gICAgbWlkID0gKG1pZCArIE1hdGguaW11bChhbDcsIGJoMykpIHwgMDtcbiAgICBtaWQgPSAobWlkICsgTWF0aC5pbXVsKGFoNywgYmwzKSkgfCAwO1xuICAgIGhpID0gKGhpICsgTWF0aC5pbXVsKGFoNywgYmgzKSkgfCAwO1xuICAgIGxvID0gKGxvICsgTWF0aC5pbXVsKGFsNiwgYmw0KSkgfCAwO1xuICAgIG1pZCA9IChtaWQgKyBNYXRoLmltdWwoYWw2LCBiaDQpKSB8IDA7XG4gICAgbWlkID0gKG1pZCArIE1hdGguaW11bChhaDYsIGJsNCkpIHwgMDtcbiAgICBoaSA9IChoaSArIE1hdGguaW11bChhaDYsIGJoNCkpIHwgMDtcbiAgICBsbyA9IChsbyArIE1hdGguaW11bChhbDUsIGJsNSkpIHwgMDtcbiAgICBtaWQgPSAobWlkICsgTWF0aC5pbXVsKGFsNSwgYmg1KSkgfCAwO1xuICAgIG1pZCA9IChtaWQgKyBNYXRoLmltdWwoYWg1LCBibDUpKSB8IDA7XG4gICAgaGkgPSAoaGkgKyBNYXRoLmltdWwoYWg1LCBiaDUpKSB8IDA7XG4gICAgbG8gPSAobG8gKyBNYXRoLmltdWwoYWw0LCBibDYpKSB8IDA7XG4gICAgbWlkID0gKG1pZCArIE1hdGguaW11bChhbDQsIGJoNikpIHwgMDtcbiAgICBtaWQgPSAobWlkICsgTWF0aC5pbXVsKGFoNCwgYmw2KSkgfCAwO1xuICAgIGhpID0gKGhpICsgTWF0aC5pbXVsKGFoNCwgYmg2KSkgfCAwO1xuICAgIGxvID0gKGxvICsgTWF0aC5pbXVsKGFsMywgYmw3KSkgfCAwO1xuICAgIG1pZCA9IChtaWQgKyBNYXRoLmltdWwoYWwzLCBiaDcpKSB8IDA7XG4gICAgbWlkID0gKG1pZCArIE1hdGguaW11bChhaDMsIGJsNykpIHwgMDtcbiAgICBoaSA9IChoaSArIE1hdGguaW11bChhaDMsIGJoNykpIHwgMDtcbiAgICBsbyA9IChsbyArIE1hdGguaW11bChhbDIsIGJsOCkpIHwgMDtcbiAgICBtaWQgPSAobWlkICsgTWF0aC5pbXVsKGFsMiwgYmg4KSkgfCAwO1xuICAgIG1pZCA9IChtaWQgKyBNYXRoLmltdWwoYWgyLCBibDgpKSB8IDA7XG4gICAgaGkgPSAoaGkgKyBNYXRoLmltdWwoYWgyLCBiaDgpKSB8IDA7XG4gICAgbG8gPSAobG8gKyBNYXRoLmltdWwoYWwxLCBibDkpKSB8IDA7XG4gICAgbWlkID0gKG1pZCArIE1hdGguaW11bChhbDEsIGJoOSkpIHwgMDtcbiAgICBtaWQgPSAobWlkICsgTWF0aC5pbXVsKGFoMSwgYmw5KSkgfCAwO1xuICAgIGhpID0gKGhpICsgTWF0aC5pbXVsKGFoMSwgYmg5KSkgfCAwO1xuICAgIHZhciB3MTAgPSAoKChjICsgbG8pIHwgMCkgKyAoKG1pZCAmIDB4MWZmZikgPDwgMTMpKSB8IDA7XG4gICAgYyA9ICgoKGhpICsgKG1pZCA+Pj4gMTMpKSB8IDApICsgKHcxMCA+Pj4gMjYpKSB8IDA7XG4gICAgdzEwICY9IDB4M2ZmZmZmZjtcbiAgICAvKiBrID0gMTEgKi9cbiAgICBsbyA9IE1hdGguaW11bChhbDksIGJsMik7XG4gICAgbWlkID0gTWF0aC5pbXVsKGFsOSwgYmgyKTtcbiAgICBtaWQgPSAobWlkICsgTWF0aC5pbXVsKGFoOSwgYmwyKSkgfCAwO1xuICAgIGhpID0gTWF0aC5pbXVsKGFoOSwgYmgyKTtcbiAgICBsbyA9IChsbyArIE1hdGguaW11bChhbDgsIGJsMykpIHwgMDtcbiAgICBtaWQgPSAobWlkICsgTWF0aC5pbXVsKGFsOCwgYmgzKSkgfCAwO1xuICAgIG1pZCA9IChtaWQgKyBNYXRoLmltdWwoYWg4LCBibDMpKSB8IDA7XG4gICAgaGkgPSAoaGkgKyBNYXRoLmltdWwoYWg4LCBiaDMpKSB8IDA7XG4gICAgbG8gPSAobG8gKyBNYXRoLmltdWwoYWw3LCBibDQpKSB8IDA7XG4gICAgbWlkID0gKG1pZCArIE1hdGguaW11bChhbDcsIGJoNCkpIHwgMDtcbiAgICBtaWQgPSAobWlkICsgTWF0aC5pbXVsKGFoNywgYmw0KSkgfCAwO1xuICAgIGhpID0gKGhpICsgTWF0aC5pbXVsKGFoNywgYmg0KSkgfCAwO1xuICAgIGxvID0gKGxvICsgTWF0aC5pbXVsKGFsNiwgYmw1KSkgfCAwO1xuICAgIG1pZCA9IChtaWQgKyBNYXRoLmltdWwoYWw2LCBiaDUpKSB8IDA7XG4gICAgbWlkID0gKG1pZCArIE1hdGguaW11bChhaDYsIGJsNSkpIHwgMDtcbiAgICBoaSA9IChoaSArIE1hdGguaW11bChhaDYsIGJoNSkpIHwgMDtcbiAgICBsbyA9IChsbyArIE1hdGguaW11bChhbDUsIGJsNikpIHwgMDtcbiAgICBtaWQgPSAobWlkICsgTWF0aC5pbXVsKGFsNSwgYmg2KSkgfCAwO1xuICAgIG1pZCA9IChtaWQgKyBNYXRoLmltdWwoYWg1LCBibDYpKSB8IDA7XG4gICAgaGkgPSAoaGkgKyBNYXRoLmltdWwoYWg1LCBiaDYpKSB8IDA7XG4gICAgbG8gPSAobG8gKyBNYXRoLmltdWwoYWw0LCBibDcpKSB8IDA7XG4gICAgbWlkID0gKG1pZCArIE1hdGguaW11bChhbDQsIGJoNykpIHwgMDtcbiAgICBtaWQgPSAobWlkICsgTWF0aC5pbXVsKGFoNCwgYmw3KSkgfCAwO1xuICAgIGhpID0gKGhpICsgTWF0aC5pbXVsKGFoNCwgYmg3KSkgfCAwO1xuICAgIGxvID0gKGxvICsgTWF0aC5pbXVsKGFsMywgYmw4KSkgfCAwO1xuICAgIG1pZCA9IChtaWQgKyBNYXRoLmltdWwoYWwzLCBiaDgpKSB8IDA7XG4gICAgbWlkID0gKG1pZCArIE1hdGguaW11bChhaDMsIGJsOCkpIHwgMDtcbiAgICBoaSA9IChoaSArIE1hdGguaW11bChhaDMsIGJoOCkpIHwgMDtcbiAgICBsbyA9IChsbyArIE1hdGguaW11bChhbDIsIGJsOSkpIHwgMDtcbiAgICBtaWQgPSAobWlkICsgTWF0aC5pbXVsKGFsMiwgYmg5KSkgfCAwO1xuICAgIG1pZCA9IChtaWQgKyBNYXRoLmltdWwoYWgyLCBibDkpKSB8IDA7XG4gICAgaGkgPSAoaGkgKyBNYXRoLmltdWwoYWgyLCBiaDkpKSB8IDA7XG4gICAgdmFyIHcxMSA9ICgoKGMgKyBsbykgfCAwKSArICgobWlkICYgMHgxZmZmKSA8PCAxMykpIHwgMDtcbiAgICBjID0gKCgoaGkgKyAobWlkID4+PiAxMykpIHwgMCkgKyAodzExID4+PiAyNikpIHwgMDtcbiAgICB3MTEgJj0gMHgzZmZmZmZmO1xuICAgIC8qIGsgPSAxMiAqL1xuICAgIGxvID0gTWF0aC5pbXVsKGFsOSwgYmwzKTtcbiAgICBtaWQgPSBNYXRoLmltdWwoYWw5LCBiaDMpO1xuICAgIG1pZCA9IChtaWQgKyBNYXRoLmltdWwoYWg5LCBibDMpKSB8IDA7XG4gICAgaGkgPSBNYXRoLmltdWwoYWg5LCBiaDMpO1xuICAgIGxvID0gKGxvICsgTWF0aC5pbXVsKGFsOCwgYmw0KSkgfCAwO1xuICAgIG1pZCA9IChtaWQgKyBNYXRoLmltdWwoYWw4LCBiaDQpKSB8IDA7XG4gICAgbWlkID0gKG1pZCArIE1hdGguaW11bChhaDgsIGJsNCkpIHwgMDtcbiAgICBoaSA9IChoaSArIE1hdGguaW11bChhaDgsIGJoNCkpIHwgMDtcbiAgICBsbyA9IChsbyArIE1hdGguaW11bChhbDcsIGJsNSkpIHwgMDtcbiAgICBtaWQgPSAobWlkICsgTWF0aC5pbXVsKGFsNywgYmg1KSkgfCAwO1xuICAgIG1pZCA9IChtaWQgKyBNYXRoLmltdWwoYWg3LCBibDUpKSB8IDA7XG4gICAgaGkgPSAoaGkgKyBNYXRoLmltdWwoYWg3LCBiaDUpKSB8IDA7XG4gICAgbG8gPSAobG8gKyBNYXRoLmltdWwoYWw2LCBibDYpKSB8IDA7XG4gICAgbWlkID0gKG1pZCArIE1hdGguaW11bChhbDYsIGJoNikpIHwgMDtcbiAgICBtaWQgPSAobWlkICsgTWF0aC5pbXVsKGFoNiwgYmw2KSkgfCAwO1xuICAgIGhpID0gKGhpICsgTWF0aC5pbXVsKGFoNiwgYmg2KSkgfCAwO1xuICAgIGxvID0gKGxvICsgTWF0aC5pbXVsKGFsNSwgYmw3KSkgfCAwO1xuICAgIG1pZCA9IChtaWQgKyBNYXRoLmltdWwoYWw1LCBiaDcpKSB8IDA7XG4gICAgbWlkID0gKG1pZCArIE1hdGguaW11bChhaDUsIGJsNykpIHwgMDtcbiAgICBoaSA9IChoaSArIE1hdGguaW11bChhaDUsIGJoNykpIHwgMDtcbiAgICBsbyA9IChsbyArIE1hdGguaW11bChhbDQsIGJsOCkpIHwgMDtcbiAgICBtaWQgPSAobWlkICsgTWF0aC5pbXVsKGFsNCwgYmg4KSkgfCAwO1xuICAgIG1pZCA9IChtaWQgKyBNYXRoLmltdWwoYWg0LCBibDgpKSB8IDA7XG4gICAgaGkgPSAoaGkgKyBNYXRoLmltdWwoYWg0LCBiaDgpKSB8IDA7XG4gICAgbG8gPSAobG8gKyBNYXRoLmltdWwoYWwzLCBibDkpKSB8IDA7XG4gICAgbWlkID0gKG1pZCArIE1hdGguaW11bChhbDMsIGJoOSkpIHwgMDtcbiAgICBtaWQgPSAobWlkICsgTWF0aC5pbXVsKGFoMywgYmw5KSkgfCAwO1xuICAgIGhpID0gKGhpICsgTWF0aC5pbXVsKGFoMywgYmg5KSkgfCAwO1xuICAgIHZhciB3MTIgPSAoKChjICsgbG8pIHwgMCkgKyAoKG1pZCAmIDB4MWZmZikgPDwgMTMpKSB8IDA7XG4gICAgYyA9ICgoKGhpICsgKG1pZCA+Pj4gMTMpKSB8IDApICsgKHcxMiA+Pj4gMjYpKSB8IDA7XG4gICAgdzEyICY9IDB4M2ZmZmZmZjtcbiAgICAvKiBrID0gMTMgKi9cbiAgICBsbyA9IE1hdGguaW11bChhbDksIGJsNCk7XG4gICAgbWlkID0gTWF0aC5pbXVsKGFsOSwgYmg0KTtcbiAgICBtaWQgPSAobWlkICsgTWF0aC5pbXVsKGFoOSwgYmw0KSkgfCAwO1xuICAgIGhpID0gTWF0aC5pbXVsKGFoOSwgYmg0KTtcbiAgICBsbyA9IChsbyArIE1hdGguaW11bChhbDgsIGJsNSkpIHwgMDtcbiAgICBtaWQgPSAobWlkICsgTWF0aC5pbXVsKGFsOCwgYmg1KSkgfCAwO1xuICAgIG1pZCA9IChtaWQgKyBNYXRoLmltdWwoYWg4LCBibDUpKSB8IDA7XG4gICAgaGkgPSAoaGkgKyBNYXRoLmltdWwoYWg4LCBiaDUpKSB8IDA7XG4gICAgbG8gPSAobG8gKyBNYXRoLmltdWwoYWw3LCBibDYpKSB8IDA7XG4gICAgbWlkID0gKG1pZCArIE1hdGguaW11bChhbDcsIGJoNikpIHwgMDtcbiAgICBtaWQgPSAobWlkICsgTWF0aC5pbXVsKGFoNywgYmw2KSkgfCAwO1xuICAgIGhpID0gKGhpICsgTWF0aC5pbXVsKGFoNywgYmg2KSkgfCAwO1xuICAgIGxvID0gKGxvICsgTWF0aC5pbXVsKGFsNiwgYmw3KSkgfCAwO1xuICAgIG1pZCA9IChtaWQgKyBNYXRoLmltdWwoYWw2LCBiaDcpKSB8IDA7XG4gICAgbWlkID0gKG1pZCArIE1hdGguaW11bChhaDYsIGJsNykpIHwgMDtcbiAgICBoaSA9IChoaSArIE1hdGguaW11bChhaDYsIGJoNykpIHwgMDtcbiAgICBsbyA9IChsbyArIE1hdGguaW11bChhbDUsIGJsOCkpIHwgMDtcbiAgICBtaWQgPSAobWlkICsgTWF0aC5pbXVsKGFsNSwgYmg4KSkgfCAwO1xuICAgIG1pZCA9IChtaWQgKyBNYXRoLmltdWwoYWg1LCBibDgpKSB8IDA7XG4gICAgaGkgPSAoaGkgKyBNYXRoLmltdWwoYWg1LCBiaDgpKSB8IDA7XG4gICAgbG8gPSAobG8gKyBNYXRoLmltdWwoYWw0LCBibDkpKSB8IDA7XG4gICAgbWlkID0gKG1pZCArIE1hdGguaW11bChhbDQsIGJoOSkpIHwgMDtcbiAgICBtaWQgPSAobWlkICsgTWF0aC5pbXVsKGFoNCwgYmw5KSkgfCAwO1xuICAgIGhpID0gKGhpICsgTWF0aC5pbXVsKGFoNCwgYmg5KSkgfCAwO1xuICAgIHZhciB3MTMgPSAoKChjICsgbG8pIHwgMCkgKyAoKG1pZCAmIDB4MWZmZikgPDwgMTMpKSB8IDA7XG4gICAgYyA9ICgoKGhpICsgKG1pZCA+Pj4gMTMpKSB8IDApICsgKHcxMyA+Pj4gMjYpKSB8IDA7XG4gICAgdzEzICY9IDB4M2ZmZmZmZjtcbiAgICAvKiBrID0gMTQgKi9cbiAgICBsbyA9IE1hdGguaW11bChhbDksIGJsNSk7XG4gICAgbWlkID0gTWF0aC5pbXVsKGFsOSwgYmg1KTtcbiAgICBtaWQgPSAobWlkICsgTWF0aC5pbXVsKGFoOSwgYmw1KSkgfCAwO1xuICAgIGhpID0gTWF0aC5pbXVsKGFoOSwgYmg1KTtcbiAgICBsbyA9IChsbyArIE1hdGguaW11bChhbDgsIGJsNikpIHwgMDtcbiAgICBtaWQgPSAobWlkICsgTWF0aC5pbXVsKGFsOCwgYmg2KSkgfCAwO1xuICAgIG1pZCA9IChtaWQgKyBNYXRoLmltdWwoYWg4LCBibDYpKSB8IDA7XG4gICAgaGkgPSAoaGkgKyBNYXRoLmltdWwoYWg4LCBiaDYpKSB8IDA7XG4gICAgbG8gPSAobG8gKyBNYXRoLmltdWwoYWw3LCBibDcpKSB8IDA7XG4gICAgbWlkID0gKG1pZCArIE1hdGguaW11bChhbDcsIGJoNykpIHwgMDtcbiAgICBtaWQgPSAobWlkICsgTWF0aC5pbXVsKGFoNywgYmw3KSkgfCAwO1xuICAgIGhpID0gKGhpICsgTWF0aC5pbXVsKGFoNywgYmg3KSkgfCAwO1xuICAgIGxvID0gKGxvICsgTWF0aC5pbXVsKGFsNiwgYmw4KSkgfCAwO1xuICAgIG1pZCA9IChtaWQgKyBNYXRoLmltdWwoYWw2LCBiaDgpKSB8IDA7XG4gICAgbWlkID0gKG1pZCArIE1hdGguaW11bChhaDYsIGJsOCkpIHwgMDtcbiAgICBoaSA9IChoaSArIE1hdGguaW11bChhaDYsIGJoOCkpIHwgMDtcbiAgICBsbyA9IChsbyArIE1hdGguaW11bChhbDUsIGJsOSkpIHwgMDtcbiAgICBtaWQgPSAobWlkICsgTWF0aC5pbXVsKGFsNSwgYmg5KSkgfCAwO1xuICAgIG1pZCA9IChtaWQgKyBNYXRoLmltdWwoYWg1LCBibDkpKSB8IDA7XG4gICAgaGkgPSAoaGkgKyBNYXRoLmltdWwoYWg1LCBiaDkpKSB8IDA7XG4gICAgdmFyIHcxNCA9ICgoKGMgKyBsbykgfCAwKSArICgobWlkICYgMHgxZmZmKSA8PCAxMykpIHwgMDtcbiAgICBjID0gKCgoaGkgKyAobWlkID4+PiAxMykpIHwgMCkgKyAodzE0ID4+PiAyNikpIHwgMDtcbiAgICB3MTQgJj0gMHgzZmZmZmZmO1xuICAgIC8qIGsgPSAxNSAqL1xuICAgIGxvID0gTWF0aC5pbXVsKGFsOSwgYmw2KTtcbiAgICBtaWQgPSBNYXRoLmltdWwoYWw5LCBiaDYpO1xuICAgIG1pZCA9IChtaWQgKyBNYXRoLmltdWwoYWg5LCBibDYpKSB8IDA7XG4gICAgaGkgPSBNYXRoLmltdWwoYWg5LCBiaDYpO1xuICAgIGxvID0gKGxvICsgTWF0aC5pbXVsKGFsOCwgYmw3KSkgfCAwO1xuICAgIG1pZCA9IChtaWQgKyBNYXRoLmltdWwoYWw4LCBiaDcpKSB8IDA7XG4gICAgbWlkID0gKG1pZCArIE1hdGguaW11bChhaDgsIGJsNykpIHwgMDtcbiAgICBoaSA9IChoaSArIE1hdGguaW11bChhaDgsIGJoNykpIHwgMDtcbiAgICBsbyA9IChsbyArIE1hdGguaW11bChhbDcsIGJsOCkpIHwgMDtcbiAgICBtaWQgPSAobWlkICsgTWF0aC5pbXVsKGFsNywgYmg4KSkgfCAwO1xuICAgIG1pZCA9IChtaWQgKyBNYXRoLmltdWwoYWg3LCBibDgpKSB8IDA7XG4gICAgaGkgPSAoaGkgKyBNYXRoLmltdWwoYWg3LCBiaDgpKSB8IDA7XG4gICAgbG8gPSAobG8gKyBNYXRoLmltdWwoYWw2LCBibDkpKSB8IDA7XG4gICAgbWlkID0gKG1pZCArIE1hdGguaW11bChhbDYsIGJoOSkpIHwgMDtcbiAgICBtaWQgPSAobWlkICsgTWF0aC5pbXVsKGFoNiwgYmw5KSkgfCAwO1xuICAgIGhpID0gKGhpICsgTWF0aC5pbXVsKGFoNiwgYmg5KSkgfCAwO1xuICAgIHZhciB3MTUgPSAoKChjICsgbG8pIHwgMCkgKyAoKG1pZCAmIDB4MWZmZikgPDwgMTMpKSB8IDA7XG4gICAgYyA9ICgoKGhpICsgKG1pZCA+Pj4gMTMpKSB8IDApICsgKHcxNSA+Pj4gMjYpKSB8IDA7XG4gICAgdzE1ICY9IDB4M2ZmZmZmZjtcbiAgICAvKiBrID0gMTYgKi9cbiAgICBsbyA9IE1hdGguaW11bChhbDksIGJsNyk7XG4gICAgbWlkID0gTWF0aC5pbXVsKGFsOSwgYmg3KTtcbiAgICBtaWQgPSAobWlkICsgTWF0aC5pbXVsKGFoOSwgYmw3KSkgfCAwO1xuICAgIGhpID0gTWF0aC5pbXVsKGFoOSwgYmg3KTtcbiAgICBsbyA9IChsbyArIE1hdGguaW11bChhbDgsIGJsOCkpIHwgMDtcbiAgICBtaWQgPSAobWlkICsgTWF0aC5pbXVsKGFsOCwgYmg4KSkgfCAwO1xuICAgIG1pZCA9IChtaWQgKyBNYXRoLmltdWwoYWg4LCBibDgpKSB8IDA7XG4gICAgaGkgPSAoaGkgKyBNYXRoLmltdWwoYWg4LCBiaDgpKSB8IDA7XG4gICAgbG8gPSAobG8gKyBNYXRoLmltdWwoYWw3LCBibDkpKSB8IDA7XG4gICAgbWlkID0gKG1pZCArIE1hdGguaW11bChhbDcsIGJoOSkpIHwgMDtcbiAgICBtaWQgPSAobWlkICsgTWF0aC5pbXVsKGFoNywgYmw5KSkgfCAwO1xuICAgIGhpID0gKGhpICsgTWF0aC5pbXVsKGFoNywgYmg5KSkgfCAwO1xuICAgIHZhciB3MTYgPSAoKChjICsgbG8pIHwgMCkgKyAoKG1pZCAmIDB4MWZmZikgPDwgMTMpKSB8IDA7XG4gICAgYyA9ICgoKGhpICsgKG1pZCA+Pj4gMTMpKSB8IDApICsgKHcxNiA+Pj4gMjYpKSB8IDA7XG4gICAgdzE2ICY9IDB4M2ZmZmZmZjtcbiAgICAvKiBrID0gMTcgKi9cbiAgICBsbyA9IE1hdGguaW11bChhbDksIGJsOCk7XG4gICAgbWlkID0gTWF0aC5pbXVsKGFsOSwgYmg4KTtcbiAgICBtaWQgPSAobWlkICsgTWF0aC5pbXVsKGFoOSwgYmw4KSkgfCAwO1xuICAgIGhpID0gTWF0aC5pbXVsKGFoOSwgYmg4KTtcbiAgICBsbyA9IChsbyArIE1hdGguaW11bChhbDgsIGJsOSkpIHwgMDtcbiAgICBtaWQgPSAobWlkICsgTWF0aC5pbXVsKGFsOCwgYmg5KSkgfCAwO1xuICAgIG1pZCA9IChtaWQgKyBNYXRoLmltdWwoYWg4LCBibDkpKSB8IDA7XG4gICAgaGkgPSAoaGkgKyBNYXRoLmltdWwoYWg4LCBiaDkpKSB8IDA7XG4gICAgdmFyIHcxNyA9ICgoKGMgKyBsbykgfCAwKSArICgobWlkICYgMHgxZmZmKSA8PCAxMykpIHwgMDtcbiAgICBjID0gKCgoaGkgKyAobWlkID4+PiAxMykpIHwgMCkgKyAodzE3ID4+PiAyNikpIHwgMDtcbiAgICB3MTcgJj0gMHgzZmZmZmZmO1xuICAgIC8qIGsgPSAxOCAqL1xuICAgIGxvID0gTWF0aC5pbXVsKGFsOSwgYmw5KTtcbiAgICBtaWQgPSBNYXRoLmltdWwoYWw5LCBiaDkpO1xuICAgIG1pZCA9IChtaWQgKyBNYXRoLmltdWwoYWg5LCBibDkpKSB8IDA7XG4gICAgaGkgPSBNYXRoLmltdWwoYWg5LCBiaDkpO1xuICAgIHZhciB3MTggPSAoKChjICsgbG8pIHwgMCkgKyAoKG1pZCAmIDB4MWZmZikgPDwgMTMpKSB8IDA7XG4gICAgYyA9ICgoKGhpICsgKG1pZCA+Pj4gMTMpKSB8IDApICsgKHcxOCA+Pj4gMjYpKSB8IDA7XG4gICAgdzE4ICY9IDB4M2ZmZmZmZjtcbiAgICBvWzBdID0gdzA7XG4gICAgb1sxXSA9IHcxO1xuICAgIG9bMl0gPSB3MjtcbiAgICBvWzNdID0gdzM7XG4gICAgb1s0XSA9IHc0O1xuICAgIG9bNV0gPSB3NTtcbiAgICBvWzZdID0gdzY7XG4gICAgb1s3XSA9IHc3O1xuICAgIG9bOF0gPSB3ODtcbiAgICBvWzldID0gdzk7XG4gICAgb1sxMF0gPSB3MTA7XG4gICAgb1sxMV0gPSB3MTE7XG4gICAgb1sxMl0gPSB3MTI7XG4gICAgb1sxM10gPSB3MTM7XG4gICAgb1sxNF0gPSB3MTQ7XG4gICAgb1sxNV0gPSB3MTU7XG4gICAgb1sxNl0gPSB3MTY7XG4gICAgb1sxN10gPSB3MTc7XG4gICAgb1sxOF0gPSB3MTg7XG4gICAgaWYgKGMgIT09IDApIHtcbiAgICAgIG9bMTldID0gYztcbiAgICAgIG91dC5sZW5ndGgrKztcbiAgICB9XG4gICAgcmV0dXJuIG91dDtcbiAgfTtcblxuICAvLyBQb2x5ZmlsbCBjb21iXG4gIGlmICghTWF0aC5pbXVsKSB7XG4gICAgY29tYjEwTXVsVG8gPSBzbWFsbE11bFRvO1xuICB9XG5cbiAgZnVuY3Rpb24gYmlnTXVsVG8gKHNlbGYsIG51bSwgb3V0KSB7XG4gICAgb3V0Lm5lZ2F0aXZlID0gbnVtLm5lZ2F0aXZlIF4gc2VsZi5uZWdhdGl2ZTtcbiAgICBvdXQubGVuZ3RoID0gc2VsZi5sZW5ndGggKyBudW0ubGVuZ3RoO1xuXG4gICAgdmFyIGNhcnJ5ID0gMDtcbiAgICB2YXIgaG5jYXJyeSA9IDA7XG4gICAgZm9yICh2YXIgayA9IDA7IGsgPCBvdXQubGVuZ3RoIC0gMTsgaysrKSB7XG4gICAgICAvLyBTdW0gYWxsIHdvcmRzIHdpdGggdGhlIHNhbWUgYGkgKyBqID0ga2AgYW5kIGFjY3VtdWxhdGUgYG5jYXJyeWAsXG4gICAgICAvLyBub3RlIHRoYXQgbmNhcnJ5IGNvdWxkIGJlID49IDB4M2ZmZmZmZlxuICAgICAgdmFyIG5jYXJyeSA9IGhuY2Fycnk7XG4gICAgICBobmNhcnJ5ID0gMDtcbiAgICAgIHZhciByd29yZCA9IGNhcnJ5ICYgMHgzZmZmZmZmO1xuICAgICAgdmFyIG1heEogPSBNYXRoLm1pbihrLCBudW0ubGVuZ3RoIC0gMSk7XG4gICAgICBmb3IgKHZhciBqID0gTWF0aC5tYXgoMCwgayAtIHNlbGYubGVuZ3RoICsgMSk7IGogPD0gbWF4SjsgaisrKSB7XG4gICAgICAgIHZhciBpID0gayAtIGo7XG4gICAgICAgIHZhciBhID0gc2VsZi53b3Jkc1tpXSB8IDA7XG4gICAgICAgIHZhciBiID0gbnVtLndvcmRzW2pdIHwgMDtcbiAgICAgICAgdmFyIHIgPSBhICogYjtcblxuICAgICAgICB2YXIgbG8gPSByICYgMHgzZmZmZmZmO1xuICAgICAgICBuY2FycnkgPSAobmNhcnJ5ICsgKChyIC8gMHg0MDAwMDAwKSB8IDApKSB8IDA7XG4gICAgICAgIGxvID0gKGxvICsgcndvcmQpIHwgMDtcbiAgICAgICAgcndvcmQgPSBsbyAmIDB4M2ZmZmZmZjtcbiAgICAgICAgbmNhcnJ5ID0gKG5jYXJyeSArIChsbyA+Pj4gMjYpKSB8IDA7XG5cbiAgICAgICAgaG5jYXJyeSArPSBuY2FycnkgPj4+IDI2O1xuICAgICAgICBuY2FycnkgJj0gMHgzZmZmZmZmO1xuICAgICAgfVxuICAgICAgb3V0LndvcmRzW2tdID0gcndvcmQ7XG4gICAgICBjYXJyeSA9IG5jYXJyeTtcbiAgICAgIG5jYXJyeSA9IGhuY2Fycnk7XG4gICAgfVxuICAgIGlmIChjYXJyeSAhPT0gMCkge1xuICAgICAgb3V0LndvcmRzW2tdID0gY2Fycnk7XG4gICAgfSBlbHNlIHtcbiAgICAgIG91dC5sZW5ndGgtLTtcbiAgICB9XG5cbiAgICByZXR1cm4gb3V0Ll9zdHJpcCgpO1xuICB9XG5cbiAgZnVuY3Rpb24ganVtYm9NdWxUbyAoc2VsZiwgbnVtLCBvdXQpIHtcbiAgICAvLyBUZW1wb3JhcnkgZGlzYWJsZSwgc2VlIGh0dHBzOi8vZ2l0aHViLmNvbS9pbmR1dG55L2JuLmpzL2lzc3Vlcy8yMTFcbiAgICAvLyB2YXIgZmZ0bSA9IG5ldyBGRlRNKCk7XG4gICAgLy8gcmV0dXJuIGZmdG0ubXVscChzZWxmLCBudW0sIG91dCk7XG4gICAgcmV0dXJuIGJpZ011bFRvKHNlbGYsIG51bSwgb3V0KTtcbiAgfVxuXG4gIEJOLnByb3RvdHlwZS5tdWxUbyA9IGZ1bmN0aW9uIG11bFRvIChudW0sIG91dCkge1xuICAgIHZhciByZXM7XG4gICAgdmFyIGxlbiA9IHRoaXMubGVuZ3RoICsgbnVtLmxlbmd0aDtcbiAgICBpZiAodGhpcy5sZW5ndGggPT09IDEwICYmIG51bS5sZW5ndGggPT09IDEwKSB7XG4gICAgICByZXMgPSBjb21iMTBNdWxUbyh0aGlzLCBudW0sIG91dCk7XG4gICAgfSBlbHNlIGlmIChsZW4gPCA2Mykge1xuICAgICAgcmVzID0gc21hbGxNdWxUbyh0aGlzLCBudW0sIG91dCk7XG4gICAgfSBlbHNlIGlmIChsZW4gPCAxMDI0KSB7XG4gICAgICByZXMgPSBiaWdNdWxUbyh0aGlzLCBudW0sIG91dCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHJlcyA9IGp1bWJvTXVsVG8odGhpcywgbnVtLCBvdXQpO1xuICAgIH1cblxuICAgIHJldHVybiByZXM7XG4gIH07XG5cbiAgLy8gQ29vbGV5LVR1a2V5IGFsZ29yaXRobSBmb3IgRkZUXG4gIC8vIHNsaWdodGx5IHJldmlzaXRlZCB0byByZWx5IG9uIGxvb3BpbmcgaW5zdGVhZCBvZiByZWN1cnNpb25cblxuICBmdW5jdGlvbiBGRlRNICh4LCB5KSB7XG4gICAgdGhpcy54ID0geDtcbiAgICB0aGlzLnkgPSB5O1xuICB9XG5cbiAgRkZUTS5wcm90b3R5cGUubWFrZVJCVCA9IGZ1bmN0aW9uIG1ha2VSQlQgKE4pIHtcbiAgICB2YXIgdCA9IG5ldyBBcnJheShOKTtcbiAgICB2YXIgbCA9IEJOLnByb3RvdHlwZS5fY291bnRCaXRzKE4pIC0gMTtcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IE47IGkrKykge1xuICAgICAgdFtpXSA9IHRoaXMucmV2QmluKGksIGwsIE4pO1xuICAgIH1cblxuICAgIHJldHVybiB0O1xuICB9O1xuXG4gIC8vIFJldHVybnMgYmluYXJ5LXJldmVyc2VkIHJlcHJlc2VudGF0aW9uIG9mIGB4YFxuICBGRlRNLnByb3RvdHlwZS5yZXZCaW4gPSBmdW5jdGlvbiByZXZCaW4gKHgsIGwsIE4pIHtcbiAgICBpZiAoeCA9PT0gMCB8fCB4ID09PSBOIC0gMSkgcmV0dXJuIHg7XG5cbiAgICB2YXIgcmIgPSAwO1xuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbDsgaSsrKSB7XG4gICAgICByYiB8PSAoeCAmIDEpIDw8IChsIC0gaSAtIDEpO1xuICAgICAgeCA+Pj0gMTtcbiAgICB9XG5cbiAgICByZXR1cm4gcmI7XG4gIH07XG5cbiAgLy8gUGVyZm9ybXMgXCJ0d2VlZGxpbmdcIiBwaGFzZSwgdGhlcmVmb3JlICdlbXVsYXRpbmcnXG4gIC8vIGJlaGF2aW91ciBvZiB0aGUgcmVjdXJzaXZlIGFsZ29yaXRobVxuICBGRlRNLnByb3RvdHlwZS5wZXJtdXRlID0gZnVuY3Rpb24gcGVybXV0ZSAocmJ0LCByd3MsIGl3cywgcnR3cywgaXR3cywgTikge1xuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgTjsgaSsrKSB7XG4gICAgICBydHdzW2ldID0gcndzW3JidFtpXV07XG4gICAgICBpdHdzW2ldID0gaXdzW3JidFtpXV07XG4gICAgfVxuICB9O1xuXG4gIEZGVE0ucHJvdG90eXBlLnRyYW5zZm9ybSA9IGZ1bmN0aW9uIHRyYW5zZm9ybSAocndzLCBpd3MsIHJ0d3MsIGl0d3MsIE4sIHJidCkge1xuICAgIHRoaXMucGVybXV0ZShyYnQsIHJ3cywgaXdzLCBydHdzLCBpdHdzLCBOKTtcblxuICAgIGZvciAodmFyIHMgPSAxOyBzIDwgTjsgcyA8PD0gMSkge1xuICAgICAgdmFyIGwgPSBzIDw8IDE7XG5cbiAgICAgIHZhciBydHdkZiA9IE1hdGguY29zKDIgKiBNYXRoLlBJIC8gbCk7XG4gICAgICB2YXIgaXR3ZGYgPSBNYXRoLnNpbigyICogTWF0aC5QSSAvIGwpO1xuXG4gICAgICBmb3IgKHZhciBwID0gMDsgcCA8IE47IHAgKz0gbCkge1xuICAgICAgICB2YXIgcnR3ZGZfID0gcnR3ZGY7XG4gICAgICAgIHZhciBpdHdkZl8gPSBpdHdkZjtcblxuICAgICAgICBmb3IgKHZhciBqID0gMDsgaiA8IHM7IGorKykge1xuICAgICAgICAgIHZhciByZSA9IHJ0d3NbcCArIGpdO1xuICAgICAgICAgIHZhciBpZSA9IGl0d3NbcCArIGpdO1xuXG4gICAgICAgICAgdmFyIHJvID0gcnR3c1twICsgaiArIHNdO1xuICAgICAgICAgIHZhciBpbyA9IGl0d3NbcCArIGogKyBzXTtcblxuICAgICAgICAgIHZhciByeCA9IHJ0d2RmXyAqIHJvIC0gaXR3ZGZfICogaW87XG5cbiAgICAgICAgICBpbyA9IHJ0d2RmXyAqIGlvICsgaXR3ZGZfICogcm87XG4gICAgICAgICAgcm8gPSByeDtcblxuICAgICAgICAgIHJ0d3NbcCArIGpdID0gcmUgKyBybztcbiAgICAgICAgICBpdHdzW3AgKyBqXSA9IGllICsgaW87XG5cbiAgICAgICAgICBydHdzW3AgKyBqICsgc10gPSByZSAtIHJvO1xuICAgICAgICAgIGl0d3NbcCArIGogKyBzXSA9IGllIC0gaW87XG5cbiAgICAgICAgICAvKiBqc2hpbnQgbWF4ZGVwdGggOiBmYWxzZSAqL1xuICAgICAgICAgIGlmIChqICE9PSBsKSB7XG4gICAgICAgICAgICByeCA9IHJ0d2RmICogcnR3ZGZfIC0gaXR3ZGYgKiBpdHdkZl87XG5cbiAgICAgICAgICAgIGl0d2RmXyA9IHJ0d2RmICogaXR3ZGZfICsgaXR3ZGYgKiBydHdkZl87XG4gICAgICAgICAgICBydHdkZl8gPSByeDtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH07XG5cbiAgRkZUTS5wcm90b3R5cGUuZ3Vlc3NMZW4xM2IgPSBmdW5jdGlvbiBndWVzc0xlbjEzYiAobiwgbSkge1xuICAgIHZhciBOID0gTWF0aC5tYXgobSwgbikgfCAxO1xuICAgIHZhciBvZGQgPSBOICYgMTtcbiAgICB2YXIgaSA9IDA7XG4gICAgZm9yIChOID0gTiAvIDIgfCAwOyBOOyBOID0gTiA+Pj4gMSkge1xuICAgICAgaSsrO1xuICAgIH1cblxuICAgIHJldHVybiAxIDw8IGkgKyAxICsgb2RkO1xuICB9O1xuXG4gIEZGVE0ucHJvdG90eXBlLmNvbmp1Z2F0ZSA9IGZ1bmN0aW9uIGNvbmp1Z2F0ZSAocndzLCBpd3MsIE4pIHtcbiAgICBpZiAoTiA8PSAxKSByZXR1cm47XG5cbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IE4gLyAyOyBpKyspIHtcbiAgICAgIHZhciB0ID0gcndzW2ldO1xuXG4gICAgICByd3NbaV0gPSByd3NbTiAtIGkgLSAxXTtcbiAgICAgIHJ3c1tOIC0gaSAtIDFdID0gdDtcblxuICAgICAgdCA9IGl3c1tpXTtcblxuICAgICAgaXdzW2ldID0gLWl3c1tOIC0gaSAtIDFdO1xuICAgICAgaXdzW04gLSBpIC0gMV0gPSAtdDtcbiAgICB9XG4gIH07XG5cbiAgRkZUTS5wcm90b3R5cGUubm9ybWFsaXplMTNiID0gZnVuY3Rpb24gbm9ybWFsaXplMTNiICh3cywgTikge1xuICAgIHZhciBjYXJyeSA9IDA7XG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBOIC8gMjsgaSsrKSB7XG4gICAgICB2YXIgdyA9IE1hdGgucm91bmQod3NbMiAqIGkgKyAxXSAvIE4pICogMHgyMDAwICtcbiAgICAgICAgTWF0aC5yb3VuZCh3c1syICogaV0gLyBOKSArXG4gICAgICAgIGNhcnJ5O1xuXG4gICAgICB3c1tpXSA9IHcgJiAweDNmZmZmZmY7XG5cbiAgICAgIGlmICh3IDwgMHg0MDAwMDAwKSB7XG4gICAgICAgIGNhcnJ5ID0gMDtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGNhcnJ5ID0gdyAvIDB4NDAwMDAwMCB8IDA7XG4gICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIHdzO1xuICB9O1xuXG4gIEZGVE0ucHJvdG90eXBlLmNvbnZlcnQxM2IgPSBmdW5jdGlvbiBjb252ZXJ0MTNiICh3cywgbGVuLCByd3MsIE4pIHtcbiAgICB2YXIgY2FycnkgPSAwO1xuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbGVuOyBpKyspIHtcbiAgICAgIGNhcnJ5ID0gY2FycnkgKyAod3NbaV0gfCAwKTtcblxuICAgICAgcndzWzIgKiBpXSA9IGNhcnJ5ICYgMHgxZmZmOyBjYXJyeSA9IGNhcnJ5ID4+PiAxMztcbiAgICAgIHJ3c1syICogaSArIDFdID0gY2FycnkgJiAweDFmZmY7IGNhcnJ5ID0gY2FycnkgPj4+IDEzO1xuICAgIH1cblxuICAgIC8vIFBhZCB3aXRoIHplcm9lc1xuICAgIGZvciAoaSA9IDIgKiBsZW47IGkgPCBOOyArK2kpIHtcbiAgICAgIHJ3c1tpXSA9IDA7XG4gICAgfVxuXG4gICAgYXNzZXJ0KGNhcnJ5ID09PSAwKTtcbiAgICBhc3NlcnQoKGNhcnJ5ICYgfjB4MWZmZikgPT09IDApO1xuICB9O1xuXG4gIEZGVE0ucHJvdG90eXBlLnN0dWIgPSBmdW5jdGlvbiBzdHViIChOKSB7XG4gICAgdmFyIHBoID0gbmV3IEFycmF5KE4pO1xuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgTjsgaSsrKSB7XG4gICAgICBwaFtpXSA9IDA7XG4gICAgfVxuXG4gICAgcmV0dXJuIHBoO1xuICB9O1xuXG4gIEZGVE0ucHJvdG90eXBlLm11bHAgPSBmdW5jdGlvbiBtdWxwICh4LCB5LCBvdXQpIHtcbiAgICB2YXIgTiA9IDIgKiB0aGlzLmd1ZXNzTGVuMTNiKHgubGVuZ3RoLCB5Lmxlbmd0aCk7XG5cbiAgICB2YXIgcmJ0ID0gdGhpcy5tYWtlUkJUKE4pO1xuXG4gICAgdmFyIF8gPSB0aGlzLnN0dWIoTik7XG5cbiAgICB2YXIgcndzID0gbmV3IEFycmF5KE4pO1xuICAgIHZhciByd3N0ID0gbmV3IEFycmF5KE4pO1xuICAgIHZhciBpd3N0ID0gbmV3IEFycmF5KE4pO1xuXG4gICAgdmFyIG5yd3MgPSBuZXcgQXJyYXkoTik7XG4gICAgdmFyIG5yd3N0ID0gbmV3IEFycmF5KE4pO1xuICAgIHZhciBuaXdzdCA9IG5ldyBBcnJheShOKTtcblxuICAgIHZhciBybXdzID0gb3V0LndvcmRzO1xuICAgIHJtd3MubGVuZ3RoID0gTjtcblxuICAgIHRoaXMuY29udmVydDEzYih4LndvcmRzLCB4Lmxlbmd0aCwgcndzLCBOKTtcbiAgICB0aGlzLmNvbnZlcnQxM2IoeS53b3JkcywgeS5sZW5ndGgsIG5yd3MsIE4pO1xuXG4gICAgdGhpcy50cmFuc2Zvcm0ocndzLCBfLCByd3N0LCBpd3N0LCBOLCByYnQpO1xuICAgIHRoaXMudHJhbnNmb3JtKG5yd3MsIF8sIG5yd3N0LCBuaXdzdCwgTiwgcmJ0KTtcblxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgTjsgaSsrKSB7XG4gICAgICB2YXIgcnggPSByd3N0W2ldICogbnJ3c3RbaV0gLSBpd3N0W2ldICogbml3c3RbaV07XG4gICAgICBpd3N0W2ldID0gcndzdFtpXSAqIG5pd3N0W2ldICsgaXdzdFtpXSAqIG5yd3N0W2ldO1xuICAgICAgcndzdFtpXSA9IHJ4O1xuICAgIH1cblxuICAgIHRoaXMuY29uanVnYXRlKHJ3c3QsIGl3c3QsIE4pO1xuICAgIHRoaXMudHJhbnNmb3JtKHJ3c3QsIGl3c3QsIHJtd3MsIF8sIE4sIHJidCk7XG4gICAgdGhpcy5jb25qdWdhdGUocm13cywgXywgTik7XG4gICAgdGhpcy5ub3JtYWxpemUxM2Iocm13cywgTik7XG5cbiAgICBvdXQubmVnYXRpdmUgPSB4Lm5lZ2F0aXZlIF4geS5uZWdhdGl2ZTtcbiAgICBvdXQubGVuZ3RoID0geC5sZW5ndGggKyB5Lmxlbmd0aDtcbiAgICByZXR1cm4gb3V0Ll9zdHJpcCgpO1xuICB9O1xuXG4gIC8vIE11bHRpcGx5IGB0aGlzYCBieSBgbnVtYFxuICBCTi5wcm90b3R5cGUubXVsID0gZnVuY3Rpb24gbXVsIChudW0pIHtcbiAgICB2YXIgb3V0ID0gbmV3IEJOKG51bGwpO1xuICAgIG91dC53b3JkcyA9IG5ldyBBcnJheSh0aGlzLmxlbmd0aCArIG51bS5sZW5ndGgpO1xuICAgIHJldHVybiB0aGlzLm11bFRvKG51bSwgb3V0KTtcbiAgfTtcblxuICAvLyBNdWx0aXBseSBlbXBsb3lpbmcgRkZUXG4gIEJOLnByb3RvdHlwZS5tdWxmID0gZnVuY3Rpb24gbXVsZiAobnVtKSB7XG4gICAgdmFyIG91dCA9IG5ldyBCTihudWxsKTtcbiAgICBvdXQud29yZHMgPSBuZXcgQXJyYXkodGhpcy5sZW5ndGggKyBudW0ubGVuZ3RoKTtcbiAgICByZXR1cm4ganVtYm9NdWxUbyh0aGlzLCBudW0sIG91dCk7XG4gIH07XG5cbiAgLy8gSW4tcGxhY2UgTXVsdGlwbGljYXRpb25cbiAgQk4ucHJvdG90eXBlLmltdWwgPSBmdW5jdGlvbiBpbXVsIChudW0pIHtcbiAgICByZXR1cm4gdGhpcy5jbG9uZSgpLm11bFRvKG51bSwgdGhpcyk7XG4gIH07XG5cbiAgQk4ucHJvdG90eXBlLmltdWxuID0gZnVuY3Rpb24gaW11bG4gKG51bSkge1xuICAgIHZhciBpc05lZ051bSA9IG51bSA8IDA7XG4gICAgaWYgKGlzTmVnTnVtKSBudW0gPSAtbnVtO1xuXG4gICAgYXNzZXJ0KHR5cGVvZiBudW0gPT09ICdudW1iZXInKTtcbiAgICBhc3NlcnQobnVtIDwgMHg0MDAwMDAwKTtcblxuICAgIC8vIENhcnJ5XG4gICAgdmFyIGNhcnJ5ID0gMDtcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IHRoaXMubGVuZ3RoOyBpKyspIHtcbiAgICAgIHZhciB3ID0gKHRoaXMud29yZHNbaV0gfCAwKSAqIG51bTtcbiAgICAgIHZhciBsbyA9ICh3ICYgMHgzZmZmZmZmKSArIChjYXJyeSAmIDB4M2ZmZmZmZik7XG4gICAgICBjYXJyeSA+Pj0gMjY7XG4gICAgICBjYXJyeSArPSAodyAvIDB4NDAwMDAwMCkgfCAwO1xuICAgICAgLy8gTk9URTogbG8gaXMgMjdiaXQgbWF4aW11bVxuICAgICAgY2FycnkgKz0gbG8gPj4+IDI2O1xuICAgICAgdGhpcy53b3Jkc1tpXSA9IGxvICYgMHgzZmZmZmZmO1xuICAgIH1cblxuICAgIGlmIChjYXJyeSAhPT0gMCkge1xuICAgICAgdGhpcy53b3Jkc1tpXSA9IGNhcnJ5O1xuICAgICAgdGhpcy5sZW5ndGgrKztcbiAgICB9XG5cbiAgICByZXR1cm4gaXNOZWdOdW0gPyB0aGlzLmluZWcoKSA6IHRoaXM7XG4gIH07XG5cbiAgQk4ucHJvdG90eXBlLm11bG4gPSBmdW5jdGlvbiBtdWxuIChudW0pIHtcbiAgICByZXR1cm4gdGhpcy5jbG9uZSgpLmltdWxuKG51bSk7XG4gIH07XG5cbiAgLy8gYHRoaXNgICogYHRoaXNgXG4gIEJOLnByb3RvdHlwZS5zcXIgPSBmdW5jdGlvbiBzcXIgKCkge1xuICAgIHJldHVybiB0aGlzLm11bCh0aGlzKTtcbiAgfTtcblxuICAvLyBgdGhpc2AgKiBgdGhpc2AgaW4tcGxhY2VcbiAgQk4ucHJvdG90eXBlLmlzcXIgPSBmdW5jdGlvbiBpc3FyICgpIHtcbiAgICByZXR1cm4gdGhpcy5pbXVsKHRoaXMuY2xvbmUoKSk7XG4gIH07XG5cbiAgLy8gTWF0aC5wb3coYHRoaXNgLCBgbnVtYClcbiAgQk4ucHJvdG90eXBlLnBvdyA9IGZ1bmN0aW9uIHBvdyAobnVtKSB7XG4gICAgdmFyIHcgPSB0b0JpdEFycmF5KG51bSk7XG4gICAgaWYgKHcubGVuZ3RoID09PSAwKSByZXR1cm4gbmV3IEJOKDEpO1xuXG4gICAgLy8gU2tpcCBsZWFkaW5nIHplcm9lc1xuICAgIHZhciByZXMgPSB0aGlzO1xuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdy5sZW5ndGg7IGkrKywgcmVzID0gcmVzLnNxcigpKSB7XG4gICAgICBpZiAod1tpXSAhPT0gMCkgYnJlYWs7XG4gICAgfVxuXG4gICAgaWYgKCsraSA8IHcubGVuZ3RoKSB7XG4gICAgICBmb3IgKHZhciBxID0gcmVzLnNxcigpOyBpIDwgdy5sZW5ndGg7IGkrKywgcSA9IHEuc3FyKCkpIHtcbiAgICAgICAgaWYgKHdbaV0gPT09IDApIGNvbnRpbnVlO1xuXG4gICAgICAgIHJlcyA9IHJlcy5tdWwocSk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIHJlcztcbiAgfTtcblxuICAvLyBTaGlmdC1sZWZ0IGluLXBsYWNlXG4gIEJOLnByb3RvdHlwZS5pdXNobG4gPSBmdW5jdGlvbiBpdXNobG4gKGJpdHMpIHtcbiAgICBhc3NlcnQodHlwZW9mIGJpdHMgPT09ICdudW1iZXInICYmIGJpdHMgPj0gMCk7XG4gICAgdmFyIHIgPSBiaXRzICUgMjY7XG4gICAgdmFyIHMgPSAoYml0cyAtIHIpIC8gMjY7XG4gICAgdmFyIGNhcnJ5TWFzayA9ICgweDNmZmZmZmYgPj4+ICgyNiAtIHIpKSA8PCAoMjYgLSByKTtcbiAgICB2YXIgaTtcblxuICAgIGlmIChyICE9PSAwKSB7XG4gICAgICB2YXIgY2FycnkgPSAwO1xuXG4gICAgICBmb3IgKGkgPSAwOyBpIDwgdGhpcy5sZW5ndGg7IGkrKykge1xuICAgICAgICB2YXIgbmV3Q2FycnkgPSB0aGlzLndvcmRzW2ldICYgY2FycnlNYXNrO1xuICAgICAgICB2YXIgYyA9ICgodGhpcy53b3Jkc1tpXSB8IDApIC0gbmV3Q2FycnkpIDw8IHI7XG4gICAgICAgIHRoaXMud29yZHNbaV0gPSBjIHwgY2Fycnk7XG4gICAgICAgIGNhcnJ5ID0gbmV3Q2FycnkgPj4+ICgyNiAtIHIpO1xuICAgICAgfVxuXG4gICAgICBpZiAoY2FycnkpIHtcbiAgICAgICAgdGhpcy53b3Jkc1tpXSA9IGNhcnJ5O1xuICAgICAgICB0aGlzLmxlbmd0aCsrO1xuICAgICAgfVxuICAgIH1cblxuICAgIGlmIChzICE9PSAwKSB7XG4gICAgICBmb3IgKGkgPSB0aGlzLmxlbmd0aCAtIDE7IGkgPj0gMDsgaS0tKSB7XG4gICAgICAgIHRoaXMud29yZHNbaSArIHNdID0gdGhpcy53b3Jkc1tpXTtcbiAgICAgIH1cblxuICAgICAgZm9yIChpID0gMDsgaSA8IHM7IGkrKykge1xuICAgICAgICB0aGlzLndvcmRzW2ldID0gMDtcbiAgICAgIH1cblxuICAgICAgdGhpcy5sZW5ndGggKz0gcztcbiAgICB9XG5cbiAgICByZXR1cm4gdGhpcy5fc3RyaXAoKTtcbiAgfTtcblxuICBCTi5wcm90b3R5cGUuaXNobG4gPSBmdW5jdGlvbiBpc2hsbiAoYml0cykge1xuICAgIC8vIFRPRE8oaW5kdXRueSk6IGltcGxlbWVudCBtZVxuICAgIGFzc2VydCh0aGlzLm5lZ2F0aXZlID09PSAwKTtcbiAgICByZXR1cm4gdGhpcy5pdXNobG4oYml0cyk7XG4gIH07XG5cbiAgLy8gU2hpZnQtcmlnaHQgaW4tcGxhY2VcbiAgLy8gTk9URTogYGhpbnRgIGlzIGEgbG93ZXN0IGJpdCBiZWZvcmUgdHJhaWxpbmcgemVyb2VzXG4gIC8vIE5PVEU6IGlmIGBleHRlbmRlZGAgaXMgcHJlc2VudCAtIGl0IHdpbGwgYmUgZmlsbGVkIHdpdGggZGVzdHJveWVkIGJpdHNcbiAgQk4ucHJvdG90eXBlLml1c2hybiA9IGZ1bmN0aW9uIGl1c2hybiAoYml0cywgaGludCwgZXh0ZW5kZWQpIHtcbiAgICBhc3NlcnQodHlwZW9mIGJpdHMgPT09ICdudW1iZXInICYmIGJpdHMgPj0gMCk7XG4gICAgdmFyIGg7XG4gICAgaWYgKGhpbnQpIHtcbiAgICAgIGggPSAoaGludCAtIChoaW50ICUgMjYpKSAvIDI2O1xuICAgIH0gZWxzZSB7XG4gICAgICBoID0gMDtcbiAgICB9XG5cbiAgICB2YXIgciA9IGJpdHMgJSAyNjtcbiAgICB2YXIgcyA9IE1hdGgubWluKChiaXRzIC0gcikgLyAyNiwgdGhpcy5sZW5ndGgpO1xuICAgIHZhciBtYXNrID0gMHgzZmZmZmZmIF4gKCgweDNmZmZmZmYgPj4+IHIpIDw8IHIpO1xuICAgIHZhciBtYXNrZWRXb3JkcyA9IGV4dGVuZGVkO1xuXG4gICAgaCAtPSBzO1xuICAgIGggPSBNYXRoLm1heCgwLCBoKTtcblxuICAgIC8vIEV4dGVuZGVkIG1vZGUsIGNvcHkgbWFza2VkIHBhcnRcbiAgICBpZiAobWFza2VkV29yZHMpIHtcbiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgczsgaSsrKSB7XG4gICAgICAgIG1hc2tlZFdvcmRzLndvcmRzW2ldID0gdGhpcy53b3Jkc1tpXTtcbiAgICAgIH1cbiAgICAgIG1hc2tlZFdvcmRzLmxlbmd0aCA9IHM7XG4gICAgfVxuXG4gICAgaWYgKHMgPT09IDApIHtcbiAgICAgIC8vIE5vLW9wLCB3ZSBzaG91bGQgbm90IG1vdmUgYW55dGhpbmcgYXQgYWxsXG4gICAgfSBlbHNlIGlmICh0aGlzLmxlbmd0aCA+IHMpIHtcbiAgICAgIHRoaXMubGVuZ3RoIC09IHM7XG4gICAgICBmb3IgKGkgPSAwOyBpIDwgdGhpcy5sZW5ndGg7IGkrKykge1xuICAgICAgICB0aGlzLndvcmRzW2ldID0gdGhpcy53b3Jkc1tpICsgc107XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMud29yZHNbMF0gPSAwO1xuICAgICAgdGhpcy5sZW5ndGggPSAxO1xuICAgIH1cblxuICAgIHZhciBjYXJyeSA9IDA7XG4gICAgZm9yIChpID0gdGhpcy5sZW5ndGggLSAxOyBpID49IDAgJiYgKGNhcnJ5ICE9PSAwIHx8IGkgPj0gaCk7IGktLSkge1xuICAgICAgdmFyIHdvcmQgPSB0aGlzLndvcmRzW2ldIHwgMDtcbiAgICAgIHRoaXMud29yZHNbaV0gPSAoY2FycnkgPDwgKDI2IC0gcikpIHwgKHdvcmQgPj4+IHIpO1xuICAgICAgY2FycnkgPSB3b3JkICYgbWFzaztcbiAgICB9XG5cbiAgICAvLyBQdXNoIGNhcnJpZWQgYml0cyBhcyBhIG1hc2tcbiAgICBpZiAobWFza2VkV29yZHMgJiYgY2FycnkgIT09IDApIHtcbiAgICAgIG1hc2tlZFdvcmRzLndvcmRzW21hc2tlZFdvcmRzLmxlbmd0aCsrXSA9IGNhcnJ5O1xuICAgIH1cblxuICAgIGlmICh0aGlzLmxlbmd0aCA9PT0gMCkge1xuICAgICAgdGhpcy53b3Jkc1swXSA9IDA7XG4gICAgICB0aGlzLmxlbmd0aCA9IDE7XG4gICAgfVxuXG4gICAgcmV0dXJuIHRoaXMuX3N0cmlwKCk7XG4gIH07XG5cbiAgQk4ucHJvdG90eXBlLmlzaHJuID0gZnVuY3Rpb24gaXNocm4gKGJpdHMsIGhpbnQsIGV4dGVuZGVkKSB7XG4gICAgLy8gVE9ETyhpbmR1dG55KTogaW1wbGVtZW50IG1lXG4gICAgYXNzZXJ0KHRoaXMubmVnYXRpdmUgPT09IDApO1xuICAgIHJldHVybiB0aGlzLml1c2hybihiaXRzLCBoaW50LCBleHRlbmRlZCk7XG4gIH07XG5cbiAgLy8gU2hpZnQtbGVmdFxuICBCTi5wcm90b3R5cGUuc2hsbiA9IGZ1bmN0aW9uIHNobG4gKGJpdHMpIHtcbiAgICByZXR1cm4gdGhpcy5jbG9uZSgpLmlzaGxuKGJpdHMpO1xuICB9O1xuXG4gIEJOLnByb3RvdHlwZS51c2hsbiA9IGZ1bmN0aW9uIHVzaGxuIChiaXRzKSB7XG4gICAgcmV0dXJuIHRoaXMuY2xvbmUoKS5pdXNobG4oYml0cyk7XG4gIH07XG5cbiAgLy8gU2hpZnQtcmlnaHRcbiAgQk4ucHJvdG90eXBlLnNocm4gPSBmdW5jdGlvbiBzaHJuIChiaXRzKSB7XG4gICAgcmV0dXJuIHRoaXMuY2xvbmUoKS5pc2hybihiaXRzKTtcbiAgfTtcblxuICBCTi5wcm90b3R5cGUudXNocm4gPSBmdW5jdGlvbiB1c2hybiAoYml0cykge1xuICAgIHJldHVybiB0aGlzLmNsb25lKCkuaXVzaHJuKGJpdHMpO1xuICB9O1xuXG4gIC8vIFRlc3QgaWYgbiBiaXQgaXMgc2V0XG4gIEJOLnByb3RvdHlwZS50ZXN0biA9IGZ1bmN0aW9uIHRlc3RuIChiaXQpIHtcbiAgICBhc3NlcnQodHlwZW9mIGJpdCA9PT0gJ251bWJlcicgJiYgYml0ID49IDApO1xuICAgIHZhciByID0gYml0ICUgMjY7XG4gICAgdmFyIHMgPSAoYml0IC0gcikgLyAyNjtcbiAgICB2YXIgcSA9IDEgPDwgcjtcblxuICAgIC8vIEZhc3QgY2FzZTogYml0IGlzIG11Y2ggaGlnaGVyIHRoYW4gYWxsIGV4aXN0aW5nIHdvcmRzXG4gICAgaWYgKHRoaXMubGVuZ3RoIDw9IHMpIHJldHVybiBmYWxzZTtcblxuICAgIC8vIENoZWNrIGJpdCBhbmQgcmV0dXJuXG4gICAgdmFyIHcgPSB0aGlzLndvcmRzW3NdO1xuXG4gICAgcmV0dXJuICEhKHcgJiBxKTtcbiAgfTtcblxuICAvLyBSZXR1cm4gb25seSBsb3dlcnMgYml0cyBvZiBudW1iZXIgKGluLXBsYWNlKVxuICBCTi5wcm90b3R5cGUuaW1hc2tuID0gZnVuY3Rpb24gaW1hc2tuIChiaXRzKSB7XG4gICAgYXNzZXJ0KHR5cGVvZiBiaXRzID09PSAnbnVtYmVyJyAmJiBiaXRzID49IDApO1xuICAgIHZhciByID0gYml0cyAlIDI2O1xuICAgIHZhciBzID0gKGJpdHMgLSByKSAvIDI2O1xuXG4gICAgYXNzZXJ0KHRoaXMubmVnYXRpdmUgPT09IDAsICdpbWFza24gd29ya3Mgb25seSB3aXRoIHBvc2l0aXZlIG51bWJlcnMnKTtcblxuICAgIGlmICh0aGlzLmxlbmd0aCA8PSBzKSB7XG4gICAgICByZXR1cm4gdGhpcztcbiAgICB9XG5cbiAgICBpZiAociAhPT0gMCkge1xuICAgICAgcysrO1xuICAgIH1cbiAgICB0aGlzLmxlbmd0aCA9IE1hdGgubWluKHMsIHRoaXMubGVuZ3RoKTtcblxuICAgIGlmIChyICE9PSAwKSB7XG4gICAgICB2YXIgbWFzayA9IDB4M2ZmZmZmZiBeICgoMHgzZmZmZmZmID4+PiByKSA8PCByKTtcbiAgICAgIHRoaXMud29yZHNbdGhpcy5sZW5ndGggLSAxXSAmPSBtYXNrO1xuICAgIH1cblxuICAgIHJldHVybiB0aGlzLl9zdHJpcCgpO1xuICB9O1xuXG4gIC8vIFJldHVybiBvbmx5IGxvd2VycyBiaXRzIG9mIG51bWJlclxuICBCTi5wcm90b3R5cGUubWFza24gPSBmdW5jdGlvbiBtYXNrbiAoYml0cykge1xuICAgIHJldHVybiB0aGlzLmNsb25lKCkuaW1hc2tuKGJpdHMpO1xuICB9O1xuXG4gIC8vIEFkZCBwbGFpbiBudW1iZXIgYG51bWAgdG8gYHRoaXNgXG4gIEJOLnByb3RvdHlwZS5pYWRkbiA9IGZ1bmN0aW9uIGlhZGRuIChudW0pIHtcbiAgICBhc3NlcnQodHlwZW9mIG51bSA9PT0gJ251bWJlcicpO1xuICAgIGFzc2VydChudW0gPCAweDQwMDAwMDApO1xuICAgIGlmIChudW0gPCAwKSByZXR1cm4gdGhpcy5pc3VibigtbnVtKTtcblxuICAgIC8vIFBvc3NpYmxlIHNpZ24gY2hhbmdlXG4gICAgaWYgKHRoaXMubmVnYXRpdmUgIT09IDApIHtcbiAgICAgIGlmICh0aGlzLmxlbmd0aCA9PT0gMSAmJiAodGhpcy53b3Jkc1swXSB8IDApIDw9IG51bSkge1xuICAgICAgICB0aGlzLndvcmRzWzBdID0gbnVtIC0gKHRoaXMud29yZHNbMF0gfCAwKTtcbiAgICAgICAgdGhpcy5uZWdhdGl2ZSA9IDA7XG4gICAgICAgIHJldHVybiB0aGlzO1xuICAgICAgfVxuXG4gICAgICB0aGlzLm5lZ2F0aXZlID0gMDtcbiAgICAgIHRoaXMuaXN1Ym4obnVtKTtcbiAgICAgIHRoaXMubmVnYXRpdmUgPSAxO1xuICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxuXG4gICAgLy8gQWRkIHdpdGhvdXQgY2hlY2tzXG4gICAgcmV0dXJuIHRoaXMuX2lhZGRuKG51bSk7XG4gIH07XG5cbiAgQk4ucHJvdG90eXBlLl9pYWRkbiA9IGZ1bmN0aW9uIF9pYWRkbiAobnVtKSB7XG4gICAgdGhpcy53b3Jkc1swXSArPSBudW07XG5cbiAgICAvLyBDYXJyeVxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdGhpcy5sZW5ndGggJiYgdGhpcy53b3Jkc1tpXSA+PSAweDQwMDAwMDA7IGkrKykge1xuICAgICAgdGhpcy53b3Jkc1tpXSAtPSAweDQwMDAwMDA7XG4gICAgICBpZiAoaSA9PT0gdGhpcy5sZW5ndGggLSAxKSB7XG4gICAgICAgIHRoaXMud29yZHNbaSArIDFdID0gMTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHRoaXMud29yZHNbaSArIDFdKys7XG4gICAgICB9XG4gICAgfVxuICAgIHRoaXMubGVuZ3RoID0gTWF0aC5tYXgodGhpcy5sZW5ndGgsIGkgKyAxKTtcblxuICAgIHJldHVybiB0aGlzO1xuICB9O1xuXG4gIC8vIFN1YnRyYWN0IHBsYWluIG51bWJlciBgbnVtYCBmcm9tIGB0aGlzYFxuICBCTi5wcm90b3R5cGUuaXN1Ym4gPSBmdW5jdGlvbiBpc3VibiAobnVtKSB7XG4gICAgYXNzZXJ0KHR5cGVvZiBudW0gPT09ICdudW1iZXInKTtcbiAgICBhc3NlcnQobnVtIDwgMHg0MDAwMDAwKTtcbiAgICBpZiAobnVtIDwgMCkgcmV0dXJuIHRoaXMuaWFkZG4oLW51bSk7XG5cbiAgICBpZiAodGhpcy5uZWdhdGl2ZSAhPT0gMCkge1xuICAgICAgdGhpcy5uZWdhdGl2ZSA9IDA7XG4gICAgICB0aGlzLmlhZGRuKG51bSk7XG4gICAgICB0aGlzLm5lZ2F0aXZlID0gMTtcbiAgICAgIHJldHVybiB0aGlzO1xuICAgIH1cblxuICAgIHRoaXMud29yZHNbMF0gLT0gbnVtO1xuXG4gICAgaWYgKHRoaXMubGVuZ3RoID09PSAxICYmIHRoaXMud29yZHNbMF0gPCAwKSB7XG4gICAgICB0aGlzLndvcmRzWzBdID0gLXRoaXMud29yZHNbMF07XG4gICAgICB0aGlzLm5lZ2F0aXZlID0gMTtcbiAgICB9IGVsc2Uge1xuICAgICAgLy8gQ2FycnlcbiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdGhpcy5sZW5ndGggJiYgdGhpcy53b3Jkc1tpXSA8IDA7IGkrKykge1xuICAgICAgICB0aGlzLndvcmRzW2ldICs9IDB4NDAwMDAwMDtcbiAgICAgICAgdGhpcy53b3Jkc1tpICsgMV0gLT0gMTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gdGhpcy5fc3RyaXAoKTtcbiAgfTtcblxuICBCTi5wcm90b3R5cGUuYWRkbiA9IGZ1bmN0aW9uIGFkZG4gKG51bSkge1xuICAgIHJldHVybiB0aGlzLmNsb25lKCkuaWFkZG4obnVtKTtcbiAgfTtcblxuICBCTi5wcm90b3R5cGUuc3VibiA9IGZ1bmN0aW9uIHN1Ym4gKG51bSkge1xuICAgIHJldHVybiB0aGlzLmNsb25lKCkuaXN1Ym4obnVtKTtcbiAgfTtcblxuICBCTi5wcm90b3R5cGUuaWFicyA9IGZ1bmN0aW9uIGlhYnMgKCkge1xuICAgIHRoaXMubmVnYXRpdmUgPSAwO1xuXG4gICAgcmV0dXJuIHRoaXM7XG4gIH07XG5cbiAgQk4ucHJvdG90eXBlLmFicyA9IGZ1bmN0aW9uIGFicyAoKSB7XG4gICAgcmV0dXJuIHRoaXMuY2xvbmUoKS5pYWJzKCk7XG4gIH07XG5cbiAgQk4ucHJvdG90eXBlLl9pc2hsbnN1Ym11bCA9IGZ1bmN0aW9uIF9pc2hsbnN1Ym11bCAobnVtLCBtdWwsIHNoaWZ0KSB7XG4gICAgdmFyIGxlbiA9IG51bS5sZW5ndGggKyBzaGlmdDtcbiAgICB2YXIgaTtcblxuICAgIHRoaXMuX2V4cGFuZChsZW4pO1xuXG4gICAgdmFyIHc7XG4gICAgdmFyIGNhcnJ5ID0gMDtcbiAgICBmb3IgKGkgPSAwOyBpIDwgbnVtLmxlbmd0aDsgaSsrKSB7XG4gICAgICB3ID0gKHRoaXMud29yZHNbaSArIHNoaWZ0XSB8IDApICsgY2Fycnk7XG4gICAgICB2YXIgcmlnaHQgPSAobnVtLndvcmRzW2ldIHwgMCkgKiBtdWw7XG4gICAgICB3IC09IHJpZ2h0ICYgMHgzZmZmZmZmO1xuICAgICAgY2FycnkgPSAodyA+PiAyNikgLSAoKHJpZ2h0IC8gMHg0MDAwMDAwKSB8IDApO1xuICAgICAgdGhpcy53b3Jkc1tpICsgc2hpZnRdID0gdyAmIDB4M2ZmZmZmZjtcbiAgICB9XG4gICAgZm9yICg7IGkgPCB0aGlzLmxlbmd0aCAtIHNoaWZ0OyBpKyspIHtcbiAgICAgIHcgPSAodGhpcy53b3Jkc1tpICsgc2hpZnRdIHwgMCkgKyBjYXJyeTtcbiAgICAgIGNhcnJ5ID0gdyA+PiAyNjtcbiAgICAgIHRoaXMud29yZHNbaSArIHNoaWZ0XSA9IHcgJiAweDNmZmZmZmY7XG4gICAgfVxuXG4gICAgaWYgKGNhcnJ5ID09PSAwKSByZXR1cm4gdGhpcy5fc3RyaXAoKTtcblxuICAgIC8vIFN1YnRyYWN0aW9uIG92ZXJmbG93XG4gICAgYXNzZXJ0KGNhcnJ5ID09PSAtMSk7XG4gICAgY2FycnkgPSAwO1xuICAgIGZvciAoaSA9IDA7IGkgPCB0aGlzLmxlbmd0aDsgaSsrKSB7XG4gICAgICB3ID0gLSh0aGlzLndvcmRzW2ldIHwgMCkgKyBjYXJyeTtcbiAgICAgIGNhcnJ5ID0gdyA+PiAyNjtcbiAgICAgIHRoaXMud29yZHNbaV0gPSB3ICYgMHgzZmZmZmZmO1xuICAgIH1cbiAgICB0aGlzLm5lZ2F0aXZlID0gMTtcblxuICAgIHJldHVybiB0aGlzLl9zdHJpcCgpO1xuICB9O1xuXG4gIEJOLnByb3RvdHlwZS5fd29yZERpdiA9IGZ1bmN0aW9uIF93b3JkRGl2IChudW0sIG1vZGUpIHtcbiAgICB2YXIgc2hpZnQgPSB0aGlzLmxlbmd0aCAtIG51bS5sZW5ndGg7XG5cbiAgICB2YXIgYSA9IHRoaXMuY2xvbmUoKTtcbiAgICB2YXIgYiA9IG51bTtcblxuICAgIC8vIE5vcm1hbGl6ZVxuICAgIHZhciBiaGkgPSBiLndvcmRzW2IubGVuZ3RoIC0gMV0gfCAwO1xuICAgIHZhciBiaGlCaXRzID0gdGhpcy5fY291bnRCaXRzKGJoaSk7XG4gICAgc2hpZnQgPSAyNiAtIGJoaUJpdHM7XG4gICAgaWYgKHNoaWZ0ICE9PSAwKSB7XG4gICAgICBiID0gYi51c2hsbihzaGlmdCk7XG4gICAgICBhLml1c2hsbihzaGlmdCk7XG4gICAgICBiaGkgPSBiLndvcmRzW2IubGVuZ3RoIC0gMV0gfCAwO1xuICAgIH1cblxuICAgIC8vIEluaXRpYWxpemUgcXVvdGllbnRcbiAgICB2YXIgbSA9IGEubGVuZ3RoIC0gYi5sZW5ndGg7XG4gICAgdmFyIHE7XG5cbiAgICBpZiAobW9kZSAhPT0gJ21vZCcpIHtcbiAgICAgIHEgPSBuZXcgQk4obnVsbCk7XG4gICAgICBxLmxlbmd0aCA9IG0gKyAxO1xuICAgICAgcS53b3JkcyA9IG5ldyBBcnJheShxLmxlbmd0aCk7XG4gICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHEubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgcS53b3Jkc1tpXSA9IDA7XG4gICAgICB9XG4gICAgfVxuXG4gICAgdmFyIGRpZmYgPSBhLmNsb25lKCkuX2lzaGxuc3VibXVsKGIsIDEsIG0pO1xuICAgIGlmIChkaWZmLm5lZ2F0aXZlID09PSAwKSB7XG4gICAgICBhID0gZGlmZjtcbiAgICAgIGlmIChxKSB7XG4gICAgICAgIHEud29yZHNbbV0gPSAxO1xuICAgICAgfVxuICAgIH1cblxuICAgIGZvciAodmFyIGogPSBtIC0gMTsgaiA+PSAwOyBqLS0pIHtcbiAgICAgIHZhciBxaiA9IChhLndvcmRzW2IubGVuZ3RoICsgal0gfCAwKSAqIDB4NDAwMDAwMCArXG4gICAgICAgIChhLndvcmRzW2IubGVuZ3RoICsgaiAtIDFdIHwgMCk7XG5cbiAgICAgIC8vIE5PVEU6IChxaiAvIGJoaSkgaXMgKDB4M2ZmZmZmZiAqIDB4NDAwMDAwMCArIDB4M2ZmZmZmZikgLyAweDIwMDAwMDAgbWF4XG4gICAgICAvLyAoMHg3ZmZmZmZmKVxuICAgICAgcWogPSBNYXRoLm1pbigocWogLyBiaGkpIHwgMCwgMHgzZmZmZmZmKTtcblxuICAgICAgYS5faXNobG5zdWJtdWwoYiwgcWosIGopO1xuICAgICAgd2hpbGUgKGEubmVnYXRpdmUgIT09IDApIHtcbiAgICAgICAgcWotLTtcbiAgICAgICAgYS5uZWdhdGl2ZSA9IDA7XG4gICAgICAgIGEuX2lzaGxuc3VibXVsKGIsIDEsIGopO1xuICAgICAgICBpZiAoIWEuaXNaZXJvKCkpIHtcbiAgICAgICAgICBhLm5lZ2F0aXZlIF49IDE7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGlmIChxKSB7XG4gICAgICAgIHEud29yZHNbal0gPSBxajtcbiAgICAgIH1cbiAgICB9XG4gICAgaWYgKHEpIHtcbiAgICAgIHEuX3N0cmlwKCk7XG4gICAgfVxuICAgIGEuX3N0cmlwKCk7XG5cbiAgICAvLyBEZW5vcm1hbGl6ZVxuICAgIGlmIChtb2RlICE9PSAnZGl2JyAmJiBzaGlmdCAhPT0gMCkge1xuICAgICAgYS5pdXNocm4oc2hpZnQpO1xuICAgIH1cblxuICAgIHJldHVybiB7XG4gICAgICBkaXY6IHEgfHwgbnVsbCxcbiAgICAgIG1vZDogYVxuICAgIH07XG4gIH07XG5cbiAgLy8gTk9URTogMSkgYG1vZGVgIGNhbiBiZSBzZXQgdG8gYG1vZGAgdG8gcmVxdWVzdCBtb2Qgb25seSxcbiAgLy8gICAgICAgdG8gYGRpdmAgdG8gcmVxdWVzdCBkaXYgb25seSwgb3IgYmUgYWJzZW50IHRvXG4gIC8vICAgICAgIHJlcXVlc3QgYm90aCBkaXYgJiBtb2RcbiAgLy8gICAgICAgMikgYHBvc2l0aXZlYCBpcyB0cnVlIGlmIHVuc2lnbmVkIG1vZCBpcyByZXF1ZXN0ZWRcbiAgQk4ucHJvdG90eXBlLmRpdm1vZCA9IGZ1bmN0aW9uIGRpdm1vZCAobnVtLCBtb2RlLCBwb3NpdGl2ZSkge1xuICAgIGFzc2VydCghbnVtLmlzWmVybygpKTtcblxuICAgIGlmICh0aGlzLmlzWmVybygpKSB7XG4gICAgICByZXR1cm4ge1xuICAgICAgICBkaXY6IG5ldyBCTigwKSxcbiAgICAgICAgbW9kOiBuZXcgQk4oMClcbiAgICAgIH07XG4gICAgfVxuXG4gICAgdmFyIGRpdiwgbW9kLCByZXM7XG4gICAgaWYgKHRoaXMubmVnYXRpdmUgIT09IDAgJiYgbnVtLm5lZ2F0aXZlID09PSAwKSB7XG4gICAgICByZXMgPSB0aGlzLm5lZygpLmRpdm1vZChudW0sIG1vZGUpO1xuXG4gICAgICBpZiAobW9kZSAhPT0gJ21vZCcpIHtcbiAgICAgICAgZGl2ID0gcmVzLmRpdi5uZWcoKTtcbiAgICAgIH1cblxuICAgICAgaWYgKG1vZGUgIT09ICdkaXYnKSB7XG4gICAgICAgIG1vZCA9IHJlcy5tb2QubmVnKCk7XG4gICAgICAgIGlmIChwb3NpdGl2ZSAmJiBtb2QubmVnYXRpdmUgIT09IDApIHtcbiAgICAgICAgICBtb2QuaWFkZChudW0pO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIHJldHVybiB7XG4gICAgICAgIGRpdjogZGl2LFxuICAgICAgICBtb2Q6IG1vZFxuICAgICAgfTtcbiAgICB9XG5cbiAgICBpZiAodGhpcy5uZWdhdGl2ZSA9PT0gMCAmJiBudW0ubmVnYXRpdmUgIT09IDApIHtcbiAgICAgIHJlcyA9IHRoaXMuZGl2bW9kKG51bS5uZWcoKSwgbW9kZSk7XG5cbiAgICAgIGlmIChtb2RlICE9PSAnbW9kJykge1xuICAgICAgICBkaXYgPSByZXMuZGl2Lm5lZygpO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4ge1xuICAgICAgICBkaXY6IGRpdixcbiAgICAgICAgbW9kOiByZXMubW9kXG4gICAgICB9O1xuICAgIH1cblxuICAgIGlmICgodGhpcy5uZWdhdGl2ZSAmIG51bS5uZWdhdGl2ZSkgIT09IDApIHtcbiAgICAgIHJlcyA9IHRoaXMubmVnKCkuZGl2bW9kKG51bS5uZWcoKSwgbW9kZSk7XG5cbiAgICAgIGlmIChtb2RlICE9PSAnZGl2Jykge1xuICAgICAgICBtb2QgPSByZXMubW9kLm5lZygpO1xuICAgICAgICBpZiAocG9zaXRpdmUgJiYgbW9kLm5lZ2F0aXZlICE9PSAwKSB7XG4gICAgICAgICAgbW9kLmlzdWIobnVtKTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICByZXR1cm4ge1xuICAgICAgICBkaXY6IHJlcy5kaXYsXG4gICAgICAgIG1vZDogbW9kXG4gICAgICB9O1xuICAgIH1cblxuICAgIC8vIEJvdGggbnVtYmVycyBhcmUgcG9zaXRpdmUgYXQgdGhpcyBwb2ludFxuXG4gICAgLy8gU3RyaXAgYm90aCBudW1iZXJzIHRvIGFwcHJveGltYXRlIHNoaWZ0IHZhbHVlXG4gICAgaWYgKG51bS5sZW5ndGggPiB0aGlzLmxlbmd0aCB8fCB0aGlzLmNtcChudW0pIDwgMCkge1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgZGl2OiBuZXcgQk4oMCksXG4gICAgICAgIG1vZDogdGhpc1xuICAgICAgfTtcbiAgICB9XG5cbiAgICAvLyBWZXJ5IHNob3J0IHJlZHVjdGlvblxuICAgIGlmIChudW0ubGVuZ3RoID09PSAxKSB7XG4gICAgICBpZiAobW9kZSA9PT0gJ2RpdicpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICBkaXY6IHRoaXMuZGl2bihudW0ud29yZHNbMF0pLFxuICAgICAgICAgIG1vZDogbnVsbFxuICAgICAgICB9O1xuICAgICAgfVxuXG4gICAgICBpZiAobW9kZSA9PT0gJ21vZCcpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICBkaXY6IG51bGwsXG4gICAgICAgICAgbW9kOiBuZXcgQk4odGhpcy5tb2RybihudW0ud29yZHNbMF0pKVxuICAgICAgICB9O1xuICAgICAgfVxuXG4gICAgICByZXR1cm4ge1xuICAgICAgICBkaXY6IHRoaXMuZGl2bihudW0ud29yZHNbMF0pLFxuICAgICAgICBtb2Q6IG5ldyBCTih0aGlzLm1vZHJuKG51bS53b3Jkc1swXSkpXG4gICAgICB9O1xuICAgIH1cblxuICAgIHJldHVybiB0aGlzLl93b3JkRGl2KG51bSwgbW9kZSk7XG4gIH07XG5cbiAgLy8gRmluZCBgdGhpc2AgLyBgbnVtYFxuICBCTi5wcm90b3R5cGUuZGl2ID0gZnVuY3Rpb24gZGl2IChudW0pIHtcbiAgICByZXR1cm4gdGhpcy5kaXZtb2QobnVtLCAnZGl2JywgZmFsc2UpLmRpdjtcbiAgfTtcblxuICAvLyBGaW5kIGB0aGlzYCAlIGBudW1gXG4gIEJOLnByb3RvdHlwZS5tb2QgPSBmdW5jdGlvbiBtb2QgKG51bSkge1xuICAgIHJldHVybiB0aGlzLmRpdm1vZChudW0sICdtb2QnLCBmYWxzZSkubW9kO1xuICB9O1xuXG4gIEJOLnByb3RvdHlwZS51bW9kID0gZnVuY3Rpb24gdW1vZCAobnVtKSB7XG4gICAgcmV0dXJuIHRoaXMuZGl2bW9kKG51bSwgJ21vZCcsIHRydWUpLm1vZDtcbiAgfTtcblxuICAvLyBGaW5kIFJvdW5kKGB0aGlzYCAvIGBudW1gKVxuICBCTi5wcm90b3R5cGUuZGl2Um91bmQgPSBmdW5jdGlvbiBkaXZSb3VuZCAobnVtKSB7XG4gICAgdmFyIGRtID0gdGhpcy5kaXZtb2QobnVtKTtcblxuICAgIC8vIEZhc3QgY2FzZSAtIGV4YWN0IGRpdmlzaW9uXG4gICAgaWYgKGRtLm1vZC5pc1plcm8oKSkgcmV0dXJuIGRtLmRpdjtcblxuICAgIHZhciBtb2QgPSBkbS5kaXYubmVnYXRpdmUgIT09IDAgPyBkbS5tb2QuaXN1YihudW0pIDogZG0ubW9kO1xuXG4gICAgdmFyIGhhbGYgPSBudW0udXNocm4oMSk7XG4gICAgdmFyIHIyID0gbnVtLmFuZGxuKDEpO1xuICAgIHZhciBjbXAgPSBtb2QuY21wKGhhbGYpO1xuXG4gICAgLy8gUm91bmQgZG93blxuICAgIGlmIChjbXAgPCAwIHx8IChyMiA9PT0gMSAmJiBjbXAgPT09IDApKSByZXR1cm4gZG0uZGl2O1xuXG4gICAgLy8gUm91bmQgdXBcbiAgICByZXR1cm4gZG0uZGl2Lm5lZ2F0aXZlICE9PSAwID8gZG0uZGl2LmlzdWJuKDEpIDogZG0uZGl2LmlhZGRuKDEpO1xuICB9O1xuXG4gIEJOLnByb3RvdHlwZS5tb2RybiA9IGZ1bmN0aW9uIG1vZHJuIChudW0pIHtcbiAgICB2YXIgaXNOZWdOdW0gPSBudW0gPCAwO1xuICAgIGlmIChpc05lZ051bSkgbnVtID0gLW51bTtcblxuICAgIGFzc2VydChudW0gPD0gMHgzZmZmZmZmKTtcbiAgICB2YXIgcCA9ICgxIDw8IDI2KSAlIG51bTtcblxuICAgIHZhciBhY2MgPSAwO1xuICAgIGZvciAodmFyIGkgPSB0aGlzLmxlbmd0aCAtIDE7IGkgPj0gMDsgaS0tKSB7XG4gICAgICBhY2MgPSAocCAqIGFjYyArICh0aGlzLndvcmRzW2ldIHwgMCkpICUgbnVtO1xuICAgIH1cblxuICAgIHJldHVybiBpc05lZ051bSA/IC1hY2MgOiBhY2M7XG4gIH07XG5cbiAgLy8gV0FSTklORzogREVQUkVDQVRFRFxuICBCTi5wcm90b3R5cGUubW9kbiA9IGZ1bmN0aW9uIG1vZG4gKG51bSkge1xuICAgIHJldHVybiB0aGlzLm1vZHJuKG51bSk7XG4gIH07XG5cbiAgLy8gSW4tcGxhY2UgZGl2aXNpb24gYnkgbnVtYmVyXG4gIEJOLnByb3RvdHlwZS5pZGl2biA9IGZ1bmN0aW9uIGlkaXZuIChudW0pIHtcbiAgICB2YXIgaXNOZWdOdW0gPSBudW0gPCAwO1xuICAgIGlmIChpc05lZ051bSkgbnVtID0gLW51bTtcblxuICAgIGFzc2VydChudW0gPD0gMHgzZmZmZmZmKTtcblxuICAgIHZhciBjYXJyeSA9IDA7XG4gICAgZm9yICh2YXIgaSA9IHRoaXMubGVuZ3RoIC0gMTsgaSA+PSAwOyBpLS0pIHtcbiAgICAgIHZhciB3ID0gKHRoaXMud29yZHNbaV0gfCAwKSArIGNhcnJ5ICogMHg0MDAwMDAwO1xuICAgICAgdGhpcy53b3Jkc1tpXSA9ICh3IC8gbnVtKSB8IDA7XG4gICAgICBjYXJyeSA9IHcgJSBudW07XG4gICAgfVxuXG4gICAgdGhpcy5fc3RyaXAoKTtcbiAgICByZXR1cm4gaXNOZWdOdW0gPyB0aGlzLmluZWcoKSA6IHRoaXM7XG4gIH07XG5cbiAgQk4ucHJvdG90eXBlLmRpdm4gPSBmdW5jdGlvbiBkaXZuIChudW0pIHtcbiAgICByZXR1cm4gdGhpcy5jbG9uZSgpLmlkaXZuKG51bSk7XG4gIH07XG5cbiAgQk4ucHJvdG90eXBlLmVnY2QgPSBmdW5jdGlvbiBlZ2NkIChwKSB7XG4gICAgYXNzZXJ0KHAubmVnYXRpdmUgPT09IDApO1xuICAgIGFzc2VydCghcC5pc1plcm8oKSk7XG5cbiAgICB2YXIgeCA9IHRoaXM7XG4gICAgdmFyIHkgPSBwLmNsb25lKCk7XG5cbiAgICBpZiAoeC5uZWdhdGl2ZSAhPT0gMCkge1xuICAgICAgeCA9IHgudW1vZChwKTtcbiAgICB9IGVsc2Uge1xuICAgICAgeCA9IHguY2xvbmUoKTtcbiAgICB9XG5cbiAgICAvLyBBICogeCArIEIgKiB5ID0geFxuICAgIHZhciBBID0gbmV3IEJOKDEpO1xuICAgIHZhciBCID0gbmV3IEJOKDApO1xuXG4gICAgLy8gQyAqIHggKyBEICogeSA9IHlcbiAgICB2YXIgQyA9IG5ldyBCTigwKTtcbiAgICB2YXIgRCA9IG5ldyBCTigxKTtcblxuICAgIHZhciBnID0gMDtcblxuICAgIHdoaWxlICh4LmlzRXZlbigpICYmIHkuaXNFdmVuKCkpIHtcbiAgICAgIHguaXVzaHJuKDEpO1xuICAgICAgeS5pdXNocm4oMSk7XG4gICAgICArK2c7XG4gICAgfVxuXG4gICAgdmFyIHlwID0geS5jbG9uZSgpO1xuICAgIHZhciB4cCA9IHguY2xvbmUoKTtcblxuICAgIHdoaWxlICgheC5pc1plcm8oKSkge1xuICAgICAgZm9yICh2YXIgaSA9IDAsIGltID0gMTsgKHgud29yZHNbMF0gJiBpbSkgPT09IDAgJiYgaSA8IDI2OyArK2ksIGltIDw8PSAxKTtcbiAgICAgIGlmIChpID4gMCkge1xuICAgICAgICB4Lml1c2hybihpKTtcbiAgICAgICAgd2hpbGUgKGktLSA+IDApIHtcbiAgICAgICAgICBpZiAoQS5pc09kZCgpIHx8IEIuaXNPZGQoKSkge1xuICAgICAgICAgICAgQS5pYWRkKHlwKTtcbiAgICAgICAgICAgIEIuaXN1Yih4cCk7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgQS5pdXNocm4oMSk7XG4gICAgICAgICAgQi5pdXNocm4oMSk7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgZm9yICh2YXIgaiA9IDAsIGptID0gMTsgKHkud29yZHNbMF0gJiBqbSkgPT09IDAgJiYgaiA8IDI2OyArK2osIGptIDw8PSAxKTtcbiAgICAgIGlmIChqID4gMCkge1xuICAgICAgICB5Lml1c2hybihqKTtcbiAgICAgICAgd2hpbGUgKGotLSA+IDApIHtcbiAgICAgICAgICBpZiAoQy5pc09kZCgpIHx8IEQuaXNPZGQoKSkge1xuICAgICAgICAgICAgQy5pYWRkKHlwKTtcbiAgICAgICAgICAgIEQuaXN1Yih4cCk7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgQy5pdXNocm4oMSk7XG4gICAgICAgICAgRC5pdXNocm4oMSk7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgaWYgKHguY21wKHkpID49IDApIHtcbiAgICAgICAgeC5pc3ViKHkpO1xuICAgICAgICBBLmlzdWIoQyk7XG4gICAgICAgIEIuaXN1YihEKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHkuaXN1Yih4KTtcbiAgICAgICAgQy5pc3ViKEEpO1xuICAgICAgICBELmlzdWIoQik7XG4gICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIHtcbiAgICAgIGE6IEMsXG4gICAgICBiOiBELFxuICAgICAgZ2NkOiB5Lml1c2hsbihnKVxuICAgIH07XG4gIH07XG5cbiAgLy8gVGhpcyBpcyByZWR1Y2VkIGluY2FybmF0aW9uIG9mIHRoZSBiaW5hcnkgRUVBXG4gIC8vIGFib3ZlLCBkZXNpZ25hdGVkIHRvIGludmVydCBtZW1iZXJzIG9mIHRoZVxuICAvLyBfcHJpbWVfIGZpZWxkcyBGKHApIGF0IGEgbWF4aW1hbCBzcGVlZFxuICBCTi5wcm90b3R5cGUuX2ludm1wID0gZnVuY3Rpb24gX2ludm1wIChwKSB7XG4gICAgYXNzZXJ0KHAubmVnYXRpdmUgPT09IDApO1xuICAgIGFzc2VydCghcC5pc1plcm8oKSk7XG5cbiAgICB2YXIgYSA9IHRoaXM7XG4gICAgdmFyIGIgPSBwLmNsb25lKCk7XG5cbiAgICBpZiAoYS5uZWdhdGl2ZSAhPT0gMCkge1xuICAgICAgYSA9IGEudW1vZChwKTtcbiAgICB9IGVsc2Uge1xuICAgICAgYSA9IGEuY2xvbmUoKTtcbiAgICB9XG5cbiAgICB2YXIgeDEgPSBuZXcgQk4oMSk7XG4gICAgdmFyIHgyID0gbmV3IEJOKDApO1xuXG4gICAgdmFyIGRlbHRhID0gYi5jbG9uZSgpO1xuXG4gICAgd2hpbGUgKGEuY21wbigxKSA+IDAgJiYgYi5jbXBuKDEpID4gMCkge1xuICAgICAgZm9yICh2YXIgaSA9IDAsIGltID0gMTsgKGEud29yZHNbMF0gJiBpbSkgPT09IDAgJiYgaSA8IDI2OyArK2ksIGltIDw8PSAxKTtcbiAgICAgIGlmIChpID4gMCkge1xuICAgICAgICBhLml1c2hybihpKTtcbiAgICAgICAgd2hpbGUgKGktLSA+IDApIHtcbiAgICAgICAgICBpZiAoeDEuaXNPZGQoKSkge1xuICAgICAgICAgICAgeDEuaWFkZChkZWx0YSk7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgeDEuaXVzaHJuKDEpO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIGZvciAodmFyIGogPSAwLCBqbSA9IDE7IChiLndvcmRzWzBdICYgam0pID09PSAwICYmIGogPCAyNjsgKytqLCBqbSA8PD0gMSk7XG4gICAgICBpZiAoaiA+IDApIHtcbiAgICAgICAgYi5pdXNocm4oaik7XG4gICAgICAgIHdoaWxlIChqLS0gPiAwKSB7XG4gICAgICAgICAgaWYgKHgyLmlzT2RkKCkpIHtcbiAgICAgICAgICAgIHgyLmlhZGQoZGVsdGEpO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIHgyLml1c2hybigxKTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBpZiAoYS5jbXAoYikgPj0gMCkge1xuICAgICAgICBhLmlzdWIoYik7XG4gICAgICAgIHgxLmlzdWIoeDIpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgYi5pc3ViKGEpO1xuICAgICAgICB4Mi5pc3ViKHgxKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICB2YXIgcmVzO1xuICAgIGlmIChhLmNtcG4oMSkgPT09IDApIHtcbiAgICAgIHJlcyA9IHgxO1xuICAgIH0gZWxzZSB7XG4gICAgICByZXMgPSB4MjtcbiAgICB9XG5cbiAgICBpZiAocmVzLmNtcG4oMCkgPCAwKSB7XG4gICAgICByZXMuaWFkZChwKTtcbiAgICB9XG5cbiAgICByZXR1cm4gcmVzO1xuICB9O1xuXG4gIEJOLnByb3RvdHlwZS5nY2QgPSBmdW5jdGlvbiBnY2QgKG51bSkge1xuICAgIGlmICh0aGlzLmlzWmVybygpKSByZXR1cm4gbnVtLmFicygpO1xuICAgIGlmIChudW0uaXNaZXJvKCkpIHJldHVybiB0aGlzLmFicygpO1xuXG4gICAgdmFyIGEgPSB0aGlzLmNsb25lKCk7XG4gICAgdmFyIGIgPSBudW0uY2xvbmUoKTtcbiAgICBhLm5lZ2F0aXZlID0gMDtcbiAgICBiLm5lZ2F0aXZlID0gMDtcblxuICAgIC8vIFJlbW92ZSBjb21tb24gZmFjdG9yIG9mIHR3b1xuICAgIGZvciAodmFyIHNoaWZ0ID0gMDsgYS5pc0V2ZW4oKSAmJiBiLmlzRXZlbigpOyBzaGlmdCsrKSB7XG4gICAgICBhLml1c2hybigxKTtcbiAgICAgIGIuaXVzaHJuKDEpO1xuICAgIH1cblxuICAgIGRvIHtcbiAgICAgIHdoaWxlIChhLmlzRXZlbigpKSB7XG4gICAgICAgIGEuaXVzaHJuKDEpO1xuICAgICAgfVxuICAgICAgd2hpbGUgKGIuaXNFdmVuKCkpIHtcbiAgICAgICAgYi5pdXNocm4oMSk7XG4gICAgICB9XG5cbiAgICAgIHZhciByID0gYS5jbXAoYik7XG4gICAgICBpZiAociA8IDApIHtcbiAgICAgICAgLy8gU3dhcCBgYWAgYW5kIGBiYCB0byBtYWtlIGBhYCBhbHdheXMgYmlnZ2VyIHRoYW4gYGJgXG4gICAgICAgIHZhciB0ID0gYTtcbiAgICAgICAgYSA9IGI7XG4gICAgICAgIGIgPSB0O1xuICAgICAgfSBlbHNlIGlmIChyID09PSAwIHx8IGIuY21wbigxKSA9PT0gMCkge1xuICAgICAgICBicmVhaztcbiAgICAgIH1cblxuICAgICAgYS5pc3ViKGIpO1xuICAgIH0gd2hpbGUgKHRydWUpO1xuXG4gICAgcmV0dXJuIGIuaXVzaGxuKHNoaWZ0KTtcbiAgfTtcblxuICAvLyBJbnZlcnQgbnVtYmVyIGluIHRoZSBmaWVsZCBGKG51bSlcbiAgQk4ucHJvdG90eXBlLmludm0gPSBmdW5jdGlvbiBpbnZtIChudW0pIHtcbiAgICByZXR1cm4gdGhpcy5lZ2NkKG51bSkuYS51bW9kKG51bSk7XG4gIH07XG5cbiAgQk4ucHJvdG90eXBlLmlzRXZlbiA9IGZ1bmN0aW9uIGlzRXZlbiAoKSB7XG4gICAgcmV0dXJuICh0aGlzLndvcmRzWzBdICYgMSkgPT09IDA7XG4gIH07XG5cbiAgQk4ucHJvdG90eXBlLmlzT2RkID0gZnVuY3Rpb24gaXNPZGQgKCkge1xuICAgIHJldHVybiAodGhpcy53b3Jkc1swXSAmIDEpID09PSAxO1xuICB9O1xuXG4gIC8vIEFuZCBmaXJzdCB3b3JkIGFuZCBudW1cbiAgQk4ucHJvdG90eXBlLmFuZGxuID0gZnVuY3Rpb24gYW5kbG4gKG51bSkge1xuICAgIHJldHVybiB0aGlzLndvcmRzWzBdICYgbnVtO1xuICB9O1xuXG4gIC8vIEluY3JlbWVudCBhdCB0aGUgYml0IHBvc2l0aW9uIGluLWxpbmVcbiAgQk4ucHJvdG90eXBlLmJpbmNuID0gZnVuY3Rpb24gYmluY24gKGJpdCkge1xuICAgIGFzc2VydCh0eXBlb2YgYml0ID09PSAnbnVtYmVyJyk7XG4gICAgdmFyIHIgPSBiaXQgJSAyNjtcbiAgICB2YXIgcyA9IChiaXQgLSByKSAvIDI2O1xuICAgIHZhciBxID0gMSA8PCByO1xuXG4gICAgLy8gRmFzdCBjYXNlOiBiaXQgaXMgbXVjaCBoaWdoZXIgdGhhbiBhbGwgZXhpc3Rpbmcgd29yZHNcbiAgICBpZiAodGhpcy5sZW5ndGggPD0gcykge1xuICAgICAgdGhpcy5fZXhwYW5kKHMgKyAxKTtcbiAgICAgIHRoaXMud29yZHNbc10gfD0gcTtcbiAgICAgIHJldHVybiB0aGlzO1xuICAgIH1cblxuICAgIC8vIEFkZCBiaXQgYW5kIHByb3BhZ2F0ZSwgaWYgbmVlZGVkXG4gICAgdmFyIGNhcnJ5ID0gcTtcbiAgICBmb3IgKHZhciBpID0gczsgY2FycnkgIT09IDAgJiYgaSA8IHRoaXMubGVuZ3RoOyBpKyspIHtcbiAgICAgIHZhciB3ID0gdGhpcy53b3Jkc1tpXSB8IDA7XG4gICAgICB3ICs9IGNhcnJ5O1xuICAgICAgY2FycnkgPSB3ID4+PiAyNjtcbiAgICAgIHcgJj0gMHgzZmZmZmZmO1xuICAgICAgdGhpcy53b3Jkc1tpXSA9IHc7XG4gICAgfVxuICAgIGlmIChjYXJyeSAhPT0gMCkge1xuICAgICAgdGhpcy53b3Jkc1tpXSA9IGNhcnJ5O1xuICAgICAgdGhpcy5sZW5ndGgrKztcbiAgICB9XG4gICAgcmV0dXJuIHRoaXM7XG4gIH07XG5cbiAgQk4ucHJvdG90eXBlLmlzWmVybyA9IGZ1bmN0aW9uIGlzWmVybyAoKSB7XG4gICAgcmV0dXJuIHRoaXMubGVuZ3RoID09PSAxICYmIHRoaXMud29yZHNbMF0gPT09IDA7XG4gIH07XG5cbiAgQk4ucHJvdG90eXBlLmNtcG4gPSBmdW5jdGlvbiBjbXBuIChudW0pIHtcbiAgICB2YXIgbmVnYXRpdmUgPSBudW0gPCAwO1xuXG4gICAgaWYgKHRoaXMubmVnYXRpdmUgIT09IDAgJiYgIW5lZ2F0aXZlKSByZXR1cm4gLTE7XG4gICAgaWYgKHRoaXMubmVnYXRpdmUgPT09IDAgJiYgbmVnYXRpdmUpIHJldHVybiAxO1xuXG4gICAgdGhpcy5fc3RyaXAoKTtcblxuICAgIHZhciByZXM7XG4gICAgaWYgKHRoaXMubGVuZ3RoID4gMSkge1xuICAgICAgcmVzID0gMTtcbiAgICB9IGVsc2Uge1xuICAgICAgaWYgKG5lZ2F0aXZlKSB7XG4gICAgICAgIG51bSA9IC1udW07XG4gICAgICB9XG5cbiAgICAgIGFzc2VydChudW0gPD0gMHgzZmZmZmZmLCAnTnVtYmVyIGlzIHRvbyBiaWcnKTtcblxuICAgICAgdmFyIHcgPSB0aGlzLndvcmRzWzBdIHwgMDtcbiAgICAgIHJlcyA9IHcgPT09IG51bSA/IDAgOiB3IDwgbnVtID8gLTEgOiAxO1xuICAgIH1cbiAgICBpZiAodGhpcy5uZWdhdGl2ZSAhPT0gMCkgcmV0dXJuIC1yZXMgfCAwO1xuICAgIHJldHVybiByZXM7XG4gIH07XG5cbiAgLy8gQ29tcGFyZSB0d28gbnVtYmVycyBhbmQgcmV0dXJuOlxuICAvLyAxIC0gaWYgYHRoaXNgID4gYG51bWBcbiAgLy8gMCAtIGlmIGB0aGlzYCA9PSBgbnVtYFxuICAvLyAtMSAtIGlmIGB0aGlzYCA8IGBudW1gXG4gIEJOLnByb3RvdHlwZS5jbXAgPSBmdW5jdGlvbiBjbXAgKG51bSkge1xuICAgIGlmICh0aGlzLm5lZ2F0aXZlICE9PSAwICYmIG51bS5uZWdhdGl2ZSA9PT0gMCkgcmV0dXJuIC0xO1xuICAgIGlmICh0aGlzLm5lZ2F0aXZlID09PSAwICYmIG51bS5uZWdhdGl2ZSAhPT0gMCkgcmV0dXJuIDE7XG5cbiAgICB2YXIgcmVzID0gdGhpcy51Y21wKG51bSk7XG4gICAgaWYgKHRoaXMubmVnYXRpdmUgIT09IDApIHJldHVybiAtcmVzIHwgMDtcbiAgICByZXR1cm4gcmVzO1xuICB9O1xuXG4gIC8vIFVuc2lnbmVkIGNvbXBhcmlzb25cbiAgQk4ucHJvdG90eXBlLnVjbXAgPSBmdW5jdGlvbiB1Y21wIChudW0pIHtcbiAgICAvLyBBdCB0aGlzIHBvaW50IGJvdGggbnVtYmVycyBoYXZlIHRoZSBzYW1lIHNpZ25cbiAgICBpZiAodGhpcy5sZW5ndGggPiBudW0ubGVuZ3RoKSByZXR1cm4gMTtcbiAgICBpZiAodGhpcy5sZW5ndGggPCBudW0ubGVuZ3RoKSByZXR1cm4gLTE7XG5cbiAgICB2YXIgcmVzID0gMDtcbiAgICBmb3IgKHZhciBpID0gdGhpcy5sZW5ndGggLSAxOyBpID49IDA7IGktLSkge1xuICAgICAgdmFyIGEgPSB0aGlzLndvcmRzW2ldIHwgMDtcbiAgICAgIHZhciBiID0gbnVtLndvcmRzW2ldIHwgMDtcblxuICAgICAgaWYgKGEgPT09IGIpIGNvbnRpbnVlO1xuICAgICAgaWYgKGEgPCBiKSB7XG4gICAgICAgIHJlcyA9IC0xO1xuICAgICAgfSBlbHNlIGlmIChhID4gYikge1xuICAgICAgICByZXMgPSAxO1xuICAgICAgfVxuICAgICAgYnJlYWs7XG4gICAgfVxuICAgIHJldHVybiByZXM7XG4gIH07XG5cbiAgQk4ucHJvdG90eXBlLmd0biA9IGZ1bmN0aW9uIGd0biAobnVtKSB7XG4gICAgcmV0dXJuIHRoaXMuY21wbihudW0pID09PSAxO1xuICB9O1xuXG4gIEJOLnByb3RvdHlwZS5ndCA9IGZ1bmN0aW9uIGd0IChudW0pIHtcbiAgICByZXR1cm4gdGhpcy5jbXAobnVtKSA9PT0gMTtcbiAgfTtcblxuICBCTi5wcm90b3R5cGUuZ3RlbiA9IGZ1bmN0aW9uIGd0ZW4gKG51bSkge1xuICAgIHJldHVybiB0aGlzLmNtcG4obnVtKSA+PSAwO1xuICB9O1xuXG4gIEJOLnByb3RvdHlwZS5ndGUgPSBmdW5jdGlvbiBndGUgKG51bSkge1xuICAgIHJldHVybiB0aGlzLmNtcChudW0pID49IDA7XG4gIH07XG5cbiAgQk4ucHJvdG90eXBlLmx0biA9IGZ1bmN0aW9uIGx0biAobnVtKSB7XG4gICAgcmV0dXJuIHRoaXMuY21wbihudW0pID09PSAtMTtcbiAgfTtcblxuICBCTi5wcm90b3R5cGUubHQgPSBmdW5jdGlvbiBsdCAobnVtKSB7XG4gICAgcmV0dXJuIHRoaXMuY21wKG51bSkgPT09IC0xO1xuICB9O1xuXG4gIEJOLnByb3RvdHlwZS5sdGVuID0gZnVuY3Rpb24gbHRlbiAobnVtKSB7XG4gICAgcmV0dXJuIHRoaXMuY21wbihudW0pIDw9IDA7XG4gIH07XG5cbiAgQk4ucHJvdG90eXBlLmx0ZSA9IGZ1bmN0aW9uIGx0ZSAobnVtKSB7XG4gICAgcmV0dXJuIHRoaXMuY21wKG51bSkgPD0gMDtcbiAgfTtcblxuICBCTi5wcm90b3R5cGUuZXFuID0gZnVuY3Rpb24gZXFuIChudW0pIHtcbiAgICByZXR1cm4gdGhpcy5jbXBuKG51bSkgPT09IDA7XG4gIH07XG5cbiAgQk4ucHJvdG90eXBlLmVxID0gZnVuY3Rpb24gZXEgKG51bSkge1xuICAgIHJldHVybiB0aGlzLmNtcChudW0pID09PSAwO1xuICB9O1xuXG4gIC8vXG4gIC8vIEEgcmVkdWNlIGNvbnRleHQsIGNvdWxkIGJlIHVzaW5nIG1vbnRnb21lcnkgb3Igc29tZXRoaW5nIGJldHRlciwgZGVwZW5kaW5nXG4gIC8vIG9uIHRoZSBgbWAgaXRzZWxmLlxuICAvL1xuICBCTi5yZWQgPSBmdW5jdGlvbiByZWQgKG51bSkge1xuICAgIHJldHVybiBuZXcgUmVkKG51bSk7XG4gIH07XG5cbiAgQk4ucHJvdG90eXBlLnRvUmVkID0gZnVuY3Rpb24gdG9SZWQgKGN0eCkge1xuICAgIGFzc2VydCghdGhpcy5yZWQsICdBbHJlYWR5IGEgbnVtYmVyIGluIHJlZHVjdGlvbiBjb250ZXh0Jyk7XG4gICAgYXNzZXJ0KHRoaXMubmVnYXRpdmUgPT09IDAsICdyZWQgd29ya3Mgb25seSB3aXRoIHBvc2l0aXZlcycpO1xuICAgIHJldHVybiBjdHguY29udmVydFRvKHRoaXMpLl9mb3JjZVJlZChjdHgpO1xuICB9O1xuXG4gIEJOLnByb3RvdHlwZS5mcm9tUmVkID0gZnVuY3Rpb24gZnJvbVJlZCAoKSB7XG4gICAgYXNzZXJ0KHRoaXMucmVkLCAnZnJvbVJlZCB3b3JrcyBvbmx5IHdpdGggbnVtYmVycyBpbiByZWR1Y3Rpb24gY29udGV4dCcpO1xuICAgIHJldHVybiB0aGlzLnJlZC5jb252ZXJ0RnJvbSh0aGlzKTtcbiAgfTtcblxuICBCTi5wcm90b3R5cGUuX2ZvcmNlUmVkID0gZnVuY3Rpb24gX2ZvcmNlUmVkIChjdHgpIHtcbiAgICB0aGlzLnJlZCA9IGN0eDtcbiAgICByZXR1cm4gdGhpcztcbiAgfTtcblxuICBCTi5wcm90b3R5cGUuZm9yY2VSZWQgPSBmdW5jdGlvbiBmb3JjZVJlZCAoY3R4KSB7XG4gICAgYXNzZXJ0KCF0aGlzLnJlZCwgJ0FscmVhZHkgYSBudW1iZXIgaW4gcmVkdWN0aW9uIGNvbnRleHQnKTtcbiAgICByZXR1cm4gdGhpcy5fZm9yY2VSZWQoY3R4KTtcbiAgfTtcblxuICBCTi5wcm90b3R5cGUucmVkQWRkID0gZnVuY3Rpb24gcmVkQWRkIChudW0pIHtcbiAgICBhc3NlcnQodGhpcy5yZWQsICdyZWRBZGQgd29ya3Mgb25seSB3aXRoIHJlZCBudW1iZXJzJyk7XG4gICAgcmV0dXJuIHRoaXMucmVkLmFkZCh0aGlzLCBudW0pO1xuICB9O1xuXG4gIEJOLnByb3RvdHlwZS5yZWRJQWRkID0gZnVuY3Rpb24gcmVkSUFkZCAobnVtKSB7XG4gICAgYXNzZXJ0KHRoaXMucmVkLCAncmVkSUFkZCB3b3JrcyBvbmx5IHdpdGggcmVkIG51bWJlcnMnKTtcbiAgICByZXR1cm4gdGhpcy5yZWQuaWFkZCh0aGlzLCBudW0pO1xuICB9O1xuXG4gIEJOLnByb3RvdHlwZS5yZWRTdWIgPSBmdW5jdGlvbiByZWRTdWIgKG51bSkge1xuICAgIGFzc2VydCh0aGlzLnJlZCwgJ3JlZFN1YiB3b3JrcyBvbmx5IHdpdGggcmVkIG51bWJlcnMnKTtcbiAgICByZXR1cm4gdGhpcy5yZWQuc3ViKHRoaXMsIG51bSk7XG4gIH07XG5cbiAgQk4ucHJvdG90eXBlLnJlZElTdWIgPSBmdW5jdGlvbiByZWRJU3ViIChudW0pIHtcbiAgICBhc3NlcnQodGhpcy5yZWQsICdyZWRJU3ViIHdvcmtzIG9ubHkgd2l0aCByZWQgbnVtYmVycycpO1xuICAgIHJldHVybiB0aGlzLnJlZC5pc3ViKHRoaXMsIG51bSk7XG4gIH07XG5cbiAgQk4ucHJvdG90eXBlLnJlZFNobCA9IGZ1bmN0aW9uIHJlZFNobCAobnVtKSB7XG4gICAgYXNzZXJ0KHRoaXMucmVkLCAncmVkU2hsIHdvcmtzIG9ubHkgd2l0aCByZWQgbnVtYmVycycpO1xuICAgIHJldHVybiB0aGlzLnJlZC5zaGwodGhpcywgbnVtKTtcbiAgfTtcblxuICBCTi5wcm90b3R5cGUucmVkTXVsID0gZnVuY3Rpb24gcmVkTXVsIChudW0pIHtcbiAgICBhc3NlcnQodGhpcy5yZWQsICdyZWRNdWwgd29ya3Mgb25seSB3aXRoIHJlZCBudW1iZXJzJyk7XG4gICAgdGhpcy5yZWQuX3ZlcmlmeTIodGhpcywgbnVtKTtcbiAgICByZXR1cm4gdGhpcy5yZWQubXVsKHRoaXMsIG51bSk7XG4gIH07XG5cbiAgQk4ucHJvdG90eXBlLnJlZElNdWwgPSBmdW5jdGlvbiByZWRJTXVsIChudW0pIHtcbiAgICBhc3NlcnQodGhpcy5yZWQsICdyZWRNdWwgd29ya3Mgb25seSB3aXRoIHJlZCBudW1iZXJzJyk7XG4gICAgdGhpcy5yZWQuX3ZlcmlmeTIodGhpcywgbnVtKTtcbiAgICByZXR1cm4gdGhpcy5yZWQuaW11bCh0aGlzLCBudW0pO1xuICB9O1xuXG4gIEJOLnByb3RvdHlwZS5yZWRTcXIgPSBmdW5jdGlvbiByZWRTcXIgKCkge1xuICAgIGFzc2VydCh0aGlzLnJlZCwgJ3JlZFNxciB3b3JrcyBvbmx5IHdpdGggcmVkIG51bWJlcnMnKTtcbiAgICB0aGlzLnJlZC5fdmVyaWZ5MSh0aGlzKTtcbiAgICByZXR1cm4gdGhpcy5yZWQuc3FyKHRoaXMpO1xuICB9O1xuXG4gIEJOLnByb3RvdHlwZS5yZWRJU3FyID0gZnVuY3Rpb24gcmVkSVNxciAoKSB7XG4gICAgYXNzZXJ0KHRoaXMucmVkLCAncmVkSVNxciB3b3JrcyBvbmx5IHdpdGggcmVkIG51bWJlcnMnKTtcbiAgICB0aGlzLnJlZC5fdmVyaWZ5MSh0aGlzKTtcbiAgICByZXR1cm4gdGhpcy5yZWQuaXNxcih0aGlzKTtcbiAgfTtcblxuICAvLyBTcXVhcmUgcm9vdCBvdmVyIHBcbiAgQk4ucHJvdG90eXBlLnJlZFNxcnQgPSBmdW5jdGlvbiByZWRTcXJ0ICgpIHtcbiAgICBhc3NlcnQodGhpcy5yZWQsICdyZWRTcXJ0IHdvcmtzIG9ubHkgd2l0aCByZWQgbnVtYmVycycpO1xuICAgIHRoaXMucmVkLl92ZXJpZnkxKHRoaXMpO1xuICAgIHJldHVybiB0aGlzLnJlZC5zcXJ0KHRoaXMpO1xuICB9O1xuXG4gIEJOLnByb3RvdHlwZS5yZWRJbnZtID0gZnVuY3Rpb24gcmVkSW52bSAoKSB7XG4gICAgYXNzZXJ0KHRoaXMucmVkLCAncmVkSW52bSB3b3JrcyBvbmx5IHdpdGggcmVkIG51bWJlcnMnKTtcbiAgICB0aGlzLnJlZC5fdmVyaWZ5MSh0aGlzKTtcbiAgICByZXR1cm4gdGhpcy5yZWQuaW52bSh0aGlzKTtcbiAgfTtcblxuICAvLyBSZXR1cm4gbmVnYXRpdmUgY2xvbmUgb2YgYHRoaXNgICUgYHJlZCBtb2R1bG9gXG4gIEJOLnByb3RvdHlwZS5yZWROZWcgPSBmdW5jdGlvbiByZWROZWcgKCkge1xuICAgIGFzc2VydCh0aGlzLnJlZCwgJ3JlZE5lZyB3b3JrcyBvbmx5IHdpdGggcmVkIG51bWJlcnMnKTtcbiAgICB0aGlzLnJlZC5fdmVyaWZ5MSh0aGlzKTtcbiAgICByZXR1cm4gdGhpcy5yZWQubmVnKHRoaXMpO1xuICB9O1xuXG4gIEJOLnByb3RvdHlwZS5yZWRQb3cgPSBmdW5jdGlvbiByZWRQb3cgKG51bSkge1xuICAgIGFzc2VydCh0aGlzLnJlZCAmJiAhbnVtLnJlZCwgJ3JlZFBvdyhub3JtYWxOdW0pJyk7XG4gICAgdGhpcy5yZWQuX3ZlcmlmeTEodGhpcyk7XG4gICAgcmV0dXJuIHRoaXMucmVkLnBvdyh0aGlzLCBudW0pO1xuICB9O1xuXG4gIC8vIFByaW1lIG51bWJlcnMgd2l0aCBlZmZpY2llbnQgcmVkdWN0aW9uXG4gIHZhciBwcmltZXMgPSB7XG4gICAgazI1NjogbnVsbCxcbiAgICBwMjI0OiBudWxsLFxuICAgIHAxOTI6IG51bGwsXG4gICAgcDI1NTE5OiBudWxsXG4gIH07XG5cbiAgLy8gUHNldWRvLU1lcnNlbm5lIHByaW1lXG4gIGZ1bmN0aW9uIE1QcmltZSAobmFtZSwgcCkge1xuICAgIC8vIFAgPSAyIF4gTiAtIEtcbiAgICB0aGlzLm5hbWUgPSBuYW1lO1xuICAgIHRoaXMucCA9IG5ldyBCTihwLCAxNik7XG4gICAgdGhpcy5uID0gdGhpcy5wLmJpdExlbmd0aCgpO1xuICAgIHRoaXMuayA9IG5ldyBCTigxKS5pdXNobG4odGhpcy5uKS5pc3ViKHRoaXMucCk7XG5cbiAgICB0aGlzLnRtcCA9IHRoaXMuX3RtcCgpO1xuICB9XG5cbiAgTVByaW1lLnByb3RvdHlwZS5fdG1wID0gZnVuY3Rpb24gX3RtcCAoKSB7XG4gICAgdmFyIHRtcCA9IG5ldyBCTihudWxsKTtcbiAgICB0bXAud29yZHMgPSBuZXcgQXJyYXkoTWF0aC5jZWlsKHRoaXMubiAvIDEzKSk7XG4gICAgcmV0dXJuIHRtcDtcbiAgfTtcblxuICBNUHJpbWUucHJvdG90eXBlLmlyZWR1Y2UgPSBmdW5jdGlvbiBpcmVkdWNlIChudW0pIHtcbiAgICAvLyBBc3N1bWVzIHRoYXQgYG51bWAgaXMgbGVzcyB0aGFuIGBQXjJgXG4gICAgLy8gbnVtID0gSEkgKiAoMiBeIE4gLSBLKSArIEhJICogSyArIExPID0gSEkgKiBLICsgTE8gKG1vZCBQKVxuICAgIHZhciByID0gbnVtO1xuICAgIHZhciBybGVuO1xuXG4gICAgZG8ge1xuICAgICAgdGhpcy5zcGxpdChyLCB0aGlzLnRtcCk7XG4gICAgICByID0gdGhpcy5pbXVsSyhyKTtcbiAgICAgIHIgPSByLmlhZGQodGhpcy50bXApO1xuICAgICAgcmxlbiA9IHIuYml0TGVuZ3RoKCk7XG4gICAgfSB3aGlsZSAocmxlbiA+IHRoaXMubik7XG5cbiAgICB2YXIgY21wID0gcmxlbiA8IHRoaXMubiA/IC0xIDogci51Y21wKHRoaXMucCk7XG4gICAgaWYgKGNtcCA9PT0gMCkge1xuICAgICAgci53b3Jkc1swXSA9IDA7XG4gICAgICByLmxlbmd0aCA9IDE7XG4gICAgfSBlbHNlIGlmIChjbXAgPiAwKSB7XG4gICAgICByLmlzdWIodGhpcy5wKTtcbiAgICB9IGVsc2Uge1xuICAgICAgaWYgKHIuc3RyaXAgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAvLyByIGlzIGEgQk4gdjQgaW5zdGFuY2VcbiAgICAgICAgci5zdHJpcCgpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgLy8gciBpcyBhIEJOIHY1IGluc3RhbmNlXG4gICAgICAgIHIuX3N0cmlwKCk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIHI7XG4gIH07XG5cbiAgTVByaW1lLnByb3RvdHlwZS5zcGxpdCA9IGZ1bmN0aW9uIHNwbGl0IChpbnB1dCwgb3V0KSB7XG4gICAgaW5wdXQuaXVzaHJuKHRoaXMubiwgMCwgb3V0KTtcbiAgfTtcblxuICBNUHJpbWUucHJvdG90eXBlLmltdWxLID0gZnVuY3Rpb24gaW11bEsgKG51bSkge1xuICAgIHJldHVybiBudW0uaW11bCh0aGlzLmspO1xuICB9O1xuXG4gIGZ1bmN0aW9uIEsyNTYgKCkge1xuICAgIE1QcmltZS5jYWxsKFxuICAgICAgdGhpcyxcbiAgICAgICdrMjU2JyxcbiAgICAgICdmZmZmZmZmZiBmZmZmZmZmZiBmZmZmZmZmZiBmZmZmZmZmZiBmZmZmZmZmZiBmZmZmZmZmZiBmZmZmZmZmZSBmZmZmZmMyZicpO1xuICB9XG4gIGluaGVyaXRzKEsyNTYsIE1QcmltZSk7XG5cbiAgSzI1Ni5wcm90b3R5cGUuc3BsaXQgPSBmdW5jdGlvbiBzcGxpdCAoaW5wdXQsIG91dHB1dCkge1xuICAgIC8vIDI1NiA9IDkgKiAyNiArIDIyXG4gICAgdmFyIG1hc2sgPSAweDNmZmZmZjtcblxuICAgIHZhciBvdXRMZW4gPSBNYXRoLm1pbihpbnB1dC5sZW5ndGgsIDkpO1xuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgb3V0TGVuOyBpKyspIHtcbiAgICAgIG91dHB1dC53b3Jkc1tpXSA9IGlucHV0LndvcmRzW2ldO1xuICAgIH1cbiAgICBvdXRwdXQubGVuZ3RoID0gb3V0TGVuO1xuXG4gICAgaWYgKGlucHV0Lmxlbmd0aCA8PSA5KSB7XG4gICAgICBpbnB1dC53b3Jkc1swXSA9IDA7XG4gICAgICBpbnB1dC5sZW5ndGggPSAxO1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIC8vIFNoaWZ0IGJ5IDkgbGltYnNcbiAgICB2YXIgcHJldiA9IGlucHV0LndvcmRzWzldO1xuICAgIG91dHB1dC53b3Jkc1tvdXRwdXQubGVuZ3RoKytdID0gcHJldiAmIG1hc2s7XG5cbiAgICBmb3IgKGkgPSAxMDsgaSA8IGlucHV0Lmxlbmd0aDsgaSsrKSB7XG4gICAgICB2YXIgbmV4dCA9IGlucHV0LndvcmRzW2ldIHwgMDtcbiAgICAgIGlucHV0LndvcmRzW2kgLSAxMF0gPSAoKG5leHQgJiBtYXNrKSA8PCA0KSB8IChwcmV2ID4+PiAyMik7XG4gICAgICBwcmV2ID0gbmV4dDtcbiAgICB9XG4gICAgcHJldiA+Pj49IDIyO1xuICAgIGlucHV0LndvcmRzW2kgLSAxMF0gPSBwcmV2O1xuICAgIGlmIChwcmV2ID09PSAwICYmIGlucHV0Lmxlbmd0aCA+IDEwKSB7XG4gICAgICBpbnB1dC5sZW5ndGggLT0gMTA7XG4gICAgfSBlbHNlIHtcbiAgICAgIGlucHV0Lmxlbmd0aCAtPSA5O1xuICAgIH1cbiAgfTtcblxuICBLMjU2LnByb3RvdHlwZS5pbXVsSyA9IGZ1bmN0aW9uIGltdWxLIChudW0pIHtcbiAgICAvLyBLID0gMHgxMDAwMDAzZDEgPSBbIDB4NDAsIDB4M2QxIF1cbiAgICBudW0ud29yZHNbbnVtLmxlbmd0aF0gPSAwO1xuICAgIG51bS53b3Jkc1tudW0ubGVuZ3RoICsgMV0gPSAwO1xuICAgIG51bS5sZW5ndGggKz0gMjtcblxuICAgIC8vIGJvdW5kZWQgYXQ6IDB4NDAgKiAweDNmZmZmZmYgKyAweDNkMCA9IDB4MTAwMDAwMzkwXG4gICAgdmFyIGxvID0gMDtcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IG51bS5sZW5ndGg7IGkrKykge1xuICAgICAgdmFyIHcgPSBudW0ud29yZHNbaV0gfCAwO1xuICAgICAgbG8gKz0gdyAqIDB4M2QxO1xuICAgICAgbnVtLndvcmRzW2ldID0gbG8gJiAweDNmZmZmZmY7XG4gICAgICBsbyA9IHcgKiAweDQwICsgKChsbyAvIDB4NDAwMDAwMCkgfCAwKTtcbiAgICB9XG5cbiAgICAvLyBGYXN0IGxlbmd0aCByZWR1Y3Rpb25cbiAgICBpZiAobnVtLndvcmRzW251bS5sZW5ndGggLSAxXSA9PT0gMCkge1xuICAgICAgbnVtLmxlbmd0aC0tO1xuICAgICAgaWYgKG51bS53b3Jkc1tudW0ubGVuZ3RoIC0gMV0gPT09IDApIHtcbiAgICAgICAgbnVtLmxlbmd0aC0tO1xuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gbnVtO1xuICB9O1xuXG4gIGZ1bmN0aW9uIFAyMjQgKCkge1xuICAgIE1QcmltZS5jYWxsKFxuICAgICAgdGhpcyxcbiAgICAgICdwMjI0JyxcbiAgICAgICdmZmZmZmZmZiBmZmZmZmZmZiBmZmZmZmZmZiBmZmZmZmZmZiAwMDAwMDAwMCAwMDAwMDAwMCAwMDAwMDAwMScpO1xuICB9XG4gIGluaGVyaXRzKFAyMjQsIE1QcmltZSk7XG5cbiAgZnVuY3Rpb24gUDE5MiAoKSB7XG4gICAgTVByaW1lLmNhbGwoXG4gICAgICB0aGlzLFxuICAgICAgJ3AxOTInLFxuICAgICAgJ2ZmZmZmZmZmIGZmZmZmZmZmIGZmZmZmZmZmIGZmZmZmZmZlIGZmZmZmZmZmIGZmZmZmZmZmJyk7XG4gIH1cbiAgaW5oZXJpdHMoUDE5MiwgTVByaW1lKTtcblxuICBmdW5jdGlvbiBQMjU1MTkgKCkge1xuICAgIC8vIDIgXiAyNTUgLSAxOVxuICAgIE1QcmltZS5jYWxsKFxuICAgICAgdGhpcyxcbiAgICAgICcyNTUxOScsXG4gICAgICAnN2ZmZmZmZmZmZmZmZmZmZiBmZmZmZmZmZmZmZmZmZmZmIGZmZmZmZmZmZmZmZmZmZmYgZmZmZmZmZmZmZmZmZmZlZCcpO1xuICB9XG4gIGluaGVyaXRzKFAyNTUxOSwgTVByaW1lKTtcblxuICBQMjU1MTkucHJvdG90eXBlLmltdWxLID0gZnVuY3Rpb24gaW11bEsgKG51bSkge1xuICAgIC8vIEsgPSAweDEzXG4gICAgdmFyIGNhcnJ5ID0gMDtcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IG51bS5sZW5ndGg7IGkrKykge1xuICAgICAgdmFyIGhpID0gKG51bS53b3Jkc1tpXSB8IDApICogMHgxMyArIGNhcnJ5O1xuICAgICAgdmFyIGxvID0gaGkgJiAweDNmZmZmZmY7XG4gICAgICBoaSA+Pj49IDI2O1xuXG4gICAgICBudW0ud29yZHNbaV0gPSBsbztcbiAgICAgIGNhcnJ5ID0gaGk7XG4gICAgfVxuICAgIGlmIChjYXJyeSAhPT0gMCkge1xuICAgICAgbnVtLndvcmRzW251bS5sZW5ndGgrK10gPSBjYXJyeTtcbiAgICB9XG4gICAgcmV0dXJuIG51bTtcbiAgfTtcblxuICAvLyBFeHBvcnRlZCBtb3N0bHkgZm9yIHRlc3RpbmcgcHVycG9zZXMsIHVzZSBwbGFpbiBuYW1lIGluc3RlYWRcbiAgQk4uX3ByaW1lID0gZnVuY3Rpb24gcHJpbWUgKG5hbWUpIHtcbiAgICAvLyBDYWNoZWQgdmVyc2lvbiBvZiBwcmltZVxuICAgIGlmIChwcmltZXNbbmFtZV0pIHJldHVybiBwcmltZXNbbmFtZV07XG5cbiAgICB2YXIgcHJpbWU7XG4gICAgaWYgKG5hbWUgPT09ICdrMjU2Jykge1xuICAgICAgcHJpbWUgPSBuZXcgSzI1NigpO1xuICAgIH0gZWxzZSBpZiAobmFtZSA9PT0gJ3AyMjQnKSB7XG4gICAgICBwcmltZSA9IG5ldyBQMjI0KCk7XG4gICAgfSBlbHNlIGlmIChuYW1lID09PSAncDE5MicpIHtcbiAgICAgIHByaW1lID0gbmV3IFAxOTIoKTtcbiAgICB9IGVsc2UgaWYgKG5hbWUgPT09ICdwMjU1MTknKSB7XG4gICAgICBwcmltZSA9IG5ldyBQMjU1MTkoKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCdVbmtub3duIHByaW1lICcgKyBuYW1lKTtcbiAgICB9XG4gICAgcHJpbWVzW25hbWVdID0gcHJpbWU7XG5cbiAgICByZXR1cm4gcHJpbWU7XG4gIH07XG5cbiAgLy9cbiAgLy8gQmFzZSByZWR1Y3Rpb24gZW5naW5lXG4gIC8vXG4gIGZ1bmN0aW9uIFJlZCAobSkge1xuICAgIGlmICh0eXBlb2YgbSA9PT0gJ3N0cmluZycpIHtcbiAgICAgIHZhciBwcmltZSA9IEJOLl9wcmltZShtKTtcbiAgICAgIHRoaXMubSA9IHByaW1lLnA7XG4gICAgICB0aGlzLnByaW1lID0gcHJpbWU7XG4gICAgfSBlbHNlIHtcbiAgICAgIGFzc2VydChtLmd0bigxKSwgJ21vZHVsdXMgbXVzdCBiZSBncmVhdGVyIHRoYW4gMScpO1xuICAgICAgdGhpcy5tID0gbTtcbiAgICAgIHRoaXMucHJpbWUgPSBudWxsO1xuICAgIH1cbiAgfVxuXG4gIFJlZC5wcm90b3R5cGUuX3ZlcmlmeTEgPSBmdW5jdGlvbiBfdmVyaWZ5MSAoYSkge1xuICAgIGFzc2VydChhLm5lZ2F0aXZlID09PSAwLCAncmVkIHdvcmtzIG9ubHkgd2l0aCBwb3NpdGl2ZXMnKTtcbiAgICBhc3NlcnQoYS5yZWQsICdyZWQgd29ya3Mgb25seSB3aXRoIHJlZCBudW1iZXJzJyk7XG4gIH07XG5cbiAgUmVkLnByb3RvdHlwZS5fdmVyaWZ5MiA9IGZ1bmN0aW9uIF92ZXJpZnkyIChhLCBiKSB7XG4gICAgYXNzZXJ0KChhLm5lZ2F0aXZlIHwgYi5uZWdhdGl2ZSkgPT09IDAsICdyZWQgd29ya3Mgb25seSB3aXRoIHBvc2l0aXZlcycpO1xuICAgIGFzc2VydChhLnJlZCAmJiBhLnJlZCA9PT0gYi5yZWQsXG4gICAgICAncmVkIHdvcmtzIG9ubHkgd2l0aCByZWQgbnVtYmVycycpO1xuICB9O1xuXG4gIFJlZC5wcm90b3R5cGUuaW1vZCA9IGZ1bmN0aW9uIGltb2QgKGEpIHtcbiAgICBpZiAodGhpcy5wcmltZSkgcmV0dXJuIHRoaXMucHJpbWUuaXJlZHVjZShhKS5fZm9yY2VSZWQodGhpcyk7XG5cbiAgICBtb3ZlKGEsIGEudW1vZCh0aGlzLm0pLl9mb3JjZVJlZCh0aGlzKSk7XG4gICAgcmV0dXJuIGE7XG4gIH07XG5cbiAgUmVkLnByb3RvdHlwZS5uZWcgPSBmdW5jdGlvbiBuZWcgKGEpIHtcbiAgICBpZiAoYS5pc1plcm8oKSkge1xuICAgICAgcmV0dXJuIGEuY2xvbmUoKTtcbiAgICB9XG5cbiAgICByZXR1cm4gdGhpcy5tLnN1YihhKS5fZm9yY2VSZWQodGhpcyk7XG4gIH07XG5cbiAgUmVkLnByb3RvdHlwZS5hZGQgPSBmdW5jdGlvbiBhZGQgKGEsIGIpIHtcbiAgICB0aGlzLl92ZXJpZnkyKGEsIGIpO1xuXG4gICAgdmFyIHJlcyA9IGEuYWRkKGIpO1xuICAgIGlmIChyZXMuY21wKHRoaXMubSkgPj0gMCkge1xuICAgICAgcmVzLmlzdWIodGhpcy5tKTtcbiAgICB9XG4gICAgcmV0dXJuIHJlcy5fZm9yY2VSZWQodGhpcyk7XG4gIH07XG5cbiAgUmVkLnByb3RvdHlwZS5pYWRkID0gZnVuY3Rpb24gaWFkZCAoYSwgYikge1xuICAgIHRoaXMuX3ZlcmlmeTIoYSwgYik7XG5cbiAgICB2YXIgcmVzID0gYS5pYWRkKGIpO1xuICAgIGlmIChyZXMuY21wKHRoaXMubSkgPj0gMCkge1xuICAgICAgcmVzLmlzdWIodGhpcy5tKTtcbiAgICB9XG4gICAgcmV0dXJuIHJlcztcbiAgfTtcblxuICBSZWQucHJvdG90eXBlLnN1YiA9IGZ1bmN0aW9uIHN1YiAoYSwgYikge1xuICAgIHRoaXMuX3ZlcmlmeTIoYSwgYik7XG5cbiAgICB2YXIgcmVzID0gYS5zdWIoYik7XG4gICAgaWYgKHJlcy5jbXBuKDApIDwgMCkge1xuICAgICAgcmVzLmlhZGQodGhpcy5tKTtcbiAgICB9XG4gICAgcmV0dXJuIHJlcy5fZm9yY2VSZWQodGhpcyk7XG4gIH07XG5cbiAgUmVkLnByb3RvdHlwZS5pc3ViID0gZnVuY3Rpb24gaXN1YiAoYSwgYikge1xuICAgIHRoaXMuX3ZlcmlmeTIoYSwgYik7XG5cbiAgICB2YXIgcmVzID0gYS5pc3ViKGIpO1xuICAgIGlmIChyZXMuY21wbigwKSA8IDApIHtcbiAgICAgIHJlcy5pYWRkKHRoaXMubSk7XG4gICAgfVxuICAgIHJldHVybiByZXM7XG4gIH07XG5cbiAgUmVkLnByb3RvdHlwZS5zaGwgPSBmdW5jdGlvbiBzaGwgKGEsIG51bSkge1xuICAgIHRoaXMuX3ZlcmlmeTEoYSk7XG4gICAgcmV0dXJuIHRoaXMuaW1vZChhLnVzaGxuKG51bSkpO1xuICB9O1xuXG4gIFJlZC5wcm90b3R5cGUuaW11bCA9IGZ1bmN0aW9uIGltdWwgKGEsIGIpIHtcbiAgICB0aGlzLl92ZXJpZnkyKGEsIGIpO1xuICAgIHJldHVybiB0aGlzLmltb2QoYS5pbXVsKGIpKTtcbiAgfTtcblxuICBSZWQucHJvdG90eXBlLm11bCA9IGZ1bmN0aW9uIG11bCAoYSwgYikge1xuICAgIHRoaXMuX3ZlcmlmeTIoYSwgYik7XG4gICAgcmV0dXJuIHRoaXMuaW1vZChhLm11bChiKSk7XG4gIH07XG5cbiAgUmVkLnByb3RvdHlwZS5pc3FyID0gZnVuY3Rpb24gaXNxciAoYSkge1xuICAgIHJldHVybiB0aGlzLmltdWwoYSwgYS5jbG9uZSgpKTtcbiAgfTtcblxuICBSZWQucHJvdG90eXBlLnNxciA9IGZ1bmN0aW9uIHNxciAoYSkge1xuICAgIHJldHVybiB0aGlzLm11bChhLCBhKTtcbiAgfTtcblxuICBSZWQucHJvdG90eXBlLnNxcnQgPSBmdW5jdGlvbiBzcXJ0IChhKSB7XG4gICAgaWYgKGEuaXNaZXJvKCkpIHJldHVybiBhLmNsb25lKCk7XG5cbiAgICB2YXIgbW9kMyA9IHRoaXMubS5hbmRsbigzKTtcbiAgICBhc3NlcnQobW9kMyAlIDIgPT09IDEpO1xuXG4gICAgLy8gRmFzdCBjYXNlXG4gICAgaWYgKG1vZDMgPT09IDMpIHtcbiAgICAgIHZhciBwb3cgPSB0aGlzLm0uYWRkKG5ldyBCTigxKSkuaXVzaHJuKDIpO1xuICAgICAgcmV0dXJuIHRoaXMucG93KGEsIHBvdyk7XG4gICAgfVxuXG4gICAgLy8gVG9uZWxsaS1TaGFua3MgYWxnb3JpdGhtIChUb3RhbGx5IHVub3B0aW1pemVkIGFuZCBzbG93KVxuICAgIC8vXG4gICAgLy8gRmluZCBRIGFuZCBTLCB0aGF0IFEgKiAyIF4gUyA9IChQIC0gMSlcbiAgICB2YXIgcSA9IHRoaXMubS5zdWJuKDEpO1xuICAgIHZhciBzID0gMDtcbiAgICB3aGlsZSAoIXEuaXNaZXJvKCkgJiYgcS5hbmRsbigxKSA9PT0gMCkge1xuICAgICAgcysrO1xuICAgICAgcS5pdXNocm4oMSk7XG4gICAgfVxuICAgIGFzc2VydCghcS5pc1plcm8oKSk7XG5cbiAgICB2YXIgb25lID0gbmV3IEJOKDEpLnRvUmVkKHRoaXMpO1xuICAgIHZhciBuT25lID0gb25lLnJlZE5lZygpO1xuXG4gICAgLy8gRmluZCBxdWFkcmF0aWMgbm9uLXJlc2lkdWVcbiAgICAvLyBOT1RFOiBNYXggaXMgc3VjaCBiZWNhdXNlIG9mIGdlbmVyYWxpemVkIFJpZW1hbm4gaHlwb3RoZXNpcy5cbiAgICB2YXIgbHBvdyA9IHRoaXMubS5zdWJuKDEpLml1c2hybigxKTtcbiAgICB2YXIgeiA9IHRoaXMubS5iaXRMZW5ndGgoKTtcbiAgICB6ID0gbmV3IEJOKDIgKiB6ICogeikudG9SZWQodGhpcyk7XG5cbiAgICB3aGlsZSAodGhpcy5wb3coeiwgbHBvdykuY21wKG5PbmUpICE9PSAwKSB7XG4gICAgICB6LnJlZElBZGQobk9uZSk7XG4gICAgfVxuXG4gICAgdmFyIGMgPSB0aGlzLnBvdyh6LCBxKTtcbiAgICB2YXIgciA9IHRoaXMucG93KGEsIHEuYWRkbigxKS5pdXNocm4oMSkpO1xuICAgIHZhciB0ID0gdGhpcy5wb3coYSwgcSk7XG4gICAgdmFyIG0gPSBzO1xuICAgIHdoaWxlICh0LmNtcChvbmUpICE9PSAwKSB7XG4gICAgICB2YXIgdG1wID0gdDtcbiAgICAgIGZvciAodmFyIGkgPSAwOyB0bXAuY21wKG9uZSkgIT09IDA7IGkrKykge1xuICAgICAgICB0bXAgPSB0bXAucmVkU3FyKCk7XG4gICAgICB9XG4gICAgICBhc3NlcnQoaSA8IG0pO1xuICAgICAgdmFyIGIgPSB0aGlzLnBvdyhjLCBuZXcgQk4oMSkuaXVzaGxuKG0gLSBpIC0gMSkpO1xuXG4gICAgICByID0gci5yZWRNdWwoYik7XG4gICAgICBjID0gYi5yZWRTcXIoKTtcbiAgICAgIHQgPSB0LnJlZE11bChjKTtcbiAgICAgIG0gPSBpO1xuICAgIH1cblxuICAgIHJldHVybiByO1xuICB9O1xuXG4gIFJlZC5wcm90b3R5cGUuaW52bSA9IGZ1bmN0aW9uIGludm0gKGEpIHtcbiAgICB2YXIgaW52ID0gYS5faW52bXAodGhpcy5tKTtcbiAgICBpZiAoaW52Lm5lZ2F0aXZlICE9PSAwKSB7XG4gICAgICBpbnYubmVnYXRpdmUgPSAwO1xuICAgICAgcmV0dXJuIHRoaXMuaW1vZChpbnYpLnJlZE5lZygpO1xuICAgIH0gZWxzZSB7XG4gICAgICByZXR1cm4gdGhpcy5pbW9kKGludik7XG4gICAgfVxuICB9O1xuXG4gIFJlZC5wcm90b3R5cGUucG93ID0gZnVuY3Rpb24gcG93IChhLCBudW0pIHtcbiAgICBpZiAobnVtLmlzWmVybygpKSByZXR1cm4gbmV3IEJOKDEpLnRvUmVkKHRoaXMpO1xuICAgIGlmIChudW0uY21wbigxKSA9PT0gMCkgcmV0dXJuIGEuY2xvbmUoKTtcblxuICAgIHZhciB3aW5kb3dTaXplID0gNDtcbiAgICB2YXIgd25kID0gbmV3IEFycmF5KDEgPDwgd2luZG93U2l6ZSk7XG4gICAgd25kWzBdID0gbmV3IEJOKDEpLnRvUmVkKHRoaXMpO1xuICAgIHduZFsxXSA9IGE7XG4gICAgZm9yICh2YXIgaSA9IDI7IGkgPCB3bmQubGVuZ3RoOyBpKyspIHtcbiAgICAgIHduZFtpXSA9IHRoaXMubXVsKHduZFtpIC0gMV0sIGEpO1xuICAgIH1cblxuICAgIHZhciByZXMgPSB3bmRbMF07XG4gICAgdmFyIGN1cnJlbnQgPSAwO1xuICAgIHZhciBjdXJyZW50TGVuID0gMDtcbiAgICB2YXIgc3RhcnQgPSBudW0uYml0TGVuZ3RoKCkgJSAyNjtcbiAgICBpZiAoc3RhcnQgPT09IDApIHtcbiAgICAgIHN0YXJ0ID0gMjY7XG4gICAgfVxuXG4gICAgZm9yIChpID0gbnVtLmxlbmd0aCAtIDE7IGkgPj0gMDsgaS0tKSB7XG4gICAgICB2YXIgd29yZCA9IG51bS53b3Jkc1tpXTtcbiAgICAgIGZvciAodmFyIGogPSBzdGFydCAtIDE7IGogPj0gMDsgai0tKSB7XG4gICAgICAgIHZhciBiaXQgPSAod29yZCA+PiBqKSAmIDE7XG4gICAgICAgIGlmIChyZXMgIT09IHduZFswXSkge1xuICAgICAgICAgIHJlcyA9IHRoaXMuc3FyKHJlcyk7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoYml0ID09PSAwICYmIGN1cnJlbnQgPT09IDApIHtcbiAgICAgICAgICBjdXJyZW50TGVuID0gMDtcbiAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgfVxuXG4gICAgICAgIGN1cnJlbnQgPDw9IDE7XG4gICAgICAgIGN1cnJlbnQgfD0gYml0O1xuICAgICAgICBjdXJyZW50TGVuKys7XG4gICAgICAgIGlmIChjdXJyZW50TGVuICE9PSB3aW5kb3dTaXplICYmIChpICE9PSAwIHx8IGogIT09IDApKSBjb250aW51ZTtcblxuICAgICAgICByZXMgPSB0aGlzLm11bChyZXMsIHduZFtjdXJyZW50XSk7XG4gICAgICAgIGN1cnJlbnRMZW4gPSAwO1xuICAgICAgICBjdXJyZW50ID0gMDtcbiAgICAgIH1cbiAgICAgIHN0YXJ0ID0gMjY7XG4gICAgfVxuXG4gICAgcmV0dXJuIHJlcztcbiAgfTtcblxuICBSZWQucHJvdG90eXBlLmNvbnZlcnRUbyA9IGZ1bmN0aW9uIGNvbnZlcnRUbyAobnVtKSB7XG4gICAgdmFyIHIgPSBudW0udW1vZCh0aGlzLm0pO1xuXG4gICAgcmV0dXJuIHIgPT09IG51bSA/IHIuY2xvbmUoKSA6IHI7XG4gIH07XG5cbiAgUmVkLnByb3RvdHlwZS5jb252ZXJ0RnJvbSA9IGZ1bmN0aW9uIGNvbnZlcnRGcm9tIChudW0pIHtcbiAgICB2YXIgcmVzID0gbnVtLmNsb25lKCk7XG4gICAgcmVzLnJlZCA9IG51bGw7XG4gICAgcmV0dXJuIHJlcztcbiAgfTtcblxuICAvL1xuICAvLyBNb250Z29tZXJ5IG1ldGhvZCBlbmdpbmVcbiAgLy9cblxuICBCTi5tb250ID0gZnVuY3Rpb24gbW9udCAobnVtKSB7XG4gICAgcmV0dXJuIG5ldyBNb250KG51bSk7XG4gIH07XG5cbiAgZnVuY3Rpb24gTW9udCAobSkge1xuICAgIFJlZC5jYWxsKHRoaXMsIG0pO1xuXG4gICAgdGhpcy5zaGlmdCA9IHRoaXMubS5iaXRMZW5ndGgoKTtcbiAgICBpZiAodGhpcy5zaGlmdCAlIDI2ICE9PSAwKSB7XG4gICAgICB0aGlzLnNoaWZ0ICs9IDI2IC0gKHRoaXMuc2hpZnQgJSAyNik7XG4gICAgfVxuXG4gICAgdGhpcy5yID0gbmV3IEJOKDEpLml1c2hsbih0aGlzLnNoaWZ0KTtcbiAgICB0aGlzLnIyID0gdGhpcy5pbW9kKHRoaXMuci5zcXIoKSk7XG4gICAgdGhpcy5yaW52ID0gdGhpcy5yLl9pbnZtcCh0aGlzLm0pO1xuXG4gICAgdGhpcy5taW52ID0gdGhpcy5yaW52Lm11bCh0aGlzLnIpLmlzdWJuKDEpLmRpdih0aGlzLm0pO1xuICAgIHRoaXMubWludiA9IHRoaXMubWludi51bW9kKHRoaXMucik7XG4gICAgdGhpcy5taW52ID0gdGhpcy5yLnN1Yih0aGlzLm1pbnYpO1xuICB9XG4gIGluaGVyaXRzKE1vbnQsIFJlZCk7XG5cbiAgTW9udC5wcm90b3R5cGUuY29udmVydFRvID0gZnVuY3Rpb24gY29udmVydFRvIChudW0pIHtcbiAgICByZXR1cm4gdGhpcy5pbW9kKG51bS51c2hsbih0aGlzLnNoaWZ0KSk7XG4gIH07XG5cbiAgTW9udC5wcm90b3R5cGUuY29udmVydEZyb20gPSBmdW5jdGlvbiBjb252ZXJ0RnJvbSAobnVtKSB7XG4gICAgdmFyIHIgPSB0aGlzLmltb2QobnVtLm11bCh0aGlzLnJpbnYpKTtcbiAgICByLnJlZCA9IG51bGw7XG4gICAgcmV0dXJuIHI7XG4gIH07XG5cbiAgTW9udC5wcm90b3R5cGUuaW11bCA9IGZ1bmN0aW9uIGltdWwgKGEsIGIpIHtcbiAgICBpZiAoYS5pc1plcm8oKSB8fCBiLmlzWmVybygpKSB7XG4gICAgICBhLndvcmRzWzBdID0gMDtcbiAgICAgIGEubGVuZ3RoID0gMTtcbiAgICAgIHJldHVybiBhO1xuICAgIH1cblxuICAgIHZhciB0ID0gYS5pbXVsKGIpO1xuICAgIHZhciBjID0gdC5tYXNrbih0aGlzLnNoaWZ0KS5tdWwodGhpcy5taW52KS5pbWFza24odGhpcy5zaGlmdCkubXVsKHRoaXMubSk7XG4gICAgdmFyIHUgPSB0LmlzdWIoYykuaXVzaHJuKHRoaXMuc2hpZnQpO1xuICAgIHZhciByZXMgPSB1O1xuXG4gICAgaWYgKHUuY21wKHRoaXMubSkgPj0gMCkge1xuICAgICAgcmVzID0gdS5pc3ViKHRoaXMubSk7XG4gICAgfSBlbHNlIGlmICh1LmNtcG4oMCkgPCAwKSB7XG4gICAgICByZXMgPSB1LmlhZGQodGhpcy5tKTtcbiAgICB9XG5cbiAgICByZXR1cm4gcmVzLl9mb3JjZVJlZCh0aGlzKTtcbiAgfTtcblxuICBNb250LnByb3RvdHlwZS5tdWwgPSBmdW5jdGlvbiBtdWwgKGEsIGIpIHtcbiAgICBpZiAoYS5pc1plcm8oKSB8fCBiLmlzWmVybygpKSByZXR1cm4gbmV3IEJOKDApLl9mb3JjZVJlZCh0aGlzKTtcblxuICAgIHZhciB0ID0gYS5tdWwoYik7XG4gICAgdmFyIGMgPSB0Lm1hc2tuKHRoaXMuc2hpZnQpLm11bCh0aGlzLm1pbnYpLmltYXNrbih0aGlzLnNoaWZ0KS5tdWwodGhpcy5tKTtcbiAgICB2YXIgdSA9IHQuaXN1YihjKS5pdXNocm4odGhpcy5zaGlmdCk7XG4gICAgdmFyIHJlcyA9IHU7XG4gICAgaWYgKHUuY21wKHRoaXMubSkgPj0gMCkge1xuICAgICAgcmVzID0gdS5pc3ViKHRoaXMubSk7XG4gICAgfSBlbHNlIGlmICh1LmNtcG4oMCkgPCAwKSB7XG4gICAgICByZXMgPSB1LmlhZGQodGhpcy5tKTtcbiAgICB9XG5cbiAgICByZXR1cm4gcmVzLl9mb3JjZVJlZCh0aGlzKTtcbiAgfTtcblxuICBNb250LnByb3RvdHlwZS5pbnZtID0gZnVuY3Rpb24gaW52bSAoYSkge1xuICAgIC8vIChBUileLTEgKiBSXjIgPSAoQV4tMSAqIFJeLTEpICogUl4yID0gQV4tMSAqIFJcbiAgICB2YXIgcmVzID0gdGhpcy5pbW9kKGEuX2ludm1wKHRoaXMubSkubXVsKHRoaXMucjIpKTtcbiAgICByZXR1cm4gcmVzLl9mb3JjZVJlZCh0aGlzKTtcbiAgfTtcbn0pKHR5cGVvZiBtb2R1bGUgPT09ICd1bmRlZmluZWQnIHx8IG1vZHVsZSwgdGhpcyk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@ethereumjs/common/node_modules/bn.js/lib/bn.js\n");

/***/ }),

/***/ "./node_modules/@ethereumjs/common/node_modules/ethereumjs-util/dist.browser/account.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@ethereumjs/common/node_modules/ethereumjs-util/dist.browser/account.js ***!
  \**********************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"./node_modules/buffer/index.js\")[\"Buffer\"];\n\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.isZeroAddress = exports.zeroAddress = exports.importPublic = exports.privateToAddress = exports.privateToPublic = exports.publicToAddress = exports.pubToAddress = exports.isValidPublic = exports.isValidPrivate = exports.generateAddress2 = exports.generateAddress = exports.isValidChecksumAddress = exports.toChecksumAddress = exports.isValidAddress = exports.Account = void 0;\nvar assert_1 = __importDefault(__webpack_require__(/*! assert */ \"./node_modules/assert/build/assert.js\"));\nvar externals_1 = __webpack_require__(/*! ./externals */ \"./node_modules/@ethereumjs/common/node_modules/ethereumjs-util/dist.browser/externals.js\");\nvar secp256k1_1 = __webpack_require__(/*! ethereum-cryptography/secp256k1 */ \"./node_modules/ethereum-cryptography/secp256k1.js\");\nvar internal_1 = __webpack_require__(/*! ./internal */ \"./node_modules/@ethereumjs/common/node_modules/ethereumjs-util/dist.browser/internal.js\");\nvar constants_1 = __webpack_require__(/*! ./constants */ \"./node_modules/@ethereumjs/common/node_modules/ethereumjs-util/dist.browser/constants.js\");\nvar bytes_1 = __webpack_require__(/*! ./bytes */ \"./node_modules/@ethereumjs/common/node_modules/ethereumjs-util/dist.browser/bytes.js\");\nvar hash_1 = __webpack_require__(/*! ./hash */ \"./node_modules/@ethereumjs/common/node_modules/ethereumjs-util/dist.browser/hash.js\");\nvar helpers_1 = __webpack_require__(/*! ./helpers */ \"./node_modules/@ethereumjs/common/node_modules/ethereumjs-util/dist.browser/helpers.js\");\nvar types_1 = __webpack_require__(/*! ./types */ \"./node_modules/@ethereumjs/common/node_modules/ethereumjs-util/dist.browser/types.js\");\nvar Account = /** @class */ (function () {\n    /**\n     * This constructor assigns and validates the values.\n     * Use the static factory methods to assist in creating an Account from varying data types.\n     */\n    function Account(nonce, balance, stateRoot, codeHash) {\n        if (nonce === void 0) { nonce = new externals_1.BN(0); }\n        if (balance === void 0) { balance = new externals_1.BN(0); }\n        if (stateRoot === void 0) { stateRoot = constants_1.KECCAK256_RLP; }\n        if (codeHash === void 0) { codeHash = constants_1.KECCAK256_NULL; }\n        this.nonce = nonce;\n        this.balance = balance;\n        this.stateRoot = stateRoot;\n        this.codeHash = codeHash;\n        this._validate();\n    }\n    Account.fromAccountData = function (accountData) {\n        var nonce = accountData.nonce, balance = accountData.balance, stateRoot = accountData.stateRoot, codeHash = accountData.codeHash;\n        return new Account(nonce ? new externals_1.BN((0, bytes_1.toBuffer)(nonce)) : undefined, balance ? new externals_1.BN((0, bytes_1.toBuffer)(balance)) : undefined, stateRoot ? (0, bytes_1.toBuffer)(stateRoot) : undefined, codeHash ? (0, bytes_1.toBuffer)(codeHash) : undefined);\n    };\n    Account.fromRlpSerializedAccount = function (serialized) {\n        var values = externals_1.rlp.decode(serialized);\n        if (!Array.isArray(values)) {\n            throw new Error('Invalid serialized account input. Must be array');\n        }\n        return this.fromValuesArray(values);\n    };\n    Account.fromValuesArray = function (values) {\n        var _a = __read(values, 4), nonce = _a[0], balance = _a[1], stateRoot = _a[2], codeHash = _a[3];\n        return new Account(new externals_1.BN(nonce), new externals_1.BN(balance), stateRoot, codeHash);\n    };\n    Account.prototype._validate = function () {\n        if (this.nonce.lt(new externals_1.BN(0))) {\n            throw new Error('nonce must be greater than zero');\n        }\n        if (this.balance.lt(new externals_1.BN(0))) {\n            throw new Error('balance must be greater than zero');\n        }\n        if (this.stateRoot.length !== 32) {\n            throw new Error('stateRoot must have a length of 32');\n        }\n        if (this.codeHash.length !== 32) {\n            throw new Error('codeHash must have a length of 32');\n        }\n    };\n    /**\n     * Returns a Buffer Array of the raw Buffers for the account, in order.\n     */\n    Account.prototype.raw = function () {\n        return [\n            (0, types_1.bnToUnpaddedBuffer)(this.nonce),\n            (0, types_1.bnToUnpaddedBuffer)(this.balance),\n            this.stateRoot,\n            this.codeHash,\n        ];\n    };\n    /**\n     * Returns the RLP serialization of the account as a `Buffer`.\n     */\n    Account.prototype.serialize = function () {\n        return externals_1.rlp.encode(this.raw());\n    };\n    /**\n     * Returns a `Boolean` determining if the account is a contract.\n     */\n    Account.prototype.isContract = function () {\n        return !this.codeHash.equals(constants_1.KECCAK256_NULL);\n    };\n    /**\n     * Returns a `Boolean` determining if the account is empty complying to the definition of\n     * account emptiness in [EIP-161](https://eips.ethereum.org/EIPS/eip-161):\n     * \"An account is considered empty when it has no code and zero nonce and zero balance.\"\n     */\n    Account.prototype.isEmpty = function () {\n        return this.balance.isZero() && this.nonce.isZero() && this.codeHash.equals(constants_1.KECCAK256_NULL);\n    };\n    return Account;\n}());\nexports.Account = Account;\n/**\n * Checks if the address is a valid. Accepts checksummed addresses too.\n */\nvar isValidAddress = function (hexAddress) {\n    try {\n        (0, helpers_1.assertIsString)(hexAddress);\n    }\n    catch (e) {\n        return false;\n    }\n    return /^0x[0-9a-fA-F]{40}$/.test(hexAddress);\n};\nexports.isValidAddress = isValidAddress;\n/**\n * Returns a checksummed address.\n *\n * If an eip1191ChainId is provided, the chainId will be included in the checksum calculation. This\n * has the effect of checksummed addresses for one chain having invalid checksums for others.\n * For more details see [EIP-1191](https://eips.ethereum.org/EIPS/eip-1191).\n *\n * WARNING: Checksums with and without the chainId will differ and the EIP-1191 checksum is not\n * backwards compatible to the original widely adopted checksum format standard introduced in\n * [EIP-55](https://eips.ethereum.org/EIPS/eip-55), so this will break in existing applications.\n * Usage of this EIP is therefore discouraged unless you have a very targeted use case.\n */\nvar toChecksumAddress = function (hexAddress, eip1191ChainId) {\n    (0, helpers_1.assertIsHexString)(hexAddress);\n    var address = (0, internal_1.stripHexPrefix)(hexAddress).toLowerCase();\n    var prefix = '';\n    if (eip1191ChainId) {\n        var chainId = (0, types_1.toType)(eip1191ChainId, types_1.TypeOutput.BN);\n        prefix = chainId.toString() + '0x';\n    }\n    var hash = (0, hash_1.keccakFromString)(prefix + address).toString('hex');\n    var ret = '0x';\n    for (var i = 0; i < address.length; i++) {\n        if (parseInt(hash[i], 16) >= 8) {\n            ret += address[i].toUpperCase();\n        }\n        else {\n            ret += address[i];\n        }\n    }\n    return ret;\n};\nexports.toChecksumAddress = toChecksumAddress;\n/**\n * Checks if the address is a valid checksummed address.\n *\n * See toChecksumAddress' documentation for details about the eip1191ChainId parameter.\n */\nvar isValidChecksumAddress = function (hexAddress, eip1191ChainId) {\n    return (0, exports.isValidAddress)(hexAddress) && (0, exports.toChecksumAddress)(hexAddress, eip1191ChainId) === hexAddress;\n};\nexports.isValidChecksumAddress = isValidChecksumAddress;\n/**\n * Generates an address of a newly created contract.\n * @param from The address which is creating this new address\n * @param nonce The nonce of the from account\n */\nvar generateAddress = function (from, nonce) {\n    (0, helpers_1.assertIsBuffer)(from);\n    (0, helpers_1.assertIsBuffer)(nonce);\n    var nonceBN = new externals_1.BN(nonce);\n    if (nonceBN.isZero()) {\n        // in RLP we want to encode null in the case of zero nonce\n        // read the RLP documentation for an answer if you dare\n        return (0, hash_1.rlphash)([from, null]).slice(-20);\n    }\n    // Only take the lower 160bits of the hash\n    return (0, hash_1.rlphash)([from, Buffer.from(nonceBN.toArray())]).slice(-20);\n};\nexports.generateAddress = generateAddress;\n/**\n * Generates an address for a contract created using CREATE2.\n * @param from The address which is creating this new address\n * @param salt A salt\n * @param initCode The init code of the contract being created\n */\nvar generateAddress2 = function (from, salt, initCode) {\n    (0, helpers_1.assertIsBuffer)(from);\n    (0, helpers_1.assertIsBuffer)(salt);\n    (0, helpers_1.assertIsBuffer)(initCode);\n    (0, assert_1.default)(from.length === 20);\n    (0, assert_1.default)(salt.length === 32);\n    var address = (0, hash_1.keccak256)(Buffer.concat([Buffer.from('ff', 'hex'), from, salt, (0, hash_1.keccak256)(initCode)]));\n    return address.slice(-20);\n};\nexports.generateAddress2 = generateAddress2;\n/**\n * Checks if the private key satisfies the rules of the curve secp256k1.\n */\nvar isValidPrivate = function (privateKey) {\n    return (0, secp256k1_1.privateKeyVerify)(privateKey);\n};\nexports.isValidPrivate = isValidPrivate;\n/**\n * Checks if the public key satisfies the rules of the curve secp256k1\n * and the requirements of Ethereum.\n * @param publicKey The two points of an uncompressed key, unless sanitize is enabled\n * @param sanitize Accept public keys in other formats\n */\nvar isValidPublic = function (publicKey, sanitize) {\n    if (sanitize === void 0) { sanitize = false; }\n    (0, helpers_1.assertIsBuffer)(publicKey);\n    if (publicKey.length === 64) {\n        // Convert to SEC1 for secp256k1\n        return (0, secp256k1_1.publicKeyVerify)(Buffer.concat([Buffer.from([4]), publicKey]));\n    }\n    if (!sanitize) {\n        return false;\n    }\n    return (0, secp256k1_1.publicKeyVerify)(publicKey);\n};\nexports.isValidPublic = isValidPublic;\n/**\n * Returns the ethereum address of a given public key.\n * Accepts \"Ethereum public keys\" and SEC1 encoded keys.\n * @param pubKey The two points of an uncompressed key, unless sanitize is enabled\n * @param sanitize Accept public keys in other formats\n */\nvar pubToAddress = function (pubKey, sanitize) {\n    if (sanitize === void 0) { sanitize = false; }\n    (0, helpers_1.assertIsBuffer)(pubKey);\n    if (sanitize && pubKey.length !== 64) {\n        pubKey = Buffer.from((0, secp256k1_1.publicKeyConvert)(pubKey, false).slice(1));\n    }\n    (0, assert_1.default)(pubKey.length === 64);\n    // Only take the lower 160bits of the hash\n    return (0, hash_1.keccak)(pubKey).slice(-20);\n};\nexports.pubToAddress = pubToAddress;\nexports.publicToAddress = exports.pubToAddress;\n/**\n * Returns the ethereum public key of a given private key.\n * @param privateKey A private key must be 256 bits wide\n */\nvar privateToPublic = function (privateKey) {\n    (0, helpers_1.assertIsBuffer)(privateKey);\n    // skip the type flag and use the X, Y points\n    return Buffer.from((0, secp256k1_1.publicKeyCreate)(privateKey, false)).slice(1);\n};\nexports.privateToPublic = privateToPublic;\n/**\n * Returns the ethereum address of a given private key.\n * @param privateKey A private key must be 256 bits wide\n */\nvar privateToAddress = function (privateKey) {\n    return (0, exports.publicToAddress)((0, exports.privateToPublic)(privateKey));\n};\nexports.privateToAddress = privateToAddress;\n/**\n * Converts a public key to the Ethereum format.\n */\nvar importPublic = function (publicKey) {\n    (0, helpers_1.assertIsBuffer)(publicKey);\n    if (publicKey.length !== 64) {\n        publicKey = Buffer.from((0, secp256k1_1.publicKeyConvert)(publicKey, false).slice(1));\n    }\n    return publicKey;\n};\nexports.importPublic = importPublic;\n/**\n * Returns the zero address.\n */\nvar zeroAddress = function () {\n    var addressLength = 20;\n    var addr = (0, bytes_1.zeros)(addressLength);\n    return (0, bytes_1.bufferToHex)(addr);\n};\nexports.zeroAddress = zeroAddress;\n/**\n * Checks if a given address is the zero address.\n */\nvar isZeroAddress = function (hexAddress) {\n    try {\n        (0, helpers_1.assertIsString)(hexAddress);\n    }\n    catch (e) {\n        return false;\n    }\n    var zeroAddr = (0, exports.zeroAddress)();\n    return zeroAddr === hexAddress;\n};\nexports.isZeroAddress = isZeroAddress;\n//# sourceMappingURL=account.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGV0aGVyZXVtanMvY29tbW9uL25vZGVfbW9kdWxlcy9ldGhlcmV1bWpzLXV0aWwvZGlzdC5icm93c2VyL2FjY291bnQuanMuanMiLCJtYXBwaW5ncyI6IjtBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsTUFBTTtBQUMxQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQjtBQUNsQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZDQUE2QztBQUM3QztBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxxQkFBcUIsR0FBRyxtQkFBbUIsR0FBRyxvQkFBb0IsR0FBRyx3QkFBd0IsR0FBRyx1QkFBdUIsR0FBRyx1QkFBdUIsR0FBRyxvQkFBb0IsR0FBRyxxQkFBcUIsR0FBRyxzQkFBc0IsR0FBRyx3QkFBd0IsR0FBRyx1QkFBdUIsR0FBRyw4QkFBOEIsR0FBRyx5QkFBeUIsR0FBRyxzQkFBc0IsR0FBRyxlQUFlO0FBQ3RYLCtCQUErQixtQkFBTyxDQUFDLHFEQUFRO0FBQy9DLGtCQUFrQixtQkFBTyxDQUFDLDZHQUFhO0FBQ3ZDLGtCQUFrQixtQkFBTyxDQUFDLDBGQUFpQztBQUMzRCxpQkFBaUIsbUJBQU8sQ0FBQywyR0FBWTtBQUNyQyxrQkFBa0IsbUJBQU8sQ0FBQyw2R0FBYTtBQUN2QyxjQUFjLG1CQUFPLENBQUMscUdBQVM7QUFDL0IsYUFBYSxtQkFBTyxDQUFDLG1HQUFRO0FBQzdCLGdCQUFnQixtQkFBTyxDQUFDLHlHQUFXO0FBQ25DLGNBQWMsbUJBQU8sQ0FBQyxxR0FBUztBQUMvQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQ0FBZ0M7QUFDaEMsa0NBQWtDO0FBQ2xDLG9DQUFvQztBQUNwQyxtQ0FBbUM7QUFDbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0QsZUFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkJBQTJCLEdBQUc7QUFDOUI7QUFDQSxzQkFBc0I7QUFDdEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0Isb0JBQW9CO0FBQ3hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlCQUF5QjtBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOEJBQThCO0FBQzlCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNDQUFzQyxNQUFNO0FBQzVDO0FBQ0EsdUJBQXVCO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdDQUF3QyxNQUFNLFNBQVMsTUFBTTtBQUM3RDtBQUNBO0FBQ0Esd0JBQXdCO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQjtBQUN0QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLCtCQUErQjtBQUMvQjtBQUNBO0FBQ0E7QUFDQSxnREFBZ0QsTUFBTSxTQUFTLE1BQU07QUFDckU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsK0JBQStCO0FBQy9CO0FBQ0E7QUFDQSxpQkFBaUIsTUFBTTtBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CO0FBQ3BCLHVCQUF1QjtBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsTUFBTTtBQUNqQjtBQUNBLHVCQUF1QjtBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QjtBQUN4QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsTUFBTTtBQUMxQjtBQUNBO0FBQ0E7QUFDQSxvQkFBb0I7QUFDcEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQjtBQUNuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQjtBQUNyQiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGV0aGVyZXVtanMvY29tbW9uL25vZGVfbW9kdWxlcy9ldGhlcmV1bWpzLXV0aWwvZGlzdC5icm93c2VyL2FjY291bnQuanM/YmEwOSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX3JlYWQgPSAodGhpcyAmJiB0aGlzLl9fcmVhZCkgfHwgZnVuY3Rpb24gKG8sIG4pIHtcbiAgICB2YXIgbSA9IHR5cGVvZiBTeW1ib2wgPT09IFwiZnVuY3Rpb25cIiAmJiBvW1N5bWJvbC5pdGVyYXRvcl07XG4gICAgaWYgKCFtKSByZXR1cm4gbztcbiAgICB2YXIgaSA9IG0uY2FsbChvKSwgciwgYXIgPSBbXSwgZTtcbiAgICB0cnkge1xuICAgICAgICB3aGlsZSAoKG4gPT09IHZvaWQgMCB8fCBuLS0gPiAwKSAmJiAhKHIgPSBpLm5leHQoKSkuZG9uZSkgYXIucHVzaChyLnZhbHVlKTtcbiAgICB9XG4gICAgY2F0Y2ggKGVycm9yKSB7IGUgPSB7IGVycm9yOiBlcnJvciB9OyB9XG4gICAgZmluYWxseSB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICBpZiAociAmJiAhci5kb25lICYmIChtID0gaVtcInJldHVyblwiXSkpIG0uY2FsbChpKTtcbiAgICAgICAgfVxuICAgICAgICBmaW5hbGx5IHsgaWYgKGUpIHRocm93IGUuZXJyb3I7IH1cbiAgICB9XG4gICAgcmV0dXJuIGFyO1xufTtcbnZhciBfX2ltcG9ydERlZmF1bHQgPSAodGhpcyAmJiB0aGlzLl9faW1wb3J0RGVmYXVsdCkgfHwgZnVuY3Rpb24gKG1vZCkge1xuICAgIHJldHVybiAobW9kICYmIG1vZC5fX2VzTW9kdWxlKSA/IG1vZCA6IHsgXCJkZWZhdWx0XCI6IG1vZCB9O1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuaXNaZXJvQWRkcmVzcyA9IGV4cG9ydHMuemVyb0FkZHJlc3MgPSBleHBvcnRzLmltcG9ydFB1YmxpYyA9IGV4cG9ydHMucHJpdmF0ZVRvQWRkcmVzcyA9IGV4cG9ydHMucHJpdmF0ZVRvUHVibGljID0gZXhwb3J0cy5wdWJsaWNUb0FkZHJlc3MgPSBleHBvcnRzLnB1YlRvQWRkcmVzcyA9IGV4cG9ydHMuaXNWYWxpZFB1YmxpYyA9IGV4cG9ydHMuaXNWYWxpZFByaXZhdGUgPSBleHBvcnRzLmdlbmVyYXRlQWRkcmVzczIgPSBleHBvcnRzLmdlbmVyYXRlQWRkcmVzcyA9IGV4cG9ydHMuaXNWYWxpZENoZWNrc3VtQWRkcmVzcyA9IGV4cG9ydHMudG9DaGVja3N1bUFkZHJlc3MgPSBleHBvcnRzLmlzVmFsaWRBZGRyZXNzID0gZXhwb3J0cy5BY2NvdW50ID0gdm9pZCAwO1xudmFyIGFzc2VydF8xID0gX19pbXBvcnREZWZhdWx0KHJlcXVpcmUoXCJhc3NlcnRcIikpO1xudmFyIGV4dGVybmFsc18xID0gcmVxdWlyZShcIi4vZXh0ZXJuYWxzXCIpO1xudmFyIHNlY3AyNTZrMV8xID0gcmVxdWlyZShcImV0aGVyZXVtLWNyeXB0b2dyYXBoeS9zZWNwMjU2azFcIik7XG52YXIgaW50ZXJuYWxfMSA9IHJlcXVpcmUoXCIuL2ludGVybmFsXCIpO1xudmFyIGNvbnN0YW50c18xID0gcmVxdWlyZShcIi4vY29uc3RhbnRzXCIpO1xudmFyIGJ5dGVzXzEgPSByZXF1aXJlKFwiLi9ieXRlc1wiKTtcbnZhciBoYXNoXzEgPSByZXF1aXJlKFwiLi9oYXNoXCIpO1xudmFyIGhlbHBlcnNfMSA9IHJlcXVpcmUoXCIuL2hlbHBlcnNcIik7XG52YXIgdHlwZXNfMSA9IHJlcXVpcmUoXCIuL3R5cGVzXCIpO1xudmFyIEFjY291bnQgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoKSB7XG4gICAgLyoqXG4gICAgICogVGhpcyBjb25zdHJ1Y3RvciBhc3NpZ25zIGFuZCB2YWxpZGF0ZXMgdGhlIHZhbHVlcy5cbiAgICAgKiBVc2UgdGhlIHN0YXRpYyBmYWN0b3J5IG1ldGhvZHMgdG8gYXNzaXN0IGluIGNyZWF0aW5nIGFuIEFjY291bnQgZnJvbSB2YXJ5aW5nIGRhdGEgdHlwZXMuXG4gICAgICovXG4gICAgZnVuY3Rpb24gQWNjb3VudChub25jZSwgYmFsYW5jZSwgc3RhdGVSb290LCBjb2RlSGFzaCkge1xuICAgICAgICBpZiAobm9uY2UgPT09IHZvaWQgMCkgeyBub25jZSA9IG5ldyBleHRlcm5hbHNfMS5CTigwKTsgfVxuICAgICAgICBpZiAoYmFsYW5jZSA9PT0gdm9pZCAwKSB7IGJhbGFuY2UgPSBuZXcgZXh0ZXJuYWxzXzEuQk4oMCk7IH1cbiAgICAgICAgaWYgKHN0YXRlUm9vdCA9PT0gdm9pZCAwKSB7IHN0YXRlUm9vdCA9IGNvbnN0YW50c18xLktFQ0NBSzI1Nl9STFA7IH1cbiAgICAgICAgaWYgKGNvZGVIYXNoID09PSB2b2lkIDApIHsgY29kZUhhc2ggPSBjb25zdGFudHNfMS5LRUNDQUsyNTZfTlVMTDsgfVxuICAgICAgICB0aGlzLm5vbmNlID0gbm9uY2U7XG4gICAgICAgIHRoaXMuYmFsYW5jZSA9IGJhbGFuY2U7XG4gICAgICAgIHRoaXMuc3RhdGVSb290ID0gc3RhdGVSb290O1xuICAgICAgICB0aGlzLmNvZGVIYXNoID0gY29kZUhhc2g7XG4gICAgICAgIHRoaXMuX3ZhbGlkYXRlKCk7XG4gICAgfVxuICAgIEFjY291bnQuZnJvbUFjY291bnREYXRhID0gZnVuY3Rpb24gKGFjY291bnREYXRhKSB7XG4gICAgICAgIHZhciBub25jZSA9IGFjY291bnREYXRhLm5vbmNlLCBiYWxhbmNlID0gYWNjb3VudERhdGEuYmFsYW5jZSwgc3RhdGVSb290ID0gYWNjb3VudERhdGEuc3RhdGVSb290LCBjb2RlSGFzaCA9IGFjY291bnREYXRhLmNvZGVIYXNoO1xuICAgICAgICByZXR1cm4gbmV3IEFjY291bnQobm9uY2UgPyBuZXcgZXh0ZXJuYWxzXzEuQk4oKDAsIGJ5dGVzXzEudG9CdWZmZXIpKG5vbmNlKSkgOiB1bmRlZmluZWQsIGJhbGFuY2UgPyBuZXcgZXh0ZXJuYWxzXzEuQk4oKDAsIGJ5dGVzXzEudG9CdWZmZXIpKGJhbGFuY2UpKSA6IHVuZGVmaW5lZCwgc3RhdGVSb290ID8gKDAsIGJ5dGVzXzEudG9CdWZmZXIpKHN0YXRlUm9vdCkgOiB1bmRlZmluZWQsIGNvZGVIYXNoID8gKDAsIGJ5dGVzXzEudG9CdWZmZXIpKGNvZGVIYXNoKSA6IHVuZGVmaW5lZCk7XG4gICAgfTtcbiAgICBBY2NvdW50LmZyb21SbHBTZXJpYWxpemVkQWNjb3VudCA9IGZ1bmN0aW9uIChzZXJpYWxpemVkKSB7XG4gICAgICAgIHZhciB2YWx1ZXMgPSBleHRlcm5hbHNfMS5ybHAuZGVjb2RlKHNlcmlhbGl6ZWQpO1xuICAgICAgICBpZiAoIUFycmF5LmlzQXJyYXkodmFsdWVzKSkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdJbnZhbGlkIHNlcmlhbGl6ZWQgYWNjb3VudCBpbnB1dC4gTXVzdCBiZSBhcnJheScpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0aGlzLmZyb21WYWx1ZXNBcnJheSh2YWx1ZXMpO1xuICAgIH07XG4gICAgQWNjb3VudC5mcm9tVmFsdWVzQXJyYXkgPSBmdW5jdGlvbiAodmFsdWVzKSB7XG4gICAgICAgIHZhciBfYSA9IF9fcmVhZCh2YWx1ZXMsIDQpLCBub25jZSA9IF9hWzBdLCBiYWxhbmNlID0gX2FbMV0sIHN0YXRlUm9vdCA9IF9hWzJdLCBjb2RlSGFzaCA9IF9hWzNdO1xuICAgICAgICByZXR1cm4gbmV3IEFjY291bnQobmV3IGV4dGVybmFsc18xLkJOKG5vbmNlKSwgbmV3IGV4dGVybmFsc18xLkJOKGJhbGFuY2UpLCBzdGF0ZVJvb3QsIGNvZGVIYXNoKTtcbiAgICB9O1xuICAgIEFjY291bnQucHJvdG90eXBlLl92YWxpZGF0ZSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgaWYgKHRoaXMubm9uY2UubHQobmV3IGV4dGVybmFsc18xLkJOKDApKSkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdub25jZSBtdXN0IGJlIGdyZWF0ZXIgdGhhbiB6ZXJvJyk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHRoaXMuYmFsYW5jZS5sdChuZXcgZXh0ZXJuYWxzXzEuQk4oMCkpKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ2JhbGFuY2UgbXVzdCBiZSBncmVhdGVyIHRoYW4gemVybycpO1xuICAgICAgICB9XG4gICAgICAgIGlmICh0aGlzLnN0YXRlUm9vdC5sZW5ndGggIT09IDMyKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ3N0YXRlUm9vdCBtdXN0IGhhdmUgYSBsZW5ndGggb2YgMzInKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAodGhpcy5jb2RlSGFzaC5sZW5ndGggIT09IDMyKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ2NvZGVIYXNoIG11c3QgaGF2ZSBhIGxlbmd0aCBvZiAzMicpO1xuICAgICAgICB9XG4gICAgfTtcbiAgICAvKipcbiAgICAgKiBSZXR1cm5zIGEgQnVmZmVyIEFycmF5IG9mIHRoZSByYXcgQnVmZmVycyBmb3IgdGhlIGFjY291bnQsIGluIG9yZGVyLlxuICAgICAqL1xuICAgIEFjY291bnQucHJvdG90eXBlLnJhdyA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIFtcbiAgICAgICAgICAgICgwLCB0eXBlc18xLmJuVG9VbnBhZGRlZEJ1ZmZlcikodGhpcy5ub25jZSksXG4gICAgICAgICAgICAoMCwgdHlwZXNfMS5iblRvVW5wYWRkZWRCdWZmZXIpKHRoaXMuYmFsYW5jZSksXG4gICAgICAgICAgICB0aGlzLnN0YXRlUm9vdCxcbiAgICAgICAgICAgIHRoaXMuY29kZUhhc2gsXG4gICAgICAgIF07XG4gICAgfTtcbiAgICAvKipcbiAgICAgKiBSZXR1cm5zIHRoZSBSTFAgc2VyaWFsaXphdGlvbiBvZiB0aGUgYWNjb3VudCBhcyBhIGBCdWZmZXJgLlxuICAgICAqL1xuICAgIEFjY291bnQucHJvdG90eXBlLnNlcmlhbGl6ZSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIGV4dGVybmFsc18xLnJscC5lbmNvZGUodGhpcy5yYXcoKSk7XG4gICAgfTtcbiAgICAvKipcbiAgICAgKiBSZXR1cm5zIGEgYEJvb2xlYW5gIGRldGVybWluaW5nIGlmIHRoZSBhY2NvdW50IGlzIGEgY29udHJhY3QuXG4gICAgICovXG4gICAgQWNjb3VudC5wcm90b3R5cGUuaXNDb250cmFjdCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuICF0aGlzLmNvZGVIYXNoLmVxdWFscyhjb25zdGFudHNfMS5LRUNDQUsyNTZfTlVMTCk7XG4gICAgfTtcbiAgICAvKipcbiAgICAgKiBSZXR1cm5zIGEgYEJvb2xlYW5gIGRldGVybWluaW5nIGlmIHRoZSBhY2NvdW50IGlzIGVtcHR5IGNvbXBseWluZyB0byB0aGUgZGVmaW5pdGlvbiBvZlxuICAgICAqIGFjY291bnQgZW1wdGluZXNzIGluIFtFSVAtMTYxXShodHRwczovL2VpcHMuZXRoZXJldW0ub3JnL0VJUFMvZWlwLTE2MSk6XG4gICAgICogXCJBbiBhY2NvdW50IGlzIGNvbnNpZGVyZWQgZW1wdHkgd2hlbiBpdCBoYXMgbm8gY29kZSBhbmQgemVybyBub25jZSBhbmQgemVybyBiYWxhbmNlLlwiXG4gICAgICovXG4gICAgQWNjb3VudC5wcm90b3R5cGUuaXNFbXB0eSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuYmFsYW5jZS5pc1plcm8oKSAmJiB0aGlzLm5vbmNlLmlzWmVybygpICYmIHRoaXMuY29kZUhhc2guZXF1YWxzKGNvbnN0YW50c18xLktFQ0NBSzI1Nl9OVUxMKTtcbiAgICB9O1xuICAgIHJldHVybiBBY2NvdW50O1xufSgpKTtcbmV4cG9ydHMuQWNjb3VudCA9IEFjY291bnQ7XG4vKipcbiAqIENoZWNrcyBpZiB0aGUgYWRkcmVzcyBpcyBhIHZhbGlkLiBBY2NlcHRzIGNoZWNrc3VtbWVkIGFkZHJlc3NlcyB0b28uXG4gKi9cbnZhciBpc1ZhbGlkQWRkcmVzcyA9IGZ1bmN0aW9uIChoZXhBZGRyZXNzKSB7XG4gICAgdHJ5IHtcbiAgICAgICAgKDAsIGhlbHBlcnNfMS5hc3NlcnRJc1N0cmluZykoaGV4QWRkcmVzcyk7XG4gICAgfVxuICAgIGNhdGNoIChlKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgcmV0dXJuIC9eMHhbMC05YS1mQS1GXXs0MH0kLy50ZXN0KGhleEFkZHJlc3MpO1xufTtcbmV4cG9ydHMuaXNWYWxpZEFkZHJlc3MgPSBpc1ZhbGlkQWRkcmVzcztcbi8qKlxuICogUmV0dXJucyBhIGNoZWNrc3VtbWVkIGFkZHJlc3MuXG4gKlxuICogSWYgYW4gZWlwMTE5MUNoYWluSWQgaXMgcHJvdmlkZWQsIHRoZSBjaGFpbklkIHdpbGwgYmUgaW5jbHVkZWQgaW4gdGhlIGNoZWNrc3VtIGNhbGN1bGF0aW9uLiBUaGlzXG4gKiBoYXMgdGhlIGVmZmVjdCBvZiBjaGVja3N1bW1lZCBhZGRyZXNzZXMgZm9yIG9uZSBjaGFpbiBoYXZpbmcgaW52YWxpZCBjaGVja3N1bXMgZm9yIG90aGVycy5cbiAqIEZvciBtb3JlIGRldGFpbHMgc2VlIFtFSVAtMTE5MV0oaHR0cHM6Ly9laXBzLmV0aGVyZXVtLm9yZy9FSVBTL2VpcC0xMTkxKS5cbiAqXG4gKiBXQVJOSU5HOiBDaGVja3N1bXMgd2l0aCBhbmQgd2l0aG91dCB0aGUgY2hhaW5JZCB3aWxsIGRpZmZlciBhbmQgdGhlIEVJUC0xMTkxIGNoZWNrc3VtIGlzIG5vdFxuICogYmFja3dhcmRzIGNvbXBhdGlibGUgdG8gdGhlIG9yaWdpbmFsIHdpZGVseSBhZG9wdGVkIGNoZWNrc3VtIGZvcm1hdCBzdGFuZGFyZCBpbnRyb2R1Y2VkIGluXG4gKiBbRUlQLTU1XShodHRwczovL2VpcHMuZXRoZXJldW0ub3JnL0VJUFMvZWlwLTU1KSwgc28gdGhpcyB3aWxsIGJyZWFrIGluIGV4aXN0aW5nIGFwcGxpY2F0aW9ucy5cbiAqIFVzYWdlIG9mIHRoaXMgRUlQIGlzIHRoZXJlZm9yZSBkaXNjb3VyYWdlZCB1bmxlc3MgeW91IGhhdmUgYSB2ZXJ5IHRhcmdldGVkIHVzZSBjYXNlLlxuICovXG52YXIgdG9DaGVja3N1bUFkZHJlc3MgPSBmdW5jdGlvbiAoaGV4QWRkcmVzcywgZWlwMTE5MUNoYWluSWQpIHtcbiAgICAoMCwgaGVscGVyc18xLmFzc2VydElzSGV4U3RyaW5nKShoZXhBZGRyZXNzKTtcbiAgICB2YXIgYWRkcmVzcyA9ICgwLCBpbnRlcm5hbF8xLnN0cmlwSGV4UHJlZml4KShoZXhBZGRyZXNzKS50b0xvd2VyQ2FzZSgpO1xuICAgIHZhciBwcmVmaXggPSAnJztcbiAgICBpZiAoZWlwMTE5MUNoYWluSWQpIHtcbiAgICAgICAgdmFyIGNoYWluSWQgPSAoMCwgdHlwZXNfMS50b1R5cGUpKGVpcDExOTFDaGFpbklkLCB0eXBlc18xLlR5cGVPdXRwdXQuQk4pO1xuICAgICAgICBwcmVmaXggPSBjaGFpbklkLnRvU3RyaW5nKCkgKyAnMHgnO1xuICAgIH1cbiAgICB2YXIgaGFzaCA9ICgwLCBoYXNoXzEua2VjY2FrRnJvbVN0cmluZykocHJlZml4ICsgYWRkcmVzcykudG9TdHJpbmcoJ2hleCcpO1xuICAgIHZhciByZXQgPSAnMHgnO1xuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgYWRkcmVzcy5sZW5ndGg7IGkrKykge1xuICAgICAgICBpZiAocGFyc2VJbnQoaGFzaFtpXSwgMTYpID49IDgpIHtcbiAgICAgICAgICAgIHJldCArPSBhZGRyZXNzW2ldLnRvVXBwZXJDYXNlKCk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICByZXQgKz0gYWRkcmVzc1tpXTtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gcmV0O1xufTtcbmV4cG9ydHMudG9DaGVja3N1bUFkZHJlc3MgPSB0b0NoZWNrc3VtQWRkcmVzcztcbi8qKlxuICogQ2hlY2tzIGlmIHRoZSBhZGRyZXNzIGlzIGEgdmFsaWQgY2hlY2tzdW1tZWQgYWRkcmVzcy5cbiAqXG4gKiBTZWUgdG9DaGVja3N1bUFkZHJlc3MnIGRvY3VtZW50YXRpb24gZm9yIGRldGFpbHMgYWJvdXQgdGhlIGVpcDExOTFDaGFpbklkIHBhcmFtZXRlci5cbiAqL1xudmFyIGlzVmFsaWRDaGVja3N1bUFkZHJlc3MgPSBmdW5jdGlvbiAoaGV4QWRkcmVzcywgZWlwMTE5MUNoYWluSWQpIHtcbiAgICByZXR1cm4gKDAsIGV4cG9ydHMuaXNWYWxpZEFkZHJlc3MpKGhleEFkZHJlc3MpICYmICgwLCBleHBvcnRzLnRvQ2hlY2tzdW1BZGRyZXNzKShoZXhBZGRyZXNzLCBlaXAxMTkxQ2hhaW5JZCkgPT09IGhleEFkZHJlc3M7XG59O1xuZXhwb3J0cy5pc1ZhbGlkQ2hlY2tzdW1BZGRyZXNzID0gaXNWYWxpZENoZWNrc3VtQWRkcmVzcztcbi8qKlxuICogR2VuZXJhdGVzIGFuIGFkZHJlc3Mgb2YgYSBuZXdseSBjcmVhdGVkIGNvbnRyYWN0LlxuICogQHBhcmFtIGZyb20gVGhlIGFkZHJlc3Mgd2hpY2ggaXMgY3JlYXRpbmcgdGhpcyBuZXcgYWRkcmVzc1xuICogQHBhcmFtIG5vbmNlIFRoZSBub25jZSBvZiB0aGUgZnJvbSBhY2NvdW50XG4gKi9cbnZhciBnZW5lcmF0ZUFkZHJlc3MgPSBmdW5jdGlvbiAoZnJvbSwgbm9uY2UpIHtcbiAgICAoMCwgaGVscGVyc18xLmFzc2VydElzQnVmZmVyKShmcm9tKTtcbiAgICAoMCwgaGVscGVyc18xLmFzc2VydElzQnVmZmVyKShub25jZSk7XG4gICAgdmFyIG5vbmNlQk4gPSBuZXcgZXh0ZXJuYWxzXzEuQk4obm9uY2UpO1xuICAgIGlmIChub25jZUJOLmlzWmVybygpKSB7XG4gICAgICAgIC8vIGluIFJMUCB3ZSB3YW50IHRvIGVuY29kZSBudWxsIGluIHRoZSBjYXNlIG9mIHplcm8gbm9uY2VcbiAgICAgICAgLy8gcmVhZCB0aGUgUkxQIGRvY3VtZW50YXRpb24gZm9yIGFuIGFuc3dlciBpZiB5b3UgZGFyZVxuICAgICAgICByZXR1cm4gKDAsIGhhc2hfMS5ybHBoYXNoKShbZnJvbSwgbnVsbF0pLnNsaWNlKC0yMCk7XG4gICAgfVxuICAgIC8vIE9ubHkgdGFrZSB0aGUgbG93ZXIgMTYwYml0cyBvZiB0aGUgaGFzaFxuICAgIHJldHVybiAoMCwgaGFzaF8xLnJscGhhc2gpKFtmcm9tLCBCdWZmZXIuZnJvbShub25jZUJOLnRvQXJyYXkoKSldKS5zbGljZSgtMjApO1xufTtcbmV4cG9ydHMuZ2VuZXJhdGVBZGRyZXNzID0gZ2VuZXJhdGVBZGRyZXNzO1xuLyoqXG4gKiBHZW5lcmF0ZXMgYW4gYWRkcmVzcyBmb3IgYSBjb250cmFjdCBjcmVhdGVkIHVzaW5nIENSRUFURTIuXG4gKiBAcGFyYW0gZnJvbSBUaGUgYWRkcmVzcyB3aGljaCBpcyBjcmVhdGluZyB0aGlzIG5ldyBhZGRyZXNzXG4gKiBAcGFyYW0gc2FsdCBBIHNhbHRcbiAqIEBwYXJhbSBpbml0Q29kZSBUaGUgaW5pdCBjb2RlIG9mIHRoZSBjb250cmFjdCBiZWluZyBjcmVhdGVkXG4gKi9cbnZhciBnZW5lcmF0ZUFkZHJlc3MyID0gZnVuY3Rpb24gKGZyb20sIHNhbHQsIGluaXRDb2RlKSB7XG4gICAgKDAsIGhlbHBlcnNfMS5hc3NlcnRJc0J1ZmZlcikoZnJvbSk7XG4gICAgKDAsIGhlbHBlcnNfMS5hc3NlcnRJc0J1ZmZlcikoc2FsdCk7XG4gICAgKDAsIGhlbHBlcnNfMS5hc3NlcnRJc0J1ZmZlcikoaW5pdENvZGUpO1xuICAgICgwLCBhc3NlcnRfMS5kZWZhdWx0KShmcm9tLmxlbmd0aCA9PT0gMjApO1xuICAgICgwLCBhc3NlcnRfMS5kZWZhdWx0KShzYWx0Lmxlbmd0aCA9PT0gMzIpO1xuICAgIHZhciBhZGRyZXNzID0gKDAsIGhhc2hfMS5rZWNjYWsyNTYpKEJ1ZmZlci5jb25jYXQoW0J1ZmZlci5mcm9tKCdmZicsICdoZXgnKSwgZnJvbSwgc2FsdCwgKDAsIGhhc2hfMS5rZWNjYWsyNTYpKGluaXRDb2RlKV0pKTtcbiAgICByZXR1cm4gYWRkcmVzcy5zbGljZSgtMjApO1xufTtcbmV4cG9ydHMuZ2VuZXJhdGVBZGRyZXNzMiA9IGdlbmVyYXRlQWRkcmVzczI7XG4vKipcbiAqIENoZWNrcyBpZiB0aGUgcHJpdmF0ZSBrZXkgc2F0aXNmaWVzIHRoZSBydWxlcyBvZiB0aGUgY3VydmUgc2VjcDI1NmsxLlxuICovXG52YXIgaXNWYWxpZFByaXZhdGUgPSBmdW5jdGlvbiAocHJpdmF0ZUtleSkge1xuICAgIHJldHVybiAoMCwgc2VjcDI1NmsxXzEucHJpdmF0ZUtleVZlcmlmeSkocHJpdmF0ZUtleSk7XG59O1xuZXhwb3J0cy5pc1ZhbGlkUHJpdmF0ZSA9IGlzVmFsaWRQcml2YXRlO1xuLyoqXG4gKiBDaGVja3MgaWYgdGhlIHB1YmxpYyBrZXkgc2F0aXNmaWVzIHRoZSBydWxlcyBvZiB0aGUgY3VydmUgc2VjcDI1NmsxXG4gKiBhbmQgdGhlIHJlcXVpcmVtZW50cyBvZiBFdGhlcmV1bS5cbiAqIEBwYXJhbSBwdWJsaWNLZXkgVGhlIHR3byBwb2ludHMgb2YgYW4gdW5jb21wcmVzc2VkIGtleSwgdW5sZXNzIHNhbml0aXplIGlzIGVuYWJsZWRcbiAqIEBwYXJhbSBzYW5pdGl6ZSBBY2NlcHQgcHVibGljIGtleXMgaW4gb3RoZXIgZm9ybWF0c1xuICovXG52YXIgaXNWYWxpZFB1YmxpYyA9IGZ1bmN0aW9uIChwdWJsaWNLZXksIHNhbml0aXplKSB7XG4gICAgaWYgKHNhbml0aXplID09PSB2b2lkIDApIHsgc2FuaXRpemUgPSBmYWxzZTsgfVxuICAgICgwLCBoZWxwZXJzXzEuYXNzZXJ0SXNCdWZmZXIpKHB1YmxpY0tleSk7XG4gICAgaWYgKHB1YmxpY0tleS5sZW5ndGggPT09IDY0KSB7XG4gICAgICAgIC8vIENvbnZlcnQgdG8gU0VDMSBmb3Igc2VjcDI1NmsxXG4gICAgICAgIHJldHVybiAoMCwgc2VjcDI1NmsxXzEucHVibGljS2V5VmVyaWZ5KShCdWZmZXIuY29uY2F0KFtCdWZmZXIuZnJvbShbNF0pLCBwdWJsaWNLZXldKSk7XG4gICAgfVxuICAgIGlmICghc2FuaXRpemUpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICByZXR1cm4gKDAsIHNlY3AyNTZrMV8xLnB1YmxpY0tleVZlcmlmeSkocHVibGljS2V5KTtcbn07XG5leHBvcnRzLmlzVmFsaWRQdWJsaWMgPSBpc1ZhbGlkUHVibGljO1xuLyoqXG4gKiBSZXR1cm5zIHRoZSBldGhlcmV1bSBhZGRyZXNzIG9mIGEgZ2l2ZW4gcHVibGljIGtleS5cbiAqIEFjY2VwdHMgXCJFdGhlcmV1bSBwdWJsaWMga2V5c1wiIGFuZCBTRUMxIGVuY29kZWQga2V5cy5cbiAqIEBwYXJhbSBwdWJLZXkgVGhlIHR3byBwb2ludHMgb2YgYW4gdW5jb21wcmVzc2VkIGtleSwgdW5sZXNzIHNhbml0aXplIGlzIGVuYWJsZWRcbiAqIEBwYXJhbSBzYW5pdGl6ZSBBY2NlcHQgcHVibGljIGtleXMgaW4gb3RoZXIgZm9ybWF0c1xuICovXG52YXIgcHViVG9BZGRyZXNzID0gZnVuY3Rpb24gKHB1YktleSwgc2FuaXRpemUpIHtcbiAgICBpZiAoc2FuaXRpemUgPT09IHZvaWQgMCkgeyBzYW5pdGl6ZSA9IGZhbHNlOyB9XG4gICAgKDAsIGhlbHBlcnNfMS5hc3NlcnRJc0J1ZmZlcikocHViS2V5KTtcbiAgICBpZiAoc2FuaXRpemUgJiYgcHViS2V5Lmxlbmd0aCAhPT0gNjQpIHtcbiAgICAgICAgcHViS2V5ID0gQnVmZmVyLmZyb20oKDAsIHNlY3AyNTZrMV8xLnB1YmxpY0tleUNvbnZlcnQpKHB1YktleSwgZmFsc2UpLnNsaWNlKDEpKTtcbiAgICB9XG4gICAgKDAsIGFzc2VydF8xLmRlZmF1bHQpKHB1YktleS5sZW5ndGggPT09IDY0KTtcbiAgICAvLyBPbmx5IHRha2UgdGhlIGxvd2VyIDE2MGJpdHMgb2YgdGhlIGhhc2hcbiAgICByZXR1cm4gKDAsIGhhc2hfMS5rZWNjYWspKHB1YktleSkuc2xpY2UoLTIwKTtcbn07XG5leHBvcnRzLnB1YlRvQWRkcmVzcyA9IHB1YlRvQWRkcmVzcztcbmV4cG9ydHMucHVibGljVG9BZGRyZXNzID0gZXhwb3J0cy5wdWJUb0FkZHJlc3M7XG4vKipcbiAqIFJldHVybnMgdGhlIGV0aGVyZXVtIHB1YmxpYyBrZXkgb2YgYSBnaXZlbiBwcml2YXRlIGtleS5cbiAqIEBwYXJhbSBwcml2YXRlS2V5IEEgcHJpdmF0ZSBrZXkgbXVzdCBiZSAyNTYgYml0cyB3aWRlXG4gKi9cbnZhciBwcml2YXRlVG9QdWJsaWMgPSBmdW5jdGlvbiAocHJpdmF0ZUtleSkge1xuICAgICgwLCBoZWxwZXJzXzEuYXNzZXJ0SXNCdWZmZXIpKHByaXZhdGVLZXkpO1xuICAgIC8vIHNraXAgdGhlIHR5cGUgZmxhZyBhbmQgdXNlIHRoZSBYLCBZIHBvaW50c1xuICAgIHJldHVybiBCdWZmZXIuZnJvbSgoMCwgc2VjcDI1NmsxXzEucHVibGljS2V5Q3JlYXRlKShwcml2YXRlS2V5LCBmYWxzZSkpLnNsaWNlKDEpO1xufTtcbmV4cG9ydHMucHJpdmF0ZVRvUHVibGljID0gcHJpdmF0ZVRvUHVibGljO1xuLyoqXG4gKiBSZXR1cm5zIHRoZSBldGhlcmV1bSBhZGRyZXNzIG9mIGEgZ2l2ZW4gcHJpdmF0ZSBrZXkuXG4gKiBAcGFyYW0gcHJpdmF0ZUtleSBBIHByaXZhdGUga2V5IG11c3QgYmUgMjU2IGJpdHMgd2lkZVxuICovXG52YXIgcHJpdmF0ZVRvQWRkcmVzcyA9IGZ1bmN0aW9uIChwcml2YXRlS2V5KSB7XG4gICAgcmV0dXJuICgwLCBleHBvcnRzLnB1YmxpY1RvQWRkcmVzcykoKDAsIGV4cG9ydHMucHJpdmF0ZVRvUHVibGljKShwcml2YXRlS2V5KSk7XG59O1xuZXhwb3J0cy5wcml2YXRlVG9BZGRyZXNzID0gcHJpdmF0ZVRvQWRkcmVzcztcbi8qKlxuICogQ29udmVydHMgYSBwdWJsaWMga2V5IHRvIHRoZSBFdGhlcmV1bSBmb3JtYXQuXG4gKi9cbnZhciBpbXBvcnRQdWJsaWMgPSBmdW5jdGlvbiAocHVibGljS2V5KSB7XG4gICAgKDAsIGhlbHBlcnNfMS5hc3NlcnRJc0J1ZmZlcikocHVibGljS2V5KTtcbiAgICBpZiAocHVibGljS2V5Lmxlbmd0aCAhPT0gNjQpIHtcbiAgICAgICAgcHVibGljS2V5ID0gQnVmZmVyLmZyb20oKDAsIHNlY3AyNTZrMV8xLnB1YmxpY0tleUNvbnZlcnQpKHB1YmxpY0tleSwgZmFsc2UpLnNsaWNlKDEpKTtcbiAgICB9XG4gICAgcmV0dXJuIHB1YmxpY0tleTtcbn07XG5leHBvcnRzLmltcG9ydFB1YmxpYyA9IGltcG9ydFB1YmxpYztcbi8qKlxuICogUmV0dXJucyB0aGUgemVybyBhZGRyZXNzLlxuICovXG52YXIgemVyb0FkZHJlc3MgPSBmdW5jdGlvbiAoKSB7XG4gICAgdmFyIGFkZHJlc3NMZW5ndGggPSAyMDtcbiAgICB2YXIgYWRkciA9ICgwLCBieXRlc18xLnplcm9zKShhZGRyZXNzTGVuZ3RoKTtcbiAgICByZXR1cm4gKDAsIGJ5dGVzXzEuYnVmZmVyVG9IZXgpKGFkZHIpO1xufTtcbmV4cG9ydHMuemVyb0FkZHJlc3MgPSB6ZXJvQWRkcmVzcztcbi8qKlxuICogQ2hlY2tzIGlmIGEgZ2l2ZW4gYWRkcmVzcyBpcyB0aGUgemVybyBhZGRyZXNzLlxuICovXG52YXIgaXNaZXJvQWRkcmVzcyA9IGZ1bmN0aW9uIChoZXhBZGRyZXNzKSB7XG4gICAgdHJ5IHtcbiAgICAgICAgKDAsIGhlbHBlcnNfMS5hc3NlcnRJc1N0cmluZykoaGV4QWRkcmVzcyk7XG4gICAgfVxuICAgIGNhdGNoIChlKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgdmFyIHplcm9BZGRyID0gKDAsIGV4cG9ydHMuemVyb0FkZHJlc3MpKCk7XG4gICAgcmV0dXJuIHplcm9BZGRyID09PSBoZXhBZGRyZXNzO1xufTtcbmV4cG9ydHMuaXNaZXJvQWRkcmVzcyA9IGlzWmVyb0FkZHJlc3M7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1hY2NvdW50LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@ethereumjs/common/node_modules/ethereumjs-util/dist.browser/account.js\n");

/***/ }),

/***/ "./node_modules/@ethereumjs/common/node_modules/ethereumjs-util/dist.browser/address.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@ethereumjs/common/node_modules/ethereumjs-util/dist.browser/address.js ***!
  \**********************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"./node_modules/buffer/index.js\")[\"Buffer\"];\n\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Address = void 0;\nvar assert_1 = __importDefault(__webpack_require__(/*! assert */ \"./node_modules/assert/build/assert.js\"));\nvar externals_1 = __webpack_require__(/*! ./externals */ \"./node_modules/@ethereumjs/common/node_modules/ethereumjs-util/dist.browser/externals.js\");\nvar bytes_1 = __webpack_require__(/*! ./bytes */ \"./node_modules/@ethereumjs/common/node_modules/ethereumjs-util/dist.browser/bytes.js\");\nvar account_1 = __webpack_require__(/*! ./account */ \"./node_modules/@ethereumjs/common/node_modules/ethereumjs-util/dist.browser/account.js\");\nvar Address = /** @class */ (function () {\n    function Address(buf) {\n        (0, assert_1.default)(buf.length === 20, 'Invalid address length');\n        this.buf = buf;\n    }\n    /**\n     * Returns the zero address.\n     */\n    Address.zero = function () {\n        return new Address((0, bytes_1.zeros)(20));\n    };\n    /**\n     * Returns an Address object from a hex-encoded string.\n     * @param str - Hex-encoded address\n     */\n    Address.fromString = function (str) {\n        (0, assert_1.default)((0, account_1.isValidAddress)(str), 'Invalid address');\n        return new Address((0, bytes_1.toBuffer)(str));\n    };\n    /**\n     * Returns an address for a given public key.\n     * @param pubKey The two points of an uncompressed key\n     */\n    Address.fromPublicKey = function (pubKey) {\n        (0, assert_1.default)(Buffer.isBuffer(pubKey), 'Public key should be Buffer');\n        var buf = (0, account_1.pubToAddress)(pubKey);\n        return new Address(buf);\n    };\n    /**\n     * Returns an address for a given private key.\n     * @param privateKey A private key must be 256 bits wide\n     */\n    Address.fromPrivateKey = function (privateKey) {\n        (0, assert_1.default)(Buffer.isBuffer(privateKey), 'Private key should be Buffer');\n        var buf = (0, account_1.privateToAddress)(privateKey);\n        return new Address(buf);\n    };\n    /**\n     * Generates an address for a newly created contract.\n     * @param from The address which is creating this new address\n     * @param nonce The nonce of the from account\n     */\n    Address.generate = function (from, nonce) {\n        (0, assert_1.default)(externals_1.BN.isBN(nonce));\n        return new Address((0, account_1.generateAddress)(from.buf, nonce.toArrayLike(Buffer)));\n    };\n    /**\n     * Generates an address for a contract created using CREATE2.\n     * @param from The address which is creating this new address\n     * @param salt A salt\n     * @param initCode The init code of the contract being created\n     */\n    Address.generate2 = function (from, salt, initCode) {\n        (0, assert_1.default)(Buffer.isBuffer(salt));\n        (0, assert_1.default)(Buffer.isBuffer(initCode));\n        return new Address((0, account_1.generateAddress2)(from.buf, salt, initCode));\n    };\n    /**\n     * Is address equal to another.\n     */\n    Address.prototype.equals = function (address) {\n        return this.buf.equals(address.buf);\n    };\n    /**\n     * Is address zero.\n     */\n    Address.prototype.isZero = function () {\n        return this.equals(Address.zero());\n    };\n    /**\n     * True if address is in the address range defined\n     * by EIP-1352\n     */\n    Address.prototype.isPrecompileOrSystemAddress = function () {\n        var addressBN = new externals_1.BN(this.buf);\n        var rangeMin = new externals_1.BN(0);\n        var rangeMax = new externals_1.BN('ffff', 'hex');\n        return addressBN.gte(rangeMin) && addressBN.lte(rangeMax);\n    };\n    /**\n     * Returns hex encoding of address.\n     */\n    Address.prototype.toString = function () {\n        return '0x' + this.buf.toString('hex');\n    };\n    /**\n     * Returns Buffer representation of address.\n     */\n    Address.prototype.toBuffer = function () {\n        return Buffer.from(this.buf);\n    };\n    return Address;\n}());\nexports.Address = Address;\n//# sourceMappingURL=address.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGV0aGVyZXVtanMvY29tbW9uL25vZGVfbW9kdWxlcy9ldGhlcmV1bWpzLXV0aWwvZGlzdC5icm93c2VyL2FkZHJlc3MuanMuanMiLCJtYXBwaW5ncyI6IjtBQUFhO0FBQ2I7QUFDQSw2Q0FBNkM7QUFDN0M7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsZUFBZTtBQUNmLCtCQUErQixtQkFBTyxDQUFDLHFEQUFRO0FBQy9DLGtCQUFrQixtQkFBTyxDQUFDLDZHQUFhO0FBQ3ZDLGNBQWMsbUJBQU8sQ0FBQyxxR0FBUztBQUMvQixnQkFBZ0IsbUJBQU8sQ0FBQyx5R0FBVztBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4QkFBOEIsTUFBTTtBQUNwQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOEJBQThCLE1BQU07QUFDcEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzRkFBc0YsTUFBTTtBQUM1RjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOEJBQThCLE1BQU07QUFDcEMsOEJBQThCLE1BQU07QUFDcEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLE1BQU07QUFDckI7QUFDQTtBQUNBLENBQUM7QUFDRCxlQUFlO0FBQ2YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BldGhlcmV1bWpzL2NvbW1vbi9ub2RlX21vZHVsZXMvZXRoZXJldW1qcy11dGlsL2Rpc3QuYnJvd3Nlci9hZGRyZXNzLmpzP2NmZWMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19pbXBvcnREZWZhdWx0ID0gKHRoaXMgJiYgdGhpcy5fX2ltcG9ydERlZmF1bHQpIHx8IGZ1bmN0aW9uIChtb2QpIHtcbiAgICByZXR1cm4gKG1vZCAmJiBtb2QuX19lc01vZHVsZSkgPyBtb2QgOiB7IFwiZGVmYXVsdFwiOiBtb2QgfTtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkFkZHJlc3MgPSB2b2lkIDA7XG52YXIgYXNzZXJ0XzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZShcImFzc2VydFwiKSk7XG52YXIgZXh0ZXJuYWxzXzEgPSByZXF1aXJlKFwiLi9leHRlcm5hbHNcIik7XG52YXIgYnl0ZXNfMSA9IHJlcXVpcmUoXCIuL2J5dGVzXCIpO1xudmFyIGFjY291bnRfMSA9IHJlcXVpcmUoXCIuL2FjY291bnRcIik7XG52YXIgQWRkcmVzcyA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBBZGRyZXNzKGJ1Zikge1xuICAgICAgICAoMCwgYXNzZXJ0XzEuZGVmYXVsdCkoYnVmLmxlbmd0aCA9PT0gMjAsICdJbnZhbGlkIGFkZHJlc3MgbGVuZ3RoJyk7XG4gICAgICAgIHRoaXMuYnVmID0gYnVmO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBSZXR1cm5zIHRoZSB6ZXJvIGFkZHJlc3MuXG4gICAgICovXG4gICAgQWRkcmVzcy56ZXJvID0gZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gbmV3IEFkZHJlc3MoKDAsIGJ5dGVzXzEuemVyb3MpKDIwKSk7XG4gICAgfTtcbiAgICAvKipcbiAgICAgKiBSZXR1cm5zIGFuIEFkZHJlc3Mgb2JqZWN0IGZyb20gYSBoZXgtZW5jb2RlZCBzdHJpbmcuXG4gICAgICogQHBhcmFtIHN0ciAtIEhleC1lbmNvZGVkIGFkZHJlc3NcbiAgICAgKi9cbiAgICBBZGRyZXNzLmZyb21TdHJpbmcgPSBmdW5jdGlvbiAoc3RyKSB7XG4gICAgICAgICgwLCBhc3NlcnRfMS5kZWZhdWx0KSgoMCwgYWNjb3VudF8xLmlzVmFsaWRBZGRyZXNzKShzdHIpLCAnSW52YWxpZCBhZGRyZXNzJyk7XG4gICAgICAgIHJldHVybiBuZXcgQWRkcmVzcygoMCwgYnl0ZXNfMS50b0J1ZmZlcikoc3RyKSk7XG4gICAgfTtcbiAgICAvKipcbiAgICAgKiBSZXR1cm5zIGFuIGFkZHJlc3MgZm9yIGEgZ2l2ZW4gcHVibGljIGtleS5cbiAgICAgKiBAcGFyYW0gcHViS2V5IFRoZSB0d28gcG9pbnRzIG9mIGFuIHVuY29tcHJlc3NlZCBrZXlcbiAgICAgKi9cbiAgICBBZGRyZXNzLmZyb21QdWJsaWNLZXkgPSBmdW5jdGlvbiAocHViS2V5KSB7XG4gICAgICAgICgwLCBhc3NlcnRfMS5kZWZhdWx0KShCdWZmZXIuaXNCdWZmZXIocHViS2V5KSwgJ1B1YmxpYyBrZXkgc2hvdWxkIGJlIEJ1ZmZlcicpO1xuICAgICAgICB2YXIgYnVmID0gKDAsIGFjY291bnRfMS5wdWJUb0FkZHJlc3MpKHB1YktleSk7XG4gICAgICAgIHJldHVybiBuZXcgQWRkcmVzcyhidWYpO1xuICAgIH07XG4gICAgLyoqXG4gICAgICogUmV0dXJucyBhbiBhZGRyZXNzIGZvciBhIGdpdmVuIHByaXZhdGUga2V5LlxuICAgICAqIEBwYXJhbSBwcml2YXRlS2V5IEEgcHJpdmF0ZSBrZXkgbXVzdCBiZSAyNTYgYml0cyB3aWRlXG4gICAgICovXG4gICAgQWRkcmVzcy5mcm9tUHJpdmF0ZUtleSA9IGZ1bmN0aW9uIChwcml2YXRlS2V5KSB7XG4gICAgICAgICgwLCBhc3NlcnRfMS5kZWZhdWx0KShCdWZmZXIuaXNCdWZmZXIocHJpdmF0ZUtleSksICdQcml2YXRlIGtleSBzaG91bGQgYmUgQnVmZmVyJyk7XG4gICAgICAgIHZhciBidWYgPSAoMCwgYWNjb3VudF8xLnByaXZhdGVUb0FkZHJlc3MpKHByaXZhdGVLZXkpO1xuICAgICAgICByZXR1cm4gbmV3IEFkZHJlc3MoYnVmKTtcbiAgICB9O1xuICAgIC8qKlxuICAgICAqIEdlbmVyYXRlcyBhbiBhZGRyZXNzIGZvciBhIG5ld2x5IGNyZWF0ZWQgY29udHJhY3QuXG4gICAgICogQHBhcmFtIGZyb20gVGhlIGFkZHJlc3Mgd2hpY2ggaXMgY3JlYXRpbmcgdGhpcyBuZXcgYWRkcmVzc1xuICAgICAqIEBwYXJhbSBub25jZSBUaGUgbm9uY2Ugb2YgdGhlIGZyb20gYWNjb3VudFxuICAgICAqL1xuICAgIEFkZHJlc3MuZ2VuZXJhdGUgPSBmdW5jdGlvbiAoZnJvbSwgbm9uY2UpIHtcbiAgICAgICAgKDAsIGFzc2VydF8xLmRlZmF1bHQpKGV4dGVybmFsc18xLkJOLmlzQk4obm9uY2UpKTtcbiAgICAgICAgcmV0dXJuIG5ldyBBZGRyZXNzKCgwLCBhY2NvdW50XzEuZ2VuZXJhdGVBZGRyZXNzKShmcm9tLmJ1Ziwgbm9uY2UudG9BcnJheUxpa2UoQnVmZmVyKSkpO1xuICAgIH07XG4gICAgLyoqXG4gICAgICogR2VuZXJhdGVzIGFuIGFkZHJlc3MgZm9yIGEgY29udHJhY3QgY3JlYXRlZCB1c2luZyBDUkVBVEUyLlxuICAgICAqIEBwYXJhbSBmcm9tIFRoZSBhZGRyZXNzIHdoaWNoIGlzIGNyZWF0aW5nIHRoaXMgbmV3IGFkZHJlc3NcbiAgICAgKiBAcGFyYW0gc2FsdCBBIHNhbHRcbiAgICAgKiBAcGFyYW0gaW5pdENvZGUgVGhlIGluaXQgY29kZSBvZiB0aGUgY29udHJhY3QgYmVpbmcgY3JlYXRlZFxuICAgICAqL1xuICAgIEFkZHJlc3MuZ2VuZXJhdGUyID0gZnVuY3Rpb24gKGZyb20sIHNhbHQsIGluaXRDb2RlKSB7XG4gICAgICAgICgwLCBhc3NlcnRfMS5kZWZhdWx0KShCdWZmZXIuaXNCdWZmZXIoc2FsdCkpO1xuICAgICAgICAoMCwgYXNzZXJ0XzEuZGVmYXVsdCkoQnVmZmVyLmlzQnVmZmVyKGluaXRDb2RlKSk7XG4gICAgICAgIHJldHVybiBuZXcgQWRkcmVzcygoMCwgYWNjb3VudF8xLmdlbmVyYXRlQWRkcmVzczIpKGZyb20uYnVmLCBzYWx0LCBpbml0Q29kZSkpO1xuICAgIH07XG4gICAgLyoqXG4gICAgICogSXMgYWRkcmVzcyBlcXVhbCB0byBhbm90aGVyLlxuICAgICAqL1xuICAgIEFkZHJlc3MucHJvdG90eXBlLmVxdWFscyA9IGZ1bmN0aW9uIChhZGRyZXNzKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmJ1Zi5lcXVhbHMoYWRkcmVzcy5idWYpO1xuICAgIH07XG4gICAgLyoqXG4gICAgICogSXMgYWRkcmVzcyB6ZXJvLlxuICAgICAqL1xuICAgIEFkZHJlc3MucHJvdG90eXBlLmlzWmVybyA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZXF1YWxzKEFkZHJlc3MuemVybygpKTtcbiAgICB9O1xuICAgIC8qKlxuICAgICAqIFRydWUgaWYgYWRkcmVzcyBpcyBpbiB0aGUgYWRkcmVzcyByYW5nZSBkZWZpbmVkXG4gICAgICogYnkgRUlQLTEzNTJcbiAgICAgKi9cbiAgICBBZGRyZXNzLnByb3RvdHlwZS5pc1ByZWNvbXBpbGVPclN5c3RlbUFkZHJlc3MgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciBhZGRyZXNzQk4gPSBuZXcgZXh0ZXJuYWxzXzEuQk4odGhpcy5idWYpO1xuICAgICAgICB2YXIgcmFuZ2VNaW4gPSBuZXcgZXh0ZXJuYWxzXzEuQk4oMCk7XG4gICAgICAgIHZhciByYW5nZU1heCA9IG5ldyBleHRlcm5hbHNfMS5CTignZmZmZicsICdoZXgnKTtcbiAgICAgICAgcmV0dXJuIGFkZHJlc3NCTi5ndGUocmFuZ2VNaW4pICYmIGFkZHJlc3NCTi5sdGUocmFuZ2VNYXgpO1xuICAgIH07XG4gICAgLyoqXG4gICAgICogUmV0dXJucyBoZXggZW5jb2Rpbmcgb2YgYWRkcmVzcy5cbiAgICAgKi9cbiAgICBBZGRyZXNzLnByb3RvdHlwZS50b1N0cmluZyA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuICcweCcgKyB0aGlzLmJ1Zi50b1N0cmluZygnaGV4Jyk7XG4gICAgfTtcbiAgICAvKipcbiAgICAgKiBSZXR1cm5zIEJ1ZmZlciByZXByZXNlbnRhdGlvbiBvZiBhZGRyZXNzLlxuICAgICAqL1xuICAgIEFkZHJlc3MucHJvdG90eXBlLnRvQnVmZmVyID0gZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gQnVmZmVyLmZyb20odGhpcy5idWYpO1xuICAgIH07XG4gICAgcmV0dXJuIEFkZHJlc3M7XG59KCkpO1xuZXhwb3J0cy5BZGRyZXNzID0gQWRkcmVzcztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFkZHJlc3MuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@ethereumjs/common/node_modules/ethereumjs-util/dist.browser/address.js\n");

/***/ }),

/***/ "./node_modules/@ethereumjs/common/node_modules/ethereumjs-util/dist.browser/bytes.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@ethereumjs/common/node_modules/ethereumjs-util/dist.browser/bytes.js ***!
  \********************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"./node_modules/buffer/index.js\")[\"Buffer\"];\n\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.bufArrToArr = exports.arrToBufArr = exports.validateNoLeadingZeroes = exports.baToJSON = exports.toUtf8 = exports.addHexPrefix = exports.toUnsigned = exports.fromSigned = exports.bufferToHex = exports.bufferToInt = exports.toBuffer = exports.unpadHexString = exports.unpadArray = exports.unpadBuffer = exports.setLengthRight = exports.setLengthLeft = exports.zeros = exports.intToBuffer = exports.intToHex = void 0;\nvar externals_1 = __webpack_require__(/*! ./externals */ \"./node_modules/@ethereumjs/common/node_modules/ethereumjs-util/dist.browser/externals.js\");\nvar internal_1 = __webpack_require__(/*! ./internal */ \"./node_modules/@ethereumjs/common/node_modules/ethereumjs-util/dist.browser/internal.js\");\nvar helpers_1 = __webpack_require__(/*! ./helpers */ \"./node_modules/@ethereumjs/common/node_modules/ethereumjs-util/dist.browser/helpers.js\");\n/**\n * Converts a `Number` into a hex `String`\n * @param {Number} i\n * @return {String}\n */\nvar intToHex = function (i) {\n    if (!Number.isSafeInteger(i) || i < 0) {\n        throw new Error(\"Received an invalid integer type: \".concat(i));\n    }\n    return \"0x\".concat(i.toString(16));\n};\nexports.intToHex = intToHex;\n/**\n * Converts an `Number` to a `Buffer`\n * @param {Number} i\n * @return {Buffer}\n */\nvar intToBuffer = function (i) {\n    var hex = (0, exports.intToHex)(i);\n    return Buffer.from((0, internal_1.padToEven)(hex.slice(2)), 'hex');\n};\nexports.intToBuffer = intToBuffer;\n/**\n * Returns a buffer filled with 0s.\n * @param bytes the number of bytes the buffer should be\n */\nvar zeros = function (bytes) {\n    return Buffer.allocUnsafe(bytes).fill(0);\n};\nexports.zeros = zeros;\n/**\n * Pads a `Buffer` with zeros till it has `length` bytes.\n * Truncates the beginning or end of input if its length exceeds `length`.\n * @param msg the value to pad (Buffer)\n * @param length the number of bytes the output should be\n * @param right whether to start padding form the left or right\n * @return (Buffer)\n */\nvar setLength = function (msg, length, right) {\n    var buf = (0, exports.zeros)(length);\n    if (right) {\n        if (msg.length < length) {\n            msg.copy(buf);\n            return buf;\n        }\n        return msg.slice(0, length);\n    }\n    else {\n        if (msg.length < length) {\n            msg.copy(buf, length - msg.length);\n            return buf;\n        }\n        return msg.slice(-length);\n    }\n};\n/**\n * Left Pads a `Buffer` with leading zeros till it has `length` bytes.\n * Or it truncates the beginning if it exceeds.\n * @param msg the value to pad (Buffer)\n * @param length the number of bytes the output should be\n * @return (Buffer)\n */\nvar setLengthLeft = function (msg, length) {\n    (0, helpers_1.assertIsBuffer)(msg);\n    return setLength(msg, length, false);\n};\nexports.setLengthLeft = setLengthLeft;\n/**\n * Right Pads a `Buffer` with trailing zeros till it has `length` bytes.\n * it truncates the end if it exceeds.\n * @param msg the value to pad (Buffer)\n * @param length the number of bytes the output should be\n * @return (Buffer)\n */\nvar setLengthRight = function (msg, length) {\n    (0, helpers_1.assertIsBuffer)(msg);\n    return setLength(msg, length, true);\n};\nexports.setLengthRight = setLengthRight;\n/**\n * Trims leading zeros from a `Buffer`, `String` or `Number[]`.\n * @param a (Buffer|Array|String)\n * @return (Buffer|Array|String)\n */\nvar stripZeros = function (a) {\n    var first = a[0];\n    while (a.length > 0 && first.toString() === '0') {\n        a = a.slice(1);\n        first = a[0];\n    }\n    return a;\n};\n/**\n * Trims leading zeros from a `Buffer`.\n * @param a (Buffer)\n * @return (Buffer)\n */\nvar unpadBuffer = function (a) {\n    (0, helpers_1.assertIsBuffer)(a);\n    return stripZeros(a);\n};\nexports.unpadBuffer = unpadBuffer;\n/**\n * Trims leading zeros from an `Array` (of numbers).\n * @param a (number[])\n * @return (number[])\n */\nvar unpadArray = function (a) {\n    (0, helpers_1.assertIsArray)(a);\n    return stripZeros(a);\n};\nexports.unpadArray = unpadArray;\n/**\n * Trims leading zeros from a hex-prefixed `String`.\n * @param a (String)\n * @return (String)\n */\nvar unpadHexString = function (a) {\n    (0, helpers_1.assertIsHexString)(a);\n    a = (0, internal_1.stripHexPrefix)(a);\n    return stripZeros(a);\n};\nexports.unpadHexString = unpadHexString;\n/**\n * Attempts to turn a value into a `Buffer`.\n * Inputs supported: `Buffer`, `String` (hex-prefixed), `Number`, null/undefined, `BN` and other objects\n * with a `toArray()` or `toBuffer()` method.\n * @param v the value\n */\nvar toBuffer = function (v) {\n    if (v === null || v === undefined) {\n        return Buffer.allocUnsafe(0);\n    }\n    if (Buffer.isBuffer(v)) {\n        return Buffer.from(v);\n    }\n    if (Array.isArray(v) || v instanceof Uint8Array) {\n        return Buffer.from(v);\n    }\n    if (typeof v === 'string') {\n        if (!(0, internal_1.isHexString)(v)) {\n            throw new Error(\"Cannot convert string to buffer. toBuffer only supports 0x-prefixed hex strings and this string was given: \".concat(v));\n        }\n        return Buffer.from((0, internal_1.padToEven)((0, internal_1.stripHexPrefix)(v)), 'hex');\n    }\n    if (typeof v === 'number') {\n        return (0, exports.intToBuffer)(v);\n    }\n    if (externals_1.BN.isBN(v)) {\n        if (v.isNeg()) {\n            throw new Error(\"Cannot convert negative BN to buffer. Given: \".concat(v));\n        }\n        return v.toArrayLike(Buffer);\n    }\n    if (v.toArray) {\n        // converts a BN to a Buffer\n        return Buffer.from(v.toArray());\n    }\n    if (v.toBuffer) {\n        return Buffer.from(v.toBuffer());\n    }\n    throw new Error('invalid type');\n};\nexports.toBuffer = toBuffer;\n/**\n * Converts a `Buffer` to a `Number`.\n * @param buf `Buffer` object to convert\n * @throws If the input number exceeds 53 bits.\n */\nvar bufferToInt = function (buf) {\n    return new externals_1.BN((0, exports.toBuffer)(buf)).toNumber();\n};\nexports.bufferToInt = bufferToInt;\n/**\n * Converts a `Buffer` into a `0x`-prefixed hex `String`.\n * @param buf `Buffer` object to convert\n */\nvar bufferToHex = function (buf) {\n    buf = (0, exports.toBuffer)(buf);\n    return '0x' + buf.toString('hex');\n};\nexports.bufferToHex = bufferToHex;\n/**\n * Interprets a `Buffer` as a signed integer and returns a `BN`. Assumes 256-bit numbers.\n * @param num Signed integer value\n */\nvar fromSigned = function (num) {\n    return new externals_1.BN(num).fromTwos(256);\n};\nexports.fromSigned = fromSigned;\n/**\n * Converts a `BN` to an unsigned integer and returns it as a `Buffer`. Assumes 256-bit numbers.\n * @param num\n */\nvar toUnsigned = function (num) {\n    return Buffer.from(num.toTwos(256).toArray());\n};\nexports.toUnsigned = toUnsigned;\n/**\n * Adds \"0x\" to a given `String` if it does not already start with \"0x\".\n */\nvar addHexPrefix = function (str) {\n    if (typeof str !== 'string') {\n        return str;\n    }\n    return (0, internal_1.isHexPrefixed)(str) ? str : '0x' + str;\n};\nexports.addHexPrefix = addHexPrefix;\n/**\n * Returns the utf8 string representation from a hex string.\n *\n * Examples:\n *\n * Input 1: '657468657265756d000000000000000000000000000000000000000000000000'\n * Input 2: '657468657265756d'\n * Input 3: '000000000000000000000000000000000000000000000000657468657265756d'\n *\n * Output (all 3 input variants): 'ethereum'\n *\n * Note that this method is not intended to be used with hex strings\n * representing quantities in both big endian or little endian notation.\n *\n * @param string Hex string, should be `0x` prefixed\n * @return Utf8 string\n */\nvar toUtf8 = function (hex) {\n    var zerosRegexp = /^(00)+|(00)+$/g;\n    hex = (0, internal_1.stripHexPrefix)(hex);\n    if (hex.length % 2 !== 0) {\n        throw new Error('Invalid non-even hex string input for toUtf8() provided');\n    }\n    var bufferVal = Buffer.from(hex.replace(zerosRegexp, ''), 'hex');\n    return bufferVal.toString('utf8');\n};\nexports.toUtf8 = toUtf8;\n/**\n * Converts a `Buffer` or `Array` to JSON.\n * @param ba (Buffer|Array)\n * @return (Array|String|null)\n */\nvar baToJSON = function (ba) {\n    if (Buffer.isBuffer(ba)) {\n        return \"0x\".concat(ba.toString('hex'));\n    }\n    else if (ba instanceof Array) {\n        var array = [];\n        for (var i = 0; i < ba.length; i++) {\n            array.push((0, exports.baToJSON)(ba[i]));\n        }\n        return array;\n    }\n};\nexports.baToJSON = baToJSON;\n/**\n * Checks provided Buffers for leading zeroes and throws if found.\n *\n * Examples:\n *\n * Valid values: 0x1, 0x, 0x01, 0x1234\n * Invalid values: 0x0, 0x00, 0x001, 0x0001\n *\n * Note: This method is useful for validating that RLP encoded integers comply with the rule that all\n * integer values encoded to RLP must be in the most compact form and contain no leading zero bytes\n * @param values An object containing string keys and Buffer values\n * @throws if any provided value is found to have leading zero bytes\n */\nvar validateNoLeadingZeroes = function (values) {\n    var e_1, _a;\n    try {\n        for (var _b = __values(Object.entries(values)), _c = _b.next(); !_c.done; _c = _b.next()) {\n            var _d = __read(_c.value, 2), k = _d[0], v = _d[1];\n            if (v !== undefined && v.length > 0 && v[0] === 0) {\n                throw new Error(\"\".concat(k, \" cannot have leading zeroes, received: \").concat(v.toString('hex')));\n            }\n        }\n    }\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n    finally {\n        try {\n            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n        }\n        finally { if (e_1) throw e_1.error; }\n    }\n};\nexports.validateNoLeadingZeroes = validateNoLeadingZeroes;\nfunction arrToBufArr(arr) {\n    if (!Array.isArray(arr)) {\n        return Buffer.from(arr);\n    }\n    return arr.map(function (a) { return arrToBufArr(a); });\n}\nexports.arrToBufArr = arrToBufArr;\nfunction bufArrToArr(arr) {\n    if (!Array.isArray(arr)) {\n        return Uint8Array.from(arr !== null && arr !== void 0 ? arr : []);\n    }\n    return arr.map(function (a) { return bufArrToArr(a); });\n}\nexports.bufArrToArr = bufArrToArr;\n//# sourceMappingURL=bytes.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@ethereumjs/common/node_modules/ethereumjs-util/dist.browser/bytes.js\n");

/***/ }),

/***/ "./node_modules/@ethereumjs/common/node_modules/ethereumjs-util/dist.browser/constants.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/@ethereumjs/common/node_modules/ethereumjs-util/dist.browser/constants.js ***!
  \************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.KECCAK256_RLP = exports.KECCAK256_RLP_S = exports.KECCAK256_RLP_ARRAY = exports.KECCAK256_RLP_ARRAY_S = exports.KECCAK256_NULL = exports.KECCAK256_NULL_S = exports.TWO_POW256 = exports.MAX_INTEGER = exports.MAX_UINT64 = void 0;\nvar buffer_1 = __webpack_require__(/*! buffer */ \"./node_modules/buffer/index.js\");\nvar externals_1 = __webpack_require__(/*! ./externals */ \"./node_modules/@ethereumjs/common/node_modules/ethereumjs-util/dist.browser/externals.js\");\n/**\n * 2^64-1\n */\nexports.MAX_UINT64 = new externals_1.BN('ffffffffffffffff', 16);\n/**\n * The max integer that the evm can handle (2^256-1)\n */\nexports.MAX_INTEGER = new externals_1.BN('ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff', 16);\n/**\n * 2^256\n */\nexports.TWO_POW256 = new externals_1.BN('10000000000000000000000000000000000000000000000000000000000000000', 16);\n/**\n * Keccak-256 hash of null\n */\nexports.KECCAK256_NULL_S = 'c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470';\n/**\n * Keccak-256 hash of null\n */\nexports.KECCAK256_NULL = buffer_1.Buffer.from(exports.KECCAK256_NULL_S, 'hex');\n/**\n * Keccak-256 of an RLP of an empty array\n */\nexports.KECCAK256_RLP_ARRAY_S = '1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347';\n/**\n * Keccak-256 of an RLP of an empty array\n */\nexports.KECCAK256_RLP_ARRAY = buffer_1.Buffer.from(exports.KECCAK256_RLP_ARRAY_S, 'hex');\n/**\n * Keccak-256 hash of the RLP of null\n */\nexports.KECCAK256_RLP_S = '56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421';\n/**\n * Keccak-256 hash of the RLP of null\n */\nexports.KECCAK256_RLP = buffer_1.Buffer.from(exports.KECCAK256_RLP_S, 'hex');\n//# sourceMappingURL=constants.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGV0aGVyZXVtanMvY29tbW9uL25vZGVfbW9kdWxlcy9ldGhlcmV1bWpzLXV0aWwvZGlzdC5icm93c2VyL2NvbnN0YW50cy5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxxQkFBcUIsR0FBRyx1QkFBdUIsR0FBRywyQkFBMkIsR0FBRyw2QkFBNkIsR0FBRyxzQkFBc0IsR0FBRyx3QkFBd0IsR0FBRyxrQkFBa0IsR0FBRyxtQkFBbUIsR0FBRyxrQkFBa0I7QUFDak8sZUFBZSxtQkFBTyxDQUFDLDhDQUFRO0FBQy9CLGtCQUFrQixtQkFBTyxDQUFDLDZHQUFhO0FBQ3ZDO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQjtBQUNsQjtBQUNBO0FBQ0E7QUFDQSxtQkFBbUI7QUFDbkI7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QjtBQUN4QjtBQUNBO0FBQ0E7QUFDQSxzQkFBc0I7QUFDdEI7QUFDQTtBQUNBO0FBQ0EsNkJBQTZCO0FBQzdCO0FBQ0E7QUFDQTtBQUNBLDJCQUEyQjtBQUMzQjtBQUNBO0FBQ0E7QUFDQSx1QkFBdUI7QUFDdkI7QUFDQTtBQUNBO0FBQ0EscUJBQXFCO0FBQ3JCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AZXRoZXJldW1qcy9jb21tb24vbm9kZV9tb2R1bGVzL2V0aGVyZXVtanMtdXRpbC9kaXN0LmJyb3dzZXIvY29uc3RhbnRzLmpzP2FlZGMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLktFQ0NBSzI1Nl9STFAgPSBleHBvcnRzLktFQ0NBSzI1Nl9STFBfUyA9IGV4cG9ydHMuS0VDQ0FLMjU2X1JMUF9BUlJBWSA9IGV4cG9ydHMuS0VDQ0FLMjU2X1JMUF9BUlJBWV9TID0gZXhwb3J0cy5LRUNDQUsyNTZfTlVMTCA9IGV4cG9ydHMuS0VDQ0FLMjU2X05VTExfUyA9IGV4cG9ydHMuVFdPX1BPVzI1NiA9IGV4cG9ydHMuTUFYX0lOVEVHRVIgPSBleHBvcnRzLk1BWF9VSU5UNjQgPSB2b2lkIDA7XG52YXIgYnVmZmVyXzEgPSByZXF1aXJlKFwiYnVmZmVyXCIpO1xudmFyIGV4dGVybmFsc18xID0gcmVxdWlyZShcIi4vZXh0ZXJuYWxzXCIpO1xuLyoqXG4gKiAyXjY0LTFcbiAqL1xuZXhwb3J0cy5NQVhfVUlOVDY0ID0gbmV3IGV4dGVybmFsc18xLkJOKCdmZmZmZmZmZmZmZmZmZmZmJywgMTYpO1xuLyoqXG4gKiBUaGUgbWF4IGludGVnZXIgdGhhdCB0aGUgZXZtIGNhbiBoYW5kbGUgKDJeMjU2LTEpXG4gKi9cbmV4cG9ydHMuTUFYX0lOVEVHRVIgPSBuZXcgZXh0ZXJuYWxzXzEuQk4oJ2ZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmYnLCAxNik7XG4vKipcbiAqIDJeMjU2XG4gKi9cbmV4cG9ydHMuVFdPX1BPVzI1NiA9IG5ldyBleHRlcm5hbHNfMS5CTignMTAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAnLCAxNik7XG4vKipcbiAqIEtlY2Nhay0yNTYgaGFzaCBvZiBudWxsXG4gKi9cbmV4cG9ydHMuS0VDQ0FLMjU2X05VTExfUyA9ICdjNWQyNDYwMTg2ZjcyMzNjOTI3ZTdkYjJkY2M3MDNjMGU1MDBiNjUzY2E4MjI3M2I3YmZhZDgwNDVkODVhNDcwJztcbi8qKlxuICogS2VjY2FrLTI1NiBoYXNoIG9mIG51bGxcbiAqL1xuZXhwb3J0cy5LRUNDQUsyNTZfTlVMTCA9IGJ1ZmZlcl8xLkJ1ZmZlci5mcm9tKGV4cG9ydHMuS0VDQ0FLMjU2X05VTExfUywgJ2hleCcpO1xuLyoqXG4gKiBLZWNjYWstMjU2IG9mIGFuIFJMUCBvZiBhbiBlbXB0eSBhcnJheVxuICovXG5leHBvcnRzLktFQ0NBSzI1Nl9STFBfQVJSQVlfUyA9ICcxZGNjNGRlOGRlYzc1ZDdhYWI4NWI1NjdiNmNjZDQxYWQzMTI0NTFiOTQ4YTc0MTNmMGExNDJmZDQwZDQ5MzQ3Jztcbi8qKlxuICogS2VjY2FrLTI1NiBvZiBhbiBSTFAgb2YgYW4gZW1wdHkgYXJyYXlcbiAqL1xuZXhwb3J0cy5LRUNDQUsyNTZfUkxQX0FSUkFZID0gYnVmZmVyXzEuQnVmZmVyLmZyb20oZXhwb3J0cy5LRUNDQUsyNTZfUkxQX0FSUkFZX1MsICdoZXgnKTtcbi8qKlxuICogS2VjY2FrLTI1NiBoYXNoIG9mIHRoZSBSTFAgb2YgbnVsbFxuICovXG5leHBvcnRzLktFQ0NBSzI1Nl9STFBfUyA9ICc1NmU4MWYxNzFiY2M1NWE2ZmY4MzQ1ZTY5MmMwZjg2ZTViNDhlMDFiOTk2Y2FkYzAwMTYyMmZiNWUzNjNiNDIxJztcbi8qKlxuICogS2VjY2FrLTI1NiBoYXNoIG9mIHRoZSBSTFAgb2YgbnVsbFxuICovXG5leHBvcnRzLktFQ0NBSzI1Nl9STFAgPSBidWZmZXJfMS5CdWZmZXIuZnJvbShleHBvcnRzLktFQ0NBSzI1Nl9STFBfUywgJ2hleCcpO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y29uc3RhbnRzLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@ethereumjs/common/node_modules/ethereumjs-util/dist.browser/constants.js\n");

/***/ }),

/***/ "./node_modules/@ethereumjs/common/node_modules/ethereumjs-util/dist.browser/externals.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/@ethereumjs/common/node_modules/ethereumjs-util/dist.browser/externals.js ***!
  \************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\n/**\n * Re-exports commonly used modules:\n * * Exports [`BN`](https://github.com/indutny/bn.js), [`rlp`](https://github.com/ethereumjs/rlp).\n * @packageDocumentation\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.rlp = exports.BN = void 0;\nvar bn_js_1 = __importDefault(__webpack_require__(/*! bn.js */ \"./node_modules/@ethereumjs/common/node_modules/bn.js/lib/bn.js\"));\nexports.BN = bn_js_1.default;\nvar rlp = __importStar(__webpack_require__(/*! rlp */ \"./node_modules/rlp/dist.browser/index.js\"));\nexports.rlp = rlp;\n//# sourceMappingURL=externals.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGV0aGVyZXVtanMvY29tbW9uL25vZGVfbW9kdWxlcy9ldGhlcmV1bWpzLXV0aWwvZGlzdC5icm93c2VyL2V4dGVybmFscy5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsb0NBQW9DO0FBQ25EO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBLDBDQUEwQyw0QkFBNEI7QUFDdEUsQ0FBQztBQUNEO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2Q0FBNkM7QUFDN0M7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsV0FBVyxHQUFHLFVBQVU7QUFDeEIsOEJBQThCLG1CQUFPLENBQUMsNkVBQU87QUFDN0MsVUFBVTtBQUNWLHVCQUF1QixtQkFBTyxDQUFDLHFEQUFLO0FBQ3BDLFdBQVc7QUFDWCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGV0aGVyZXVtanMvY29tbW9uL25vZGVfbW9kdWxlcy9ldGhlcmV1bWpzLXV0aWwvZGlzdC5icm93c2VyL2V4dGVybmFscy5qcz8zNjM4Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLyoqXG4gKiBSZS1leHBvcnRzIGNvbW1vbmx5IHVzZWQgbW9kdWxlczpcbiAqICogRXhwb3J0cyBbYEJOYF0oaHR0cHM6Ly9naXRodWIuY29tL2luZHV0bnkvYm4uanMpLCBbYHJscGBdKGh0dHBzOi8vZ2l0aHViLmNvbS9ldGhlcmV1bWpzL3JscCkuXG4gKiBAcGFja2FnZURvY3VtZW50YXRpb25cbiAqL1xudmFyIF9fY3JlYXRlQmluZGluZyA9ICh0aGlzICYmIHRoaXMuX19jcmVhdGVCaW5kaW5nKSB8fCAoT2JqZWN0LmNyZWF0ZSA/IChmdW5jdGlvbihvLCBtLCBrLCBrMikge1xuICAgIGlmIChrMiA9PT0gdW5kZWZpbmVkKSBrMiA9IGs7XG4gICAgdmFyIGRlc2MgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKG0sIGspO1xuICAgIGlmICghZGVzYyB8fCAoXCJnZXRcIiBpbiBkZXNjID8gIW0uX19lc01vZHVsZSA6IGRlc2Mud3JpdGFibGUgfHwgZGVzYy5jb25maWd1cmFibGUpKSB7XG4gICAgICBkZXNjID0geyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uKCkgeyByZXR1cm4gbVtrXTsgfSB9O1xuICAgIH1cbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkobywgazIsIGRlc2MpO1xufSkgOiAoZnVuY3Rpb24obywgbSwgaywgazIpIHtcbiAgICBpZiAoazIgPT09IHVuZGVmaW5lZCkgazIgPSBrO1xuICAgIG9bazJdID0gbVtrXTtcbn0pKTtcbnZhciBfX3NldE1vZHVsZURlZmF1bHQgPSAodGhpcyAmJiB0aGlzLl9fc2V0TW9kdWxlRGVmYXVsdCkgfHwgKE9iamVjdC5jcmVhdGUgPyAoZnVuY3Rpb24obywgdikge1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvLCBcImRlZmF1bHRcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCB2YWx1ZTogdiB9KTtcbn0pIDogZnVuY3Rpb24obywgdikge1xuICAgIG9bXCJkZWZhdWx0XCJdID0gdjtcbn0pO1xudmFyIF9faW1wb3J0U3RhciA9ICh0aGlzICYmIHRoaXMuX19pbXBvcnRTdGFyKSB8fCBmdW5jdGlvbiAobW9kKSB7XG4gICAgaWYgKG1vZCAmJiBtb2QuX19lc01vZHVsZSkgcmV0dXJuIG1vZDtcbiAgICB2YXIgcmVzdWx0ID0ge307XG4gICAgaWYgKG1vZCAhPSBudWxsKSBmb3IgKHZhciBrIGluIG1vZCkgaWYgKGsgIT09IFwiZGVmYXVsdFwiICYmIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChtb2QsIGspKSBfX2NyZWF0ZUJpbmRpbmcocmVzdWx0LCBtb2QsIGspO1xuICAgIF9fc2V0TW9kdWxlRGVmYXVsdChyZXN1bHQsIG1vZCk7XG4gICAgcmV0dXJuIHJlc3VsdDtcbn07XG52YXIgX19pbXBvcnREZWZhdWx0ID0gKHRoaXMgJiYgdGhpcy5fX2ltcG9ydERlZmF1bHQpIHx8IGZ1bmN0aW9uIChtb2QpIHtcbiAgICByZXR1cm4gKG1vZCAmJiBtb2QuX19lc01vZHVsZSkgPyBtb2QgOiB7IFwiZGVmYXVsdFwiOiBtb2QgfTtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLnJscCA9IGV4cG9ydHMuQk4gPSB2b2lkIDA7XG52YXIgYm5fanNfMSA9IF9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwiYm4uanNcIikpO1xuZXhwb3J0cy5CTiA9IGJuX2pzXzEuZGVmYXVsdDtcbnZhciBybHAgPSBfX2ltcG9ydFN0YXIocmVxdWlyZShcInJscFwiKSk7XG5leHBvcnRzLnJscCA9IHJscDtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWV4dGVybmFscy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@ethereumjs/common/node_modules/ethereumjs-util/dist.browser/externals.js\n");

/***/ }),

/***/ "./node_modules/@ethereumjs/common/node_modules/ethereumjs-util/dist.browser/hash.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@ethereumjs/common/node_modules/ethereumjs-util/dist.browser/hash.js ***!
  \*******************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"./node_modules/buffer/index.js\")[\"Buffer\"];\n\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.rlphash = exports.ripemd160FromArray = exports.ripemd160FromString = exports.ripemd160 = exports.sha256FromArray = exports.sha256FromString = exports.sha256 = exports.keccakFromArray = exports.keccakFromHexString = exports.keccakFromString = exports.keccak256 = exports.keccak = void 0;\nvar keccak_1 = __webpack_require__(/*! ethereum-cryptography/keccak */ \"./node_modules/ethereum-cryptography/keccak.js\");\nvar createHash = __webpack_require__(/*! create-hash */ \"./node_modules/create-hash/browser.js\");\nvar externals_1 = __webpack_require__(/*! ./externals */ \"./node_modules/@ethereumjs/common/node_modules/ethereumjs-util/dist.browser/externals.js\");\nvar bytes_1 = __webpack_require__(/*! ./bytes */ \"./node_modules/@ethereumjs/common/node_modules/ethereumjs-util/dist.browser/bytes.js\");\nvar helpers_1 = __webpack_require__(/*! ./helpers */ \"./node_modules/@ethereumjs/common/node_modules/ethereumjs-util/dist.browser/helpers.js\");\n/**\n * Creates Keccak hash of a Buffer input\n * @param a The input data (Buffer)\n * @param bits (number = 256) The Keccak width\n */\nvar keccak = function (a, bits) {\n    if (bits === void 0) { bits = 256; }\n    (0, helpers_1.assertIsBuffer)(a);\n    switch (bits) {\n        case 224: {\n            return (0, keccak_1.keccak224)(a);\n        }\n        case 256: {\n            return (0, keccak_1.keccak256)(a);\n        }\n        case 384: {\n            return (0, keccak_1.keccak384)(a);\n        }\n        case 512: {\n            return (0, keccak_1.keccak512)(a);\n        }\n        default: {\n            throw new Error(\"Invald algorithm: keccak\".concat(bits));\n        }\n    }\n};\nexports.keccak = keccak;\n/**\n * Creates Keccak-256 hash of the input, alias for keccak(a, 256).\n * @param a The input data (Buffer)\n */\nvar keccak256 = function (a) {\n    return (0, exports.keccak)(a);\n};\nexports.keccak256 = keccak256;\n/**\n * Creates Keccak hash of a utf-8 string input\n * @param a The input data (String)\n * @param bits (number = 256) The Keccak width\n */\nvar keccakFromString = function (a, bits) {\n    if (bits === void 0) { bits = 256; }\n    (0, helpers_1.assertIsString)(a);\n    var buf = Buffer.from(a, 'utf8');\n    return (0, exports.keccak)(buf, bits);\n};\nexports.keccakFromString = keccakFromString;\n/**\n * Creates Keccak hash of an 0x-prefixed string input\n * @param a The input data (String)\n * @param bits (number = 256) The Keccak width\n */\nvar keccakFromHexString = function (a, bits) {\n    if (bits === void 0) { bits = 256; }\n    (0, helpers_1.assertIsHexString)(a);\n    return (0, exports.keccak)((0, bytes_1.toBuffer)(a), bits);\n};\nexports.keccakFromHexString = keccakFromHexString;\n/**\n * Creates Keccak hash of a number array input\n * @param a The input data (number[])\n * @param bits (number = 256) The Keccak width\n */\nvar keccakFromArray = function (a, bits) {\n    if (bits === void 0) { bits = 256; }\n    (0, helpers_1.assertIsArray)(a);\n    return (0, exports.keccak)((0, bytes_1.toBuffer)(a), bits);\n};\nexports.keccakFromArray = keccakFromArray;\n/**\n * Creates SHA256 hash of an input.\n * @param  a The input data (Buffer|Array|String)\n */\nvar _sha256 = function (a) {\n    a = (0, bytes_1.toBuffer)(a);\n    return createHash('sha256').update(a).digest();\n};\n/**\n * Creates SHA256 hash of a Buffer input.\n * @param a The input data (Buffer)\n */\nvar sha256 = function (a) {\n    (0, helpers_1.assertIsBuffer)(a);\n    return _sha256(a);\n};\nexports.sha256 = sha256;\n/**\n * Creates SHA256 hash of a string input.\n * @param a The input data (string)\n */\nvar sha256FromString = function (a) {\n    (0, helpers_1.assertIsString)(a);\n    return _sha256(a);\n};\nexports.sha256FromString = sha256FromString;\n/**\n * Creates SHA256 hash of a number[] input.\n * @param a The input data (number[])\n */\nvar sha256FromArray = function (a) {\n    (0, helpers_1.assertIsArray)(a);\n    return _sha256(a);\n};\nexports.sha256FromArray = sha256FromArray;\n/**\n * Creates RIPEMD160 hash of the input.\n * @param a The input data (Buffer|Array|String|Number)\n * @param padded Whether it should be padded to 256 bits or not\n */\nvar _ripemd160 = function (a, padded) {\n    a = (0, bytes_1.toBuffer)(a);\n    var hash = createHash('rmd160').update(a).digest();\n    if (padded === true) {\n        return (0, bytes_1.setLengthLeft)(hash, 32);\n    }\n    else {\n        return hash;\n    }\n};\n/**\n * Creates RIPEMD160 hash of a Buffer input.\n * @param a The input data (Buffer)\n * @param padded Whether it should be padded to 256 bits or not\n */\nvar ripemd160 = function (a, padded) {\n    (0, helpers_1.assertIsBuffer)(a);\n    return _ripemd160(a, padded);\n};\nexports.ripemd160 = ripemd160;\n/**\n * Creates RIPEMD160 hash of a string input.\n * @param a The input data (String)\n * @param padded Whether it should be padded to 256 bits or not\n */\nvar ripemd160FromString = function (a, padded) {\n    (0, helpers_1.assertIsString)(a);\n    return _ripemd160(a, padded);\n};\nexports.ripemd160FromString = ripemd160FromString;\n/**\n * Creates RIPEMD160 hash of a number[] input.\n * @param a The input data (number[])\n * @param padded Whether it should be padded to 256 bits or not\n */\nvar ripemd160FromArray = function (a, padded) {\n    (0, helpers_1.assertIsArray)(a);\n    return _ripemd160(a, padded);\n};\nexports.ripemd160FromArray = ripemd160FromArray;\n/**\n * Creates SHA-3 hash of the RLP encoded version of the input.\n * @param a The input data\n */\nvar rlphash = function (a) {\n    return (0, exports.keccak)(externals_1.rlp.encode(a));\n};\nexports.rlphash = rlphash;\n//# sourceMappingURL=hash.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@ethereumjs/common/node_modules/ethereumjs-util/dist.browser/hash.js\n");

/***/ }),

/***/ "./node_modules/@ethereumjs/common/node_modules/ethereumjs-util/dist.browser/helpers.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@ethereumjs/common/node_modules/ethereumjs-util/dist.browser/helpers.js ***!
  \**********************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"./node_modules/buffer/index.js\")[\"Buffer\"];\n\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.assertIsString = exports.assertIsArray = exports.assertIsBuffer = exports.assertIsHexString = void 0;\nvar internal_1 = __webpack_require__(/*! ./internal */ \"./node_modules/@ethereumjs/common/node_modules/ethereumjs-util/dist.browser/internal.js\");\n/**\n * Throws if a string is not hex prefixed\n * @param {string} input string to check hex prefix of\n */\nvar assertIsHexString = function (input) {\n    if (!(0, internal_1.isHexString)(input)) {\n        var msg = \"This method only supports 0x-prefixed hex strings but input was: \".concat(input);\n        throw new Error(msg);\n    }\n};\nexports.assertIsHexString = assertIsHexString;\n/**\n * Throws if input is not a buffer\n * @param {Buffer} input value to check\n */\nvar assertIsBuffer = function (input) {\n    if (!Buffer.isBuffer(input)) {\n        var msg = \"This method only supports Buffer but input was: \".concat(input);\n        throw new Error(msg);\n    }\n};\nexports.assertIsBuffer = assertIsBuffer;\n/**\n * Throws if input is not an array\n * @param {number[]} input value to check\n */\nvar assertIsArray = function (input) {\n    if (!Array.isArray(input)) {\n        var msg = \"This method only supports number arrays but input was: \".concat(input);\n        throw new Error(msg);\n    }\n};\nexports.assertIsArray = assertIsArray;\n/**\n * Throws if input is not a string\n * @param {string} input value to check\n */\nvar assertIsString = function (input) {\n    if (typeof input !== 'string') {\n        var msg = \"This method only supports strings but input was: \".concat(input);\n        throw new Error(msg);\n    }\n};\nexports.assertIsString = assertIsString;\n//# sourceMappingURL=helpers.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGV0aGVyZXVtanMvY29tbW9uL25vZGVfbW9kdWxlcy9ldGhlcmV1bWpzLXV0aWwvZGlzdC5icm93c2VyL2hlbHBlcnMuanMuanMiLCJtYXBwaW5ncyI6IjtBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHNCQUFzQixHQUFHLHFCQUFxQixHQUFHLHNCQUFzQixHQUFHLHlCQUF5QjtBQUNuRyxpQkFBaUIsbUJBQU8sQ0FBQywyR0FBWTtBQUNyQztBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUJBQXlCO0FBQ3pCO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkI7QUFDQTtBQUNBLFNBQVMsTUFBTTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCO0FBQ3RCO0FBQ0E7QUFDQSxXQUFXLFVBQVU7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckI7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQjtBQUN0QiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGV0aGVyZXVtanMvY29tbW9uL25vZGVfbW9kdWxlcy9ldGhlcmV1bWpzLXV0aWwvZGlzdC5icm93c2VyL2hlbHBlcnMuanM/OGQ3MiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuYXNzZXJ0SXNTdHJpbmcgPSBleHBvcnRzLmFzc2VydElzQXJyYXkgPSBleHBvcnRzLmFzc2VydElzQnVmZmVyID0gZXhwb3J0cy5hc3NlcnRJc0hleFN0cmluZyA9IHZvaWQgMDtcbnZhciBpbnRlcm5hbF8xID0gcmVxdWlyZShcIi4vaW50ZXJuYWxcIik7XG4vKipcbiAqIFRocm93cyBpZiBhIHN0cmluZyBpcyBub3QgaGV4IHByZWZpeGVkXG4gKiBAcGFyYW0ge3N0cmluZ30gaW5wdXQgc3RyaW5nIHRvIGNoZWNrIGhleCBwcmVmaXggb2ZcbiAqL1xudmFyIGFzc2VydElzSGV4U3RyaW5nID0gZnVuY3Rpb24gKGlucHV0KSB7XG4gICAgaWYgKCEoMCwgaW50ZXJuYWxfMS5pc0hleFN0cmluZykoaW5wdXQpKSB7XG4gICAgICAgIHZhciBtc2cgPSBcIlRoaXMgbWV0aG9kIG9ubHkgc3VwcG9ydHMgMHgtcHJlZml4ZWQgaGV4IHN0cmluZ3MgYnV0IGlucHV0IHdhczogXCIuY29uY2F0KGlucHV0KTtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKG1zZyk7XG4gICAgfVxufTtcbmV4cG9ydHMuYXNzZXJ0SXNIZXhTdHJpbmcgPSBhc3NlcnRJc0hleFN0cmluZztcbi8qKlxuICogVGhyb3dzIGlmIGlucHV0IGlzIG5vdCBhIGJ1ZmZlclxuICogQHBhcmFtIHtCdWZmZXJ9IGlucHV0IHZhbHVlIHRvIGNoZWNrXG4gKi9cbnZhciBhc3NlcnRJc0J1ZmZlciA9IGZ1bmN0aW9uIChpbnB1dCkge1xuICAgIGlmICghQnVmZmVyLmlzQnVmZmVyKGlucHV0KSkge1xuICAgICAgICB2YXIgbXNnID0gXCJUaGlzIG1ldGhvZCBvbmx5IHN1cHBvcnRzIEJ1ZmZlciBidXQgaW5wdXQgd2FzOiBcIi5jb25jYXQoaW5wdXQpO1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IobXNnKTtcbiAgICB9XG59O1xuZXhwb3J0cy5hc3NlcnRJc0J1ZmZlciA9IGFzc2VydElzQnVmZmVyO1xuLyoqXG4gKiBUaHJvd3MgaWYgaW5wdXQgaXMgbm90IGFuIGFycmF5XG4gKiBAcGFyYW0ge251bWJlcltdfSBpbnB1dCB2YWx1ZSB0byBjaGVja1xuICovXG52YXIgYXNzZXJ0SXNBcnJheSA9IGZ1bmN0aW9uIChpbnB1dCkge1xuICAgIGlmICghQXJyYXkuaXNBcnJheShpbnB1dCkpIHtcbiAgICAgICAgdmFyIG1zZyA9IFwiVGhpcyBtZXRob2Qgb25seSBzdXBwb3J0cyBudW1iZXIgYXJyYXlzIGJ1dCBpbnB1dCB3YXM6IFwiLmNvbmNhdChpbnB1dCk7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihtc2cpO1xuICAgIH1cbn07XG5leHBvcnRzLmFzc2VydElzQXJyYXkgPSBhc3NlcnRJc0FycmF5O1xuLyoqXG4gKiBUaHJvd3MgaWYgaW5wdXQgaXMgbm90IGEgc3RyaW5nXG4gKiBAcGFyYW0ge3N0cmluZ30gaW5wdXQgdmFsdWUgdG8gY2hlY2tcbiAqL1xudmFyIGFzc2VydElzU3RyaW5nID0gZnVuY3Rpb24gKGlucHV0KSB7XG4gICAgaWYgKHR5cGVvZiBpbnB1dCAhPT0gJ3N0cmluZycpIHtcbiAgICAgICAgdmFyIG1zZyA9IFwiVGhpcyBtZXRob2Qgb25seSBzdXBwb3J0cyBzdHJpbmdzIGJ1dCBpbnB1dCB3YXM6IFwiLmNvbmNhdChpbnB1dCk7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihtc2cpO1xuICAgIH1cbn07XG5leHBvcnRzLmFzc2VydElzU3RyaW5nID0gYXNzZXJ0SXNTdHJpbmc7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1oZWxwZXJzLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@ethereumjs/common/node_modules/ethereumjs-util/dist.browser/helpers.js\n");

/***/ }),

/***/ "./node_modules/@ethereumjs/common/node_modules/ethereumjs-util/dist.browser/index.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@ethereumjs/common/node_modules/ethereumjs-util/dist.browser/index.js ***!
  \********************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.isHexString = exports.getKeys = exports.fromAscii = exports.fromUtf8 = exports.toAscii = exports.arrayContainsArray = exports.getBinarySize = exports.padToEven = exports.stripHexPrefix = exports.isHexPrefixed = void 0;\n/**\n * Constants\n */\n__exportStar(__webpack_require__(/*! ./constants */ \"./node_modules/@ethereumjs/common/node_modules/ethereumjs-util/dist.browser/constants.js\"), exports);\n/**\n * Account class and helper functions\n */\n__exportStar(__webpack_require__(/*! ./account */ \"./node_modules/@ethereumjs/common/node_modules/ethereumjs-util/dist.browser/account.js\"), exports);\n/**\n * Address type\n */\n__exportStar(__webpack_require__(/*! ./address */ \"./node_modules/@ethereumjs/common/node_modules/ethereumjs-util/dist.browser/address.js\"), exports);\n/**\n * Hash functions\n */\n__exportStar(__webpack_require__(/*! ./hash */ \"./node_modules/@ethereumjs/common/node_modules/ethereumjs-util/dist.browser/hash.js\"), exports);\n/**\n * ECDSA signature\n */\n__exportStar(__webpack_require__(/*! ./signature */ \"./node_modules/@ethereumjs/common/node_modules/ethereumjs-util/dist.browser/signature.js\"), exports);\n/**\n * Utilities for manipulating Buffers, byte arrays, etc.\n */\n__exportStar(__webpack_require__(/*! ./bytes */ \"./node_modules/@ethereumjs/common/node_modules/ethereumjs-util/dist.browser/bytes.js\"), exports);\n/**\n * Function for definining properties on an object\n */\n__exportStar(__webpack_require__(/*! ./object */ \"./node_modules/@ethereumjs/common/node_modules/ethereumjs-util/dist.browser/object.js\"), exports);\n/**\n * External exports (BN, rlp)\n */\n__exportStar(__webpack_require__(/*! ./externals */ \"./node_modules/@ethereumjs/common/node_modules/ethereumjs-util/dist.browser/externals.js\"), exports);\n/**\n * Helpful TypeScript types\n */\n__exportStar(__webpack_require__(/*! ./types */ \"./node_modules/@ethereumjs/common/node_modules/ethereumjs-util/dist.browser/types.js\"), exports);\n/**\n * Export ethjs-util methods\n */\nvar internal_1 = __webpack_require__(/*! ./internal */ \"./node_modules/@ethereumjs/common/node_modules/ethereumjs-util/dist.browser/internal.js\");\nObject.defineProperty(exports, \"isHexPrefixed\", ({ enumerable: true, get: function () { return internal_1.isHexPrefixed; } }));\nObject.defineProperty(exports, \"stripHexPrefix\", ({ enumerable: true, get: function () { return internal_1.stripHexPrefix; } }));\nObject.defineProperty(exports, \"padToEven\", ({ enumerable: true, get: function () { return internal_1.padToEven; } }));\nObject.defineProperty(exports, \"getBinarySize\", ({ enumerable: true, get: function () { return internal_1.getBinarySize; } }));\nObject.defineProperty(exports, \"arrayContainsArray\", ({ enumerable: true, get: function () { return internal_1.arrayContainsArray; } }));\nObject.defineProperty(exports, \"toAscii\", ({ enumerable: true, get: function () { return internal_1.toAscii; } }));\nObject.defineProperty(exports, \"fromUtf8\", ({ enumerable: true, get: function () { return internal_1.fromUtf8; } }));\nObject.defineProperty(exports, \"fromAscii\", ({ enumerable: true, get: function () { return internal_1.fromAscii; } }));\nObject.defineProperty(exports, \"getKeys\", ({ enumerable: true, get: function () { return internal_1.getKeys; } }));\nObject.defineProperty(exports, \"isHexString\", ({ enumerable: true, get: function () { return internal_1.isHexString; } }));\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGV0aGVyZXVtanMvY29tbW9uL25vZGVfbW9kdWxlcy9ldGhlcmV1bWpzLXV0aWwvZGlzdC5icm93c2VyL2luZGV4LmpzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLG9DQUFvQztBQUNuRDtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELG1CQUFtQixHQUFHLGVBQWUsR0FBRyxpQkFBaUIsR0FBRyxnQkFBZ0IsR0FBRyxlQUFlLEdBQUcsMEJBQTBCLEdBQUcscUJBQXFCLEdBQUcsaUJBQWlCLEdBQUcsc0JBQXNCLEdBQUcscUJBQXFCO0FBQ3hOO0FBQ0E7QUFDQTtBQUNBLGFBQWEsbUJBQU8sQ0FBQyw2R0FBYTtBQUNsQztBQUNBO0FBQ0E7QUFDQSxhQUFhLG1CQUFPLENBQUMseUdBQVc7QUFDaEM7QUFDQTtBQUNBO0FBQ0EsYUFBYSxtQkFBTyxDQUFDLHlHQUFXO0FBQ2hDO0FBQ0E7QUFDQTtBQUNBLGFBQWEsbUJBQU8sQ0FBQyxtR0FBUTtBQUM3QjtBQUNBO0FBQ0E7QUFDQSxhQUFhLG1CQUFPLENBQUMsNkdBQWE7QUFDbEM7QUFDQTtBQUNBO0FBQ0EsYUFBYSxtQkFBTyxDQUFDLHFHQUFTO0FBQzlCO0FBQ0E7QUFDQTtBQUNBLGFBQWEsbUJBQU8sQ0FBQyx1R0FBVTtBQUMvQjtBQUNBO0FBQ0E7QUFDQSxhQUFhLG1CQUFPLENBQUMsNkdBQWE7QUFDbEM7QUFDQTtBQUNBO0FBQ0EsYUFBYSxtQkFBTyxDQUFDLHFHQUFTO0FBQzlCO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQixtQkFBTyxDQUFDLDJHQUFZO0FBQ3JDLGlEQUFnRCxFQUFFLHFDQUFxQyxvQ0FBb0MsRUFBQztBQUM1SCxrREFBaUQsRUFBRSxxQ0FBcUMscUNBQXFDLEVBQUM7QUFDOUgsNkNBQTRDLEVBQUUscUNBQXFDLGdDQUFnQyxFQUFDO0FBQ3BILGlEQUFnRCxFQUFFLHFDQUFxQyxvQ0FBb0MsRUFBQztBQUM1SCxzREFBcUQsRUFBRSxxQ0FBcUMseUNBQXlDLEVBQUM7QUFDdEksMkNBQTBDLEVBQUUscUNBQXFDLDhCQUE4QixFQUFDO0FBQ2hILDRDQUEyQyxFQUFFLHFDQUFxQywrQkFBK0IsRUFBQztBQUNsSCw2Q0FBNEMsRUFBRSxxQ0FBcUMsZ0NBQWdDLEVBQUM7QUFDcEgsMkNBQTBDLEVBQUUscUNBQXFDLDhCQUE4QixFQUFDO0FBQ2hILCtDQUE4QyxFQUFFLHFDQUFxQyxrQ0FBa0MsRUFBQztBQUN4SCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGV0aGVyZXVtanMvY29tbW9uL25vZGVfbW9kdWxlcy9ldGhlcmV1bWpzLXV0aWwvZGlzdC5icm93c2VyL2luZGV4LmpzP2E3MmUiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19jcmVhdGVCaW5kaW5nID0gKHRoaXMgJiYgdGhpcy5fX2NyZWF0ZUJpbmRpbmcpIHx8IChPYmplY3QuY3JlYXRlID8gKGZ1bmN0aW9uKG8sIG0sIGssIGsyKSB7XG4gICAgaWYgKGsyID09PSB1bmRlZmluZWQpIGsyID0gaztcbiAgICB2YXIgZGVzYyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IobSwgayk7XG4gICAgaWYgKCFkZXNjIHx8IChcImdldFwiIGluIGRlc2MgPyAhbS5fX2VzTW9kdWxlIDogZGVzYy53cml0YWJsZSB8fCBkZXNjLmNvbmZpZ3VyYWJsZSkpIHtcbiAgICAgIGRlc2MgPSB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24oKSB7IHJldHVybiBtW2tdOyB9IH07XG4gICAgfVxuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvLCBrMiwgZGVzYyk7XG59KSA6IChmdW5jdGlvbihvLCBtLCBrLCBrMikge1xuICAgIGlmIChrMiA9PT0gdW5kZWZpbmVkKSBrMiA9IGs7XG4gICAgb1trMl0gPSBtW2tdO1xufSkpO1xudmFyIF9fZXhwb3J0U3RhciA9ICh0aGlzICYmIHRoaXMuX19leHBvcnRTdGFyKSB8fCBmdW5jdGlvbihtLCBleHBvcnRzKSB7XG4gICAgZm9yICh2YXIgcCBpbiBtKSBpZiAocCAhPT0gXCJkZWZhdWx0XCIgJiYgIU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChleHBvcnRzLCBwKSkgX19jcmVhdGVCaW5kaW5nKGV4cG9ydHMsIG0sIHApO1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuaXNIZXhTdHJpbmcgPSBleHBvcnRzLmdldEtleXMgPSBleHBvcnRzLmZyb21Bc2NpaSA9IGV4cG9ydHMuZnJvbVV0ZjggPSBleHBvcnRzLnRvQXNjaWkgPSBleHBvcnRzLmFycmF5Q29udGFpbnNBcnJheSA9IGV4cG9ydHMuZ2V0QmluYXJ5U2l6ZSA9IGV4cG9ydHMucGFkVG9FdmVuID0gZXhwb3J0cy5zdHJpcEhleFByZWZpeCA9IGV4cG9ydHMuaXNIZXhQcmVmaXhlZCA9IHZvaWQgMDtcbi8qKlxuICogQ29uc3RhbnRzXG4gKi9cbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9jb25zdGFudHNcIiksIGV4cG9ydHMpO1xuLyoqXG4gKiBBY2NvdW50IGNsYXNzIGFuZCBoZWxwZXIgZnVuY3Rpb25zXG4gKi9cbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9hY2NvdW50XCIpLCBleHBvcnRzKTtcbi8qKlxuICogQWRkcmVzcyB0eXBlXG4gKi9cbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9hZGRyZXNzXCIpLCBleHBvcnRzKTtcbi8qKlxuICogSGFzaCBmdW5jdGlvbnNcbiAqL1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL2hhc2hcIiksIGV4cG9ydHMpO1xuLyoqXG4gKiBFQ0RTQSBzaWduYXR1cmVcbiAqL1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL3NpZ25hdHVyZVwiKSwgZXhwb3J0cyk7XG4vKipcbiAqIFV0aWxpdGllcyBmb3IgbWFuaXB1bGF0aW5nIEJ1ZmZlcnMsIGJ5dGUgYXJyYXlzLCBldGMuXG4gKi9cbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9ieXRlc1wiKSwgZXhwb3J0cyk7XG4vKipcbiAqIEZ1bmN0aW9uIGZvciBkZWZpbmluaW5nIHByb3BlcnRpZXMgb24gYW4gb2JqZWN0XG4gKi9cbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9vYmplY3RcIiksIGV4cG9ydHMpO1xuLyoqXG4gKiBFeHRlcm5hbCBleHBvcnRzIChCTiwgcmxwKVxuICovXG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vZXh0ZXJuYWxzXCIpLCBleHBvcnRzKTtcbi8qKlxuICogSGVscGZ1bCBUeXBlU2NyaXB0IHR5cGVzXG4gKi9cbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi90eXBlc1wiKSwgZXhwb3J0cyk7XG4vKipcbiAqIEV4cG9ydCBldGhqcy11dGlsIG1ldGhvZHNcbiAqL1xudmFyIGludGVybmFsXzEgPSByZXF1aXJlKFwiLi9pbnRlcm5hbFwiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcImlzSGV4UHJlZml4ZWRcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGludGVybmFsXzEuaXNIZXhQcmVmaXhlZDsgfSB9KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcInN0cmlwSGV4UHJlZml4XCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBpbnRlcm5hbF8xLnN0cmlwSGV4UHJlZml4OyB9IH0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwicGFkVG9FdmVuXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBpbnRlcm5hbF8xLnBhZFRvRXZlbjsgfSB9KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcImdldEJpbmFyeVNpemVcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGludGVybmFsXzEuZ2V0QmluYXJ5U2l6ZTsgfSB9KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcImFycmF5Q29udGFpbnNBcnJheVwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gaW50ZXJuYWxfMS5hcnJheUNvbnRhaW5zQXJyYXk7IH0gfSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJ0b0FzY2lpXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBpbnRlcm5hbF8xLnRvQXNjaWk7IH0gfSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJmcm9tVXRmOFwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gaW50ZXJuYWxfMS5mcm9tVXRmODsgfSB9KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcImZyb21Bc2NpaVwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gaW50ZXJuYWxfMS5mcm9tQXNjaWk7IH0gfSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJnZXRLZXlzXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBpbnRlcm5hbF8xLmdldEtleXM7IH0gfSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJpc0hleFN0cmluZ1wiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gaW50ZXJuYWxfMS5pc0hleFN0cmluZzsgfSB9KTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@ethereumjs/common/node_modules/ethereumjs-util/dist.browser/index.js\n");

/***/ }),

/***/ "./node_modules/@ethereumjs/common/node_modules/ethereumjs-util/dist.browser/internal.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@ethereumjs/common/node_modules/ethereumjs-util/dist.browser/internal.js ***!
  \***********************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"./node_modules/buffer/index.js\")[\"Buffer\"];\n\n/*\nThe MIT License\n\nCopyright (c) 2016 Nick Dodson. nickdodson.com\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.isHexString = exports.getKeys = exports.fromAscii = exports.fromUtf8 = exports.toAscii = exports.arrayContainsArray = exports.getBinarySize = exports.padToEven = exports.stripHexPrefix = exports.isHexPrefixed = void 0;\n/**\n * Returns a `Boolean` on whether or not the a `String` starts with '0x'\n * @param str the string input value\n * @return a boolean if it is or is not hex prefixed\n * @throws if the str input is not a string\n */\nfunction isHexPrefixed(str) {\n    if (typeof str !== 'string') {\n        throw new Error(\"[isHexPrefixed] input must be type 'string', received type \".concat(typeof str));\n    }\n    return str[0] === '0' && str[1] === 'x';\n}\nexports.isHexPrefixed = isHexPrefixed;\n/**\n * Removes '0x' from a given `String` if present\n * @param str the string value\n * @returns the string without 0x prefix\n */\nvar stripHexPrefix = function (str) {\n    if (typeof str !== 'string')\n        throw new Error(\"[stripHexPrefix] input must be type 'string', received \".concat(typeof str));\n    return isHexPrefixed(str) ? str.slice(2) : str;\n};\nexports.stripHexPrefix = stripHexPrefix;\n/**\n * Pads a `String` to have an even length\n * @param value\n * @return output\n */\nfunction padToEven(value) {\n    var a = value;\n    if (typeof a !== 'string') {\n        throw new Error(\"[padToEven] value must be type 'string', received \".concat(typeof a));\n    }\n    if (a.length % 2)\n        a = \"0\".concat(a);\n    return a;\n}\nexports.padToEven = padToEven;\n/**\n * Get the binary size of a string\n * @param str\n * @returns the number of bytes contained within the string\n */\nfunction getBinarySize(str) {\n    if (typeof str !== 'string') {\n        throw new Error(\"[getBinarySize] method requires input type 'string', recieved \".concat(typeof str));\n    }\n    return Buffer.byteLength(str, 'utf8');\n}\nexports.getBinarySize = getBinarySize;\n/**\n * Returns TRUE if the first specified array contains all elements\n * from the second one. FALSE otherwise.\n *\n * @param superset\n * @param subset\n *\n */\nfunction arrayContainsArray(superset, subset, some) {\n    if (Array.isArray(superset) !== true) {\n        throw new Error(\"[arrayContainsArray] method requires input 'superset' to be an array, got type '\".concat(typeof superset, \"'\"));\n    }\n    if (Array.isArray(subset) !== true) {\n        throw new Error(\"[arrayContainsArray] method requires input 'subset' to be an array, got type '\".concat(typeof subset, \"'\"));\n    }\n    return subset[some ? 'some' : 'every'](function (value) { return superset.indexOf(value) >= 0; });\n}\nexports.arrayContainsArray = arrayContainsArray;\n/**\n * Should be called to get ascii from its hex representation\n *\n * @param string in hex\n * @returns ascii string representation of hex value\n */\nfunction toAscii(hex) {\n    var str = '';\n    var i = 0;\n    var l = hex.length;\n    if (hex.substring(0, 2) === '0x')\n        i = 2;\n    for (; i < l; i += 2) {\n        var code = parseInt(hex.substr(i, 2), 16);\n        str += String.fromCharCode(code);\n    }\n    return str;\n}\nexports.toAscii = toAscii;\n/**\n * Should be called to get hex representation (prefixed by 0x) of utf8 string\n *\n * @param string\n * @param optional padding\n * @returns hex representation of input string\n */\nfunction fromUtf8(stringValue) {\n    var str = Buffer.from(stringValue, 'utf8');\n    return \"0x\".concat(padToEven(str.toString('hex')).replace(/^0+|0+$/g, ''));\n}\nexports.fromUtf8 = fromUtf8;\n/**\n * Should be called to get hex representation (prefixed by 0x) of ascii string\n *\n * @param  string\n * @param  optional padding\n * @returns  hex representation of input string\n */\nfunction fromAscii(stringValue) {\n    var hex = '';\n    for (var i = 0; i < stringValue.length; i++) {\n        var code = stringValue.charCodeAt(i);\n        var n = code.toString(16);\n        hex += n.length < 2 ? \"0\".concat(n) : n;\n    }\n    return \"0x\".concat(hex);\n}\nexports.fromAscii = fromAscii;\n/**\n * Returns the keys from an array of objects.\n * @example\n * ```js\n * getKeys([{a: '1', b: '2'}, {a: '3', b: '4'}], 'a') => ['1', '3']\n *````\n * @param  params\n * @param  key\n * @param  allowEmpty\n * @returns output just a simple array of output keys\n */\nfunction getKeys(params, key, allowEmpty) {\n    if (!Array.isArray(params)) {\n        throw new Error(\"[getKeys] method expects input 'params' to be an array, got \".concat(typeof params));\n    }\n    if (typeof key !== 'string') {\n        throw new Error(\"[getKeys] method expects input 'key' to be type 'string', got \".concat(typeof params));\n    }\n    var result = [];\n    for (var i = 0; i < params.length; i++) {\n        var value = params[i][key];\n        if (allowEmpty && !value) {\n            value = '';\n        }\n        else if (typeof value !== 'string') {\n            throw new Error(\"invalid abi - expected type 'string', received \".concat(typeof value));\n        }\n        result.push(value);\n    }\n    return result;\n}\nexports.getKeys = getKeys;\n/**\n * Is the string a hex string.\n *\n * @param  value\n * @param  length\n * @returns  output the string is a hex string\n */\nfunction isHexString(value, length) {\n    if (typeof value !== 'string' || !value.match(/^0x[0-9A-Fa-f]*$/))\n        return false;\n    if (length && value.length !== 2 + 2 * length)\n        return false;\n    return true;\n}\nexports.isHexString = isHexString;\n//# sourceMappingURL=internal.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@ethereumjs/common/node_modules/ethereumjs-util/dist.browser/internal.js\n");

/***/ }),

/***/ "./node_modules/@ethereumjs/common/node_modules/ethereumjs-util/dist.browser/object.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@ethereumjs/common/node_modules/ethereumjs-util/dist.browser/object.js ***!
  \*********************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"./node_modules/buffer/index.js\")[\"Buffer\"];\n\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.defineProperties = void 0;\nvar assert_1 = __importDefault(__webpack_require__(/*! assert */ \"./node_modules/assert/build/assert.js\"));\nvar internal_1 = __webpack_require__(/*! ./internal */ \"./node_modules/@ethereumjs/common/node_modules/ethereumjs-util/dist.browser/internal.js\");\nvar externals_1 = __webpack_require__(/*! ./externals */ \"./node_modules/@ethereumjs/common/node_modules/ethereumjs-util/dist.browser/externals.js\");\nvar bytes_1 = __webpack_require__(/*! ./bytes */ \"./node_modules/@ethereumjs/common/node_modules/ethereumjs-util/dist.browser/bytes.js\");\n/**\n * Defines properties on a `Object`. It make the assumption that underlying data is binary.\n * @param self the `Object` to define properties on\n * @param fields an array fields to define. Fields can contain:\n * * `name` - the name of the properties\n * * `length` - the number of bytes the field can have\n * * `allowLess` - if the field can be less than the length\n * * `allowEmpty`\n * @param data data to be validated against the definitions\n * @deprecated\n */\nvar defineProperties = function (self, fields, data) {\n    self.raw = [];\n    self._fields = [];\n    // attach the `toJSON`\n    self.toJSON = function (label) {\n        if (label === void 0) { label = false; }\n        if (label) {\n            var obj_1 = {};\n            self._fields.forEach(function (field) {\n                obj_1[field] = \"0x\".concat(self[field].toString('hex'));\n            });\n            return obj_1;\n        }\n        return (0, bytes_1.baToJSON)(self.raw);\n    };\n    self.serialize = function serialize() {\n        return externals_1.rlp.encode(self.raw);\n    };\n    fields.forEach(function (field, i) {\n        self._fields.push(field.name);\n        function getter() {\n            return self.raw[i];\n        }\n        function setter(v) {\n            v = (0, bytes_1.toBuffer)(v);\n            if (v.toString('hex') === '00' && !field.allowZero) {\n                v = Buffer.allocUnsafe(0);\n            }\n            if (field.allowLess && field.length) {\n                v = (0, bytes_1.unpadBuffer)(v);\n                (0, assert_1.default)(field.length >= v.length, \"The field \".concat(field.name, \" must not have more \").concat(field.length, \" bytes\"));\n            }\n            else if (!(field.allowZero && v.length === 0) && field.length) {\n                (0, assert_1.default)(field.length === v.length, \"The field \".concat(field.name, \" must have byte length of \").concat(field.length));\n            }\n            self.raw[i] = v;\n        }\n        Object.defineProperty(self, field.name, {\n            enumerable: true,\n            configurable: true,\n            get: getter,\n            set: setter,\n        });\n        if (field.default) {\n            self[field.name] = field.default;\n        }\n        // attach alias\n        if (field.alias) {\n            Object.defineProperty(self, field.alias, {\n                enumerable: false,\n                configurable: true,\n                set: setter,\n                get: getter,\n            });\n        }\n    });\n    // if the constuctor is passed data\n    if (data) {\n        if (typeof data === 'string') {\n            data = Buffer.from((0, internal_1.stripHexPrefix)(data), 'hex');\n        }\n        if (Buffer.isBuffer(data)) {\n            data = externals_1.rlp.decode(data);\n        }\n        if (Array.isArray(data)) {\n            if (data.length > self._fields.length) {\n                throw new Error('wrong number of fields in data');\n            }\n            // make sure all the items are buffers\n            data.forEach(function (d, i) {\n                self[self._fields[i]] = (0, bytes_1.toBuffer)(d);\n            });\n        }\n        else if (typeof data === 'object') {\n            var keys_1 = Object.keys(data);\n            fields.forEach(function (field) {\n                if (keys_1.indexOf(field.name) !== -1)\n                    self[field.name] = data[field.name];\n                if (keys_1.indexOf(field.alias) !== -1)\n                    self[field.alias] = data[field.alias];\n            });\n        }\n        else {\n            throw new Error('invalid data');\n        }\n    }\n};\nexports.defineProperties = defineProperties;\n//# sourceMappingURL=object.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGV0aGVyZXVtanMvY29tbW9uL25vZGVfbW9kdWxlcy9ldGhlcmV1bWpzLXV0aWwvZGlzdC5icm93c2VyL29iamVjdC5qcy5qcyIsIm1hcHBpbmdzIjoiO0FBQWE7QUFDYjtBQUNBLDZDQUE2QztBQUM3QztBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCx3QkFBd0I7QUFDeEIsK0JBQStCLG1CQUFPLENBQUMscURBQVE7QUFDL0MsaUJBQWlCLG1CQUFPLENBQUMsMkdBQVk7QUFDckMsa0JBQWtCLG1CQUFPLENBQUMsNkdBQWE7QUFDdkMsY0FBYyxtQkFBTyxDQUFDLHFHQUFTO0FBQy9CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0NBQWdDO0FBQ2hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQixNQUFNO0FBQzFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxtQkFBbUIsTUFBTTtBQUN6QjtBQUNBLFlBQVksTUFBTTtBQUNsQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0I7QUFDeEIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BldGhlcmV1bWpzL2NvbW1vbi9ub2RlX21vZHVsZXMvZXRoZXJldW1qcy11dGlsL2Rpc3QuYnJvd3Nlci9vYmplY3QuanM/OGYyYyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2ltcG9ydERlZmF1bHQgPSAodGhpcyAmJiB0aGlzLl9faW1wb3J0RGVmYXVsdCkgfHwgZnVuY3Rpb24gKG1vZCkge1xuICAgIHJldHVybiAobW9kICYmIG1vZC5fX2VzTW9kdWxlKSA/IG1vZCA6IHsgXCJkZWZhdWx0XCI6IG1vZCB9O1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuZGVmaW5lUHJvcGVydGllcyA9IHZvaWQgMDtcbnZhciBhc3NlcnRfMSA9IF9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwiYXNzZXJ0XCIpKTtcbnZhciBpbnRlcm5hbF8xID0gcmVxdWlyZShcIi4vaW50ZXJuYWxcIik7XG52YXIgZXh0ZXJuYWxzXzEgPSByZXF1aXJlKFwiLi9leHRlcm5hbHNcIik7XG52YXIgYnl0ZXNfMSA9IHJlcXVpcmUoXCIuL2J5dGVzXCIpO1xuLyoqXG4gKiBEZWZpbmVzIHByb3BlcnRpZXMgb24gYSBgT2JqZWN0YC4gSXQgbWFrZSB0aGUgYXNzdW1wdGlvbiB0aGF0IHVuZGVybHlpbmcgZGF0YSBpcyBiaW5hcnkuXG4gKiBAcGFyYW0gc2VsZiB0aGUgYE9iamVjdGAgdG8gZGVmaW5lIHByb3BlcnRpZXMgb25cbiAqIEBwYXJhbSBmaWVsZHMgYW4gYXJyYXkgZmllbGRzIHRvIGRlZmluZS4gRmllbGRzIGNhbiBjb250YWluOlxuICogKiBgbmFtZWAgLSB0aGUgbmFtZSBvZiB0aGUgcHJvcGVydGllc1xuICogKiBgbGVuZ3RoYCAtIHRoZSBudW1iZXIgb2YgYnl0ZXMgdGhlIGZpZWxkIGNhbiBoYXZlXG4gKiAqIGBhbGxvd0xlc3NgIC0gaWYgdGhlIGZpZWxkIGNhbiBiZSBsZXNzIHRoYW4gdGhlIGxlbmd0aFxuICogKiBgYWxsb3dFbXB0eWBcbiAqIEBwYXJhbSBkYXRhIGRhdGEgdG8gYmUgdmFsaWRhdGVkIGFnYWluc3QgdGhlIGRlZmluaXRpb25zXG4gKiBAZGVwcmVjYXRlZFxuICovXG52YXIgZGVmaW5lUHJvcGVydGllcyA9IGZ1bmN0aW9uIChzZWxmLCBmaWVsZHMsIGRhdGEpIHtcbiAgICBzZWxmLnJhdyA9IFtdO1xuICAgIHNlbGYuX2ZpZWxkcyA9IFtdO1xuICAgIC8vIGF0dGFjaCB0aGUgYHRvSlNPTmBcbiAgICBzZWxmLnRvSlNPTiA9IGZ1bmN0aW9uIChsYWJlbCkge1xuICAgICAgICBpZiAobGFiZWwgPT09IHZvaWQgMCkgeyBsYWJlbCA9IGZhbHNlOyB9XG4gICAgICAgIGlmIChsYWJlbCkge1xuICAgICAgICAgICAgdmFyIG9ial8xID0ge307XG4gICAgICAgICAgICBzZWxmLl9maWVsZHMuZm9yRWFjaChmdW5jdGlvbiAoZmllbGQpIHtcbiAgICAgICAgICAgICAgICBvYmpfMVtmaWVsZF0gPSBcIjB4XCIuY29uY2F0KHNlbGZbZmllbGRdLnRvU3RyaW5nKCdoZXgnKSk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIHJldHVybiBvYmpfMTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gKDAsIGJ5dGVzXzEuYmFUb0pTT04pKHNlbGYucmF3KTtcbiAgICB9O1xuICAgIHNlbGYuc2VyaWFsaXplID0gZnVuY3Rpb24gc2VyaWFsaXplKCkge1xuICAgICAgICByZXR1cm4gZXh0ZXJuYWxzXzEucmxwLmVuY29kZShzZWxmLnJhdyk7XG4gICAgfTtcbiAgICBmaWVsZHMuZm9yRWFjaChmdW5jdGlvbiAoZmllbGQsIGkpIHtcbiAgICAgICAgc2VsZi5fZmllbGRzLnB1c2goZmllbGQubmFtZSk7XG4gICAgICAgIGZ1bmN0aW9uIGdldHRlcigpIHtcbiAgICAgICAgICAgIHJldHVybiBzZWxmLnJhd1tpXTtcbiAgICAgICAgfVxuICAgICAgICBmdW5jdGlvbiBzZXR0ZXIodikge1xuICAgICAgICAgICAgdiA9ICgwLCBieXRlc18xLnRvQnVmZmVyKSh2KTtcbiAgICAgICAgICAgIGlmICh2LnRvU3RyaW5nKCdoZXgnKSA9PT0gJzAwJyAmJiAhZmllbGQuYWxsb3daZXJvKSB7XG4gICAgICAgICAgICAgICAgdiA9IEJ1ZmZlci5hbGxvY1Vuc2FmZSgwKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChmaWVsZC5hbGxvd0xlc3MgJiYgZmllbGQubGVuZ3RoKSB7XG4gICAgICAgICAgICAgICAgdiA9ICgwLCBieXRlc18xLnVucGFkQnVmZmVyKSh2KTtcbiAgICAgICAgICAgICAgICAoMCwgYXNzZXJ0XzEuZGVmYXVsdCkoZmllbGQubGVuZ3RoID49IHYubGVuZ3RoLCBcIlRoZSBmaWVsZCBcIi5jb25jYXQoZmllbGQubmFtZSwgXCIgbXVzdCBub3QgaGF2ZSBtb3JlIFwiKS5jb25jYXQoZmllbGQubGVuZ3RoLCBcIiBieXRlc1wiKSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIGlmICghKGZpZWxkLmFsbG93WmVybyAmJiB2Lmxlbmd0aCA9PT0gMCkgJiYgZmllbGQubGVuZ3RoKSB7XG4gICAgICAgICAgICAgICAgKDAsIGFzc2VydF8xLmRlZmF1bHQpKGZpZWxkLmxlbmd0aCA9PT0gdi5sZW5ndGgsIFwiVGhlIGZpZWxkIFwiLmNvbmNhdChmaWVsZC5uYW1lLCBcIiBtdXN0IGhhdmUgYnl0ZSBsZW5ndGggb2YgXCIpLmNvbmNhdChmaWVsZC5sZW5ndGgpKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHNlbGYucmF3W2ldID0gdjtcbiAgICAgICAgfVxuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoc2VsZiwgZmllbGQubmFtZSwge1xuICAgICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIGdldDogZ2V0dGVyLFxuICAgICAgICAgICAgc2V0OiBzZXR0ZXIsXG4gICAgICAgIH0pO1xuICAgICAgICBpZiAoZmllbGQuZGVmYXVsdCkge1xuICAgICAgICAgICAgc2VsZltmaWVsZC5uYW1lXSA9IGZpZWxkLmRlZmF1bHQ7XG4gICAgICAgIH1cbiAgICAgICAgLy8gYXR0YWNoIGFsaWFzXG4gICAgICAgIGlmIChmaWVsZC5hbGlhcykge1xuICAgICAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHNlbGYsIGZpZWxkLmFsaWFzLCB7XG4gICAgICAgICAgICAgICAgZW51bWVyYWJsZTogZmFsc2UsXG4gICAgICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgICAgIHNldDogc2V0dGVyLFxuICAgICAgICAgICAgICAgIGdldDogZ2V0dGVyLFxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICB9KTtcbiAgICAvLyBpZiB0aGUgY29uc3R1Y3RvciBpcyBwYXNzZWQgZGF0YVxuICAgIGlmIChkYXRhKSB7XG4gICAgICAgIGlmICh0eXBlb2YgZGF0YSA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgICAgIGRhdGEgPSBCdWZmZXIuZnJvbSgoMCwgaW50ZXJuYWxfMS5zdHJpcEhleFByZWZpeCkoZGF0YSksICdoZXgnKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoQnVmZmVyLmlzQnVmZmVyKGRhdGEpKSB7XG4gICAgICAgICAgICBkYXRhID0gZXh0ZXJuYWxzXzEucmxwLmRlY29kZShkYXRhKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoQXJyYXkuaXNBcnJheShkYXRhKSkge1xuICAgICAgICAgICAgaWYgKGRhdGEubGVuZ3RoID4gc2VsZi5fZmllbGRzLmxlbmd0aCkge1xuICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignd3JvbmcgbnVtYmVyIG9mIGZpZWxkcyBpbiBkYXRhJyk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAvLyBtYWtlIHN1cmUgYWxsIHRoZSBpdGVtcyBhcmUgYnVmZmVyc1xuICAgICAgICAgICAgZGF0YS5mb3JFYWNoKGZ1bmN0aW9uIChkLCBpKSB7XG4gICAgICAgICAgICAgICAgc2VsZltzZWxmLl9maWVsZHNbaV1dID0gKDAsIGJ5dGVzXzEudG9CdWZmZXIpKGQpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAodHlwZW9mIGRhdGEgPT09ICdvYmplY3QnKSB7XG4gICAgICAgICAgICB2YXIga2V5c18xID0gT2JqZWN0LmtleXMoZGF0YSk7XG4gICAgICAgICAgICBmaWVsZHMuZm9yRWFjaChmdW5jdGlvbiAoZmllbGQpIHtcbiAgICAgICAgICAgICAgICBpZiAoa2V5c18xLmluZGV4T2YoZmllbGQubmFtZSkgIT09IC0xKVxuICAgICAgICAgICAgICAgICAgICBzZWxmW2ZpZWxkLm5hbWVdID0gZGF0YVtmaWVsZC5uYW1lXTtcbiAgICAgICAgICAgICAgICBpZiAoa2V5c18xLmluZGV4T2YoZmllbGQuYWxpYXMpICE9PSAtMSlcbiAgICAgICAgICAgICAgICAgICAgc2VsZltmaWVsZC5hbGlhc10gPSBkYXRhW2ZpZWxkLmFsaWFzXTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdpbnZhbGlkIGRhdGEnKTtcbiAgICAgICAgfVxuICAgIH1cbn07XG5leHBvcnRzLmRlZmluZVByb3BlcnRpZXMgPSBkZWZpbmVQcm9wZXJ0aWVzO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9b2JqZWN0LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@ethereumjs/common/node_modules/ethereumjs-util/dist.browser/object.js\n");

/***/ }),

/***/ "./node_modules/@ethereumjs/common/node_modules/ethereumjs-util/dist.browser/signature.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/@ethereumjs/common/node_modules/ethereumjs-util/dist.browser/signature.js ***!
  \************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"./node_modules/buffer/index.js\")[\"Buffer\"];\n\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.hashPersonalMessage = exports.isValidSignature = exports.fromRpcSig = exports.toCompactSig = exports.toRpcSig = exports.ecrecover = exports.ecsign = void 0;\nvar secp256k1_1 = __webpack_require__(/*! ethereum-cryptography/secp256k1 */ \"./node_modules/ethereum-cryptography/secp256k1.js\");\nvar externals_1 = __webpack_require__(/*! ./externals */ \"./node_modules/@ethereumjs/common/node_modules/ethereumjs-util/dist.browser/externals.js\");\nvar bytes_1 = __webpack_require__(/*! ./bytes */ \"./node_modules/@ethereumjs/common/node_modules/ethereumjs-util/dist.browser/bytes.js\");\nvar hash_1 = __webpack_require__(/*! ./hash */ \"./node_modules/@ethereumjs/common/node_modules/ethereumjs-util/dist.browser/hash.js\");\nvar helpers_1 = __webpack_require__(/*! ./helpers */ \"./node_modules/@ethereumjs/common/node_modules/ethereumjs-util/dist.browser/helpers.js\");\nvar types_1 = __webpack_require__(/*! ./types */ \"./node_modules/@ethereumjs/common/node_modules/ethereumjs-util/dist.browser/types.js\");\nfunction ecsign(msgHash, privateKey, chainId) {\n    var _a = (0, secp256k1_1.ecdsaSign)(msgHash, privateKey), signature = _a.signature, recovery = _a.recid;\n    var r = Buffer.from(signature.slice(0, 32));\n    var s = Buffer.from(signature.slice(32, 64));\n    if (!chainId || typeof chainId === 'number') {\n        // return legacy type ECDSASignature (deprecated in favor of ECDSASignatureBuffer to handle large chainIds)\n        if (chainId && !Number.isSafeInteger(chainId)) {\n            throw new Error('The provided number is greater than MAX_SAFE_INTEGER (please use an alternative input type)');\n        }\n        var v_1 = chainId ? recovery + (chainId * 2 + 35) : recovery + 27;\n        return { r: r, s: s, v: v_1 };\n    }\n    var chainIdBN = (0, types_1.toType)(chainId, types_1.TypeOutput.BN);\n    var v = chainIdBN.muln(2).addn(35).addn(recovery).toArrayLike(Buffer);\n    return { r: r, s: s, v: v };\n}\nexports.ecsign = ecsign;\nfunction calculateSigRecovery(v, chainId) {\n    var vBN = (0, types_1.toType)(v, types_1.TypeOutput.BN);\n    if (vBN.eqn(0) || vBN.eqn(1))\n        return (0, types_1.toType)(v, types_1.TypeOutput.BN);\n    if (!chainId) {\n        return vBN.subn(27);\n    }\n    var chainIdBN = (0, types_1.toType)(chainId, types_1.TypeOutput.BN);\n    return vBN.sub(chainIdBN.muln(2).addn(35));\n}\nfunction isValidSigRecovery(recovery) {\n    var rec = new externals_1.BN(recovery);\n    return rec.eqn(0) || rec.eqn(1);\n}\n/**\n * ECDSA public key recovery from signature.\n * NOTE: Accepts `v == 0 | v == 1` for EIP1559 transactions\n * @returns Recovered public key\n */\nvar ecrecover = function (msgHash, v, r, s, chainId) {\n    var signature = Buffer.concat([(0, bytes_1.setLengthLeft)(r, 32), (0, bytes_1.setLengthLeft)(s, 32)], 64);\n    var recovery = calculateSigRecovery(v, chainId);\n    if (!isValidSigRecovery(recovery)) {\n        throw new Error('Invalid signature v value');\n    }\n    var senderPubKey = (0, secp256k1_1.ecdsaRecover)(signature, recovery.toNumber(), msgHash);\n    return Buffer.from((0, secp256k1_1.publicKeyConvert)(senderPubKey, false).slice(1));\n};\nexports.ecrecover = ecrecover;\n/**\n * Convert signature parameters into the format of `eth_sign` RPC method.\n * NOTE: Accepts `v == 0 | v == 1` for EIP1559 transactions\n * @returns Signature\n */\nvar toRpcSig = function (v, r, s, chainId) {\n    var recovery = calculateSigRecovery(v, chainId);\n    if (!isValidSigRecovery(recovery)) {\n        throw new Error('Invalid signature v value');\n    }\n    // geth (and the RPC eth_sign method) uses the 65 byte format used by Bitcoin\n    return (0, bytes_1.bufferToHex)(Buffer.concat([(0, bytes_1.setLengthLeft)(r, 32), (0, bytes_1.setLengthLeft)(s, 32), (0, bytes_1.toBuffer)(v)]));\n};\nexports.toRpcSig = toRpcSig;\n/**\n * Convert signature parameters into the format of Compact Signature Representation (EIP-2098).\n * NOTE: Accepts `v == 0 | v == 1` for EIP1559 transactions\n * @returns Signature\n */\nvar toCompactSig = function (v, r, s, chainId) {\n    var recovery = calculateSigRecovery(v, chainId);\n    if (!isValidSigRecovery(recovery)) {\n        throw new Error('Invalid signature v value');\n    }\n    var vn = (0, types_1.toType)(v, types_1.TypeOutput.Number);\n    var ss = s;\n    if ((vn > 28 && vn % 2 === 1) || vn === 1 || vn === 28) {\n        ss = Buffer.from(s);\n        ss[0] |= 0x80;\n    }\n    return (0, bytes_1.bufferToHex)(Buffer.concat([(0, bytes_1.setLengthLeft)(r, 32), (0, bytes_1.setLengthLeft)(ss, 32)]));\n};\nexports.toCompactSig = toCompactSig;\n/**\n * Convert signature format of the `eth_sign` RPC method to signature parameters\n * NOTE: all because of a bug in geth: https://github.com/ethereum/go-ethereum/issues/2053\n * NOTE: After EIP1559, `v` could be `0` or `1` but this function assumes\n * it's a signed message (EIP-191 or EIP-712) adding `27` at the end. Remove if needed.\n */\nvar fromRpcSig = function (sig) {\n    var buf = (0, bytes_1.toBuffer)(sig);\n    var r;\n    var s;\n    var v;\n    if (buf.length >= 65) {\n        r = buf.slice(0, 32);\n        s = buf.slice(32, 64);\n        v = (0, bytes_1.bufferToInt)(buf.slice(64));\n    }\n    else if (buf.length === 64) {\n        // Compact Signature Representation (https://eips.ethereum.org/EIPS/eip-2098)\n        r = buf.slice(0, 32);\n        s = buf.slice(32, 64);\n        v = (0, bytes_1.bufferToInt)(buf.slice(32, 33)) >> 7;\n        s[0] &= 0x7f;\n    }\n    else {\n        throw new Error('Invalid signature length');\n    }\n    // support both versions of `eth_sign` responses\n    if (v < 27) {\n        v += 27;\n    }\n    return {\n        v: v,\n        r: r,\n        s: s,\n    };\n};\nexports.fromRpcSig = fromRpcSig;\n/**\n * Validate a ECDSA signature.\n * NOTE: Accepts `v == 0 | v == 1` for EIP1559 transactions\n * @param homesteadOrLater Indicates whether this is being used on either the homestead hardfork or a later one\n */\nvar isValidSignature = function (v, r, s, homesteadOrLater, chainId) {\n    if (homesteadOrLater === void 0) { homesteadOrLater = true; }\n    var SECP256K1_N_DIV_2 = new externals_1.BN('7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0', 16);\n    var SECP256K1_N = new externals_1.BN('fffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141', 16);\n    if (r.length !== 32 || s.length !== 32) {\n        return false;\n    }\n    if (!isValidSigRecovery(calculateSigRecovery(v, chainId))) {\n        return false;\n    }\n    var rBN = new externals_1.BN(r);\n    var sBN = new externals_1.BN(s);\n    if (rBN.isZero() || rBN.gt(SECP256K1_N) || sBN.isZero() || sBN.gt(SECP256K1_N)) {\n        return false;\n    }\n    if (homesteadOrLater && sBN.cmp(SECP256K1_N_DIV_2) === 1) {\n        return false;\n    }\n    return true;\n};\nexports.isValidSignature = isValidSignature;\n/**\n * Returns the keccak-256 hash of `message`, prefixed with the header used by the `eth_sign` RPC call.\n * The output of this function can be fed into `ecsign` to produce the same signature as the `eth_sign`\n * call for a given `message`, or fed to `ecrecover` along with a signature to recover the public key\n * used to produce the signature.\n */\nvar hashPersonalMessage = function (message) {\n    (0, helpers_1.assertIsBuffer)(message);\n    var prefix = Buffer.from(\"\\u0019Ethereum Signed Message:\\n\".concat(message.length), 'utf-8');\n    return (0, hash_1.keccak)(Buffer.concat([prefix, message]));\n};\nexports.hashPersonalMessage = hashPersonalMessage;\n//# sourceMappingURL=signature.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@ethereumjs/common/node_modules/ethereumjs-util/dist.browser/signature.js\n");

/***/ }),

/***/ "./node_modules/@ethereumjs/common/node_modules/ethereumjs-util/dist.browser/types.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@ethereumjs/common/node_modules/ethereumjs-util/dist.browser/types.js ***!
  \********************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"./node_modules/buffer/index.js\")[\"Buffer\"];\n\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.toType = exports.TypeOutput = exports.bnToRlp = exports.bnToUnpaddedBuffer = exports.bnToHex = void 0;\nvar externals_1 = __webpack_require__(/*! ./externals */ \"./node_modules/@ethereumjs/common/node_modules/ethereumjs-util/dist.browser/externals.js\");\nvar internal_1 = __webpack_require__(/*! ./internal */ \"./node_modules/@ethereumjs/common/node_modules/ethereumjs-util/dist.browser/internal.js\");\nvar bytes_1 = __webpack_require__(/*! ./bytes */ \"./node_modules/@ethereumjs/common/node_modules/ethereumjs-util/dist.browser/bytes.js\");\n/**\n * Convert BN to 0x-prefixed hex string.\n */\nfunction bnToHex(value) {\n    return \"0x\".concat(value.toString(16));\n}\nexports.bnToHex = bnToHex;\n/**\n * Convert value from BN to an unpadded Buffer\n * (useful for RLP transport)\n * @param value value to convert\n */\nfunction bnToUnpaddedBuffer(value) {\n    // Using `bn.toArrayLike(Buffer)` instead of `bn.toBuffer()`\n    // for compatibility with browserify and similar tools\n    return (0, bytes_1.unpadBuffer)(value.toArrayLike(Buffer));\n}\nexports.bnToUnpaddedBuffer = bnToUnpaddedBuffer;\n/**\n * Deprecated alias for {@link bnToUnpaddedBuffer}\n * @deprecated\n */\nfunction bnToRlp(value) {\n    return bnToUnpaddedBuffer(value);\n}\nexports.bnToRlp = bnToRlp;\n/**\n * Type output options\n */\nvar TypeOutput;\n(function (TypeOutput) {\n    TypeOutput[TypeOutput[\"Number\"] = 0] = \"Number\";\n    TypeOutput[TypeOutput[\"BN\"] = 1] = \"BN\";\n    TypeOutput[TypeOutput[\"Buffer\"] = 2] = \"Buffer\";\n    TypeOutput[TypeOutput[\"PrefixedHexString\"] = 3] = \"PrefixedHexString\";\n})(TypeOutput = exports.TypeOutput || (exports.TypeOutput = {}));\nfunction toType(input, outputType) {\n    if (input === null) {\n        return null;\n    }\n    if (input === undefined) {\n        return undefined;\n    }\n    if (typeof input === 'string' && !(0, internal_1.isHexString)(input)) {\n        throw new Error(\"A string must be provided with a 0x-prefix, given: \".concat(input));\n    }\n    else if (typeof input === 'number' && !Number.isSafeInteger(input)) {\n        throw new Error('The provided number is greater than MAX_SAFE_INTEGER (please use an alternative input type)');\n    }\n    var output = (0, bytes_1.toBuffer)(input);\n    if (outputType === TypeOutput.Buffer) {\n        return output;\n    }\n    else if (outputType === TypeOutput.BN) {\n        return new externals_1.BN(output);\n    }\n    else if (outputType === TypeOutput.Number) {\n        var bn = new externals_1.BN(output);\n        var max = new externals_1.BN(Number.MAX_SAFE_INTEGER.toString());\n        if (bn.gt(max)) {\n            throw new Error('The provided number is greater than MAX_SAFE_INTEGER (please use an alternative output type)');\n        }\n        return bn.toNumber();\n    }\n    else {\n        // outputType === TypeOutput.PrefixedHexString\n        return \"0x\".concat(output.toString('hex'));\n    }\n}\nexports.toType = toType;\n//# sourceMappingURL=types.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGV0aGVyZXVtanMvY29tbW9uL25vZGVfbW9kdWxlcy9ldGhlcmV1bWpzLXV0aWwvZGlzdC5icm93c2VyL3R5cGVzLmpzLmpzIiwibWFwcGluZ3MiOiI7QUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxjQUFjLEdBQUcsa0JBQWtCLEdBQUcsZUFBZSxHQUFHLDBCQUEwQixHQUFHLGVBQWU7QUFDcEcsa0JBQWtCLG1CQUFPLENBQUMsNkdBQWE7QUFDdkMsaUJBQWlCLG1CQUFPLENBQUMsMkdBQVk7QUFDckMsY0FBYyxtQkFBTyxDQUFDLHFHQUFTO0FBQy9CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0RBQXNELE1BQU07QUFDNUQ7QUFDQSwwQkFBMEI7QUFDMUI7QUFDQSx5QkFBeUI7QUFDekI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLHNDQUFzQyxrQkFBa0IsS0FBSztBQUM5RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjO0FBQ2QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BldGhlcmV1bWpzL2NvbW1vbi9ub2RlX21vZHVsZXMvZXRoZXJldW1qcy11dGlsL2Rpc3QuYnJvd3Nlci90eXBlcy5qcz8zZTEwIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy50b1R5cGUgPSBleHBvcnRzLlR5cGVPdXRwdXQgPSBleHBvcnRzLmJuVG9SbHAgPSBleHBvcnRzLmJuVG9VbnBhZGRlZEJ1ZmZlciA9IGV4cG9ydHMuYm5Ub0hleCA9IHZvaWQgMDtcbnZhciBleHRlcm5hbHNfMSA9IHJlcXVpcmUoXCIuL2V4dGVybmFsc1wiKTtcbnZhciBpbnRlcm5hbF8xID0gcmVxdWlyZShcIi4vaW50ZXJuYWxcIik7XG52YXIgYnl0ZXNfMSA9IHJlcXVpcmUoXCIuL2J5dGVzXCIpO1xuLyoqXG4gKiBDb252ZXJ0IEJOIHRvIDB4LXByZWZpeGVkIGhleCBzdHJpbmcuXG4gKi9cbmZ1bmN0aW9uIGJuVG9IZXgodmFsdWUpIHtcbiAgICByZXR1cm4gXCIweFwiLmNvbmNhdCh2YWx1ZS50b1N0cmluZygxNikpO1xufVxuZXhwb3J0cy5iblRvSGV4ID0gYm5Ub0hleDtcbi8qKlxuICogQ29udmVydCB2YWx1ZSBmcm9tIEJOIHRvIGFuIHVucGFkZGVkIEJ1ZmZlclxuICogKHVzZWZ1bCBmb3IgUkxQIHRyYW5zcG9ydClcbiAqIEBwYXJhbSB2YWx1ZSB2YWx1ZSB0byBjb252ZXJ0XG4gKi9cbmZ1bmN0aW9uIGJuVG9VbnBhZGRlZEJ1ZmZlcih2YWx1ZSkge1xuICAgIC8vIFVzaW5nIGBibi50b0FycmF5TGlrZShCdWZmZXIpYCBpbnN0ZWFkIG9mIGBibi50b0J1ZmZlcigpYFxuICAgIC8vIGZvciBjb21wYXRpYmlsaXR5IHdpdGggYnJvd3NlcmlmeSBhbmQgc2ltaWxhciB0b29sc1xuICAgIHJldHVybiAoMCwgYnl0ZXNfMS51bnBhZEJ1ZmZlcikodmFsdWUudG9BcnJheUxpa2UoQnVmZmVyKSk7XG59XG5leHBvcnRzLmJuVG9VbnBhZGRlZEJ1ZmZlciA9IGJuVG9VbnBhZGRlZEJ1ZmZlcjtcbi8qKlxuICogRGVwcmVjYXRlZCBhbGlhcyBmb3Ige0BsaW5rIGJuVG9VbnBhZGRlZEJ1ZmZlcn1cbiAqIEBkZXByZWNhdGVkXG4gKi9cbmZ1bmN0aW9uIGJuVG9SbHAodmFsdWUpIHtcbiAgICByZXR1cm4gYm5Ub1VucGFkZGVkQnVmZmVyKHZhbHVlKTtcbn1cbmV4cG9ydHMuYm5Ub1JscCA9IGJuVG9SbHA7XG4vKipcbiAqIFR5cGUgb3V0cHV0IG9wdGlvbnNcbiAqL1xudmFyIFR5cGVPdXRwdXQ7XG4oZnVuY3Rpb24gKFR5cGVPdXRwdXQpIHtcbiAgICBUeXBlT3V0cHV0W1R5cGVPdXRwdXRbXCJOdW1iZXJcIl0gPSAwXSA9IFwiTnVtYmVyXCI7XG4gICAgVHlwZU91dHB1dFtUeXBlT3V0cHV0W1wiQk5cIl0gPSAxXSA9IFwiQk5cIjtcbiAgICBUeXBlT3V0cHV0W1R5cGVPdXRwdXRbXCJCdWZmZXJcIl0gPSAyXSA9IFwiQnVmZmVyXCI7XG4gICAgVHlwZU91dHB1dFtUeXBlT3V0cHV0W1wiUHJlZml4ZWRIZXhTdHJpbmdcIl0gPSAzXSA9IFwiUHJlZml4ZWRIZXhTdHJpbmdcIjtcbn0pKFR5cGVPdXRwdXQgPSBleHBvcnRzLlR5cGVPdXRwdXQgfHwgKGV4cG9ydHMuVHlwZU91dHB1dCA9IHt9KSk7XG5mdW5jdGlvbiB0b1R5cGUoaW5wdXQsIG91dHB1dFR5cGUpIHtcbiAgICBpZiAoaW5wdXQgPT09IG51bGwpIHtcbiAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuICAgIGlmIChpbnB1dCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgfVxuICAgIGlmICh0eXBlb2YgaW5wdXQgPT09ICdzdHJpbmcnICYmICEoMCwgaW50ZXJuYWxfMS5pc0hleFN0cmluZykoaW5wdXQpKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIkEgc3RyaW5nIG11c3QgYmUgcHJvdmlkZWQgd2l0aCBhIDB4LXByZWZpeCwgZ2l2ZW46IFwiLmNvbmNhdChpbnB1dCkpO1xuICAgIH1cbiAgICBlbHNlIGlmICh0eXBlb2YgaW5wdXQgPT09ICdudW1iZXInICYmICFOdW1iZXIuaXNTYWZlSW50ZWdlcihpbnB1dCkpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdUaGUgcHJvdmlkZWQgbnVtYmVyIGlzIGdyZWF0ZXIgdGhhbiBNQVhfU0FGRV9JTlRFR0VSIChwbGVhc2UgdXNlIGFuIGFsdGVybmF0aXZlIGlucHV0IHR5cGUpJyk7XG4gICAgfVxuICAgIHZhciBvdXRwdXQgPSAoMCwgYnl0ZXNfMS50b0J1ZmZlcikoaW5wdXQpO1xuICAgIGlmIChvdXRwdXRUeXBlID09PSBUeXBlT3V0cHV0LkJ1ZmZlcikge1xuICAgICAgICByZXR1cm4gb3V0cHV0O1xuICAgIH1cbiAgICBlbHNlIGlmIChvdXRwdXRUeXBlID09PSBUeXBlT3V0cHV0LkJOKSB7XG4gICAgICAgIHJldHVybiBuZXcgZXh0ZXJuYWxzXzEuQk4ob3V0cHV0KTtcbiAgICB9XG4gICAgZWxzZSBpZiAob3V0cHV0VHlwZSA9PT0gVHlwZU91dHB1dC5OdW1iZXIpIHtcbiAgICAgICAgdmFyIGJuID0gbmV3IGV4dGVybmFsc18xLkJOKG91dHB1dCk7XG4gICAgICAgIHZhciBtYXggPSBuZXcgZXh0ZXJuYWxzXzEuQk4oTnVtYmVyLk1BWF9TQUZFX0lOVEVHRVIudG9TdHJpbmcoKSk7XG4gICAgICAgIGlmIChibi5ndChtYXgpKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ1RoZSBwcm92aWRlZCBudW1iZXIgaXMgZ3JlYXRlciB0aGFuIE1BWF9TQUZFX0lOVEVHRVIgKHBsZWFzZSB1c2UgYW4gYWx0ZXJuYXRpdmUgb3V0cHV0IHR5cGUpJyk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGJuLnRvTnVtYmVyKCk7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICAvLyBvdXRwdXRUeXBlID09PSBUeXBlT3V0cHV0LlByZWZpeGVkSGV4U3RyaW5nXG4gICAgICAgIHJldHVybiBcIjB4XCIuY29uY2F0KG91dHB1dC50b1N0cmluZygnaGV4JykpO1xuICAgIH1cbn1cbmV4cG9ydHMudG9UeXBlID0gdG9UeXBlO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dHlwZXMuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@ethereumjs/common/node_modules/ethereumjs-util/dist.browser/types.js\n");

/***/ }),

/***/ "./node_modules/@metamask/eth-sig-util/dist/encryption.js":
/*!****************************************************************!*\
  !*** ./node_modules/@metamask/eth-sig-util/dist/encryption.js ***!
  \****************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"./node_modules/buffer/index.js\")[\"Buffer\"];\n\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.getEncryptionPublicKey = exports.decryptSafely = exports.decrypt = exports.encryptSafely = exports.encrypt = void 0;\nconst nacl = __importStar(__webpack_require__(/*! tweetnacl */ \"./node_modules/@metamask/eth-sig-util/node_modules/tweetnacl/nacl-fast.js\"));\nconst naclUtil = __importStar(__webpack_require__(/*! tweetnacl-util */ \"./node_modules/tweetnacl-util/nacl-util.js\"));\nconst utils_1 = __webpack_require__(/*! ./utils */ \"./node_modules/@metamask/eth-sig-util/dist/utils.js\");\n/**\n * Encrypt a message.\n *\n * @param options - The encryption options.\n * @param options.publicKey - The public key of the message recipient.\n * @param options.data - The message data.\n * @param options.version - The type of encryption to use.\n * @returns The encrypted data.\n */\nfunction encrypt({ publicKey, data, version, }) {\n    if (utils_1.isNullish(publicKey)) {\n        throw new Error('Missing publicKey parameter');\n    }\n    else if (utils_1.isNullish(data)) {\n        throw new Error('Missing data parameter');\n    }\n    else if (utils_1.isNullish(version)) {\n        throw new Error('Missing version parameter');\n    }\n    switch (version) {\n        case 'x25519-xsalsa20-poly1305': {\n            if (typeof data !== 'string') {\n                throw new Error('Message data must be given as a string');\n            }\n            // generate ephemeral keypair\n            const ephemeralKeyPair = nacl.box.keyPair();\n            // assemble encryption parameters - from string to UInt8\n            let pubKeyUInt8Array;\n            try {\n                pubKeyUInt8Array = naclUtil.decodeBase64(publicKey);\n            }\n            catch (err) {\n                throw new Error('Bad public key');\n            }\n            const msgParamsUInt8Array = naclUtil.decodeUTF8(data);\n            const nonce = nacl.randomBytes(nacl.box.nonceLength);\n            // encrypt\n            const encryptedMessage = nacl.box(msgParamsUInt8Array, nonce, pubKeyUInt8Array, ephemeralKeyPair.secretKey);\n            // handle encrypted data\n            const output = {\n                version: 'x25519-xsalsa20-poly1305',\n                nonce: naclUtil.encodeBase64(nonce),\n                ephemPublicKey: naclUtil.encodeBase64(ephemeralKeyPair.publicKey),\n                ciphertext: naclUtil.encodeBase64(encryptedMessage),\n            };\n            // return encrypted msg data\n            return output;\n        }\n        default:\n            throw new Error('Encryption type/version not supported');\n    }\n}\nexports.encrypt = encrypt;\n/**\n * Encrypt a message in a way that obscures the message length.\n *\n * The message is padded to a multiple of 2048 before being encrypted so that the length of the\n * resulting encrypted message can't be used to guess the exact length of the original message.\n *\n * @param options - The encryption options.\n * @param options.publicKey - The public key of the message recipient.\n * @param options.data - The message data.\n * @param options.version - The type of encryption to use.\n * @returns The encrypted data.\n */\nfunction encryptSafely({ publicKey, data, version, }) {\n    if (utils_1.isNullish(publicKey)) {\n        throw new Error('Missing publicKey parameter');\n    }\n    else if (utils_1.isNullish(data)) {\n        throw new Error('Missing data parameter');\n    }\n    else if (utils_1.isNullish(version)) {\n        throw new Error('Missing version parameter');\n    }\n    const DEFAULT_PADDING_LENGTH = 2 ** 11;\n    const NACL_EXTRA_BYTES = 16;\n    if (typeof data === 'object' && 'toJSON' in data) {\n        // remove toJSON attack vector\n        // TODO, check all possible children\n        throw new Error('Cannot encrypt with toJSON property.  Please remove toJSON property');\n    }\n    // add padding\n    const dataWithPadding = {\n        data,\n        padding: '',\n    };\n    // calculate padding\n    const dataLength = Buffer.byteLength(JSON.stringify(dataWithPadding), 'utf-8');\n    const modVal = dataLength % DEFAULT_PADDING_LENGTH;\n    let padLength = 0;\n    // Only pad if necessary\n    if (modVal > 0) {\n        padLength = DEFAULT_PADDING_LENGTH - modVal - NACL_EXTRA_BYTES; // nacl extra bytes\n    }\n    dataWithPadding.padding = '0'.repeat(padLength);\n    const paddedMessage = JSON.stringify(dataWithPadding);\n    return encrypt({ publicKey, data: paddedMessage, version });\n}\nexports.encryptSafely = encryptSafely;\n/**\n * Decrypt a message.\n *\n * @param options - The decryption options.\n * @param options.encryptedData - The encrypted data.\n * @param options.privateKey - The private key to decrypt with.\n * @returns The decrypted message.\n */\nfunction decrypt({ encryptedData, privateKey, }) {\n    if (utils_1.isNullish(encryptedData)) {\n        throw new Error('Missing encryptedData parameter');\n    }\n    else if (utils_1.isNullish(privateKey)) {\n        throw new Error('Missing privateKey parameter');\n    }\n    switch (encryptedData.version) {\n        case 'x25519-xsalsa20-poly1305': {\n            // string to buffer to UInt8Array\n            const recieverPrivateKeyUint8Array = nacl_decodeHex(privateKey);\n            const recieverEncryptionPrivateKey = nacl.box.keyPair.fromSecretKey(recieverPrivateKeyUint8Array).secretKey;\n            // assemble decryption parameters\n            const nonce = naclUtil.decodeBase64(encryptedData.nonce);\n            const ciphertext = naclUtil.decodeBase64(encryptedData.ciphertext);\n            const ephemPublicKey = naclUtil.decodeBase64(encryptedData.ephemPublicKey);\n            // decrypt\n            const decryptedMessage = nacl.box.open(ciphertext, nonce, ephemPublicKey, recieverEncryptionPrivateKey);\n            // return decrypted msg data\n            let output;\n            try {\n                output = naclUtil.encodeUTF8(decryptedMessage);\n            }\n            catch (err) {\n                throw new Error('Decryption failed.');\n            }\n            if (output) {\n                return output;\n            }\n            throw new Error('Decryption failed.');\n        }\n        default:\n            throw new Error('Encryption type/version not supported.');\n    }\n}\nexports.decrypt = decrypt;\n/**\n * Decrypt a message that has been encrypted using `encryptSafely`.\n *\n * @param options - The decryption options.\n * @param options.encryptedData - The encrypted data.\n * @param options.privateKey - The private key to decrypt with.\n * @returns The decrypted message.\n */\nfunction decryptSafely({ encryptedData, privateKey, }) {\n    if (utils_1.isNullish(encryptedData)) {\n        throw new Error('Missing encryptedData parameter');\n    }\n    else if (utils_1.isNullish(privateKey)) {\n        throw new Error('Missing privateKey parameter');\n    }\n    const dataWithPadding = JSON.parse(decrypt({ encryptedData, privateKey }));\n    return dataWithPadding.data;\n}\nexports.decryptSafely = decryptSafely;\n/**\n * Get the encryption public key for the given key.\n *\n * @param privateKey - The private key to generate the encryption public key with.\n * @returns The encryption public key.\n */\nfunction getEncryptionPublicKey(privateKey) {\n    const privateKeyUint8Array = nacl_decodeHex(privateKey);\n    const encryptionPublicKey = nacl.box.keyPair.fromSecretKey(privateKeyUint8Array).publicKey;\n    return naclUtil.encodeBase64(encryptionPublicKey);\n}\nexports.getEncryptionPublicKey = getEncryptionPublicKey;\n/**\n * Convert a hex string to the UInt8Array format used by nacl.\n *\n * @param msgHex - The string to convert.\n * @returns The converted string.\n */\nfunction nacl_decodeHex(msgHex) {\n    const msgBase64 = Buffer.from(msgHex, 'hex').toString('base64');\n    return naclUtil.decodeBase64(msgBase64);\n}\n//# sourceMappingURL=encryption.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@metamask/eth-sig-util/dist/encryption.js\n");

/***/ }),

/***/ "./node_modules/@metamask/eth-sig-util/dist/index.js":
/*!***********************************************************!*\
  !*** ./node_modules/@metamask/eth-sig-util/dist/index.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.normalize = exports.concatSig = void 0;\n__exportStar(__webpack_require__(/*! ./personal-sign */ \"./node_modules/@metamask/eth-sig-util/dist/personal-sign.js\"), exports);\n__exportStar(__webpack_require__(/*! ./sign-typed-data */ \"./node_modules/@metamask/eth-sig-util/dist/sign-typed-data.js\"), exports);\n__exportStar(__webpack_require__(/*! ./encryption */ \"./node_modules/@metamask/eth-sig-util/dist/encryption.js\"), exports);\nvar utils_1 = __webpack_require__(/*! ./utils */ \"./node_modules/@metamask/eth-sig-util/dist/utils.js\");\nObject.defineProperty(exports, \"concatSig\", ({ enumerable: true, get: function () { return utils_1.concatSig; } }));\nObject.defineProperty(exports, \"normalize\", ({ enumerable: true, get: function () { return utils_1.normalize; } }));\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG1ldGFtYXNrL2V0aC1zaWctdXRpbC9kaXN0L2luZGV4LmpzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBLG1DQUFtQyxvQ0FBb0MsZ0JBQWdCO0FBQ3ZGLENBQUM7QUFDRDtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxpQkFBaUIsR0FBRyxpQkFBaUI7QUFDckMsYUFBYSxtQkFBTyxDQUFDLG9GQUFpQjtBQUN0QyxhQUFhLG1CQUFPLENBQUMsd0ZBQW1CO0FBQ3hDLGFBQWEsbUJBQU8sQ0FBQyw4RUFBYztBQUNuQyxjQUFjLG1CQUFPLENBQUMsb0VBQVM7QUFDL0IsNkNBQTRDLEVBQUUscUNBQXFDLDZCQUE2QixFQUFDO0FBQ2pILDZDQUE0QyxFQUFFLHFDQUFxQyw2QkFBNkIsRUFBQztBQUNqSCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQG1ldGFtYXNrL2V0aC1zaWctdXRpbC9kaXN0L2luZGV4LmpzPzA4YzUiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19jcmVhdGVCaW5kaW5nID0gKHRoaXMgJiYgdGhpcy5fX2NyZWF0ZUJpbmRpbmcpIHx8IChPYmplY3QuY3JlYXRlID8gKGZ1bmN0aW9uKG8sIG0sIGssIGsyKSB7XG4gICAgaWYgKGsyID09PSB1bmRlZmluZWQpIGsyID0gaztcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkobywgazIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbigpIHsgcmV0dXJuIG1ba107IH0gfSk7XG59KSA6IChmdW5jdGlvbihvLCBtLCBrLCBrMikge1xuICAgIGlmIChrMiA9PT0gdW5kZWZpbmVkKSBrMiA9IGs7XG4gICAgb1trMl0gPSBtW2tdO1xufSkpO1xudmFyIF9fZXhwb3J0U3RhciA9ICh0aGlzICYmIHRoaXMuX19leHBvcnRTdGFyKSB8fCBmdW5jdGlvbihtLCBleHBvcnRzKSB7XG4gICAgZm9yICh2YXIgcCBpbiBtKSBpZiAocCAhPT0gXCJkZWZhdWx0XCIgJiYgIU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChleHBvcnRzLCBwKSkgX19jcmVhdGVCaW5kaW5nKGV4cG9ydHMsIG0sIHApO1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMubm9ybWFsaXplID0gZXhwb3J0cy5jb25jYXRTaWcgPSB2b2lkIDA7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vcGVyc29uYWwtc2lnblwiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vc2lnbi10eXBlZC1kYXRhXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9lbmNyeXB0aW9uXCIpLCBleHBvcnRzKTtcbnZhciB1dGlsc18xID0gcmVxdWlyZShcIi4vdXRpbHNcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJjb25jYXRTaWdcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHV0aWxzXzEuY29uY2F0U2lnOyB9IH0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwibm9ybWFsaXplXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiB1dGlsc18xLm5vcm1hbGl6ZTsgfSB9KTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@metamask/eth-sig-util/dist/index.js\n");

/***/ }),

/***/ "./node_modules/@metamask/eth-sig-util/dist/personal-sign.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@metamask/eth-sig-util/dist/personal-sign.js ***!
  \*******************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.extractPublicKey = exports.recoverPersonalSignature = exports.personalSign = void 0;\nconst ethereumjs_util_1 = __webpack_require__(/*! ethereumjs-util */ \"./node_modules/@metamask/eth-sig-util/node_modules/ethereumjs-util/dist/index.js\");\nconst utils_1 = __webpack_require__(/*! ./utils */ \"./node_modules/@metamask/eth-sig-util/dist/utils.js\");\n/**\n * Create an Ethereum-specific signature for a message.\n *\n * This function is equivalent to the `eth_sign` Ethereum JSON-RPC method as specified in EIP-1417,\n * as well as the MetaMask's `personal_sign` method.\n *\n * @param options - The personal sign options.\n * @param options.privateKey - The key to sign with.\n * @param options.data - The hex data to sign.\n * @returns The '0x'-prefixed hex encoded signature.\n */\nfunction personalSign({ privateKey, data, }) {\n    if (utils_1.isNullish(data)) {\n        throw new Error('Missing data parameter');\n    }\n    else if (utils_1.isNullish(privateKey)) {\n        throw new Error('Missing privateKey parameter');\n    }\n    const message = utils_1.legacyToBuffer(data);\n    const msgHash = ethereumjs_util_1.hashPersonalMessage(message);\n    const sig = ethereumjs_util_1.ecsign(msgHash, privateKey);\n    const serialized = utils_1.concatSig(ethereumjs_util_1.toBuffer(sig.v), sig.r, sig.s);\n    return serialized;\n}\nexports.personalSign = personalSign;\n/**\n * Recover the address of the account used to create the given Ethereum signature. The message\n * must have been signed using the `personalSign` function, or an equivalent function.\n *\n * @param options - The signature recovery options.\n * @param options.data - The hex data that was signed.\n * @param options.signature - The '0x'-prefixed hex encoded message signature.\n * @returns The '0x'-prefixed hex encoded address of the message signer.\n */\nfunction recoverPersonalSignature({ data, signature, }) {\n    if (utils_1.isNullish(data)) {\n        throw new Error('Missing data parameter');\n    }\n    else if (utils_1.isNullish(signature)) {\n        throw new Error('Missing signature parameter');\n    }\n    const publicKey = getPublicKeyFor(data, signature);\n    const sender = ethereumjs_util_1.publicToAddress(publicKey);\n    const senderHex = ethereumjs_util_1.bufferToHex(sender);\n    return senderHex;\n}\nexports.recoverPersonalSignature = recoverPersonalSignature;\n/**\n * Recover the public key of the account used to create the given Ethereum signature. The message\n * must have been signed using the `personalSign` function, or an equivalent function.\n *\n * @param options - The public key recovery options.\n * @param options.data - The hex data that was signed.\n * @param options.signature - The '0x'-prefixed hex encoded message signature.\n * @returns The '0x'-prefixed hex encoded public key of the message signer.\n */\nfunction extractPublicKey({ data, signature, }) {\n    if (utils_1.isNullish(data)) {\n        throw new Error('Missing data parameter');\n    }\n    else if (utils_1.isNullish(signature)) {\n        throw new Error('Missing signature parameter');\n    }\n    const publicKey = getPublicKeyFor(data, signature);\n    return `0x${publicKey.toString('hex')}`;\n}\nexports.extractPublicKey = extractPublicKey;\n/**\n * Get the public key for the given signature and message.\n *\n * @param message - The message that was signed.\n * @param signature - The '0x'-prefixed hex encoded message signature.\n * @returns The public key of the signer.\n */\nfunction getPublicKeyFor(message, signature) {\n    const messageHash = ethereumjs_util_1.hashPersonalMessage(utils_1.legacyToBuffer(message));\n    return utils_1.recoverPublicKey(messageHash, signature);\n}\n//# sourceMappingURL=personal-sign.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG1ldGFtYXNrL2V0aC1zaWctdXRpbC9kaXN0L3BlcnNvbmFsLXNpZ24uanMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsd0JBQXdCLEdBQUcsZ0NBQWdDLEdBQUcsb0JBQW9CO0FBQ2xGLDBCQUEwQixtQkFBTyxDQUFDLHlHQUFpQjtBQUNuRCxnQkFBZ0IsbUJBQU8sQ0FBQyxvRUFBUztBQUNqQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLG1CQUFtQjtBQUMzQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0I7QUFDcEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0NBQW9DLGtCQUFrQjtBQUN0RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0NBQWdDO0FBQ2hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRCQUE0QixrQkFBa0I7QUFDOUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IsMEJBQTBCO0FBQzFDO0FBQ0Esd0JBQXdCO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQG1ldGFtYXNrL2V0aC1zaWctdXRpbC9kaXN0L3BlcnNvbmFsLXNpZ24uanM/YzBmMCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuZXh0cmFjdFB1YmxpY0tleSA9IGV4cG9ydHMucmVjb3ZlclBlcnNvbmFsU2lnbmF0dXJlID0gZXhwb3J0cy5wZXJzb25hbFNpZ24gPSB2b2lkIDA7XG5jb25zdCBldGhlcmV1bWpzX3V0aWxfMSA9IHJlcXVpcmUoXCJldGhlcmV1bWpzLXV0aWxcIik7XG5jb25zdCB1dGlsc18xID0gcmVxdWlyZShcIi4vdXRpbHNcIik7XG4vKipcbiAqIENyZWF0ZSBhbiBFdGhlcmV1bS1zcGVjaWZpYyBzaWduYXR1cmUgZm9yIGEgbWVzc2FnZS5cbiAqXG4gKiBUaGlzIGZ1bmN0aW9uIGlzIGVxdWl2YWxlbnQgdG8gdGhlIGBldGhfc2lnbmAgRXRoZXJldW0gSlNPTi1SUEMgbWV0aG9kIGFzIHNwZWNpZmllZCBpbiBFSVAtMTQxNyxcbiAqIGFzIHdlbGwgYXMgdGhlIE1ldGFNYXNrJ3MgYHBlcnNvbmFsX3NpZ25gIG1ldGhvZC5cbiAqXG4gKiBAcGFyYW0gb3B0aW9ucyAtIFRoZSBwZXJzb25hbCBzaWduIG9wdGlvbnMuXG4gKiBAcGFyYW0gb3B0aW9ucy5wcml2YXRlS2V5IC0gVGhlIGtleSB0byBzaWduIHdpdGguXG4gKiBAcGFyYW0gb3B0aW9ucy5kYXRhIC0gVGhlIGhleCBkYXRhIHRvIHNpZ24uXG4gKiBAcmV0dXJucyBUaGUgJzB4Jy1wcmVmaXhlZCBoZXggZW5jb2RlZCBzaWduYXR1cmUuXG4gKi9cbmZ1bmN0aW9uIHBlcnNvbmFsU2lnbih7IHByaXZhdGVLZXksIGRhdGEsIH0pIHtcbiAgICBpZiAodXRpbHNfMS5pc051bGxpc2goZGF0YSkpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdNaXNzaW5nIGRhdGEgcGFyYW1ldGVyJyk7XG4gICAgfVxuICAgIGVsc2UgaWYgKHV0aWxzXzEuaXNOdWxsaXNoKHByaXZhdGVLZXkpKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignTWlzc2luZyBwcml2YXRlS2V5IHBhcmFtZXRlcicpO1xuICAgIH1cbiAgICBjb25zdCBtZXNzYWdlID0gdXRpbHNfMS5sZWdhY3lUb0J1ZmZlcihkYXRhKTtcbiAgICBjb25zdCBtc2dIYXNoID0gZXRoZXJldW1qc191dGlsXzEuaGFzaFBlcnNvbmFsTWVzc2FnZShtZXNzYWdlKTtcbiAgICBjb25zdCBzaWcgPSBldGhlcmV1bWpzX3V0aWxfMS5lY3NpZ24obXNnSGFzaCwgcHJpdmF0ZUtleSk7XG4gICAgY29uc3Qgc2VyaWFsaXplZCA9IHV0aWxzXzEuY29uY2F0U2lnKGV0aGVyZXVtanNfdXRpbF8xLnRvQnVmZmVyKHNpZy52KSwgc2lnLnIsIHNpZy5zKTtcbiAgICByZXR1cm4gc2VyaWFsaXplZDtcbn1cbmV4cG9ydHMucGVyc29uYWxTaWduID0gcGVyc29uYWxTaWduO1xuLyoqXG4gKiBSZWNvdmVyIHRoZSBhZGRyZXNzIG9mIHRoZSBhY2NvdW50IHVzZWQgdG8gY3JlYXRlIHRoZSBnaXZlbiBFdGhlcmV1bSBzaWduYXR1cmUuIFRoZSBtZXNzYWdlXG4gKiBtdXN0IGhhdmUgYmVlbiBzaWduZWQgdXNpbmcgdGhlIGBwZXJzb25hbFNpZ25gIGZ1bmN0aW9uLCBvciBhbiBlcXVpdmFsZW50IGZ1bmN0aW9uLlxuICpcbiAqIEBwYXJhbSBvcHRpb25zIC0gVGhlIHNpZ25hdHVyZSByZWNvdmVyeSBvcHRpb25zLlxuICogQHBhcmFtIG9wdGlvbnMuZGF0YSAtIFRoZSBoZXggZGF0YSB0aGF0IHdhcyBzaWduZWQuXG4gKiBAcGFyYW0gb3B0aW9ucy5zaWduYXR1cmUgLSBUaGUgJzB4Jy1wcmVmaXhlZCBoZXggZW5jb2RlZCBtZXNzYWdlIHNpZ25hdHVyZS5cbiAqIEByZXR1cm5zIFRoZSAnMHgnLXByZWZpeGVkIGhleCBlbmNvZGVkIGFkZHJlc3Mgb2YgdGhlIG1lc3NhZ2Ugc2lnbmVyLlxuICovXG5mdW5jdGlvbiByZWNvdmVyUGVyc29uYWxTaWduYXR1cmUoeyBkYXRhLCBzaWduYXR1cmUsIH0pIHtcbiAgICBpZiAodXRpbHNfMS5pc051bGxpc2goZGF0YSkpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdNaXNzaW5nIGRhdGEgcGFyYW1ldGVyJyk7XG4gICAgfVxuICAgIGVsc2UgaWYgKHV0aWxzXzEuaXNOdWxsaXNoKHNpZ25hdHVyZSkpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdNaXNzaW5nIHNpZ25hdHVyZSBwYXJhbWV0ZXInKTtcbiAgICB9XG4gICAgY29uc3QgcHVibGljS2V5ID0gZ2V0UHVibGljS2V5Rm9yKGRhdGEsIHNpZ25hdHVyZSk7XG4gICAgY29uc3Qgc2VuZGVyID0gZXRoZXJldW1qc191dGlsXzEucHVibGljVG9BZGRyZXNzKHB1YmxpY0tleSk7XG4gICAgY29uc3Qgc2VuZGVySGV4ID0gZXRoZXJldW1qc191dGlsXzEuYnVmZmVyVG9IZXgoc2VuZGVyKTtcbiAgICByZXR1cm4gc2VuZGVySGV4O1xufVxuZXhwb3J0cy5yZWNvdmVyUGVyc29uYWxTaWduYXR1cmUgPSByZWNvdmVyUGVyc29uYWxTaWduYXR1cmU7XG4vKipcbiAqIFJlY292ZXIgdGhlIHB1YmxpYyBrZXkgb2YgdGhlIGFjY291bnQgdXNlZCB0byBjcmVhdGUgdGhlIGdpdmVuIEV0aGVyZXVtIHNpZ25hdHVyZS4gVGhlIG1lc3NhZ2VcbiAqIG11c3QgaGF2ZSBiZWVuIHNpZ25lZCB1c2luZyB0aGUgYHBlcnNvbmFsU2lnbmAgZnVuY3Rpb24sIG9yIGFuIGVxdWl2YWxlbnQgZnVuY3Rpb24uXG4gKlxuICogQHBhcmFtIG9wdGlvbnMgLSBUaGUgcHVibGljIGtleSByZWNvdmVyeSBvcHRpb25zLlxuICogQHBhcmFtIG9wdGlvbnMuZGF0YSAtIFRoZSBoZXggZGF0YSB0aGF0IHdhcyBzaWduZWQuXG4gKiBAcGFyYW0gb3B0aW9ucy5zaWduYXR1cmUgLSBUaGUgJzB4Jy1wcmVmaXhlZCBoZXggZW5jb2RlZCBtZXNzYWdlIHNpZ25hdHVyZS5cbiAqIEByZXR1cm5zIFRoZSAnMHgnLXByZWZpeGVkIGhleCBlbmNvZGVkIHB1YmxpYyBrZXkgb2YgdGhlIG1lc3NhZ2Ugc2lnbmVyLlxuICovXG5mdW5jdGlvbiBleHRyYWN0UHVibGljS2V5KHsgZGF0YSwgc2lnbmF0dXJlLCB9KSB7XG4gICAgaWYgKHV0aWxzXzEuaXNOdWxsaXNoKGRhdGEpKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignTWlzc2luZyBkYXRhIHBhcmFtZXRlcicpO1xuICAgIH1cbiAgICBlbHNlIGlmICh1dGlsc18xLmlzTnVsbGlzaChzaWduYXR1cmUpKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignTWlzc2luZyBzaWduYXR1cmUgcGFyYW1ldGVyJyk7XG4gICAgfVxuICAgIGNvbnN0IHB1YmxpY0tleSA9IGdldFB1YmxpY0tleUZvcihkYXRhLCBzaWduYXR1cmUpO1xuICAgIHJldHVybiBgMHgke3B1YmxpY0tleS50b1N0cmluZygnaGV4Jyl9YDtcbn1cbmV4cG9ydHMuZXh0cmFjdFB1YmxpY0tleSA9IGV4dHJhY3RQdWJsaWNLZXk7XG4vKipcbiAqIEdldCB0aGUgcHVibGljIGtleSBmb3IgdGhlIGdpdmVuIHNpZ25hdHVyZSBhbmQgbWVzc2FnZS5cbiAqXG4gKiBAcGFyYW0gbWVzc2FnZSAtIFRoZSBtZXNzYWdlIHRoYXQgd2FzIHNpZ25lZC5cbiAqIEBwYXJhbSBzaWduYXR1cmUgLSBUaGUgJzB4Jy1wcmVmaXhlZCBoZXggZW5jb2RlZCBtZXNzYWdlIHNpZ25hdHVyZS5cbiAqIEByZXR1cm5zIFRoZSBwdWJsaWMga2V5IG9mIHRoZSBzaWduZXIuXG4gKi9cbmZ1bmN0aW9uIGdldFB1YmxpY0tleUZvcihtZXNzYWdlLCBzaWduYXR1cmUpIHtcbiAgICBjb25zdCBtZXNzYWdlSGFzaCA9IGV0aGVyZXVtanNfdXRpbF8xLmhhc2hQZXJzb25hbE1lc3NhZ2UodXRpbHNfMS5sZWdhY3lUb0J1ZmZlcihtZXNzYWdlKSk7XG4gICAgcmV0dXJuIHV0aWxzXzEucmVjb3ZlclB1YmxpY0tleShtZXNzYWdlSGFzaCwgc2lnbmF0dXJlKTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXBlcnNvbmFsLXNpZ24uanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@metamask/eth-sig-util/dist/personal-sign.js\n");

/***/ }),

/***/ "./node_modules/@metamask/eth-sig-util/dist/sign-typed-data.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@metamask/eth-sig-util/dist/sign-typed-data.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"./node_modules/buffer/index.js\")[\"Buffer\"];\n\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.recoverTypedSignature = exports.signTypedData = exports.typedSignatureHash = exports.TypedDataUtils = exports.TYPED_MESSAGE_SCHEMA = exports.SignTypedDataVersion = void 0;\nconst ethereumjs_util_1 = __webpack_require__(/*! ethereumjs-util */ \"./node_modules/@metamask/eth-sig-util/node_modules/ethereumjs-util/dist/index.js\");\nconst ethereumjs_abi_1 = __webpack_require__(/*! ethereumjs-abi */ \"./node_modules/ethereumjs-abi/index.js\");\nconst utils_1 = __webpack_require__(/*! ./utils */ \"./node_modules/@metamask/eth-sig-util/dist/utils.js\");\n/**\n * Represents the version of `signTypedData` being used.\n *\n * V1 is based upon [an early version of EIP-712](https://github.com/ethereum/EIPs/pull/712/commits/21abe254fe0452d8583d5b132b1d7be87c0439ca)\n * that lacked some later security improvements, and should generally be neglected in favor of\n * later versions.\n *\n * V3 is based on EIP-712, except that arrays and recursive data structures are not supported.\n *\n * V4 is based on EIP-712, and includes full support of arrays and recursive data structures.\n */\nvar SignTypedDataVersion;\n(function (SignTypedDataVersion) {\n    SignTypedDataVersion[\"V1\"] = \"V1\";\n    SignTypedDataVersion[\"V3\"] = \"V3\";\n    SignTypedDataVersion[\"V4\"] = \"V4\";\n})(SignTypedDataVersion = exports.SignTypedDataVersion || (exports.SignTypedDataVersion = {}));\nexports.TYPED_MESSAGE_SCHEMA = {\n    type: 'object',\n    properties: {\n        types: {\n            type: 'object',\n            additionalProperties: {\n                type: 'array',\n                items: {\n                    type: 'object',\n                    properties: {\n                        name: { type: 'string' },\n                        type: { type: 'string' },\n                    },\n                    required: ['name', 'type'],\n                },\n            },\n        },\n        primaryType: { type: 'string' },\n        domain: { type: 'object' },\n        message: { type: 'object' },\n    },\n    required: ['types', 'primaryType', 'domain', 'message'],\n};\n/**\n * Validate that the given value is a valid version string.\n *\n * @param version - The version value to validate.\n * @param allowedVersions - A list of allowed versions. If omitted, all versions are assumed to be\n * allowed.\n */\nfunction validateVersion(version, allowedVersions) {\n    if (!Object.keys(SignTypedDataVersion).includes(version)) {\n        throw new Error(`Invalid version: '${version}'`);\n    }\n    else if (allowedVersions && !allowedVersions.includes(version)) {\n        throw new Error(`SignTypedDataVersion not allowed: '${version}'. Allowed versions are: ${allowedVersions.join(', ')}`);\n    }\n}\n/**\n * Encode a single field.\n *\n * @param types - All type definitions.\n * @param name - The name of the field to encode.\n * @param type - The type of the field being encoded.\n * @param value - The value to encode.\n * @param version - The EIP-712 version the encoding should comply with.\n * @returns Encoded representation of the field.\n */\nfunction encodeField(types, name, type, value, version) {\n    validateVersion(version, [SignTypedDataVersion.V3, SignTypedDataVersion.V4]);\n    if (types[type] !== undefined) {\n        return [\n            'bytes32',\n            version === SignTypedDataVersion.V4 && value == null // eslint-disable-line no-eq-null\n                ? '0x0000000000000000000000000000000000000000000000000000000000000000'\n                : ethereumjs_util_1.keccak(encodeData(type, value, types, version)),\n        ];\n    }\n    if (value === undefined) {\n        throw new Error(`missing value for field ${name} of type ${type}`);\n    }\n    if (type === 'bytes') {\n        return ['bytes32', ethereumjs_util_1.keccak(value)];\n    }\n    if (type === 'string') {\n        // convert string to buffer - prevents ethUtil from interpreting strings like '0xabcd' as hex\n        if (typeof value === 'string') {\n            value = Buffer.from(value, 'utf8');\n        }\n        return ['bytes32', ethereumjs_util_1.keccak(value)];\n    }\n    if (type.lastIndexOf(']') === type.length - 1) {\n        if (version === SignTypedDataVersion.V3) {\n            throw new Error('Arrays are unimplemented in encodeData; use V4 extension');\n        }\n        const parsedType = type.slice(0, type.lastIndexOf('['));\n        const typeValuePairs = value.map((item) => encodeField(types, name, parsedType, item, version));\n        return [\n            'bytes32',\n            ethereumjs_util_1.keccak(ethereumjs_abi_1.rawEncode(typeValuePairs.map(([t]) => t), typeValuePairs.map(([, v]) => v))),\n        ];\n    }\n    return [type, value];\n}\n/**\n * Encodes an object by encoding and concatenating each of its members.\n *\n * @param primaryType - The root type.\n * @param data - The object to encode.\n * @param types - Type definitions for all types included in the message.\n * @param version - The EIP-712 version the encoding should comply with.\n * @returns An encoded representation of an object.\n */\nfunction encodeData(primaryType, data, types, version) {\n    validateVersion(version, [SignTypedDataVersion.V3, SignTypedDataVersion.V4]);\n    const encodedTypes = ['bytes32'];\n    const encodedValues = [hashType(primaryType, types)];\n    for (const field of types[primaryType]) {\n        if (version === SignTypedDataVersion.V3 && data[field.name] === undefined) {\n            continue;\n        }\n        const [type, value] = encodeField(types, field.name, field.type, data[field.name], version);\n        encodedTypes.push(type);\n        encodedValues.push(value);\n    }\n    return ethereumjs_abi_1.rawEncode(encodedTypes, encodedValues);\n}\n/**\n * Encodes the type of an object by encoding a comma delimited list of its members.\n *\n * @param primaryType - The root type to encode.\n * @param types - Type definitions for all types included in the message.\n * @returns An encoded representation of the primary type.\n */\nfunction encodeType(primaryType, types) {\n    let result = '';\n    const unsortedDeps = findTypeDependencies(primaryType, types);\n    unsortedDeps.delete(primaryType);\n    const deps = [primaryType, ...Array.from(unsortedDeps).sort()];\n    for (const type of deps) {\n        const children = types[type];\n        if (!children) {\n            throw new Error(`No type definition specified: ${type}`);\n        }\n        result += `${type}(${types[type]\n            .map(({ name, type: t }) => `${t} ${name}`)\n            .join(',')})`;\n    }\n    return result;\n}\n/**\n * Finds all types within a type definition object.\n *\n * @param primaryType - The root type.\n * @param types - Type definitions for all types included in the message.\n * @param results - The current set of accumulated types.\n * @returns The set of all types found in the type definition.\n */\nfunction findTypeDependencies(primaryType, types, results = new Set()) {\n    [primaryType] = primaryType.match(/^\\w*/u);\n    if (results.has(primaryType) || types[primaryType] === undefined) {\n        return results;\n    }\n    results.add(primaryType);\n    for (const field of types[primaryType]) {\n        findTypeDependencies(field.type, types, results);\n    }\n    return results;\n}\n/**\n * Hashes an object.\n *\n * @param primaryType - The root type.\n * @param data - The object to hash.\n * @param types - Type definitions for all types included in the message.\n * @param version - The EIP-712 version the encoding should comply with.\n * @returns The hash of the object.\n */\nfunction hashStruct(primaryType, data, types, version) {\n    validateVersion(version, [SignTypedDataVersion.V3, SignTypedDataVersion.V4]);\n    return ethereumjs_util_1.keccak(encodeData(primaryType, data, types, version));\n}\n/**\n * Hashes the type of an object.\n *\n * @param primaryType - The root type to hash.\n * @param types - Type definitions for all types included in the message.\n * @returns The hash of the object type.\n */\nfunction hashType(primaryType, types) {\n    return ethereumjs_util_1.keccak(encodeType(primaryType, types));\n}\n/**\n * Removes properties from a message object that are not defined per EIP-712.\n *\n * @param data - The typed message object.\n * @returns The typed message object with only allowed fields.\n */\nfunction sanitizeData(data) {\n    const sanitizedData = {};\n    for (const key in exports.TYPED_MESSAGE_SCHEMA.properties) {\n        if (data[key]) {\n            sanitizedData[key] = data[key];\n        }\n    }\n    if ('types' in sanitizedData) {\n        sanitizedData.types = Object.assign({ EIP712Domain: [] }, sanitizedData.types);\n    }\n    return sanitizedData;\n}\n/**\n * Hash a typed message according to EIP-712. The returned message starts with the EIP-712 prefix,\n * which is \"1901\", followed by the hash of the domain separator, then the data (if any).\n * The result is hashed again and returned.\n *\n * This function does not sign the message. The resulting hash must still be signed to create an\n * EIP-712 signature.\n *\n * @param typedData - The typed message to hash.\n * @param version - The EIP-712 version the encoding should comply with.\n * @returns The hash of the typed message.\n */\nfunction eip712Hash(typedData, version) {\n    validateVersion(version, [SignTypedDataVersion.V3, SignTypedDataVersion.V4]);\n    const sanitizedData = sanitizeData(typedData);\n    const parts = [Buffer.from('1901', 'hex')];\n    parts.push(hashStruct('EIP712Domain', sanitizedData.domain, sanitizedData.types, version));\n    if (sanitizedData.primaryType !== 'EIP712Domain') {\n        parts.push(hashStruct(\n        // TODO: Validate that this is a string, so this type cast can be removed.\n        sanitizedData.primaryType, sanitizedData.message, sanitizedData.types, version));\n    }\n    return ethereumjs_util_1.keccak(Buffer.concat(parts));\n}\n/**\n * A collection of utility functions used for signing typed data.\n */\nexports.TypedDataUtils = {\n    encodeData,\n    encodeType,\n    findTypeDependencies,\n    hashStruct,\n    hashType,\n    sanitizeData,\n    eip712Hash,\n};\n/**\n * Generate the \"V1\" hash for the provided typed message.\n *\n * The hash will be generated in accordance with an earlier version of the EIP-712\n * specification. This hash is used in `signTypedData_v1`.\n *\n * @param typedData - The typed message.\n * @returns The '0x'-prefixed hex encoded hash representing the type of the provided message.\n */\nfunction typedSignatureHash(typedData) {\n    const hashBuffer = _typedSignatureHash(typedData);\n    return ethereumjs_util_1.bufferToHex(hashBuffer);\n}\nexports.typedSignatureHash = typedSignatureHash;\n/**\n * Generate the \"V1\" hash for the provided typed message.\n *\n * The hash will be generated in accordance with an earlier version of the EIP-712\n * specification. This hash is used in `signTypedData_v1`.\n *\n * @param typedData - The typed message.\n * @returns The hash representing the type of the provided message.\n */\nfunction _typedSignatureHash(typedData) {\n    const error = new Error('Expect argument to be non-empty array');\n    if (typeof typedData !== 'object' ||\n        !('length' in typedData) ||\n        !typedData.length) {\n        throw error;\n    }\n    const data = typedData.map(function (e) {\n        if (e.type !== 'bytes') {\n            return e.value;\n        }\n        return utils_1.legacyToBuffer(e.value);\n    });\n    const types = typedData.map(function (e) {\n        return e.type;\n    });\n    const schema = typedData.map(function (e) {\n        if (!e.name) {\n            throw error;\n        }\n        return `${e.type} ${e.name}`;\n    });\n    return ethereumjs_abi_1.soliditySHA3(['bytes32', 'bytes32'], [\n        ethereumjs_abi_1.soliditySHA3(new Array(typedData.length).fill('string'), schema),\n        ethereumjs_abi_1.soliditySHA3(types, data),\n    ]);\n}\n/**\n * Sign typed data according to EIP-712. The signing differs based upon the `version`.\n *\n * V1 is based upon [an early version of EIP-712](https://github.com/ethereum/EIPs/pull/712/commits/21abe254fe0452d8583d5b132b1d7be87c0439ca)\n * that lacked some later security improvements, and should generally be neglected in favor of\n * later versions.\n *\n * V3 is based on [EIP-712](https://eips.ethereum.org/EIPS/eip-712), except that arrays and\n * recursive data structures are not supported.\n *\n * V4 is based on [EIP-712](https://eips.ethereum.org/EIPS/eip-712), and includes full support of\n * arrays and recursive data structures.\n *\n * @param options - The signing options.\n * @param options.privateKey - The private key to sign with.\n * @param options.data - The typed data to sign.\n * @param options.version - The signing version to use.\n * @returns The '0x'-prefixed hex encoded signature.\n */\nfunction signTypedData({ privateKey, data, version, }) {\n    validateVersion(version);\n    if (utils_1.isNullish(data)) {\n        throw new Error('Missing data parameter');\n    }\n    else if (utils_1.isNullish(privateKey)) {\n        throw new Error('Missing private key parameter');\n    }\n    const messageHash = version === SignTypedDataVersion.V1\n        ? _typedSignatureHash(data)\n        : exports.TypedDataUtils.eip712Hash(data, version);\n    const sig = ethereumjs_util_1.ecsign(messageHash, privateKey);\n    return utils_1.concatSig(ethereumjs_util_1.toBuffer(sig.v), sig.r, sig.s);\n}\nexports.signTypedData = signTypedData;\n/**\n * Recover the address of the account that created the given EIP-712\n * signature. The version provided must match the version used to\n * create the signature.\n *\n * @param options - The signature recovery options.\n * @param options.data - The typed data that was signed.\n * @param options.signature - The '0x-prefixed hex encoded message signature.\n * @param options.version - The signing version to use.\n * @returns The '0x'-prefixed hex address of the signer.\n */\nfunction recoverTypedSignature({ data, signature, version, }) {\n    validateVersion(version);\n    if (utils_1.isNullish(data)) {\n        throw new Error('Missing data parameter');\n    }\n    else if (utils_1.isNullish(signature)) {\n        throw new Error('Missing signature parameter');\n    }\n    const messageHash = version === SignTypedDataVersion.V1\n        ? _typedSignatureHash(data)\n        : exports.TypedDataUtils.eip712Hash(data, version);\n    const publicKey = utils_1.recoverPublicKey(messageHash, signature);\n    const sender = ethereumjs_util_1.publicToAddress(publicKey);\n    return ethereumjs_util_1.bufferToHex(sender);\n}\nexports.recoverTypedSignature = recoverTypedSignature;\n//# sourceMappingURL=sign-typed-data.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG1ldGFtYXNrL2V0aC1zaWctdXRpbC9kaXN0L3NpZ24tdHlwZWQtZGF0YS5qcy5qcyIsIm1hcHBpbmdzIjoiO0FBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsNkJBQTZCLEdBQUcscUJBQXFCLEdBQUcsMEJBQTBCLEdBQUcsc0JBQXNCLEdBQUcsNEJBQTRCLEdBQUcsNEJBQTRCO0FBQ3pLLDBCQUEwQixtQkFBTyxDQUFDLHlHQUFpQjtBQUNuRCx5QkFBeUIsbUJBQU8sQ0FBQyw4REFBZ0I7QUFDakQsZ0JBQWdCLG1CQUFPLENBQUMsb0VBQVM7QUFDakM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLDBEQUEwRCw0QkFBNEIsS0FBSztBQUM1Riw0QkFBNEI7QUFDNUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0NBQWdDLGdCQUFnQjtBQUNoRCxnQ0FBZ0MsZ0JBQWdCO0FBQ2hELHFCQUFxQjtBQUNyQjtBQUNBLGlCQUFpQjtBQUNqQixhQUFhO0FBQ2IsU0FBUztBQUNULHVCQUF1QixnQkFBZ0I7QUFDdkMsa0JBQWtCLGdCQUFnQjtBQUNsQyxtQkFBbUIsZ0JBQWdCO0FBQ25DLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkNBQTZDLFFBQVE7QUFDckQ7QUFDQTtBQUNBLDhEQUE4RCxRQUFRLDJCQUEyQiwyQkFBMkI7QUFDNUg7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1EQUFtRCxNQUFNLFVBQVUsS0FBSztBQUN4RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQixNQUFNO0FBQzFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxRUFBcUU7QUFDckU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkRBQTZELEtBQUs7QUFDbEU7QUFDQSxxQkFBcUIsS0FBSyxHQUFHO0FBQzdCLG9CQUFvQixlQUFlLFFBQVEsR0FBRyxFQUFFLEtBQUs7QUFDckQsdUJBQXVCO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4Q0FBOEMsa0JBQWtCO0FBQ2hFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQixNQUFNO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9DQUFvQyxNQUFNO0FBQzFDO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBCQUEwQjtBQUMxQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQixRQUFRLEVBQUUsT0FBTztBQUNuQyxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUJBQXlCLDRCQUE0QjtBQUNyRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQjtBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUNBQWlDLDJCQUEyQjtBQUM1RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkJBQTZCO0FBQzdCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AbWV0YW1hc2svZXRoLXNpZy11dGlsL2Rpc3Qvc2lnbi10eXBlZC1kYXRhLmpzPzBmMDgiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLnJlY292ZXJUeXBlZFNpZ25hdHVyZSA9IGV4cG9ydHMuc2lnblR5cGVkRGF0YSA9IGV4cG9ydHMudHlwZWRTaWduYXR1cmVIYXNoID0gZXhwb3J0cy5UeXBlZERhdGFVdGlscyA9IGV4cG9ydHMuVFlQRURfTUVTU0FHRV9TQ0hFTUEgPSBleHBvcnRzLlNpZ25UeXBlZERhdGFWZXJzaW9uID0gdm9pZCAwO1xuY29uc3QgZXRoZXJldW1qc191dGlsXzEgPSByZXF1aXJlKFwiZXRoZXJldW1qcy11dGlsXCIpO1xuY29uc3QgZXRoZXJldW1qc19hYmlfMSA9IHJlcXVpcmUoXCJldGhlcmV1bWpzLWFiaVwiKTtcbmNvbnN0IHV0aWxzXzEgPSByZXF1aXJlKFwiLi91dGlsc1wiKTtcbi8qKlxuICogUmVwcmVzZW50cyB0aGUgdmVyc2lvbiBvZiBgc2lnblR5cGVkRGF0YWAgYmVpbmcgdXNlZC5cbiAqXG4gKiBWMSBpcyBiYXNlZCB1cG9uIFthbiBlYXJseSB2ZXJzaW9uIG9mIEVJUC03MTJdKGh0dHBzOi8vZ2l0aHViLmNvbS9ldGhlcmV1bS9FSVBzL3B1bGwvNzEyL2NvbW1pdHMvMjFhYmUyNTRmZTA0NTJkODU4M2Q1YjEzMmIxZDdiZTg3YzA0MzljYSlcbiAqIHRoYXQgbGFja2VkIHNvbWUgbGF0ZXIgc2VjdXJpdHkgaW1wcm92ZW1lbnRzLCBhbmQgc2hvdWxkIGdlbmVyYWxseSBiZSBuZWdsZWN0ZWQgaW4gZmF2b3Igb2ZcbiAqIGxhdGVyIHZlcnNpb25zLlxuICpcbiAqIFYzIGlzIGJhc2VkIG9uIEVJUC03MTIsIGV4Y2VwdCB0aGF0IGFycmF5cyBhbmQgcmVjdXJzaXZlIGRhdGEgc3RydWN0dXJlcyBhcmUgbm90IHN1cHBvcnRlZC5cbiAqXG4gKiBWNCBpcyBiYXNlZCBvbiBFSVAtNzEyLCBhbmQgaW5jbHVkZXMgZnVsbCBzdXBwb3J0IG9mIGFycmF5cyBhbmQgcmVjdXJzaXZlIGRhdGEgc3RydWN0dXJlcy5cbiAqL1xudmFyIFNpZ25UeXBlZERhdGFWZXJzaW9uO1xuKGZ1bmN0aW9uIChTaWduVHlwZWREYXRhVmVyc2lvbikge1xuICAgIFNpZ25UeXBlZERhdGFWZXJzaW9uW1wiVjFcIl0gPSBcIlYxXCI7XG4gICAgU2lnblR5cGVkRGF0YVZlcnNpb25bXCJWM1wiXSA9IFwiVjNcIjtcbiAgICBTaWduVHlwZWREYXRhVmVyc2lvbltcIlY0XCJdID0gXCJWNFwiO1xufSkoU2lnblR5cGVkRGF0YVZlcnNpb24gPSBleHBvcnRzLlNpZ25UeXBlZERhdGFWZXJzaW9uIHx8IChleHBvcnRzLlNpZ25UeXBlZERhdGFWZXJzaW9uID0ge30pKTtcbmV4cG9ydHMuVFlQRURfTUVTU0FHRV9TQ0hFTUEgPSB7XG4gICAgdHlwZTogJ29iamVjdCcsXG4gICAgcHJvcGVydGllczoge1xuICAgICAgICB0eXBlczoge1xuICAgICAgICAgICAgdHlwZTogJ29iamVjdCcsXG4gICAgICAgICAgICBhZGRpdGlvbmFsUHJvcGVydGllczoge1xuICAgICAgICAgICAgICAgIHR5cGU6ICdhcnJheScsXG4gICAgICAgICAgICAgICAgaXRlbXM6IHtcbiAgICAgICAgICAgICAgICAgICAgdHlwZTogJ29iamVjdCcsXG4gICAgICAgICAgICAgICAgICAgIHByb3BlcnRpZXM6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6IHsgdHlwZTogJ3N0cmluZycgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU6IHsgdHlwZTogJ3N0cmluZycgfSxcbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgcmVxdWlyZWQ6IFsnbmFtZScsICd0eXBlJ10sXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIH0sXG4gICAgICAgIH0sXG4gICAgICAgIHByaW1hcnlUeXBlOiB7IHR5cGU6ICdzdHJpbmcnIH0sXG4gICAgICAgIGRvbWFpbjogeyB0eXBlOiAnb2JqZWN0JyB9LFxuICAgICAgICBtZXNzYWdlOiB7IHR5cGU6ICdvYmplY3QnIH0sXG4gICAgfSxcbiAgICByZXF1aXJlZDogWyd0eXBlcycsICdwcmltYXJ5VHlwZScsICdkb21haW4nLCAnbWVzc2FnZSddLFxufTtcbi8qKlxuICogVmFsaWRhdGUgdGhhdCB0aGUgZ2l2ZW4gdmFsdWUgaXMgYSB2YWxpZCB2ZXJzaW9uIHN0cmluZy5cbiAqXG4gKiBAcGFyYW0gdmVyc2lvbiAtIFRoZSB2ZXJzaW9uIHZhbHVlIHRvIHZhbGlkYXRlLlxuICogQHBhcmFtIGFsbG93ZWRWZXJzaW9ucyAtIEEgbGlzdCBvZiBhbGxvd2VkIHZlcnNpb25zLiBJZiBvbWl0dGVkLCBhbGwgdmVyc2lvbnMgYXJlIGFzc3VtZWQgdG8gYmVcbiAqIGFsbG93ZWQuXG4gKi9cbmZ1bmN0aW9uIHZhbGlkYXRlVmVyc2lvbih2ZXJzaW9uLCBhbGxvd2VkVmVyc2lvbnMpIHtcbiAgICBpZiAoIU9iamVjdC5rZXlzKFNpZ25UeXBlZERhdGFWZXJzaW9uKS5pbmNsdWRlcyh2ZXJzaW9uKSkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYEludmFsaWQgdmVyc2lvbjogJyR7dmVyc2lvbn0nYCk7XG4gICAgfVxuICAgIGVsc2UgaWYgKGFsbG93ZWRWZXJzaW9ucyAmJiAhYWxsb3dlZFZlcnNpb25zLmluY2x1ZGVzKHZlcnNpb24pKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihgU2lnblR5cGVkRGF0YVZlcnNpb24gbm90IGFsbG93ZWQ6ICcke3ZlcnNpb259Jy4gQWxsb3dlZCB2ZXJzaW9ucyBhcmU6ICR7YWxsb3dlZFZlcnNpb25zLmpvaW4oJywgJyl9YCk7XG4gICAgfVxufVxuLyoqXG4gKiBFbmNvZGUgYSBzaW5nbGUgZmllbGQuXG4gKlxuICogQHBhcmFtIHR5cGVzIC0gQWxsIHR5cGUgZGVmaW5pdGlvbnMuXG4gKiBAcGFyYW0gbmFtZSAtIFRoZSBuYW1lIG9mIHRoZSBmaWVsZCB0byBlbmNvZGUuXG4gKiBAcGFyYW0gdHlwZSAtIFRoZSB0eXBlIG9mIHRoZSBmaWVsZCBiZWluZyBlbmNvZGVkLlxuICogQHBhcmFtIHZhbHVlIC0gVGhlIHZhbHVlIHRvIGVuY29kZS5cbiAqIEBwYXJhbSB2ZXJzaW9uIC0gVGhlIEVJUC03MTIgdmVyc2lvbiB0aGUgZW5jb2Rpbmcgc2hvdWxkIGNvbXBseSB3aXRoLlxuICogQHJldHVybnMgRW5jb2RlZCByZXByZXNlbnRhdGlvbiBvZiB0aGUgZmllbGQuXG4gKi9cbmZ1bmN0aW9uIGVuY29kZUZpZWxkKHR5cGVzLCBuYW1lLCB0eXBlLCB2YWx1ZSwgdmVyc2lvbikge1xuICAgIHZhbGlkYXRlVmVyc2lvbih2ZXJzaW9uLCBbU2lnblR5cGVkRGF0YVZlcnNpb24uVjMsIFNpZ25UeXBlZERhdGFWZXJzaW9uLlY0XSk7XG4gICAgaWYgKHR5cGVzW3R5cGVdICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgcmV0dXJuIFtcbiAgICAgICAgICAgICdieXRlczMyJyxcbiAgICAgICAgICAgIHZlcnNpb24gPT09IFNpZ25UeXBlZERhdGFWZXJzaW9uLlY0ICYmIHZhbHVlID09IG51bGwgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby1lcS1udWxsXG4gICAgICAgICAgICAgICAgPyAnMHgwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwJ1xuICAgICAgICAgICAgICAgIDogZXRoZXJldW1qc191dGlsXzEua2VjY2FrKGVuY29kZURhdGEodHlwZSwgdmFsdWUsIHR5cGVzLCB2ZXJzaW9uKSksXG4gICAgICAgIF07XG4gICAgfVxuICAgIGlmICh2YWx1ZSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihgbWlzc2luZyB2YWx1ZSBmb3IgZmllbGQgJHtuYW1lfSBvZiB0eXBlICR7dHlwZX1gKTtcbiAgICB9XG4gICAgaWYgKHR5cGUgPT09ICdieXRlcycpIHtcbiAgICAgICAgcmV0dXJuIFsnYnl0ZXMzMicsIGV0aGVyZXVtanNfdXRpbF8xLmtlY2Nhayh2YWx1ZSldO1xuICAgIH1cbiAgICBpZiAodHlwZSA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgLy8gY29udmVydCBzdHJpbmcgdG8gYnVmZmVyIC0gcHJldmVudHMgZXRoVXRpbCBmcm9tIGludGVycHJldGluZyBzdHJpbmdzIGxpa2UgJzB4YWJjZCcgYXMgaGV4XG4gICAgICAgIGlmICh0eXBlb2YgdmFsdWUgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICB2YWx1ZSA9IEJ1ZmZlci5mcm9tKHZhbHVlLCAndXRmOCcpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBbJ2J5dGVzMzInLCBldGhlcmV1bWpzX3V0aWxfMS5rZWNjYWsodmFsdWUpXTtcbiAgICB9XG4gICAgaWYgKHR5cGUubGFzdEluZGV4T2YoJ10nKSA9PT0gdHlwZS5sZW5ndGggLSAxKSB7XG4gICAgICAgIGlmICh2ZXJzaW9uID09PSBTaWduVHlwZWREYXRhVmVyc2lvbi5WMykge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdBcnJheXMgYXJlIHVuaW1wbGVtZW50ZWQgaW4gZW5jb2RlRGF0YTsgdXNlIFY0IGV4dGVuc2lvbicpO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IHBhcnNlZFR5cGUgPSB0eXBlLnNsaWNlKDAsIHR5cGUubGFzdEluZGV4T2YoJ1snKSk7XG4gICAgICAgIGNvbnN0IHR5cGVWYWx1ZVBhaXJzID0gdmFsdWUubWFwKChpdGVtKSA9PiBlbmNvZGVGaWVsZCh0eXBlcywgbmFtZSwgcGFyc2VkVHlwZSwgaXRlbSwgdmVyc2lvbikpO1xuICAgICAgICByZXR1cm4gW1xuICAgICAgICAgICAgJ2J5dGVzMzInLFxuICAgICAgICAgICAgZXRoZXJldW1qc191dGlsXzEua2VjY2FrKGV0aGVyZXVtanNfYWJpXzEucmF3RW5jb2RlKHR5cGVWYWx1ZVBhaXJzLm1hcCgoW3RdKSA9PiB0KSwgdHlwZVZhbHVlUGFpcnMubWFwKChbLCB2XSkgPT4gdikpKSxcbiAgICAgICAgXTtcbiAgICB9XG4gICAgcmV0dXJuIFt0eXBlLCB2YWx1ZV07XG59XG4vKipcbiAqIEVuY29kZXMgYW4gb2JqZWN0IGJ5IGVuY29kaW5nIGFuZCBjb25jYXRlbmF0aW5nIGVhY2ggb2YgaXRzIG1lbWJlcnMuXG4gKlxuICogQHBhcmFtIHByaW1hcnlUeXBlIC0gVGhlIHJvb3QgdHlwZS5cbiAqIEBwYXJhbSBkYXRhIC0gVGhlIG9iamVjdCB0byBlbmNvZGUuXG4gKiBAcGFyYW0gdHlwZXMgLSBUeXBlIGRlZmluaXRpb25zIGZvciBhbGwgdHlwZXMgaW5jbHVkZWQgaW4gdGhlIG1lc3NhZ2UuXG4gKiBAcGFyYW0gdmVyc2lvbiAtIFRoZSBFSVAtNzEyIHZlcnNpb24gdGhlIGVuY29kaW5nIHNob3VsZCBjb21wbHkgd2l0aC5cbiAqIEByZXR1cm5zIEFuIGVuY29kZWQgcmVwcmVzZW50YXRpb24gb2YgYW4gb2JqZWN0LlxuICovXG5mdW5jdGlvbiBlbmNvZGVEYXRhKHByaW1hcnlUeXBlLCBkYXRhLCB0eXBlcywgdmVyc2lvbikge1xuICAgIHZhbGlkYXRlVmVyc2lvbih2ZXJzaW9uLCBbU2lnblR5cGVkRGF0YVZlcnNpb24uVjMsIFNpZ25UeXBlZERhdGFWZXJzaW9uLlY0XSk7XG4gICAgY29uc3QgZW5jb2RlZFR5cGVzID0gWydieXRlczMyJ107XG4gICAgY29uc3QgZW5jb2RlZFZhbHVlcyA9IFtoYXNoVHlwZShwcmltYXJ5VHlwZSwgdHlwZXMpXTtcbiAgICBmb3IgKGNvbnN0IGZpZWxkIG9mIHR5cGVzW3ByaW1hcnlUeXBlXSkge1xuICAgICAgICBpZiAodmVyc2lvbiA9PT0gU2lnblR5cGVkRGF0YVZlcnNpb24uVjMgJiYgZGF0YVtmaWVsZC5uYW1lXSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBbdHlwZSwgdmFsdWVdID0gZW5jb2RlRmllbGQodHlwZXMsIGZpZWxkLm5hbWUsIGZpZWxkLnR5cGUsIGRhdGFbZmllbGQubmFtZV0sIHZlcnNpb24pO1xuICAgICAgICBlbmNvZGVkVHlwZXMucHVzaCh0eXBlKTtcbiAgICAgICAgZW5jb2RlZFZhbHVlcy5wdXNoKHZhbHVlKTtcbiAgICB9XG4gICAgcmV0dXJuIGV0aGVyZXVtanNfYWJpXzEucmF3RW5jb2RlKGVuY29kZWRUeXBlcywgZW5jb2RlZFZhbHVlcyk7XG59XG4vKipcbiAqIEVuY29kZXMgdGhlIHR5cGUgb2YgYW4gb2JqZWN0IGJ5IGVuY29kaW5nIGEgY29tbWEgZGVsaW1pdGVkIGxpc3Qgb2YgaXRzIG1lbWJlcnMuXG4gKlxuICogQHBhcmFtIHByaW1hcnlUeXBlIC0gVGhlIHJvb3QgdHlwZSB0byBlbmNvZGUuXG4gKiBAcGFyYW0gdHlwZXMgLSBUeXBlIGRlZmluaXRpb25zIGZvciBhbGwgdHlwZXMgaW5jbHVkZWQgaW4gdGhlIG1lc3NhZ2UuXG4gKiBAcmV0dXJucyBBbiBlbmNvZGVkIHJlcHJlc2VudGF0aW9uIG9mIHRoZSBwcmltYXJ5IHR5cGUuXG4gKi9cbmZ1bmN0aW9uIGVuY29kZVR5cGUocHJpbWFyeVR5cGUsIHR5cGVzKSB7XG4gICAgbGV0IHJlc3VsdCA9ICcnO1xuICAgIGNvbnN0IHVuc29ydGVkRGVwcyA9IGZpbmRUeXBlRGVwZW5kZW5jaWVzKHByaW1hcnlUeXBlLCB0eXBlcyk7XG4gICAgdW5zb3J0ZWREZXBzLmRlbGV0ZShwcmltYXJ5VHlwZSk7XG4gICAgY29uc3QgZGVwcyA9IFtwcmltYXJ5VHlwZSwgLi4uQXJyYXkuZnJvbSh1bnNvcnRlZERlcHMpLnNvcnQoKV07XG4gICAgZm9yIChjb25zdCB0eXBlIG9mIGRlcHMpIHtcbiAgICAgICAgY29uc3QgY2hpbGRyZW4gPSB0eXBlc1t0eXBlXTtcbiAgICAgICAgaWYgKCFjaGlsZHJlbikge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBObyB0eXBlIGRlZmluaXRpb24gc3BlY2lmaWVkOiAke3R5cGV9YCk7XG4gICAgICAgIH1cbiAgICAgICAgcmVzdWx0ICs9IGAke3R5cGV9KCR7dHlwZXNbdHlwZV1cbiAgICAgICAgICAgIC5tYXAoKHsgbmFtZSwgdHlwZTogdCB9KSA9PiBgJHt0fSAke25hbWV9YClcbiAgICAgICAgICAgIC5qb2luKCcsJyl9KWA7XG4gICAgfVxuICAgIHJldHVybiByZXN1bHQ7XG59XG4vKipcbiAqIEZpbmRzIGFsbCB0eXBlcyB3aXRoaW4gYSB0eXBlIGRlZmluaXRpb24gb2JqZWN0LlxuICpcbiAqIEBwYXJhbSBwcmltYXJ5VHlwZSAtIFRoZSByb290IHR5cGUuXG4gKiBAcGFyYW0gdHlwZXMgLSBUeXBlIGRlZmluaXRpb25zIGZvciBhbGwgdHlwZXMgaW5jbHVkZWQgaW4gdGhlIG1lc3NhZ2UuXG4gKiBAcGFyYW0gcmVzdWx0cyAtIFRoZSBjdXJyZW50IHNldCBvZiBhY2N1bXVsYXRlZCB0eXBlcy5cbiAqIEByZXR1cm5zIFRoZSBzZXQgb2YgYWxsIHR5cGVzIGZvdW5kIGluIHRoZSB0eXBlIGRlZmluaXRpb24uXG4gKi9cbmZ1bmN0aW9uIGZpbmRUeXBlRGVwZW5kZW5jaWVzKHByaW1hcnlUeXBlLCB0eXBlcywgcmVzdWx0cyA9IG5ldyBTZXQoKSkge1xuICAgIFtwcmltYXJ5VHlwZV0gPSBwcmltYXJ5VHlwZS5tYXRjaCgvXlxcdyovdSk7XG4gICAgaWYgKHJlc3VsdHMuaGFzKHByaW1hcnlUeXBlKSB8fCB0eXBlc1twcmltYXJ5VHlwZV0gPT09IHVuZGVmaW5lZCkge1xuICAgICAgICByZXR1cm4gcmVzdWx0cztcbiAgICB9XG4gICAgcmVzdWx0cy5hZGQocHJpbWFyeVR5cGUpO1xuICAgIGZvciAoY29uc3QgZmllbGQgb2YgdHlwZXNbcHJpbWFyeVR5cGVdKSB7XG4gICAgICAgIGZpbmRUeXBlRGVwZW5kZW5jaWVzKGZpZWxkLnR5cGUsIHR5cGVzLCByZXN1bHRzKTtcbiAgICB9XG4gICAgcmV0dXJuIHJlc3VsdHM7XG59XG4vKipcbiAqIEhhc2hlcyBhbiBvYmplY3QuXG4gKlxuICogQHBhcmFtIHByaW1hcnlUeXBlIC0gVGhlIHJvb3QgdHlwZS5cbiAqIEBwYXJhbSBkYXRhIC0gVGhlIG9iamVjdCB0byBoYXNoLlxuICogQHBhcmFtIHR5cGVzIC0gVHlwZSBkZWZpbml0aW9ucyBmb3IgYWxsIHR5cGVzIGluY2x1ZGVkIGluIHRoZSBtZXNzYWdlLlxuICogQHBhcmFtIHZlcnNpb24gLSBUaGUgRUlQLTcxMiB2ZXJzaW9uIHRoZSBlbmNvZGluZyBzaG91bGQgY29tcGx5IHdpdGguXG4gKiBAcmV0dXJucyBUaGUgaGFzaCBvZiB0aGUgb2JqZWN0LlxuICovXG5mdW5jdGlvbiBoYXNoU3RydWN0KHByaW1hcnlUeXBlLCBkYXRhLCB0eXBlcywgdmVyc2lvbikge1xuICAgIHZhbGlkYXRlVmVyc2lvbih2ZXJzaW9uLCBbU2lnblR5cGVkRGF0YVZlcnNpb24uVjMsIFNpZ25UeXBlZERhdGFWZXJzaW9uLlY0XSk7XG4gICAgcmV0dXJuIGV0aGVyZXVtanNfdXRpbF8xLmtlY2NhayhlbmNvZGVEYXRhKHByaW1hcnlUeXBlLCBkYXRhLCB0eXBlcywgdmVyc2lvbikpO1xufVxuLyoqXG4gKiBIYXNoZXMgdGhlIHR5cGUgb2YgYW4gb2JqZWN0LlxuICpcbiAqIEBwYXJhbSBwcmltYXJ5VHlwZSAtIFRoZSByb290IHR5cGUgdG8gaGFzaC5cbiAqIEBwYXJhbSB0eXBlcyAtIFR5cGUgZGVmaW5pdGlvbnMgZm9yIGFsbCB0eXBlcyBpbmNsdWRlZCBpbiB0aGUgbWVzc2FnZS5cbiAqIEByZXR1cm5zIFRoZSBoYXNoIG9mIHRoZSBvYmplY3QgdHlwZS5cbiAqL1xuZnVuY3Rpb24gaGFzaFR5cGUocHJpbWFyeVR5cGUsIHR5cGVzKSB7XG4gICAgcmV0dXJuIGV0aGVyZXVtanNfdXRpbF8xLmtlY2NhayhlbmNvZGVUeXBlKHByaW1hcnlUeXBlLCB0eXBlcykpO1xufVxuLyoqXG4gKiBSZW1vdmVzIHByb3BlcnRpZXMgZnJvbSBhIG1lc3NhZ2Ugb2JqZWN0IHRoYXQgYXJlIG5vdCBkZWZpbmVkIHBlciBFSVAtNzEyLlxuICpcbiAqIEBwYXJhbSBkYXRhIC0gVGhlIHR5cGVkIG1lc3NhZ2Ugb2JqZWN0LlxuICogQHJldHVybnMgVGhlIHR5cGVkIG1lc3NhZ2Ugb2JqZWN0IHdpdGggb25seSBhbGxvd2VkIGZpZWxkcy5cbiAqL1xuZnVuY3Rpb24gc2FuaXRpemVEYXRhKGRhdGEpIHtcbiAgICBjb25zdCBzYW5pdGl6ZWREYXRhID0ge307XG4gICAgZm9yIChjb25zdCBrZXkgaW4gZXhwb3J0cy5UWVBFRF9NRVNTQUdFX1NDSEVNQS5wcm9wZXJ0aWVzKSB7XG4gICAgICAgIGlmIChkYXRhW2tleV0pIHtcbiAgICAgICAgICAgIHNhbml0aXplZERhdGFba2V5XSA9IGRhdGFba2V5XTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBpZiAoJ3R5cGVzJyBpbiBzYW5pdGl6ZWREYXRhKSB7XG4gICAgICAgIHNhbml0aXplZERhdGEudHlwZXMgPSBPYmplY3QuYXNzaWduKHsgRUlQNzEyRG9tYWluOiBbXSB9LCBzYW5pdGl6ZWREYXRhLnR5cGVzKTtcbiAgICB9XG4gICAgcmV0dXJuIHNhbml0aXplZERhdGE7XG59XG4vKipcbiAqIEhhc2ggYSB0eXBlZCBtZXNzYWdlIGFjY29yZGluZyB0byBFSVAtNzEyLiBUaGUgcmV0dXJuZWQgbWVzc2FnZSBzdGFydHMgd2l0aCB0aGUgRUlQLTcxMiBwcmVmaXgsXG4gKiB3aGljaCBpcyBcIjE5MDFcIiwgZm9sbG93ZWQgYnkgdGhlIGhhc2ggb2YgdGhlIGRvbWFpbiBzZXBhcmF0b3IsIHRoZW4gdGhlIGRhdGEgKGlmIGFueSkuXG4gKiBUaGUgcmVzdWx0IGlzIGhhc2hlZCBhZ2FpbiBhbmQgcmV0dXJuZWQuXG4gKlxuICogVGhpcyBmdW5jdGlvbiBkb2VzIG5vdCBzaWduIHRoZSBtZXNzYWdlLiBUaGUgcmVzdWx0aW5nIGhhc2ggbXVzdCBzdGlsbCBiZSBzaWduZWQgdG8gY3JlYXRlIGFuXG4gKiBFSVAtNzEyIHNpZ25hdHVyZS5cbiAqXG4gKiBAcGFyYW0gdHlwZWREYXRhIC0gVGhlIHR5cGVkIG1lc3NhZ2UgdG8gaGFzaC5cbiAqIEBwYXJhbSB2ZXJzaW9uIC0gVGhlIEVJUC03MTIgdmVyc2lvbiB0aGUgZW5jb2Rpbmcgc2hvdWxkIGNvbXBseSB3aXRoLlxuICogQHJldHVybnMgVGhlIGhhc2ggb2YgdGhlIHR5cGVkIG1lc3NhZ2UuXG4gKi9cbmZ1bmN0aW9uIGVpcDcxMkhhc2godHlwZWREYXRhLCB2ZXJzaW9uKSB7XG4gICAgdmFsaWRhdGVWZXJzaW9uKHZlcnNpb24sIFtTaWduVHlwZWREYXRhVmVyc2lvbi5WMywgU2lnblR5cGVkRGF0YVZlcnNpb24uVjRdKTtcbiAgICBjb25zdCBzYW5pdGl6ZWREYXRhID0gc2FuaXRpemVEYXRhKHR5cGVkRGF0YSk7XG4gICAgY29uc3QgcGFydHMgPSBbQnVmZmVyLmZyb20oJzE5MDEnLCAnaGV4JyldO1xuICAgIHBhcnRzLnB1c2goaGFzaFN0cnVjdCgnRUlQNzEyRG9tYWluJywgc2FuaXRpemVkRGF0YS5kb21haW4sIHNhbml0aXplZERhdGEudHlwZXMsIHZlcnNpb24pKTtcbiAgICBpZiAoc2FuaXRpemVkRGF0YS5wcmltYXJ5VHlwZSAhPT0gJ0VJUDcxMkRvbWFpbicpIHtcbiAgICAgICAgcGFydHMucHVzaChoYXNoU3RydWN0KFxuICAgICAgICAvLyBUT0RPOiBWYWxpZGF0ZSB0aGF0IHRoaXMgaXMgYSBzdHJpbmcsIHNvIHRoaXMgdHlwZSBjYXN0IGNhbiBiZSByZW1vdmVkLlxuICAgICAgICBzYW5pdGl6ZWREYXRhLnByaW1hcnlUeXBlLCBzYW5pdGl6ZWREYXRhLm1lc3NhZ2UsIHNhbml0aXplZERhdGEudHlwZXMsIHZlcnNpb24pKTtcbiAgICB9XG4gICAgcmV0dXJuIGV0aGVyZXVtanNfdXRpbF8xLmtlY2NhayhCdWZmZXIuY29uY2F0KHBhcnRzKSk7XG59XG4vKipcbiAqIEEgY29sbGVjdGlvbiBvZiB1dGlsaXR5IGZ1bmN0aW9ucyB1c2VkIGZvciBzaWduaW5nIHR5cGVkIGRhdGEuXG4gKi9cbmV4cG9ydHMuVHlwZWREYXRhVXRpbHMgPSB7XG4gICAgZW5jb2RlRGF0YSxcbiAgICBlbmNvZGVUeXBlLFxuICAgIGZpbmRUeXBlRGVwZW5kZW5jaWVzLFxuICAgIGhhc2hTdHJ1Y3QsXG4gICAgaGFzaFR5cGUsXG4gICAgc2FuaXRpemVEYXRhLFxuICAgIGVpcDcxMkhhc2gsXG59O1xuLyoqXG4gKiBHZW5lcmF0ZSB0aGUgXCJWMVwiIGhhc2ggZm9yIHRoZSBwcm92aWRlZCB0eXBlZCBtZXNzYWdlLlxuICpcbiAqIFRoZSBoYXNoIHdpbGwgYmUgZ2VuZXJhdGVkIGluIGFjY29yZGFuY2Ugd2l0aCBhbiBlYXJsaWVyIHZlcnNpb24gb2YgdGhlIEVJUC03MTJcbiAqIHNwZWNpZmljYXRpb24uIFRoaXMgaGFzaCBpcyB1c2VkIGluIGBzaWduVHlwZWREYXRhX3YxYC5cbiAqXG4gKiBAcGFyYW0gdHlwZWREYXRhIC0gVGhlIHR5cGVkIG1lc3NhZ2UuXG4gKiBAcmV0dXJucyBUaGUgJzB4Jy1wcmVmaXhlZCBoZXggZW5jb2RlZCBoYXNoIHJlcHJlc2VudGluZyB0aGUgdHlwZSBvZiB0aGUgcHJvdmlkZWQgbWVzc2FnZS5cbiAqL1xuZnVuY3Rpb24gdHlwZWRTaWduYXR1cmVIYXNoKHR5cGVkRGF0YSkge1xuICAgIGNvbnN0IGhhc2hCdWZmZXIgPSBfdHlwZWRTaWduYXR1cmVIYXNoKHR5cGVkRGF0YSk7XG4gICAgcmV0dXJuIGV0aGVyZXVtanNfdXRpbF8xLmJ1ZmZlclRvSGV4KGhhc2hCdWZmZXIpO1xufVxuZXhwb3J0cy50eXBlZFNpZ25hdHVyZUhhc2ggPSB0eXBlZFNpZ25hdHVyZUhhc2g7XG4vKipcbiAqIEdlbmVyYXRlIHRoZSBcIlYxXCIgaGFzaCBmb3IgdGhlIHByb3ZpZGVkIHR5cGVkIG1lc3NhZ2UuXG4gKlxuICogVGhlIGhhc2ggd2lsbCBiZSBnZW5lcmF0ZWQgaW4gYWNjb3JkYW5jZSB3aXRoIGFuIGVhcmxpZXIgdmVyc2lvbiBvZiB0aGUgRUlQLTcxMlxuICogc3BlY2lmaWNhdGlvbi4gVGhpcyBoYXNoIGlzIHVzZWQgaW4gYHNpZ25UeXBlZERhdGFfdjFgLlxuICpcbiAqIEBwYXJhbSB0eXBlZERhdGEgLSBUaGUgdHlwZWQgbWVzc2FnZS5cbiAqIEByZXR1cm5zIFRoZSBoYXNoIHJlcHJlc2VudGluZyB0aGUgdHlwZSBvZiB0aGUgcHJvdmlkZWQgbWVzc2FnZS5cbiAqL1xuZnVuY3Rpb24gX3R5cGVkU2lnbmF0dXJlSGFzaCh0eXBlZERhdGEpIHtcbiAgICBjb25zdCBlcnJvciA9IG5ldyBFcnJvcignRXhwZWN0IGFyZ3VtZW50IHRvIGJlIG5vbi1lbXB0eSBhcnJheScpO1xuICAgIGlmICh0eXBlb2YgdHlwZWREYXRhICE9PSAnb2JqZWN0JyB8fFxuICAgICAgICAhKCdsZW5ndGgnIGluIHR5cGVkRGF0YSkgfHxcbiAgICAgICAgIXR5cGVkRGF0YS5sZW5ndGgpIHtcbiAgICAgICAgdGhyb3cgZXJyb3I7XG4gICAgfVxuICAgIGNvbnN0IGRhdGEgPSB0eXBlZERhdGEubWFwKGZ1bmN0aW9uIChlKSB7XG4gICAgICAgIGlmIChlLnR5cGUgIT09ICdieXRlcycpIHtcbiAgICAgICAgICAgIHJldHVybiBlLnZhbHVlO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB1dGlsc18xLmxlZ2FjeVRvQnVmZmVyKGUudmFsdWUpO1xuICAgIH0pO1xuICAgIGNvbnN0IHR5cGVzID0gdHlwZWREYXRhLm1hcChmdW5jdGlvbiAoZSkge1xuICAgICAgICByZXR1cm4gZS50eXBlO1xuICAgIH0pO1xuICAgIGNvbnN0IHNjaGVtYSA9IHR5cGVkRGF0YS5tYXAoZnVuY3Rpb24gKGUpIHtcbiAgICAgICAgaWYgKCFlLm5hbWUpIHtcbiAgICAgICAgICAgIHRocm93IGVycm9yO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBgJHtlLnR5cGV9ICR7ZS5uYW1lfWA7XG4gICAgfSk7XG4gICAgcmV0dXJuIGV0aGVyZXVtanNfYWJpXzEuc29saWRpdHlTSEEzKFsnYnl0ZXMzMicsICdieXRlczMyJ10sIFtcbiAgICAgICAgZXRoZXJldW1qc19hYmlfMS5zb2xpZGl0eVNIQTMobmV3IEFycmF5KHR5cGVkRGF0YS5sZW5ndGgpLmZpbGwoJ3N0cmluZycpLCBzY2hlbWEpLFxuICAgICAgICBldGhlcmV1bWpzX2FiaV8xLnNvbGlkaXR5U0hBMyh0eXBlcywgZGF0YSksXG4gICAgXSk7XG59XG4vKipcbiAqIFNpZ24gdHlwZWQgZGF0YSBhY2NvcmRpbmcgdG8gRUlQLTcxMi4gVGhlIHNpZ25pbmcgZGlmZmVycyBiYXNlZCB1cG9uIHRoZSBgdmVyc2lvbmAuXG4gKlxuICogVjEgaXMgYmFzZWQgdXBvbiBbYW4gZWFybHkgdmVyc2lvbiBvZiBFSVAtNzEyXShodHRwczovL2dpdGh1Yi5jb20vZXRoZXJldW0vRUlQcy9wdWxsLzcxMi9jb21taXRzLzIxYWJlMjU0ZmUwNDUyZDg1ODNkNWIxMzJiMWQ3YmU4N2MwNDM5Y2EpXG4gKiB0aGF0IGxhY2tlZCBzb21lIGxhdGVyIHNlY3VyaXR5IGltcHJvdmVtZW50cywgYW5kIHNob3VsZCBnZW5lcmFsbHkgYmUgbmVnbGVjdGVkIGluIGZhdm9yIG9mXG4gKiBsYXRlciB2ZXJzaW9ucy5cbiAqXG4gKiBWMyBpcyBiYXNlZCBvbiBbRUlQLTcxMl0oaHR0cHM6Ly9laXBzLmV0aGVyZXVtLm9yZy9FSVBTL2VpcC03MTIpLCBleGNlcHQgdGhhdCBhcnJheXMgYW5kXG4gKiByZWN1cnNpdmUgZGF0YSBzdHJ1Y3R1cmVzIGFyZSBub3Qgc3VwcG9ydGVkLlxuICpcbiAqIFY0IGlzIGJhc2VkIG9uIFtFSVAtNzEyXShodHRwczovL2VpcHMuZXRoZXJldW0ub3JnL0VJUFMvZWlwLTcxMiksIGFuZCBpbmNsdWRlcyBmdWxsIHN1cHBvcnQgb2ZcbiAqIGFycmF5cyBhbmQgcmVjdXJzaXZlIGRhdGEgc3RydWN0dXJlcy5cbiAqXG4gKiBAcGFyYW0gb3B0aW9ucyAtIFRoZSBzaWduaW5nIG9wdGlvbnMuXG4gKiBAcGFyYW0gb3B0aW9ucy5wcml2YXRlS2V5IC0gVGhlIHByaXZhdGUga2V5IHRvIHNpZ24gd2l0aC5cbiAqIEBwYXJhbSBvcHRpb25zLmRhdGEgLSBUaGUgdHlwZWQgZGF0YSB0byBzaWduLlxuICogQHBhcmFtIG9wdGlvbnMudmVyc2lvbiAtIFRoZSBzaWduaW5nIHZlcnNpb24gdG8gdXNlLlxuICogQHJldHVybnMgVGhlICcweCctcHJlZml4ZWQgaGV4IGVuY29kZWQgc2lnbmF0dXJlLlxuICovXG5mdW5jdGlvbiBzaWduVHlwZWREYXRhKHsgcHJpdmF0ZUtleSwgZGF0YSwgdmVyc2lvbiwgfSkge1xuICAgIHZhbGlkYXRlVmVyc2lvbih2ZXJzaW9uKTtcbiAgICBpZiAodXRpbHNfMS5pc051bGxpc2goZGF0YSkpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdNaXNzaW5nIGRhdGEgcGFyYW1ldGVyJyk7XG4gICAgfVxuICAgIGVsc2UgaWYgKHV0aWxzXzEuaXNOdWxsaXNoKHByaXZhdGVLZXkpKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignTWlzc2luZyBwcml2YXRlIGtleSBwYXJhbWV0ZXInKTtcbiAgICB9XG4gICAgY29uc3QgbWVzc2FnZUhhc2ggPSB2ZXJzaW9uID09PSBTaWduVHlwZWREYXRhVmVyc2lvbi5WMVxuICAgICAgICA/IF90eXBlZFNpZ25hdHVyZUhhc2goZGF0YSlcbiAgICAgICAgOiBleHBvcnRzLlR5cGVkRGF0YVV0aWxzLmVpcDcxMkhhc2goZGF0YSwgdmVyc2lvbik7XG4gICAgY29uc3Qgc2lnID0gZXRoZXJldW1qc191dGlsXzEuZWNzaWduKG1lc3NhZ2VIYXNoLCBwcml2YXRlS2V5KTtcbiAgICByZXR1cm4gdXRpbHNfMS5jb25jYXRTaWcoZXRoZXJldW1qc191dGlsXzEudG9CdWZmZXIoc2lnLnYpLCBzaWcuciwgc2lnLnMpO1xufVxuZXhwb3J0cy5zaWduVHlwZWREYXRhID0gc2lnblR5cGVkRGF0YTtcbi8qKlxuICogUmVjb3ZlciB0aGUgYWRkcmVzcyBvZiB0aGUgYWNjb3VudCB0aGF0IGNyZWF0ZWQgdGhlIGdpdmVuIEVJUC03MTJcbiAqIHNpZ25hdHVyZS4gVGhlIHZlcnNpb24gcHJvdmlkZWQgbXVzdCBtYXRjaCB0aGUgdmVyc2lvbiB1c2VkIHRvXG4gKiBjcmVhdGUgdGhlIHNpZ25hdHVyZS5cbiAqXG4gKiBAcGFyYW0gb3B0aW9ucyAtIFRoZSBzaWduYXR1cmUgcmVjb3Zlcnkgb3B0aW9ucy5cbiAqIEBwYXJhbSBvcHRpb25zLmRhdGEgLSBUaGUgdHlwZWQgZGF0YSB0aGF0IHdhcyBzaWduZWQuXG4gKiBAcGFyYW0gb3B0aW9ucy5zaWduYXR1cmUgLSBUaGUgJzB4LXByZWZpeGVkIGhleCBlbmNvZGVkIG1lc3NhZ2Ugc2lnbmF0dXJlLlxuICogQHBhcmFtIG9wdGlvbnMudmVyc2lvbiAtIFRoZSBzaWduaW5nIHZlcnNpb24gdG8gdXNlLlxuICogQHJldHVybnMgVGhlICcweCctcHJlZml4ZWQgaGV4IGFkZHJlc3Mgb2YgdGhlIHNpZ25lci5cbiAqL1xuZnVuY3Rpb24gcmVjb3ZlclR5cGVkU2lnbmF0dXJlKHsgZGF0YSwgc2lnbmF0dXJlLCB2ZXJzaW9uLCB9KSB7XG4gICAgdmFsaWRhdGVWZXJzaW9uKHZlcnNpb24pO1xuICAgIGlmICh1dGlsc18xLmlzTnVsbGlzaChkYXRhKSkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ01pc3NpbmcgZGF0YSBwYXJhbWV0ZXInKTtcbiAgICB9XG4gICAgZWxzZSBpZiAodXRpbHNfMS5pc051bGxpc2goc2lnbmF0dXJlKSkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ01pc3Npbmcgc2lnbmF0dXJlIHBhcmFtZXRlcicpO1xuICAgIH1cbiAgICBjb25zdCBtZXNzYWdlSGFzaCA9IHZlcnNpb24gPT09IFNpZ25UeXBlZERhdGFWZXJzaW9uLlYxXG4gICAgICAgID8gX3R5cGVkU2lnbmF0dXJlSGFzaChkYXRhKVxuICAgICAgICA6IGV4cG9ydHMuVHlwZWREYXRhVXRpbHMuZWlwNzEySGFzaChkYXRhLCB2ZXJzaW9uKTtcbiAgICBjb25zdCBwdWJsaWNLZXkgPSB1dGlsc18xLnJlY292ZXJQdWJsaWNLZXkobWVzc2FnZUhhc2gsIHNpZ25hdHVyZSk7XG4gICAgY29uc3Qgc2VuZGVyID0gZXRoZXJldW1qc191dGlsXzEucHVibGljVG9BZGRyZXNzKHB1YmxpY0tleSk7XG4gICAgcmV0dXJuIGV0aGVyZXVtanNfdXRpbF8xLmJ1ZmZlclRvSGV4KHNlbmRlcik7XG59XG5leHBvcnRzLnJlY292ZXJUeXBlZFNpZ25hdHVyZSA9IHJlY292ZXJUeXBlZFNpZ25hdHVyZTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXNpZ24tdHlwZWQtZGF0YS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@metamask/eth-sig-util/dist/sign-typed-data.js\n");

/***/ }),

/***/ "./node_modules/@metamask/eth-sig-util/dist/utils.js":
/*!***********************************************************!*\
  !*** ./node_modules/@metamask/eth-sig-util/dist/utils.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"./node_modules/buffer/index.js\")[\"Buffer\"];\n\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.normalize = exports.recoverPublicKey = exports.concatSig = exports.legacyToBuffer = exports.isNullish = exports.padWithZeroes = void 0;\nconst ethereumjs_util_1 = __webpack_require__(/*! ethereumjs-util */ \"./node_modules/@metamask/eth-sig-util/node_modules/ethereumjs-util/dist/index.js\");\nconst ethjs_util_1 = __webpack_require__(/*! ethjs-util */ \"./node_modules/ethjs-util/lib/index.js\");\n/**\n * Pads the front of the given hex string with zeroes until it reaches the\n * target length. If the input string is already longer than or equal to the\n * target length, it is returned unmodified.\n *\n * If the input string is \"0x\"-prefixed or not a hex string, an error will be\n * thrown.\n *\n * @param hexString - The hexadecimal string to pad with zeroes.\n * @param targetLength - The target length of the hexadecimal string.\n * @returns The input string front-padded with zeroes, or the original string\n * if it was already greater than or equal to to the target length.\n */\nfunction padWithZeroes(hexString, targetLength) {\n    if (hexString !== '' && !/^[a-f0-9]+$/iu.test(hexString)) {\n        throw new Error(`Expected an unprefixed hex string. Received: ${hexString}`);\n    }\n    if (targetLength < 0) {\n        throw new Error(`Expected a non-negative integer target length. Received: ${targetLength}`);\n    }\n    return String.prototype.padStart.call(hexString, targetLength, '0');\n}\nexports.padWithZeroes = padWithZeroes;\n/**\n * Returns `true` if the given value is nullish.\n *\n * @param value - The value being checked.\n * @returns Whether the value is nullish.\n */\nfunction isNullish(value) {\n    return value === null || value === undefined;\n}\nexports.isNullish = isNullish;\n/**\n * Convert a value to a Buffer. This function should be equivalent to the `toBuffer` function in\n * `ethereumjs-util@5.2.1`.\n *\n * @param value - The value to convert to a Buffer.\n * @returns The given value as a Buffer.\n */\nfunction legacyToBuffer(value) {\n    return typeof value === 'string' && !ethjs_util_1.isHexString(value)\n        ? Buffer.from(value)\n        : ethereumjs_util_1.toBuffer(value);\n}\nexports.legacyToBuffer = legacyToBuffer;\n/**\n * Concatenate an extended ECDSA signature into a single '0x'-prefixed hex string.\n *\n * @param v - The 'v' portion of the signature.\n * @param r - The 'r' portion of the signature.\n * @param s - The 's' portion of the signature.\n * @returns The concatenated ECDSA signature as a '0x'-prefixed string.\n */\nfunction concatSig(v, r, s) {\n    const rSig = ethereumjs_util_1.fromSigned(r);\n    const sSig = ethereumjs_util_1.fromSigned(s);\n    const vSig = ethereumjs_util_1.bufferToInt(v);\n    const rStr = padWithZeroes(ethereumjs_util_1.toUnsigned(rSig).toString('hex'), 64);\n    const sStr = padWithZeroes(ethereumjs_util_1.toUnsigned(sSig).toString('hex'), 64);\n    const vStr = ethjs_util_1.stripHexPrefix(ethjs_util_1.intToHex(vSig));\n    return ethereumjs_util_1.addHexPrefix(rStr.concat(sStr, vStr));\n}\nexports.concatSig = concatSig;\n/**\n * Recover the public key from the given signature and message hash.\n *\n * @param messageHash - The hash of the signed message.\n * @param signature - The signature.\n * @returns The public key of the signer.\n */\nfunction recoverPublicKey(messageHash, signature) {\n    const sigParams = ethereumjs_util_1.fromRpcSig(signature);\n    return ethereumjs_util_1.ecrecover(messageHash, sigParams.v, sigParams.r, sigParams.s);\n}\nexports.recoverPublicKey = recoverPublicKey;\n/**\n * Normalize the input to a lower-cased '0x'-prefixed hex string.\n *\n * @param input - The value to normalize.\n * @returns The normalized value.\n */\nfunction normalize(input) {\n    if (!input) {\n        return undefined;\n    }\n    if (typeof input === 'number') {\n        const buffer = ethereumjs_util_1.toBuffer(input);\n        input = ethereumjs_util_1.bufferToHex(buffer);\n    }\n    if (typeof input !== 'string') {\n        let msg = 'eth-sig-util.normalize() requires hex string or integer input.';\n        msg += ` received ${typeof input}: ${input}`;\n        throw new Error(msg);\n    }\n    return ethereumjs_util_1.addHexPrefix(input.toLowerCase());\n}\nexports.normalize = normalize;\n//# sourceMappingURL=utils.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG1ldGFtYXNrL2V0aC1zaWctdXRpbC9kaXN0L3V0aWxzLmpzLmpzIiwibWFwcGluZ3MiOiI7QUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxpQkFBaUIsR0FBRyx3QkFBd0IsR0FBRyxpQkFBaUIsR0FBRyxzQkFBc0IsR0FBRyxpQkFBaUIsR0FBRyxxQkFBcUI7QUFDckksMEJBQTBCLG1CQUFPLENBQUMseUdBQWlCO0FBQ25ELHFCQUFxQixtQkFBTyxDQUFDLDBEQUFZO0FBQ3pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdFQUF3RSxVQUFVO0FBQ2xGO0FBQ0E7QUFDQSxvRkFBb0YsYUFBYTtBQUNqRztBQUNBO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVUsTUFBTTtBQUNoQjtBQUNBO0FBQ0Esc0JBQXNCO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QjtBQUN4QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRCQUE0QixhQUFhLElBQUksTUFBTTtBQUNuRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQG1ldGFtYXNrL2V0aC1zaWctdXRpbC9kaXN0L3V0aWxzLmpzP2I5ZTUiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLm5vcm1hbGl6ZSA9IGV4cG9ydHMucmVjb3ZlclB1YmxpY0tleSA9IGV4cG9ydHMuY29uY2F0U2lnID0gZXhwb3J0cy5sZWdhY3lUb0J1ZmZlciA9IGV4cG9ydHMuaXNOdWxsaXNoID0gZXhwb3J0cy5wYWRXaXRoWmVyb2VzID0gdm9pZCAwO1xuY29uc3QgZXRoZXJldW1qc191dGlsXzEgPSByZXF1aXJlKFwiZXRoZXJldW1qcy11dGlsXCIpO1xuY29uc3QgZXRoanNfdXRpbF8xID0gcmVxdWlyZShcImV0aGpzLXV0aWxcIik7XG4vKipcbiAqIFBhZHMgdGhlIGZyb250IG9mIHRoZSBnaXZlbiBoZXggc3RyaW5nIHdpdGggemVyb2VzIHVudGlsIGl0IHJlYWNoZXMgdGhlXG4gKiB0YXJnZXQgbGVuZ3RoLiBJZiB0aGUgaW5wdXQgc3RyaW5nIGlzIGFscmVhZHkgbG9uZ2VyIHRoYW4gb3IgZXF1YWwgdG8gdGhlXG4gKiB0YXJnZXQgbGVuZ3RoLCBpdCBpcyByZXR1cm5lZCB1bm1vZGlmaWVkLlxuICpcbiAqIElmIHRoZSBpbnB1dCBzdHJpbmcgaXMgXCIweFwiLXByZWZpeGVkIG9yIG5vdCBhIGhleCBzdHJpbmcsIGFuIGVycm9yIHdpbGwgYmVcbiAqIHRocm93bi5cbiAqXG4gKiBAcGFyYW0gaGV4U3RyaW5nIC0gVGhlIGhleGFkZWNpbWFsIHN0cmluZyB0byBwYWQgd2l0aCB6ZXJvZXMuXG4gKiBAcGFyYW0gdGFyZ2V0TGVuZ3RoIC0gVGhlIHRhcmdldCBsZW5ndGggb2YgdGhlIGhleGFkZWNpbWFsIHN0cmluZy5cbiAqIEByZXR1cm5zIFRoZSBpbnB1dCBzdHJpbmcgZnJvbnQtcGFkZGVkIHdpdGggemVyb2VzLCBvciB0aGUgb3JpZ2luYWwgc3RyaW5nXG4gKiBpZiBpdCB3YXMgYWxyZWFkeSBncmVhdGVyIHRoYW4gb3IgZXF1YWwgdG8gdG8gdGhlIHRhcmdldCBsZW5ndGguXG4gKi9cbmZ1bmN0aW9uIHBhZFdpdGhaZXJvZXMoaGV4U3RyaW5nLCB0YXJnZXRMZW5ndGgpIHtcbiAgICBpZiAoaGV4U3RyaW5nICE9PSAnJyAmJiAhL15bYS1mMC05XSskL2l1LnRlc3QoaGV4U3RyaW5nKSkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYEV4cGVjdGVkIGFuIHVucHJlZml4ZWQgaGV4IHN0cmluZy4gUmVjZWl2ZWQ6ICR7aGV4U3RyaW5nfWApO1xuICAgIH1cbiAgICBpZiAodGFyZ2V0TGVuZ3RoIDwgMCkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYEV4cGVjdGVkIGEgbm9uLW5lZ2F0aXZlIGludGVnZXIgdGFyZ2V0IGxlbmd0aC4gUmVjZWl2ZWQ6ICR7dGFyZ2V0TGVuZ3RofWApO1xuICAgIH1cbiAgICByZXR1cm4gU3RyaW5nLnByb3RvdHlwZS5wYWRTdGFydC5jYWxsKGhleFN0cmluZywgdGFyZ2V0TGVuZ3RoLCAnMCcpO1xufVxuZXhwb3J0cy5wYWRXaXRoWmVyb2VzID0gcGFkV2l0aFplcm9lcztcbi8qKlxuICogUmV0dXJucyBgdHJ1ZWAgaWYgdGhlIGdpdmVuIHZhbHVlIGlzIG51bGxpc2guXG4gKlxuICogQHBhcmFtIHZhbHVlIC0gVGhlIHZhbHVlIGJlaW5nIGNoZWNrZWQuXG4gKiBAcmV0dXJucyBXaGV0aGVyIHRoZSB2YWx1ZSBpcyBudWxsaXNoLlxuICovXG5mdW5jdGlvbiBpc051bGxpc2godmFsdWUpIHtcbiAgICByZXR1cm4gdmFsdWUgPT09IG51bGwgfHwgdmFsdWUgPT09IHVuZGVmaW5lZDtcbn1cbmV4cG9ydHMuaXNOdWxsaXNoID0gaXNOdWxsaXNoO1xuLyoqXG4gKiBDb252ZXJ0IGEgdmFsdWUgdG8gYSBCdWZmZXIuIFRoaXMgZnVuY3Rpb24gc2hvdWxkIGJlIGVxdWl2YWxlbnQgdG8gdGhlIGB0b0J1ZmZlcmAgZnVuY3Rpb24gaW5cbiAqIGBldGhlcmV1bWpzLXV0aWxANS4yLjFgLlxuICpcbiAqIEBwYXJhbSB2YWx1ZSAtIFRoZSB2YWx1ZSB0byBjb252ZXJ0IHRvIGEgQnVmZmVyLlxuICogQHJldHVybnMgVGhlIGdpdmVuIHZhbHVlIGFzIGEgQnVmZmVyLlxuICovXG5mdW5jdGlvbiBsZWdhY3lUb0J1ZmZlcih2YWx1ZSkge1xuICAgIHJldHVybiB0eXBlb2YgdmFsdWUgPT09ICdzdHJpbmcnICYmICFldGhqc191dGlsXzEuaXNIZXhTdHJpbmcodmFsdWUpXG4gICAgICAgID8gQnVmZmVyLmZyb20odmFsdWUpXG4gICAgICAgIDogZXRoZXJldW1qc191dGlsXzEudG9CdWZmZXIodmFsdWUpO1xufVxuZXhwb3J0cy5sZWdhY3lUb0J1ZmZlciA9IGxlZ2FjeVRvQnVmZmVyO1xuLyoqXG4gKiBDb25jYXRlbmF0ZSBhbiBleHRlbmRlZCBFQ0RTQSBzaWduYXR1cmUgaW50byBhIHNpbmdsZSAnMHgnLXByZWZpeGVkIGhleCBzdHJpbmcuXG4gKlxuICogQHBhcmFtIHYgLSBUaGUgJ3YnIHBvcnRpb24gb2YgdGhlIHNpZ25hdHVyZS5cbiAqIEBwYXJhbSByIC0gVGhlICdyJyBwb3J0aW9uIG9mIHRoZSBzaWduYXR1cmUuXG4gKiBAcGFyYW0gcyAtIFRoZSAncycgcG9ydGlvbiBvZiB0aGUgc2lnbmF0dXJlLlxuICogQHJldHVybnMgVGhlIGNvbmNhdGVuYXRlZCBFQ0RTQSBzaWduYXR1cmUgYXMgYSAnMHgnLXByZWZpeGVkIHN0cmluZy5cbiAqL1xuZnVuY3Rpb24gY29uY2F0U2lnKHYsIHIsIHMpIHtcbiAgICBjb25zdCByU2lnID0gZXRoZXJldW1qc191dGlsXzEuZnJvbVNpZ25lZChyKTtcbiAgICBjb25zdCBzU2lnID0gZXRoZXJldW1qc191dGlsXzEuZnJvbVNpZ25lZChzKTtcbiAgICBjb25zdCB2U2lnID0gZXRoZXJldW1qc191dGlsXzEuYnVmZmVyVG9JbnQodik7XG4gICAgY29uc3QgclN0ciA9IHBhZFdpdGhaZXJvZXMoZXRoZXJldW1qc191dGlsXzEudG9VbnNpZ25lZChyU2lnKS50b1N0cmluZygnaGV4JyksIDY0KTtcbiAgICBjb25zdCBzU3RyID0gcGFkV2l0aFplcm9lcyhldGhlcmV1bWpzX3V0aWxfMS50b1Vuc2lnbmVkKHNTaWcpLnRvU3RyaW5nKCdoZXgnKSwgNjQpO1xuICAgIGNvbnN0IHZTdHIgPSBldGhqc191dGlsXzEuc3RyaXBIZXhQcmVmaXgoZXRoanNfdXRpbF8xLmludFRvSGV4KHZTaWcpKTtcbiAgICByZXR1cm4gZXRoZXJldW1qc191dGlsXzEuYWRkSGV4UHJlZml4KHJTdHIuY29uY2F0KHNTdHIsIHZTdHIpKTtcbn1cbmV4cG9ydHMuY29uY2F0U2lnID0gY29uY2F0U2lnO1xuLyoqXG4gKiBSZWNvdmVyIHRoZSBwdWJsaWMga2V5IGZyb20gdGhlIGdpdmVuIHNpZ25hdHVyZSBhbmQgbWVzc2FnZSBoYXNoLlxuICpcbiAqIEBwYXJhbSBtZXNzYWdlSGFzaCAtIFRoZSBoYXNoIG9mIHRoZSBzaWduZWQgbWVzc2FnZS5cbiAqIEBwYXJhbSBzaWduYXR1cmUgLSBUaGUgc2lnbmF0dXJlLlxuICogQHJldHVybnMgVGhlIHB1YmxpYyBrZXkgb2YgdGhlIHNpZ25lci5cbiAqL1xuZnVuY3Rpb24gcmVjb3ZlclB1YmxpY0tleShtZXNzYWdlSGFzaCwgc2lnbmF0dXJlKSB7XG4gICAgY29uc3Qgc2lnUGFyYW1zID0gZXRoZXJldW1qc191dGlsXzEuZnJvbVJwY1NpZyhzaWduYXR1cmUpO1xuICAgIHJldHVybiBldGhlcmV1bWpzX3V0aWxfMS5lY3JlY292ZXIobWVzc2FnZUhhc2gsIHNpZ1BhcmFtcy52LCBzaWdQYXJhbXMuciwgc2lnUGFyYW1zLnMpO1xufVxuZXhwb3J0cy5yZWNvdmVyUHVibGljS2V5ID0gcmVjb3ZlclB1YmxpY0tleTtcbi8qKlxuICogTm9ybWFsaXplIHRoZSBpbnB1dCB0byBhIGxvd2VyLWNhc2VkICcweCctcHJlZml4ZWQgaGV4IHN0cmluZy5cbiAqXG4gKiBAcGFyYW0gaW5wdXQgLSBUaGUgdmFsdWUgdG8gbm9ybWFsaXplLlxuICogQHJldHVybnMgVGhlIG5vcm1hbGl6ZWQgdmFsdWUuXG4gKi9cbmZ1bmN0aW9uIG5vcm1hbGl6ZShpbnB1dCkge1xuICAgIGlmICghaW5wdXQpIHtcbiAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICB9XG4gICAgaWYgKHR5cGVvZiBpbnB1dCA9PT0gJ251bWJlcicpIHtcbiAgICAgICAgY29uc3QgYnVmZmVyID0gZXRoZXJldW1qc191dGlsXzEudG9CdWZmZXIoaW5wdXQpO1xuICAgICAgICBpbnB1dCA9IGV0aGVyZXVtanNfdXRpbF8xLmJ1ZmZlclRvSGV4KGJ1ZmZlcik7XG4gICAgfVxuICAgIGlmICh0eXBlb2YgaW5wdXQgIT09ICdzdHJpbmcnKSB7XG4gICAgICAgIGxldCBtc2cgPSAnZXRoLXNpZy11dGlsLm5vcm1hbGl6ZSgpIHJlcXVpcmVzIGhleCBzdHJpbmcgb3IgaW50ZWdlciBpbnB1dC4nO1xuICAgICAgICBtc2cgKz0gYCByZWNlaXZlZCAke3R5cGVvZiBpbnB1dH06ICR7aW5wdXR9YDtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKG1zZyk7XG4gICAgfVxuICAgIHJldHVybiBldGhlcmV1bWpzX3V0aWxfMS5hZGRIZXhQcmVmaXgoaW5wdXQudG9Mb3dlckNhc2UoKSk7XG59XG5leHBvcnRzLm5vcm1hbGl6ZSA9IG5vcm1hbGl6ZTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXV0aWxzLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@metamask/eth-sig-util/dist/utils.js\n");

/***/ }),

/***/ "./node_modules/@metamask/eth-sig-util/node_modules/ethereumjs-util/dist/account.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@metamask/eth-sig-util/node_modules/ethereumjs-util/dist/account.js ***!
  \******************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"./node_modules/buffer/index.js\")[\"Buffer\"];\n\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.importPublic = exports.privateToPublic = exports.privateToAddress = exports.publicToAddress = exports.pubToAddress = exports.isValidPublic = exports.isValidPrivate = exports.isPrecompiled = exports.generateAddress2 = exports.generateAddress = exports.isValidChecksumAddress = exports.toChecksumAddress = exports.isZeroAddress = exports.isValidAddress = exports.zeroAddress = void 0;\nvar assert = __webpack_require__(/*! assert */ \"./node_modules/assert/build/assert.js\");\nvar ethjsUtil = __webpack_require__(/*! ethjs-util */ \"./node_modules/ethjs-util/lib/index.js\");\nvar secp256k1 = __webpack_require__(/*! ./secp256k1v3-adapter */ \"./node_modules/@metamask/eth-sig-util/node_modules/ethereumjs-util/dist/secp256k1v3-adapter.js\");\nvar BN = __webpack_require__(/*! bn.js */ \"./node_modules/bn.js/lib/bn.js\");\nvar bytes_1 = __webpack_require__(/*! ./bytes */ \"./node_modules/@metamask/eth-sig-util/node_modules/ethereumjs-util/dist/bytes.js\");\nvar hash_1 = __webpack_require__(/*! ./hash */ \"./node_modules/@metamask/eth-sig-util/node_modules/ethereumjs-util/dist/hash.js\");\n/**\n * Returns a zero address.\n */\nexports.zeroAddress = function () {\n    var addressLength = 20;\n    var addr = bytes_1.zeros(addressLength);\n    return bytes_1.bufferToHex(addr);\n};\n/**\n * Checks if the address is a valid. Accepts checksummed addresses too.\n */\nexports.isValidAddress = function (address) {\n    return /^0x[0-9a-fA-F]{40}$/.test(address);\n};\n/**\n * Checks if a given address is a zero address.\n */\nexports.isZeroAddress = function (address) {\n    var zeroAddr = exports.zeroAddress();\n    return zeroAddr === bytes_1.addHexPrefix(address);\n};\n/**\n * Returns a checksummed address.\n *\n * If a eip1191ChainId is provided, the chainId will be included in the checksum calculation. This\n * has the effect of checksummed addresses for one chain having invalid checksums for others.\n * For more details, consult EIP-1191.\n *\n * WARNING: Checksums with and without the chainId will differ. As of 2019-06-26, the most commonly\n * used variation in Ethereum was without the chainId. This may change in the future.\n */\nexports.toChecksumAddress = function (address, eip1191ChainId) {\n    address = ethjsUtil.stripHexPrefix(address).toLowerCase();\n    var prefix = eip1191ChainId !== undefined ? eip1191ChainId.toString() + '0x' : '';\n    var hash = hash_1.keccak(prefix + address).toString('hex');\n    var ret = '0x';\n    for (var i = 0; i < address.length; i++) {\n        if (parseInt(hash[i], 16) >= 8) {\n            ret += address[i].toUpperCase();\n        }\n        else {\n            ret += address[i];\n        }\n    }\n    return ret;\n};\n/**\n * Checks if the address is a valid checksummed address.\n *\n * See toChecksumAddress' documentation for details about the eip1191ChainId parameter.\n */\nexports.isValidChecksumAddress = function (address, eip1191ChainId) {\n    return exports.isValidAddress(address) && exports.toChecksumAddress(address, eip1191ChainId) === address;\n};\n/**\n * Generates an address of a newly created contract.\n * @param from The address which is creating this new address\n * @param nonce The nonce of the from account\n */\nexports.generateAddress = function (from, nonce) {\n    from = bytes_1.toBuffer(from);\n    var nonceBN = new BN(nonce);\n    if (nonceBN.isZero()) {\n        // in RLP we want to encode null in the case of zero nonce\n        // read the RLP documentation for an answer if you dare\n        return hash_1.rlphash([from, null]).slice(-20);\n    }\n    // Only take the lower 160bits of the hash\n    return hash_1.rlphash([from, Buffer.from(nonceBN.toArray())]).slice(-20);\n};\n/**\n * Generates an address for a contract created using CREATE2.\n * @param from The address which is creating this new address\n * @param salt A salt\n * @param initCode The init code of the contract being created\n */\nexports.generateAddress2 = function (from, salt, initCode) {\n    var fromBuf = bytes_1.toBuffer(from);\n    var saltBuf = bytes_1.toBuffer(salt);\n    var initCodeBuf = bytes_1.toBuffer(initCode);\n    assert(fromBuf.length === 20);\n    assert(saltBuf.length === 32);\n    var address = hash_1.keccak256(Buffer.concat([Buffer.from('ff', 'hex'), fromBuf, saltBuf, hash_1.keccak256(initCodeBuf)]));\n    return address.slice(-20);\n};\n/**\n * Returns true if the supplied address belongs to a precompiled account (Byzantium).\n */\nexports.isPrecompiled = function (address) {\n    var a = bytes_1.unpad(address);\n    return a.length === 1 && a[0] >= 1 && a[0] <= 8;\n};\n/**\n * Checks if the private key satisfies the rules of the curve secp256k1.\n */\nexports.isValidPrivate = function (privateKey) {\n    return secp256k1.privateKeyVerify(privateKey);\n};\n/**\n * Checks if the public key satisfies the rules of the curve secp256k1\n * and the requirements of Ethereum.\n * @param publicKey The two points of an uncompressed key, unless sanitize is enabled\n * @param sanitize Accept public keys in other formats\n */\nexports.isValidPublic = function (publicKey, sanitize) {\n    if (sanitize === void 0) { sanitize = false; }\n    if (publicKey.length === 64) {\n        // Convert to SEC1 for secp256k1\n        return secp256k1.publicKeyVerify(Buffer.concat([Buffer.from([4]), publicKey]));\n    }\n    if (!sanitize) {\n        return false;\n    }\n    return secp256k1.publicKeyVerify(publicKey);\n};\n/**\n * Returns the ethereum address of a given public key.\n * Accepts \"Ethereum public keys\" and SEC1 encoded keys.\n * @param pubKey The two points of an uncompressed key, unless sanitize is enabled\n * @param sanitize Accept public keys in other formats\n */\nexports.pubToAddress = function (pubKey, sanitize) {\n    if (sanitize === void 0) { sanitize = false; }\n    pubKey = bytes_1.toBuffer(pubKey);\n    if (sanitize && pubKey.length !== 64) {\n        pubKey = secp256k1.publicKeyConvert(pubKey, false).slice(1);\n    }\n    assert(pubKey.length === 64);\n    // Only take the lower 160bits of the hash\n    return hash_1.keccak(pubKey).slice(-20);\n};\nexports.publicToAddress = exports.pubToAddress;\n/**\n * Returns the ethereum address of a given private key.\n * @param privateKey A private key must be 256 bits wide\n */\nexports.privateToAddress = function (privateKey) {\n    return exports.publicToAddress(exports.privateToPublic(privateKey));\n};\n/**\n * Returns the ethereum public key of a given private key.\n * @param privateKey A private key must be 256 bits wide\n */\nexports.privateToPublic = function (privateKey) {\n    privateKey = bytes_1.toBuffer(privateKey);\n    // skip the type flag and use the X, Y points\n    return secp256k1.publicKeyCreate(privateKey, false).slice(1);\n};\n/**\n * Converts a public key to the Ethereum format.\n */\nexports.importPublic = function (publicKey) {\n    publicKey = bytes_1.toBuffer(publicKey);\n    if (publicKey.length !== 64) {\n        publicKey = secp256k1.publicKeyConvert(publicKey, false).slice(1);\n    }\n    return publicKey;\n};\n//# sourceMappingURL=account.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@metamask/eth-sig-util/node_modules/ethereumjs-util/dist/account.js\n");

/***/ }),

/***/ "./node_modules/@metamask/eth-sig-util/node_modules/ethereumjs-util/dist/bytes.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@metamask/eth-sig-util/node_modules/ethereumjs-util/dist/bytes.js ***!
  \****************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"./node_modules/buffer/index.js\")[\"Buffer\"];\n\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.baToJSON = exports.addHexPrefix = exports.toUnsigned = exports.fromSigned = exports.bufferToHex = exports.bufferToInt = exports.toBuffer = exports.stripZeros = exports.unpad = exports.setLengthRight = exports.setLength = exports.setLengthLeft = exports.zeros = void 0;\nvar ethjsUtil = __webpack_require__(/*! ethjs-util */ \"./node_modules/ethjs-util/lib/index.js\");\nvar BN = __webpack_require__(/*! bn.js */ \"./node_modules/bn.js/lib/bn.js\");\n/**\n * Returns a buffer filled with 0s.\n * @param bytes the number of bytes the buffer should be\n */\nexports.zeros = function (bytes) {\n    return Buffer.allocUnsafe(bytes).fill(0);\n};\n/**\n * Left Pads an `Array` or `Buffer` with leading zeros till it has `length` bytes.\n * Or it truncates the beginning if it exceeds.\n * @param msg the value to pad (Buffer|Array)\n * @param length the number of bytes the output should be\n * @param right whether to start padding form the left or right\n * @return (Buffer|Array)\n */\nexports.setLengthLeft = function (msg, length, right) {\n    if (right === void 0) { right = false; }\n    var buf = exports.zeros(length);\n    msg = exports.toBuffer(msg);\n    if (right) {\n        if (msg.length < length) {\n            msg.copy(buf);\n            return buf;\n        }\n        return msg.slice(0, length);\n    }\n    else {\n        if (msg.length < length) {\n            msg.copy(buf, length - msg.length);\n            return buf;\n        }\n        return msg.slice(-length);\n    }\n};\nexports.setLength = exports.setLengthLeft;\n/**\n * Right Pads an `Array` or `Buffer` with leading zeros till it has `length` bytes.\n * Or it truncates the beginning if it exceeds.\n * @param msg the value to pad (Buffer|Array)\n * @param length the number of bytes the output should be\n * @return (Buffer|Array)\n */\nexports.setLengthRight = function (msg, length) {\n    return exports.setLength(msg, length, true);\n};\n/**\n * Trims leading zeros from a `Buffer` or an `Array`.\n * @param a (Buffer|Array|String)\n * @return (Buffer|Array|String)\n */\nexports.unpad = function (a) {\n    a = ethjsUtil.stripHexPrefix(a);\n    var first = a[0];\n    while (a.length > 0 && first.toString() === '0') {\n        a = a.slice(1);\n        first = a[0];\n    }\n    return a;\n};\nexports.stripZeros = exports.unpad;\n/**\n * Attempts to turn a value into a `Buffer`. As input it supports `Buffer`, `String`, `Number`, null/undefined, `BN` and other objects with a `toArray()` method.\n * @param v the value\n */\nexports.toBuffer = function (v) {\n    if (!Buffer.isBuffer(v)) {\n        if (Array.isArray(v)) {\n            v = Buffer.from(v);\n        }\n        else if (typeof v === 'string') {\n            if (ethjsUtil.isHexString(v)) {\n                v = Buffer.from(ethjsUtil.padToEven(ethjsUtil.stripHexPrefix(v)), 'hex');\n            }\n            else {\n                throw new Error(\"Cannot convert string to buffer. toBuffer only supports 0x-prefixed hex strings and this string was given: \" + v);\n            }\n        }\n        else if (typeof v === 'number') {\n            v = ethjsUtil.intToBuffer(v);\n        }\n        else if (v === null || v === undefined) {\n            v = Buffer.allocUnsafe(0);\n        }\n        else if (BN.isBN(v)) {\n            v = v.toArrayLike(Buffer);\n        }\n        else if (v.toArray) {\n            // converts a BN to a Buffer\n            v = Buffer.from(v.toArray());\n        }\n        else {\n            throw new Error('invalid type');\n        }\n    }\n    return v;\n};\n/**\n * Converts a `Buffer` to a `Number`.\n * @param buf `Buffer` object to convert\n * @throws If the input number exceeds 53 bits.\n */\nexports.bufferToInt = function (buf) {\n    return new BN(exports.toBuffer(buf)).toNumber();\n};\n/**\n * Converts a `Buffer` into a `0x`-prefixed hex `String`.\n * @param buf `Buffer` object to convert\n */\nexports.bufferToHex = function (buf) {\n    buf = exports.toBuffer(buf);\n    return '0x' + buf.toString('hex');\n};\n/**\n * Interprets a `Buffer` as a signed integer and returns a `BN`. Assumes 256-bit numbers.\n * @param num Signed integer value\n */\nexports.fromSigned = function (num) {\n    return new BN(num).fromTwos(256);\n};\n/**\n * Converts a `BN` to an unsigned integer and returns it as a `Buffer`. Assumes 256-bit numbers.\n * @param num\n */\nexports.toUnsigned = function (num) {\n    return Buffer.from(num.toTwos(256).toArray());\n};\n/**\n * Adds \"0x\" to a given `String` if it does not already start with \"0x\".\n */\nexports.addHexPrefix = function (str) {\n    if (typeof str !== 'string') {\n        return str;\n    }\n    return ethjsUtil.isHexPrefixed(str) ? str : '0x' + str;\n};\n/**\n * Converts a `Buffer` or `Array` to JSON.\n * @param ba (Buffer|Array)\n * @return (Array|String|null)\n */\nexports.baToJSON = function (ba) {\n    if (Buffer.isBuffer(ba)) {\n        return \"0x\" + ba.toString('hex');\n    }\n    else if (ba instanceof Array) {\n        var array = [];\n        for (var i = 0; i < ba.length; i++) {\n            array.push(exports.baToJSON(ba[i]));\n        }\n        return array;\n    }\n};\n//# sourceMappingURL=bytes.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@metamask/eth-sig-util/node_modules/ethereumjs-util/dist/bytes.js\n");

/***/ }),

/***/ "./node_modules/@metamask/eth-sig-util/node_modules/ethereumjs-util/dist/constants.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@metamask/eth-sig-util/node_modules/ethereumjs-util/dist/constants.js ***!
  \********************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"./node_modules/buffer/index.js\")[\"Buffer\"];\n\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.KECCAK256_RLP = exports.KECCAK256_RLP_S = exports.KECCAK256_RLP_ARRAY = exports.KECCAK256_RLP_ARRAY_S = exports.KECCAK256_NULL = exports.KECCAK256_NULL_S = exports.TWO_POW256 = exports.MAX_INTEGER = void 0;\nvar BN = __webpack_require__(/*! bn.js */ \"./node_modules/bn.js/lib/bn.js\");\n/**\n * The max integer that this VM can handle\n */\nexports.MAX_INTEGER = new BN('ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff', 16);\n/**\n * 2^256\n */\nexports.TWO_POW256 = new BN('10000000000000000000000000000000000000000000000000000000000000000', 16);\n/**\n * Keccak-256 hash of null\n */\nexports.KECCAK256_NULL_S = 'c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470';\n/**\n * Keccak-256 hash of null\n */\nexports.KECCAK256_NULL = Buffer.from(exports.KECCAK256_NULL_S, 'hex');\n/**\n * Keccak-256 of an RLP of an empty array\n */\nexports.KECCAK256_RLP_ARRAY_S = '1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347';\n/**\n * Keccak-256 of an RLP of an empty array\n */\nexports.KECCAK256_RLP_ARRAY = Buffer.from(exports.KECCAK256_RLP_ARRAY_S, 'hex');\n/**\n * Keccak-256 hash of the RLP of null\n */\nexports.KECCAK256_RLP_S = '56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421';\n/**\n * Keccak-256 hash of the RLP of null\n */\nexports.KECCAK256_RLP = Buffer.from(exports.KECCAK256_RLP_S, 'hex');\n//# sourceMappingURL=constants.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG1ldGFtYXNrL2V0aC1zaWctdXRpbC9ub2RlX21vZHVsZXMvZXRoZXJldW1qcy11dGlsL2Rpc3QvY29uc3RhbnRzLmpzLmpzIiwibWFwcGluZ3MiOiI7QUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxxQkFBcUIsR0FBRyx1QkFBdUIsR0FBRywyQkFBMkIsR0FBRyw2QkFBNkIsR0FBRyxzQkFBc0IsR0FBRyx3QkFBd0IsR0FBRyxrQkFBa0IsR0FBRyxtQkFBbUI7QUFDNU0sU0FBUyxtQkFBTyxDQUFDLDZDQUFPO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQjtBQUNuQjtBQUNBO0FBQ0E7QUFDQSxrQkFBa0I7QUFDbEI7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQixHQUFHLE1BQU07QUFDL0I7QUFDQTtBQUNBO0FBQ0EsNkJBQTZCO0FBQzdCO0FBQ0E7QUFDQTtBQUNBLDJCQUEyQixHQUFHLE1BQU07QUFDcEM7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQixHQUFHLE1BQU07QUFDOUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BtZXRhbWFzay9ldGgtc2lnLXV0aWwvbm9kZV9tb2R1bGVzL2V0aGVyZXVtanMtdXRpbC9kaXN0L2NvbnN0YW50cy5qcz9lYjJjIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5LRUNDQUsyNTZfUkxQID0gZXhwb3J0cy5LRUNDQUsyNTZfUkxQX1MgPSBleHBvcnRzLktFQ0NBSzI1Nl9STFBfQVJSQVkgPSBleHBvcnRzLktFQ0NBSzI1Nl9STFBfQVJSQVlfUyA9IGV4cG9ydHMuS0VDQ0FLMjU2X05VTEwgPSBleHBvcnRzLktFQ0NBSzI1Nl9OVUxMX1MgPSBleHBvcnRzLlRXT19QT1cyNTYgPSBleHBvcnRzLk1BWF9JTlRFR0VSID0gdm9pZCAwO1xudmFyIEJOID0gcmVxdWlyZShcImJuLmpzXCIpO1xuLyoqXG4gKiBUaGUgbWF4IGludGVnZXIgdGhhdCB0aGlzIFZNIGNhbiBoYW5kbGVcbiAqL1xuZXhwb3J0cy5NQVhfSU5URUdFUiA9IG5ldyBCTignZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZicsIDE2KTtcbi8qKlxuICogMl4yNTZcbiAqL1xuZXhwb3J0cy5UV09fUE9XMjU2ID0gbmV3IEJOKCcxMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMCcsIDE2KTtcbi8qKlxuICogS2VjY2FrLTI1NiBoYXNoIG9mIG51bGxcbiAqL1xuZXhwb3J0cy5LRUNDQUsyNTZfTlVMTF9TID0gJ2M1ZDI0NjAxODZmNzIzM2M5MjdlN2RiMmRjYzcwM2MwZTUwMGI2NTNjYTgyMjczYjdiZmFkODA0NWQ4NWE0NzAnO1xuLyoqXG4gKiBLZWNjYWstMjU2IGhhc2ggb2YgbnVsbFxuICovXG5leHBvcnRzLktFQ0NBSzI1Nl9OVUxMID0gQnVmZmVyLmZyb20oZXhwb3J0cy5LRUNDQUsyNTZfTlVMTF9TLCAnaGV4Jyk7XG4vKipcbiAqIEtlY2Nhay0yNTYgb2YgYW4gUkxQIG9mIGFuIGVtcHR5IGFycmF5XG4gKi9cbmV4cG9ydHMuS0VDQ0FLMjU2X1JMUF9BUlJBWV9TID0gJzFkY2M0ZGU4ZGVjNzVkN2FhYjg1YjU2N2I2Y2NkNDFhZDMxMjQ1MWI5NDhhNzQxM2YwYTE0MmZkNDBkNDkzNDcnO1xuLyoqXG4gKiBLZWNjYWstMjU2IG9mIGFuIFJMUCBvZiBhbiBlbXB0eSBhcnJheVxuICovXG5leHBvcnRzLktFQ0NBSzI1Nl9STFBfQVJSQVkgPSBCdWZmZXIuZnJvbShleHBvcnRzLktFQ0NBSzI1Nl9STFBfQVJSQVlfUywgJ2hleCcpO1xuLyoqXG4gKiBLZWNjYWstMjU2IGhhc2ggb2YgdGhlIFJMUCBvZiBudWxsXG4gKi9cbmV4cG9ydHMuS0VDQ0FLMjU2X1JMUF9TID0gJzU2ZTgxZjE3MWJjYzU1YTZmZjgzNDVlNjkyYzBmODZlNWI0OGUwMWI5OTZjYWRjMDAxNjIyZmI1ZTM2M2I0MjEnO1xuLyoqXG4gKiBLZWNjYWstMjU2IGhhc2ggb2YgdGhlIFJMUCBvZiBudWxsXG4gKi9cbmV4cG9ydHMuS0VDQ0FLMjU2X1JMUCA9IEJ1ZmZlci5mcm9tKGV4cG9ydHMuS0VDQ0FLMjU2X1JMUF9TLCAnaGV4Jyk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jb25zdGFudHMuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@metamask/eth-sig-util/node_modules/ethereumjs-util/dist/constants.js\n");

/***/ }),

/***/ "./node_modules/@metamask/eth-sig-util/node_modules/ethereumjs-util/dist/hash.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@metamask/eth-sig-util/node_modules/ethereumjs-util/dist/hash.js ***!
  \***************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"./node_modules/buffer/index.js\")[\"Buffer\"];\n\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.rlphash = exports.ripemd160 = exports.sha256 = exports.keccak256 = exports.keccak = void 0;\nvar _a = __webpack_require__(/*! ethereum-cryptography/keccak */ \"./node_modules/ethereum-cryptography/keccak.js\"), keccak224 = _a.keccak224, keccak384 = _a.keccak384, k256 = _a.keccak256, keccak512 = _a.keccak512;\nvar createHash = __webpack_require__(/*! create-hash */ \"./node_modules/create-hash/browser.js\");\nvar ethjsUtil = __webpack_require__(/*! ethjs-util */ \"./node_modules/ethjs-util/lib/index.js\");\nvar rlp = __webpack_require__(/*! rlp */ \"./node_modules/rlp/dist.browser/index.js\");\nvar bytes_1 = __webpack_require__(/*! ./bytes */ \"./node_modules/@metamask/eth-sig-util/node_modules/ethereumjs-util/dist/bytes.js\");\n/**\n * Creates Keccak hash of the input\n * @param a The input data (Buffer|Array|String|Number) If the string is a 0x-prefixed hex value\n * it's interpreted as hexadecimal, otherwise as utf8.\n * @param bits The Keccak width\n */\nexports.keccak = function (a, bits) {\n    if (bits === void 0) { bits = 256; }\n    if (typeof a === 'string' && !ethjsUtil.isHexString(a)) {\n        a = Buffer.from(a, 'utf8');\n    }\n    else {\n        a = bytes_1.toBuffer(a);\n    }\n    if (!bits)\n        bits = 256;\n    switch (bits) {\n        case 224: {\n            return keccak224(a);\n        }\n        case 256: {\n            return k256(a);\n        }\n        case 384: {\n            return keccak384(a);\n        }\n        case 512: {\n            return keccak512(a);\n        }\n        default: {\n            throw new Error(\"Invald algorithm: keccak\" + bits);\n        }\n    }\n};\n/**\n * Creates Keccak-256 hash of the input, alias for keccak(a, 256).\n * @param a The input data (Buffer|Array|String|Number)\n */\nexports.keccak256 = function (a) {\n    return exports.keccak(a);\n};\n/**\n * Creates SHA256 hash of the input.\n * @param a The input data (Buffer|Array|String|Number)\n */\nexports.sha256 = function (a) {\n    a = bytes_1.toBuffer(a);\n    return createHash('sha256')\n        .update(a)\n        .digest();\n};\n/**\n * Creates RIPEMD160 hash of the input.\n * @param a The input data (Buffer|Array|String|Number)\n * @param padded Whether it should be padded to 256 bits or not\n */\nexports.ripemd160 = function (a, padded) {\n    a = bytes_1.toBuffer(a);\n    var hash = createHash('rmd160')\n        .update(a)\n        .digest();\n    if (padded === true) {\n        return bytes_1.setLength(hash, 32);\n    }\n    else {\n        return hash;\n    }\n};\n/**\n * Creates SHA-3 hash of the RLP encoded version of the input.\n * @param a The input data\n */\nexports.rlphash = function (a) {\n    return exports.keccak(rlp.encode(a));\n};\n//# sourceMappingURL=hash.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG1ldGFtYXNrL2V0aC1zaWctdXRpbC9ub2RlX21vZHVsZXMvZXRoZXJldW1qcy11dGlsL2Rpc3QvaGFzaC5qcy5qcyIsIm1hcHBpbmdzIjoiO0FBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsZUFBZSxHQUFHLGlCQUFpQixHQUFHLGNBQWMsR0FBRyxpQkFBaUIsR0FBRyxjQUFjO0FBQ3pGLFNBQVMsbUJBQU8sQ0FBQyxvRkFBOEI7QUFDL0MsaUJBQWlCLG1CQUFPLENBQUMsMERBQWE7QUFDdEMsZ0JBQWdCLG1CQUFPLENBQUMsMERBQVk7QUFDcEMsVUFBVSxtQkFBTyxDQUFDLHFEQUFLO0FBQ3ZCLGNBQWMsbUJBQU8sQ0FBQyxpR0FBUztBQUMvQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjO0FBQ2QsMkJBQTJCO0FBQzNCO0FBQ0EsWUFBWSxNQUFNO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWM7QUFDZDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlO0FBQ2Y7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AbWV0YW1hc2svZXRoLXNpZy11dGlsL25vZGVfbW9kdWxlcy9ldGhlcmV1bWpzLXV0aWwvZGlzdC9oYXNoLmpzPzExMDkiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLnJscGhhc2ggPSBleHBvcnRzLnJpcGVtZDE2MCA9IGV4cG9ydHMuc2hhMjU2ID0gZXhwb3J0cy5rZWNjYWsyNTYgPSBleHBvcnRzLmtlY2NhayA9IHZvaWQgMDtcbnZhciBfYSA9IHJlcXVpcmUoJ2V0aGVyZXVtLWNyeXB0b2dyYXBoeS9rZWNjYWsnKSwga2VjY2FrMjI0ID0gX2Eua2VjY2FrMjI0LCBrZWNjYWszODQgPSBfYS5rZWNjYWszODQsIGsyNTYgPSBfYS5rZWNjYWsyNTYsIGtlY2NhazUxMiA9IF9hLmtlY2NhazUxMjtcbnZhciBjcmVhdGVIYXNoID0gcmVxdWlyZSgnY3JlYXRlLWhhc2gnKTtcbnZhciBldGhqc1V0aWwgPSByZXF1aXJlKCdldGhqcy11dGlsJyk7XG52YXIgcmxwID0gcmVxdWlyZShcInJscFwiKTtcbnZhciBieXRlc18xID0gcmVxdWlyZShcIi4vYnl0ZXNcIik7XG4vKipcbiAqIENyZWF0ZXMgS2VjY2FrIGhhc2ggb2YgdGhlIGlucHV0XG4gKiBAcGFyYW0gYSBUaGUgaW5wdXQgZGF0YSAoQnVmZmVyfEFycmF5fFN0cmluZ3xOdW1iZXIpIElmIHRoZSBzdHJpbmcgaXMgYSAweC1wcmVmaXhlZCBoZXggdmFsdWVcbiAqIGl0J3MgaW50ZXJwcmV0ZWQgYXMgaGV4YWRlY2ltYWwsIG90aGVyd2lzZSBhcyB1dGY4LlxuICogQHBhcmFtIGJpdHMgVGhlIEtlY2NhayB3aWR0aFxuICovXG5leHBvcnRzLmtlY2NhayA9IGZ1bmN0aW9uIChhLCBiaXRzKSB7XG4gICAgaWYgKGJpdHMgPT09IHZvaWQgMCkgeyBiaXRzID0gMjU2OyB9XG4gICAgaWYgKHR5cGVvZiBhID09PSAnc3RyaW5nJyAmJiAhZXRoanNVdGlsLmlzSGV4U3RyaW5nKGEpKSB7XG4gICAgICAgIGEgPSBCdWZmZXIuZnJvbShhLCAndXRmOCcpO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgYSA9IGJ5dGVzXzEudG9CdWZmZXIoYSk7XG4gICAgfVxuICAgIGlmICghYml0cylcbiAgICAgICAgYml0cyA9IDI1NjtcbiAgICBzd2l0Y2ggKGJpdHMpIHtcbiAgICAgICAgY2FzZSAyMjQ6IHtcbiAgICAgICAgICAgIHJldHVybiBrZWNjYWsyMjQoYSk7XG4gICAgICAgIH1cbiAgICAgICAgY2FzZSAyNTY6IHtcbiAgICAgICAgICAgIHJldHVybiBrMjU2KGEpO1xuICAgICAgICB9XG4gICAgICAgIGNhc2UgMzg0OiB7XG4gICAgICAgICAgICByZXR1cm4ga2VjY2FrMzg0KGEpO1xuICAgICAgICB9XG4gICAgICAgIGNhc2UgNTEyOiB7XG4gICAgICAgICAgICByZXR1cm4ga2VjY2FrNTEyKGEpO1xuICAgICAgICB9XG4gICAgICAgIGRlZmF1bHQ6IHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIkludmFsZCBhbGdvcml0aG06IGtlY2Nha1wiICsgYml0cyk7XG4gICAgICAgIH1cbiAgICB9XG59O1xuLyoqXG4gKiBDcmVhdGVzIEtlY2Nhay0yNTYgaGFzaCBvZiB0aGUgaW5wdXQsIGFsaWFzIGZvciBrZWNjYWsoYSwgMjU2KS5cbiAqIEBwYXJhbSBhIFRoZSBpbnB1dCBkYXRhIChCdWZmZXJ8QXJyYXl8U3RyaW5nfE51bWJlcilcbiAqL1xuZXhwb3J0cy5rZWNjYWsyNTYgPSBmdW5jdGlvbiAoYSkge1xuICAgIHJldHVybiBleHBvcnRzLmtlY2NhayhhKTtcbn07XG4vKipcbiAqIENyZWF0ZXMgU0hBMjU2IGhhc2ggb2YgdGhlIGlucHV0LlxuICogQHBhcmFtIGEgVGhlIGlucHV0IGRhdGEgKEJ1ZmZlcnxBcnJheXxTdHJpbmd8TnVtYmVyKVxuICovXG5leHBvcnRzLnNoYTI1NiA9IGZ1bmN0aW9uIChhKSB7XG4gICAgYSA9IGJ5dGVzXzEudG9CdWZmZXIoYSk7XG4gICAgcmV0dXJuIGNyZWF0ZUhhc2goJ3NoYTI1NicpXG4gICAgICAgIC51cGRhdGUoYSlcbiAgICAgICAgLmRpZ2VzdCgpO1xufTtcbi8qKlxuICogQ3JlYXRlcyBSSVBFTUQxNjAgaGFzaCBvZiB0aGUgaW5wdXQuXG4gKiBAcGFyYW0gYSBUaGUgaW5wdXQgZGF0YSAoQnVmZmVyfEFycmF5fFN0cmluZ3xOdW1iZXIpXG4gKiBAcGFyYW0gcGFkZGVkIFdoZXRoZXIgaXQgc2hvdWxkIGJlIHBhZGRlZCB0byAyNTYgYml0cyBvciBub3RcbiAqL1xuZXhwb3J0cy5yaXBlbWQxNjAgPSBmdW5jdGlvbiAoYSwgcGFkZGVkKSB7XG4gICAgYSA9IGJ5dGVzXzEudG9CdWZmZXIoYSk7XG4gICAgdmFyIGhhc2ggPSBjcmVhdGVIYXNoKCdybWQxNjAnKVxuICAgICAgICAudXBkYXRlKGEpXG4gICAgICAgIC5kaWdlc3QoKTtcbiAgICBpZiAocGFkZGVkID09PSB0cnVlKSB7XG4gICAgICAgIHJldHVybiBieXRlc18xLnNldExlbmd0aChoYXNoLCAzMik7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICByZXR1cm4gaGFzaDtcbiAgICB9XG59O1xuLyoqXG4gKiBDcmVhdGVzIFNIQS0zIGhhc2ggb2YgdGhlIFJMUCBlbmNvZGVkIHZlcnNpb24gb2YgdGhlIGlucHV0LlxuICogQHBhcmFtIGEgVGhlIGlucHV0IGRhdGFcbiAqL1xuZXhwb3J0cy5ybHBoYXNoID0gZnVuY3Rpb24gKGEpIHtcbiAgICByZXR1cm4gZXhwb3J0cy5rZWNjYWsocmxwLmVuY29kZShhKSk7XG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aGFzaC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@metamask/eth-sig-util/node_modules/ethereumjs-util/dist/hash.js\n");

/***/ }),

/***/ "./node_modules/@metamask/eth-sig-util/node_modules/ethereumjs-util/dist/index.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@metamask/eth-sig-util/node_modules/ethereumjs-util/dist/index.js ***!
  \****************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.secp256k1 = exports.rlp = exports.BN = void 0;\nvar secp256k1 = __webpack_require__(/*! ./secp256k1v3-adapter */ \"./node_modules/@metamask/eth-sig-util/node_modules/ethereumjs-util/dist/secp256k1v3-adapter.js\");\nexports.secp256k1 = secp256k1;\nvar ethjsUtil = __webpack_require__(/*! ethjs-util */ \"./node_modules/ethjs-util/lib/index.js\");\nvar BN = __webpack_require__(/*! bn.js */ \"./node_modules/bn.js/lib/bn.js\");\nexports.BN = BN;\nvar rlp = __webpack_require__(/*! rlp */ \"./node_modules/rlp/dist.browser/index.js\");\nexports.rlp = rlp;\nObject.assign(exports, ethjsUtil);\n/**\n * Constants\n */\n__exportStar(__webpack_require__(/*! ./constants */ \"./node_modules/@metamask/eth-sig-util/node_modules/ethereumjs-util/dist/constants.js\"), exports);\n/**\n * Public-key cryptography (secp256k1) and addresses\n */\n__exportStar(__webpack_require__(/*! ./account */ \"./node_modules/@metamask/eth-sig-util/node_modules/ethereumjs-util/dist/account.js\"), exports);\n/**\n * Hash functions\n */\n__exportStar(__webpack_require__(/*! ./hash */ \"./node_modules/@metamask/eth-sig-util/node_modules/ethereumjs-util/dist/hash.js\"), exports);\n/**\n * ECDSA signature\n */\n__exportStar(__webpack_require__(/*! ./signature */ \"./node_modules/@metamask/eth-sig-util/node_modules/ethereumjs-util/dist/signature.js\"), exports);\n/**\n * Utilities for manipulating Buffers, byte arrays, etc.\n */\n__exportStar(__webpack_require__(/*! ./bytes */ \"./node_modules/@metamask/eth-sig-util/node_modules/ethereumjs-util/dist/bytes.js\"), exports);\n/**\n * Function for definining properties on an object\n */\n__exportStar(__webpack_require__(/*! ./object */ \"./node_modules/@metamask/eth-sig-util/node_modules/ethereumjs-util/dist/object.js\"), exports);\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG1ldGFtYXNrL2V0aC1zaWctdXRpbC9ub2RlX21vZHVsZXMvZXRoZXJldW1qcy11dGlsL2Rpc3QvaW5kZXguanMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0EsbUNBQW1DLG9DQUFvQyxnQkFBZ0I7QUFDdkYsQ0FBQztBQUNEO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGlCQUFpQixHQUFHLFdBQVcsR0FBRyxVQUFVO0FBQzVDLGdCQUFnQixtQkFBTyxDQUFDLDZIQUF1QjtBQUMvQyxpQkFBaUI7QUFDakIsZ0JBQWdCLG1CQUFPLENBQUMsMERBQVk7QUFDcEMsU0FBUyxtQkFBTyxDQUFDLDZDQUFPO0FBQ3hCLFVBQVU7QUFDVixVQUFVLG1CQUFPLENBQUMscURBQUs7QUFDdkIsV0FBVztBQUNYO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYSxtQkFBTyxDQUFDLHlHQUFhO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBLGFBQWEsbUJBQU8sQ0FBQyxxR0FBVztBQUNoQztBQUNBO0FBQ0E7QUFDQSxhQUFhLG1CQUFPLENBQUMsK0ZBQVE7QUFDN0I7QUFDQTtBQUNBO0FBQ0EsYUFBYSxtQkFBTyxDQUFDLHlHQUFhO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBLGFBQWEsbUJBQU8sQ0FBQyxpR0FBUztBQUM5QjtBQUNBO0FBQ0E7QUFDQSxhQUFhLG1CQUFPLENBQUMsbUdBQVU7QUFDL0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BtZXRhbWFzay9ldGgtc2lnLXV0aWwvbm9kZV9tb2R1bGVzL2V0aGVyZXVtanMtdXRpbC9kaXN0L2luZGV4LmpzPzkyZTUiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19jcmVhdGVCaW5kaW5nID0gKHRoaXMgJiYgdGhpcy5fX2NyZWF0ZUJpbmRpbmcpIHx8IChPYmplY3QuY3JlYXRlID8gKGZ1bmN0aW9uKG8sIG0sIGssIGsyKSB7XG4gICAgaWYgKGsyID09PSB1bmRlZmluZWQpIGsyID0gaztcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkobywgazIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbigpIHsgcmV0dXJuIG1ba107IH0gfSk7XG59KSA6IChmdW5jdGlvbihvLCBtLCBrLCBrMikge1xuICAgIGlmIChrMiA9PT0gdW5kZWZpbmVkKSBrMiA9IGs7XG4gICAgb1trMl0gPSBtW2tdO1xufSkpO1xudmFyIF9fZXhwb3J0U3RhciA9ICh0aGlzICYmIHRoaXMuX19leHBvcnRTdGFyKSB8fCBmdW5jdGlvbihtLCBleHBvcnRzKSB7XG4gICAgZm9yICh2YXIgcCBpbiBtKSBpZiAocCAhPT0gXCJkZWZhdWx0XCIgJiYgIWV4cG9ydHMuaGFzT3duUHJvcGVydHkocCkpIF9fY3JlYXRlQmluZGluZyhleHBvcnRzLCBtLCBwKTtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLnNlY3AyNTZrMSA9IGV4cG9ydHMucmxwID0gZXhwb3J0cy5CTiA9IHZvaWQgMDtcbnZhciBzZWNwMjU2azEgPSByZXF1aXJlKCcuL3NlY3AyNTZrMXYzLWFkYXB0ZXInKTtcbmV4cG9ydHMuc2VjcDI1NmsxID0gc2VjcDI1NmsxO1xudmFyIGV0aGpzVXRpbCA9IHJlcXVpcmUoJ2V0aGpzLXV0aWwnKTtcbnZhciBCTiA9IHJlcXVpcmUoXCJibi5qc1wiKTtcbmV4cG9ydHMuQk4gPSBCTjtcbnZhciBybHAgPSByZXF1aXJlKFwicmxwXCIpO1xuZXhwb3J0cy5ybHAgPSBybHA7XG5PYmplY3QuYXNzaWduKGV4cG9ydHMsIGV0aGpzVXRpbCk7XG4vKipcbiAqIENvbnN0YW50c1xuICovXG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vY29uc3RhbnRzXCIpLCBleHBvcnRzKTtcbi8qKlxuICogUHVibGljLWtleSBjcnlwdG9ncmFwaHkgKHNlY3AyNTZrMSkgYW5kIGFkZHJlc3Nlc1xuICovXG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vYWNjb3VudFwiKSwgZXhwb3J0cyk7XG4vKipcbiAqIEhhc2ggZnVuY3Rpb25zXG4gKi9cbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9oYXNoXCIpLCBleHBvcnRzKTtcbi8qKlxuICogRUNEU0Egc2lnbmF0dXJlXG4gKi9cbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9zaWduYXR1cmVcIiksIGV4cG9ydHMpO1xuLyoqXG4gKiBVdGlsaXRpZXMgZm9yIG1hbmlwdWxhdGluZyBCdWZmZXJzLCBieXRlIGFycmF5cywgZXRjLlxuICovXG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vYnl0ZXNcIiksIGV4cG9ydHMpO1xuLyoqXG4gKiBGdW5jdGlvbiBmb3IgZGVmaW5pbmluZyBwcm9wZXJ0aWVzIG9uIGFuIG9iamVjdFxuICovXG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vb2JqZWN0XCIpLCBleHBvcnRzKTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@metamask/eth-sig-util/node_modules/ethereumjs-util/dist/index.js\n");

/***/ }),

/***/ "./node_modules/@metamask/eth-sig-util/node_modules/ethereumjs-util/dist/object.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@metamask/eth-sig-util/node_modules/ethereumjs-util/dist/object.js ***!
  \*****************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"./node_modules/buffer/index.js\")[\"Buffer\"];\n\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.defineProperties = void 0;\nvar assert = __webpack_require__(/*! assert */ \"./node_modules/assert/build/assert.js\");\nvar ethjsUtil = __webpack_require__(/*! ethjs-util */ \"./node_modules/ethjs-util/lib/index.js\");\nvar rlp = __webpack_require__(/*! rlp */ \"./node_modules/rlp/dist.browser/index.js\");\nvar bytes_1 = __webpack_require__(/*! ./bytes */ \"./node_modules/@metamask/eth-sig-util/node_modules/ethereumjs-util/dist/bytes.js\");\n/**\n * Defines properties on a `Object`. It make the assumption that underlying data is binary.\n * @param self the `Object` to define properties on\n * @param fields an array fields to define. Fields can contain:\n * * `name` - the name of the properties\n * * `length` - the number of bytes the field can have\n * * `allowLess` - if the field can be less than the length\n * * `allowEmpty`\n * @param data data to be validated against the definitions\n * @deprecated\n */\nexports.defineProperties = function (self, fields, data) {\n    self.raw = [];\n    self._fields = [];\n    // attach the `toJSON`\n    self.toJSON = function (label) {\n        if (label === void 0) { label = false; }\n        if (label) {\n            var obj_1 = {};\n            self._fields.forEach(function (field) {\n                obj_1[field] = \"0x\" + self[field].toString('hex');\n            });\n            return obj_1;\n        }\n        return bytes_1.baToJSON(self.raw);\n    };\n    self.serialize = function serialize() {\n        return rlp.encode(self.raw);\n    };\n    fields.forEach(function (field, i) {\n        self._fields.push(field.name);\n        function getter() {\n            return self.raw[i];\n        }\n        function setter(v) {\n            v = bytes_1.toBuffer(v);\n            if (v.toString('hex') === '00' && !field.allowZero) {\n                v = Buffer.allocUnsafe(0);\n            }\n            if (field.allowLess && field.length) {\n                v = bytes_1.stripZeros(v);\n                assert(field.length >= v.length, \"The field \" + field.name + \" must not have more \" + field.length + \" bytes\");\n            }\n            else if (!(field.allowZero && v.length === 0) && field.length) {\n                assert(field.length === v.length, \"The field \" + field.name + \" must have byte length of \" + field.length);\n            }\n            self.raw[i] = v;\n        }\n        Object.defineProperty(self, field.name, {\n            enumerable: true,\n            configurable: true,\n            get: getter,\n            set: setter,\n        });\n        if (field.default) {\n            self[field.name] = field.default;\n        }\n        // attach alias\n        if (field.alias) {\n            Object.defineProperty(self, field.alias, {\n                enumerable: false,\n                configurable: true,\n                set: setter,\n                get: getter,\n            });\n        }\n    });\n    // if the constuctor is passed data\n    if (data) {\n        if (typeof data === 'string') {\n            data = Buffer.from(ethjsUtil.stripHexPrefix(data), 'hex');\n        }\n        if (Buffer.isBuffer(data)) {\n            data = rlp.decode(data);\n        }\n        if (Array.isArray(data)) {\n            if (data.length > self._fields.length) {\n                throw new Error('wrong number of fields in data');\n            }\n            // make sure all the items are buffers\n            data.forEach(function (d, i) {\n                self[self._fields[i]] = bytes_1.toBuffer(d);\n            });\n        }\n        else if (typeof data === 'object') {\n            var keys_1 = Object.keys(data);\n            fields.forEach(function (field) {\n                if (keys_1.indexOf(field.name) !== -1)\n                    self[field.name] = data[field.name];\n                if (keys_1.indexOf(field.alias) !== -1)\n                    self[field.alias] = data[field.alias];\n            });\n        }\n        else {\n            throw new Error('invalid data');\n        }\n    }\n};\n//# sourceMappingURL=object.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG1ldGFtYXNrL2V0aC1zaWctdXRpbC9ub2RlX21vZHVsZXMvZXRoZXJldW1qcy11dGlsL2Rpc3Qvb2JqZWN0LmpzLmpzIiwibWFwcGluZ3MiOiI7QUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCx3QkFBd0I7QUFDeEIsYUFBYSxtQkFBTyxDQUFDLHFEQUFRO0FBQzdCLGdCQUFnQixtQkFBTyxDQUFDLDBEQUFZO0FBQ3BDLFVBQVUsbUJBQU8sQ0FBQyxxREFBSztBQUN2QixjQUFjLG1CQUFPLENBQUMsaUdBQVM7QUFDL0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QjtBQUN4QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdDQUFnQztBQUNoQztBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsTUFBTTtBQUMxQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CLE1BQU07QUFDekI7QUFDQSxZQUFZLE1BQU07QUFDbEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BtZXRhbWFzay9ldGgtc2lnLXV0aWwvbm9kZV9tb2R1bGVzL2V0aGVyZXVtanMtdXRpbC9kaXN0L29iamVjdC5qcz80ZWI3Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5kZWZpbmVQcm9wZXJ0aWVzID0gdm9pZCAwO1xudmFyIGFzc2VydCA9IHJlcXVpcmUoJ2Fzc2VydCcpO1xudmFyIGV0aGpzVXRpbCA9IHJlcXVpcmUoJ2V0aGpzLXV0aWwnKTtcbnZhciBybHAgPSByZXF1aXJlKFwicmxwXCIpO1xudmFyIGJ5dGVzXzEgPSByZXF1aXJlKFwiLi9ieXRlc1wiKTtcbi8qKlxuICogRGVmaW5lcyBwcm9wZXJ0aWVzIG9uIGEgYE9iamVjdGAuIEl0IG1ha2UgdGhlIGFzc3VtcHRpb24gdGhhdCB1bmRlcmx5aW5nIGRhdGEgaXMgYmluYXJ5LlxuICogQHBhcmFtIHNlbGYgdGhlIGBPYmplY3RgIHRvIGRlZmluZSBwcm9wZXJ0aWVzIG9uXG4gKiBAcGFyYW0gZmllbGRzIGFuIGFycmF5IGZpZWxkcyB0byBkZWZpbmUuIEZpZWxkcyBjYW4gY29udGFpbjpcbiAqICogYG5hbWVgIC0gdGhlIG5hbWUgb2YgdGhlIHByb3BlcnRpZXNcbiAqICogYGxlbmd0aGAgLSB0aGUgbnVtYmVyIG9mIGJ5dGVzIHRoZSBmaWVsZCBjYW4gaGF2ZVxuICogKiBgYWxsb3dMZXNzYCAtIGlmIHRoZSBmaWVsZCBjYW4gYmUgbGVzcyB0aGFuIHRoZSBsZW5ndGhcbiAqICogYGFsbG93RW1wdHlgXG4gKiBAcGFyYW0gZGF0YSBkYXRhIHRvIGJlIHZhbGlkYXRlZCBhZ2FpbnN0IHRoZSBkZWZpbml0aW9uc1xuICogQGRlcHJlY2F0ZWRcbiAqL1xuZXhwb3J0cy5kZWZpbmVQcm9wZXJ0aWVzID0gZnVuY3Rpb24gKHNlbGYsIGZpZWxkcywgZGF0YSkge1xuICAgIHNlbGYucmF3ID0gW107XG4gICAgc2VsZi5fZmllbGRzID0gW107XG4gICAgLy8gYXR0YWNoIHRoZSBgdG9KU09OYFxuICAgIHNlbGYudG9KU09OID0gZnVuY3Rpb24gKGxhYmVsKSB7XG4gICAgICAgIGlmIChsYWJlbCA9PT0gdm9pZCAwKSB7IGxhYmVsID0gZmFsc2U7IH1cbiAgICAgICAgaWYgKGxhYmVsKSB7XG4gICAgICAgICAgICB2YXIgb2JqXzEgPSB7fTtcbiAgICAgICAgICAgIHNlbGYuX2ZpZWxkcy5mb3JFYWNoKGZ1bmN0aW9uIChmaWVsZCkge1xuICAgICAgICAgICAgICAgIG9ial8xW2ZpZWxkXSA9IFwiMHhcIiArIHNlbGZbZmllbGRdLnRvU3RyaW5nKCdoZXgnKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgcmV0dXJuIG9ial8xO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBieXRlc18xLmJhVG9KU09OKHNlbGYucmF3KTtcbiAgICB9O1xuICAgIHNlbGYuc2VyaWFsaXplID0gZnVuY3Rpb24gc2VyaWFsaXplKCkge1xuICAgICAgICByZXR1cm4gcmxwLmVuY29kZShzZWxmLnJhdyk7XG4gICAgfTtcbiAgICBmaWVsZHMuZm9yRWFjaChmdW5jdGlvbiAoZmllbGQsIGkpIHtcbiAgICAgICAgc2VsZi5fZmllbGRzLnB1c2goZmllbGQubmFtZSk7XG4gICAgICAgIGZ1bmN0aW9uIGdldHRlcigpIHtcbiAgICAgICAgICAgIHJldHVybiBzZWxmLnJhd1tpXTtcbiAgICAgICAgfVxuICAgICAgICBmdW5jdGlvbiBzZXR0ZXIodikge1xuICAgICAgICAgICAgdiA9IGJ5dGVzXzEudG9CdWZmZXIodik7XG4gICAgICAgICAgICBpZiAodi50b1N0cmluZygnaGV4JykgPT09ICcwMCcgJiYgIWZpZWxkLmFsbG93WmVybykge1xuICAgICAgICAgICAgICAgIHYgPSBCdWZmZXIuYWxsb2NVbnNhZmUoMCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoZmllbGQuYWxsb3dMZXNzICYmIGZpZWxkLmxlbmd0aCkge1xuICAgICAgICAgICAgICAgIHYgPSBieXRlc18xLnN0cmlwWmVyb3Modik7XG4gICAgICAgICAgICAgICAgYXNzZXJ0KGZpZWxkLmxlbmd0aCA+PSB2Lmxlbmd0aCwgXCJUaGUgZmllbGQgXCIgKyBmaWVsZC5uYW1lICsgXCIgbXVzdCBub3QgaGF2ZSBtb3JlIFwiICsgZmllbGQubGVuZ3RoICsgXCIgYnl0ZXNcIik7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIGlmICghKGZpZWxkLmFsbG93WmVybyAmJiB2Lmxlbmd0aCA9PT0gMCkgJiYgZmllbGQubGVuZ3RoKSB7XG4gICAgICAgICAgICAgICAgYXNzZXJ0KGZpZWxkLmxlbmd0aCA9PT0gdi5sZW5ndGgsIFwiVGhlIGZpZWxkIFwiICsgZmllbGQubmFtZSArIFwiIG11c3QgaGF2ZSBieXRlIGxlbmd0aCBvZiBcIiArIGZpZWxkLmxlbmd0aCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBzZWxmLnJhd1tpXSA9IHY7XG4gICAgICAgIH1cbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHNlbGYsIGZpZWxkLm5hbWUsIHtcbiAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICAgICAgICBnZXQ6IGdldHRlcixcbiAgICAgICAgICAgIHNldDogc2V0dGVyLFxuICAgICAgICB9KTtcbiAgICAgICAgaWYgKGZpZWxkLmRlZmF1bHQpIHtcbiAgICAgICAgICAgIHNlbGZbZmllbGQubmFtZV0gPSBmaWVsZC5kZWZhdWx0O1xuICAgICAgICB9XG4gICAgICAgIC8vIGF0dGFjaCBhbGlhc1xuICAgICAgICBpZiAoZmllbGQuYWxpYXMpIHtcbiAgICAgICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShzZWxmLCBmaWVsZC5hbGlhcywge1xuICAgICAgICAgICAgICAgIGVudW1lcmFibGU6IGZhbHNlLFxuICAgICAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgICAgICBzZXQ6IHNldHRlcixcbiAgICAgICAgICAgICAgICBnZXQ6IGdldHRlcixcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgfSk7XG4gICAgLy8gaWYgdGhlIGNvbnN0dWN0b3IgaXMgcGFzc2VkIGRhdGFcbiAgICBpZiAoZGF0YSkge1xuICAgICAgICBpZiAodHlwZW9mIGRhdGEgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICBkYXRhID0gQnVmZmVyLmZyb20oZXRoanNVdGlsLnN0cmlwSGV4UHJlZml4KGRhdGEpLCAnaGV4Jyk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKEJ1ZmZlci5pc0J1ZmZlcihkYXRhKSkge1xuICAgICAgICAgICAgZGF0YSA9IHJscC5kZWNvZGUoZGF0YSk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKEFycmF5LmlzQXJyYXkoZGF0YSkpIHtcbiAgICAgICAgICAgIGlmIChkYXRhLmxlbmd0aCA+IHNlbGYuX2ZpZWxkcy5sZW5ndGgpIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ3dyb25nIG51bWJlciBvZiBmaWVsZHMgaW4gZGF0YScpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgLy8gbWFrZSBzdXJlIGFsbCB0aGUgaXRlbXMgYXJlIGJ1ZmZlcnNcbiAgICAgICAgICAgIGRhdGEuZm9yRWFjaChmdW5jdGlvbiAoZCwgaSkge1xuICAgICAgICAgICAgICAgIHNlbGZbc2VsZi5fZmllbGRzW2ldXSA9IGJ5dGVzXzEudG9CdWZmZXIoZCk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmICh0eXBlb2YgZGF0YSA9PT0gJ29iamVjdCcpIHtcbiAgICAgICAgICAgIHZhciBrZXlzXzEgPSBPYmplY3Qua2V5cyhkYXRhKTtcbiAgICAgICAgICAgIGZpZWxkcy5mb3JFYWNoKGZ1bmN0aW9uIChmaWVsZCkge1xuICAgICAgICAgICAgICAgIGlmIChrZXlzXzEuaW5kZXhPZihmaWVsZC5uYW1lKSAhPT0gLTEpXG4gICAgICAgICAgICAgICAgICAgIHNlbGZbZmllbGQubmFtZV0gPSBkYXRhW2ZpZWxkLm5hbWVdO1xuICAgICAgICAgICAgICAgIGlmIChrZXlzXzEuaW5kZXhPZihmaWVsZC5hbGlhcykgIT09IC0xKVxuICAgICAgICAgICAgICAgICAgICBzZWxmW2ZpZWxkLmFsaWFzXSA9IGRhdGFbZmllbGQuYWxpYXNdO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ2ludmFsaWQgZGF0YScpO1xuICAgICAgICB9XG4gICAgfVxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPW9iamVjdC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@metamask/eth-sig-util/node_modules/ethereumjs-util/dist/object.js\n");

/***/ }),

/***/ "./node_modules/@metamask/eth-sig-util/node_modules/ethereumjs-util/dist/secp256k1v3-adapter.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/@metamask/eth-sig-util/node_modules/ethereumjs-util/dist/secp256k1v3-adapter.js ***!
  \******************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"./node_modules/buffer/index.js\")[\"Buffer\"];\n\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ecdhUnsafe = exports.ecdh = exports.recover = exports.verify = exports.sign = exports.signatureImportLax = exports.signatureImport = exports.signatureExport = exports.signatureNormalize = exports.publicKeyCombine = exports.publicKeyTweakMul = exports.publicKeyTweakAdd = exports.publicKeyVerify = exports.publicKeyConvert = exports.publicKeyCreate = exports.privateKeyTweakMul = exports.privateKeyTweakAdd = exports.privateKeyModInverse = exports.privateKeyNegate = exports.privateKeyImport = exports.privateKeyExport = exports.privateKeyVerify = void 0;\nvar secp256k1 = __webpack_require__(/*! ethereum-cryptography/secp256k1 */ \"./node_modules/ethereum-cryptography/secp256k1.js\");\nvar secp256k1v3 = __webpack_require__(/*! ./secp256k1v3-lib/index */ \"./node_modules/@metamask/eth-sig-util/node_modules/ethereumjs-util/dist/secp256k1v3-lib/index.js\");\nvar der = __webpack_require__(/*! ./secp256k1v3-lib/der */ \"./node_modules/@metamask/eth-sig-util/node_modules/ethereumjs-util/dist/secp256k1v3-lib/der.js\");\n/**\n * Verify an ECDSA privateKey\n * @method privateKeyVerify\n * @param {Buffer} privateKey\n * @return {boolean}\n */\nexports.privateKeyVerify = function (privateKey) {\n    // secp256k1 v4 version throws when privateKey length is not 32\n    if (privateKey.length !== 32) {\n        return false;\n    }\n    return secp256k1.privateKeyVerify(Uint8Array.from(privateKey));\n};\n/**\n * Export a privateKey in DER format\n * @method privateKeyExport\n * @param {Buffer} privateKey\n * @param {boolean} compressed\n * @return {boolean}\n */\nexports.privateKeyExport = function (privateKey, compressed) {\n    // secp256k1 v4 version throws when privateKey length is not 32\n    if (privateKey.length !== 32) {\n        throw new RangeError('private key length is invalid');\n    }\n    var publicKey = secp256k1v3.privateKeyExport(privateKey, compressed);\n    return der.privateKeyExport(privateKey, publicKey, compressed);\n};\n/**\n * Import a privateKey in DER format\n * @method privateKeyImport\n * @param {Buffer} privateKey\n * @return {Buffer}\n */\nexports.privateKeyImport = function (privateKey) {\n    // privateKeyImport method is not part of secp256k1 v4 package\n    // this implementation is based on v3\n    privateKey = der.privateKeyImport(privateKey);\n    if (privateKey !== null && privateKey.length === 32 && exports.privateKeyVerify(privateKey)) {\n        return privateKey;\n    }\n    throw new Error(\"couldn't import from DER format\");\n};\n/**\n * Negate a privateKey by subtracting it from the order of the curve's base point\n * @method privateKeyNegate\n * @param {Buffer} privateKey\n * @return {Buffer}\n */\nexports.privateKeyNegate = function (privateKey) {\n    return Buffer.from(secp256k1.privateKeyNegate(Uint8Array.from(privateKey)));\n};\n/**\n * Compute the inverse of a privateKey (modulo the order of the curve's base point).\n * @method privateKeyModInverse\n * @param {Buffer} privateKey\n * @return {Buffer}\n */\nexports.privateKeyModInverse = function (privateKey) {\n    if (privateKey.length !== 32) {\n        throw new Error('private key length is invalid');\n    }\n    return Buffer.from(secp256k1v3.privateKeyModInverse(Uint8Array.from(privateKey)));\n};\n/**\n * Tweak a privateKey by adding tweak to it.\n * @method privateKeyTweakAdd\n * @param {Buffer} privateKey\n * @param {Buffer} tweak\n * @return {Buffer}\n */\nexports.privateKeyTweakAdd = function (privateKey, tweak) {\n    return Buffer.from(secp256k1.privateKeyTweakAdd(Uint8Array.from(privateKey), tweak));\n};\n/**\n * Tweak a privateKey by multiplying it by a tweak.\n * @method privateKeyTweakMul\n * @param {Buffer} privateKey\n * @param {Buffer} tweak\n * @return {Buffer}\n */\nexports.privateKeyTweakMul = function (privateKey, tweak) {\n    return Buffer.from(secp256k1.privateKeyTweakMul(Uint8Array.from(privateKey), Uint8Array.from(tweak)));\n};\n/**\n * Compute the public key for a privateKey.\n * @method publicKeyCreate\n * @param {Buffer} privateKey\n * @param {boolean} compressed\n * @return {Buffer}\n */\nexports.publicKeyCreate = function (privateKey, compressed) {\n    return Buffer.from(secp256k1.publicKeyCreate(Uint8Array.from(privateKey), compressed));\n};\n/**\n * Convert a publicKey to compressed or uncompressed form.\n * @method publicKeyConvert\n * @param {Buffer} publicKey\n * @param {boolean} compressed\n * @return {Buffer}\n */\nexports.publicKeyConvert = function (publicKey, compressed) {\n    return Buffer.from(secp256k1.publicKeyConvert(Uint8Array.from(publicKey), compressed));\n};\n/**\n * Verify an ECDSA publicKey.\n * @method publicKeyVerify\n * @param {Buffer} publicKey\n * @return {boolean}\n */\nexports.publicKeyVerify = function (publicKey) {\n    // secp256k1 v4 version throws when publicKey length is not 33 or 65\n    if (publicKey.length !== 33 && publicKey.length !== 65) {\n        return false;\n    }\n    return secp256k1.publicKeyVerify(Uint8Array.from(publicKey));\n};\n/**\n * Tweak a publicKey by adding tweak times the generator to it.\n * @method publicKeyTweakAdd\n * @param {Buffer} publicKey\n * @param {Buffer} tweak\n * @param {boolean} compressed\n * @return {Buffer}\n */\nexports.publicKeyTweakAdd = function (publicKey, tweak, compressed) {\n    return Buffer.from(secp256k1.publicKeyTweakAdd(Uint8Array.from(publicKey), Uint8Array.from(tweak), compressed));\n};\n/**\n * Tweak a publicKey by multiplying it by a tweak value\n * @method publicKeyTweakMul\n * @param {Buffer} publicKey\n * @param {Buffer} tweak\n * @param {boolean} compressed\n * @return {Buffer}\n */\nexports.publicKeyTweakMul = function (publicKey, tweak, compressed) {\n    return Buffer.from(secp256k1.publicKeyTweakMul(Uint8Array.from(publicKey), Uint8Array.from(tweak), compressed));\n};\n/**\n * Add a given publicKeys together.\n * @method publicKeyCombine\n * @param {Array<Buffer>} publicKeys\n * @param {boolean} compressed\n * @return {Buffer}\n */\nexports.publicKeyCombine = function (publicKeys, compressed) {\n    var keys = [];\n    publicKeys.forEach(function (publicKey) {\n        keys.push(Uint8Array.from(publicKey));\n    });\n    return Buffer.from(secp256k1.publicKeyCombine(keys, compressed));\n};\n/**\n * Convert a signature to a normalized lower-S form.\n * @method signatureNormalize\n * @param {Buffer} signature\n * @return {Buffer}\n */\nexports.signatureNormalize = function (signature) {\n    return Buffer.from(secp256k1.signatureNormalize(Uint8Array.from(signature)));\n};\n/**\n * Serialize an ECDSA signature in DER format.\n * @method signatureExport\n * @param {Buffer} signature\n * @return {Buffer}\n */\nexports.signatureExport = function (signature) {\n    return Buffer.from(secp256k1.signatureExport(Uint8Array.from(signature)));\n};\n/**\n * Parse a DER ECDSA signature (follow by [BIP66](https://github.com/bitcoin/bips/blob/master/bip-0066.mediawiki)).\n * @method signatureImport\n * @param {Buffer} signature\n * @return {Buffer}\n */\nexports.signatureImport = function (signature) {\n    return Buffer.from(secp256k1.signatureImport(Uint8Array.from(signature)));\n};\n/**\n * Parse a DER ECDSA signature (not follow by [BIP66](https://github.com/bitcoin/bips/blob/master/bip-0066.mediawiki)).\n * @method signatureImportLax\n * @param {Buffer} signature\n * @return {Buffer}\n */\nexports.signatureImportLax = function (signature) {\n    // signatureImportLax method is not part of secp256k1 v4 package\n    // this implementation is based on v3\n    // ensure that signature is greater than 0\n    if (signature.length === 0) {\n        throw new RangeError('signature length is invalid');\n    }\n    var sigObj = der.signatureImportLax(signature);\n    if (sigObj === null) {\n        throw new Error(\"couldn't parse DER signature\");\n    }\n    return secp256k1v3.signatureImport(sigObj);\n};\n/**\n * Create an ECDSA signature. Always return low-S signature.\n * @method sign\n * @param {Buffer} message\n * @param {Buffer} privateKey\n * @param {Object} options\n * @return {Buffer}\n */\nexports.sign = function (message, privateKey, options) {\n    if (options === null) {\n        throw new TypeError('options should be an Object');\n    }\n    var signOptions = undefined;\n    if (options) {\n        signOptions = {};\n        if (options.data === null) {\n            // validate option.data length\n            throw new TypeError('options.data should be a Buffer');\n        }\n        if (options.data) {\n            if (options.data.length != 32) {\n                throw new RangeError('options.data length is invalid');\n            }\n            signOptions.data = new Uint8Array(options.data);\n        }\n        if (options.noncefn === null) {\n            throw new TypeError('options.noncefn should be a Function');\n        }\n        if (options.noncefn) {\n            // convert option.noncefn function signature\n            signOptions.noncefn = function (message, privateKey, algo, data, attempt) {\n                var bufferAlgo = algo != null ? Buffer.from(algo) : null;\n                var bufferData = data != null ? Buffer.from(data) : null;\n                var buffer = Buffer.from('');\n                if (options.noncefn) {\n                    buffer = options.noncefn(Buffer.from(message), Buffer.from(privateKey), bufferAlgo, bufferData, attempt);\n                }\n                return new Uint8Array(buffer);\n            };\n        }\n    }\n    var sig = secp256k1.ecdsaSign(Uint8Array.from(message), Uint8Array.from(privateKey), signOptions);\n    return {\n        signature: Buffer.from(sig.signature),\n        recovery: sig.recid,\n    };\n};\n/**\n * Verify an ECDSA signature.\n * @method verify\n * @param {Buffer} message\n * @param {Buffer} signature\n * @param {Buffer} publicKey\n * @return {boolean}\n */\nexports.verify = function (message, signature, publicKey) {\n    return secp256k1.ecdsaVerify(Uint8Array.from(signature), Uint8Array.from(message), publicKey);\n};\n/**\n * Recover an ECDSA public key from a signature.\n * @method recover\n * @param {Buffer} message\n * @param {Buffer} signature\n * @param {Number} recid\n * @param {boolean} compressed\n * @return {Buffer}\n */\nexports.recover = function (message, signature, recid, compressed) {\n    return Buffer.from(secp256k1.ecdsaRecover(Uint8Array.from(signature), recid, Uint8Array.from(message), compressed));\n};\n/**\n * Compute an EC Diffie-Hellman secret and applied sha256 to compressed public key.\n * @method ecdh\n * @param {Buffer} publicKey\n * @param {Buffer} privateKey\n * @return {Buffer}\n */\nexports.ecdh = function (publicKey, privateKey) {\n    // note: secp256k1 v3 doesn't allow optional parameter\n    return Buffer.from(secp256k1.ecdh(Uint8Array.from(publicKey), Uint8Array.from(privateKey), {}));\n};\nexports.ecdhUnsafe = function (publicKey, privateKey, compressed) {\n    // ecdhUnsafe method is not part of secp256k1 v4 package\n    // this implementation is based on v3\n    // ensure valid publicKey length\n    if (publicKey.length !== 33 && publicKey.length !== 65) {\n        throw new RangeError('public key length is invalid');\n    }\n    // ensure valid privateKey length\n    if (privateKey.length !== 32) {\n        throw new RangeError('private key length is invalid');\n    }\n    return Buffer.from(secp256k1v3.ecdhUnsafe(Uint8Array.from(publicKey), Uint8Array.from(privateKey), compressed));\n};\n//# sourceMappingURL=secp256k1v3-adapter.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@metamask/eth-sig-util/node_modules/ethereumjs-util/dist/secp256k1v3-adapter.js\n");

/***/ }),

/***/ "./node_modules/@metamask/eth-sig-util/node_modules/ethereumjs-util/dist/secp256k1v3-lib/der.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/@metamask/eth-sig-util/node_modules/ethereumjs-util/dist/secp256k1v3-lib/der.js ***!
  \******************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"./node_modules/buffer/index.js\")[\"Buffer\"];\n\n// This file is imported from secp256k1 v3\n// https://github.com/cryptocoinjs/secp256k1-node/blob/master/LICENSE\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar EC_PRIVKEY_EXPORT_DER_COMPRESSED = Buffer.from([\n    // begin\n    0x30,\n    0x81,\n    0xd3,\n    0x02,\n    0x01,\n    0x01,\n    0x04,\n    0x20,\n    // private key\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    // middle\n    0xa0,\n    0x81,\n    0x85,\n    0x30,\n    0x81,\n    0x82,\n    0x02,\n    0x01,\n    0x01,\n    0x30,\n    0x2c,\n    0x06,\n    0x07,\n    0x2a,\n    0x86,\n    0x48,\n    0xce,\n    0x3d,\n    0x01,\n    0x01,\n    0x02,\n    0x21,\n    0x00,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xfe,\n    0xff,\n    0xff,\n    0xfc,\n    0x2f,\n    0x30,\n    0x06,\n    0x04,\n    0x01,\n    0x00,\n    0x04,\n    0x01,\n    0x07,\n    0x04,\n    0x21,\n    0x02,\n    0x79,\n    0xbe,\n    0x66,\n    0x7e,\n    0xf9,\n    0xdc,\n    0xbb,\n    0xac,\n    0x55,\n    0xa0,\n    0x62,\n    0x95,\n    0xce,\n    0x87,\n    0x0b,\n    0x07,\n    0x02,\n    0x9b,\n    0xfc,\n    0xdb,\n    0x2d,\n    0xce,\n    0x28,\n    0xd9,\n    0x59,\n    0xf2,\n    0x81,\n    0x5b,\n    0x16,\n    0xf8,\n    0x17,\n    0x98,\n    0x02,\n    0x21,\n    0x00,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xfe,\n    0xba,\n    0xae,\n    0xdc,\n    0xe6,\n    0xaf,\n    0x48,\n    0xa0,\n    0x3b,\n    0xbf,\n    0xd2,\n    0x5e,\n    0x8c,\n    0xd0,\n    0x36,\n    0x41,\n    0x41,\n    0x02,\n    0x01,\n    0x01,\n    0xa1,\n    0x24,\n    0x03,\n    0x22,\n    0x00,\n    // public key\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n]);\nvar EC_PRIVKEY_EXPORT_DER_UNCOMPRESSED = Buffer.from([\n    // begin\n    0x30,\n    0x82,\n    0x01,\n    0x13,\n    0x02,\n    0x01,\n    0x01,\n    0x04,\n    0x20,\n    // private key\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    // middle\n    0xa0,\n    0x81,\n    0xa5,\n    0x30,\n    0x81,\n    0xa2,\n    0x02,\n    0x01,\n    0x01,\n    0x30,\n    0x2c,\n    0x06,\n    0x07,\n    0x2a,\n    0x86,\n    0x48,\n    0xce,\n    0x3d,\n    0x01,\n    0x01,\n    0x02,\n    0x21,\n    0x00,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xfe,\n    0xff,\n    0xff,\n    0xfc,\n    0x2f,\n    0x30,\n    0x06,\n    0x04,\n    0x01,\n    0x00,\n    0x04,\n    0x01,\n    0x07,\n    0x04,\n    0x41,\n    0x04,\n    0x79,\n    0xbe,\n    0x66,\n    0x7e,\n    0xf9,\n    0xdc,\n    0xbb,\n    0xac,\n    0x55,\n    0xa0,\n    0x62,\n    0x95,\n    0xce,\n    0x87,\n    0x0b,\n    0x07,\n    0x02,\n    0x9b,\n    0xfc,\n    0xdb,\n    0x2d,\n    0xce,\n    0x28,\n    0xd9,\n    0x59,\n    0xf2,\n    0x81,\n    0x5b,\n    0x16,\n    0xf8,\n    0x17,\n    0x98,\n    0x48,\n    0x3a,\n    0xda,\n    0x77,\n    0x26,\n    0xa3,\n    0xc4,\n    0x65,\n    0x5d,\n    0xa4,\n    0xfb,\n    0xfc,\n    0x0e,\n    0x11,\n    0x08,\n    0xa8,\n    0xfd,\n    0x17,\n    0xb4,\n    0x48,\n    0xa6,\n    0x85,\n    0x54,\n    0x19,\n    0x9c,\n    0x47,\n    0xd0,\n    0x8f,\n    0xfb,\n    0x10,\n    0xd4,\n    0xb8,\n    0x02,\n    0x21,\n    0x00,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xfe,\n    0xba,\n    0xae,\n    0xdc,\n    0xe6,\n    0xaf,\n    0x48,\n    0xa0,\n    0x3b,\n    0xbf,\n    0xd2,\n    0x5e,\n    0x8c,\n    0xd0,\n    0x36,\n    0x41,\n    0x41,\n    0x02,\n    0x01,\n    0x01,\n    0xa1,\n    0x44,\n    0x03,\n    0x42,\n    0x00,\n    // public key\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n]);\nexports.privateKeyExport = function (privateKey, publicKey, compressed) {\n    if (compressed === void 0) { compressed = true; }\n    var result = Buffer.from(compressed ? EC_PRIVKEY_EXPORT_DER_COMPRESSED : EC_PRIVKEY_EXPORT_DER_UNCOMPRESSED);\n    privateKey.copy(result, compressed ? 8 : 9);\n    publicKey.copy(result, compressed ? 181 : 214);\n    return result;\n};\nexports.privateKeyImport = function (privateKey) {\n    var length = privateKey.length;\n    // sequence header\n    var index = 0;\n    if (length < index + 1 || privateKey[index] !== 0x30)\n        return null;\n    index += 1;\n    // sequence length constructor\n    if (length < index + 1 || !(privateKey[index] & 0x80))\n        return null;\n    var lenb = privateKey[index] & 0x7f;\n    index += 1;\n    if (lenb < 1 || lenb > 2)\n        return null;\n    if (length < index + lenb)\n        return null;\n    // sequence length\n    var len = privateKey[index + lenb - 1] | (lenb > 1 ? privateKey[index + lenb - 2] << 8 : 0);\n    index += lenb;\n    if (length < index + len)\n        return null;\n    // sequence element 0: version number (=1)\n    if (length < index + 3 ||\n        privateKey[index] !== 0x02 ||\n        privateKey[index + 1] !== 0x01 ||\n        privateKey[index + 2] !== 0x01) {\n        return null;\n    }\n    index += 3;\n    // sequence element 1: octet string, up to 32 bytes\n    if (length < index + 2 ||\n        privateKey[index] !== 0x04 ||\n        privateKey[index + 1] > 0x20 ||\n        length < index + 2 + privateKey[index + 1]) {\n        return null;\n    }\n    return privateKey.slice(index + 2, index + 2 + privateKey[index + 1]);\n};\nexports.signatureImportLax = function (signature) {\n    var r = Buffer.alloc(32, 0);\n    var s = Buffer.alloc(32, 0);\n    var length = signature.length;\n    var index = 0;\n    // sequence tag byte\n    if (signature[index++] !== 0x30) {\n        return null;\n    }\n    // sequence length byte\n    var lenbyte = signature[index++];\n    if (lenbyte & 0x80) {\n        index += lenbyte - 0x80;\n        if (index > length) {\n            return null;\n        }\n    }\n    // sequence tag byte for r\n    if (signature[index++] !== 0x02) {\n        return null;\n    }\n    // length for r\n    var rlen = signature[index++];\n    if (rlen & 0x80) {\n        lenbyte = rlen - 0x80;\n        if (index + lenbyte > length) {\n            return null;\n        }\n        for (; lenbyte > 0 && signature[index] === 0x00; index += 1, lenbyte -= 1)\n            ;\n        for (rlen = 0; lenbyte > 0; index += 1, lenbyte -= 1)\n            rlen = (rlen << 8) + signature[index];\n    }\n    if (rlen > length - index) {\n        return null;\n    }\n    var rindex = index;\n    index += rlen;\n    // sequence tag byte for s\n    if (signature[index++] !== 0x02) {\n        return null;\n    }\n    // length for s\n    var slen = signature[index++];\n    if (slen & 0x80) {\n        lenbyte = slen - 0x80;\n        if (index + lenbyte > length) {\n            return null;\n        }\n        for (; lenbyte > 0 && signature[index] === 0x00; index += 1, lenbyte -= 1)\n            ;\n        for (slen = 0; lenbyte > 0; index += 1, lenbyte -= 1)\n            slen = (slen << 8) + signature[index];\n    }\n    if (slen > length - index) {\n        return null;\n    }\n    var sindex = index;\n    index += slen;\n    // ignore leading zeros in r\n    for (; rlen > 0 && signature[rindex] === 0x00; rlen -= 1, rindex += 1)\n        ;\n    // copy r value\n    if (rlen > 32) {\n        return null;\n    }\n    var rvalue = signature.slice(rindex, rindex + rlen);\n    rvalue.copy(r, 32 - rvalue.length);\n    // ignore leading zeros in s\n    for (; slen > 0 && signature[sindex] === 0x00; slen -= 1, sindex += 1)\n        ;\n    // copy s value\n    if (slen > 32) {\n        return null;\n    }\n    var svalue = signature.slice(sindex, sindex + slen);\n    svalue.copy(s, 32 - svalue.length);\n    return { r: r, s: s };\n};\n//# sourceMappingURL=der.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@metamask/eth-sig-util/node_modules/ethereumjs-util/dist/secp256k1v3-lib/der.js\n");

/***/ }),

/***/ "./node_modules/@metamask/eth-sig-util/node_modules/ethereumjs-util/dist/secp256k1v3-lib/index.js":
/*!********************************************************************************************************!*\
  !*** ./node_modules/@metamask/eth-sig-util/node_modules/ethereumjs-util/dist/secp256k1v3-lib/index.js ***!
  \********************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"./node_modules/buffer/index.js\")[\"Buffer\"];\n\n// This file is imported from secp256k1 v3\n// https://github.com/cryptocoinjs/secp256k1-node/blob/master/LICENSE\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar BN = __webpack_require__(/*! bn.js */ \"./node_modules/bn.js/lib/bn.js\");\nvar EC = (__webpack_require__(/*! elliptic */ \"./node_modules/elliptic/lib/elliptic.js\").ec);\nvar ec = new EC('secp256k1');\nvar ecparams = ec.curve;\nexports.privateKeyExport = function (privateKey, compressed) {\n    if (compressed === void 0) { compressed = true; }\n    var d = new BN(privateKey);\n    if (d.ucmp(ecparams.n) >= 0) {\n        throw new Error(\"couldn't export to DER format\");\n    }\n    var point = ec.g.mul(d);\n    return toPublicKey(point.getX(), point.getY(), compressed);\n};\nexports.privateKeyModInverse = function (privateKey) {\n    var bn = new BN(privateKey);\n    if (bn.ucmp(ecparams.n) >= 0 || bn.isZero()) {\n        throw new Error('private key range is invalid');\n    }\n    return bn.invm(ecparams.n).toArrayLike(Buffer, 'be', 32);\n};\nexports.signatureImport = function (sigObj) {\n    var r = new BN(sigObj.r);\n    if (r.ucmp(ecparams.n) >= 0) {\n        r = new BN(0);\n    }\n    var s = new BN(sigObj.s);\n    if (s.ucmp(ecparams.n) >= 0) {\n        s = new BN(0);\n    }\n    return Buffer.concat([r.toArrayLike(Buffer, 'be', 32), s.toArrayLike(Buffer, 'be', 32)]);\n};\nexports.ecdhUnsafe = function (publicKey, privateKey, compressed) {\n    if (compressed === void 0) { compressed = true; }\n    var point = ec.keyFromPublic(publicKey);\n    var scalar = new BN(privateKey);\n    if (scalar.ucmp(ecparams.n) >= 0 || scalar.isZero()) {\n        throw new Error('scalar was invalid (zero or overflow)');\n    }\n    var shared = point.pub.mul(scalar);\n    return toPublicKey(shared.getX(), shared.getY(), compressed);\n};\nvar toPublicKey = function (x, y, compressed) {\n    var publicKey;\n    if (compressed) {\n        publicKey = Buffer.alloc(33);\n        publicKey[0] = y.isOdd() ? 0x03 : 0x02;\n        x.toArrayLike(Buffer, 'be', 32).copy(publicKey, 1);\n    }\n    else {\n        publicKey = Buffer.alloc(65);\n        publicKey[0] = 0x04;\n        x.toArrayLike(Buffer, 'be', 32).copy(publicKey, 1);\n        y.toArrayLike(Buffer, 'be', 32).copy(publicKey, 33);\n    }\n    return publicKey;\n};\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG1ldGFtYXNrL2V0aC1zaWctdXRpbC9ub2RlX21vZHVsZXMvZXRoZXJldW1qcy11dGlsL2Rpc3Qvc2VjcDI1NmsxdjMtbGliL2luZGV4LmpzLmpzIiwibWFwcGluZ3MiOiI7QUFBYTtBQUNiO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsU0FBUyxtQkFBTyxDQUFDLDZDQUFPO0FBQ3hCLFNBQVMsbUZBQXNCO0FBQy9CO0FBQ0E7QUFDQSx3QkFBd0I7QUFDeEIsaUNBQWlDO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNEJBQTRCO0FBQzVCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkNBQTJDLE1BQU07QUFDakQ7QUFDQSx1QkFBdUI7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsTUFBTSx1QkFBdUIsTUFBTSwyQkFBMkIsTUFBTTtBQUMvRTtBQUNBLGtCQUFrQjtBQUNsQixpQ0FBaUM7QUFDakM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQixNQUFNO0FBQzFCO0FBQ0Esc0JBQXNCLE1BQU07QUFDNUI7QUFDQTtBQUNBLG9CQUFvQixNQUFNO0FBQzFCO0FBQ0Esc0JBQXNCLE1BQU07QUFDNUIsc0JBQXNCLE1BQU07QUFDNUI7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BtZXRhbWFzay9ldGgtc2lnLXV0aWwvbm9kZV9tb2R1bGVzL2V0aGVyZXVtanMtdXRpbC9kaXN0L3NlY3AyNTZrMXYzLWxpYi9pbmRleC5qcz80Y2U4Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLy8gVGhpcyBmaWxlIGlzIGltcG9ydGVkIGZyb20gc2VjcDI1NmsxIHYzXG4vLyBodHRwczovL2dpdGh1Yi5jb20vY3J5cHRvY29pbmpzL3NlY3AyNTZrMS1ub2RlL2Jsb2IvbWFzdGVyL0xJQ0VOU0Vcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbnZhciBCTiA9IHJlcXVpcmUoXCJibi5qc1wiKTtcbnZhciBFQyA9IHJlcXVpcmUoJ2VsbGlwdGljJykuZWM7XG52YXIgZWMgPSBuZXcgRUMoJ3NlY3AyNTZrMScpO1xudmFyIGVjcGFyYW1zID0gZWMuY3VydmU7XG5leHBvcnRzLnByaXZhdGVLZXlFeHBvcnQgPSBmdW5jdGlvbiAocHJpdmF0ZUtleSwgY29tcHJlc3NlZCkge1xuICAgIGlmIChjb21wcmVzc2VkID09PSB2b2lkIDApIHsgY29tcHJlc3NlZCA9IHRydWU7IH1cbiAgICB2YXIgZCA9IG5ldyBCTihwcml2YXRlS2V5KTtcbiAgICBpZiAoZC51Y21wKGVjcGFyYW1zLm4pID49IDApIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiY291bGRuJ3QgZXhwb3J0IHRvIERFUiBmb3JtYXRcIik7XG4gICAgfVxuICAgIHZhciBwb2ludCA9IGVjLmcubXVsKGQpO1xuICAgIHJldHVybiB0b1B1YmxpY0tleShwb2ludC5nZXRYKCksIHBvaW50LmdldFkoKSwgY29tcHJlc3NlZCk7XG59O1xuZXhwb3J0cy5wcml2YXRlS2V5TW9kSW52ZXJzZSA9IGZ1bmN0aW9uIChwcml2YXRlS2V5KSB7XG4gICAgdmFyIGJuID0gbmV3IEJOKHByaXZhdGVLZXkpO1xuICAgIGlmIChibi51Y21wKGVjcGFyYW1zLm4pID49IDAgfHwgYm4uaXNaZXJvKCkpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdwcml2YXRlIGtleSByYW5nZSBpcyBpbnZhbGlkJyk7XG4gICAgfVxuICAgIHJldHVybiBibi5pbnZtKGVjcGFyYW1zLm4pLnRvQXJyYXlMaWtlKEJ1ZmZlciwgJ2JlJywgMzIpO1xufTtcbmV4cG9ydHMuc2lnbmF0dXJlSW1wb3J0ID0gZnVuY3Rpb24gKHNpZ09iaikge1xuICAgIHZhciByID0gbmV3IEJOKHNpZ09iai5yKTtcbiAgICBpZiAoci51Y21wKGVjcGFyYW1zLm4pID49IDApIHtcbiAgICAgICAgciA9IG5ldyBCTigwKTtcbiAgICB9XG4gICAgdmFyIHMgPSBuZXcgQk4oc2lnT2JqLnMpO1xuICAgIGlmIChzLnVjbXAoZWNwYXJhbXMubikgPj0gMCkge1xuICAgICAgICBzID0gbmV3IEJOKDApO1xuICAgIH1cbiAgICByZXR1cm4gQnVmZmVyLmNvbmNhdChbci50b0FycmF5TGlrZShCdWZmZXIsICdiZScsIDMyKSwgcy50b0FycmF5TGlrZShCdWZmZXIsICdiZScsIDMyKV0pO1xufTtcbmV4cG9ydHMuZWNkaFVuc2FmZSA9IGZ1bmN0aW9uIChwdWJsaWNLZXksIHByaXZhdGVLZXksIGNvbXByZXNzZWQpIHtcbiAgICBpZiAoY29tcHJlc3NlZCA9PT0gdm9pZCAwKSB7IGNvbXByZXNzZWQgPSB0cnVlOyB9XG4gICAgdmFyIHBvaW50ID0gZWMua2V5RnJvbVB1YmxpYyhwdWJsaWNLZXkpO1xuICAgIHZhciBzY2FsYXIgPSBuZXcgQk4ocHJpdmF0ZUtleSk7XG4gICAgaWYgKHNjYWxhci51Y21wKGVjcGFyYW1zLm4pID49IDAgfHwgc2NhbGFyLmlzWmVybygpKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignc2NhbGFyIHdhcyBpbnZhbGlkICh6ZXJvIG9yIG92ZXJmbG93KScpO1xuICAgIH1cbiAgICB2YXIgc2hhcmVkID0gcG9pbnQucHViLm11bChzY2FsYXIpO1xuICAgIHJldHVybiB0b1B1YmxpY0tleShzaGFyZWQuZ2V0WCgpLCBzaGFyZWQuZ2V0WSgpLCBjb21wcmVzc2VkKTtcbn07XG52YXIgdG9QdWJsaWNLZXkgPSBmdW5jdGlvbiAoeCwgeSwgY29tcHJlc3NlZCkge1xuICAgIHZhciBwdWJsaWNLZXk7XG4gICAgaWYgKGNvbXByZXNzZWQpIHtcbiAgICAgICAgcHVibGljS2V5ID0gQnVmZmVyLmFsbG9jKDMzKTtcbiAgICAgICAgcHVibGljS2V5WzBdID0geS5pc09kZCgpID8gMHgwMyA6IDB4MDI7XG4gICAgICAgIHgudG9BcnJheUxpa2UoQnVmZmVyLCAnYmUnLCAzMikuY29weShwdWJsaWNLZXksIDEpO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgcHVibGljS2V5ID0gQnVmZmVyLmFsbG9jKDY1KTtcbiAgICAgICAgcHVibGljS2V5WzBdID0gMHgwNDtcbiAgICAgICAgeC50b0FycmF5TGlrZShCdWZmZXIsICdiZScsIDMyKS5jb3B5KHB1YmxpY0tleSwgMSk7XG4gICAgICAgIHkudG9BcnJheUxpa2UoQnVmZmVyLCAnYmUnLCAzMikuY29weShwdWJsaWNLZXksIDMzKTtcbiAgICB9XG4gICAgcmV0dXJuIHB1YmxpY0tleTtcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@metamask/eth-sig-util/node_modules/ethereumjs-util/dist/secp256k1v3-lib/index.js\n");

/***/ }),

/***/ "./node_modules/@metamask/eth-sig-util/node_modules/ethereumjs-util/dist/signature.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@metamask/eth-sig-util/node_modules/ethereumjs-util/dist/signature.js ***!
  \********************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"./node_modules/buffer/index.js\")[\"Buffer\"];\n\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.hashPersonalMessage = exports.isValidSignature = exports.fromRpcSig = exports.toRpcSig = exports.ecrecover = exports.ecsign = void 0;\nvar secp256k1 = __webpack_require__(/*! ./secp256k1v3-adapter */ \"./node_modules/@metamask/eth-sig-util/node_modules/ethereumjs-util/dist/secp256k1v3-adapter.js\");\nvar BN = __webpack_require__(/*! bn.js */ \"./node_modules/bn.js/lib/bn.js\");\nvar bytes_1 = __webpack_require__(/*! ./bytes */ \"./node_modules/@metamask/eth-sig-util/node_modules/ethereumjs-util/dist/bytes.js\");\nvar hash_1 = __webpack_require__(/*! ./hash */ \"./node_modules/@metamask/eth-sig-util/node_modules/ethereumjs-util/dist/hash.js\");\n/**\n * Returns the ECDSA signature of a message hash.\n */\nexports.ecsign = function (msgHash, privateKey, chainId) {\n    var sig = secp256k1.sign(msgHash, privateKey);\n    var recovery = sig.recovery;\n    var ret = {\n        r: sig.signature.slice(0, 32),\n        s: sig.signature.slice(32, 64),\n        v: chainId ? recovery + (chainId * 2 + 35) : recovery + 27,\n    };\n    return ret;\n};\n/**\n * ECDSA public key recovery from signature.\n * @returns Recovered public key\n */\nexports.ecrecover = function (msgHash, v, r, s, chainId) {\n    var signature = Buffer.concat([bytes_1.setLength(r, 32), bytes_1.setLength(s, 32)], 64);\n    var recovery = calculateSigRecovery(v, chainId);\n    if (!isValidSigRecovery(recovery)) {\n        throw new Error('Invalid signature v value');\n    }\n    var senderPubKey = secp256k1.recover(msgHash, signature, recovery);\n    return secp256k1.publicKeyConvert(senderPubKey, false).slice(1);\n};\n/**\n * Convert signature parameters into the format of `eth_sign` RPC method.\n * @returns Signature\n */\nexports.toRpcSig = function (v, r, s, chainId) {\n    var recovery = calculateSigRecovery(v, chainId);\n    if (!isValidSigRecovery(recovery)) {\n        throw new Error('Invalid signature v value');\n    }\n    // geth (and the RPC eth_sign method) uses the 65 byte format used by Bitcoin\n    return bytes_1.bufferToHex(Buffer.concat([bytes_1.setLengthLeft(r, 32), bytes_1.setLengthLeft(s, 32), bytes_1.toBuffer(v)]));\n};\n/**\n * Convert signature format of the `eth_sign` RPC method to signature parameters\n * NOTE: all because of a bug in geth: https://github.com/ethereum/go-ethereum/issues/2053\n */\nexports.fromRpcSig = function (sig) {\n    var buf = bytes_1.toBuffer(sig);\n    // NOTE: with potential introduction of chainId this might need to be updated\n    if (buf.length !== 65) {\n        throw new Error('Invalid signature length');\n    }\n    var v = buf[64];\n    // support both versions of `eth_sign` responses\n    if (v < 27) {\n        v += 27;\n    }\n    return {\n        v: v,\n        r: buf.slice(0, 32),\n        s: buf.slice(32, 64),\n    };\n};\n/**\n * Validate a ECDSA signature.\n * @param homesteadOrLater Indicates whether this is being used on either the homestead hardfork or a later one\n */\nexports.isValidSignature = function (v, r, s, homesteadOrLater, chainId) {\n    if (homesteadOrLater === void 0) { homesteadOrLater = true; }\n    var SECP256K1_N_DIV_2 = new BN('7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0', 16);\n    var SECP256K1_N = new BN('fffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141', 16);\n    if (r.length !== 32 || s.length !== 32) {\n        return false;\n    }\n    if (!isValidSigRecovery(calculateSigRecovery(v, chainId))) {\n        return false;\n    }\n    var rBN = new BN(r);\n    var sBN = new BN(s);\n    if (rBN.isZero() || rBN.gt(SECP256K1_N) || sBN.isZero() || sBN.gt(SECP256K1_N)) {\n        return false;\n    }\n    if (homesteadOrLater && sBN.cmp(SECP256K1_N_DIV_2) === 1) {\n        return false;\n    }\n    return true;\n};\n/**\n * Returns the keccak-256 hash of `message`, prefixed with the header used by the `eth_sign` RPC call.\n * The output of this function can be fed into `ecsign` to produce the same signature as the `eth_sign`\n * call for a given `message`, or fed to `ecrecover` along with a signature to recover the public key\n * used to produce the signature.\n */\nexports.hashPersonalMessage = function (message) {\n    var prefix = Buffer.from(\"\\u0019Ethereum Signed Message:\\n\" + message.length.toString(), 'utf-8');\n    return hash_1.keccak(Buffer.concat([prefix, message]));\n};\nfunction calculateSigRecovery(v, chainId) {\n    return chainId ? v - (2 * chainId + 35) : v - 27;\n}\nfunction isValidSigRecovery(recovery) {\n    return recovery === 0 || recovery === 1;\n}\n//# sourceMappingURL=signature.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG1ldGFtYXNrL2V0aC1zaWctdXRpbC9ub2RlX21vZHVsZXMvZXRoZXJldW1qcy11dGlsL2Rpc3Qvc2lnbmF0dXJlLmpzLmpzIiwibWFwcGluZ3MiOiI7QUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCwyQkFBMkIsR0FBRyx3QkFBd0IsR0FBRyxrQkFBa0IsR0FBRyxnQkFBZ0IsR0FBRyxpQkFBaUIsR0FBRyxjQUFjO0FBQ25JLGdCQUFnQixtQkFBTyxDQUFDLDZIQUF1QjtBQUMvQyxTQUFTLG1CQUFPLENBQUMsNkNBQU87QUFDeEIsY0FBYyxtQkFBTyxDQUFDLGlHQUFTO0FBQy9CLGFBQWEsbUJBQU8sQ0FBQywrRkFBUTtBQUM3QjtBQUNBO0FBQ0E7QUFDQSxjQUFjO0FBQ2Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakIsb0JBQW9CLE1BQU07QUFDMUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQjtBQUNoQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsK0JBQStCLE1BQU07QUFDckM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQjtBQUNsQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCO0FBQ3hCLHVDQUF1QztBQUN2QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyQkFBMkI7QUFDM0IsaUJBQWlCLE1BQU07QUFDdkIseUJBQXlCLE1BQU07QUFDL0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQG1ldGFtYXNrL2V0aC1zaWctdXRpbC9ub2RlX21vZHVsZXMvZXRoZXJldW1qcy11dGlsL2Rpc3Qvc2lnbmF0dXJlLmpzPzJiZTYiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmhhc2hQZXJzb25hbE1lc3NhZ2UgPSBleHBvcnRzLmlzVmFsaWRTaWduYXR1cmUgPSBleHBvcnRzLmZyb21ScGNTaWcgPSBleHBvcnRzLnRvUnBjU2lnID0gZXhwb3J0cy5lY3JlY292ZXIgPSBleHBvcnRzLmVjc2lnbiA9IHZvaWQgMDtcbnZhciBzZWNwMjU2azEgPSByZXF1aXJlKCcuL3NlY3AyNTZrMXYzLWFkYXB0ZXInKTtcbnZhciBCTiA9IHJlcXVpcmUoXCJibi5qc1wiKTtcbnZhciBieXRlc18xID0gcmVxdWlyZShcIi4vYnl0ZXNcIik7XG52YXIgaGFzaF8xID0gcmVxdWlyZShcIi4vaGFzaFwiKTtcbi8qKlxuICogUmV0dXJucyB0aGUgRUNEU0Egc2lnbmF0dXJlIG9mIGEgbWVzc2FnZSBoYXNoLlxuICovXG5leHBvcnRzLmVjc2lnbiA9IGZ1bmN0aW9uIChtc2dIYXNoLCBwcml2YXRlS2V5LCBjaGFpbklkKSB7XG4gICAgdmFyIHNpZyA9IHNlY3AyNTZrMS5zaWduKG1zZ0hhc2gsIHByaXZhdGVLZXkpO1xuICAgIHZhciByZWNvdmVyeSA9IHNpZy5yZWNvdmVyeTtcbiAgICB2YXIgcmV0ID0ge1xuICAgICAgICByOiBzaWcuc2lnbmF0dXJlLnNsaWNlKDAsIDMyKSxcbiAgICAgICAgczogc2lnLnNpZ25hdHVyZS5zbGljZSgzMiwgNjQpLFxuICAgICAgICB2OiBjaGFpbklkID8gcmVjb3ZlcnkgKyAoY2hhaW5JZCAqIDIgKyAzNSkgOiByZWNvdmVyeSArIDI3LFxuICAgIH07XG4gICAgcmV0dXJuIHJldDtcbn07XG4vKipcbiAqIEVDRFNBIHB1YmxpYyBrZXkgcmVjb3ZlcnkgZnJvbSBzaWduYXR1cmUuXG4gKiBAcmV0dXJucyBSZWNvdmVyZWQgcHVibGljIGtleVxuICovXG5leHBvcnRzLmVjcmVjb3ZlciA9IGZ1bmN0aW9uIChtc2dIYXNoLCB2LCByLCBzLCBjaGFpbklkKSB7XG4gICAgdmFyIHNpZ25hdHVyZSA9IEJ1ZmZlci5jb25jYXQoW2J5dGVzXzEuc2V0TGVuZ3RoKHIsIDMyKSwgYnl0ZXNfMS5zZXRMZW5ndGgocywgMzIpXSwgNjQpO1xuICAgIHZhciByZWNvdmVyeSA9IGNhbGN1bGF0ZVNpZ1JlY292ZXJ5KHYsIGNoYWluSWQpO1xuICAgIGlmICghaXNWYWxpZFNpZ1JlY292ZXJ5KHJlY292ZXJ5KSkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0ludmFsaWQgc2lnbmF0dXJlIHYgdmFsdWUnKTtcbiAgICB9XG4gICAgdmFyIHNlbmRlclB1YktleSA9IHNlY3AyNTZrMS5yZWNvdmVyKG1zZ0hhc2gsIHNpZ25hdHVyZSwgcmVjb3ZlcnkpO1xuICAgIHJldHVybiBzZWNwMjU2azEucHVibGljS2V5Q29udmVydChzZW5kZXJQdWJLZXksIGZhbHNlKS5zbGljZSgxKTtcbn07XG4vKipcbiAqIENvbnZlcnQgc2lnbmF0dXJlIHBhcmFtZXRlcnMgaW50byB0aGUgZm9ybWF0IG9mIGBldGhfc2lnbmAgUlBDIG1ldGhvZC5cbiAqIEByZXR1cm5zIFNpZ25hdHVyZVxuICovXG5leHBvcnRzLnRvUnBjU2lnID0gZnVuY3Rpb24gKHYsIHIsIHMsIGNoYWluSWQpIHtcbiAgICB2YXIgcmVjb3ZlcnkgPSBjYWxjdWxhdGVTaWdSZWNvdmVyeSh2LCBjaGFpbklkKTtcbiAgICBpZiAoIWlzVmFsaWRTaWdSZWNvdmVyeShyZWNvdmVyeSkpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdJbnZhbGlkIHNpZ25hdHVyZSB2IHZhbHVlJyk7XG4gICAgfVxuICAgIC8vIGdldGggKGFuZCB0aGUgUlBDIGV0aF9zaWduIG1ldGhvZCkgdXNlcyB0aGUgNjUgYnl0ZSBmb3JtYXQgdXNlZCBieSBCaXRjb2luXG4gICAgcmV0dXJuIGJ5dGVzXzEuYnVmZmVyVG9IZXgoQnVmZmVyLmNvbmNhdChbYnl0ZXNfMS5zZXRMZW5ndGhMZWZ0KHIsIDMyKSwgYnl0ZXNfMS5zZXRMZW5ndGhMZWZ0KHMsIDMyKSwgYnl0ZXNfMS50b0J1ZmZlcih2KV0pKTtcbn07XG4vKipcbiAqIENvbnZlcnQgc2lnbmF0dXJlIGZvcm1hdCBvZiB0aGUgYGV0aF9zaWduYCBSUEMgbWV0aG9kIHRvIHNpZ25hdHVyZSBwYXJhbWV0ZXJzXG4gKiBOT1RFOiBhbGwgYmVjYXVzZSBvZiBhIGJ1ZyBpbiBnZXRoOiBodHRwczovL2dpdGh1Yi5jb20vZXRoZXJldW0vZ28tZXRoZXJldW0vaXNzdWVzLzIwNTNcbiAqL1xuZXhwb3J0cy5mcm9tUnBjU2lnID0gZnVuY3Rpb24gKHNpZykge1xuICAgIHZhciBidWYgPSBieXRlc18xLnRvQnVmZmVyKHNpZyk7XG4gICAgLy8gTk9URTogd2l0aCBwb3RlbnRpYWwgaW50cm9kdWN0aW9uIG9mIGNoYWluSWQgdGhpcyBtaWdodCBuZWVkIHRvIGJlIHVwZGF0ZWRcbiAgICBpZiAoYnVmLmxlbmd0aCAhPT0gNjUpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdJbnZhbGlkIHNpZ25hdHVyZSBsZW5ndGgnKTtcbiAgICB9XG4gICAgdmFyIHYgPSBidWZbNjRdO1xuICAgIC8vIHN1cHBvcnQgYm90aCB2ZXJzaW9ucyBvZiBgZXRoX3NpZ25gIHJlc3BvbnNlc1xuICAgIGlmICh2IDwgMjcpIHtcbiAgICAgICAgdiArPSAyNztcbiAgICB9XG4gICAgcmV0dXJuIHtcbiAgICAgICAgdjogdixcbiAgICAgICAgcjogYnVmLnNsaWNlKDAsIDMyKSxcbiAgICAgICAgczogYnVmLnNsaWNlKDMyLCA2NCksXG4gICAgfTtcbn07XG4vKipcbiAqIFZhbGlkYXRlIGEgRUNEU0Egc2lnbmF0dXJlLlxuICogQHBhcmFtIGhvbWVzdGVhZE9yTGF0ZXIgSW5kaWNhdGVzIHdoZXRoZXIgdGhpcyBpcyBiZWluZyB1c2VkIG9uIGVpdGhlciB0aGUgaG9tZXN0ZWFkIGhhcmRmb3JrIG9yIGEgbGF0ZXIgb25lXG4gKi9cbmV4cG9ydHMuaXNWYWxpZFNpZ25hdHVyZSA9IGZ1bmN0aW9uICh2LCByLCBzLCBob21lc3RlYWRPckxhdGVyLCBjaGFpbklkKSB7XG4gICAgaWYgKGhvbWVzdGVhZE9yTGF0ZXIgPT09IHZvaWQgMCkgeyBob21lc3RlYWRPckxhdGVyID0gdHJ1ZTsgfVxuICAgIHZhciBTRUNQMjU2SzFfTl9ESVZfMiA9IG5ldyBCTignN2ZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmY1ZDU3NmU3MzU3YTQ1MDFkZGZlOTJmNDY2ODFiMjBhMCcsIDE2KTtcbiAgICB2YXIgU0VDUDI1NksxX04gPSBuZXcgQk4oJ2ZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZlYmFhZWRjZTZhZjQ4YTAzYmJmZDI1ZThjZDAzNjQxNDEnLCAxNik7XG4gICAgaWYgKHIubGVuZ3RoICE9PSAzMiB8fCBzLmxlbmd0aCAhPT0gMzIpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICBpZiAoIWlzVmFsaWRTaWdSZWNvdmVyeShjYWxjdWxhdGVTaWdSZWNvdmVyeSh2LCBjaGFpbklkKSkpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICB2YXIgckJOID0gbmV3IEJOKHIpO1xuICAgIHZhciBzQk4gPSBuZXcgQk4ocyk7XG4gICAgaWYgKHJCTi5pc1plcm8oKSB8fCByQk4uZ3QoU0VDUDI1NksxX04pIHx8IHNCTi5pc1plcm8oKSB8fCBzQk4uZ3QoU0VDUDI1NksxX04pKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgaWYgKGhvbWVzdGVhZE9yTGF0ZXIgJiYgc0JOLmNtcChTRUNQMjU2SzFfTl9ESVZfMikgPT09IDEpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICByZXR1cm4gdHJ1ZTtcbn07XG4vKipcbiAqIFJldHVybnMgdGhlIGtlY2Nhay0yNTYgaGFzaCBvZiBgbWVzc2FnZWAsIHByZWZpeGVkIHdpdGggdGhlIGhlYWRlciB1c2VkIGJ5IHRoZSBgZXRoX3NpZ25gIFJQQyBjYWxsLlxuICogVGhlIG91dHB1dCBvZiB0aGlzIGZ1bmN0aW9uIGNhbiBiZSBmZWQgaW50byBgZWNzaWduYCB0byBwcm9kdWNlIHRoZSBzYW1lIHNpZ25hdHVyZSBhcyB0aGUgYGV0aF9zaWduYFxuICogY2FsbCBmb3IgYSBnaXZlbiBgbWVzc2FnZWAsIG9yIGZlZCB0byBgZWNyZWNvdmVyYCBhbG9uZyB3aXRoIGEgc2lnbmF0dXJlIHRvIHJlY292ZXIgdGhlIHB1YmxpYyBrZXlcbiAqIHVzZWQgdG8gcHJvZHVjZSB0aGUgc2lnbmF0dXJlLlxuICovXG5leHBvcnRzLmhhc2hQZXJzb25hbE1lc3NhZ2UgPSBmdW5jdGlvbiAobWVzc2FnZSkge1xuICAgIHZhciBwcmVmaXggPSBCdWZmZXIuZnJvbShcIlxcdTAwMTlFdGhlcmV1bSBTaWduZWQgTWVzc2FnZTpcXG5cIiArIG1lc3NhZ2UubGVuZ3RoLnRvU3RyaW5nKCksICd1dGYtOCcpO1xuICAgIHJldHVybiBoYXNoXzEua2VjY2FrKEJ1ZmZlci5jb25jYXQoW3ByZWZpeCwgbWVzc2FnZV0pKTtcbn07XG5mdW5jdGlvbiBjYWxjdWxhdGVTaWdSZWNvdmVyeSh2LCBjaGFpbklkKSB7XG4gICAgcmV0dXJuIGNoYWluSWQgPyB2IC0gKDIgKiBjaGFpbklkICsgMzUpIDogdiAtIDI3O1xufVxuZnVuY3Rpb24gaXNWYWxpZFNpZ1JlY292ZXJ5KHJlY292ZXJ5KSB7XG4gICAgcmV0dXJuIHJlY292ZXJ5ID09PSAwIHx8IHJlY292ZXJ5ID09PSAxO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c2lnbmF0dXJlLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@metamask/eth-sig-util/node_modules/ethereumjs-util/dist/signature.js\n");

/***/ }),

/***/ "./node_modules/@metamask/eth-sig-util/node_modules/tweetnacl/nacl-fast.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@metamask/eth-sig-util/node_modules/tweetnacl/nacl-fast.js ***!
  \*********************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("(function(nacl) {\n'use strict';\n\n// Ported in 2014 by Dmitry Chestnykh and Devi Mandiri.\n// Public domain.\n//\n// Implementation derived from TweetNaCl version 20140427.\n// See for details: http://tweetnacl.cr.yp.to/\n\nvar gf = function(init) {\n  var i, r = new Float64Array(16);\n  if (init) for (i = 0; i < init.length; i++) r[i] = init[i];\n  return r;\n};\n\n//  Pluggable, initialized in high-level API below.\nvar randombytes = function(/* x, n */) { throw new Error('no PRNG'); };\n\nvar _0 = new Uint8Array(16);\nvar _9 = new Uint8Array(32); _9[0] = 9;\n\nvar gf0 = gf(),\n    gf1 = gf([1]),\n    _121665 = gf([0xdb41, 1]),\n    D = gf([0x78a3, 0x1359, 0x4dca, 0x75eb, 0xd8ab, 0x4141, 0x0a4d, 0x0070, 0xe898, 0x7779, 0x4079, 0x8cc7, 0xfe73, 0x2b6f, 0x6cee, 0x5203]),\n    D2 = gf([0xf159, 0x26b2, 0x9b94, 0xebd6, 0xb156, 0x8283, 0x149a, 0x00e0, 0xd130, 0xeef3, 0x80f2, 0x198e, 0xfce7, 0x56df, 0xd9dc, 0x2406]),\n    X = gf([0xd51a, 0x8f25, 0x2d60, 0xc956, 0xa7b2, 0x9525, 0xc760, 0x692c, 0xdc5c, 0xfdd6, 0xe231, 0xc0a4, 0x53fe, 0xcd6e, 0x36d3, 0x2169]),\n    Y = gf([0x6658, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666]),\n    I = gf([0xa0b0, 0x4a0e, 0x1b27, 0xc4ee, 0xe478, 0xad2f, 0x1806, 0x2f43, 0xd7a7, 0x3dfb, 0x0099, 0x2b4d, 0xdf0b, 0x4fc1, 0x2480, 0x2b83]);\n\nfunction ts64(x, i, h, l) {\n  x[i]   = (h >> 24) & 0xff;\n  x[i+1] = (h >> 16) & 0xff;\n  x[i+2] = (h >>  8) & 0xff;\n  x[i+3] = h & 0xff;\n  x[i+4] = (l >> 24)  & 0xff;\n  x[i+5] = (l >> 16)  & 0xff;\n  x[i+6] = (l >>  8)  & 0xff;\n  x[i+7] = l & 0xff;\n}\n\nfunction vn(x, xi, y, yi, n) {\n  var i,d = 0;\n  for (i = 0; i < n; i++) d |= x[xi+i]^y[yi+i];\n  return (1 & ((d - 1) >>> 8)) - 1;\n}\n\nfunction crypto_verify_16(x, xi, y, yi) {\n  return vn(x,xi,y,yi,16);\n}\n\nfunction crypto_verify_32(x, xi, y, yi) {\n  return vn(x,xi,y,yi,32);\n}\n\nfunction core_salsa20(o, p, k, c) {\n  var j0  = c[ 0] & 0xff | (c[ 1] & 0xff)<<8 | (c[ 2] & 0xff)<<16 | (c[ 3] & 0xff)<<24,\n      j1  = k[ 0] & 0xff | (k[ 1] & 0xff)<<8 | (k[ 2] & 0xff)<<16 | (k[ 3] & 0xff)<<24,\n      j2  = k[ 4] & 0xff | (k[ 5] & 0xff)<<8 | (k[ 6] & 0xff)<<16 | (k[ 7] & 0xff)<<24,\n      j3  = k[ 8] & 0xff | (k[ 9] & 0xff)<<8 | (k[10] & 0xff)<<16 | (k[11] & 0xff)<<24,\n      j4  = k[12] & 0xff | (k[13] & 0xff)<<8 | (k[14] & 0xff)<<16 | (k[15] & 0xff)<<24,\n      j5  = c[ 4] & 0xff | (c[ 5] & 0xff)<<8 | (c[ 6] & 0xff)<<16 | (c[ 7] & 0xff)<<24,\n      j6  = p[ 0] & 0xff | (p[ 1] & 0xff)<<8 | (p[ 2] & 0xff)<<16 | (p[ 3] & 0xff)<<24,\n      j7  = p[ 4] & 0xff | (p[ 5] & 0xff)<<8 | (p[ 6] & 0xff)<<16 | (p[ 7] & 0xff)<<24,\n      j8  = p[ 8] & 0xff | (p[ 9] & 0xff)<<8 | (p[10] & 0xff)<<16 | (p[11] & 0xff)<<24,\n      j9  = p[12] & 0xff | (p[13] & 0xff)<<8 | (p[14] & 0xff)<<16 | (p[15] & 0xff)<<24,\n      j10 = c[ 8] & 0xff | (c[ 9] & 0xff)<<8 | (c[10] & 0xff)<<16 | (c[11] & 0xff)<<24,\n      j11 = k[16] & 0xff | (k[17] & 0xff)<<8 | (k[18] & 0xff)<<16 | (k[19] & 0xff)<<24,\n      j12 = k[20] & 0xff | (k[21] & 0xff)<<8 | (k[22] & 0xff)<<16 | (k[23] & 0xff)<<24,\n      j13 = k[24] & 0xff | (k[25] & 0xff)<<8 | (k[26] & 0xff)<<16 | (k[27] & 0xff)<<24,\n      j14 = k[28] & 0xff | (k[29] & 0xff)<<8 | (k[30] & 0xff)<<16 | (k[31] & 0xff)<<24,\n      j15 = c[12] & 0xff | (c[13] & 0xff)<<8 | (c[14] & 0xff)<<16 | (c[15] & 0xff)<<24;\n\n  var x0 = j0, x1 = j1, x2 = j2, x3 = j3, x4 = j4, x5 = j5, x6 = j6, x7 = j7,\n      x8 = j8, x9 = j9, x10 = j10, x11 = j11, x12 = j12, x13 = j13, x14 = j14,\n      x15 = j15, u;\n\n  for (var i = 0; i < 20; i += 2) {\n    u = x0 + x12 | 0;\n    x4 ^= u<<7 | u>>>(32-7);\n    u = x4 + x0 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x4 | 0;\n    x12 ^= u<<13 | u>>>(32-13);\n    u = x12 + x8 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x1 | 0;\n    x9 ^= u<<7 | u>>>(32-7);\n    u = x9 + x5 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x9 | 0;\n    x1 ^= u<<13 | u>>>(32-13);\n    u = x1 + x13 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x6 | 0;\n    x14 ^= u<<7 | u>>>(32-7);\n    u = x14 + x10 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x14 | 0;\n    x6 ^= u<<13 | u>>>(32-13);\n    u = x6 + x2 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x11 | 0;\n    x3 ^= u<<7 | u>>>(32-7);\n    u = x3 + x15 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x3 | 0;\n    x11 ^= u<<13 | u>>>(32-13);\n    u = x11 + x7 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n\n    u = x0 + x3 | 0;\n    x1 ^= u<<7 | u>>>(32-7);\n    u = x1 + x0 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x1 | 0;\n    x3 ^= u<<13 | u>>>(32-13);\n    u = x3 + x2 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x4 | 0;\n    x6 ^= u<<7 | u>>>(32-7);\n    u = x6 + x5 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x6 | 0;\n    x4 ^= u<<13 | u>>>(32-13);\n    u = x4 + x7 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x9 | 0;\n    x11 ^= u<<7 | u>>>(32-7);\n    u = x11 + x10 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x11 | 0;\n    x9 ^= u<<13 | u>>>(32-13);\n    u = x9 + x8 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x14 | 0;\n    x12 ^= u<<7 | u>>>(32-7);\n    u = x12 + x15 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x12 | 0;\n    x14 ^= u<<13 | u>>>(32-13);\n    u = x14 + x13 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n  }\n   x0 =  x0 +  j0 | 0;\n   x1 =  x1 +  j1 | 0;\n   x2 =  x2 +  j2 | 0;\n   x3 =  x3 +  j3 | 0;\n   x4 =  x4 +  j4 | 0;\n   x5 =  x5 +  j5 | 0;\n   x6 =  x6 +  j6 | 0;\n   x7 =  x7 +  j7 | 0;\n   x8 =  x8 +  j8 | 0;\n   x9 =  x9 +  j9 | 0;\n  x10 = x10 + j10 | 0;\n  x11 = x11 + j11 | 0;\n  x12 = x12 + j12 | 0;\n  x13 = x13 + j13 | 0;\n  x14 = x14 + j14 | 0;\n  x15 = x15 + j15 | 0;\n\n  o[ 0] = x0 >>>  0 & 0xff;\n  o[ 1] = x0 >>>  8 & 0xff;\n  o[ 2] = x0 >>> 16 & 0xff;\n  o[ 3] = x0 >>> 24 & 0xff;\n\n  o[ 4] = x1 >>>  0 & 0xff;\n  o[ 5] = x1 >>>  8 & 0xff;\n  o[ 6] = x1 >>> 16 & 0xff;\n  o[ 7] = x1 >>> 24 & 0xff;\n\n  o[ 8] = x2 >>>  0 & 0xff;\n  o[ 9] = x2 >>>  8 & 0xff;\n  o[10] = x2 >>> 16 & 0xff;\n  o[11] = x2 >>> 24 & 0xff;\n\n  o[12] = x3 >>>  0 & 0xff;\n  o[13] = x3 >>>  8 & 0xff;\n  o[14] = x3 >>> 16 & 0xff;\n  o[15] = x3 >>> 24 & 0xff;\n\n  o[16] = x4 >>>  0 & 0xff;\n  o[17] = x4 >>>  8 & 0xff;\n  o[18] = x4 >>> 16 & 0xff;\n  o[19] = x4 >>> 24 & 0xff;\n\n  o[20] = x5 >>>  0 & 0xff;\n  o[21] = x5 >>>  8 & 0xff;\n  o[22] = x5 >>> 16 & 0xff;\n  o[23] = x5 >>> 24 & 0xff;\n\n  o[24] = x6 >>>  0 & 0xff;\n  o[25] = x6 >>>  8 & 0xff;\n  o[26] = x6 >>> 16 & 0xff;\n  o[27] = x6 >>> 24 & 0xff;\n\n  o[28] = x7 >>>  0 & 0xff;\n  o[29] = x7 >>>  8 & 0xff;\n  o[30] = x7 >>> 16 & 0xff;\n  o[31] = x7 >>> 24 & 0xff;\n\n  o[32] = x8 >>>  0 & 0xff;\n  o[33] = x8 >>>  8 & 0xff;\n  o[34] = x8 >>> 16 & 0xff;\n  o[35] = x8 >>> 24 & 0xff;\n\n  o[36] = x9 >>>  0 & 0xff;\n  o[37] = x9 >>>  8 & 0xff;\n  o[38] = x9 >>> 16 & 0xff;\n  o[39] = x9 >>> 24 & 0xff;\n\n  o[40] = x10 >>>  0 & 0xff;\n  o[41] = x10 >>>  8 & 0xff;\n  o[42] = x10 >>> 16 & 0xff;\n  o[43] = x10 >>> 24 & 0xff;\n\n  o[44] = x11 >>>  0 & 0xff;\n  o[45] = x11 >>>  8 & 0xff;\n  o[46] = x11 >>> 16 & 0xff;\n  o[47] = x11 >>> 24 & 0xff;\n\n  o[48] = x12 >>>  0 & 0xff;\n  o[49] = x12 >>>  8 & 0xff;\n  o[50] = x12 >>> 16 & 0xff;\n  o[51] = x12 >>> 24 & 0xff;\n\n  o[52] = x13 >>>  0 & 0xff;\n  o[53] = x13 >>>  8 & 0xff;\n  o[54] = x13 >>> 16 & 0xff;\n  o[55] = x13 >>> 24 & 0xff;\n\n  o[56] = x14 >>>  0 & 0xff;\n  o[57] = x14 >>>  8 & 0xff;\n  o[58] = x14 >>> 16 & 0xff;\n  o[59] = x14 >>> 24 & 0xff;\n\n  o[60] = x15 >>>  0 & 0xff;\n  o[61] = x15 >>>  8 & 0xff;\n  o[62] = x15 >>> 16 & 0xff;\n  o[63] = x15 >>> 24 & 0xff;\n}\n\nfunction core_hsalsa20(o,p,k,c) {\n  var j0  = c[ 0] & 0xff | (c[ 1] & 0xff)<<8 | (c[ 2] & 0xff)<<16 | (c[ 3] & 0xff)<<24,\n      j1  = k[ 0] & 0xff | (k[ 1] & 0xff)<<8 | (k[ 2] & 0xff)<<16 | (k[ 3] & 0xff)<<24,\n      j2  = k[ 4] & 0xff | (k[ 5] & 0xff)<<8 | (k[ 6] & 0xff)<<16 | (k[ 7] & 0xff)<<24,\n      j3  = k[ 8] & 0xff | (k[ 9] & 0xff)<<8 | (k[10] & 0xff)<<16 | (k[11] & 0xff)<<24,\n      j4  = k[12] & 0xff | (k[13] & 0xff)<<8 | (k[14] & 0xff)<<16 | (k[15] & 0xff)<<24,\n      j5  = c[ 4] & 0xff | (c[ 5] & 0xff)<<8 | (c[ 6] & 0xff)<<16 | (c[ 7] & 0xff)<<24,\n      j6  = p[ 0] & 0xff | (p[ 1] & 0xff)<<8 | (p[ 2] & 0xff)<<16 | (p[ 3] & 0xff)<<24,\n      j7  = p[ 4] & 0xff | (p[ 5] & 0xff)<<8 | (p[ 6] & 0xff)<<16 | (p[ 7] & 0xff)<<24,\n      j8  = p[ 8] & 0xff | (p[ 9] & 0xff)<<8 | (p[10] & 0xff)<<16 | (p[11] & 0xff)<<24,\n      j9  = p[12] & 0xff | (p[13] & 0xff)<<8 | (p[14] & 0xff)<<16 | (p[15] & 0xff)<<24,\n      j10 = c[ 8] & 0xff | (c[ 9] & 0xff)<<8 | (c[10] & 0xff)<<16 | (c[11] & 0xff)<<24,\n      j11 = k[16] & 0xff | (k[17] & 0xff)<<8 | (k[18] & 0xff)<<16 | (k[19] & 0xff)<<24,\n      j12 = k[20] & 0xff | (k[21] & 0xff)<<8 | (k[22] & 0xff)<<16 | (k[23] & 0xff)<<24,\n      j13 = k[24] & 0xff | (k[25] & 0xff)<<8 | (k[26] & 0xff)<<16 | (k[27] & 0xff)<<24,\n      j14 = k[28] & 0xff | (k[29] & 0xff)<<8 | (k[30] & 0xff)<<16 | (k[31] & 0xff)<<24,\n      j15 = c[12] & 0xff | (c[13] & 0xff)<<8 | (c[14] & 0xff)<<16 | (c[15] & 0xff)<<24;\n\n  var x0 = j0, x1 = j1, x2 = j2, x3 = j3, x4 = j4, x5 = j5, x6 = j6, x7 = j7,\n      x8 = j8, x9 = j9, x10 = j10, x11 = j11, x12 = j12, x13 = j13, x14 = j14,\n      x15 = j15, u;\n\n  for (var i = 0; i < 20; i += 2) {\n    u = x0 + x12 | 0;\n    x4 ^= u<<7 | u>>>(32-7);\n    u = x4 + x0 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x4 | 0;\n    x12 ^= u<<13 | u>>>(32-13);\n    u = x12 + x8 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x1 | 0;\n    x9 ^= u<<7 | u>>>(32-7);\n    u = x9 + x5 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x9 | 0;\n    x1 ^= u<<13 | u>>>(32-13);\n    u = x1 + x13 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x6 | 0;\n    x14 ^= u<<7 | u>>>(32-7);\n    u = x14 + x10 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x14 | 0;\n    x6 ^= u<<13 | u>>>(32-13);\n    u = x6 + x2 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x11 | 0;\n    x3 ^= u<<7 | u>>>(32-7);\n    u = x3 + x15 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x3 | 0;\n    x11 ^= u<<13 | u>>>(32-13);\n    u = x11 + x7 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n\n    u = x0 + x3 | 0;\n    x1 ^= u<<7 | u>>>(32-7);\n    u = x1 + x0 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x1 | 0;\n    x3 ^= u<<13 | u>>>(32-13);\n    u = x3 + x2 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x4 | 0;\n    x6 ^= u<<7 | u>>>(32-7);\n    u = x6 + x5 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x6 | 0;\n    x4 ^= u<<13 | u>>>(32-13);\n    u = x4 + x7 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x9 | 0;\n    x11 ^= u<<7 | u>>>(32-7);\n    u = x11 + x10 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x11 | 0;\n    x9 ^= u<<13 | u>>>(32-13);\n    u = x9 + x8 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x14 | 0;\n    x12 ^= u<<7 | u>>>(32-7);\n    u = x12 + x15 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x12 | 0;\n    x14 ^= u<<13 | u>>>(32-13);\n    u = x14 + x13 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n  }\n\n  o[ 0] = x0 >>>  0 & 0xff;\n  o[ 1] = x0 >>>  8 & 0xff;\n  o[ 2] = x0 >>> 16 & 0xff;\n  o[ 3] = x0 >>> 24 & 0xff;\n\n  o[ 4] = x5 >>>  0 & 0xff;\n  o[ 5] = x5 >>>  8 & 0xff;\n  o[ 6] = x5 >>> 16 & 0xff;\n  o[ 7] = x5 >>> 24 & 0xff;\n\n  o[ 8] = x10 >>>  0 & 0xff;\n  o[ 9] = x10 >>>  8 & 0xff;\n  o[10] = x10 >>> 16 & 0xff;\n  o[11] = x10 >>> 24 & 0xff;\n\n  o[12] = x15 >>>  0 & 0xff;\n  o[13] = x15 >>>  8 & 0xff;\n  o[14] = x15 >>> 16 & 0xff;\n  o[15] = x15 >>> 24 & 0xff;\n\n  o[16] = x6 >>>  0 & 0xff;\n  o[17] = x6 >>>  8 & 0xff;\n  o[18] = x6 >>> 16 & 0xff;\n  o[19] = x6 >>> 24 & 0xff;\n\n  o[20] = x7 >>>  0 & 0xff;\n  o[21] = x7 >>>  8 & 0xff;\n  o[22] = x7 >>> 16 & 0xff;\n  o[23] = x7 >>> 24 & 0xff;\n\n  o[24] = x8 >>>  0 & 0xff;\n  o[25] = x8 >>>  8 & 0xff;\n  o[26] = x8 >>> 16 & 0xff;\n  o[27] = x8 >>> 24 & 0xff;\n\n  o[28] = x9 >>>  0 & 0xff;\n  o[29] = x9 >>>  8 & 0xff;\n  o[30] = x9 >>> 16 & 0xff;\n  o[31] = x9 >>> 24 & 0xff;\n}\n\nfunction crypto_core_salsa20(out,inp,k,c) {\n  core_salsa20(out,inp,k,c);\n}\n\nfunction crypto_core_hsalsa20(out,inp,k,c) {\n  core_hsalsa20(out,inp,k,c);\n}\n\nvar sigma = new Uint8Array([101, 120, 112, 97, 110, 100, 32, 51, 50, 45, 98, 121, 116, 101, 32, 107]);\n            // \"expand 32-byte k\"\n\nfunction crypto_stream_salsa20_xor(c,cpos,m,mpos,b,n,k) {\n  var z = new Uint8Array(16), x = new Uint8Array(64);\n  var u, i;\n  for (i = 0; i < 16; i++) z[i] = 0;\n  for (i = 0; i < 8; i++) z[i] = n[i];\n  while (b >= 64) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < 64; i++) c[cpos+i] = m[mpos+i] ^ x[i];\n    u = 1;\n    for (i = 8; i < 16; i++) {\n      u = u + (z[i] & 0xff) | 0;\n      z[i] = u & 0xff;\n      u >>>= 8;\n    }\n    b -= 64;\n    cpos += 64;\n    mpos += 64;\n  }\n  if (b > 0) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < b; i++) c[cpos+i] = m[mpos+i] ^ x[i];\n  }\n  return 0;\n}\n\nfunction crypto_stream_salsa20(c,cpos,b,n,k) {\n  var z = new Uint8Array(16), x = new Uint8Array(64);\n  var u, i;\n  for (i = 0; i < 16; i++) z[i] = 0;\n  for (i = 0; i < 8; i++) z[i] = n[i];\n  while (b >= 64) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < 64; i++) c[cpos+i] = x[i];\n    u = 1;\n    for (i = 8; i < 16; i++) {\n      u = u + (z[i] & 0xff) | 0;\n      z[i] = u & 0xff;\n      u >>>= 8;\n    }\n    b -= 64;\n    cpos += 64;\n  }\n  if (b > 0) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < b; i++) c[cpos+i] = x[i];\n  }\n  return 0;\n}\n\nfunction crypto_stream(c,cpos,d,n,k) {\n  var s = new Uint8Array(32);\n  crypto_core_hsalsa20(s,n,k,sigma);\n  var sn = new Uint8Array(8);\n  for (var i = 0; i < 8; i++) sn[i] = n[i+16];\n  return crypto_stream_salsa20(c,cpos,d,sn,s);\n}\n\nfunction crypto_stream_xor(c,cpos,m,mpos,d,n,k) {\n  var s = new Uint8Array(32);\n  crypto_core_hsalsa20(s,n,k,sigma);\n  var sn = new Uint8Array(8);\n  for (var i = 0; i < 8; i++) sn[i] = n[i+16];\n  return crypto_stream_salsa20_xor(c,cpos,m,mpos,d,sn,s);\n}\n\n/*\n* Port of Andrew Moon's Poly1305-donna-16. Public domain.\n* https://github.com/floodyberry/poly1305-donna\n*/\n\nvar poly1305 = function(key) {\n  this.buffer = new Uint8Array(16);\n  this.r = new Uint16Array(10);\n  this.h = new Uint16Array(10);\n  this.pad = new Uint16Array(8);\n  this.leftover = 0;\n  this.fin = 0;\n\n  var t0, t1, t2, t3, t4, t5, t6, t7;\n\n  t0 = key[ 0] & 0xff | (key[ 1] & 0xff) << 8; this.r[0] = ( t0                     ) & 0x1fff;\n  t1 = key[ 2] & 0xff | (key[ 3] & 0xff) << 8; this.r[1] = ((t0 >>> 13) | (t1 <<  3)) & 0x1fff;\n  t2 = key[ 4] & 0xff | (key[ 5] & 0xff) << 8; this.r[2] = ((t1 >>> 10) | (t2 <<  6)) & 0x1f03;\n  t3 = key[ 6] & 0xff | (key[ 7] & 0xff) << 8; this.r[3] = ((t2 >>>  7) | (t3 <<  9)) & 0x1fff;\n  t4 = key[ 8] & 0xff | (key[ 9] & 0xff) << 8; this.r[4] = ((t3 >>>  4) | (t4 << 12)) & 0x00ff;\n  this.r[5] = ((t4 >>>  1)) & 0x1ffe;\n  t5 = key[10] & 0xff | (key[11] & 0xff) << 8; this.r[6] = ((t4 >>> 14) | (t5 <<  2)) & 0x1fff;\n  t6 = key[12] & 0xff | (key[13] & 0xff) << 8; this.r[7] = ((t5 >>> 11) | (t6 <<  5)) & 0x1f81;\n  t7 = key[14] & 0xff | (key[15] & 0xff) << 8; this.r[8] = ((t6 >>>  8) | (t7 <<  8)) & 0x1fff;\n  this.r[9] = ((t7 >>>  5)) & 0x007f;\n\n  this.pad[0] = key[16] & 0xff | (key[17] & 0xff) << 8;\n  this.pad[1] = key[18] & 0xff | (key[19] & 0xff) << 8;\n  this.pad[2] = key[20] & 0xff | (key[21] & 0xff) << 8;\n  this.pad[3] = key[22] & 0xff | (key[23] & 0xff) << 8;\n  this.pad[4] = key[24] & 0xff | (key[25] & 0xff) << 8;\n  this.pad[5] = key[26] & 0xff | (key[27] & 0xff) << 8;\n  this.pad[6] = key[28] & 0xff | (key[29] & 0xff) << 8;\n  this.pad[7] = key[30] & 0xff | (key[31] & 0xff) << 8;\n};\n\npoly1305.prototype.blocks = function(m, mpos, bytes) {\n  var hibit = this.fin ? 0 : (1 << 11);\n  var t0, t1, t2, t3, t4, t5, t6, t7, c;\n  var d0, d1, d2, d3, d4, d5, d6, d7, d8, d9;\n\n  var h0 = this.h[0],\n      h1 = this.h[1],\n      h2 = this.h[2],\n      h3 = this.h[3],\n      h4 = this.h[4],\n      h5 = this.h[5],\n      h6 = this.h[6],\n      h7 = this.h[7],\n      h8 = this.h[8],\n      h9 = this.h[9];\n\n  var r0 = this.r[0],\n      r1 = this.r[1],\n      r2 = this.r[2],\n      r3 = this.r[3],\n      r4 = this.r[4],\n      r5 = this.r[5],\n      r6 = this.r[6],\n      r7 = this.r[7],\n      r8 = this.r[8],\n      r9 = this.r[9];\n\n  while (bytes >= 16) {\n    t0 = m[mpos+ 0] & 0xff | (m[mpos+ 1] & 0xff) << 8; h0 += ( t0                     ) & 0x1fff;\n    t1 = m[mpos+ 2] & 0xff | (m[mpos+ 3] & 0xff) << 8; h1 += ((t0 >>> 13) | (t1 <<  3)) & 0x1fff;\n    t2 = m[mpos+ 4] & 0xff | (m[mpos+ 5] & 0xff) << 8; h2 += ((t1 >>> 10) | (t2 <<  6)) & 0x1fff;\n    t3 = m[mpos+ 6] & 0xff | (m[mpos+ 7] & 0xff) << 8; h3 += ((t2 >>>  7) | (t3 <<  9)) & 0x1fff;\n    t4 = m[mpos+ 8] & 0xff | (m[mpos+ 9] & 0xff) << 8; h4 += ((t3 >>>  4) | (t4 << 12)) & 0x1fff;\n    h5 += ((t4 >>>  1)) & 0x1fff;\n    t5 = m[mpos+10] & 0xff | (m[mpos+11] & 0xff) << 8; h6 += ((t4 >>> 14) | (t5 <<  2)) & 0x1fff;\n    t6 = m[mpos+12] & 0xff | (m[mpos+13] & 0xff) << 8; h7 += ((t5 >>> 11) | (t6 <<  5)) & 0x1fff;\n    t7 = m[mpos+14] & 0xff | (m[mpos+15] & 0xff) << 8; h8 += ((t6 >>>  8) | (t7 <<  8)) & 0x1fff;\n    h9 += ((t7 >>> 5)) | hibit;\n\n    c = 0;\n\n    d0 = c;\n    d0 += h0 * r0;\n    d0 += h1 * (5 * r9);\n    d0 += h2 * (5 * r8);\n    d0 += h3 * (5 * r7);\n    d0 += h4 * (5 * r6);\n    c = (d0 >>> 13); d0 &= 0x1fff;\n    d0 += h5 * (5 * r5);\n    d0 += h6 * (5 * r4);\n    d0 += h7 * (5 * r3);\n    d0 += h8 * (5 * r2);\n    d0 += h9 * (5 * r1);\n    c += (d0 >>> 13); d0 &= 0x1fff;\n\n    d1 = c;\n    d1 += h0 * r1;\n    d1 += h1 * r0;\n    d1 += h2 * (5 * r9);\n    d1 += h3 * (5 * r8);\n    d1 += h4 * (5 * r7);\n    c = (d1 >>> 13); d1 &= 0x1fff;\n    d1 += h5 * (5 * r6);\n    d1 += h6 * (5 * r5);\n    d1 += h7 * (5 * r4);\n    d1 += h8 * (5 * r3);\n    d1 += h9 * (5 * r2);\n    c += (d1 >>> 13); d1 &= 0x1fff;\n\n    d2 = c;\n    d2 += h0 * r2;\n    d2 += h1 * r1;\n    d2 += h2 * r0;\n    d2 += h3 * (5 * r9);\n    d2 += h4 * (5 * r8);\n    c = (d2 >>> 13); d2 &= 0x1fff;\n    d2 += h5 * (5 * r7);\n    d2 += h6 * (5 * r6);\n    d2 += h7 * (5 * r5);\n    d2 += h8 * (5 * r4);\n    d2 += h9 * (5 * r3);\n    c += (d2 >>> 13); d2 &= 0x1fff;\n\n    d3 = c;\n    d3 += h0 * r3;\n    d3 += h1 * r2;\n    d3 += h2 * r1;\n    d3 += h3 * r0;\n    d3 += h4 * (5 * r9);\n    c = (d3 >>> 13); d3 &= 0x1fff;\n    d3 += h5 * (5 * r8);\n    d3 += h6 * (5 * r7);\n    d3 += h7 * (5 * r6);\n    d3 += h8 * (5 * r5);\n    d3 += h9 * (5 * r4);\n    c += (d3 >>> 13); d3 &= 0x1fff;\n\n    d4 = c;\n    d4 += h0 * r4;\n    d4 += h1 * r3;\n    d4 += h2 * r2;\n    d4 += h3 * r1;\n    d4 += h4 * r0;\n    c = (d4 >>> 13); d4 &= 0x1fff;\n    d4 += h5 * (5 * r9);\n    d4 += h6 * (5 * r8);\n    d4 += h7 * (5 * r7);\n    d4 += h8 * (5 * r6);\n    d4 += h9 * (5 * r5);\n    c += (d4 >>> 13); d4 &= 0x1fff;\n\n    d5 = c;\n    d5 += h0 * r5;\n    d5 += h1 * r4;\n    d5 += h2 * r3;\n    d5 += h3 * r2;\n    d5 += h4 * r1;\n    c = (d5 >>> 13); d5 &= 0x1fff;\n    d5 += h5 * r0;\n    d5 += h6 * (5 * r9);\n    d5 += h7 * (5 * r8);\n    d5 += h8 * (5 * r7);\n    d5 += h9 * (5 * r6);\n    c += (d5 >>> 13); d5 &= 0x1fff;\n\n    d6 = c;\n    d6 += h0 * r6;\n    d6 += h1 * r5;\n    d6 += h2 * r4;\n    d6 += h3 * r3;\n    d6 += h4 * r2;\n    c = (d6 >>> 13); d6 &= 0x1fff;\n    d6 += h5 * r1;\n    d6 += h6 * r0;\n    d6 += h7 * (5 * r9);\n    d6 += h8 * (5 * r8);\n    d6 += h9 * (5 * r7);\n    c += (d6 >>> 13); d6 &= 0x1fff;\n\n    d7 = c;\n    d7 += h0 * r7;\n    d7 += h1 * r6;\n    d7 += h2 * r5;\n    d7 += h3 * r4;\n    d7 += h4 * r3;\n    c = (d7 >>> 13); d7 &= 0x1fff;\n    d7 += h5 * r2;\n    d7 += h6 * r1;\n    d7 += h7 * r0;\n    d7 += h8 * (5 * r9);\n    d7 += h9 * (5 * r8);\n    c += (d7 >>> 13); d7 &= 0x1fff;\n\n    d8 = c;\n    d8 += h0 * r8;\n    d8 += h1 * r7;\n    d8 += h2 * r6;\n    d8 += h3 * r5;\n    d8 += h4 * r4;\n    c = (d8 >>> 13); d8 &= 0x1fff;\n    d8 += h5 * r3;\n    d8 += h6 * r2;\n    d8 += h7 * r1;\n    d8 += h8 * r0;\n    d8 += h9 * (5 * r9);\n    c += (d8 >>> 13); d8 &= 0x1fff;\n\n    d9 = c;\n    d9 += h0 * r9;\n    d9 += h1 * r8;\n    d9 += h2 * r7;\n    d9 += h3 * r6;\n    d9 += h4 * r5;\n    c = (d9 >>> 13); d9 &= 0x1fff;\n    d9 += h5 * r4;\n    d9 += h6 * r3;\n    d9 += h7 * r2;\n    d9 += h8 * r1;\n    d9 += h9 * r0;\n    c += (d9 >>> 13); d9 &= 0x1fff;\n\n    c = (((c << 2) + c)) | 0;\n    c = (c + d0) | 0;\n    d0 = c & 0x1fff;\n    c = (c >>> 13);\n    d1 += c;\n\n    h0 = d0;\n    h1 = d1;\n    h2 = d2;\n    h3 = d3;\n    h4 = d4;\n    h5 = d5;\n    h6 = d6;\n    h7 = d7;\n    h8 = d8;\n    h9 = d9;\n\n    mpos += 16;\n    bytes -= 16;\n  }\n  this.h[0] = h0;\n  this.h[1] = h1;\n  this.h[2] = h2;\n  this.h[3] = h3;\n  this.h[4] = h4;\n  this.h[5] = h5;\n  this.h[6] = h6;\n  this.h[7] = h7;\n  this.h[8] = h8;\n  this.h[9] = h9;\n};\n\npoly1305.prototype.finish = function(mac, macpos) {\n  var g = new Uint16Array(10);\n  var c, mask, f, i;\n\n  if (this.leftover) {\n    i = this.leftover;\n    this.buffer[i++] = 1;\n    for (; i < 16; i++) this.buffer[i] = 0;\n    this.fin = 1;\n    this.blocks(this.buffer, 0, 16);\n  }\n\n  c = this.h[1] >>> 13;\n  this.h[1] &= 0x1fff;\n  for (i = 2; i < 10; i++) {\n    this.h[i] += c;\n    c = this.h[i] >>> 13;\n    this.h[i] &= 0x1fff;\n  }\n  this.h[0] += (c * 5);\n  c = this.h[0] >>> 13;\n  this.h[0] &= 0x1fff;\n  this.h[1] += c;\n  c = this.h[1] >>> 13;\n  this.h[1] &= 0x1fff;\n  this.h[2] += c;\n\n  g[0] = this.h[0] + 5;\n  c = g[0] >>> 13;\n  g[0] &= 0x1fff;\n  for (i = 1; i < 10; i++) {\n    g[i] = this.h[i] + c;\n    c = g[i] >>> 13;\n    g[i] &= 0x1fff;\n  }\n  g[9] -= (1 << 13);\n\n  mask = (c ^ 1) - 1;\n  for (i = 0; i < 10; i++) g[i] &= mask;\n  mask = ~mask;\n  for (i = 0; i < 10; i++) this.h[i] = (this.h[i] & mask) | g[i];\n\n  this.h[0] = ((this.h[0]       ) | (this.h[1] << 13)                    ) & 0xffff;\n  this.h[1] = ((this.h[1] >>>  3) | (this.h[2] << 10)                    ) & 0xffff;\n  this.h[2] = ((this.h[2] >>>  6) | (this.h[3] <<  7)                    ) & 0xffff;\n  this.h[3] = ((this.h[3] >>>  9) | (this.h[4] <<  4)                    ) & 0xffff;\n  this.h[4] = ((this.h[4] >>> 12) | (this.h[5] <<  1) | (this.h[6] << 14)) & 0xffff;\n  this.h[5] = ((this.h[6] >>>  2) | (this.h[7] << 11)                    ) & 0xffff;\n  this.h[6] = ((this.h[7] >>>  5) | (this.h[8] <<  8)                    ) & 0xffff;\n  this.h[7] = ((this.h[8] >>>  8) | (this.h[9] <<  5)                    ) & 0xffff;\n\n  f = this.h[0] + this.pad[0];\n  this.h[0] = f & 0xffff;\n  for (i = 1; i < 8; i++) {\n    f = (((this.h[i] + this.pad[i]) | 0) + (f >>> 16)) | 0;\n    this.h[i] = f & 0xffff;\n  }\n\n  mac[macpos+ 0] = (this.h[0] >>> 0) & 0xff;\n  mac[macpos+ 1] = (this.h[0] >>> 8) & 0xff;\n  mac[macpos+ 2] = (this.h[1] >>> 0) & 0xff;\n  mac[macpos+ 3] = (this.h[1] >>> 8) & 0xff;\n  mac[macpos+ 4] = (this.h[2] >>> 0) & 0xff;\n  mac[macpos+ 5] = (this.h[2] >>> 8) & 0xff;\n  mac[macpos+ 6] = (this.h[3] >>> 0) & 0xff;\n  mac[macpos+ 7] = (this.h[3] >>> 8) & 0xff;\n  mac[macpos+ 8] = (this.h[4] >>> 0) & 0xff;\n  mac[macpos+ 9] = (this.h[4] >>> 8) & 0xff;\n  mac[macpos+10] = (this.h[5] >>> 0) & 0xff;\n  mac[macpos+11] = (this.h[5] >>> 8) & 0xff;\n  mac[macpos+12] = (this.h[6] >>> 0) & 0xff;\n  mac[macpos+13] = (this.h[6] >>> 8) & 0xff;\n  mac[macpos+14] = (this.h[7] >>> 0) & 0xff;\n  mac[macpos+15] = (this.h[7] >>> 8) & 0xff;\n};\n\npoly1305.prototype.update = function(m, mpos, bytes) {\n  var i, want;\n\n  if (this.leftover) {\n    want = (16 - this.leftover);\n    if (want > bytes)\n      want = bytes;\n    for (i = 0; i < want; i++)\n      this.buffer[this.leftover + i] = m[mpos+i];\n    bytes -= want;\n    mpos += want;\n    this.leftover += want;\n    if (this.leftover < 16)\n      return;\n    this.blocks(this.buffer, 0, 16);\n    this.leftover = 0;\n  }\n\n  if (bytes >= 16) {\n    want = bytes - (bytes % 16);\n    this.blocks(m, mpos, want);\n    mpos += want;\n    bytes -= want;\n  }\n\n  if (bytes) {\n    for (i = 0; i < bytes; i++)\n      this.buffer[this.leftover + i] = m[mpos+i];\n    this.leftover += bytes;\n  }\n};\n\nfunction crypto_onetimeauth(out, outpos, m, mpos, n, k) {\n  var s = new poly1305(k);\n  s.update(m, mpos, n);\n  s.finish(out, outpos);\n  return 0;\n}\n\nfunction crypto_onetimeauth_verify(h, hpos, m, mpos, n, k) {\n  var x = new Uint8Array(16);\n  crypto_onetimeauth(x,0,m,mpos,n,k);\n  return crypto_verify_16(h,hpos,x,0);\n}\n\nfunction crypto_secretbox(c,m,d,n,k) {\n  var i;\n  if (d < 32) return -1;\n  crypto_stream_xor(c,0,m,0,d,n,k);\n  crypto_onetimeauth(c, 16, c, 32, d - 32, c);\n  for (i = 0; i < 16; i++) c[i] = 0;\n  return 0;\n}\n\nfunction crypto_secretbox_open(m,c,d,n,k) {\n  var i;\n  var x = new Uint8Array(32);\n  if (d < 32) return -1;\n  crypto_stream(x,0,32,n,k);\n  if (crypto_onetimeauth_verify(c, 16,c, 32,d - 32,x) !== 0) return -1;\n  crypto_stream_xor(m,0,c,0,d,n,k);\n  for (i = 0; i < 32; i++) m[i] = 0;\n  return 0;\n}\n\nfunction set25519(r, a) {\n  var i;\n  for (i = 0; i < 16; i++) r[i] = a[i]|0;\n}\n\nfunction car25519(o) {\n  var i, v, c = 1;\n  for (i = 0; i < 16; i++) {\n    v = o[i] + c + 65535;\n    c = Math.floor(v / 65536);\n    o[i] = v - c * 65536;\n  }\n  o[0] += c-1 + 37 * (c-1);\n}\n\nfunction sel25519(p, q, b) {\n  var t, c = ~(b-1);\n  for (var i = 0; i < 16; i++) {\n    t = c & (p[i] ^ q[i]);\n    p[i] ^= t;\n    q[i] ^= t;\n  }\n}\n\nfunction pack25519(o, n) {\n  var i, j, b;\n  var m = gf(), t = gf();\n  for (i = 0; i < 16; i++) t[i] = n[i];\n  car25519(t);\n  car25519(t);\n  car25519(t);\n  for (j = 0; j < 2; j++) {\n    m[0] = t[0] - 0xffed;\n    for (i = 1; i < 15; i++) {\n      m[i] = t[i] - 0xffff - ((m[i-1]>>16) & 1);\n      m[i-1] &= 0xffff;\n    }\n    m[15] = t[15] - 0x7fff - ((m[14]>>16) & 1);\n    b = (m[15]>>16) & 1;\n    m[14] &= 0xffff;\n    sel25519(t, m, 1-b);\n  }\n  for (i = 0; i < 16; i++) {\n    o[2*i] = t[i] & 0xff;\n    o[2*i+1] = t[i]>>8;\n  }\n}\n\nfunction neq25519(a, b) {\n  var c = new Uint8Array(32), d = new Uint8Array(32);\n  pack25519(c, a);\n  pack25519(d, b);\n  return crypto_verify_32(c, 0, d, 0);\n}\n\nfunction par25519(a) {\n  var d = new Uint8Array(32);\n  pack25519(d, a);\n  return d[0] & 1;\n}\n\nfunction unpack25519(o, n) {\n  var i;\n  for (i = 0; i < 16; i++) o[i] = n[2*i] + (n[2*i+1] << 8);\n  o[15] &= 0x7fff;\n}\n\nfunction A(o, a, b) {\n  for (var i = 0; i < 16; i++) o[i] = a[i] + b[i];\n}\n\nfunction Z(o, a, b) {\n  for (var i = 0; i < 16; i++) o[i] = a[i] - b[i];\n}\n\nfunction M(o, a, b) {\n  var v, c,\n     t0 = 0,  t1 = 0,  t2 = 0,  t3 = 0,  t4 = 0,  t5 = 0,  t6 = 0,  t7 = 0,\n     t8 = 0,  t9 = 0, t10 = 0, t11 = 0, t12 = 0, t13 = 0, t14 = 0, t15 = 0,\n    t16 = 0, t17 = 0, t18 = 0, t19 = 0, t20 = 0, t21 = 0, t22 = 0, t23 = 0,\n    t24 = 0, t25 = 0, t26 = 0, t27 = 0, t28 = 0, t29 = 0, t30 = 0,\n    b0 = b[0],\n    b1 = b[1],\n    b2 = b[2],\n    b3 = b[3],\n    b4 = b[4],\n    b5 = b[5],\n    b6 = b[6],\n    b7 = b[7],\n    b8 = b[8],\n    b9 = b[9],\n    b10 = b[10],\n    b11 = b[11],\n    b12 = b[12],\n    b13 = b[13],\n    b14 = b[14],\n    b15 = b[15];\n\n  v = a[0];\n  t0 += v * b0;\n  t1 += v * b1;\n  t2 += v * b2;\n  t3 += v * b3;\n  t4 += v * b4;\n  t5 += v * b5;\n  t6 += v * b6;\n  t7 += v * b7;\n  t8 += v * b8;\n  t9 += v * b9;\n  t10 += v * b10;\n  t11 += v * b11;\n  t12 += v * b12;\n  t13 += v * b13;\n  t14 += v * b14;\n  t15 += v * b15;\n  v = a[1];\n  t1 += v * b0;\n  t2 += v * b1;\n  t3 += v * b2;\n  t4 += v * b3;\n  t5 += v * b4;\n  t6 += v * b5;\n  t7 += v * b6;\n  t8 += v * b7;\n  t9 += v * b8;\n  t10 += v * b9;\n  t11 += v * b10;\n  t12 += v * b11;\n  t13 += v * b12;\n  t14 += v * b13;\n  t15 += v * b14;\n  t16 += v * b15;\n  v = a[2];\n  t2 += v * b0;\n  t3 += v * b1;\n  t4 += v * b2;\n  t5 += v * b3;\n  t6 += v * b4;\n  t7 += v * b5;\n  t8 += v * b6;\n  t9 += v * b7;\n  t10 += v * b8;\n  t11 += v * b9;\n  t12 += v * b10;\n  t13 += v * b11;\n  t14 += v * b12;\n  t15 += v * b13;\n  t16 += v * b14;\n  t17 += v * b15;\n  v = a[3];\n  t3 += v * b0;\n  t4 += v * b1;\n  t5 += v * b2;\n  t6 += v * b3;\n  t7 += v * b4;\n  t8 += v * b5;\n  t9 += v * b6;\n  t10 += v * b7;\n  t11 += v * b8;\n  t12 += v * b9;\n  t13 += v * b10;\n  t14 += v * b11;\n  t15 += v * b12;\n  t16 += v * b13;\n  t17 += v * b14;\n  t18 += v * b15;\n  v = a[4];\n  t4 += v * b0;\n  t5 += v * b1;\n  t6 += v * b2;\n  t7 += v * b3;\n  t8 += v * b4;\n  t9 += v * b5;\n  t10 += v * b6;\n  t11 += v * b7;\n  t12 += v * b8;\n  t13 += v * b9;\n  t14 += v * b10;\n  t15 += v * b11;\n  t16 += v * b12;\n  t17 += v * b13;\n  t18 += v * b14;\n  t19 += v * b15;\n  v = a[5];\n  t5 += v * b0;\n  t6 += v * b1;\n  t7 += v * b2;\n  t8 += v * b3;\n  t9 += v * b4;\n  t10 += v * b5;\n  t11 += v * b6;\n  t12 += v * b7;\n  t13 += v * b8;\n  t14 += v * b9;\n  t15 += v * b10;\n  t16 += v * b11;\n  t17 += v * b12;\n  t18 += v * b13;\n  t19 += v * b14;\n  t20 += v * b15;\n  v = a[6];\n  t6 += v * b0;\n  t7 += v * b1;\n  t8 += v * b2;\n  t9 += v * b3;\n  t10 += v * b4;\n  t11 += v * b5;\n  t12 += v * b6;\n  t13 += v * b7;\n  t14 += v * b8;\n  t15 += v * b9;\n  t16 += v * b10;\n  t17 += v * b11;\n  t18 += v * b12;\n  t19 += v * b13;\n  t20 += v * b14;\n  t21 += v * b15;\n  v = a[7];\n  t7 += v * b0;\n  t8 += v * b1;\n  t9 += v * b2;\n  t10 += v * b3;\n  t11 += v * b4;\n  t12 += v * b5;\n  t13 += v * b6;\n  t14 += v * b7;\n  t15 += v * b8;\n  t16 += v * b9;\n  t17 += v * b10;\n  t18 += v * b11;\n  t19 += v * b12;\n  t20 += v * b13;\n  t21 += v * b14;\n  t22 += v * b15;\n  v = a[8];\n  t8 += v * b0;\n  t9 += v * b1;\n  t10 += v * b2;\n  t11 += v * b3;\n  t12 += v * b4;\n  t13 += v * b5;\n  t14 += v * b6;\n  t15 += v * b7;\n  t16 += v * b8;\n  t17 += v * b9;\n  t18 += v * b10;\n  t19 += v * b11;\n  t20 += v * b12;\n  t21 += v * b13;\n  t22 += v * b14;\n  t23 += v * b15;\n  v = a[9];\n  t9 += v * b0;\n  t10 += v * b1;\n  t11 += v * b2;\n  t12 += v * b3;\n  t13 += v * b4;\n  t14 += v * b5;\n  t15 += v * b6;\n  t16 += v * b7;\n  t17 += v * b8;\n  t18 += v * b9;\n  t19 += v * b10;\n  t20 += v * b11;\n  t21 += v * b12;\n  t22 += v * b13;\n  t23 += v * b14;\n  t24 += v * b15;\n  v = a[10];\n  t10 += v * b0;\n  t11 += v * b1;\n  t12 += v * b2;\n  t13 += v * b3;\n  t14 += v * b4;\n  t15 += v * b5;\n  t16 += v * b6;\n  t17 += v * b7;\n  t18 += v * b8;\n  t19 += v * b9;\n  t20 += v * b10;\n  t21 += v * b11;\n  t22 += v * b12;\n  t23 += v * b13;\n  t24 += v * b14;\n  t25 += v * b15;\n  v = a[11];\n  t11 += v * b0;\n  t12 += v * b1;\n  t13 += v * b2;\n  t14 += v * b3;\n  t15 += v * b4;\n  t16 += v * b5;\n  t17 += v * b6;\n  t18 += v * b7;\n  t19 += v * b8;\n  t20 += v * b9;\n  t21 += v * b10;\n  t22 += v * b11;\n  t23 += v * b12;\n  t24 += v * b13;\n  t25 += v * b14;\n  t26 += v * b15;\n  v = a[12];\n  t12 += v * b0;\n  t13 += v * b1;\n  t14 += v * b2;\n  t15 += v * b3;\n  t16 += v * b4;\n  t17 += v * b5;\n  t18 += v * b6;\n  t19 += v * b7;\n  t20 += v * b8;\n  t21 += v * b9;\n  t22 += v * b10;\n  t23 += v * b11;\n  t24 += v * b12;\n  t25 += v * b13;\n  t26 += v * b14;\n  t27 += v * b15;\n  v = a[13];\n  t13 += v * b0;\n  t14 += v * b1;\n  t15 += v * b2;\n  t16 += v * b3;\n  t17 += v * b4;\n  t18 += v * b5;\n  t19 += v * b6;\n  t20 += v * b7;\n  t21 += v * b8;\n  t22 += v * b9;\n  t23 += v * b10;\n  t24 += v * b11;\n  t25 += v * b12;\n  t26 += v * b13;\n  t27 += v * b14;\n  t28 += v * b15;\n  v = a[14];\n  t14 += v * b0;\n  t15 += v * b1;\n  t16 += v * b2;\n  t17 += v * b3;\n  t18 += v * b4;\n  t19 += v * b5;\n  t20 += v * b6;\n  t21 += v * b7;\n  t22 += v * b8;\n  t23 += v * b9;\n  t24 += v * b10;\n  t25 += v * b11;\n  t26 += v * b12;\n  t27 += v * b13;\n  t28 += v * b14;\n  t29 += v * b15;\n  v = a[15];\n  t15 += v * b0;\n  t16 += v * b1;\n  t17 += v * b2;\n  t18 += v * b3;\n  t19 += v * b4;\n  t20 += v * b5;\n  t21 += v * b6;\n  t22 += v * b7;\n  t23 += v * b8;\n  t24 += v * b9;\n  t25 += v * b10;\n  t26 += v * b11;\n  t27 += v * b12;\n  t28 += v * b13;\n  t29 += v * b14;\n  t30 += v * b15;\n\n  t0  += 38 * t16;\n  t1  += 38 * t17;\n  t2  += 38 * t18;\n  t3  += 38 * t19;\n  t4  += 38 * t20;\n  t5  += 38 * t21;\n  t6  += 38 * t22;\n  t7  += 38 * t23;\n  t8  += 38 * t24;\n  t9  += 38 * t25;\n  t10 += 38 * t26;\n  t11 += 38 * t27;\n  t12 += 38 * t28;\n  t13 += 38 * t29;\n  t14 += 38 * t30;\n  // t15 left as is\n\n  // first car\n  c = 1;\n  v =  t0 + c + 65535; c = Math.floor(v / 65536);  t0 = v - c * 65536;\n  v =  t1 + c + 65535; c = Math.floor(v / 65536);  t1 = v - c * 65536;\n  v =  t2 + c + 65535; c = Math.floor(v / 65536);  t2 = v - c * 65536;\n  v =  t3 + c + 65535; c = Math.floor(v / 65536);  t3 = v - c * 65536;\n  v =  t4 + c + 65535; c = Math.floor(v / 65536);  t4 = v - c * 65536;\n  v =  t5 + c + 65535; c = Math.floor(v / 65536);  t5 = v - c * 65536;\n  v =  t6 + c + 65535; c = Math.floor(v / 65536);  t6 = v - c * 65536;\n  v =  t7 + c + 65535; c = Math.floor(v / 65536);  t7 = v - c * 65536;\n  v =  t8 + c + 65535; c = Math.floor(v / 65536);  t8 = v - c * 65536;\n  v =  t9 + c + 65535; c = Math.floor(v / 65536);  t9 = v - c * 65536;\n  v = t10 + c + 65535; c = Math.floor(v / 65536); t10 = v - c * 65536;\n  v = t11 + c + 65535; c = Math.floor(v / 65536); t11 = v - c * 65536;\n  v = t12 + c + 65535; c = Math.floor(v / 65536); t12 = v - c * 65536;\n  v = t13 + c + 65535; c = Math.floor(v / 65536); t13 = v - c * 65536;\n  v = t14 + c + 65535; c = Math.floor(v / 65536); t14 = v - c * 65536;\n  v = t15 + c + 65535; c = Math.floor(v / 65536); t15 = v - c * 65536;\n  t0 += c-1 + 37 * (c-1);\n\n  // second car\n  c = 1;\n  v =  t0 + c + 65535; c = Math.floor(v / 65536);  t0 = v - c * 65536;\n  v =  t1 + c + 65535; c = Math.floor(v / 65536);  t1 = v - c * 65536;\n  v =  t2 + c + 65535; c = Math.floor(v / 65536);  t2 = v - c * 65536;\n  v =  t3 + c + 65535; c = Math.floor(v / 65536);  t3 = v - c * 65536;\n  v =  t4 + c + 65535; c = Math.floor(v / 65536);  t4 = v - c * 65536;\n  v =  t5 + c + 65535; c = Math.floor(v / 65536);  t5 = v - c * 65536;\n  v =  t6 + c + 65535; c = Math.floor(v / 65536);  t6 = v - c * 65536;\n  v =  t7 + c + 65535; c = Math.floor(v / 65536);  t7 = v - c * 65536;\n  v =  t8 + c + 65535; c = Math.floor(v / 65536);  t8 = v - c * 65536;\n  v =  t9 + c + 65535; c = Math.floor(v / 65536);  t9 = v - c * 65536;\n  v = t10 + c + 65535; c = Math.floor(v / 65536); t10 = v - c * 65536;\n  v = t11 + c + 65535; c = Math.floor(v / 65536); t11 = v - c * 65536;\n  v = t12 + c + 65535; c = Math.floor(v / 65536); t12 = v - c * 65536;\n  v = t13 + c + 65535; c = Math.floor(v / 65536); t13 = v - c * 65536;\n  v = t14 + c + 65535; c = Math.floor(v / 65536); t14 = v - c * 65536;\n  v = t15 + c + 65535; c = Math.floor(v / 65536); t15 = v - c * 65536;\n  t0 += c-1 + 37 * (c-1);\n\n  o[ 0] = t0;\n  o[ 1] = t1;\n  o[ 2] = t2;\n  o[ 3] = t3;\n  o[ 4] = t4;\n  o[ 5] = t5;\n  o[ 6] = t6;\n  o[ 7] = t7;\n  o[ 8] = t8;\n  o[ 9] = t9;\n  o[10] = t10;\n  o[11] = t11;\n  o[12] = t12;\n  o[13] = t13;\n  o[14] = t14;\n  o[15] = t15;\n}\n\nfunction S(o, a) {\n  M(o, a, a);\n}\n\nfunction inv25519(o, i) {\n  var c = gf();\n  var a;\n  for (a = 0; a < 16; a++) c[a] = i[a];\n  for (a = 253; a >= 0; a--) {\n    S(c, c);\n    if(a !== 2 && a !== 4) M(c, c, i);\n  }\n  for (a = 0; a < 16; a++) o[a] = c[a];\n}\n\nfunction pow2523(o, i) {\n  var c = gf();\n  var a;\n  for (a = 0; a < 16; a++) c[a] = i[a];\n  for (a = 250; a >= 0; a--) {\n      S(c, c);\n      if(a !== 1) M(c, c, i);\n  }\n  for (a = 0; a < 16; a++) o[a] = c[a];\n}\n\nfunction crypto_scalarmult(q, n, p) {\n  var z = new Uint8Array(32);\n  var x = new Float64Array(80), r, i;\n  var a = gf(), b = gf(), c = gf(),\n      d = gf(), e = gf(), f = gf();\n  for (i = 0; i < 31; i++) z[i] = n[i];\n  z[31]=(n[31]&127)|64;\n  z[0]&=248;\n  unpack25519(x,p);\n  for (i = 0; i < 16; i++) {\n    b[i]=x[i];\n    d[i]=a[i]=c[i]=0;\n  }\n  a[0]=d[0]=1;\n  for (i=254; i>=0; --i) {\n    r=(z[i>>>3]>>>(i&7))&1;\n    sel25519(a,b,r);\n    sel25519(c,d,r);\n    A(e,a,c);\n    Z(a,a,c);\n    A(c,b,d);\n    Z(b,b,d);\n    S(d,e);\n    S(f,a);\n    M(a,c,a);\n    M(c,b,e);\n    A(e,a,c);\n    Z(a,a,c);\n    S(b,a);\n    Z(c,d,f);\n    M(a,c,_121665);\n    A(a,a,d);\n    M(c,c,a);\n    M(a,d,f);\n    M(d,b,x);\n    S(b,e);\n    sel25519(a,b,r);\n    sel25519(c,d,r);\n  }\n  for (i = 0; i < 16; i++) {\n    x[i+16]=a[i];\n    x[i+32]=c[i];\n    x[i+48]=b[i];\n    x[i+64]=d[i];\n  }\n  var x32 = x.subarray(32);\n  var x16 = x.subarray(16);\n  inv25519(x32,x32);\n  M(x16,x16,x32);\n  pack25519(q,x16);\n  return 0;\n}\n\nfunction crypto_scalarmult_base(q, n) {\n  return crypto_scalarmult(q, n, _9);\n}\n\nfunction crypto_box_keypair(y, x) {\n  randombytes(x, 32);\n  return crypto_scalarmult_base(y, x);\n}\n\nfunction crypto_box_beforenm(k, y, x) {\n  var s = new Uint8Array(32);\n  crypto_scalarmult(s, x, y);\n  return crypto_core_hsalsa20(k, _0, s, sigma);\n}\n\nvar crypto_box_afternm = crypto_secretbox;\nvar crypto_box_open_afternm = crypto_secretbox_open;\n\nfunction crypto_box(c, m, d, n, y, x) {\n  var k = new Uint8Array(32);\n  crypto_box_beforenm(k, y, x);\n  return crypto_box_afternm(c, m, d, n, k);\n}\n\nfunction crypto_box_open(m, c, d, n, y, x) {\n  var k = new Uint8Array(32);\n  crypto_box_beforenm(k, y, x);\n  return crypto_box_open_afternm(m, c, d, n, k);\n}\n\nvar K = [\n  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,\n  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,\n  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,\n  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,\n  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,\n  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,\n  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,\n  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,\n  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,\n  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,\n  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,\n  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,\n  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,\n  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,\n  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,\n  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,\n  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,\n  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,\n  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,\n  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,\n  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,\n  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,\n  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,\n  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,\n  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,\n  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,\n  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,\n  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,\n  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,\n  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,\n  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,\n  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,\n  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,\n  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,\n  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,\n  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,\n  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,\n  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,\n  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,\n  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817\n];\n\nfunction crypto_hashblocks_hl(hh, hl, m, n) {\n  var wh = new Int32Array(16), wl = new Int32Array(16),\n      bh0, bh1, bh2, bh3, bh4, bh5, bh6, bh7,\n      bl0, bl1, bl2, bl3, bl4, bl5, bl6, bl7,\n      th, tl, i, j, h, l, a, b, c, d;\n\n  var ah0 = hh[0],\n      ah1 = hh[1],\n      ah2 = hh[2],\n      ah3 = hh[3],\n      ah4 = hh[4],\n      ah5 = hh[5],\n      ah6 = hh[6],\n      ah7 = hh[7],\n\n      al0 = hl[0],\n      al1 = hl[1],\n      al2 = hl[2],\n      al3 = hl[3],\n      al4 = hl[4],\n      al5 = hl[5],\n      al6 = hl[6],\n      al7 = hl[7];\n\n  var pos = 0;\n  while (n >= 128) {\n    for (i = 0; i < 16; i++) {\n      j = 8 * i + pos;\n      wh[i] = (m[j+0] << 24) | (m[j+1] << 16) | (m[j+2] << 8) | m[j+3];\n      wl[i] = (m[j+4] << 24) | (m[j+5] << 16) | (m[j+6] << 8) | m[j+7];\n    }\n    for (i = 0; i < 80; i++) {\n      bh0 = ah0;\n      bh1 = ah1;\n      bh2 = ah2;\n      bh3 = ah3;\n      bh4 = ah4;\n      bh5 = ah5;\n      bh6 = ah6;\n      bh7 = ah7;\n\n      bl0 = al0;\n      bl1 = al1;\n      bl2 = al2;\n      bl3 = al3;\n      bl4 = al4;\n      bl5 = al5;\n      bl6 = al6;\n      bl7 = al7;\n\n      // add\n      h = ah7;\n      l = al7;\n\n      a = l & 0xffff; b = l >>> 16;\n      c = h & 0xffff; d = h >>> 16;\n\n      // Sigma1\n      h = ((ah4 >>> 14) | (al4 << (32-14))) ^ ((ah4 >>> 18) | (al4 << (32-18))) ^ ((al4 >>> (41-32)) | (ah4 << (32-(41-32))));\n      l = ((al4 >>> 14) | (ah4 << (32-14))) ^ ((al4 >>> 18) | (ah4 << (32-18))) ^ ((ah4 >>> (41-32)) | (al4 << (32-(41-32))));\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // Ch\n      h = (ah4 & ah5) ^ (~ah4 & ah6);\n      l = (al4 & al5) ^ (~al4 & al6);\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // K\n      h = K[i*2];\n      l = K[i*2+1];\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // w\n      h = wh[i%16];\n      l = wl[i%16];\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      b += a >>> 16;\n      c += b >>> 16;\n      d += c >>> 16;\n\n      th = c & 0xffff | d << 16;\n      tl = a & 0xffff | b << 16;\n\n      // add\n      h = th;\n      l = tl;\n\n      a = l & 0xffff; b = l >>> 16;\n      c = h & 0xffff; d = h >>> 16;\n\n      // Sigma0\n      h = ((ah0 >>> 28) | (al0 << (32-28))) ^ ((al0 >>> (34-32)) | (ah0 << (32-(34-32)))) ^ ((al0 >>> (39-32)) | (ah0 << (32-(39-32))));\n      l = ((al0 >>> 28) | (ah0 << (32-28))) ^ ((ah0 >>> (34-32)) | (al0 << (32-(34-32)))) ^ ((ah0 >>> (39-32)) | (al0 << (32-(39-32))));\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // Maj\n      h = (ah0 & ah1) ^ (ah0 & ah2) ^ (ah1 & ah2);\n      l = (al0 & al1) ^ (al0 & al2) ^ (al1 & al2);\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      b += a >>> 16;\n      c += b >>> 16;\n      d += c >>> 16;\n\n      bh7 = (c & 0xffff) | (d << 16);\n      bl7 = (a & 0xffff) | (b << 16);\n\n      // add\n      h = bh3;\n      l = bl3;\n\n      a = l & 0xffff; b = l >>> 16;\n      c = h & 0xffff; d = h >>> 16;\n\n      h = th;\n      l = tl;\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      b += a >>> 16;\n      c += b >>> 16;\n      d += c >>> 16;\n\n      bh3 = (c & 0xffff) | (d << 16);\n      bl3 = (a & 0xffff) | (b << 16);\n\n      ah1 = bh0;\n      ah2 = bh1;\n      ah3 = bh2;\n      ah4 = bh3;\n      ah5 = bh4;\n      ah6 = bh5;\n      ah7 = bh6;\n      ah0 = bh7;\n\n      al1 = bl0;\n      al2 = bl1;\n      al3 = bl2;\n      al4 = bl3;\n      al5 = bl4;\n      al6 = bl5;\n      al7 = bl6;\n      al0 = bl7;\n\n      if (i%16 === 15) {\n        for (j = 0; j < 16; j++) {\n          // add\n          h = wh[j];\n          l = wl[j];\n\n          a = l & 0xffff; b = l >>> 16;\n          c = h & 0xffff; d = h >>> 16;\n\n          h = wh[(j+9)%16];\n          l = wl[(j+9)%16];\n\n          a += l & 0xffff; b += l >>> 16;\n          c += h & 0xffff; d += h >>> 16;\n\n          // sigma0\n          th = wh[(j+1)%16];\n          tl = wl[(j+1)%16];\n          h = ((th >>> 1) | (tl << (32-1))) ^ ((th >>> 8) | (tl << (32-8))) ^ (th >>> 7);\n          l = ((tl >>> 1) | (th << (32-1))) ^ ((tl >>> 8) | (th << (32-8))) ^ ((tl >>> 7) | (th << (32-7)));\n\n          a += l & 0xffff; b += l >>> 16;\n          c += h & 0xffff; d += h >>> 16;\n\n          // sigma1\n          th = wh[(j+14)%16];\n          tl = wl[(j+14)%16];\n          h = ((th >>> 19) | (tl << (32-19))) ^ ((tl >>> (61-32)) | (th << (32-(61-32)))) ^ (th >>> 6);\n          l = ((tl >>> 19) | (th << (32-19))) ^ ((th >>> (61-32)) | (tl << (32-(61-32)))) ^ ((tl >>> 6) | (th << (32-6)));\n\n          a += l & 0xffff; b += l >>> 16;\n          c += h & 0xffff; d += h >>> 16;\n\n          b += a >>> 16;\n          c += b >>> 16;\n          d += c >>> 16;\n\n          wh[j] = (c & 0xffff) | (d << 16);\n          wl[j] = (a & 0xffff) | (b << 16);\n        }\n      }\n    }\n\n    // add\n    h = ah0;\n    l = al0;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[0];\n    l = hl[0];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[0] = ah0 = (c & 0xffff) | (d << 16);\n    hl[0] = al0 = (a & 0xffff) | (b << 16);\n\n    h = ah1;\n    l = al1;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[1];\n    l = hl[1];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[1] = ah1 = (c & 0xffff) | (d << 16);\n    hl[1] = al1 = (a & 0xffff) | (b << 16);\n\n    h = ah2;\n    l = al2;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[2];\n    l = hl[2];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[2] = ah2 = (c & 0xffff) | (d << 16);\n    hl[2] = al2 = (a & 0xffff) | (b << 16);\n\n    h = ah3;\n    l = al3;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[3];\n    l = hl[3];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[3] = ah3 = (c & 0xffff) | (d << 16);\n    hl[3] = al3 = (a & 0xffff) | (b << 16);\n\n    h = ah4;\n    l = al4;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[4];\n    l = hl[4];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[4] = ah4 = (c & 0xffff) | (d << 16);\n    hl[4] = al4 = (a & 0xffff) | (b << 16);\n\n    h = ah5;\n    l = al5;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[5];\n    l = hl[5];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[5] = ah5 = (c & 0xffff) | (d << 16);\n    hl[5] = al5 = (a & 0xffff) | (b << 16);\n\n    h = ah6;\n    l = al6;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[6];\n    l = hl[6];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[6] = ah6 = (c & 0xffff) | (d << 16);\n    hl[6] = al6 = (a & 0xffff) | (b << 16);\n\n    h = ah7;\n    l = al7;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[7];\n    l = hl[7];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[7] = ah7 = (c & 0xffff) | (d << 16);\n    hl[7] = al7 = (a & 0xffff) | (b << 16);\n\n    pos += 128;\n    n -= 128;\n  }\n\n  return n;\n}\n\nfunction crypto_hash(out, m, n) {\n  var hh = new Int32Array(8),\n      hl = new Int32Array(8),\n      x = new Uint8Array(256),\n      i, b = n;\n\n  hh[0] = 0x6a09e667;\n  hh[1] = 0xbb67ae85;\n  hh[2] = 0x3c6ef372;\n  hh[3] = 0xa54ff53a;\n  hh[4] = 0x510e527f;\n  hh[5] = 0x9b05688c;\n  hh[6] = 0x1f83d9ab;\n  hh[7] = 0x5be0cd19;\n\n  hl[0] = 0xf3bcc908;\n  hl[1] = 0x84caa73b;\n  hl[2] = 0xfe94f82b;\n  hl[3] = 0x5f1d36f1;\n  hl[4] = 0xade682d1;\n  hl[5] = 0x2b3e6c1f;\n  hl[6] = 0xfb41bd6b;\n  hl[7] = 0x137e2179;\n\n  crypto_hashblocks_hl(hh, hl, m, n);\n  n %= 128;\n\n  for (i = 0; i < n; i++) x[i] = m[b-n+i];\n  x[n] = 128;\n\n  n = 256-128*(n<112?1:0);\n  x[n-9] = 0;\n  ts64(x, n-8,  (b / 0x20000000) | 0, b << 3);\n  crypto_hashblocks_hl(hh, hl, x, n);\n\n  for (i = 0; i < 8; i++) ts64(out, 8*i, hh[i], hl[i]);\n\n  return 0;\n}\n\nfunction add(p, q) {\n  var a = gf(), b = gf(), c = gf(),\n      d = gf(), e = gf(), f = gf(),\n      g = gf(), h = gf(), t = gf();\n\n  Z(a, p[1], p[0]);\n  Z(t, q[1], q[0]);\n  M(a, a, t);\n  A(b, p[0], p[1]);\n  A(t, q[0], q[1]);\n  M(b, b, t);\n  M(c, p[3], q[3]);\n  M(c, c, D2);\n  M(d, p[2], q[2]);\n  A(d, d, d);\n  Z(e, b, a);\n  Z(f, d, c);\n  A(g, d, c);\n  A(h, b, a);\n\n  M(p[0], e, f);\n  M(p[1], h, g);\n  M(p[2], g, f);\n  M(p[3], e, h);\n}\n\nfunction cswap(p, q, b) {\n  var i;\n  for (i = 0; i < 4; i++) {\n    sel25519(p[i], q[i], b);\n  }\n}\n\nfunction pack(r, p) {\n  var tx = gf(), ty = gf(), zi = gf();\n  inv25519(zi, p[2]);\n  M(tx, p[0], zi);\n  M(ty, p[1], zi);\n  pack25519(r, ty);\n  r[31] ^= par25519(tx) << 7;\n}\n\nfunction scalarmult(p, q, s) {\n  var b, i;\n  set25519(p[0], gf0);\n  set25519(p[1], gf1);\n  set25519(p[2], gf1);\n  set25519(p[3], gf0);\n  for (i = 255; i >= 0; --i) {\n    b = (s[(i/8)|0] >> (i&7)) & 1;\n    cswap(p, q, b);\n    add(q, p);\n    add(p, p);\n    cswap(p, q, b);\n  }\n}\n\nfunction scalarbase(p, s) {\n  var q = [gf(), gf(), gf(), gf()];\n  set25519(q[0], X);\n  set25519(q[1], Y);\n  set25519(q[2], gf1);\n  M(q[3], X, Y);\n  scalarmult(p, q, s);\n}\n\nfunction crypto_sign_keypair(pk, sk, seeded) {\n  var d = new Uint8Array(64);\n  var p = [gf(), gf(), gf(), gf()];\n  var i;\n\n  if (!seeded) randombytes(sk, 32);\n  crypto_hash(d, sk, 32);\n  d[0] &= 248;\n  d[31] &= 127;\n  d[31] |= 64;\n\n  scalarbase(p, d);\n  pack(pk, p);\n\n  for (i = 0; i < 32; i++) sk[i+32] = pk[i];\n  return 0;\n}\n\nvar L = new Float64Array([0xed, 0xd3, 0xf5, 0x5c, 0x1a, 0x63, 0x12, 0x58, 0xd6, 0x9c, 0xf7, 0xa2, 0xde, 0xf9, 0xde, 0x14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x10]);\n\nfunction modL(r, x) {\n  var carry, i, j, k;\n  for (i = 63; i >= 32; --i) {\n    carry = 0;\n    for (j = i - 32, k = i - 12; j < k; ++j) {\n      x[j] += carry - 16 * x[i] * L[j - (i - 32)];\n      carry = Math.floor((x[j] + 128) / 256);\n      x[j] -= carry * 256;\n    }\n    x[j] += carry;\n    x[i] = 0;\n  }\n  carry = 0;\n  for (j = 0; j < 32; j++) {\n    x[j] += carry - (x[31] >> 4) * L[j];\n    carry = x[j] >> 8;\n    x[j] &= 255;\n  }\n  for (j = 0; j < 32; j++) x[j] -= carry * L[j];\n  for (i = 0; i < 32; i++) {\n    x[i+1] += x[i] >> 8;\n    r[i] = x[i] & 255;\n  }\n}\n\nfunction reduce(r) {\n  var x = new Float64Array(64), i;\n  for (i = 0; i < 64; i++) x[i] = r[i];\n  for (i = 0; i < 64; i++) r[i] = 0;\n  modL(r, x);\n}\n\n// Note: difference from C - smlen returned, not passed as argument.\nfunction crypto_sign(sm, m, n, sk) {\n  var d = new Uint8Array(64), h = new Uint8Array(64), r = new Uint8Array(64);\n  var i, j, x = new Float64Array(64);\n  var p = [gf(), gf(), gf(), gf()];\n\n  crypto_hash(d, sk, 32);\n  d[0] &= 248;\n  d[31] &= 127;\n  d[31] |= 64;\n\n  var smlen = n + 64;\n  for (i = 0; i < n; i++) sm[64 + i] = m[i];\n  for (i = 0; i < 32; i++) sm[32 + i] = d[32 + i];\n\n  crypto_hash(r, sm.subarray(32), n+32);\n  reduce(r);\n  scalarbase(p, r);\n  pack(sm, p);\n\n  for (i = 32; i < 64; i++) sm[i] = sk[i];\n  crypto_hash(h, sm, n + 64);\n  reduce(h);\n\n  for (i = 0; i < 64; i++) x[i] = 0;\n  for (i = 0; i < 32; i++) x[i] = r[i];\n  for (i = 0; i < 32; i++) {\n    for (j = 0; j < 32; j++) {\n      x[i+j] += h[i] * d[j];\n    }\n  }\n\n  modL(sm.subarray(32), x);\n  return smlen;\n}\n\nfunction unpackneg(r, p) {\n  var t = gf(), chk = gf(), num = gf(),\n      den = gf(), den2 = gf(), den4 = gf(),\n      den6 = gf();\n\n  set25519(r[2], gf1);\n  unpack25519(r[1], p);\n  S(num, r[1]);\n  M(den, num, D);\n  Z(num, num, r[2]);\n  A(den, r[2], den);\n\n  S(den2, den);\n  S(den4, den2);\n  M(den6, den4, den2);\n  M(t, den6, num);\n  M(t, t, den);\n\n  pow2523(t, t);\n  M(t, t, num);\n  M(t, t, den);\n  M(t, t, den);\n  M(r[0], t, den);\n\n  S(chk, r[0]);\n  M(chk, chk, den);\n  if (neq25519(chk, num)) M(r[0], r[0], I);\n\n  S(chk, r[0]);\n  M(chk, chk, den);\n  if (neq25519(chk, num)) return -1;\n\n  if (par25519(r[0]) === (p[31]>>7)) Z(r[0], gf0, r[0]);\n\n  M(r[3], r[0], r[1]);\n  return 0;\n}\n\nfunction crypto_sign_open(m, sm, n, pk) {\n  var i;\n  var t = new Uint8Array(32), h = new Uint8Array(64);\n  var p = [gf(), gf(), gf(), gf()],\n      q = [gf(), gf(), gf(), gf()];\n\n  if (n < 64) return -1;\n\n  if (unpackneg(q, pk)) return -1;\n\n  for (i = 0; i < n; i++) m[i] = sm[i];\n  for (i = 0; i < 32; i++) m[i+32] = pk[i];\n  crypto_hash(h, m, n);\n  reduce(h);\n  scalarmult(p, q, h);\n\n  scalarbase(q, sm.subarray(32));\n  add(p, q);\n  pack(t, p);\n\n  n -= 64;\n  if (crypto_verify_32(sm, 0, t, 0)) {\n    for (i = 0; i < n; i++) m[i] = 0;\n    return -1;\n  }\n\n  for (i = 0; i < n; i++) m[i] = sm[i + 64];\n  return n;\n}\n\nvar crypto_secretbox_KEYBYTES = 32,\n    crypto_secretbox_NONCEBYTES = 24,\n    crypto_secretbox_ZEROBYTES = 32,\n    crypto_secretbox_BOXZEROBYTES = 16,\n    crypto_scalarmult_BYTES = 32,\n    crypto_scalarmult_SCALARBYTES = 32,\n    crypto_box_PUBLICKEYBYTES = 32,\n    crypto_box_SECRETKEYBYTES = 32,\n    crypto_box_BEFORENMBYTES = 32,\n    crypto_box_NONCEBYTES = crypto_secretbox_NONCEBYTES,\n    crypto_box_ZEROBYTES = crypto_secretbox_ZEROBYTES,\n    crypto_box_BOXZEROBYTES = crypto_secretbox_BOXZEROBYTES,\n    crypto_sign_BYTES = 64,\n    crypto_sign_PUBLICKEYBYTES = 32,\n    crypto_sign_SECRETKEYBYTES = 64,\n    crypto_sign_SEEDBYTES = 32,\n    crypto_hash_BYTES = 64;\n\nnacl.lowlevel = {\n  crypto_core_hsalsa20: crypto_core_hsalsa20,\n  crypto_stream_xor: crypto_stream_xor,\n  crypto_stream: crypto_stream,\n  crypto_stream_salsa20_xor: crypto_stream_salsa20_xor,\n  crypto_stream_salsa20: crypto_stream_salsa20,\n  crypto_onetimeauth: crypto_onetimeauth,\n  crypto_onetimeauth_verify: crypto_onetimeauth_verify,\n  crypto_verify_16: crypto_verify_16,\n  crypto_verify_32: crypto_verify_32,\n  crypto_secretbox: crypto_secretbox,\n  crypto_secretbox_open: crypto_secretbox_open,\n  crypto_scalarmult: crypto_scalarmult,\n  crypto_scalarmult_base: crypto_scalarmult_base,\n  crypto_box_beforenm: crypto_box_beforenm,\n  crypto_box_afternm: crypto_box_afternm,\n  crypto_box: crypto_box,\n  crypto_box_open: crypto_box_open,\n  crypto_box_keypair: crypto_box_keypair,\n  crypto_hash: crypto_hash,\n  crypto_sign: crypto_sign,\n  crypto_sign_keypair: crypto_sign_keypair,\n  crypto_sign_open: crypto_sign_open,\n\n  crypto_secretbox_KEYBYTES: crypto_secretbox_KEYBYTES,\n  crypto_secretbox_NONCEBYTES: crypto_secretbox_NONCEBYTES,\n  crypto_secretbox_ZEROBYTES: crypto_secretbox_ZEROBYTES,\n  crypto_secretbox_BOXZEROBYTES: crypto_secretbox_BOXZEROBYTES,\n  crypto_scalarmult_BYTES: crypto_scalarmult_BYTES,\n  crypto_scalarmult_SCALARBYTES: crypto_scalarmult_SCALARBYTES,\n  crypto_box_PUBLICKEYBYTES: crypto_box_PUBLICKEYBYTES,\n  crypto_box_SECRETKEYBYTES: crypto_box_SECRETKEYBYTES,\n  crypto_box_BEFORENMBYTES: crypto_box_BEFORENMBYTES,\n  crypto_box_NONCEBYTES: crypto_box_NONCEBYTES,\n  crypto_box_ZEROBYTES: crypto_box_ZEROBYTES,\n  crypto_box_BOXZEROBYTES: crypto_box_BOXZEROBYTES,\n  crypto_sign_BYTES: crypto_sign_BYTES,\n  crypto_sign_PUBLICKEYBYTES: crypto_sign_PUBLICKEYBYTES,\n  crypto_sign_SECRETKEYBYTES: crypto_sign_SECRETKEYBYTES,\n  crypto_sign_SEEDBYTES: crypto_sign_SEEDBYTES,\n  crypto_hash_BYTES: crypto_hash_BYTES,\n\n  gf: gf,\n  D: D,\n  L: L,\n  pack25519: pack25519,\n  unpack25519: unpack25519,\n  M: M,\n  A: A,\n  S: S,\n  Z: Z,\n  pow2523: pow2523,\n  add: add,\n  set25519: set25519,\n  modL: modL,\n  scalarmult: scalarmult,\n  scalarbase: scalarbase,\n};\n\n/* High-level API */\n\nfunction checkLengths(k, n) {\n  if (k.length !== crypto_secretbox_KEYBYTES) throw new Error('bad key size');\n  if (n.length !== crypto_secretbox_NONCEBYTES) throw new Error('bad nonce size');\n}\n\nfunction checkBoxLengths(pk, sk) {\n  if (pk.length !== crypto_box_PUBLICKEYBYTES) throw new Error('bad public key size');\n  if (sk.length !== crypto_box_SECRETKEYBYTES) throw new Error('bad secret key size');\n}\n\nfunction checkArrayTypes() {\n  for (var i = 0; i < arguments.length; i++) {\n    if (!(arguments[i] instanceof Uint8Array))\n      throw new TypeError('unexpected type, use Uint8Array');\n  }\n}\n\nfunction cleanup(arr) {\n  for (var i = 0; i < arr.length; i++) arr[i] = 0;\n}\n\nnacl.randomBytes = function(n) {\n  var b = new Uint8Array(n);\n  randombytes(b, n);\n  return b;\n};\n\nnacl.secretbox = function(msg, nonce, key) {\n  checkArrayTypes(msg, nonce, key);\n  checkLengths(key, nonce);\n  var m = new Uint8Array(crypto_secretbox_ZEROBYTES + msg.length);\n  var c = new Uint8Array(m.length);\n  for (var i = 0; i < msg.length; i++) m[i+crypto_secretbox_ZEROBYTES] = msg[i];\n  crypto_secretbox(c, m, m.length, nonce, key);\n  return c.subarray(crypto_secretbox_BOXZEROBYTES);\n};\n\nnacl.secretbox.open = function(box, nonce, key) {\n  checkArrayTypes(box, nonce, key);\n  checkLengths(key, nonce);\n  var c = new Uint8Array(crypto_secretbox_BOXZEROBYTES + box.length);\n  var m = new Uint8Array(c.length);\n  for (var i = 0; i < box.length; i++) c[i+crypto_secretbox_BOXZEROBYTES] = box[i];\n  if (c.length < 32) return null;\n  if (crypto_secretbox_open(m, c, c.length, nonce, key) !== 0) return null;\n  return m.subarray(crypto_secretbox_ZEROBYTES);\n};\n\nnacl.secretbox.keyLength = crypto_secretbox_KEYBYTES;\nnacl.secretbox.nonceLength = crypto_secretbox_NONCEBYTES;\nnacl.secretbox.overheadLength = crypto_secretbox_BOXZEROBYTES;\n\nnacl.scalarMult = function(n, p) {\n  checkArrayTypes(n, p);\n  if (n.length !== crypto_scalarmult_SCALARBYTES) throw new Error('bad n size');\n  if (p.length !== crypto_scalarmult_BYTES) throw new Error('bad p size');\n  var q = new Uint8Array(crypto_scalarmult_BYTES);\n  crypto_scalarmult(q, n, p);\n  return q;\n};\n\nnacl.scalarMult.base = function(n) {\n  checkArrayTypes(n);\n  if (n.length !== crypto_scalarmult_SCALARBYTES) throw new Error('bad n size');\n  var q = new Uint8Array(crypto_scalarmult_BYTES);\n  crypto_scalarmult_base(q, n);\n  return q;\n};\n\nnacl.scalarMult.scalarLength = crypto_scalarmult_SCALARBYTES;\nnacl.scalarMult.groupElementLength = crypto_scalarmult_BYTES;\n\nnacl.box = function(msg, nonce, publicKey, secretKey) {\n  var k = nacl.box.before(publicKey, secretKey);\n  return nacl.secretbox(msg, nonce, k);\n};\n\nnacl.box.before = function(publicKey, secretKey) {\n  checkArrayTypes(publicKey, secretKey);\n  checkBoxLengths(publicKey, secretKey);\n  var k = new Uint8Array(crypto_box_BEFORENMBYTES);\n  crypto_box_beforenm(k, publicKey, secretKey);\n  return k;\n};\n\nnacl.box.after = nacl.secretbox;\n\nnacl.box.open = function(msg, nonce, publicKey, secretKey) {\n  var k = nacl.box.before(publicKey, secretKey);\n  return nacl.secretbox.open(msg, nonce, k);\n};\n\nnacl.box.open.after = nacl.secretbox.open;\n\nnacl.box.keyPair = function() {\n  var pk = new Uint8Array(crypto_box_PUBLICKEYBYTES);\n  var sk = new Uint8Array(crypto_box_SECRETKEYBYTES);\n  crypto_box_keypair(pk, sk);\n  return {publicKey: pk, secretKey: sk};\n};\n\nnacl.box.keyPair.fromSecretKey = function(secretKey) {\n  checkArrayTypes(secretKey);\n  if (secretKey.length !== crypto_box_SECRETKEYBYTES)\n    throw new Error('bad secret key size');\n  var pk = new Uint8Array(crypto_box_PUBLICKEYBYTES);\n  crypto_scalarmult_base(pk, secretKey);\n  return {publicKey: pk, secretKey: new Uint8Array(secretKey)};\n};\n\nnacl.box.publicKeyLength = crypto_box_PUBLICKEYBYTES;\nnacl.box.secretKeyLength = crypto_box_SECRETKEYBYTES;\nnacl.box.sharedKeyLength = crypto_box_BEFORENMBYTES;\nnacl.box.nonceLength = crypto_box_NONCEBYTES;\nnacl.box.overheadLength = nacl.secretbox.overheadLength;\n\nnacl.sign = function(msg, secretKey) {\n  checkArrayTypes(msg, secretKey);\n  if (secretKey.length !== crypto_sign_SECRETKEYBYTES)\n    throw new Error('bad secret key size');\n  var signedMsg = new Uint8Array(crypto_sign_BYTES+msg.length);\n  crypto_sign(signedMsg, msg, msg.length, secretKey);\n  return signedMsg;\n};\n\nnacl.sign.open = function(signedMsg, publicKey) {\n  checkArrayTypes(signedMsg, publicKey);\n  if (publicKey.length !== crypto_sign_PUBLICKEYBYTES)\n    throw new Error('bad public key size');\n  var tmp = new Uint8Array(signedMsg.length);\n  var mlen = crypto_sign_open(tmp, signedMsg, signedMsg.length, publicKey);\n  if (mlen < 0) return null;\n  var m = new Uint8Array(mlen);\n  for (var i = 0; i < m.length; i++) m[i] = tmp[i];\n  return m;\n};\n\nnacl.sign.detached = function(msg, secretKey) {\n  var signedMsg = nacl.sign(msg, secretKey);\n  var sig = new Uint8Array(crypto_sign_BYTES);\n  for (var i = 0; i < sig.length; i++) sig[i] = signedMsg[i];\n  return sig;\n};\n\nnacl.sign.detached.verify = function(msg, sig, publicKey) {\n  checkArrayTypes(msg, sig, publicKey);\n  if (sig.length !== crypto_sign_BYTES)\n    throw new Error('bad signature size');\n  if (publicKey.length !== crypto_sign_PUBLICKEYBYTES)\n    throw new Error('bad public key size');\n  var sm = new Uint8Array(crypto_sign_BYTES + msg.length);\n  var m = new Uint8Array(crypto_sign_BYTES + msg.length);\n  var i;\n  for (i = 0; i < crypto_sign_BYTES; i++) sm[i] = sig[i];\n  for (i = 0; i < msg.length; i++) sm[i+crypto_sign_BYTES] = msg[i];\n  return (crypto_sign_open(m, sm, sm.length, publicKey) >= 0);\n};\n\nnacl.sign.keyPair = function() {\n  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\n  var sk = new Uint8Array(crypto_sign_SECRETKEYBYTES);\n  crypto_sign_keypair(pk, sk);\n  return {publicKey: pk, secretKey: sk};\n};\n\nnacl.sign.keyPair.fromSecretKey = function(secretKey) {\n  checkArrayTypes(secretKey);\n  if (secretKey.length !== crypto_sign_SECRETKEYBYTES)\n    throw new Error('bad secret key size');\n  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\n  for (var i = 0; i < pk.length; i++) pk[i] = secretKey[32+i];\n  return {publicKey: pk, secretKey: new Uint8Array(secretKey)};\n};\n\nnacl.sign.keyPair.fromSeed = function(seed) {\n  checkArrayTypes(seed);\n  if (seed.length !== crypto_sign_SEEDBYTES)\n    throw new Error('bad seed size');\n  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\n  var sk = new Uint8Array(crypto_sign_SECRETKEYBYTES);\n  for (var i = 0; i < 32; i++) sk[i] = seed[i];\n  crypto_sign_keypair(pk, sk, true);\n  return {publicKey: pk, secretKey: sk};\n};\n\nnacl.sign.publicKeyLength = crypto_sign_PUBLICKEYBYTES;\nnacl.sign.secretKeyLength = crypto_sign_SECRETKEYBYTES;\nnacl.sign.seedLength = crypto_sign_SEEDBYTES;\nnacl.sign.signatureLength = crypto_sign_BYTES;\n\nnacl.hash = function(msg) {\n  checkArrayTypes(msg);\n  var h = new Uint8Array(crypto_hash_BYTES);\n  crypto_hash(h, msg, msg.length);\n  return h;\n};\n\nnacl.hash.hashLength = crypto_hash_BYTES;\n\nnacl.verify = function(x, y) {\n  checkArrayTypes(x, y);\n  // Zero length arguments are considered not equal.\n  if (x.length === 0 || y.length === 0) return false;\n  if (x.length !== y.length) return false;\n  return (vn(x, 0, y, 0, x.length) === 0) ? true : false;\n};\n\nnacl.setPRNG = function(fn) {\n  randombytes = fn;\n};\n\n(function() {\n  // Initialize PRNG if environment provides CSPRNG.\n  // If not, methods calling randombytes will throw.\n  var crypto = typeof self !== 'undefined' ? (self.crypto || self.msCrypto) : null;\n  if (crypto && crypto.getRandomValues) {\n    // Browsers.\n    var QUOTA = 65536;\n    nacl.setPRNG(function(x, n) {\n      var i, v = new Uint8Array(n);\n      for (i = 0; i < n; i += QUOTA) {\n        crypto.getRandomValues(v.subarray(i, i + Math.min(n - i, QUOTA)));\n      }\n      for (i = 0; i < n; i++) x[i] = v[i];\n      cleanup(v);\n    });\n  } else if (true) {\n    // Node.js.\n    crypto = __webpack_require__(/*! crypto */ \"?94fa\");\n    if (crypto && crypto.randomBytes) {\n      nacl.setPRNG(function(x, n) {\n        var i, v = crypto.randomBytes(n);\n        for (i = 0; i < n; i++) x[i] = v[i];\n        cleanup(v);\n      });\n    }\n  }\n})();\n\n})( true && module.exports ? module.exports : (self.nacl = self.nacl || {}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@metamask/eth-sig-util/node_modules/tweetnacl/nacl-fast.js\n");

/***/ }),

/***/ "./node_modules/@web3auth/ethereum-provider/dist/ethereumProvider.esm.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@web3auth/ethereum-provider/dist/ethereumProvider.esm.js ***!
  \*******************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"EthereumPrivateKeyProvider\": function() { return /* binding */ EthereumPrivateKeyProvider; },\n/* harmony export */   \"TransactionFormatter\": function() { return /* binding */ TransactionFormatter; },\n/* harmony export */   \"WalletConnectProvider\": function() { return /* binding */ WalletConnectProvider; },\n/* harmony export */   \"getProviderHandlers\": function() { return /* binding */ getProviderHandlers; }\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/defineProperty */ \"./node_modules/@babel/runtime/helpers/esm/defineProperty.js\");\n/* harmony import */ var _toruslabs_base_controllers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @toruslabs/base-controllers */ \"./node_modules/@toruslabs/base-controllers/dist/baseControllers.esm.js\");\n/* harmony import */ var _toruslabs_openlogin_jrpc__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @toruslabs/openlogin-jrpc */ \"./node_modules/@toruslabs/openlogin-jrpc/dist/openloginJrpc.esm.js\");\n/* harmony import */ var _web3auth_base__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @web3auth/base */ \"./node_modules/@web3auth/base/dist/base.esm.js\");\n/* harmony import */ var _web3auth_base_provider__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @web3auth/base-provider */ \"./node_modules/@web3auth/base-provider/dist/baseProvider.esm.js\");\n/* harmony import */ var eth_rpc_errors__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! eth-rpc-errors */ \"./node_modules/eth-rpc-errors/dist/index.js\");\n/* harmony import */ var _ethereumjs_tx__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @ethereumjs/tx */ \"./node_modules/@web3auth/ethereum-provider/node_modules/@ethereumjs/tx/dist.browser/index.js\");\n/* harmony import */ var _ethereumjs_tx__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_ethereumjs_tx__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var _metamask_eth_sig_util__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @metamask/eth-sig-util */ \"./node_modules/@metamask/eth-sig-util/dist/index.js\");\n/* harmony import */ var _metamask_eth_sig_util__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(_metamask_eth_sig_util__WEBPACK_IMPORTED_MODULE_7__);\n/* harmony import */ var ethereumjs_util__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ethereumjs-util */ \"./node_modules/@web3auth/ethereum-provider/node_modules/ethereumjs-util/dist.browser/index.js\");\n/* harmony import */ var ethereumjs_util__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(ethereumjs_util__WEBPACK_IMPORTED_MODULE_8__);\n/* harmony import */ var _toruslabs_http_helpers__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @toruslabs/http-helpers */ \"./node_modules/@toruslabs/http-helpers/dist/httpHelpers.esm.js\");\n/* harmony import */ var assert__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! assert */ \"./node_modules/assert/build/assert.js\");\n/* harmony import */ var assert__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(assert__WEBPACK_IMPORTED_MODULE_10__);\n/* harmony import */ var jsonschema__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! jsonschema */ \"./node_modules/jsonschema/lib/index.js\");\n/* harmony import */ var bignumber_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! bignumber.js */ \"./node_modules/bignumber.js/bignumber.mjs\");\n/* harmony import */ var _ethereumjs_common__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @ethereumjs/common */ \"./node_modules/@ethereumjs/common/dist.browser/index.js\");\n/* harmony import */ var _ethereumjs_common__WEBPACK_IMPORTED_MODULE_13___default = /*#__PURE__*/__webpack_require__.n(_ethereumjs_common__WEBPACK_IMPORTED_MODULE_13__);\n/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"./node_modules/buffer/index.js\")[\"Buffer\"];\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction ownKeys$5(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread$5(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys$5(Object(source), !0).forEach(function (key) { (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$5(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction resemblesAddress(str) {\n  // hex prefix 2 + 20 bytes\n  return str.length === 2 + 20 * 2;\n}\n\nfunction createWalletMiddleware(_ref) {\n  let {\n    getAccounts,\n    getPrivateKey,\n    processDecryptMessage,\n    processEncryptionPublicKey,\n    processEthSignMessage,\n    processPersonalMessage,\n    processTransaction,\n    processSignTransaction,\n    processTypedMessage,\n    processTypedMessageV3,\n    processTypedMessageV4\n  } = _ref;\n\n  if (!getAccounts) {\n    throw new Error(\"opts.getAccounts is required\");\n  } //\n  // utility\n  //\n\n  /**\n   * Validates the keyholder address, and returns a normalized (i.e. lowercase)\n   * copy of it.\n   *\n   * an error\n   */\n\n\n  async function validateAndNormalizeKeyholder(address, req) {\n    if (typeof address === \"string\" && address.length > 0) {\n      // ensure address is included in provided accounts\n      const accounts = await getAccounts(req);\n      const normalizedAccounts = accounts.map(_address => _address.toLowerCase());\n      const normalizedAddress = address.toLowerCase();\n\n      if (normalizedAccounts.includes(normalizedAddress)) {\n        return normalizedAddress;\n      }\n    }\n\n    throw eth_rpc_errors__WEBPACK_IMPORTED_MODULE_5__.ethErrors.rpc.invalidParams({\n      message: \"Invalid parameters: must provide an Ethereum address.\"\n    });\n  } //\n  // account lookups\n  //\n\n\n  async function lookupAccounts(req, res) {\n    res.result = await getAccounts(req);\n  }\n\n  async function lookupDefaultAccount(req, res) {\n    const accounts = await getAccounts(req);\n    res.result = accounts[0] || null;\n  } //\n  // transaction signatures\n  //\n\n\n  async function sendTransaction(req, res) {\n    if (!processTransaction) {\n      throw eth_rpc_errors__WEBPACK_IMPORTED_MODULE_5__.ethErrors.rpc.methodNotSupported();\n    }\n\n    const txParams = req.params[0] || {\n      from: \"\"\n    };\n    txParams.from = await validateAndNormalizeKeyholder(txParams.from, req);\n    res.result = await processTransaction(txParams, req);\n  }\n\n  async function signTransaction(req, res) {\n    if (!processSignTransaction) {\n      throw eth_rpc_errors__WEBPACK_IMPORTED_MODULE_5__.ethErrors.rpc.methodNotSupported();\n    }\n\n    const txParams = req.params[0] || {\n      from: \"\"\n    };\n    txParams.from = await validateAndNormalizeKeyholder(txParams.from, req);\n    res.result = await processSignTransaction(txParams, req);\n  } //\n  // message signatures\n  //\n\n\n  async function ethSign(req, res) {\n    if (!processEthSignMessage) {\n      throw eth_rpc_errors__WEBPACK_IMPORTED_MODULE_5__.ethErrors.rpc.methodNotSupported();\n    }\n\n    const address = await validateAndNormalizeKeyholder(req.params[0], req);\n    const message = req.params[1];\n    const extraParams = req.params[2] || {};\n\n    const msgParams = _objectSpread$5(_objectSpread$5({}, extraParams), {}, {\n      from: address,\n      data: message\n    });\n\n    res.result = await processEthSignMessage(msgParams, req);\n  }\n\n  async function signTypedData(req, res) {\n    if (!processTypedMessage) {\n      throw eth_rpc_errors__WEBPACK_IMPORTED_MODULE_5__.ethErrors.rpc.methodNotSupported();\n    }\n\n    const message = req.params[0];\n    const address = await validateAndNormalizeKeyholder(req.params[1], req);\n    const version = \"V1\";\n    const extraParams = req.params[2] || {};\n\n    const msgParams = _objectSpread$5(_objectSpread$5({}, extraParams), {}, {\n      from: address,\n      data: message\n    });\n\n    res.result = await processTypedMessage(msgParams, req, version);\n  }\n\n  async function signTypedDataV3(req, res) {\n    if (!processTypedMessageV3) {\n      throw eth_rpc_errors__WEBPACK_IMPORTED_MODULE_5__.ethErrors.rpc.methodNotSupported();\n    }\n\n    const address = await validateAndNormalizeKeyholder(req.params[0], req);\n    const message = req.params[1];\n    const version = \"V3\";\n    const msgParams = {\n      data: message,\n      from: address,\n      version\n    };\n    res.result = await processTypedMessageV3(msgParams, req, version);\n  }\n\n  async function signTypedDataV4(req, res) {\n    if (!processTypedMessageV4) {\n      throw eth_rpc_errors__WEBPACK_IMPORTED_MODULE_5__.ethErrors.rpc.methodNotSupported();\n    }\n\n    const address = await validateAndNormalizeKeyholder(req.params[0], req);\n    const message = req.params[1];\n    const version = \"V4\";\n    const msgParams = {\n      data: message,\n      from: address,\n      version\n    };\n    res.result = await processTypedMessageV4(msgParams, req, version);\n  }\n\n  async function personalSign(req, res) {\n    if (!processPersonalMessage) {\n      throw eth_rpc_errors__WEBPACK_IMPORTED_MODULE_5__.ethErrors.rpc.methodNotSupported();\n    } // process normally\n\n\n    const firstParam = req.params[0];\n    const secondParam = req.params[1]; // non-standard \"extraParams\" to be appended to our \"msgParams\" obj\n\n    const extraParams = req.params[2] || {}; // We initially incorrectly ordered these parameters.\n    // To gracefully respect users who adopted this API early,\n    // we are currently gracefully recovering from the wrong param order\n    // when it is clearly identifiable.\n    //\n    // That means when the first param is definitely an address,\n    // and the second param is definitely not, but is hex.\n\n    let address, message;\n\n    if (resemblesAddress(firstParam) && !resemblesAddress(secondParam)) {\n      let warning = \"The eth_personalSign method requires params ordered \";\n      warning += \"[message, address]. This was previously handled incorrectly, \";\n      warning += \"and has been corrected automatically. \";\n      warning += \"Please switch this param order for smooth behavior in the future.\";\n      res.warning = warning;\n      address = firstParam;\n      message = secondParam;\n    } else {\n      message = firstParam;\n      address = secondParam;\n    }\n\n    address = await validateAndNormalizeKeyholder(address, req);\n\n    const msgParams = _objectSpread$5(_objectSpread$5({}, extraParams), {}, {\n      from: address,\n      data: message\n    }); // eslint-disable-next-line require-atomic-updates\n\n\n    res.result = await processPersonalMessage(msgParams, req);\n  }\n\n  async function encryptionPublicKey(req, res) {\n    if (!processEncryptionPublicKey) {\n      throw eth_rpc_errors__WEBPACK_IMPORTED_MODULE_5__.ethErrors.rpc.methodNotSupported();\n    }\n\n    const address = await validateAndNormalizeKeyholder(req.params[0], req);\n    res.result = await processEncryptionPublicKey(address, req);\n  }\n\n  async function decryptMessage(req, res) {\n    if (!processDecryptMessage) {\n      throw eth_rpc_errors__WEBPACK_IMPORTED_MODULE_5__.ethErrors.rpc.methodNotSupported();\n    }\n\n    const ciphertext = req.params[0];\n    const address = await validateAndNormalizeKeyholder(req.params[1], req);\n    const extraParams = req.params[2] || {};\n\n    const msgParams = _objectSpread$5(_objectSpread$5({}, extraParams), {}, {\n      from: address,\n      data: ciphertext\n    });\n\n    res.result = processDecryptMessage(msgParams, req);\n  }\n\n  async function fetchPrivateKey(req, res) {\n    if (!getPrivateKey) {\n      throw eth_rpc_errors__WEBPACK_IMPORTED_MODULE_5__.ethErrors.rpc.methodNotSupported();\n    }\n\n    res.result = getPrivateKey(req);\n  }\n\n  return (0,_toruslabs_openlogin_jrpc__WEBPACK_IMPORTED_MODULE_2__.createScaffoldMiddleware)({\n    // account lookups\n    eth_accounts: (0,_toruslabs_openlogin_jrpc__WEBPACK_IMPORTED_MODULE_2__.createAsyncMiddleware)(lookupAccounts),\n    eth_private_key: (0,_toruslabs_openlogin_jrpc__WEBPACK_IMPORTED_MODULE_2__.createAsyncMiddleware)(fetchPrivateKey),\n    eth_coinbase: (0,_toruslabs_openlogin_jrpc__WEBPACK_IMPORTED_MODULE_2__.createAsyncMiddleware)(lookupDefaultAccount),\n    // tx signatures\n    eth_sendTransaction: (0,_toruslabs_openlogin_jrpc__WEBPACK_IMPORTED_MODULE_2__.createAsyncMiddleware)(sendTransaction),\n    eth_signTransaction: (0,_toruslabs_openlogin_jrpc__WEBPACK_IMPORTED_MODULE_2__.createAsyncMiddleware)(signTransaction),\n    // message signatures\n    eth_sign: (0,_toruslabs_openlogin_jrpc__WEBPACK_IMPORTED_MODULE_2__.createAsyncMiddleware)(ethSign),\n    eth_signTypedData: (0,_toruslabs_openlogin_jrpc__WEBPACK_IMPORTED_MODULE_2__.createAsyncMiddleware)(signTypedData),\n    eth_signTypedData_v3: (0,_toruslabs_openlogin_jrpc__WEBPACK_IMPORTED_MODULE_2__.createAsyncMiddleware)(signTypedDataV3),\n    eth_signTypedData_v4: (0,_toruslabs_openlogin_jrpc__WEBPACK_IMPORTED_MODULE_2__.createAsyncMiddleware)(signTypedDataV4),\n    personal_sign: (0,_toruslabs_openlogin_jrpc__WEBPACK_IMPORTED_MODULE_2__.createAsyncMiddleware)(personalSign),\n    eth_getEncryptionPublicKey: (0,_toruslabs_openlogin_jrpc__WEBPACK_IMPORTED_MODULE_2__.createAsyncMiddleware)(encryptionPublicKey),\n    eth_decrypt: (0,_toruslabs_openlogin_jrpc__WEBPACK_IMPORTED_MODULE_2__.createAsyncMiddleware)(decryptMessage)\n  });\n}\n\nfunction createEthMiddleware(providerHandlers) {\n  const {\n    getAccounts,\n    getPrivateKey,\n    processTransaction,\n    processSignTransaction,\n    processEthSignMessage,\n    processTypedMessage,\n    processTypedMessageV3,\n    processTypedMessageV4,\n    processPersonalMessage,\n    processEncryptionPublicKey,\n    processDecryptMessage\n  } = providerHandlers;\n  const ethMiddleware = (0,_toruslabs_openlogin_jrpc__WEBPACK_IMPORTED_MODULE_2__.mergeMiddleware)([(0,_toruslabs_openlogin_jrpc__WEBPACK_IMPORTED_MODULE_2__.createScaffoldMiddleware)({\n    eth_syncing: false\n  }), createWalletMiddleware({\n    getAccounts,\n    getPrivateKey,\n    processTransaction,\n    processEthSignMessage,\n    processSignTransaction,\n    processTypedMessage,\n    processTypedMessageV3,\n    processTypedMessageV4,\n    processPersonalMessage,\n    processEncryptionPublicKey,\n    processDecryptMessage\n  })]);\n  return ethMiddleware;\n}\nfunction createChainSwitchMiddleware(_ref) {\n  let {\n    addChain,\n    switchChain\n  } = _ref;\n\n  async function addNewChain(req, res) {\n    var _req$params;\n\n    const chainParams = (_req$params = req.params) !== null && _req$params !== void 0 && _req$params.length ? req.params[0] : undefined;\n    if (!chainParams) throw eth_rpc_errors__WEBPACK_IMPORTED_MODULE_5__.ethErrors.rpc.invalidParams(\"Missing chain params\");\n    if (!chainParams.chainId) throw eth_rpc_errors__WEBPACK_IMPORTED_MODULE_5__.ethErrors.rpc.invalidParams(\"Missing chainId in chainParams\");\n    if (!chainParams.rpcUrls || chainParams.rpcUrls.length === 0) throw eth_rpc_errors__WEBPACK_IMPORTED_MODULE_5__.ethErrors.rpc.invalidParams(\"Missing rpcUrls in chainParams\");\n    if (!chainParams.nativeCurrency) throw eth_rpc_errors__WEBPACK_IMPORTED_MODULE_5__.ethErrors.rpc.invalidParams(\"Missing nativeCurrency in chainParams\");\n    res.result = await addChain(chainParams);\n  }\n\n  async function updateChain(req, res) {\n    var _req$params2;\n\n    const chainParams = (_req$params2 = req.params) !== null && _req$params2 !== void 0 && _req$params2.length ? req.params[0] : undefined;\n    if (!chainParams) throw eth_rpc_errors__WEBPACK_IMPORTED_MODULE_5__.ethErrors.rpc.invalidParams(\"Missing chainId\");\n    res.result = await switchChain(chainParams);\n  }\n\n  return (0,_toruslabs_openlogin_jrpc__WEBPACK_IMPORTED_MODULE_2__.createScaffoldMiddleware)({\n    wallet_addEthereumChain: (0,_toruslabs_openlogin_jrpc__WEBPACK_IMPORTED_MODULE_2__.createAsyncMiddleware)(addNewChain),\n    wallet_switchEthereumChain: (0,_toruslabs_openlogin_jrpc__WEBPACK_IMPORTED_MODULE_2__.createAsyncMiddleware)(updateChain)\n  });\n} // #region account middlewares\n\nfunction createAccountMiddleware(_ref2) {\n  let {\n    updatePrivatekey\n  } = _ref2;\n\n  async function updateAccount(req, res) {\n    var _req$params3;\n\n    const accountParams = (_req$params3 = req.params) !== null && _req$params3 !== void 0 && _req$params3.length ? req.params[0] : undefined;\n    if (!(accountParams !== null && accountParams !== void 0 && accountParams.privateKey)) throw eth_rpc_errors__WEBPACK_IMPORTED_MODULE_5__.ethErrors.rpc.invalidParams(\"Missing privateKey\");\n    res.result = await updatePrivatekey(accountParams);\n  }\n\n  return (0,_toruslabs_openlogin_jrpc__WEBPACK_IMPORTED_MODULE_2__.createScaffoldMiddleware)({\n    wallet_updateAccount: (0,_toruslabs_openlogin_jrpc__WEBPACK_IMPORTED_MODULE_2__.createAsyncMiddleware)(updateAccount)\n  });\n} // #endregion account middlewares\n\nfunction createChainIdMiddleware(chainId) {\n  return (req, res, next, end) => {\n    if (req.method === \"eth_chainId\") {\n      res.result = chainId;\n      return end();\n    }\n\n    return next();\n  };\n}\nfunction createProviderConfigMiddleware(providerConfig) {\n  return (req, res, next, end) => {\n    if (req.method === \"eth_provider_config\") {\n      res.result = providerConfig;\n      return end();\n    }\n\n    return next();\n  };\n}\nfunction createJsonRpcClient(providerConfig) {\n  const {\n    chainId,\n    rpcTarget\n  } = providerConfig;\n  const fetchMiddleware = (0,_toruslabs_base_controllers__WEBPACK_IMPORTED_MODULE_1__.createFetchMiddleware)({\n    rpcTarget\n  });\n  const networkMiddleware = (0,_toruslabs_openlogin_jrpc__WEBPACK_IMPORTED_MODULE_2__.mergeMiddleware)([createChainIdMiddleware(chainId), createProviderConfigMiddleware(providerConfig), fetchMiddleware]);\n  return {\n    networkMiddleware,\n    fetchMiddleware\n  };\n}\n\nfunction getProviderHandlers$1(_ref) {\n  let {\n    connector\n  } = _ref;\n  return {\n    getPrivateKey: async () => {\n      throw eth_rpc_errors__WEBPACK_IMPORTED_MODULE_5__.ethErrors.rpc.methodNotSupported();\n    },\n    getAccounts: async _ => {\n      const {\n        accounts\n      } = connector;\n\n      if (accounts && accounts.length) {\n        return accounts;\n      }\n\n      throw new Error(\"Failed to get accounts\");\n    },\n    processTransaction: async (txParams, _) => {\n      const result = await connector.sendTransaction(txParams);\n      return result;\n    },\n    processSignTransaction: async (txParams, _) => {\n      const result = await connector.signTransaction(txParams);\n      return result;\n    },\n    processEthSignMessage: async (msgParams, _) => {\n      const result = await connector.signMessage([msgParams.from, msgParams.data]);\n      return result;\n    },\n    processPersonalMessage: async (msgParams, _) => {\n      const result = await connector.signPersonalMessage([msgParams.data, msgParams.from]);\n      return result;\n    },\n    processTypedMessage: async (msgParams, _) => {\n      const result = await connector.signTypedData([msgParams.from, msgParams.data]);\n      return result;\n    },\n    processTypedMessageV3: async msgParams => {\n      const result = await connector.signTypedData([msgParams.from, msgParams.data]);\n      return result;\n    },\n    processTypedMessageV4: async msgParams => {\n      const result = await connector.signTypedData([msgParams.from, msgParams.data]);\n      return result;\n    },\n    processEncryptionPublicKey: async _ => {\n      throw eth_rpc_errors__WEBPACK_IMPORTED_MODULE_5__.ethErrors.rpc.methodNotSupported();\n    },\n    processDecryptMessage: _ => {\n      throw eth_rpc_errors__WEBPACK_IMPORTED_MODULE_5__.ethErrors.rpc.methodNotSupported();\n    }\n  };\n}\n\nfunction ownKeys$4(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread$4(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys$4(Object(source), !0).forEach(function (key) { (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$4(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nclass WalletConnectProvider extends _web3auth_base_provider__WEBPACK_IMPORTED_MODULE_4__.BaseProvider {\n  constructor(_ref) {\n    let {\n      config,\n      state,\n      connector\n    } = _ref;\n    super({\n      config: {\n        chainConfig: _objectSpread$4(_objectSpread$4({}, config.chainConfig), {}, {\n          chainNamespace: _web3auth_base__WEBPACK_IMPORTED_MODULE_3__.CHAIN_NAMESPACES.EIP155\n        }),\n        skipLookupNetwork: !!config.skipLookupNetwork\n      },\n      state: _objectSpread$4(_objectSpread$4({}, state || {}), {}, {\n        chainId: \"loading\",\n        accounts: []\n      })\n    });\n\n    (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"connector\", null);\n\n    this.connector = connector || null;\n  }\n\n  async enable() {\n    if (!this.connector) throw eth_rpc_errors__WEBPACK_IMPORTED_MODULE_5__.ethErrors.provider.custom({\n      message: \"Connector is not initialized, pass wallet connect connector in constructor\",\n      code: 4902\n    });\n    await this.setupProvider(this.connector);\n    return this._providerEngineProxy.request({\n      method: \"eth_accounts\"\n    });\n  }\n\n  async setupProvider(connector) {\n    this.onConnectorStateUpdate(connector);\n    await this.setupEngine(connector);\n  }\n\n  async switchChain(_ref2) {\n    let {\n      chainId,\n      addChain = true,\n      lookup = true\n    } = _ref2;\n    if (!this.connector) throw eth_rpc_errors__WEBPACK_IMPORTED_MODULE_5__.ethErrors.provider.custom({\n      message: \"Connector is not initialized, pass wallet connect connector in constructor\",\n      code: 4902\n    });\n    const currentChainConfig = this.getChainConfig(chainId);\n    this.update({\n      chainId: \"loading\"\n    });\n    const {\n      rpcTarget,\n      displayName\n    } = currentChainConfig;\n\n    if (addChain) {\n      try {\n        await this.connector.sendCustomRequest({\n          method: \"wallet_addEthereumChain\",\n          params: [{\n            chainId,\n            chainName: displayName,\n            rpcUrls: [rpcTarget]\n          }]\n        });\n      } catch (error) {\n        _web3auth_base__WEBPACK_IMPORTED_MODULE_3__.log.error(error);\n      }\n    }\n\n    try {\n      await this.connector.sendCustomRequest({\n        method: \"wallet_switchEthereumChain\",\n        params: [{\n          chainId\n        }]\n      });\n    } catch (error) {\n      _web3auth_base__WEBPACK_IMPORTED_MODULE_3__.log.error(error); // ignore this error because metamask & others return provider.result as null\n      // wallet connect thinks this is wrong\n\n      if (error.message !== \"JSON RPC response format is invalid\") {\n        throw error;\n      }\n    }\n\n    this.configure({\n      chainConfig: currentChainConfig\n    });\n    if (lookup) await this.lookupNetwork(this.connector);\n  }\n\n  async addChain(chainConfig) {\n    if (!this.connector) throw _web3auth_base__WEBPACK_IMPORTED_MODULE_3__.WalletInitializationError.notReady(\"Wallet adapter is not ready yet\");\n    const {\n      rpcTarget,\n      displayName\n    } = chainConfig;\n\n    try {\n      await this.connector.sendCustomRequest({\n        method: \"wallet_addEthereumChain\",\n        params: [{\n          chainId: chainConfig.chainId,\n          chainName: displayName,\n          rpcUrls: [rpcTarget]\n        }]\n      });\n      super.addChain(chainConfig);\n    } catch (error) {\n      _web3auth_base__WEBPACK_IMPORTED_MODULE_3__.log.error(error);\n      throw error;\n    }\n  }\n\n  async lookupNetwork(connector) {\n    if (!connector.connected) throw _web3auth_base__WEBPACK_IMPORTED_MODULE_3__.WalletLoginError.notConnectedError(\"Wallet connect connector is not connected\");\n    if (!this.provider) throw eth_rpc_errors__WEBPACK_IMPORTED_MODULE_5__.ethErrors.provider.custom({\n      message: \"Provider is not initialized\",\n      code: 4902\n    });\n    const {\n      chainId\n    } = this.config.chainConfig;\n    const connectedHexChainId = (0,_web3auth_base__WEBPACK_IMPORTED_MODULE_3__.isHexStrict)(connector.chainId.toString()) ? connector.chainId : \"0x\".concat(connector.chainId.toString(16));\n    if (chainId !== connectedHexChainId) throw _web3auth_base__WEBPACK_IMPORTED_MODULE_3__.WalletInitializationError.rpcConnectionError(\"Invalid network, net_version is: \".concat(connectedHexChainId, \", expected: \").concat(chainId));\n    this.provider.emit(\"connect\", {\n      chainId\n    });\n    this.provider.emit(\"chainChanged\", this.state.chainId);\n    return connectedHexChainId;\n  }\n\n  async setupEngine(connector) {\n    const providerHandlers = getProviderHandlers$1({\n      connector\n    });\n    this.update({\n      accounts: connector.accounts || []\n    });\n    const ethMiddleware = createEthMiddleware(providerHandlers);\n    const engine = new _toruslabs_openlogin_jrpc__WEBPACK_IMPORTED_MODULE_2__.JRPCEngine();\n    const {\n      networkMiddleware\n    } = createJsonRpcClient(this.config.chainConfig);\n    engine.push(ethMiddleware);\n    engine.push(networkMiddleware);\n    const provider = (0,_toruslabs_base_controllers__WEBPACK_IMPORTED_MODULE_1__.providerFromEngine)(engine);\n    this.updateProviderEngineProxy(provider);\n    if (!this.config.skipLookupNetwork) await this.lookupNetwork(connector);\n  }\n\n  async onConnectorStateUpdate(connector) {\n    connector.on(\"session_update\", async (error, payload) => {\n      if (!this.provider) throw _web3auth_base__WEBPACK_IMPORTED_MODULE_3__.WalletLoginError.notConnectedError(\"Wallet connect connector is not connected\");\n\n      if (error) {\n        this.provider.emit(\"error\", error);\n        return;\n      }\n\n      const {\n        accounts,\n        chainId: connectedChainId,\n        rpcUrl\n      } = payload.params[0]; // Check if accounts changed and trigger event\n\n      if (accounts !== null && accounts !== void 0 && accounts.length && this.state.accounts[0] !== accounts[0]) {\n        this.update({\n          accounts\n        }); // await this.setupEngine(connector);\n\n        this.provider.emit(\"accountsChanged\", accounts);\n      }\n\n      const connectedHexChainId = \"0x\".concat(connectedChainId.toString(16)); // Check if chainId changed and trigger event\n\n      if (connectedChainId && this.state.chainId !== connectedHexChainId) {\n        const maybeConfig = (0,_web3auth_base__WEBPACK_IMPORTED_MODULE_3__.getChainConfig)(_web3auth_base__WEBPACK_IMPORTED_MODULE_3__.CHAIN_NAMESPACES.EIP155, connectedChainId) || {}; // Handle rpcUrl update\n\n        this.configure({\n          chainConfig: _objectSpread$4(_objectSpread$4({}, maybeConfig), {}, {\n            chainId: connectedHexChainId,\n            rpcTarget: rpcUrl,\n            chainNamespace: _web3auth_base__WEBPACK_IMPORTED_MODULE_3__.CHAIN_NAMESPACES.EIP155\n          })\n        });\n        await this.setupEngine(connector);\n      }\n    });\n  }\n\n}\n\n(0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(WalletConnectProvider, \"getProviderInstance\", async params => {\n  const providerFactory = new WalletConnectProvider({\n    config: {\n      chainConfig: params.chainConfig,\n      skipLookupNetwork: params.skipLookupNetwork\n    }\n  });\n  await providerFactory.setupProvider(params.connector);\n  return providerFactory;\n});\n\nconst BIG_NUMBER_WEI_MULTIPLIER = new bignumber_js__WEBPACK_IMPORTED_MODULE_12__[\"default\"](\"1e18\");\nconst BIG_NUMBER_GWEI_MULTIPLIER = new bignumber_js__WEBPACK_IMPORTED_MODULE_12__[\"default\"](\"1e9\");\nconst BIG_NUMBER_ETH_MULTIPLIER = new bignumber_js__WEBPACK_IMPORTED_MODULE_12__[\"default\"](\"1\"); // Setter Maps\n\nconst toBigNumber = {\n  hex: n => typeof n === \"string\" ? new bignumber_js__WEBPACK_IMPORTED_MODULE_12__[\"default\"]((0,ethereumjs_util__WEBPACK_IMPORTED_MODULE_8__.stripHexPrefix)(n), 16) : new bignumber_js__WEBPACK_IMPORTED_MODULE_12__[\"default\"](n, 16),\n  dec: n => new bignumber_js__WEBPACK_IMPORTED_MODULE_12__[\"default\"](n, 10)\n};\nconst toNormalizedDenomination = {\n  WEI: bigNumber => bigNumber.div(BIG_NUMBER_WEI_MULTIPLIER),\n  GWEI: bigNumber => bigNumber.div(BIG_NUMBER_GWEI_MULTIPLIER),\n  ETH: bigNumber => bigNumber.div(BIG_NUMBER_ETH_MULTIPLIER)\n};\nconst toSpecifiedDenomination = {\n  WEI: bigNumber => bigNumber.times(BIG_NUMBER_WEI_MULTIPLIER).dp(0, bignumber_js__WEBPACK_IMPORTED_MODULE_12__[\"default\"].ROUND_HALF_UP),\n  GWEI: bigNumber => bigNumber.times(BIG_NUMBER_GWEI_MULTIPLIER).dp(9, bignumber_js__WEBPACK_IMPORTED_MODULE_12__[\"default\"].ROUND_HALF_UP),\n  ETH: bigNumber => bigNumber.times(BIG_NUMBER_ETH_MULTIPLIER).dp(9, bignumber_js__WEBPACK_IMPORTED_MODULE_12__[\"default\"].ROUND_HALF_UP)\n};\nconst baseChange = {\n  hex: n => n.toString(16),\n  dec: n => new bignumber_js__WEBPACK_IMPORTED_MODULE_12__[\"default\"](n).toString(10)\n};\n\nconst converter = params => {\n  const {\n    value,\n    fromNumericBase,\n    fromDenomination,\n    toNumericBase,\n    toDenomination,\n    numberOfDecimals\n  } = params;\n  let convertedValue = toBigNumber[fromNumericBase](value);\n\n  if (fromDenomination) {\n    convertedValue = toNormalizedDenomination[fromDenomination](convertedValue);\n  }\n\n  if (toDenomination) {\n    convertedValue = toSpecifiedDenomination[toDenomination](convertedValue);\n  }\n\n  if (numberOfDecimals) {\n    convertedValue = convertedValue.dp(numberOfDecimals, bignumber_js__WEBPACK_IMPORTED_MODULE_12__[\"default\"].ROUND_HALF_DOWN);\n  }\n\n  if (toNumericBase) {\n    convertedValue = baseChange[toNumericBase](convertedValue);\n  }\n\n  return convertedValue;\n};\n\nconst conversionUtil = (value, _ref) => {\n  let {\n    fromNumericBase = \"hex\",\n    toNumericBase,\n    fromDenomination,\n    toDenomination,\n    numberOfDecimals\n  } = _ref;\n  return converter({\n    fromNumericBase,\n    toNumericBase,\n    fromDenomination,\n    toDenomination,\n    numberOfDecimals,\n    value: value || \"0\"\n  });\n};\n\nfunction decGWEIToHexWEI(decGWEI) {\n  return conversionUtil(decGWEI, {\n    fromNumericBase: \"dec\",\n    toNumericBase: \"hex\",\n    fromDenomination: \"GWEI\",\n    toDenomination: \"WEI\"\n  });\n}\n\nfunction hexWEIToDecGWEI(decGWEI) {\n  return conversionUtil(decGWEI, {\n    fromNumericBase: \"hex\",\n    toNumericBase: \"dec\",\n    fromDenomination: \"WEI\",\n    toDenomination: \"GWEI\"\n  });\n}\n\nfunction ownKeys$3(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread$3(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys$3(Object(source), !0).forEach(function (key) { (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$3(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction normalizeGWEIDecimalNumbers(n) {\n  const numberAsWEIHex = decGWEIToHexWEI(n);\n  const numberAsGWEI = hexWEIToDecGWEI(numberAsWEIHex);\n  return numberAsGWEI;\n}\nasync function fetchEip1159GasEstimates(url) {\n  const estimates = await (0,_toruslabs_http_helpers__WEBPACK_IMPORTED_MODULE_9__.get)(url);\n\n  const normalizedEstimates = _objectSpread$3(_objectSpread$3({}, estimates), {}, {\n    estimatedBaseFee: normalizeGWEIDecimalNumbers(estimates.estimatedBaseFee),\n    low: _objectSpread$3(_objectSpread$3({}, estimates.low), {}, {\n      suggestedMaxPriorityFeePerGas: normalizeGWEIDecimalNumbers(estimates.low.suggestedMaxPriorityFeePerGas),\n      suggestedMaxFeePerGas: normalizeGWEIDecimalNumbers(estimates.low.suggestedMaxFeePerGas)\n    }),\n    medium: _objectSpread$3(_objectSpread$3({}, estimates.medium), {}, {\n      suggestedMaxPriorityFeePerGas: normalizeGWEIDecimalNumbers(estimates.medium.suggestedMaxPriorityFeePerGas),\n      suggestedMaxFeePerGas: normalizeGWEIDecimalNumbers(estimates.medium.suggestedMaxFeePerGas)\n    }),\n    high: _objectSpread$3(_objectSpread$3({}, estimates.high), {}, {\n      suggestedMaxPriorityFeePerGas: normalizeGWEIDecimalNumbers(estimates.high.suggestedMaxPriorityFeePerGas),\n      suggestedMaxFeePerGas: normalizeGWEIDecimalNumbers(estimates.high.suggestedMaxFeePerGas)\n    })\n  });\n\n  return normalizedEstimates;\n}\n/**\n * Hit the legacy MetaSwaps gasPrices estimate api and return the low, medium\n * high values from that API.\n */\n\nasync function fetchLegacyGasPriceEstimates(url) {\n  const result = await (0,_toruslabs_http_helpers__WEBPACK_IMPORTED_MODULE_9__.get)(url, {\n    referrer: url,\n    referrerPolicy: \"no-referrer-when-downgrade\",\n    method: \"GET\",\n    mode: \"cors\"\n  });\n  return {\n    low: result.SafeGasPrice,\n    medium: result.ProposeGasPrice,\n    high: result.FastGasPrice\n  };\n}\nconst validateTypedMessageParams = (parameters, activeChainId) => {\n  var _data$domain;\n\n  try {\n    assert__WEBPACK_IMPORTED_MODULE_10___default().ok(parameters && typeof parameters === \"object\", \"Params must be an object.\");\n    assert__WEBPACK_IMPORTED_MODULE_10___default().ok(\"data\" in parameters, 'Params must include a \"data\" field.');\n    assert__WEBPACK_IMPORTED_MODULE_10___default().ok(\"from\" in parameters, 'Params must include a \"from\" field.');\n    assert__WEBPACK_IMPORTED_MODULE_10___default().ok(typeof parameters.from === \"string\" && (0,ethereumjs_util__WEBPACK_IMPORTED_MODULE_8__.isValidAddress)(parameters.from), '\"from\" field must be a valid, lowercase, hexadecimal Ethereum address string.');\n    let data = null;\n    let chainId = null;\n\n    switch (parameters.version) {\n      case _metamask_eth_sig_util__WEBPACK_IMPORTED_MODULE_7__.SignTypedDataVersion.V1:\n        if (typeof parameters.data === \"string\") {\n          assert__WEBPACK_IMPORTED_MODULE_10___default().doesNotThrow(() => {\n            data = JSON.parse(parameters.data);\n          }, '\"data\" must be a valid JSON string.');\n        } else {\n          // for backward compatiblity we validate for both string and object type.\n          data = parameters.data;\n        }\n\n        assert__WEBPACK_IMPORTED_MODULE_10___default().ok(Array.isArray(data), \"params.data must be an array.\");\n        assert__WEBPACK_IMPORTED_MODULE_10___default().doesNotThrow(() => {\n          (0,_metamask_eth_sig_util__WEBPACK_IMPORTED_MODULE_7__.typedSignatureHash)(data);\n        }, \"Signing data must be valid EIP-712 typed data.\");\n        break;\n\n      case _metamask_eth_sig_util__WEBPACK_IMPORTED_MODULE_7__.SignTypedDataVersion.V3:\n      case _metamask_eth_sig_util__WEBPACK_IMPORTED_MODULE_7__.SignTypedDataVersion.V4:\n        if (typeof parameters.data === \"string\") {\n          assert__WEBPACK_IMPORTED_MODULE_10___default().doesNotThrow(() => {\n            data = JSON.parse(parameters.data);\n          }, '\"data\" must be a valid JSON string.');\n        } else {\n          // for backward compatiblity we validate for both string and object type.\n          data = parameters.data;\n        }\n\n        assert__WEBPACK_IMPORTED_MODULE_10___default().ok(data.primaryType in data.types, \"Primary type of \\\"\".concat(data.primaryType, \"\\\" has no type definition.\"));\n        const validation = jsonschema__WEBPACK_IMPORTED_MODULE_11__.validate(data, _metamask_eth_sig_util__WEBPACK_IMPORTED_MODULE_7__.TYPED_MESSAGE_SCHEMA.properties);\n        assert__WEBPACK_IMPORTED_MODULE_10___default().strictEqual(validation.errors.length, 0, \"Signing data must conform to EIP-712 schema. See https://git.io/fNtcx.\");\n        chainId = (_data$domain = data.domain) === null || _data$domain === void 0 ? void 0 : _data$domain.chainId;\n\n        if (chainId) {\n          assert__WEBPACK_IMPORTED_MODULE_10___default().ok(!Number.isNaN(activeChainId), \"Cannot sign messages for chainId \\\"\".concat(chainId, \"\\\", because Web3Auth is switching networks.\"));\n\n          if (typeof chainId === \"string\") {\n            chainId = Number.parseInt(chainId, (0,_web3auth_base__WEBPACK_IMPORTED_MODULE_3__.isHexStrict)(chainId) ? 16 : 10);\n          }\n\n          assert__WEBPACK_IMPORTED_MODULE_10___default().strictEqual(chainId, activeChainId, \"Provided chainId \\\"\".concat(chainId, \"\\\" must match the active chainId \\\"\").concat(activeChainId, \"\\\"\"));\n        }\n\n        break;\n\n      default:\n        assert__WEBPACK_IMPORTED_MODULE_10___default().fail(\"Unknown typed data version \\\"\".concat(parameters.version, \"\\\"\"));\n    }\n  } catch (error) {\n    throw eth_rpc_errors__WEBPACK_IMPORTED_MODULE_5__.ethErrors.rpc.invalidInput({\n      message: error === null || error === void 0 ? void 0 : error.message\n    });\n  }\n};\n\nfunction ownKeys$2(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread$2(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys$2(Object(source), !0).forEach(function (key) { (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$2(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nasync function signTx(txParams, privKey, txFormatter) {\n  const finalTxParams = await txFormatter.formatTransaction(txParams);\n  const common = await txFormatter.getCommonConfiguration();\n  const unsignedEthTx = _ethereumjs_tx__WEBPACK_IMPORTED_MODULE_6__.TransactionFactory.fromTxData(finalTxParams, {\n    common\n  });\n  const signedTx = unsignedEthTx.sign(Buffer.from(privKey, \"hex\")).serialize();\n  return signedTx;\n}\n\nfunction getProviderHandlers(_ref) {\n  let {\n    txFormatter,\n    privKey,\n    getProviderEngineProxy\n  } = _ref;\n  return {\n    getAccounts: async _ => [\"0x\".concat((0,ethereumjs_util__WEBPACK_IMPORTED_MODULE_8__.privateToAddress)(Buffer.from(privKey, \"hex\")).toString(\"hex\"))],\n    getPrivateKey: async _ => privKey,\n    processTransaction: async (txParams, _) => {\n      const providerEngineProxy = getProviderEngineProxy();\n      if (!providerEngineProxy) throw eth_rpc_errors__WEBPACK_IMPORTED_MODULE_5__.ethErrors.provider.custom({\n        message: \"Provider is not initialized\",\n        code: 4902\n      });\n      const signedTx = await signTx(txParams, privKey, txFormatter);\n      const txHash = await providerEngineProxy.request({\n        method: \"eth_sendRawTransaction\",\n        params: [\"0x\".concat(signedTx.toString(\"hex\"))]\n      });\n      return txHash;\n    },\n    processSignTransaction: async (txParams, _) => {\n      const providerEngineProxy = getProviderEngineProxy();\n      if (!providerEngineProxy) throw eth_rpc_errors__WEBPACK_IMPORTED_MODULE_5__.ethErrors.provider.custom({\n        message: \"Provider is not initialized\",\n        code: 4902\n      });\n      const signedTx = await signTx(txParams, privKey, txFormatter);\n      return \"0x\".concat(signedTx.toString(\"hex\"));\n    },\n    processEthSignMessage: async (msgParams, _) => {\n      const rawMessageSig = (0,_toruslabs_base_controllers__WEBPACK_IMPORTED_MODULE_1__.signMessage)(privKey, msgParams.data);\n      return rawMessageSig;\n    },\n    processPersonalMessage: async (msgParams, _) => {\n      const privKeyBuffer = Buffer.from(privKey, \"hex\");\n      const sig = (0,_metamask_eth_sig_util__WEBPACK_IMPORTED_MODULE_7__.personalSign)({\n        privateKey: privKeyBuffer,\n        data: msgParams.data\n      });\n      return sig;\n    },\n    processTypedMessage: async (msgParams, _) => {\n      _web3auth_base__WEBPACK_IMPORTED_MODULE_3__.log.debug(\"processTypedMessage\", msgParams);\n      const privKeyBuffer = Buffer.from(privKey, \"hex\");\n      const providerEngineProxy = getProviderEngineProxy();\n      if (!providerEngineProxy) throw eth_rpc_errors__WEBPACK_IMPORTED_MODULE_5__.ethErrors.provider.custom({\n        message: \"Provider is not initialized\",\n        code: 4902\n      });\n      const chainId = await providerEngineProxy.request({\n        method: \"eth_chainId\"\n      });\n      const finalChainId = Number.parseInt(chainId, (0,_web3auth_base__WEBPACK_IMPORTED_MODULE_3__.isHexStrict)(chainId) ? 16 : 10);\n\n      const params = _objectSpread$2(_objectSpread$2({}, msgParams), {}, {\n        version: _metamask_eth_sig_util__WEBPACK_IMPORTED_MODULE_7__.SignTypedDataVersion.V1\n      });\n\n      validateTypedMessageParams(params, finalChainId);\n      const data = typeof params.data === \"string\" ? JSON.parse(params.data) : params.data;\n      const sig = (0,_metamask_eth_sig_util__WEBPACK_IMPORTED_MODULE_7__.signTypedData)({\n        privateKey: privKeyBuffer,\n        data,\n        version: _metamask_eth_sig_util__WEBPACK_IMPORTED_MODULE_7__.SignTypedDataVersion.V1\n      });\n      return sig;\n    },\n    processTypedMessageV3: async (msgParams, _) => {\n      _web3auth_base__WEBPACK_IMPORTED_MODULE_3__.log.debug(\"processTypedMessageV3\", msgParams);\n      const privKeyBuffer = Buffer.from(privKey, \"hex\");\n      const providerEngineProxy = getProviderEngineProxy();\n      if (!providerEngineProxy) throw eth_rpc_errors__WEBPACK_IMPORTED_MODULE_5__.ethErrors.provider.custom({\n        message: \"Provider is not initialized\",\n        code: 4902\n      });\n      const chainId = await providerEngineProxy.request({\n        method: \"eth_chainId\"\n      });\n      const finalChainId = Number.parseInt(chainId, (0,_web3auth_base__WEBPACK_IMPORTED_MODULE_3__.isHexStrict)(chainId) ? 16 : 10);\n      validateTypedMessageParams(msgParams, finalChainId);\n      const data = typeof msgParams.data === \"string\" ? JSON.parse(msgParams.data) : msgParams.data;\n      const sig = (0,_metamask_eth_sig_util__WEBPACK_IMPORTED_MODULE_7__.signTypedData)({\n        privateKey: privKeyBuffer,\n        data,\n        version: _metamask_eth_sig_util__WEBPACK_IMPORTED_MODULE_7__.SignTypedDataVersion.V3\n      });\n      return sig;\n    },\n    processTypedMessageV4: async (msgParams, _) => {\n      _web3auth_base__WEBPACK_IMPORTED_MODULE_3__.log.debug(\"processTypedMessageV4\", msgParams);\n      const privKeyBuffer = Buffer.from(privKey, \"hex\");\n      const providerEngineProxy = getProviderEngineProxy();\n      if (!providerEngineProxy) throw eth_rpc_errors__WEBPACK_IMPORTED_MODULE_5__.ethErrors.provider.custom({\n        message: \"Provider is not initialized\",\n        code: 4902\n      });\n      const chainId = await providerEngineProxy.request({\n        method: \"eth_chainId\"\n      });\n      const finalChainId = Number.parseInt(chainId, (0,_web3auth_base__WEBPACK_IMPORTED_MODULE_3__.isHexStrict)(chainId) ? 16 : 10);\n      validateTypedMessageParams(msgParams, finalChainId);\n      const data = typeof msgParams.data === \"string\" ? JSON.parse(msgParams.data) : msgParams.data;\n      const sig = (0,_metamask_eth_sig_util__WEBPACK_IMPORTED_MODULE_7__.signTypedData)({\n        privateKey: privKeyBuffer,\n        data,\n        version: _metamask_eth_sig_util__WEBPACK_IMPORTED_MODULE_7__.SignTypedDataVersion.V4\n      });\n      return sig;\n    },\n    processEncryptionPublicKey: async (address, _) => {\n      _web3auth_base__WEBPACK_IMPORTED_MODULE_3__.log.info(\"processEncryptionPublicKey\", address);\n      return (0,_metamask_eth_sig_util__WEBPACK_IMPORTED_MODULE_7__.getEncryptionPublicKey)(privKey);\n    },\n    processDecryptMessage: (msgParams, _) => {\n      _web3auth_base__WEBPACK_IMPORTED_MODULE_3__.log.info(\"processDecryptMessage\", msgParams);\n      const stripped = (0,ethereumjs_util__WEBPACK_IMPORTED_MODULE_8__.stripHexPrefix)(msgParams.data);\n      const buff = Buffer.from(stripped, \"hex\");\n      const decrypted = (0,_metamask_eth_sig_util__WEBPACK_IMPORTED_MODULE_7__.decrypt)({\n        encryptedData: JSON.parse(buff.toString(\"utf8\")),\n        privateKey: privKey\n      });\n      return decrypted;\n    }\n  };\n}\n\nfunction bnLessThan(a, b) {\n  if (a === null || a === undefined || b === null || b === undefined) {\n    return null;\n  }\n\n  return new bignumber_js__WEBPACK_IMPORTED_MODULE_12__.BigNumber(a, 10).lt(b, 10);\n}\nfunction bnToHex(inputBn) {\n  return (0,ethereumjs_util__WEBPACK_IMPORTED_MODULE_8__.addHexPrefix)(inputBn.toString(16));\n}\nfunction hexToBn(inputHex) {\n  if (ethereumjs_util__WEBPACK_IMPORTED_MODULE_8__.BN.isBN(inputHex)) return inputHex;\n  return new ethereumjs_util__WEBPACK_IMPORTED_MODULE_8__.BN((0,ethereumjs_util__WEBPACK_IMPORTED_MODULE_8__.stripHexPrefix)(inputHex), 16);\n}\nfunction BnMultiplyByFraction(targetBN, numerator, denominator) {\n  const numberBN = new ethereumjs_util__WEBPACK_IMPORTED_MODULE_8__.BN(numerator);\n  const denomBN = new ethereumjs_util__WEBPACK_IMPORTED_MODULE_8__.BN(denominator);\n  return targetBN.mul(numberBN).div(denomBN);\n}\n\nconst LegacyGasAPIEndpoint = \"https://gas-api.metaswap.codefi.network/networks/<chain_id>/gasPrices\";\nconst EIP1559APIEndpoint = \"https://gas-api.metaswap.codefi.network/networks/<chain_id>/suggestedGasFees\";\nconst TRANSACTION_ENVELOPE_TYPES = {\n  LEGACY: \"0x0\",\n  ACCESS_LIST: \"0x1\",\n  FEE_MARKET: \"0x2\"\n};\nconst TRANSACTION_TYPES = {\n  SENT_ETHER: \"sentEther\",\n  CONTRACT_INTERACTION: \"contractInteraction\",\n  DEPLOY_CONTRACT: \"contractDeployment\",\n  STANDARD_TRANSACTION: \"transaction\"\n};\nconst GAS_ESTIMATE_TYPES = {\n  FEE_MARKET: \"fee-market\",\n  LEGACY: \"legacy\",\n  ETH_GASPRICE: \"eth_gasPrice\",\n  NONE: \"none\"\n};\n\nfunction ownKeys$1(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread$1(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys$1(Object(source), !0).forEach(function (key) { (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$1(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nclass TransactionFormatter {\n  constructor(_ref) {\n    let {\n      getProviderEngineProxy\n    } = _ref;\n\n    (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"chainConfig\", null);\n\n    (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"getProviderEngineProxy\", void 0);\n\n    (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"isEIP1559Compatible\", false);\n\n    this.getProviderEngineProxy = getProviderEngineProxy;\n  }\n\n  get providerProxy() {\n    return this.getProviderEngineProxy();\n  }\n\n  async init() {\n    this.chainConfig = await this.providerProxy.request({\n      method: \"eth_provider_config\",\n      params: []\n    });\n    this.isEIP1559Compatible = await this.getEIP1559Compatibility();\n  }\n\n  async getCommonConfiguration() {\n    if (!this.chainConfig) throw new Error(\"Chain config not initialized\");\n    const {\n      displayName: name,\n      chainId\n    } = this.chainConfig;\n    const hardfork = this.isEIP1559Compatible ? _ethereumjs_common__WEBPACK_IMPORTED_MODULE_13__.Hardfork.London : _ethereumjs_common__WEBPACK_IMPORTED_MODULE_13__.Hardfork.Berlin;\n    const customChainParams = {\n      name,\n      chainId: chainId === \"loading\" ? 0 : Number.parseInt(chainId, 16),\n      networkId: chainId === \"loading\" ? 0 : Number.parseInt(chainId, 16),\n      defaultHardfork: hardfork\n    };\n    return _ethereumjs_common__WEBPACK_IMPORTED_MODULE_13___default().custom(customChainParams);\n  }\n\n  async formatTransaction(txParams) {\n    if (!this.chainConfig) throw new Error(\"Chain config not initialized\");\n\n    const clonedTxParams = _objectSpread$1({}, txParams);\n\n    if (clonedTxParams.nonce === undefined) clonedTxParams.nonce = await this.providerProxy.request({\n      method: \"eth_getTransactionCount\",\n      params: [txParams.from, \"latest\"]\n    });\n\n    if (!this.isEIP1559Compatible && clonedTxParams.gasPrice) {\n      if (clonedTxParams.maxFeePerGas) delete clonedTxParams.maxFeePerGas;\n      if (clonedTxParams.maxPriorityFeePerGas) delete clonedTxParams.maxPriorityFeePerGas; // if gas is not provided explicitly, estimate it.\n\n      if (!clonedTxParams.gas) {\n        const defaultGasLimit = await this.getDefaultGasLimit(clonedTxParams);\n\n        if (defaultGasLimit) {\n          clonedTxParams.gasLimit = defaultGasLimit;\n        }\n      } else {\n        clonedTxParams.gasLimit = clonedTxParams.gas;\n      }\n\n      return clonedTxParams;\n    }\n\n    if (!clonedTxParams.gas) {\n      const defaultGasLimit = await this.getDefaultGasLimit(clonedTxParams);\n\n      if (defaultGasLimit) {\n        clonedTxParams.gasLimit = defaultGasLimit;\n      }\n    } else {\n      clonedTxParams.gasLimit = clonedTxParams.gas;\n    }\n\n    const {\n      gasPrice: defaultGasPrice,\n      maxFeePerGas: defaultMaxFeePerGas,\n      maxPriorityFeePerGas: defaultMaxPriorityFeePerGas\n    } = await this.getDefaultGasFees(clonedTxParams);\n\n    if (this.isEIP1559Compatible) {\n      // If the dapp has suggested a gas price, but no maxFeePerGas or maxPriorityFeePerGas\n      //  then we set maxFeePerGas and maxPriorityFeePerGas to the suggested gasPrice.\n      if (clonedTxParams.gasPrice && !clonedTxParams.maxFeePerGas && !clonedTxParams.maxPriorityFeePerGas) {\n        clonedTxParams.maxFeePerGas = clonedTxParams.gasPrice;\n        clonedTxParams.maxPriorityFeePerGas = bnLessThan(typeof defaultMaxPriorityFeePerGas === \"string\" ? (0,ethereumjs_util__WEBPACK_IMPORTED_MODULE_8__.stripHexPrefix)(defaultMaxPriorityFeePerGas) : defaultMaxPriorityFeePerGas, typeof clonedTxParams.gasPrice === \"string\" ? (0,ethereumjs_util__WEBPACK_IMPORTED_MODULE_8__.stripHexPrefix)(clonedTxParams.gasPrice) : clonedTxParams.gasPrice) ? defaultMaxPriorityFeePerGas : clonedTxParams.gasPrice;\n      } else {\n        if (defaultMaxFeePerGas && !clonedTxParams.maxFeePerGas) {\n          // If the dapp has not set the gasPrice or the maxFeePerGas, then we set maxFeePerGas\n          // with the one returned by the gasFeeController, if that is available.\n          clonedTxParams.maxFeePerGas = defaultMaxFeePerGas;\n        }\n\n        if (defaultMaxPriorityFeePerGas && !clonedTxParams.maxPriorityFeePerGas) {\n          // If the dapp has not set the gasPrice or the maxPriorityFeePerGas, then we set maxPriorityFeePerGas\n          // with the one returned by the gasFeeController, if that is available.\n          clonedTxParams.maxPriorityFeePerGas = defaultMaxPriorityFeePerGas;\n        }\n\n        if (defaultGasPrice && !clonedTxParams.maxFeePerGas) {\n          // If the dapp has not set the gasPrice or the maxFeePerGas, and no maxFeePerGas is available\n          // then we set maxFeePerGas to the defaultGasPrice, assuming it is\n          // available.\n          clonedTxParams.maxFeePerGas = defaultGasPrice;\n        }\n\n        if (clonedTxParams.maxFeePerGas && !clonedTxParams.maxPriorityFeePerGas) {\n          // If the dapp has not set the gasPrice or the maxPriorityFeePerGas, and no maxPriorityFeePerGas is\n          // available  then we set maxPriorityFeePerGas to\n          // clonedTxParams.maxFeePerGas, which will either be the gasPrice from the controller, the maxFeePerGas\n          // set by the dapp, or the maxFeePerGas from the controller.\n          clonedTxParams.maxPriorityFeePerGas = clonedTxParams.maxFeePerGas;\n        }\n      } // We remove the gasPrice param entirely when on an eip1559 compatible network\n\n\n      delete clonedTxParams.gasPrice;\n    } else {\n      // We ensure that maxFeePerGas and maxPriorityFeePerGas are not in the transaction params\n      // when not on a EIP1559 compatible network\n      delete clonedTxParams.maxPriorityFeePerGas;\n      delete clonedTxParams.maxFeePerGas;\n    } // If we have gotten to this point, and none of gasPrice, maxPriorityFeePerGas or maxFeePerGas are\n    // set on txParams, it means that either we are on a non-EIP1559 network and the dapp didn't suggest\n    // a gas price, or we are on an EIP1559 network, and none of gasPrice, maxPriorityFeePerGas or maxFeePerGas\n    // were available from either the dapp or the network.\n\n\n    if (defaultGasPrice && !clonedTxParams.gasPrice && !clonedTxParams.maxPriorityFeePerGas && !clonedTxParams.maxFeePerGas) {\n      clonedTxParams.gasPrice = defaultGasPrice;\n    }\n\n    clonedTxParams.type = this.isEIP1559Compatible ? TRANSACTION_ENVELOPE_TYPES.FEE_MARKET : TRANSACTION_ENVELOPE_TYPES.LEGACY;\n    clonedTxParams.chainId = this.chainConfig.chainId;\n    return clonedTxParams;\n  }\n\n  async fetchEthGasPriceEstimate() {\n    const gasPrice = await this.providerProxy.request({\n      method: \"eth_gasPrice\",\n      params: []\n    });\n    return {\n      gasPrice: hexWEIToDecGWEI(gasPrice).toString()\n    };\n  }\n\n  async getEIP1559Compatibility() {\n    const latestBlock = await this.providerProxy.request({\n      method: \"eth_getBlockByNumber\",\n      params: [\"latest\", false]\n    });\n    const supportsEIP1559 = latestBlock && latestBlock.baseFeePerGas !== undefined;\n    return !!supportsEIP1559;\n  }\n\n  async fetchGasFeeEstimateData() {\n    if (!this.chainConfig) throw new Error(\"Chain config not initialized\");\n    const isLegacyGasAPICompatible = this.chainConfig.chainId === \"0x1\";\n    const chainId = Number.parseInt(this.chainConfig.chainId, 16);\n    let gasData;\n\n    try {\n      if (this.isEIP1559Compatible) {\n        // TODO: kovan is not working due to a bug in metamask api\n        const estimates = await fetchEip1159GasEstimates(EIP1559APIEndpoint.replace(\"<chain_id>\", \"\".concat(chainId)));\n        gasData = {\n          gasFeeEstimates: estimates,\n          gasEstimateType: GAS_ESTIMATE_TYPES.FEE_MARKET\n        };\n      } else if (isLegacyGasAPICompatible) {\n        const estimates = await fetchLegacyGasPriceEstimates(LegacyGasAPIEndpoint.replace(\"<chain_id>\", \"\".concat(chainId)));\n        gasData = {\n          gasFeeEstimates: estimates,\n          gasEstimateType: GAS_ESTIMATE_TYPES.LEGACY\n        };\n      } else {\n        throw new Error(\"Main gas fee/price estimation failed. Use fallback\");\n      }\n    } catch (e) {\n      try {\n        const estimates = await this.fetchEthGasPriceEstimate();\n        gasData = {\n          gasFeeEstimates: estimates,\n          gasEstimateType: GAS_ESTIMATE_TYPES.ETH_GASPRICE\n        };\n      } catch (error) {\n        throw new Error(\"Gas fee/price estimation failed. Message: \".concat(error.message));\n      }\n    }\n\n    return gasData;\n  }\n\n  async getDefaultGasFees(txParams) {\n    if (!this.isEIP1559Compatible && txParams.gasPrice || this.isEIP1559Compatible && txParams.maxFeePerGas && txParams.maxPriorityFeePerGas) {\n      return {};\n    }\n\n    try {\n      const {\n        gasFeeEstimates,\n        gasEstimateType\n      } = await this.fetchGasFeeEstimateData();\n\n      if (this.isEIP1559Compatible && gasEstimateType === GAS_ESTIMATE_TYPES.FEE_MARKET) {\n        const {\n          medium: {\n            suggestedMaxPriorityFeePerGas,\n            suggestedMaxFeePerGas\n          } = {}\n        } = gasFeeEstimates;\n\n        if (suggestedMaxPriorityFeePerGas && suggestedMaxFeePerGas) {\n          return {\n            maxFeePerGas: (0,ethereumjs_util__WEBPACK_IMPORTED_MODULE_8__.addHexPrefix)(decGWEIToHexWEI(suggestedMaxFeePerGas)),\n            maxPriorityFeePerGas: (0,ethereumjs_util__WEBPACK_IMPORTED_MODULE_8__.addHexPrefix)(decGWEIToHexWEI(suggestedMaxPriorityFeePerGas))\n          };\n        }\n      } else if (gasEstimateType === GAS_ESTIMATE_TYPES.LEGACY) {\n        // The LEGACY type includes low, medium and high estimates of\n        // gas price values.\n        return {\n          gasPrice: (0,ethereumjs_util__WEBPACK_IMPORTED_MODULE_8__.addHexPrefix)(decGWEIToHexWEI(gasFeeEstimates.medium))\n        };\n      } else if (gasEstimateType === GAS_ESTIMATE_TYPES.ETH_GASPRICE) {\n        // The ETH_GASPRICE type just includes a single gas price property,\n        // which we can assume was retrieved from eth_gasPrice\n        return {\n          gasPrice: (0,ethereumjs_util__WEBPACK_IMPORTED_MODULE_8__.addHexPrefix)(decGWEIToHexWEI(gasFeeEstimates.gasPrice))\n        };\n      }\n    } catch (error) {\n      _web3auth_base__WEBPACK_IMPORTED_MODULE_3__.log.error(error);\n    }\n\n    const {\n      gasPrice\n    } = await this.fetchEthGasPriceEstimate();\n    return {\n      gasPrice: (0,ethereumjs_util__WEBPACK_IMPORTED_MODULE_8__.addHexPrefix)(decGWEIToHexWEI(gasPrice))\n    };\n  }\n\n  async estimateTxGas(txMeta) {\n    const txParams = _objectSpread$1({}, txMeta); // `eth_estimateGas` can fail if the user has insufficient balance for the\n    // value being sent, or for the gas cost. We don't want to check their\n    // balance here, we just want the gas estimate. The gas price is removed\n    // to skip those balance checks. We check balance elsewhere. We also delete\n    // maxFeePerGas and maxPriorityFeePerGas to support EIP-1559 txs.\n\n\n    delete txParams.gasPrice;\n    delete txParams.maxFeePerGas;\n    delete txParams.maxPriorityFeePerGas;\n    const gas = await this.providerProxy.request({\n      method: \"eth_estimateGas\",\n      params: [txParams]\n    });\n    return gas;\n  }\n\n  async analyzeGasUsage(txMeta) {\n    const block = await this.providerProxy.request({\n      method: \"eth_getBlockByNumber\",\n      params: [\"latest\", false]\n    }); // fallback to block gasLimit\n\n    const blockGasLimitBN = hexToBn(block.gasLimit);\n    const saferGasLimitBN = BnMultiplyByFraction(blockGasLimitBN, 19, 20);\n    let estimatedGasHex = bnToHex(saferGasLimitBN);\n\n    try {\n      estimatedGasHex = await this.estimateTxGas(txMeta);\n    } catch (error) {\n      _web3auth_base__WEBPACK_IMPORTED_MODULE_3__.log.warn(error);\n    }\n\n    return {\n      blockGasLimit: block.gasLimit,\n      estimatedGasHex\n    };\n  }\n\n  addGasBuffer(initialGasLimitHex, blockGasLimitHex) {\n    let multiplier = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1.5;\n    const initialGasLimitBn = hexToBn(initialGasLimitHex);\n    const blockGasLimitBn = hexToBn(blockGasLimitHex);\n    const upperGasLimitBn = blockGasLimitBn.muln(0.9);\n    const bufferedGasLimitBn = initialGasLimitBn.muln(multiplier); // if initialGasLimit is above blockGasLimit, dont modify it\n\n    if (initialGasLimitBn.gt(upperGasLimitBn)) return bnToHex(initialGasLimitBn); // if bufferedGasLimit is below blockGasLimit, use bufferedGasLimit\n\n    if (bufferedGasLimitBn.lt(upperGasLimitBn)) return bnToHex(bufferedGasLimitBn); // otherwise use blockGasLimit\n\n    return bnToHex(upperGasLimitBn);\n  }\n\n  async determineTransactionCategory(txParameters) {\n    const {\n      data,\n      to\n    } = txParameters;\n    let code = \"\";\n    let txCategory;\n\n    if (data && !to) {\n      txCategory = TRANSACTION_TYPES.DEPLOY_CONTRACT;\n    } else {\n      try {\n        code = await this.providerProxy.request({\n          method: \"eth_getCode\",\n          params: [to, \"latest\"]\n        });\n      } catch (error) {\n        _web3auth_base__WEBPACK_IMPORTED_MODULE_3__.log.warn(error);\n      }\n\n      const codeIsEmpty = !code || code === \"0x\" || code === \"0x0\";\n      txCategory = codeIsEmpty ? TRANSACTION_TYPES.SENT_ETHER : TRANSACTION_TYPES.CONTRACT_INTERACTION;\n    }\n\n    return {\n      transactionCategory: txCategory,\n      code\n    };\n  }\n\n  async getDefaultGasLimit(txParams) {\n    const {\n      transactionCategory\n    } = await this.determineTransactionCategory(_objectSpread$1({}, txParams));\n\n    if (txParams.gas) {\n      return txParams.gas;\n    }\n\n    if (txParams.to && transactionCategory === TRANSACTION_TYPES.SENT_ETHER) {\n      // if there's data in the params, but there's no contract code, it's not a valid transaction\n      if (txParams.data) {\n        throw Error(\"TxGasUtil - Trying to call a function on a non-contract address\");\n      }\n\n      const TWENTY_ONE_THOUSAND = 21000; // This is a standard ether simple send, gas requirement is exactly 21k\n\n      return (0,ethereumjs_util__WEBPACK_IMPORTED_MODULE_8__.addHexPrefix)(TWENTY_ONE_THOUSAND.toString(16));\n    }\n\n    const {\n      blockGasLimit,\n      estimatedGasHex\n    } = await this.analyzeGasUsage(txParams); // add additional gas buffer to our estimation for safety\n\n    const gasLimit = this.addGasBuffer((0,ethereumjs_util__WEBPACK_IMPORTED_MODULE_8__.addHexPrefix)(estimatedGasHex), blockGasLimit);\n    return gasLimit;\n  }\n\n}\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nclass EthereumPrivateKeyProvider extends _web3auth_base_provider__WEBPACK_IMPORTED_MODULE_4__.BaseProvider {\n  constructor(_ref) {\n    let {\n      config,\n      state\n    } = _ref;\n    super({\n      config: {\n        chainConfig: _objectSpread(_objectSpread({}, config.chainConfig), {}, {\n          chainNamespace: _web3auth_base__WEBPACK_IMPORTED_MODULE_3__.CHAIN_NAMESPACES.EIP155\n        })\n      },\n      state\n    });\n  }\n\n  async enable() {\n    if (!this.state.privateKey) throw eth_rpc_errors__WEBPACK_IMPORTED_MODULE_5__.ethErrors.provider.custom({\n      message: \"Private key is not found in state, plz pass it in constructor state param\",\n      code: 4902\n    });\n    await this.setupProvider(this.state.privateKey);\n    return this._providerEngineProxy.request({\n      method: \"eth_accounts\"\n    });\n  }\n\n  async setupProvider(privKey) {\n    const txFormatter = new TransactionFormatter({\n      getProviderEngineProxy: this.getProviderEngineProxy.bind(this)\n    });\n    const providerHandlers = getProviderHandlers({\n      txFormatter,\n      privKey,\n      getProviderEngineProxy: this.getProviderEngineProxy.bind(this)\n    });\n    const ethMiddleware = createEthMiddleware(providerHandlers);\n    const chainSwitchMiddleware = this.getChainSwitchMiddleware();\n    const engine = new _toruslabs_openlogin_jrpc__WEBPACK_IMPORTED_MODULE_2__.JRPCEngine(); // Not a partial anymore because of checks in ctor\n\n    const {\n      networkMiddleware\n    } = createJsonRpcClient(this.config.chainConfig);\n    engine.push(ethMiddleware);\n    engine.push(chainSwitchMiddleware);\n    engine.push(this.getAccountMiddleware());\n    engine.push(networkMiddleware);\n    const provider = (0,_toruslabs_base_controllers__WEBPACK_IMPORTED_MODULE_1__.providerFromEngine)(engine);\n    this.updateProviderEngineProxy(provider);\n    await txFormatter.init();\n    await this.lookupNetwork();\n  }\n\n  async updateAccount(params) {\n    if (!this._providerEngineProxy) throw eth_rpc_errors__WEBPACK_IMPORTED_MODULE_5__.ethErrors.provider.custom({\n      message: \"Provider is not initialized\",\n      code: 4902\n    });\n    const existingKey = await this._providerEngineProxy.request({\n      method: \"eth_private_key\"\n    });\n\n    if (existingKey !== params.privateKey) {\n      await this.setupProvider(params.privateKey);\n\n      this._providerEngineProxy.emit(\"accountsChanged\", {\n        accounts: await this._providerEngineProxy.request({\n          method: \"eth_accounts\"\n        })\n      });\n    }\n  }\n\n  async switchChain(params) {\n    if (!this._providerEngineProxy) throw eth_rpc_errors__WEBPACK_IMPORTED_MODULE_5__.ethErrors.provider.custom({\n      message: \"Provider is not initialized\",\n      code: 4902\n    });\n    const chainConfig = this.getChainConfig(params.chainId);\n    this.update({\n      chainId: \"loading\"\n    });\n    this.configure({\n      chainConfig\n    });\n    const privKey = await this._providerEngineProxy.request({\n      method: \"eth_private_key\"\n    });\n    await this.setupProvider(privKey);\n  }\n\n  async lookupNetwork() {\n    if (!this._providerEngineProxy) throw eth_rpc_errors__WEBPACK_IMPORTED_MODULE_5__.ethErrors.provider.custom({\n      message: \"Provider is not initialized\",\n      code: 4902\n    });\n    const {\n      chainId\n    } = this.config.chainConfig;\n    if (!chainId) throw eth_rpc_errors__WEBPACK_IMPORTED_MODULE_5__.ethErrors.rpc.invalidParams(\"chainId is required while lookupNetwork\");\n    const network = await this._providerEngineProxy.request({\n      method: \"net_version\",\n      params: []\n    });\n    if (parseInt(chainId, 16) !== parseInt(network, 10)) throw eth_rpc_errors__WEBPACK_IMPORTED_MODULE_5__.ethErrors.provider.chainDisconnected(\"Invalid network, net_version is: \".concat(network));\n\n    if (this.state.chainId !== chainId) {\n      this._providerEngineProxy.emit(\"chainChanged\", chainId);\n\n      this._providerEngineProxy.emit(\"connect\", {\n        chainId\n      });\n    }\n\n    this.update({\n      chainId\n    });\n    return network;\n  }\n\n  getChainSwitchMiddleware() {\n    const chainSwitchHandlers = {\n      addChain: async params => {\n        const {\n          chainId,\n          chainName,\n          rpcUrls,\n          blockExplorerUrls,\n          nativeCurrency\n        } = params;\n        this.addChain({\n          chainNamespace: \"eip155\",\n          chainId,\n          ticker: (nativeCurrency === null || nativeCurrency === void 0 ? void 0 : nativeCurrency.symbol) || \"ETH\",\n          tickerName: (nativeCurrency === null || nativeCurrency === void 0 ? void 0 : nativeCurrency.name) || \"Ether\",\n          displayName: chainName,\n          rpcTarget: rpcUrls[0],\n          blockExplorer: (blockExplorerUrls === null || blockExplorerUrls === void 0 ? void 0 : blockExplorerUrls[0]) || \"\"\n        });\n      },\n      switchChain: async params => {\n        const {\n          chainId\n        } = params;\n        await this.switchChain({\n          chainId\n        });\n      }\n    };\n    const chainSwitchMiddleware = createChainSwitchMiddleware(chainSwitchHandlers);\n    return chainSwitchMiddleware;\n  }\n\n  getAccountMiddleware() {\n    const accountHandlers = {\n      updatePrivatekey: async params => {\n        const {\n          privateKey\n        } = params;\n        await this.updateAccount({\n          privateKey\n        });\n      }\n    };\n    return createAccountMiddleware(accountHandlers);\n  }\n\n}\n\n(0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(EthereumPrivateKeyProvider, \"getProviderInstance\", async params => {\n  const providerFactory = new EthereumPrivateKeyProvider({\n    config: {\n      chainConfig: params.chainConfig\n    }\n  });\n  await providerFactory.setupProvider(params.privKey);\n  return providerFactory;\n});\n\n\n//# sourceMappingURL=ethereumProvider.esm.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@web3auth/ethereum-provider/dist/ethereumProvider.esm.js\n");

/***/ }),

/***/ "./node_modules/@web3auth/ethereum-provider/node_modules/@ethereumjs/tx/dist.browser/baseTransaction.js":
/*!**************************************************************************************************************!*\
  !*** ./node_modules/@web3auth/ethereum-provider/node_modules/@ethereumjs/tx/dist.browser/baseTransaction.js ***!
  \**************************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.BaseTransaction = void 0;\nvar common_1 = __importStar(__webpack_require__(/*! @ethereumjs/common */ \"./node_modules/@ethereumjs/common/dist.browser/index.js\"));\nvar ethereumjs_util_1 = __webpack_require__(/*! ethereumjs-util */ \"./node_modules/@web3auth/ethereum-provider/node_modules/ethereumjs-util/dist.browser/index.js\");\nvar types_1 = __webpack_require__(/*! ./types */ \"./node_modules/@web3auth/ethereum-provider/node_modules/@ethereumjs/tx/dist.browser/types.js\");\n/**\n * This base class will likely be subject to further\n * refactoring along the introduction of additional tx types\n * on the Ethereum network.\n *\n * It is therefore not recommended to use directly.\n */\nvar BaseTransaction = /** @class */ (function () {\n    function BaseTransaction(txData, opts) {\n        this.cache = {\n            hash: undefined,\n            dataFee: undefined,\n        };\n        /**\n         * List of tx type defining EIPs,\n         * e.g. 1559 (fee market) and 2930 (access lists)\n         * for FeeMarketEIP1559Transaction objects\n         */\n        this.activeCapabilities = [];\n        /**\n         * The default chain the tx falls back to if no Common\n         * is provided and if the chain can't be derived from\n         * a passed in chainId (only EIP-2718 typed txs) or\n         * EIP-155 signature (legacy txs).\n         *\n         * @hidden\n         */\n        this.DEFAULT_CHAIN = common_1.Chain.Mainnet;\n        /**\n         * The default HF if the tx type is active on that HF\n         * or the first greater HF where the tx is active.\n         *\n         * @hidden\n         */\n        this.DEFAULT_HARDFORK = common_1.Hardfork.Istanbul;\n        var nonce = txData.nonce, gasLimit = txData.gasLimit, to = txData.to, value = txData.value, data = txData.data, v = txData.v, r = txData.r, s = txData.s, type = txData.type;\n        this._type = new ethereumjs_util_1.BN((0, ethereumjs_util_1.toBuffer)(type)).toNumber();\n        this.txOptions = opts;\n        var toB = (0, ethereumjs_util_1.toBuffer)(to === '' ? '0x' : to);\n        var vB = (0, ethereumjs_util_1.toBuffer)(v === '' ? '0x' : v);\n        var rB = (0, ethereumjs_util_1.toBuffer)(r === '' ? '0x' : r);\n        var sB = (0, ethereumjs_util_1.toBuffer)(s === '' ? '0x' : s);\n        this.nonce = new ethereumjs_util_1.BN((0, ethereumjs_util_1.toBuffer)(nonce === '' ? '0x' : nonce));\n        this.gasLimit = new ethereumjs_util_1.BN((0, ethereumjs_util_1.toBuffer)(gasLimit === '' ? '0x' : gasLimit));\n        this.to = toB.length > 0 ? new ethereumjs_util_1.Address(toB) : undefined;\n        this.value = new ethereumjs_util_1.BN((0, ethereumjs_util_1.toBuffer)(value === '' ? '0x' : value));\n        this.data = (0, ethereumjs_util_1.toBuffer)(data === '' ? '0x' : data);\n        this.v = vB.length > 0 ? new ethereumjs_util_1.BN(vB) : undefined;\n        this.r = rB.length > 0 ? new ethereumjs_util_1.BN(rB) : undefined;\n        this.s = sB.length > 0 ? new ethereumjs_util_1.BN(sB) : undefined;\n        this._validateCannotExceedMaxInteger({ value: this.value, r: this.r, s: this.s });\n        // geth limits gasLimit to 2^64-1\n        this._validateCannotExceedMaxInteger({ gasLimit: this.gasLimit }, 64);\n        // EIP-2681 limits nonce to 2^64-1 (cannot equal 2^64-1)\n        this._validateCannotExceedMaxInteger({ nonce: this.nonce }, 64, true);\n    }\n    Object.defineProperty(BaseTransaction.prototype, \"transactionType\", {\n        /**\n         * Alias for {@link BaseTransaction.type}\n         *\n         * @deprecated Use `type` instead\n         */\n        get: function () {\n            return this.type;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(BaseTransaction.prototype, \"type\", {\n        /**\n         * Returns the transaction type.\n         *\n         * Note: legacy txs will return tx type `0`.\n         */\n        get: function () {\n            return this._type;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Checks if a tx type defining capability is active\n     * on a tx, for example the EIP-1559 fee market mechanism\n     * or the EIP-2930 access list feature.\n     *\n     * Note that this is different from the tx type itself,\n     * so EIP-2930 access lists can very well be active\n     * on an EIP-1559 tx for example.\n     *\n     * This method can be useful for feature checks if the\n     * tx type is unknown (e.g. when instantiated with\n     * the tx factory).\n     *\n     * See `Capabilites` in the `types` module for a reference\n     * on all supported capabilities.\n     */\n    BaseTransaction.prototype.supports = function (capability) {\n        return this.activeCapabilities.includes(capability);\n    };\n    BaseTransaction.prototype.validate = function (stringError) {\n        if (stringError === void 0) { stringError = false; }\n        var errors = [];\n        if (this.getBaseFee().gt(this.gasLimit)) {\n            errors.push(\"gasLimit is too low. given \".concat(this.gasLimit, \", need at least \").concat(this.getBaseFee()));\n        }\n        if (this.isSigned() && !this.verifySignature()) {\n            errors.push('Invalid Signature');\n        }\n        return stringError ? errors : errors.length === 0;\n    };\n    /**\n     * The minimum amount of gas the tx must have (DataFee + TxFee + Creation Fee)\n     */\n    BaseTransaction.prototype.getBaseFee = function () {\n        var fee = this.getDataFee().addn(this.common.param('gasPrices', 'tx'));\n        if (this.common.gteHardfork('homestead') && this.toCreationAddress()) {\n            fee.iaddn(this.common.param('gasPrices', 'txCreation'));\n        }\n        return fee;\n    };\n    /**\n     * The amount of gas paid for the data in this tx\n     */\n    BaseTransaction.prototype.getDataFee = function () {\n        var txDataZero = this.common.param('gasPrices', 'txDataZero');\n        var txDataNonZero = this.common.param('gasPrices', 'txDataNonZero');\n        var cost = 0;\n        for (var i = 0; i < this.data.length; i++) {\n            this.data[i] === 0 ? (cost += txDataZero) : (cost += txDataNonZero);\n        }\n        cost = new ethereumjs_util_1.BN(cost);\n        if ((this.to === undefined || this.to === null) && this.common.isActivatedEIP(3860)) {\n            var dataLength = Math.ceil(this.data.length / 32);\n            var initCodeCost = new ethereumjs_util_1.BN(this.common.param('gasPrices', 'initCodeWordCost')).imuln(dataLength);\n            cost.iadd(initCodeCost);\n        }\n        return cost;\n    };\n    /**\n     * If the tx's `to` is to the creation address\n     */\n    BaseTransaction.prototype.toCreationAddress = function () {\n        return this.to === undefined || this.to.buf.length === 0;\n    };\n    BaseTransaction.prototype.isSigned = function () {\n        var _a = this, v = _a.v, r = _a.r, s = _a.s;\n        if (this.type === 0) {\n            if (!v || !r || !s) {\n                return false;\n            }\n            else {\n                return true;\n            }\n        }\n        else {\n            if (v === undefined || !r || !s) {\n                return false;\n            }\n            else {\n                return true;\n            }\n        }\n    };\n    /**\n     * Determines if the signature is valid\n     */\n    BaseTransaction.prototype.verifySignature = function () {\n        try {\n            // Main signature verification is done in `getSenderPublicKey()`\n            var publicKey = this.getSenderPublicKey();\n            return (0, ethereumjs_util_1.unpadBuffer)(publicKey).length !== 0;\n        }\n        catch (e) {\n            return false;\n        }\n    };\n    /**\n     * Returns the sender's address\n     */\n    BaseTransaction.prototype.getSenderAddress = function () {\n        return new ethereumjs_util_1.Address((0, ethereumjs_util_1.publicToAddress)(this.getSenderPublicKey()));\n    };\n    /**\n     * Signs a transaction.\n     *\n     * Note that the signed tx is returned as a new object,\n     * use as follows:\n     * ```javascript\n     * const signedTx = tx.sign(privateKey)\n     * ```\n     */\n    BaseTransaction.prototype.sign = function (privateKey) {\n        if (privateKey.length !== 32) {\n            var msg = this._errorMsg('Private key must be 32 bytes in length.');\n            throw new Error(msg);\n        }\n        // Hack for the constellation that we have got a legacy tx after spuriousDragon with a non-EIP155 conforming signature\n        // and want to recreate a signature (where EIP155 should be applied)\n        // Leaving this hack lets the legacy.spec.ts -> sign(), verifySignature() test fail\n        // 2021-06-23\n        var hackApplied = false;\n        if (this.type === 0 &&\n            this.common.gteHardfork('spuriousDragon') &&\n            !this.supports(types_1.Capability.EIP155ReplayProtection)) {\n            this.activeCapabilities.push(types_1.Capability.EIP155ReplayProtection);\n            hackApplied = true;\n        }\n        var msgHash = this.getMessageToSign(true);\n        var _a = (0, ethereumjs_util_1.ecsign)(msgHash, privateKey), v = _a.v, r = _a.r, s = _a.s;\n        var tx = this._processSignature(v, r, s);\n        // Hack part 2\n        if (hackApplied) {\n            var index = this.activeCapabilities.indexOf(types_1.Capability.EIP155ReplayProtection);\n            if (index > -1) {\n                this.activeCapabilities.splice(index, 1);\n            }\n        }\n        return tx;\n    };\n    /**\n     * Does chain ID checks on common and returns a common\n     * to be used on instantiation\n     * @hidden\n     *\n     * @param common - {@link Common} instance from tx options\n     * @param chainId - Chain ID from tx options (typed txs) or signature (legacy tx)\n     */\n    BaseTransaction.prototype._getCommon = function (common, chainId) {\n        var _a;\n        // Chain ID provided\n        if (chainId) {\n            var chainIdBN = new ethereumjs_util_1.BN((0, ethereumjs_util_1.toBuffer)(chainId));\n            if (common) {\n                if (!common.chainIdBN().eq(chainIdBN)) {\n                    var msg = this._errorMsg('The chain ID does not match the chain ID of Common');\n                    throw new Error(msg);\n                }\n                // Common provided, chain ID does match\n                // -> Return provided Common\n                return common.copy();\n            }\n            else {\n                if (common_1.default.isSupportedChainId(chainIdBN)) {\n                    // No Common, chain ID supported by Common\n                    // -> Instantiate Common with chain ID\n                    return new common_1.default({ chain: chainIdBN, hardfork: this.DEFAULT_HARDFORK });\n                }\n                else {\n                    // No Common, chain ID not supported by Common\n                    // -> Instantiate custom Common derived from DEFAULT_CHAIN\n                    return common_1.default.forCustomChain(this.DEFAULT_CHAIN, {\n                        name: 'custom-chain',\n                        networkId: chainIdBN,\n                        chainId: chainIdBN,\n                    }, this.DEFAULT_HARDFORK);\n                }\n            }\n        }\n        else {\n            // No chain ID provided\n            // -> return Common provided or create new default Common\n            return ((_a = common === null || common === void 0 ? void 0 : common.copy()) !== null && _a !== void 0 ? _a : new common_1.default({ chain: this.DEFAULT_CHAIN, hardfork: this.DEFAULT_HARDFORK }));\n        }\n    };\n    /**\n     * Validates that an object with BN values cannot exceed the specified bit limit.\n     * @param values Object containing string keys and BN values\n     * @param bits Number of bits to check (64 or 256)\n     * @param cannotEqual Pass true if the number also cannot equal one less the maximum value\n     */\n    BaseTransaction.prototype._validateCannotExceedMaxInteger = function (values, bits, cannotEqual) {\n        var e_1, _a;\n        if (bits === void 0) { bits = 256; }\n        if (cannotEqual === void 0) { cannotEqual = false; }\n        try {\n            for (var _b = __values(Object.entries(values)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var _d = __read(_c.value, 2), key = _d[0], value = _d[1];\n                switch (bits) {\n                    case 64:\n                        if (cannotEqual) {\n                            if (value === null || value === void 0 ? void 0 : value.gte(ethereumjs_util_1.MAX_UINT64)) {\n                                var msg = this._errorMsg(\"\".concat(key, \" cannot equal or exceed MAX_UINT64 (2^64-1), given \").concat(value));\n                                throw new Error(msg);\n                            }\n                        }\n                        else {\n                            if (value === null || value === void 0 ? void 0 : value.gt(ethereumjs_util_1.MAX_UINT64)) {\n                                var msg = this._errorMsg(\"\".concat(key, \" cannot exceed MAX_UINT64 (2^64-1), given \").concat(value));\n                                throw new Error(msg);\n                            }\n                        }\n                        break;\n                    case 256:\n                        if (cannotEqual) {\n                            if (value === null || value === void 0 ? void 0 : value.gte(ethereumjs_util_1.MAX_INTEGER)) {\n                                var msg = this._errorMsg(\"\".concat(key, \" cannot equal or exceed MAX_INTEGER (2^256-1), given \").concat(value));\n                                throw new Error(msg);\n                            }\n                        }\n                        else {\n                            if (value === null || value === void 0 ? void 0 : value.gt(ethereumjs_util_1.MAX_INTEGER)) {\n                                var msg = this._errorMsg(\"\".concat(key, \" cannot exceed MAX_INTEGER (2^256-1), given \").concat(value));\n                                throw new Error(msg);\n                            }\n                        }\n                        break;\n                    default: {\n                        var msg = this._errorMsg('unimplemented bits value');\n                        throw new Error(msg);\n                    }\n                }\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n    };\n    /**\n     * Returns the shared error postfix part for _error() method\n     * tx type implementations.\n     */\n    BaseTransaction.prototype._getSharedErrorPostfix = function () {\n        var hash = '';\n        try {\n            hash = this.isSigned() ? (0, ethereumjs_util_1.bufferToHex)(this.hash()) : 'not available (unsigned)';\n        }\n        catch (e) {\n            hash = 'error';\n        }\n        var isSigned = '';\n        try {\n            isSigned = this.isSigned().toString();\n        }\n        catch (e) {\n            hash = 'error';\n        }\n        var hf = '';\n        try {\n            hf = this.common.hardfork();\n        }\n        catch (e) {\n            hf = 'error';\n        }\n        var postfix = \"tx type=\".concat(this.type, \" hash=\").concat(hash, \" nonce=\").concat(this.nonce, \" value=\").concat(this.value, \" \");\n        postfix += \"signed=\".concat(isSigned, \" hf=\").concat(hf);\n        return postfix;\n    };\n    return BaseTransaction;\n}());\nexports.BaseTransaction = BaseTransaction;\n//# sourceMappingURL=baseTransaction.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@web3auth/ethereum-provider/node_modules/@ethereumjs/tx/dist.browser/baseTransaction.js\n");

/***/ }),

/***/ "./node_modules/@web3auth/ethereum-provider/node_modules/@ethereumjs/tx/dist.browser/eip1559Transaction.js":
/*!*****************************************************************************************************************!*\
  !*** ./node_modules/@web3auth/ethereum-provider/node_modules/@ethereumjs/tx/dist.browser/eip1559Transaction.js ***!
  \*****************************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"./node_modules/buffer/index.js\")[\"Buffer\"];\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar ethereumjs_util_1 = __webpack_require__(/*! ethereumjs-util */ \"./node_modules/@web3auth/ethereum-provider/node_modules/ethereumjs-util/dist.browser/index.js\");\nvar baseTransaction_1 = __webpack_require__(/*! ./baseTransaction */ \"./node_modules/@web3auth/ethereum-provider/node_modules/@ethereumjs/tx/dist.browser/baseTransaction.js\");\nvar types_1 = __webpack_require__(/*! ./types */ \"./node_modules/@web3auth/ethereum-provider/node_modules/@ethereumjs/tx/dist.browser/types.js\");\nvar util_1 = __webpack_require__(/*! ./util */ \"./node_modules/@web3auth/ethereum-provider/node_modules/@ethereumjs/tx/dist.browser/util.js\");\nvar TRANSACTION_TYPE = 2;\nvar TRANSACTION_TYPE_BUFFER = Buffer.from(TRANSACTION_TYPE.toString(16).padStart(2, '0'), 'hex');\n/**\n * Typed transaction with a new gas fee market mechanism\n *\n * - TransactionType: 2\n * - EIP: [EIP-1559](https://eips.ethereum.org/EIPS/eip-1559)\n */\nvar FeeMarketEIP1559Transaction = /** @class */ (function (_super) {\n    __extends(FeeMarketEIP1559Transaction, _super);\n    /**\n     * This constructor takes the values, validates them, assigns them and freezes the object.\n     *\n     * It is not recommended to use this constructor directly. Instead use\n     * the static factory methods to assist in creating a Transaction object from\n     * varying data types.\n     */\n    function FeeMarketEIP1559Transaction(txData, opts) {\n        if (opts === void 0) { opts = {}; }\n        var _this = this;\n        var _a, _b;\n        _this = _super.call(this, __assign(__assign({}, txData), { type: TRANSACTION_TYPE }), opts) || this;\n        /**\n         * The default HF if the tx type is active on that HF\n         * or the first greater HF where the tx is active.\n         *\n         * @hidden\n         */\n        _this.DEFAULT_HARDFORK = 'london';\n        var chainId = txData.chainId, accessList = txData.accessList, maxFeePerGas = txData.maxFeePerGas, maxPriorityFeePerGas = txData.maxPriorityFeePerGas;\n        _this.common = _this._getCommon(opts.common, chainId);\n        _this.chainId = _this.common.chainIdBN();\n        if (!_this.common.isActivatedEIP(1559)) {\n            throw new Error('EIP-1559 not enabled on Common');\n        }\n        _this.activeCapabilities = _this.activeCapabilities.concat([1559, 2718, 2930]);\n        // Populate the access list fields\n        var accessListData = util_1.AccessLists.getAccessListData(accessList !== null && accessList !== void 0 ? accessList : []);\n        _this.accessList = accessListData.accessList;\n        _this.AccessListJSON = accessListData.AccessListJSON;\n        // Verify the access list format.\n        util_1.AccessLists.verifyAccessList(_this.accessList);\n        _this.maxFeePerGas = new ethereumjs_util_1.BN((0, ethereumjs_util_1.toBuffer)(maxFeePerGas === '' ? '0x' : maxFeePerGas));\n        _this.maxPriorityFeePerGas = new ethereumjs_util_1.BN((0, ethereumjs_util_1.toBuffer)(maxPriorityFeePerGas === '' ? '0x' : maxPriorityFeePerGas));\n        _this._validateCannotExceedMaxInteger({\n            maxFeePerGas: _this.maxFeePerGas,\n            maxPriorityFeePerGas: _this.maxPriorityFeePerGas,\n        });\n        if (_this.gasLimit.mul(_this.maxFeePerGas).gt(ethereumjs_util_1.MAX_INTEGER)) {\n            var msg = _this._errorMsg('gasLimit * maxFeePerGas cannot exceed MAX_INTEGER (2^256-1)');\n            throw new Error(msg);\n        }\n        if (_this.maxFeePerGas.lt(_this.maxPriorityFeePerGas)) {\n            var msg = _this._errorMsg('maxFeePerGas cannot be less than maxPriorityFeePerGas (The total must be the larger of the two)');\n            throw new Error(msg);\n        }\n        if (_this.v && !_this.v.eqn(0) && !_this.v.eqn(1)) {\n            var msg = _this._errorMsg('The y-parity of the transaction should either be 0 or 1');\n            throw new Error(msg);\n        }\n        if (_this.common.gteHardfork('homestead') && ((_a = _this.s) === null || _a === void 0 ? void 0 : _a.gt(types_1.N_DIV_2))) {\n            var msg = _this._errorMsg('Invalid Signature: s-values greater than secp256k1n/2 are considered invalid');\n            throw new Error(msg);\n        }\n        if (_this.common.isActivatedEIP(3860)) {\n            (0, util_1.checkMaxInitCodeSize)(_this.common, _this.data.length);\n        }\n        var freeze = (_b = opts === null || opts === void 0 ? void 0 : opts.freeze) !== null && _b !== void 0 ? _b : true;\n        if (freeze) {\n            Object.freeze(_this);\n        }\n        return _this;\n    }\n    Object.defineProperty(FeeMarketEIP1559Transaction.prototype, \"senderR\", {\n        /**\n         * EIP-2930 alias for `r`\n         *\n         * @deprecated use `r` instead\n         */\n        get: function () {\n            return this.r;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(FeeMarketEIP1559Transaction.prototype, \"senderS\", {\n        /**\n         * EIP-2930 alias for `s`\n         *\n         * @deprecated use `s` instead\n         */\n        get: function () {\n            return this.s;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(FeeMarketEIP1559Transaction.prototype, \"yParity\", {\n        /**\n         * EIP-2930 alias for `v`\n         *\n         * @deprecated use `v` instead\n         */\n        get: function () {\n            return this.v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Instantiate a transaction from a data dictionary.\n     *\n     * Format: { chainId, nonce, maxPriorityFeePerGas, maxFeePerGas, gasLimit, to, value, data,\n     * accessList, v, r, s }\n     *\n     * Notes:\n     * - `chainId` will be set automatically if not provided\n     * - All parameters are optional and have some basic default values\n     */\n    FeeMarketEIP1559Transaction.fromTxData = function (txData, opts) {\n        if (opts === void 0) { opts = {}; }\n        return new FeeMarketEIP1559Transaction(txData, opts);\n    };\n    /**\n     * Instantiate a transaction from the serialized tx.\n     *\n     * Format: `0x02 || rlp([chainId, nonce, maxPriorityFeePerGas, maxFeePerGas, gasLimit, to, value, data,\n     * accessList, signatureYParity, signatureR, signatureS])`\n     */\n    FeeMarketEIP1559Transaction.fromSerializedTx = function (serialized, opts) {\n        if (opts === void 0) { opts = {}; }\n        if (!serialized.slice(0, 1).equals(TRANSACTION_TYPE_BUFFER)) {\n            throw new Error(\"Invalid serialized tx input: not an EIP-1559 transaction (wrong tx type, expected: \".concat(TRANSACTION_TYPE, \", received: \").concat(serialized\n                .slice(0, 1)\n                .toString('hex')));\n        }\n        var values = ethereumjs_util_1.rlp.decode(serialized.slice(1));\n        if (!Array.isArray(values)) {\n            throw new Error('Invalid serialized tx input: must be array');\n        }\n        return FeeMarketEIP1559Transaction.fromValuesArray(values, opts);\n    };\n    /**\n     * Instantiate a transaction from the serialized tx.\n     * (alias of {@link FeeMarketEIP1559Transaction.fromSerializedTx})\n     *\n     * Note: This means that the Buffer should start with 0x01.\n     *\n     * @deprecated this constructor alias is deprecated and will be removed\n     * in favor of the {@link FeeMarketEIP1559Transaction.fromSerializedTx} constructor\n     */\n    FeeMarketEIP1559Transaction.fromRlpSerializedTx = function (serialized, opts) {\n        if (opts === void 0) { opts = {}; }\n        return FeeMarketEIP1559Transaction.fromSerializedTx(serialized, opts);\n    };\n    /**\n     * Create a transaction from a values array.\n     *\n     * Format: `[chainId, nonce, maxPriorityFeePerGas, maxFeePerGas, gasLimit, to, value, data,\n     * accessList, signatureYParity, signatureR, signatureS]`\n     */\n    FeeMarketEIP1559Transaction.fromValuesArray = function (values, opts) {\n        if (opts === void 0) { opts = {}; }\n        if (values.length !== 9 && values.length !== 12) {\n            throw new Error('Invalid EIP-1559 transaction. Only expecting 9 values (for unsigned tx) or 12 values (for signed tx).');\n        }\n        var _a = __read(values, 12), chainId = _a[0], nonce = _a[1], maxPriorityFeePerGas = _a[2], maxFeePerGas = _a[3], gasLimit = _a[4], to = _a[5], value = _a[6], data = _a[7], accessList = _a[8], v = _a[9], r = _a[10], s = _a[11];\n        (0, ethereumjs_util_1.validateNoLeadingZeroes)({ nonce: nonce, maxPriorityFeePerGas: maxPriorityFeePerGas, maxFeePerGas: maxFeePerGas, gasLimit: gasLimit, value: value, v: v, r: r, s: s });\n        return new FeeMarketEIP1559Transaction({\n            chainId: new ethereumjs_util_1.BN(chainId),\n            nonce: nonce,\n            maxPriorityFeePerGas: maxPriorityFeePerGas,\n            maxFeePerGas: maxFeePerGas,\n            gasLimit: gasLimit,\n            to: to,\n            value: value,\n            data: data,\n            accessList: accessList !== null && accessList !== void 0 ? accessList : [],\n            v: v !== undefined ? new ethereumjs_util_1.BN(v) : undefined,\n            r: r,\n            s: s,\n        }, opts);\n    };\n    /**\n     * The amount of gas paid for the data in this tx\n     */\n    FeeMarketEIP1559Transaction.prototype.getDataFee = function () {\n        if (this.cache.dataFee && this.cache.dataFee.hardfork === this.common.hardfork()) {\n            return this.cache.dataFee.value;\n        }\n        var cost = _super.prototype.getDataFee.call(this);\n        cost.iaddn(util_1.AccessLists.getDataFeeEIP2930(this.accessList, this.common));\n        if (Object.isFrozen(this)) {\n            this.cache.dataFee = {\n                value: cost,\n                hardfork: this.common.hardfork(),\n            };\n        }\n        return cost;\n    };\n    /**\n     * The up front amount that an account must have for this transaction to be valid\n     * @param baseFee The base fee of the block (will be set to 0 if not provided)\n     */\n    FeeMarketEIP1559Transaction.prototype.getUpfrontCost = function (baseFee) {\n        if (baseFee === void 0) { baseFee = new ethereumjs_util_1.BN(0); }\n        var inclusionFeePerGas = ethereumjs_util_1.BN.min(this.maxPriorityFeePerGas, this.maxFeePerGas.sub(baseFee));\n        var gasPrice = inclusionFeePerGas.add(baseFee);\n        return this.gasLimit.mul(gasPrice).add(this.value);\n    };\n    /**\n     * Returns a Buffer Array of the raw Buffers of the EIP-1559 transaction, in order.\n     *\n     * Format: `[chainId, nonce, maxPriorityFeePerGas, maxFeePerGas, gasLimit, to, value, data,\n     * accessList, signatureYParity, signatureR, signatureS]`\n     *\n     * Use {@link FeeMarketEIP1559Transaction.serialize} to add a transaction to a block\n     * with {@link Block.fromValuesArray}.\n     *\n     * For an unsigned tx this method uses the empty Buffer values for the\n     * signature parameters `v`, `r` and `s` for encoding. For an EIP-155 compliant\n     * representation for external signing use {@link FeeMarketEIP1559Transaction.getMessageToSign}.\n     */\n    FeeMarketEIP1559Transaction.prototype.raw = function () {\n        return [\n            (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.chainId),\n            (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.nonce),\n            (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.maxPriorityFeePerGas),\n            (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.maxFeePerGas),\n            (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.gasLimit),\n            this.to !== undefined ? this.to.buf : Buffer.from([]),\n            (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.value),\n            this.data,\n            this.accessList,\n            this.v !== undefined ? (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.v) : Buffer.from([]),\n            this.r !== undefined ? (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.r) : Buffer.from([]),\n            this.s !== undefined ? (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.s) : Buffer.from([]),\n        ];\n    };\n    /**\n     * Returns the serialized encoding of the EIP-1559 transaction.\n     *\n     * Format: `0x02 || rlp([chainId, nonce, maxPriorityFeePerGas, maxFeePerGas, gasLimit, to, value, data,\n     * accessList, signatureYParity, signatureR, signatureS])`\n     *\n     * Note that in contrast to the legacy tx serialization format this is not\n     * valid RLP any more due to the raw tx type preceding and concatenated to\n     * the RLP encoding of the values.\n     */\n    FeeMarketEIP1559Transaction.prototype.serialize = function () {\n        var base = this.raw();\n        return Buffer.concat([TRANSACTION_TYPE_BUFFER, ethereumjs_util_1.rlp.encode(base)]);\n    };\n    /**\n     * Returns the serialized unsigned tx (hashed or raw), which can be used\n     * to sign the transaction (e.g. for sending to a hardware wallet).\n     *\n     * Note: in contrast to the legacy tx the raw message format is already\n     * serialized and doesn't need to be RLP encoded any more.\n     *\n     * ```javascript\n     * const serializedMessage = tx.getMessageToSign(false) // use this for the HW wallet input\n     * ```\n     *\n     * @param hashMessage - Return hashed message if set to true (default: true)\n     */\n    FeeMarketEIP1559Transaction.prototype.getMessageToSign = function (hashMessage) {\n        if (hashMessage === void 0) { hashMessage = true; }\n        var base = this.raw().slice(0, 9);\n        var message = Buffer.concat([TRANSACTION_TYPE_BUFFER, ethereumjs_util_1.rlp.encode(base)]);\n        if (hashMessage) {\n            return (0, ethereumjs_util_1.keccak256)(message);\n        }\n        else {\n            return message;\n        }\n    };\n    /**\n     * Computes a sha3-256 hash of the serialized tx.\n     *\n     * This method can only be used for signed txs (it throws otherwise).\n     * Use {@link FeeMarketEIP1559Transaction.getMessageToSign} to get a tx hash for the purpose of signing.\n     */\n    FeeMarketEIP1559Transaction.prototype.hash = function () {\n        if (!this.isSigned()) {\n            var msg = this._errorMsg('Cannot call hash method if transaction is not signed');\n            throw new Error(msg);\n        }\n        if (Object.isFrozen(this)) {\n            if (!this.cache.hash) {\n                this.cache.hash = (0, ethereumjs_util_1.keccak256)(this.serialize());\n            }\n            return this.cache.hash;\n        }\n        return (0, ethereumjs_util_1.keccak256)(this.serialize());\n    };\n    /**\n     * Computes a sha3-256 hash which can be used to verify the signature\n     */\n    FeeMarketEIP1559Transaction.prototype.getMessageToVerifySignature = function () {\n        return this.getMessageToSign();\n    };\n    /**\n     * Returns the public key of the sender\n     */\n    FeeMarketEIP1559Transaction.prototype.getSenderPublicKey = function () {\n        var _a;\n        if (!this.isSigned()) {\n            var msg = this._errorMsg('Cannot call this method if transaction is not signed');\n            throw new Error(msg);\n        }\n        var msgHash = this.getMessageToVerifySignature();\n        // EIP-2: All transaction signatures whose s-value is greater than secp256k1n/2 are considered invalid.\n        // Reasoning: https://ethereum.stackexchange.com/a/55728\n        if (this.common.gteHardfork('homestead') && ((_a = this.s) === null || _a === void 0 ? void 0 : _a.gt(types_1.N_DIV_2))) {\n            var msg = this._errorMsg('Invalid Signature: s-values greater than secp256k1n/2 are considered invalid');\n            throw new Error(msg);\n        }\n        var _b = this, v = _b.v, r = _b.r, s = _b.s;\n        try {\n            return (0, ethereumjs_util_1.ecrecover)(msgHash, v.addn(27), // Recover the 27 which was stripped from ecsign\n            (0, ethereumjs_util_1.bnToUnpaddedBuffer)(r), (0, ethereumjs_util_1.bnToUnpaddedBuffer)(s));\n        }\n        catch (e) {\n            var msg = this._errorMsg('Invalid Signature');\n            throw new Error(msg);\n        }\n    };\n    FeeMarketEIP1559Transaction.prototype._processSignature = function (v, r, s) {\n        var opts = __assign(__assign({}, this.txOptions), { common: this.common });\n        return FeeMarketEIP1559Transaction.fromTxData({\n            chainId: this.chainId,\n            nonce: this.nonce,\n            maxPriorityFeePerGas: this.maxPriorityFeePerGas,\n            maxFeePerGas: this.maxFeePerGas,\n            gasLimit: this.gasLimit,\n            to: this.to,\n            value: this.value,\n            data: this.data,\n            accessList: this.accessList,\n            v: new ethereumjs_util_1.BN(v - 27),\n            r: new ethereumjs_util_1.BN(r),\n            s: new ethereumjs_util_1.BN(s),\n        }, opts);\n    };\n    /**\n     * Returns an object with the JSON representation of the transaction\n     */\n    FeeMarketEIP1559Transaction.prototype.toJSON = function () {\n        var accessListJSON = util_1.AccessLists.getAccessListJSON(this.accessList);\n        return {\n            chainId: (0, ethereumjs_util_1.bnToHex)(this.chainId),\n            nonce: (0, ethereumjs_util_1.bnToHex)(this.nonce),\n            maxPriorityFeePerGas: (0, ethereumjs_util_1.bnToHex)(this.maxPriorityFeePerGas),\n            maxFeePerGas: (0, ethereumjs_util_1.bnToHex)(this.maxFeePerGas),\n            gasLimit: (0, ethereumjs_util_1.bnToHex)(this.gasLimit),\n            to: this.to !== undefined ? this.to.toString() : undefined,\n            value: (0, ethereumjs_util_1.bnToHex)(this.value),\n            data: '0x' + this.data.toString('hex'),\n            accessList: accessListJSON,\n            v: this.v !== undefined ? (0, ethereumjs_util_1.bnToHex)(this.v) : undefined,\n            r: this.r !== undefined ? (0, ethereumjs_util_1.bnToHex)(this.r) : undefined,\n            s: this.s !== undefined ? (0, ethereumjs_util_1.bnToHex)(this.s) : undefined,\n        };\n    };\n    /**\n     * Return a compact error string representation of the object\n     */\n    FeeMarketEIP1559Transaction.prototype.errorStr = function () {\n        var errorStr = this._getSharedErrorPostfix();\n        errorStr += \" maxFeePerGas=\".concat(this.maxFeePerGas, \" maxPriorityFeePerGas=\").concat(this.maxPriorityFeePerGas);\n        return errorStr;\n    };\n    /**\n     * Internal helper function to create an annotated error message\n     *\n     * @param msg Base error message\n     * @hidden\n     */\n    FeeMarketEIP1559Transaction.prototype._errorMsg = function (msg) {\n        return \"\".concat(msg, \" (\").concat(this.errorStr(), \")\");\n    };\n    return FeeMarketEIP1559Transaction;\n}(baseTransaction_1.BaseTransaction));\nexports[\"default\"] = FeeMarketEIP1559Transaction;\n//# sourceMappingURL=eip1559Transaction.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@web3auth/ethereum-provider/node_modules/@ethereumjs/tx/dist.browser/eip1559Transaction.js\n");

/***/ }),

/***/ "./node_modules/@web3auth/ethereum-provider/node_modules/@ethereumjs/tx/dist.browser/eip2930Transaction.js":
/*!*****************************************************************************************************************!*\
  !*** ./node_modules/@web3auth/ethereum-provider/node_modules/@ethereumjs/tx/dist.browser/eip2930Transaction.js ***!
  \*****************************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"./node_modules/buffer/index.js\")[\"Buffer\"];\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar ethereumjs_util_1 = __webpack_require__(/*! ethereumjs-util */ \"./node_modules/@web3auth/ethereum-provider/node_modules/ethereumjs-util/dist.browser/index.js\");\nvar baseTransaction_1 = __webpack_require__(/*! ./baseTransaction */ \"./node_modules/@web3auth/ethereum-provider/node_modules/@ethereumjs/tx/dist.browser/baseTransaction.js\");\nvar types_1 = __webpack_require__(/*! ./types */ \"./node_modules/@web3auth/ethereum-provider/node_modules/@ethereumjs/tx/dist.browser/types.js\");\nvar util_1 = __webpack_require__(/*! ./util */ \"./node_modules/@web3auth/ethereum-provider/node_modules/@ethereumjs/tx/dist.browser/util.js\");\nvar TRANSACTION_TYPE = 1;\nvar TRANSACTION_TYPE_BUFFER = Buffer.from(TRANSACTION_TYPE.toString(16).padStart(2, '0'), 'hex');\n/**\n * Typed transaction with optional access lists\n *\n * - TransactionType: 1\n * - EIP: [EIP-2930](https://eips.ethereum.org/EIPS/eip-2930)\n */\nvar AccessListEIP2930Transaction = /** @class */ (function (_super) {\n    __extends(AccessListEIP2930Transaction, _super);\n    /**\n     * This constructor takes the values, validates them, assigns them and freezes the object.\n     *\n     * It is not recommended to use this constructor directly. Instead use\n     * the static factory methods to assist in creating a Transaction object from\n     * varying data types.\n     */\n    function AccessListEIP2930Transaction(txData, opts) {\n        if (opts === void 0) { opts = {}; }\n        var _this = this;\n        var _a, _b;\n        _this = _super.call(this, __assign(__assign({}, txData), { type: TRANSACTION_TYPE }), opts) || this;\n        /**\n         * The default HF if the tx type is active on that HF\n         * or the first greater HF where the tx is active.\n         *\n         * @hidden\n         */\n        _this.DEFAULT_HARDFORK = 'berlin';\n        var chainId = txData.chainId, accessList = txData.accessList, gasPrice = txData.gasPrice;\n        _this.common = _this._getCommon(opts.common, chainId);\n        _this.chainId = _this.common.chainIdBN();\n        // EIP-2718 check is done in Common\n        if (!_this.common.isActivatedEIP(2930)) {\n            throw new Error('EIP-2930 not enabled on Common');\n        }\n        _this.activeCapabilities = _this.activeCapabilities.concat([2718, 2930]);\n        // Populate the access list fields\n        var accessListData = util_1.AccessLists.getAccessListData(accessList !== null && accessList !== void 0 ? accessList : []);\n        _this.accessList = accessListData.accessList;\n        _this.AccessListJSON = accessListData.AccessListJSON;\n        // Verify the access list format.\n        util_1.AccessLists.verifyAccessList(_this.accessList);\n        _this.gasPrice = new ethereumjs_util_1.BN((0, ethereumjs_util_1.toBuffer)(gasPrice === '' ? '0x' : gasPrice));\n        _this._validateCannotExceedMaxInteger({\n            gasPrice: _this.gasPrice,\n        });\n        if (_this.gasPrice.mul(_this.gasLimit).gt(ethereumjs_util_1.MAX_INTEGER)) {\n            var msg = _this._errorMsg('gasLimit * gasPrice cannot exceed MAX_INTEGER');\n            throw new Error(msg);\n        }\n        if (_this.v && !_this.v.eqn(0) && !_this.v.eqn(1)) {\n            var msg = _this._errorMsg('The y-parity of the transaction should either be 0 or 1');\n            throw new Error(msg);\n        }\n        if (_this.common.gteHardfork('homestead') && ((_a = _this.s) === null || _a === void 0 ? void 0 : _a.gt(types_1.N_DIV_2))) {\n            var msg = _this._errorMsg('Invalid Signature: s-values greater than secp256k1n/2 are considered invalid');\n            throw new Error(msg);\n        }\n        if (_this.common.isActivatedEIP(3860)) {\n            (0, util_1.checkMaxInitCodeSize)(_this.common, _this.data.length);\n        }\n        var freeze = (_b = opts === null || opts === void 0 ? void 0 : opts.freeze) !== null && _b !== void 0 ? _b : true;\n        if (freeze) {\n            Object.freeze(_this);\n        }\n        return _this;\n    }\n    Object.defineProperty(AccessListEIP2930Transaction.prototype, \"senderR\", {\n        /**\n         * EIP-2930 alias for `r`\n         *\n         * @deprecated use `r` instead\n         */\n        get: function () {\n            return this.r;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(AccessListEIP2930Transaction.prototype, \"senderS\", {\n        /**\n         * EIP-2930 alias for `s`\n         *\n         * @deprecated use `s` instead\n         */\n        get: function () {\n            return this.s;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(AccessListEIP2930Transaction.prototype, \"yParity\", {\n        /**\n         * EIP-2930 alias for `v`\n         *\n         * @deprecated use `v` instead\n         */\n        get: function () {\n            return this.v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Instantiate a transaction from a data dictionary.\n     *\n     * Format: { chainId, nonce, gasPrice, gasLimit, to, value, data, accessList,\n     * v, r, s }\n     *\n     * Notes:\n     * - `chainId` will be set automatically if not provided\n     * - All parameters are optional and have some basic default values\n     */\n    AccessListEIP2930Transaction.fromTxData = function (txData, opts) {\n        if (opts === void 0) { opts = {}; }\n        return new AccessListEIP2930Transaction(txData, opts);\n    };\n    /**\n     * Instantiate a transaction from the serialized tx.\n     *\n     * Format: `0x01 || rlp([chainId, nonce, gasPrice, gasLimit, to, value, data, accessList,\n     * signatureYParity (v), signatureR (r), signatureS (s)])`\n     */\n    AccessListEIP2930Transaction.fromSerializedTx = function (serialized, opts) {\n        if (opts === void 0) { opts = {}; }\n        if (!serialized.slice(0, 1).equals(TRANSACTION_TYPE_BUFFER)) {\n            throw new Error(\"Invalid serialized tx input: not an EIP-2930 transaction (wrong tx type, expected: \".concat(TRANSACTION_TYPE, \", received: \").concat(serialized\n                .slice(0, 1)\n                .toString('hex')));\n        }\n        var values = ethereumjs_util_1.rlp.decode(serialized.slice(1));\n        if (!Array.isArray(values)) {\n            throw new Error('Invalid serialized tx input: must be array');\n        }\n        return AccessListEIP2930Transaction.fromValuesArray(values, opts);\n    };\n    /**\n     * Instantiate a transaction from the serialized tx.\n     * (alias of {@link AccessListEIP2930Transaction.fromSerializedTx})\n     *\n     * Note: This means that the Buffer should start with 0x01.\n     *\n     * @deprecated this constructor alias is deprecated and will be removed\n     * in favor of the {@link AccessListEIP2930Transaction.fromSerializedTx} constructor\n     */\n    AccessListEIP2930Transaction.fromRlpSerializedTx = function (serialized, opts) {\n        if (opts === void 0) { opts = {}; }\n        return AccessListEIP2930Transaction.fromSerializedTx(serialized, opts);\n    };\n    /**\n     * Create a transaction from a values array.\n     *\n     * Format: `[chainId, nonce, gasPrice, gasLimit, to, value, data, accessList,\n     * signatureYParity (v), signatureR (r), signatureS (s)]`\n     */\n    AccessListEIP2930Transaction.fromValuesArray = function (values, opts) {\n        if (opts === void 0) { opts = {}; }\n        if (values.length !== 8 && values.length !== 11) {\n            throw new Error('Invalid EIP-2930 transaction. Only expecting 8 values (for unsigned tx) or 11 values (for signed tx).');\n        }\n        var _a = __read(values, 11), chainId = _a[0], nonce = _a[1], gasPrice = _a[2], gasLimit = _a[3], to = _a[4], value = _a[5], data = _a[6], accessList = _a[7], v = _a[8], r = _a[9], s = _a[10];\n        (0, ethereumjs_util_1.validateNoLeadingZeroes)({ nonce: nonce, gasPrice: gasPrice, gasLimit: gasLimit, value: value, v: v, r: r, s: s });\n        var emptyAccessList = [];\n        return new AccessListEIP2930Transaction({\n            chainId: new ethereumjs_util_1.BN(chainId),\n            nonce: nonce,\n            gasPrice: gasPrice,\n            gasLimit: gasLimit,\n            to: to,\n            value: value,\n            data: data,\n            accessList: accessList !== null && accessList !== void 0 ? accessList : emptyAccessList,\n            v: v !== undefined ? new ethereumjs_util_1.BN(v) : undefined,\n            r: r,\n            s: s,\n        }, opts);\n    };\n    /**\n     * The amount of gas paid for the data in this tx\n     */\n    AccessListEIP2930Transaction.prototype.getDataFee = function () {\n        if (this.cache.dataFee && this.cache.dataFee.hardfork === this.common.hardfork()) {\n            return this.cache.dataFee.value;\n        }\n        var cost = _super.prototype.getDataFee.call(this);\n        cost.iaddn(util_1.AccessLists.getDataFeeEIP2930(this.accessList, this.common));\n        if (Object.isFrozen(this)) {\n            this.cache.dataFee = {\n                value: cost,\n                hardfork: this.common.hardfork(),\n            };\n        }\n        return cost;\n    };\n    /**\n     * The up front amount that an account must have for this transaction to be valid\n     */\n    AccessListEIP2930Transaction.prototype.getUpfrontCost = function () {\n        return this.gasLimit.mul(this.gasPrice).add(this.value);\n    };\n    /**\n     * Returns a Buffer Array of the raw Buffers of the EIP-2930 transaction, in order.\n     *\n     * Format: `[chainId, nonce, gasPrice, gasLimit, to, value, data, accessList,\n     * signatureYParity (v), signatureR (r), signatureS (s)]`\n     *\n     * Use {@link AccessListEIP2930Transaction.serialize} to add a transaction to a block\n     * with {@link Block.fromValuesArray}.\n     *\n     * For an unsigned tx this method uses the empty Buffer values for the\n     * signature parameters `v`, `r` and `s` for encoding. For an EIP-155 compliant\n     * representation for external signing use {@link AccessListEIP2930Transaction.getMessageToSign}.\n     */\n    AccessListEIP2930Transaction.prototype.raw = function () {\n        return [\n            (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.chainId),\n            (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.nonce),\n            (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.gasPrice),\n            (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.gasLimit),\n            this.to !== undefined ? this.to.buf : Buffer.from([]),\n            (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.value),\n            this.data,\n            this.accessList,\n            this.v !== undefined ? (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.v) : Buffer.from([]),\n            this.r !== undefined ? (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.r) : Buffer.from([]),\n            this.s !== undefined ? (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.s) : Buffer.from([]),\n        ];\n    };\n    /**\n     * Returns the serialized encoding of the EIP-2930 transaction.\n     *\n     * Format: `0x01 || rlp([chainId, nonce, gasPrice, gasLimit, to, value, data, accessList,\n     * signatureYParity (v), signatureR (r), signatureS (s)])`\n     *\n     * Note that in contrast to the legacy tx serialization format this is not\n     * valid RLP any more due to the raw tx type preceding and concatenated to\n     * the RLP encoding of the values.\n     */\n    AccessListEIP2930Transaction.prototype.serialize = function () {\n        var base = this.raw();\n        return Buffer.concat([TRANSACTION_TYPE_BUFFER, ethereumjs_util_1.rlp.encode(base)]);\n    };\n    /**\n     * Returns the serialized unsigned tx (hashed or raw), which can be used\n     * to sign the transaction (e.g. for sending to a hardware wallet).\n     *\n     * Note: in contrast to the legacy tx the raw message format is already\n     * serialized and doesn't need to be RLP encoded any more.\n     *\n     * ```javascript\n     * const serializedMessage = tx.getMessageToSign(false) // use this for the HW wallet input\n     * ```\n     *\n     * @param hashMessage - Return hashed message if set to true (default: true)\n     */\n    AccessListEIP2930Transaction.prototype.getMessageToSign = function (hashMessage) {\n        if (hashMessage === void 0) { hashMessage = true; }\n        var base = this.raw().slice(0, 8);\n        var message = Buffer.concat([TRANSACTION_TYPE_BUFFER, ethereumjs_util_1.rlp.encode(base)]);\n        if (hashMessage) {\n            return (0, ethereumjs_util_1.keccak256)(message);\n        }\n        else {\n            return message;\n        }\n    };\n    /**\n     * Computes a sha3-256 hash of the serialized tx.\n     *\n     * This method can only be used for signed txs (it throws otherwise).\n     * Use {@link AccessListEIP2930Transaction.getMessageToSign} to get a tx hash for the purpose of signing.\n     */\n    AccessListEIP2930Transaction.prototype.hash = function () {\n        if (!this.isSigned()) {\n            var msg = this._errorMsg('Cannot call hash method if transaction is not signed');\n            throw new Error(msg);\n        }\n        if (Object.isFrozen(this)) {\n            if (!this.cache.hash) {\n                this.cache.hash = (0, ethereumjs_util_1.keccak256)(this.serialize());\n            }\n            return this.cache.hash;\n        }\n        return (0, ethereumjs_util_1.keccak256)(this.serialize());\n    };\n    /**\n     * Computes a sha3-256 hash which can be used to verify the signature\n     */\n    AccessListEIP2930Transaction.prototype.getMessageToVerifySignature = function () {\n        return this.getMessageToSign();\n    };\n    /**\n     * Returns the public key of the sender\n     */\n    AccessListEIP2930Transaction.prototype.getSenderPublicKey = function () {\n        var _a;\n        if (!this.isSigned()) {\n            var msg = this._errorMsg('Cannot call this method if transaction is not signed');\n            throw new Error(msg);\n        }\n        var msgHash = this.getMessageToVerifySignature();\n        // EIP-2: All transaction signatures whose s-value is greater than secp256k1n/2 are considered invalid.\n        // Reasoning: https://ethereum.stackexchange.com/a/55728\n        if (this.common.gteHardfork('homestead') && ((_a = this.s) === null || _a === void 0 ? void 0 : _a.gt(types_1.N_DIV_2))) {\n            var msg = this._errorMsg('Invalid Signature: s-values greater than secp256k1n/2 are considered invalid');\n            throw new Error(msg);\n        }\n        var _b = this, yParity = _b.yParity, r = _b.r, s = _b.s;\n        try {\n            return (0, ethereumjs_util_1.ecrecover)(msgHash, yParity.addn(27), // Recover the 27 which was stripped from ecsign\n            (0, ethereumjs_util_1.bnToUnpaddedBuffer)(r), (0, ethereumjs_util_1.bnToUnpaddedBuffer)(s));\n        }\n        catch (e) {\n            var msg = this._errorMsg('Invalid Signature');\n            throw new Error(msg);\n        }\n    };\n    AccessListEIP2930Transaction.prototype._processSignature = function (v, r, s) {\n        var opts = __assign(__assign({}, this.txOptions), { common: this.common });\n        return AccessListEIP2930Transaction.fromTxData({\n            chainId: this.chainId,\n            nonce: this.nonce,\n            gasPrice: this.gasPrice,\n            gasLimit: this.gasLimit,\n            to: this.to,\n            value: this.value,\n            data: this.data,\n            accessList: this.accessList,\n            v: new ethereumjs_util_1.BN(v - 27),\n            r: new ethereumjs_util_1.BN(r),\n            s: new ethereumjs_util_1.BN(s),\n        }, opts);\n    };\n    /**\n     * Returns an object with the JSON representation of the transaction\n     */\n    AccessListEIP2930Transaction.prototype.toJSON = function () {\n        var accessListJSON = util_1.AccessLists.getAccessListJSON(this.accessList);\n        return {\n            chainId: (0, ethereumjs_util_1.bnToHex)(this.chainId),\n            nonce: (0, ethereumjs_util_1.bnToHex)(this.nonce),\n            gasPrice: (0, ethereumjs_util_1.bnToHex)(this.gasPrice),\n            gasLimit: (0, ethereumjs_util_1.bnToHex)(this.gasLimit),\n            to: this.to !== undefined ? this.to.toString() : undefined,\n            value: (0, ethereumjs_util_1.bnToHex)(this.value),\n            data: '0x' + this.data.toString('hex'),\n            accessList: accessListJSON,\n            v: this.v !== undefined ? (0, ethereumjs_util_1.bnToHex)(this.v) : undefined,\n            r: this.r !== undefined ? (0, ethereumjs_util_1.bnToHex)(this.r) : undefined,\n            s: this.s !== undefined ? (0, ethereumjs_util_1.bnToHex)(this.s) : undefined,\n        };\n    };\n    /**\n     * Return a compact error string representation of the object\n     */\n    AccessListEIP2930Transaction.prototype.errorStr = function () {\n        var _a, _b;\n        var errorStr = this._getSharedErrorPostfix();\n        // Keep ? for this.accessList since this otherwise causes Hardhat E2E tests to fail\n        errorStr += \" gasPrice=\".concat(this.gasPrice, \" accessListCount=\").concat((_b = (_a = this.accessList) === null || _a === void 0 ? void 0 : _a.length) !== null && _b !== void 0 ? _b : 0);\n        return errorStr;\n    };\n    /**\n     * Internal helper function to create an annotated error message\n     *\n     * @param msg Base error message\n     * @hidden\n     */\n    AccessListEIP2930Transaction.prototype._errorMsg = function (msg) {\n        return \"\".concat(msg, \" (\").concat(this.errorStr(), \")\");\n    };\n    return AccessListEIP2930Transaction;\n}(baseTransaction_1.BaseTransaction));\nexports[\"default\"] = AccessListEIP2930Transaction;\n//# sourceMappingURL=eip2930Transaction.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@web3auth/ethereum-provider/node_modules/@ethereumjs/tx/dist.browser/eip2930Transaction.js\n");

/***/ }),

/***/ "./node_modules/@web3auth/ethereum-provider/node_modules/@ethereumjs/tx/dist.browser/index.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/@web3auth/ethereum-provider/node_modules/@ethereumjs/tx/dist.browser/index.js ***!
  \****************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.FeeMarketEIP1559Transaction = exports.TransactionFactory = exports.AccessListEIP2930Transaction = exports.Transaction = void 0;\nvar legacyTransaction_1 = __webpack_require__(/*! ./legacyTransaction */ \"./node_modules/@web3auth/ethereum-provider/node_modules/@ethereumjs/tx/dist.browser/legacyTransaction.js\");\nObject.defineProperty(exports, \"Transaction\", ({ enumerable: true, get: function () { return __importDefault(legacyTransaction_1).default; } }));\nvar eip2930Transaction_1 = __webpack_require__(/*! ./eip2930Transaction */ \"./node_modules/@web3auth/ethereum-provider/node_modules/@ethereumjs/tx/dist.browser/eip2930Transaction.js\");\nObject.defineProperty(exports, \"AccessListEIP2930Transaction\", ({ enumerable: true, get: function () { return __importDefault(eip2930Transaction_1).default; } }));\nvar transactionFactory_1 = __webpack_require__(/*! ./transactionFactory */ \"./node_modules/@web3auth/ethereum-provider/node_modules/@ethereumjs/tx/dist.browser/transactionFactory.js\");\nObject.defineProperty(exports, \"TransactionFactory\", ({ enumerable: true, get: function () { return __importDefault(transactionFactory_1).default; } }));\nvar eip1559Transaction_1 = __webpack_require__(/*! ./eip1559Transaction */ \"./node_modules/@web3auth/ethereum-provider/node_modules/@ethereumjs/tx/dist.browser/eip1559Transaction.js\");\nObject.defineProperty(exports, \"FeeMarketEIP1559Transaction\", ({ enumerable: true, get: function () { return __importDefault(eip1559Transaction_1).default; } }));\n__exportStar(__webpack_require__(/*! ./types */ \"./node_modules/@web3auth/ethereum-provider/node_modules/@ethereumjs/tx/dist.browser/types.js\"), exports);\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHdlYjNhdXRoL2V0aGVyZXVtLXByb3ZpZGVyL25vZGVfbW9kdWxlcy9AZXRoZXJldW1qcy90eC9kaXN0LmJyb3dzZXIvaW5kZXguanMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsb0NBQW9DO0FBQ25EO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZDQUE2QztBQUM3QztBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxtQ0FBbUMsR0FBRywwQkFBMEIsR0FBRyxvQ0FBb0MsR0FBRyxtQkFBbUI7QUFDN0gsMEJBQTBCLG1CQUFPLENBQUMscUlBQXFCO0FBQ3ZELCtDQUE4QyxFQUFFLHFDQUFxQyx3REFBd0QsRUFBQztBQUM5SSwyQkFBMkIsbUJBQU8sQ0FBQyx1SUFBc0I7QUFDekQsZ0VBQStELEVBQUUscUNBQXFDLHlEQUF5RCxFQUFDO0FBQ2hLLDJCQUEyQixtQkFBTyxDQUFDLHVJQUFzQjtBQUN6RCxzREFBcUQsRUFBRSxxQ0FBcUMseURBQXlELEVBQUM7QUFDdEosMkJBQTJCLG1CQUFPLENBQUMsdUlBQXNCO0FBQ3pELCtEQUE4RCxFQUFFLHFDQUFxQyx5REFBeUQsRUFBQztBQUMvSixhQUFhLG1CQUFPLENBQUMsNkdBQVM7QUFDOUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0B3ZWIzYXV0aC9ldGhlcmV1bS1wcm92aWRlci9ub2RlX21vZHVsZXMvQGV0aGVyZXVtanMvdHgvZGlzdC5icm93c2VyL2luZGV4LmpzP2JjYmQiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19jcmVhdGVCaW5kaW5nID0gKHRoaXMgJiYgdGhpcy5fX2NyZWF0ZUJpbmRpbmcpIHx8IChPYmplY3QuY3JlYXRlID8gKGZ1bmN0aW9uKG8sIG0sIGssIGsyKSB7XG4gICAgaWYgKGsyID09PSB1bmRlZmluZWQpIGsyID0gaztcbiAgICB2YXIgZGVzYyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IobSwgayk7XG4gICAgaWYgKCFkZXNjIHx8IChcImdldFwiIGluIGRlc2MgPyAhbS5fX2VzTW9kdWxlIDogZGVzYy53cml0YWJsZSB8fCBkZXNjLmNvbmZpZ3VyYWJsZSkpIHtcbiAgICAgIGRlc2MgPSB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24oKSB7IHJldHVybiBtW2tdOyB9IH07XG4gICAgfVxuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvLCBrMiwgZGVzYyk7XG59KSA6IChmdW5jdGlvbihvLCBtLCBrLCBrMikge1xuICAgIGlmIChrMiA9PT0gdW5kZWZpbmVkKSBrMiA9IGs7XG4gICAgb1trMl0gPSBtW2tdO1xufSkpO1xudmFyIF9fZXhwb3J0U3RhciA9ICh0aGlzICYmIHRoaXMuX19leHBvcnRTdGFyKSB8fCBmdW5jdGlvbihtLCBleHBvcnRzKSB7XG4gICAgZm9yICh2YXIgcCBpbiBtKSBpZiAocCAhPT0gXCJkZWZhdWx0XCIgJiYgIU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChleHBvcnRzLCBwKSkgX19jcmVhdGVCaW5kaW5nKGV4cG9ydHMsIG0sIHApO1xufTtcbnZhciBfX2ltcG9ydERlZmF1bHQgPSAodGhpcyAmJiB0aGlzLl9faW1wb3J0RGVmYXVsdCkgfHwgZnVuY3Rpb24gKG1vZCkge1xuICAgIHJldHVybiAobW9kICYmIG1vZC5fX2VzTW9kdWxlKSA/IG1vZCA6IHsgXCJkZWZhdWx0XCI6IG1vZCB9O1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuRmVlTWFya2V0RUlQMTU1OVRyYW5zYWN0aW9uID0gZXhwb3J0cy5UcmFuc2FjdGlvbkZhY3RvcnkgPSBleHBvcnRzLkFjY2Vzc0xpc3RFSVAyOTMwVHJhbnNhY3Rpb24gPSBleHBvcnRzLlRyYW5zYWN0aW9uID0gdm9pZCAwO1xudmFyIGxlZ2FjeVRyYW5zYWN0aW9uXzEgPSByZXF1aXJlKFwiLi9sZWdhY3lUcmFuc2FjdGlvblwiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIlRyYW5zYWN0aW9uXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBfX2ltcG9ydERlZmF1bHQobGVnYWN5VHJhbnNhY3Rpb25fMSkuZGVmYXVsdDsgfSB9KTtcbnZhciBlaXAyOTMwVHJhbnNhY3Rpb25fMSA9IHJlcXVpcmUoXCIuL2VpcDI5MzBUcmFuc2FjdGlvblwiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIkFjY2Vzc0xpc3RFSVAyOTMwVHJhbnNhY3Rpb25cIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIF9faW1wb3J0RGVmYXVsdChlaXAyOTMwVHJhbnNhY3Rpb25fMSkuZGVmYXVsdDsgfSB9KTtcbnZhciB0cmFuc2FjdGlvbkZhY3RvcnlfMSA9IHJlcXVpcmUoXCIuL3RyYW5zYWN0aW9uRmFjdG9yeVwiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIlRyYW5zYWN0aW9uRmFjdG9yeVwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gX19pbXBvcnREZWZhdWx0KHRyYW5zYWN0aW9uRmFjdG9yeV8xKS5kZWZhdWx0OyB9IH0pO1xudmFyIGVpcDE1NTlUcmFuc2FjdGlvbl8xID0gcmVxdWlyZShcIi4vZWlwMTU1OVRyYW5zYWN0aW9uXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiRmVlTWFya2V0RUlQMTU1OVRyYW5zYWN0aW9uXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBfX2ltcG9ydERlZmF1bHQoZWlwMTU1OVRyYW5zYWN0aW9uXzEpLmRlZmF1bHQ7IH0gfSk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vdHlwZXNcIiksIGV4cG9ydHMpO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@web3auth/ethereum-provider/node_modules/@ethereumjs/tx/dist.browser/index.js\n");

/***/ }),

/***/ "./node_modules/@web3auth/ethereum-provider/node_modules/@ethereumjs/tx/dist.browser/legacyTransaction.js":
/*!****************************************************************************************************************!*\
  !*** ./node_modules/@web3auth/ethereum-provider/node_modules/@ethereumjs/tx/dist.browser/legacyTransaction.js ***!
  \****************************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"./node_modules/buffer/index.js\")[\"Buffer\"];\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar ethereumjs_util_1 = __webpack_require__(/*! ethereumjs-util */ \"./node_modules/@web3auth/ethereum-provider/node_modules/ethereumjs-util/dist.browser/index.js\");\nvar types_1 = __webpack_require__(/*! ./types */ \"./node_modules/@web3auth/ethereum-provider/node_modules/@ethereumjs/tx/dist.browser/types.js\");\nvar baseTransaction_1 = __webpack_require__(/*! ./baseTransaction */ \"./node_modules/@web3auth/ethereum-provider/node_modules/@ethereumjs/tx/dist.browser/baseTransaction.js\");\nvar util_1 = __webpack_require__(/*! ./util */ \"./node_modules/@web3auth/ethereum-provider/node_modules/@ethereumjs/tx/dist.browser/util.js\");\nvar TRANSACTION_TYPE = 0;\n/**\n * An Ethereum non-typed (legacy) transaction\n */\nvar Transaction = /** @class */ (function (_super) {\n    __extends(Transaction, _super);\n    /**\n     * This constructor takes the values, validates them, assigns them and freezes the object.\n     *\n     * It is not recommended to use this constructor directly. Instead use\n     * the static factory methods to assist in creating a Transaction object from\n     * varying data types.\n     */\n    function Transaction(txData, opts) {\n        if (opts === void 0) { opts = {}; }\n        var _this = this;\n        var _a;\n        _this = _super.call(this, __assign(__assign({}, txData), { type: TRANSACTION_TYPE }), opts) || this;\n        _this.common = _this._validateTxV(_this.v, opts.common);\n        _this.gasPrice = new ethereumjs_util_1.BN((0, ethereumjs_util_1.toBuffer)(txData.gasPrice === '' ? '0x' : txData.gasPrice));\n        if (_this.gasPrice.mul(_this.gasLimit).gt(ethereumjs_util_1.MAX_INTEGER)) {\n            var msg = _this._errorMsg('gas limit * gasPrice cannot exceed MAX_INTEGER (2^256-1)');\n            throw new Error(msg);\n        }\n        _this._validateCannotExceedMaxInteger({ gasPrice: _this.gasPrice });\n        if (_this.common.gteHardfork('spuriousDragon')) {\n            if (!_this.isSigned()) {\n                _this.activeCapabilities.push(types_1.Capability.EIP155ReplayProtection);\n            }\n            else {\n                // EIP155 spec:\n                // If block.number >= 2,675,000 and v = CHAIN_ID * 2 + 35 or v = CHAIN_ID * 2 + 36\n                // then when computing the hash of a transaction for purposes of signing or recovering\n                // instead of hashing only the first six elements (i.e. nonce, gasprice, startgas, to, value, data)\n                // hash nine elements, with v replaced by CHAIN_ID, r = 0 and s = 0.\n                var v = _this.v;\n                var chainIdDoubled = _this.common.chainIdBN().muln(2);\n                // v and chain ID meet EIP-155 conditions\n                if (v.eq(chainIdDoubled.addn(35)) || v.eq(chainIdDoubled.addn(36))) {\n                    _this.activeCapabilities.push(types_1.Capability.EIP155ReplayProtection);\n                }\n            }\n        }\n        if (_this.common.isActivatedEIP(3860)) {\n            (0, util_1.checkMaxInitCodeSize)(_this.common, _this.data.length);\n        }\n        var freeze = (_a = opts === null || opts === void 0 ? void 0 : opts.freeze) !== null && _a !== void 0 ? _a : true;\n        if (freeze) {\n            Object.freeze(_this);\n        }\n        return _this;\n    }\n    /**\n     * Instantiate a transaction from a data dictionary.\n     *\n     * Format: { nonce, gasPrice, gasLimit, to, value, data, v, r, s }\n     *\n     * Notes:\n     * - All parameters are optional and have some basic default values\n     */\n    Transaction.fromTxData = function (txData, opts) {\n        if (opts === void 0) { opts = {}; }\n        return new Transaction(txData, opts);\n    };\n    /**\n     * Instantiate a transaction from the serialized tx.\n     *\n     * Format: `rlp([nonce, gasPrice, gasLimit, to, value, data, v, r, s])`\n     */\n    Transaction.fromSerializedTx = function (serialized, opts) {\n        if (opts === void 0) { opts = {}; }\n        var values = ethereumjs_util_1.rlp.decode(serialized);\n        if (!Array.isArray(values)) {\n            throw new Error('Invalid serialized tx input. Must be array');\n        }\n        return this.fromValuesArray(values, opts);\n    };\n    /**\n     * Instantiate a transaction from the serialized tx.\n     * (alias of {@link Transaction.fromSerializedTx})\n     *\n     * @deprecated this constructor alias is deprecated and will be removed\n     * in favor of the {@link Transaction.fromSerializedTx} constructor\n     */\n    Transaction.fromRlpSerializedTx = function (serialized, opts) {\n        if (opts === void 0) { opts = {}; }\n        return Transaction.fromSerializedTx(serialized, opts);\n    };\n    /**\n     * Create a transaction from a values array.\n     *\n     * Format: `[nonce, gasPrice, gasLimit, to, value, data, v, r, s]`\n     */\n    Transaction.fromValuesArray = function (values, opts) {\n        if (opts === void 0) { opts = {}; }\n        // If length is not 6, it has length 9. If v/r/s are empty Buffers, it is still an unsigned transaction\n        // This happens if you get the RLP data from `raw()`\n        if (values.length !== 6 && values.length !== 9) {\n            throw new Error('Invalid transaction. Only expecting 6 values (for unsigned tx) or 9 values (for signed tx).');\n        }\n        var _a = __read(values, 9), nonce = _a[0], gasPrice = _a[1], gasLimit = _a[2], to = _a[3], value = _a[4], data = _a[5], v = _a[6], r = _a[7], s = _a[8];\n        (0, ethereumjs_util_1.validateNoLeadingZeroes)({ nonce: nonce, gasPrice: gasPrice, gasLimit: gasLimit, value: value, v: v, r: r, s: s });\n        return new Transaction({\n            nonce: nonce,\n            gasPrice: gasPrice,\n            gasLimit: gasLimit,\n            to: to,\n            value: value,\n            data: data,\n            v: v,\n            r: r,\n            s: s,\n        }, opts);\n    };\n    /**\n     * Returns a Buffer Array of the raw Buffers of the legacy transaction, in order.\n     *\n     * Format: `[nonce, gasPrice, gasLimit, to, value, data, v, r, s]`\n     *\n     * For legacy txs this is also the correct format to add transactions\n     * to a block with {@link Block.fromValuesArray} (use the `serialize()` method\n     * for typed txs).\n     *\n     * For an unsigned tx this method returns the empty Buffer values\n     * for the signature parameters `v`, `r` and `s`. For an EIP-155 compliant\n     * representation have a look at {@link Transaction.getMessageToSign}.\n     */\n    Transaction.prototype.raw = function () {\n        return [\n            (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.nonce),\n            (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.gasPrice),\n            (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.gasLimit),\n            this.to !== undefined ? this.to.buf : Buffer.from([]),\n            (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.value),\n            this.data,\n            this.v !== undefined ? (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.v) : Buffer.from([]),\n            this.r !== undefined ? (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.r) : Buffer.from([]),\n            this.s !== undefined ? (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.s) : Buffer.from([]),\n        ];\n    };\n    /**\n     * Returns the serialized encoding of the legacy transaction.\n     *\n     * Format: `rlp([nonce, gasPrice, gasLimit, to, value, data, v, r, s])`\n     *\n     * For an unsigned tx this method uses the empty Buffer values for the\n     * signature parameters `v`, `r` and `s` for encoding. For an EIP-155 compliant\n     * representation for external signing use {@link Transaction.getMessageToSign}.\n     */\n    Transaction.prototype.serialize = function () {\n        return ethereumjs_util_1.rlp.encode(this.raw());\n    };\n    Transaction.prototype._getMessageToSign = function () {\n        var values = [\n            (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.nonce),\n            (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.gasPrice),\n            (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.gasLimit),\n            this.to !== undefined ? this.to.buf : Buffer.from([]),\n            (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.value),\n            this.data,\n        ];\n        if (this.supports(types_1.Capability.EIP155ReplayProtection)) {\n            values.push((0, ethereumjs_util_1.toBuffer)(this.common.chainIdBN()));\n            values.push((0, ethereumjs_util_1.unpadBuffer)((0, ethereumjs_util_1.toBuffer)(0)));\n            values.push((0, ethereumjs_util_1.unpadBuffer)((0, ethereumjs_util_1.toBuffer)(0)));\n        }\n        return values;\n    };\n    Transaction.prototype.getMessageToSign = function (hashMessage) {\n        if (hashMessage === void 0) { hashMessage = true; }\n        var message = this._getMessageToSign();\n        if (hashMessage) {\n            return (0, ethereumjs_util_1.rlphash)(message);\n        }\n        else {\n            return message;\n        }\n    };\n    /**\n     * The amount of gas paid for the data in this tx\n     */\n    Transaction.prototype.getDataFee = function () {\n        if (this.cache.dataFee && this.cache.dataFee.hardfork === this.common.hardfork()) {\n            return this.cache.dataFee.value;\n        }\n        if (Object.isFrozen(this)) {\n            this.cache.dataFee = {\n                value: _super.prototype.getDataFee.call(this),\n                hardfork: this.common.hardfork(),\n            };\n        }\n        return _super.prototype.getDataFee.call(this);\n    };\n    /**\n     * The up front amount that an account must have for this transaction to be valid\n     */\n    Transaction.prototype.getUpfrontCost = function () {\n        return this.gasLimit.mul(this.gasPrice).add(this.value);\n    };\n    /**\n     * Computes a sha3-256 hash of the serialized tx.\n     *\n     * This method can only be used for signed txs (it throws otherwise).\n     * Use {@link Transaction.getMessageToSign} to get a tx hash for the purpose of signing.\n     */\n    Transaction.prototype.hash = function () {\n        // In contrast to the tx type transaction implementations the `hash()` function\n        // for the legacy tx does not throw if the tx is not signed.\n        // This has been considered for inclusion but lead to unexpected backwards\n        // compatibility problems (no concrete reference found, needs validation).\n        //\n        // For context see also https://github.com/ethereumjs/ethereumjs-monorepo/pull/1445,\n        // September, 2021 as well as work done before.\n        //\n        // This should be updated along the next major version release by adding:\n        //\n        //if (!this.isSigned()) {\n        //  const msg = this._errorMsg('Cannot call hash method if transaction is not signed')\n        //  throw new Error(msg)\n        //}\n        if (Object.isFrozen(this)) {\n            if (!this.cache.hash) {\n                this.cache.hash = (0, ethereumjs_util_1.rlphash)(this.raw());\n            }\n            return this.cache.hash;\n        }\n        return (0, ethereumjs_util_1.rlphash)(this.raw());\n    };\n    /**\n     * Computes a sha3-256 hash which can be used to verify the signature\n     */\n    Transaction.prototype.getMessageToVerifySignature = function () {\n        if (!this.isSigned()) {\n            var msg = this._errorMsg('This transaction is not signed');\n            throw new Error(msg);\n        }\n        var message = this._getMessageToSign();\n        return (0, ethereumjs_util_1.rlphash)(message);\n    };\n    /**\n     * Returns the public key of the sender\n     */\n    Transaction.prototype.getSenderPublicKey = function () {\n        var _a;\n        var msgHash = this.getMessageToVerifySignature();\n        // EIP-2: All transaction signatures whose s-value is greater than secp256k1n/2 are considered invalid.\n        // Reasoning: https://ethereum.stackexchange.com/a/55728\n        if (this.common.gteHardfork('homestead') && ((_a = this.s) === null || _a === void 0 ? void 0 : _a.gt(types_1.N_DIV_2))) {\n            var msg = this._errorMsg('Invalid Signature: s-values greater than secp256k1n/2 are considered invalid');\n            throw new Error(msg);\n        }\n        var _b = this, v = _b.v, r = _b.r, s = _b.s;\n        try {\n            return (0, ethereumjs_util_1.ecrecover)(msgHash, v, (0, ethereumjs_util_1.bnToUnpaddedBuffer)(r), (0, ethereumjs_util_1.bnToUnpaddedBuffer)(s), this.supports(types_1.Capability.EIP155ReplayProtection) ? this.common.chainIdBN() : undefined);\n        }\n        catch (e) {\n            var msg = this._errorMsg('Invalid Signature');\n            throw new Error(msg);\n        }\n    };\n    /**\n     * Process the v, r, s values from the `sign` method of the base transaction.\n     */\n    Transaction.prototype._processSignature = function (v, r, s) {\n        var vBN = new ethereumjs_util_1.BN(v);\n        if (this.supports(types_1.Capability.EIP155ReplayProtection)) {\n            vBN.iadd(this.common.chainIdBN().muln(2).addn(8));\n        }\n        var opts = __assign(__assign({}, this.txOptions), { common: this.common });\n        return Transaction.fromTxData({\n            nonce: this.nonce,\n            gasPrice: this.gasPrice,\n            gasLimit: this.gasLimit,\n            to: this.to,\n            value: this.value,\n            data: this.data,\n            v: vBN,\n            r: new ethereumjs_util_1.BN(r),\n            s: new ethereumjs_util_1.BN(s),\n        }, opts);\n    };\n    /**\n     * Returns an object with the JSON representation of the transaction.\n     */\n    Transaction.prototype.toJSON = function () {\n        return {\n            nonce: (0, ethereumjs_util_1.bnToHex)(this.nonce),\n            gasPrice: (0, ethereumjs_util_1.bnToHex)(this.gasPrice),\n            gasLimit: (0, ethereumjs_util_1.bnToHex)(this.gasLimit),\n            to: this.to !== undefined ? this.to.toString() : undefined,\n            value: (0, ethereumjs_util_1.bnToHex)(this.value),\n            data: '0x' + this.data.toString('hex'),\n            v: this.v !== undefined ? (0, ethereumjs_util_1.bnToHex)(this.v) : undefined,\n            r: this.r !== undefined ? (0, ethereumjs_util_1.bnToHex)(this.r) : undefined,\n            s: this.s !== undefined ? (0, ethereumjs_util_1.bnToHex)(this.s) : undefined,\n        };\n    };\n    /**\n     * Validates tx's `v` value\n     */\n    Transaction.prototype._validateTxV = function (v, common) {\n        // Check for valid v values in the scope of a signed legacy tx\n        if (v !== undefined) {\n            // v is 1. not matching the EIP-155 chainId included case and...\n            // v is 2. not matching the classic v=27 or v=28 case\n            if (v.ltn(37) && !v.eqn(27) && !v.eqn(28)) {\n                throw new Error(\"Legacy txs need either v = 27/28 or v >= 37 (EIP-155 replay protection), got v = \".concat(v));\n            }\n        }\n        var chainIdBN;\n        // No unsigned tx and EIP-155 activated and chain ID included\n        if (v !== undefined &&\n            (!common || common.gteHardfork('spuriousDragon')) &&\n            !v.eqn(27) &&\n            !v.eqn(28)) {\n            if (common) {\n                var chainIdDoubled = common.chainIdBN().muln(2);\n                var isValidEIP155V = v.eq(chainIdDoubled.addn(35)) || v.eq(chainIdDoubled.addn(36));\n                if (!isValidEIP155V) {\n                    throw new Error(\"Incompatible EIP155-based V \".concat(v, \" and chain id \").concat(common.chainIdBN(), \". See the Common parameter of the Transaction constructor to set the chain id.\"));\n                }\n            }\n            else {\n                // Derive the original chain ID\n                var numSub = void 0;\n                if (v.subn(35).isEven()) {\n                    numSub = 35;\n                }\n                else {\n                    numSub = 36;\n                }\n                // Use derived chain ID to create a proper Common\n                chainIdBN = v.subn(numSub).divn(2);\n            }\n        }\n        return this._getCommon(common, chainIdBN);\n    };\n    /**\n     * @deprecated if you have called this internal method please use `tx.supports(Capabilities.EIP155ReplayProtection)` instead\n     */\n    Transaction.prototype._unsignedTxImplementsEIP155 = function () {\n        return this.common.gteHardfork('spuriousDragon');\n    };\n    /**\n     * @deprecated if you have called this internal method please use `tx.supports(Capabilities.EIP155ReplayProtection)` instead\n     */\n    Transaction.prototype._signedTxImplementsEIP155 = function () {\n        if (!this.isSigned()) {\n            var msg = this._errorMsg('This transaction is not signed');\n            throw new Error(msg);\n        }\n        var onEIP155BlockOrLater = this.common.gteHardfork('spuriousDragon');\n        // EIP155 spec:\n        // If block.number >= 2,675,000 and v = CHAIN_ID * 2 + 35 or v = CHAIN_ID * 2 + 36, then when computing the hash of a transaction for purposes of signing or recovering, instead of hashing only the first six elements (i.e. nonce, gasprice, startgas, to, value, data), hash nine elements, with v replaced by CHAIN_ID, r = 0 and s = 0.\n        var v = this.v;\n        var chainIdDoubled = this.common.chainIdBN().muln(2);\n        var vAndChainIdMeetEIP155Conditions = v.eq(chainIdDoubled.addn(35)) || v.eq(chainIdDoubled.addn(36));\n        return vAndChainIdMeetEIP155Conditions && onEIP155BlockOrLater;\n    };\n    /**\n     * Return a compact error string representation of the object\n     */\n    Transaction.prototype.errorStr = function () {\n        var errorStr = this._getSharedErrorPostfix();\n        errorStr += \" gasPrice=\".concat(this.gasPrice);\n        return errorStr;\n    };\n    /**\n     * Internal helper function to create an annotated error message\n     *\n     * @param msg Base error message\n     * @hidden\n     */\n    Transaction.prototype._errorMsg = function (msg) {\n        return \"\".concat(msg, \" (\").concat(this.errorStr(), \")\");\n    };\n    return Transaction;\n}(baseTransaction_1.BaseTransaction));\nexports[\"default\"] = Transaction;\n//# sourceMappingURL=legacyTransaction.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@web3auth/ethereum-provider/node_modules/@ethereumjs/tx/dist.browser/legacyTransaction.js\n");

/***/ }),

/***/ "./node_modules/@web3auth/ethereum-provider/node_modules/@ethereumjs/tx/dist.browser/transactionFactory.js":
/*!*****************************************************************************************************************!*\
  !*** ./node_modules/@web3auth/ethereum-provider/node_modules/@ethereumjs/tx/dist.browser/transactionFactory.js ***!
  \*****************************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"./node_modules/buffer/index.js\")[\"Buffer\"];\n\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar ethereumjs_util_1 = __webpack_require__(/*! ethereumjs-util */ \"./node_modules/@web3auth/ethereum-provider/node_modules/ethereumjs-util/dist.browser/index.js\");\nvar _1 = __webpack_require__(/*! . */ \"./node_modules/@web3auth/ethereum-provider/node_modules/@ethereumjs/tx/dist.browser/index.js\");\nvar TransactionFactory = /** @class */ (function () {\n    // It is not possible to instantiate a TransactionFactory object.\n    function TransactionFactory() {\n    }\n    /**\n     * Create a transaction from a `txData` object\n     *\n     * @param txData - The transaction data. The `type` field will determine which transaction type is returned (if undefined, creates a legacy transaction)\n     * @param txOptions - Options to pass on to the constructor of the transaction\n     */\n    TransactionFactory.fromTxData = function (txData, txOptions) {\n        if (txOptions === void 0) { txOptions = {}; }\n        if (!('type' in txData) || txData.type === undefined) {\n            // Assume legacy transaction\n            return _1.Transaction.fromTxData(txData, txOptions);\n        }\n        else {\n            var txType = new ethereumjs_util_1.BN((0, ethereumjs_util_1.toBuffer)(txData.type)).toNumber();\n            if (txType === 0) {\n                return _1.Transaction.fromTxData(txData, txOptions);\n            }\n            else if (txType === 1) {\n                return _1.AccessListEIP2930Transaction.fromTxData(txData, txOptions);\n            }\n            else if (txType === 2) {\n                return _1.FeeMarketEIP1559Transaction.fromTxData(txData, txOptions);\n            }\n            else {\n                throw new Error(\"Tx instantiation with type \".concat(txType, \" not supported\"));\n            }\n        }\n    };\n    /**\n     * This method tries to decode serialized data.\n     *\n     * @param data - The data Buffer\n     * @param txOptions - The transaction options\n     */\n    TransactionFactory.fromSerializedData = function (data, txOptions) {\n        if (txOptions === void 0) { txOptions = {}; }\n        if (data[0] <= 0x7f) {\n            // Determine the type.\n            var EIP = void 0;\n            switch (data[0]) {\n                case 1:\n                    EIP = 2930;\n                    break;\n                case 2:\n                    EIP = 1559;\n                    break;\n                default:\n                    throw new Error(\"TypedTransaction with ID \".concat(data[0], \" unknown\"));\n            }\n            if (EIP === 1559) {\n                return _1.FeeMarketEIP1559Transaction.fromSerializedTx(data, txOptions);\n            }\n            else {\n                // EIP === 2930\n                return _1.AccessListEIP2930Transaction.fromSerializedTx(data, txOptions);\n            }\n        }\n        else {\n            return _1.Transaction.fromSerializedTx(data, txOptions);\n        }\n    };\n    /**\n     * When decoding a BlockBody, in the transactions field, a field is either:\n     * A Buffer (a TypedTransaction - encoded as TransactionType || rlp(TransactionPayload))\n     * A Buffer[] (Legacy Transaction)\n     * This method returns the right transaction.\n     *\n     * @param data - A Buffer or Buffer[]\n     * @param txOptions - The transaction options\n     */\n    TransactionFactory.fromBlockBodyData = function (data, txOptions) {\n        if (txOptions === void 0) { txOptions = {}; }\n        if (Buffer.isBuffer(data)) {\n            return this.fromSerializedData(data, txOptions);\n        }\n        else if (Array.isArray(data)) {\n            // It is a legacy transaction\n            return _1.Transaction.fromValuesArray(data, txOptions);\n        }\n        else {\n            throw new Error('Cannot decode transaction: unknown type input');\n        }\n    };\n    /**\n     * This helper method allows one to retrieve the class which matches the transactionID\n     * If transactionID is undefined, returns the legacy transaction class.\n     * @deprecated - This method is deprecated and will be removed on the next major release\n     * @param transactionID\n     * @param _common - This option is not used\n     */\n    TransactionFactory.getTransactionClass = function (transactionID, _common) {\n        if (transactionID === void 0) { transactionID = 0; }\n        var legacyTxn = transactionID == 0 || (transactionID >= 0x80 && transactionID <= 0xff);\n        if (legacyTxn) {\n            return _1.Transaction;\n        }\n        switch (transactionID) {\n            case 1:\n                return _1.AccessListEIP2930Transaction;\n            case 2:\n                return _1.FeeMarketEIP1559Transaction;\n            default:\n                throw new Error(\"TypedTransaction with ID \".concat(transactionID, \" unknown\"));\n        }\n    };\n    return TransactionFactory;\n}());\nexports[\"default\"] = TransactionFactory;\n//# sourceMappingURL=transactionFactory.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHdlYjNhdXRoL2V0aGVyZXVtLXByb3ZpZGVyL25vZGVfbW9kdWxlcy9AZXRoZXJldW1qcy90eC9kaXN0LmJyb3dzZXIvdHJhbnNhY3Rpb25GYWN0b3J5LmpzLmpzIiwibWFwcGluZ3MiOiI7QUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCx3QkFBd0IsbUJBQU8sQ0FBQyxzSEFBaUI7QUFDakQsU0FBUyxtQkFBTyxDQUFDLHVHQUFHO0FBQ3BCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQ0FBb0M7QUFDcEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0NBQW9DO0FBQ3BDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQ0FBb0M7QUFDcEMsWUFBWSxNQUFNO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdDQUF3QztBQUN4QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNELGtCQUFlO0FBQ2YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0B3ZWIzYXV0aC9ldGhlcmV1bS1wcm92aWRlci9ub2RlX21vZHVsZXMvQGV0aGVyZXVtanMvdHgvZGlzdC5icm93c2VyL3RyYW5zYWN0aW9uRmFjdG9yeS5qcz8xOWFhIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xudmFyIGV0aGVyZXVtanNfdXRpbF8xID0gcmVxdWlyZShcImV0aGVyZXVtanMtdXRpbFwiKTtcbnZhciBfMSA9IHJlcXVpcmUoXCIuXCIpO1xudmFyIFRyYW5zYWN0aW9uRmFjdG9yeSA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcbiAgICAvLyBJdCBpcyBub3QgcG9zc2libGUgdG8gaW5zdGFudGlhdGUgYSBUcmFuc2FjdGlvbkZhY3Rvcnkgb2JqZWN0LlxuICAgIGZ1bmN0aW9uIFRyYW5zYWN0aW9uRmFjdG9yeSgpIHtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQ3JlYXRlIGEgdHJhbnNhY3Rpb24gZnJvbSBhIGB0eERhdGFgIG9iamVjdFxuICAgICAqXG4gICAgICogQHBhcmFtIHR4RGF0YSAtIFRoZSB0cmFuc2FjdGlvbiBkYXRhLiBUaGUgYHR5cGVgIGZpZWxkIHdpbGwgZGV0ZXJtaW5lIHdoaWNoIHRyYW5zYWN0aW9uIHR5cGUgaXMgcmV0dXJuZWQgKGlmIHVuZGVmaW5lZCwgY3JlYXRlcyBhIGxlZ2FjeSB0cmFuc2FjdGlvbilcbiAgICAgKiBAcGFyYW0gdHhPcHRpb25zIC0gT3B0aW9ucyB0byBwYXNzIG9uIHRvIHRoZSBjb25zdHJ1Y3RvciBvZiB0aGUgdHJhbnNhY3Rpb25cbiAgICAgKi9cbiAgICBUcmFuc2FjdGlvbkZhY3RvcnkuZnJvbVR4RGF0YSA9IGZ1bmN0aW9uICh0eERhdGEsIHR4T3B0aW9ucykge1xuICAgICAgICBpZiAodHhPcHRpb25zID09PSB2b2lkIDApIHsgdHhPcHRpb25zID0ge307IH1cbiAgICAgICAgaWYgKCEoJ3R5cGUnIGluIHR4RGF0YSkgfHwgdHhEYXRhLnR5cGUgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgLy8gQXNzdW1lIGxlZ2FjeSB0cmFuc2FjdGlvblxuICAgICAgICAgICAgcmV0dXJuIF8xLlRyYW5zYWN0aW9uLmZyb21UeERhdGEodHhEYXRhLCB0eE9wdGlvbnMpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgdmFyIHR4VHlwZSA9IG5ldyBldGhlcmV1bWpzX3V0aWxfMS5CTigoMCwgZXRoZXJldW1qc191dGlsXzEudG9CdWZmZXIpKHR4RGF0YS50eXBlKSkudG9OdW1iZXIoKTtcbiAgICAgICAgICAgIGlmICh0eFR5cGUgPT09IDApIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gXzEuVHJhbnNhY3Rpb24uZnJvbVR4RGF0YSh0eERhdGEsIHR4T3B0aW9ucyk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIGlmICh0eFR5cGUgPT09IDEpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gXzEuQWNjZXNzTGlzdEVJUDI5MzBUcmFuc2FjdGlvbi5mcm9tVHhEYXRhKHR4RGF0YSwgdHhPcHRpb25zKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2UgaWYgKHR4VHlwZSA9PT0gMikge1xuICAgICAgICAgICAgICAgIHJldHVybiBfMS5GZWVNYXJrZXRFSVAxNTU5VHJhbnNhY3Rpb24uZnJvbVR4RGF0YSh0eERhdGEsIHR4T3B0aW9ucyk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJUeCBpbnN0YW50aWF0aW9uIHdpdGggdHlwZSBcIi5jb25jYXQodHhUeXBlLCBcIiBub3Qgc3VwcG9ydGVkXCIpKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH07XG4gICAgLyoqXG4gICAgICogVGhpcyBtZXRob2QgdHJpZXMgdG8gZGVjb2RlIHNlcmlhbGl6ZWQgZGF0YS5cbiAgICAgKlxuICAgICAqIEBwYXJhbSBkYXRhIC0gVGhlIGRhdGEgQnVmZmVyXG4gICAgICogQHBhcmFtIHR4T3B0aW9ucyAtIFRoZSB0cmFuc2FjdGlvbiBvcHRpb25zXG4gICAgICovXG4gICAgVHJhbnNhY3Rpb25GYWN0b3J5LmZyb21TZXJpYWxpemVkRGF0YSA9IGZ1bmN0aW9uIChkYXRhLCB0eE9wdGlvbnMpIHtcbiAgICAgICAgaWYgKHR4T3B0aW9ucyA9PT0gdm9pZCAwKSB7IHR4T3B0aW9ucyA9IHt9OyB9XG4gICAgICAgIGlmIChkYXRhWzBdIDw9IDB4N2YpIHtcbiAgICAgICAgICAgIC8vIERldGVybWluZSB0aGUgdHlwZS5cbiAgICAgICAgICAgIHZhciBFSVAgPSB2b2lkIDA7XG4gICAgICAgICAgICBzd2l0Y2ggKGRhdGFbMF0pIHtcbiAgICAgICAgICAgICAgICBjYXNlIDE6XG4gICAgICAgICAgICAgICAgICAgIEVJUCA9IDI5MzA7XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIGNhc2UgMjpcbiAgICAgICAgICAgICAgICAgICAgRUlQID0gMTU1OTtcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiVHlwZWRUcmFuc2FjdGlvbiB3aXRoIElEIFwiLmNvbmNhdChkYXRhWzBdLCBcIiB1bmtub3duXCIpKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChFSVAgPT09IDE1NTkpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gXzEuRmVlTWFya2V0RUlQMTU1OVRyYW5zYWN0aW9uLmZyb21TZXJpYWxpemVkVHgoZGF0YSwgdHhPcHRpb25zKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIC8vIEVJUCA9PT0gMjkzMFxuICAgICAgICAgICAgICAgIHJldHVybiBfMS5BY2Nlc3NMaXN0RUlQMjkzMFRyYW5zYWN0aW9uLmZyb21TZXJpYWxpemVkVHgoZGF0YSwgdHhPcHRpb25zKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHJldHVybiBfMS5UcmFuc2FjdGlvbi5mcm9tU2VyaWFsaXplZFR4KGRhdGEsIHR4T3B0aW9ucyk7XG4gICAgICAgIH1cbiAgICB9O1xuICAgIC8qKlxuICAgICAqIFdoZW4gZGVjb2RpbmcgYSBCbG9ja0JvZHksIGluIHRoZSB0cmFuc2FjdGlvbnMgZmllbGQsIGEgZmllbGQgaXMgZWl0aGVyOlxuICAgICAqIEEgQnVmZmVyIChhIFR5cGVkVHJhbnNhY3Rpb24gLSBlbmNvZGVkIGFzIFRyYW5zYWN0aW9uVHlwZSB8fCBybHAoVHJhbnNhY3Rpb25QYXlsb2FkKSlcbiAgICAgKiBBIEJ1ZmZlcltdIChMZWdhY3kgVHJhbnNhY3Rpb24pXG4gICAgICogVGhpcyBtZXRob2QgcmV0dXJucyB0aGUgcmlnaHQgdHJhbnNhY3Rpb24uXG4gICAgICpcbiAgICAgKiBAcGFyYW0gZGF0YSAtIEEgQnVmZmVyIG9yIEJ1ZmZlcltdXG4gICAgICogQHBhcmFtIHR4T3B0aW9ucyAtIFRoZSB0cmFuc2FjdGlvbiBvcHRpb25zXG4gICAgICovXG4gICAgVHJhbnNhY3Rpb25GYWN0b3J5LmZyb21CbG9ja0JvZHlEYXRhID0gZnVuY3Rpb24gKGRhdGEsIHR4T3B0aW9ucykge1xuICAgICAgICBpZiAodHhPcHRpb25zID09PSB2b2lkIDApIHsgdHhPcHRpb25zID0ge307IH1cbiAgICAgICAgaWYgKEJ1ZmZlci5pc0J1ZmZlcihkYXRhKSkge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuZnJvbVNlcmlhbGl6ZWREYXRhKGRhdGEsIHR4T3B0aW9ucyk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAoQXJyYXkuaXNBcnJheShkYXRhKSkge1xuICAgICAgICAgICAgLy8gSXQgaXMgYSBsZWdhY3kgdHJhbnNhY3Rpb25cbiAgICAgICAgICAgIHJldHVybiBfMS5UcmFuc2FjdGlvbi5mcm9tVmFsdWVzQXJyYXkoZGF0YSwgdHhPcHRpb25zKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignQ2Fubm90IGRlY29kZSB0cmFuc2FjdGlvbjogdW5rbm93biB0eXBlIGlucHV0Jyk7XG4gICAgICAgIH1cbiAgICB9O1xuICAgIC8qKlxuICAgICAqIFRoaXMgaGVscGVyIG1ldGhvZCBhbGxvd3Mgb25lIHRvIHJldHJpZXZlIHRoZSBjbGFzcyB3aGljaCBtYXRjaGVzIHRoZSB0cmFuc2FjdGlvbklEXG4gICAgICogSWYgdHJhbnNhY3Rpb25JRCBpcyB1bmRlZmluZWQsIHJldHVybnMgdGhlIGxlZ2FjeSB0cmFuc2FjdGlvbiBjbGFzcy5cbiAgICAgKiBAZGVwcmVjYXRlZCAtIFRoaXMgbWV0aG9kIGlzIGRlcHJlY2F0ZWQgYW5kIHdpbGwgYmUgcmVtb3ZlZCBvbiB0aGUgbmV4dCBtYWpvciByZWxlYXNlXG4gICAgICogQHBhcmFtIHRyYW5zYWN0aW9uSURcbiAgICAgKiBAcGFyYW0gX2NvbW1vbiAtIFRoaXMgb3B0aW9uIGlzIG5vdCB1c2VkXG4gICAgICovXG4gICAgVHJhbnNhY3Rpb25GYWN0b3J5LmdldFRyYW5zYWN0aW9uQ2xhc3MgPSBmdW5jdGlvbiAodHJhbnNhY3Rpb25JRCwgX2NvbW1vbikge1xuICAgICAgICBpZiAodHJhbnNhY3Rpb25JRCA9PT0gdm9pZCAwKSB7IHRyYW5zYWN0aW9uSUQgPSAwOyB9XG4gICAgICAgIHZhciBsZWdhY3lUeG4gPSB0cmFuc2FjdGlvbklEID09IDAgfHwgKHRyYW5zYWN0aW9uSUQgPj0gMHg4MCAmJiB0cmFuc2FjdGlvbklEIDw9IDB4ZmYpO1xuICAgICAgICBpZiAobGVnYWN5VHhuKSB7XG4gICAgICAgICAgICByZXR1cm4gXzEuVHJhbnNhY3Rpb247XG4gICAgICAgIH1cbiAgICAgICAgc3dpdGNoICh0cmFuc2FjdGlvbklEKSB7XG4gICAgICAgICAgICBjYXNlIDE6XG4gICAgICAgICAgICAgICAgcmV0dXJuIF8xLkFjY2Vzc0xpc3RFSVAyOTMwVHJhbnNhY3Rpb247XG4gICAgICAgICAgICBjYXNlIDI6XG4gICAgICAgICAgICAgICAgcmV0dXJuIF8xLkZlZU1hcmtldEVJUDE1NTlUcmFuc2FjdGlvbjtcbiAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiVHlwZWRUcmFuc2FjdGlvbiB3aXRoIElEIFwiLmNvbmNhdCh0cmFuc2FjdGlvbklELCBcIiB1bmtub3duXCIpKTtcbiAgICAgICAgfVxuICAgIH07XG4gICAgcmV0dXJuIFRyYW5zYWN0aW9uRmFjdG9yeTtcbn0oKSk7XG5leHBvcnRzLmRlZmF1bHQgPSBUcmFuc2FjdGlvbkZhY3Rvcnk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD10cmFuc2FjdGlvbkZhY3RvcnkuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@web3auth/ethereum-provider/node_modules/@ethereumjs/tx/dist.browser/transactionFactory.js\n");

/***/ }),

/***/ "./node_modules/@web3auth/ethereum-provider/node_modules/@ethereumjs/tx/dist.browser/types.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/@web3auth/ethereum-provider/node_modules/@ethereumjs/tx/dist.browser/types.js ***!
  \****************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.N_DIV_2 = exports.isAccessList = exports.isAccessListBuffer = exports.Capability = void 0;\nvar ethereumjs_util_1 = __webpack_require__(/*! ethereumjs-util */ \"./node_modules/@web3auth/ethereum-provider/node_modules/ethereumjs-util/dist.browser/index.js\");\n/**\n * Can be used in conjunction with {@link Transaction.supports}\n * to query on tx capabilities\n */\nvar Capability;\n(function (Capability) {\n    /**\n     * Tx supports EIP-155 replay protection\n     * See: [155](https://eips.ethereum.org/EIPS/eip-155) Replay Attack Protection EIP\n     */\n    Capability[Capability[\"EIP155ReplayProtection\"] = 155] = \"EIP155ReplayProtection\";\n    /**\n     * Tx supports EIP-1559 gas fee market mechansim\n     * See: [1559](https://eips.ethereum.org/EIPS/eip-1559) Fee Market EIP\n     */\n    Capability[Capability[\"EIP1559FeeMarket\"] = 1559] = \"EIP1559FeeMarket\";\n    /**\n     * Tx is a typed transaction as defined in EIP-2718\n     * See: [2718](https://eips.ethereum.org/EIPS/eip-2718) Transaction Type EIP\n     */\n    Capability[Capability[\"EIP2718TypedTransaction\"] = 2718] = \"EIP2718TypedTransaction\";\n    /**\n     * Tx supports access list generation as defined in EIP-2930\n     * See: [2930](https://eips.ethereum.org/EIPS/eip-2930) Access Lists EIP\n     */\n    Capability[Capability[\"EIP2930AccessLists\"] = 2930] = \"EIP2930AccessLists\";\n})(Capability = exports.Capability || (exports.Capability = {}));\nfunction isAccessListBuffer(input) {\n    if (input.length === 0) {\n        return true;\n    }\n    var firstItem = input[0];\n    if (Array.isArray(firstItem)) {\n        return true;\n    }\n    return false;\n}\nexports.isAccessListBuffer = isAccessListBuffer;\nfunction isAccessList(input) {\n    return !isAccessListBuffer(input); // This is exactly the same method, except the output is negated.\n}\nexports.isAccessList = isAccessList;\n/**\n * A const defining secp256k1n/2\n */\nexports.N_DIV_2 = new ethereumjs_util_1.BN('7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0', 16);\n//# sourceMappingURL=types.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHdlYjNhdXRoL2V0aGVyZXVtLXByb3ZpZGVyL25vZGVfbW9kdWxlcy9AZXRoZXJldW1qcy90eC9kaXN0LmJyb3dzZXIvdHlwZXMuanMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsZUFBZSxHQUFHLG9CQUFvQixHQUFHLDBCQUEwQixHQUFHLGtCQUFrQjtBQUN4Rix3QkFBd0IsbUJBQU8sQ0FBQyxzSEFBaUI7QUFDakQ7QUFDQSxvQ0FBb0M7QUFDcEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyxzQ0FBc0Msa0JBQWtCLEtBQUs7QUFDOUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwQkFBMEI7QUFDMUI7QUFDQSx1Q0FBdUM7QUFDdkM7QUFDQSxvQkFBb0I7QUFDcEI7QUFDQTtBQUNBO0FBQ0EsZUFBZTtBQUNmIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ad2ViM2F1dGgvZXRoZXJldW0tcHJvdmlkZXIvbm9kZV9tb2R1bGVzL0BldGhlcmV1bWpzL3R4L2Rpc3QuYnJvd3Nlci90eXBlcy5qcz9lZmIyIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5OX0RJVl8yID0gZXhwb3J0cy5pc0FjY2Vzc0xpc3QgPSBleHBvcnRzLmlzQWNjZXNzTGlzdEJ1ZmZlciA9IGV4cG9ydHMuQ2FwYWJpbGl0eSA9IHZvaWQgMDtcbnZhciBldGhlcmV1bWpzX3V0aWxfMSA9IHJlcXVpcmUoXCJldGhlcmV1bWpzLXV0aWxcIik7XG4vKipcbiAqIENhbiBiZSB1c2VkIGluIGNvbmp1bmN0aW9uIHdpdGgge0BsaW5rIFRyYW5zYWN0aW9uLnN1cHBvcnRzfVxuICogdG8gcXVlcnkgb24gdHggY2FwYWJpbGl0aWVzXG4gKi9cbnZhciBDYXBhYmlsaXR5O1xuKGZ1bmN0aW9uIChDYXBhYmlsaXR5KSB7XG4gICAgLyoqXG4gICAgICogVHggc3VwcG9ydHMgRUlQLTE1NSByZXBsYXkgcHJvdGVjdGlvblxuICAgICAqIFNlZTogWzE1NV0oaHR0cHM6Ly9laXBzLmV0aGVyZXVtLm9yZy9FSVBTL2VpcC0xNTUpIFJlcGxheSBBdHRhY2sgUHJvdGVjdGlvbiBFSVBcbiAgICAgKi9cbiAgICBDYXBhYmlsaXR5W0NhcGFiaWxpdHlbXCJFSVAxNTVSZXBsYXlQcm90ZWN0aW9uXCJdID0gMTU1XSA9IFwiRUlQMTU1UmVwbGF5UHJvdGVjdGlvblwiO1xuICAgIC8qKlxuICAgICAqIFR4IHN1cHBvcnRzIEVJUC0xNTU5IGdhcyBmZWUgbWFya2V0IG1lY2hhbnNpbVxuICAgICAqIFNlZTogWzE1NTldKGh0dHBzOi8vZWlwcy5ldGhlcmV1bS5vcmcvRUlQUy9laXAtMTU1OSkgRmVlIE1hcmtldCBFSVBcbiAgICAgKi9cbiAgICBDYXBhYmlsaXR5W0NhcGFiaWxpdHlbXCJFSVAxNTU5RmVlTWFya2V0XCJdID0gMTU1OV0gPSBcIkVJUDE1NTlGZWVNYXJrZXRcIjtcbiAgICAvKipcbiAgICAgKiBUeCBpcyBhIHR5cGVkIHRyYW5zYWN0aW9uIGFzIGRlZmluZWQgaW4gRUlQLTI3MThcbiAgICAgKiBTZWU6IFsyNzE4XShodHRwczovL2VpcHMuZXRoZXJldW0ub3JnL0VJUFMvZWlwLTI3MTgpIFRyYW5zYWN0aW9uIFR5cGUgRUlQXG4gICAgICovXG4gICAgQ2FwYWJpbGl0eVtDYXBhYmlsaXR5W1wiRUlQMjcxOFR5cGVkVHJhbnNhY3Rpb25cIl0gPSAyNzE4XSA9IFwiRUlQMjcxOFR5cGVkVHJhbnNhY3Rpb25cIjtcbiAgICAvKipcbiAgICAgKiBUeCBzdXBwb3J0cyBhY2Nlc3MgbGlzdCBnZW5lcmF0aW9uIGFzIGRlZmluZWQgaW4gRUlQLTI5MzBcbiAgICAgKiBTZWU6IFsyOTMwXShodHRwczovL2VpcHMuZXRoZXJldW0ub3JnL0VJUFMvZWlwLTI5MzApIEFjY2VzcyBMaXN0cyBFSVBcbiAgICAgKi9cbiAgICBDYXBhYmlsaXR5W0NhcGFiaWxpdHlbXCJFSVAyOTMwQWNjZXNzTGlzdHNcIl0gPSAyOTMwXSA9IFwiRUlQMjkzMEFjY2Vzc0xpc3RzXCI7XG59KShDYXBhYmlsaXR5ID0gZXhwb3J0cy5DYXBhYmlsaXR5IHx8IChleHBvcnRzLkNhcGFiaWxpdHkgPSB7fSkpO1xuZnVuY3Rpb24gaXNBY2Nlc3NMaXN0QnVmZmVyKGlucHV0KSB7XG4gICAgaWYgKGlucHV0Lmxlbmd0aCA9PT0gMCkge1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gICAgdmFyIGZpcnN0SXRlbSA9IGlucHV0WzBdO1xuICAgIGlmIChBcnJheS5pc0FycmF5KGZpcnN0SXRlbSkpIHtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuICAgIHJldHVybiBmYWxzZTtcbn1cbmV4cG9ydHMuaXNBY2Nlc3NMaXN0QnVmZmVyID0gaXNBY2Nlc3NMaXN0QnVmZmVyO1xuZnVuY3Rpb24gaXNBY2Nlc3NMaXN0KGlucHV0KSB7XG4gICAgcmV0dXJuICFpc0FjY2Vzc0xpc3RCdWZmZXIoaW5wdXQpOyAvLyBUaGlzIGlzIGV4YWN0bHkgdGhlIHNhbWUgbWV0aG9kLCBleGNlcHQgdGhlIG91dHB1dCBpcyBuZWdhdGVkLlxufVxuZXhwb3J0cy5pc0FjY2Vzc0xpc3QgPSBpc0FjY2Vzc0xpc3Q7XG4vKipcbiAqIEEgY29uc3QgZGVmaW5pbmcgc2VjcDI1Nmsxbi8yXG4gKi9cbmV4cG9ydHMuTl9ESVZfMiA9IG5ldyBldGhlcmV1bWpzX3V0aWxfMS5CTignN2ZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmY1ZDU3NmU3MzU3YTQ1MDFkZGZlOTJmNDY2ODFiMjBhMCcsIDE2KTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXR5cGVzLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@web3auth/ethereum-provider/node_modules/@ethereumjs/tx/dist.browser/types.js\n");

/***/ }),

/***/ "./node_modules/@web3auth/ethereum-provider/node_modules/@ethereumjs/tx/dist.browser/util.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/@web3auth/ethereum-provider/node_modules/@ethereumjs/tx/dist.browser/util.js ***!
  \***************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.AccessLists = exports.checkMaxInitCodeSize = void 0;\nvar ethereumjs_util_1 = __webpack_require__(/*! ethereumjs-util */ \"./node_modules/@web3auth/ethereum-provider/node_modules/ethereumjs-util/dist.browser/index.js\");\nvar types_1 = __webpack_require__(/*! ./types */ \"./node_modules/@web3auth/ethereum-provider/node_modules/@ethereumjs/tx/dist.browser/types.js\");\nfunction checkMaxInitCodeSize(common, length) {\n    if (length > common.param('vm', 'maxInitCodeSize')) {\n        throw new Error(\"the initcode size of this transaction is too large: it is \".concat(length, \" while the max is \").concat(common.param('vm', 'maxInitCodeSize')));\n    }\n}\nexports.checkMaxInitCodeSize = checkMaxInitCodeSize;\nvar AccessLists = /** @class */ (function () {\n    function AccessLists() {\n    }\n    AccessLists.getAccessListData = function (accessList) {\n        var AccessListJSON;\n        var bufferAccessList;\n        if (accessList && (0, types_1.isAccessList)(accessList)) {\n            AccessListJSON = accessList;\n            var newAccessList = [];\n            for (var i = 0; i < accessList.length; i++) {\n                var item = accessList[i];\n                var addressBuffer = (0, ethereumjs_util_1.toBuffer)(item.address);\n                var storageItems = [];\n                for (var index = 0; index < item.storageKeys.length; index++) {\n                    storageItems.push((0, ethereumjs_util_1.toBuffer)(item.storageKeys[index]));\n                }\n                newAccessList.push([addressBuffer, storageItems]);\n            }\n            bufferAccessList = newAccessList;\n        }\n        else {\n            bufferAccessList = accessList !== null && accessList !== void 0 ? accessList : [];\n            // build the JSON\n            var json = [];\n            for (var i = 0; i < bufferAccessList.length; i++) {\n                var data = bufferAccessList[i];\n                var address = (0, ethereumjs_util_1.bufferToHex)(data[0]);\n                var storageKeys = [];\n                for (var item = 0; item < data[1].length; item++) {\n                    storageKeys.push((0, ethereumjs_util_1.bufferToHex)(data[1][item]));\n                }\n                var jsonItem = {\n                    address: address,\n                    storageKeys: storageKeys,\n                };\n                json.push(jsonItem);\n            }\n            AccessListJSON = json;\n        }\n        return {\n            AccessListJSON: AccessListJSON,\n            accessList: bufferAccessList,\n        };\n    };\n    AccessLists.verifyAccessList = function (accessList) {\n        for (var key = 0; key < accessList.length; key++) {\n            var accessListItem = accessList[key];\n            var address = accessListItem[0];\n            var storageSlots = accessListItem[1];\n            if (accessListItem[2] !== undefined) {\n                throw new Error('Access list item cannot have 3 elements. It can only have an address, and an array of storage slots.');\n            }\n            if (address.length != 20) {\n                throw new Error('Invalid EIP-2930 transaction: address length should be 20 bytes');\n            }\n            for (var storageSlot = 0; storageSlot < storageSlots.length; storageSlot++) {\n                if (storageSlots[storageSlot].length != 32) {\n                    throw new Error('Invalid EIP-2930 transaction: storage slot length should be 32 bytes');\n                }\n            }\n        }\n    };\n    AccessLists.getAccessListJSON = function (accessList) {\n        var accessListJSON = [];\n        for (var index = 0; index < accessList.length; index++) {\n            var item = accessList[index];\n            var JSONItem = {\n                address: '0x' + (0, ethereumjs_util_1.setLengthLeft)(item[0], 20).toString('hex'),\n                storageKeys: [],\n            };\n            var storageSlots = item[1];\n            for (var slot = 0; slot < storageSlots.length; slot++) {\n                var storageSlot = storageSlots[slot];\n                JSONItem.storageKeys.push('0x' + (0, ethereumjs_util_1.setLengthLeft)(storageSlot, 32).toString('hex'));\n            }\n            accessListJSON.push(JSONItem);\n        }\n        return accessListJSON;\n    };\n    AccessLists.getDataFeeEIP2930 = function (accessList, common) {\n        var accessListStorageKeyCost = common.param('gasPrices', 'accessListStorageKeyCost');\n        var accessListAddressCost = common.param('gasPrices', 'accessListAddressCost');\n        var slots = 0;\n        for (var index = 0; index < accessList.length; index++) {\n            var item = accessList[index];\n            var storageSlots = item[1];\n            slots += storageSlots.length;\n        }\n        var addresses = accessList.length;\n        return addresses * accessListAddressCost + slots * accessListStorageKeyCost;\n    };\n    return AccessLists;\n}());\nexports.AccessLists = AccessLists;\n//# sourceMappingURL=util.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHdlYjNhdXRoL2V0aGVyZXVtLXByb3ZpZGVyL25vZGVfbW9kdWxlcy9AZXRoZXJldW1qcy90eC9kaXN0LmJyb3dzZXIvdXRpbC5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxtQkFBbUIsR0FBRyw0QkFBNEI7QUFDbEQsd0JBQXdCLG1CQUFPLENBQUMsc0hBQWlCO0FBQ2pELGNBQWMsbUJBQU8sQ0FBQyw2R0FBUztBQUMvQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNEJBQTRCO0FBQzVCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRCQUE0Qix1QkFBdUI7QUFDbkQ7QUFDQTtBQUNBO0FBQ0Esb0NBQW9DLGlDQUFpQztBQUNyRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRCQUE0Qiw2QkFBNkI7QUFDekQ7QUFDQTtBQUNBO0FBQ0EsbUNBQW1DLHVCQUF1QjtBQUMxRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBCQUEwQix5QkFBeUI7QUFDbkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0NBQXNDLG1DQUFtQztBQUN6RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNEJBQTRCLDJCQUEyQjtBQUN2RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwrQkFBK0IsNEJBQTRCO0FBQzNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0QkFBNEIsMkJBQTJCO0FBQ3ZEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0QsbUJBQW1CO0FBQ25CIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ad2ViM2F1dGgvZXRoZXJldW0tcHJvdmlkZXIvbm9kZV9tb2R1bGVzL0BldGhlcmV1bWpzL3R4L2Rpc3QuYnJvd3Nlci91dGlsLmpzPzgwMzkiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkFjY2Vzc0xpc3RzID0gZXhwb3J0cy5jaGVja01heEluaXRDb2RlU2l6ZSA9IHZvaWQgMDtcbnZhciBldGhlcmV1bWpzX3V0aWxfMSA9IHJlcXVpcmUoXCJldGhlcmV1bWpzLXV0aWxcIik7XG52YXIgdHlwZXNfMSA9IHJlcXVpcmUoXCIuL3R5cGVzXCIpO1xuZnVuY3Rpb24gY2hlY2tNYXhJbml0Q29kZVNpemUoY29tbW9uLCBsZW5ndGgpIHtcbiAgICBpZiAobGVuZ3RoID4gY29tbW9uLnBhcmFtKCd2bScsICdtYXhJbml0Q29kZVNpemUnKSkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJ0aGUgaW5pdGNvZGUgc2l6ZSBvZiB0aGlzIHRyYW5zYWN0aW9uIGlzIHRvbyBsYXJnZTogaXQgaXMgXCIuY29uY2F0KGxlbmd0aCwgXCIgd2hpbGUgdGhlIG1heCBpcyBcIikuY29uY2F0KGNvbW1vbi5wYXJhbSgndm0nLCAnbWF4SW5pdENvZGVTaXplJykpKTtcbiAgICB9XG59XG5leHBvcnRzLmNoZWNrTWF4SW5pdENvZGVTaXplID0gY2hlY2tNYXhJbml0Q29kZVNpemU7XG52YXIgQWNjZXNzTGlzdHMgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gQWNjZXNzTGlzdHMoKSB7XG4gICAgfVxuICAgIEFjY2Vzc0xpc3RzLmdldEFjY2Vzc0xpc3REYXRhID0gZnVuY3Rpb24gKGFjY2Vzc0xpc3QpIHtcbiAgICAgICAgdmFyIEFjY2Vzc0xpc3RKU09OO1xuICAgICAgICB2YXIgYnVmZmVyQWNjZXNzTGlzdDtcbiAgICAgICAgaWYgKGFjY2Vzc0xpc3QgJiYgKDAsIHR5cGVzXzEuaXNBY2Nlc3NMaXN0KShhY2Nlc3NMaXN0KSkge1xuICAgICAgICAgICAgQWNjZXNzTGlzdEpTT04gPSBhY2Nlc3NMaXN0O1xuICAgICAgICAgICAgdmFyIG5ld0FjY2Vzc0xpc3QgPSBbXTtcbiAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgYWNjZXNzTGlzdC5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgICAgIHZhciBpdGVtID0gYWNjZXNzTGlzdFtpXTtcbiAgICAgICAgICAgICAgICB2YXIgYWRkcmVzc0J1ZmZlciA9ICgwLCBldGhlcmV1bWpzX3V0aWxfMS50b0J1ZmZlcikoaXRlbS5hZGRyZXNzKTtcbiAgICAgICAgICAgICAgICB2YXIgc3RvcmFnZUl0ZW1zID0gW107XG4gICAgICAgICAgICAgICAgZm9yICh2YXIgaW5kZXggPSAwOyBpbmRleCA8IGl0ZW0uc3RvcmFnZUtleXMubGVuZ3RoOyBpbmRleCsrKSB7XG4gICAgICAgICAgICAgICAgICAgIHN0b3JhZ2VJdGVtcy5wdXNoKCgwLCBldGhlcmV1bWpzX3V0aWxfMS50b0J1ZmZlcikoaXRlbS5zdG9yYWdlS2V5c1tpbmRleF0pKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgbmV3QWNjZXNzTGlzdC5wdXNoKFthZGRyZXNzQnVmZmVyLCBzdG9yYWdlSXRlbXNdKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGJ1ZmZlckFjY2Vzc0xpc3QgPSBuZXdBY2Nlc3NMaXN0O1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgYnVmZmVyQWNjZXNzTGlzdCA9IGFjY2Vzc0xpc3QgIT09IG51bGwgJiYgYWNjZXNzTGlzdCAhPT0gdm9pZCAwID8gYWNjZXNzTGlzdCA6IFtdO1xuICAgICAgICAgICAgLy8gYnVpbGQgdGhlIEpTT05cbiAgICAgICAgICAgIHZhciBqc29uID0gW107XG4gICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGJ1ZmZlckFjY2Vzc0xpc3QubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgICAgICB2YXIgZGF0YSA9IGJ1ZmZlckFjY2Vzc0xpc3RbaV07XG4gICAgICAgICAgICAgICAgdmFyIGFkZHJlc3MgPSAoMCwgZXRoZXJldW1qc191dGlsXzEuYnVmZmVyVG9IZXgpKGRhdGFbMF0pO1xuICAgICAgICAgICAgICAgIHZhciBzdG9yYWdlS2V5cyA9IFtdO1xuICAgICAgICAgICAgICAgIGZvciAodmFyIGl0ZW0gPSAwOyBpdGVtIDwgZGF0YVsxXS5sZW5ndGg7IGl0ZW0rKykge1xuICAgICAgICAgICAgICAgICAgICBzdG9yYWdlS2V5cy5wdXNoKCgwLCBldGhlcmV1bWpzX3V0aWxfMS5idWZmZXJUb0hleCkoZGF0YVsxXVtpdGVtXSkpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB2YXIganNvbkl0ZW0gPSB7XG4gICAgICAgICAgICAgICAgICAgIGFkZHJlc3M6IGFkZHJlc3MsXG4gICAgICAgICAgICAgICAgICAgIHN0b3JhZ2VLZXlzOiBzdG9yYWdlS2V5cyxcbiAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgICAgIGpzb24ucHVzaChqc29uSXRlbSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBBY2Nlc3NMaXN0SlNPTiA9IGpzb247XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIEFjY2Vzc0xpc3RKU09OOiBBY2Nlc3NMaXN0SlNPTixcbiAgICAgICAgICAgIGFjY2Vzc0xpc3Q6IGJ1ZmZlckFjY2Vzc0xpc3QsXG4gICAgICAgIH07XG4gICAgfTtcbiAgICBBY2Nlc3NMaXN0cy52ZXJpZnlBY2Nlc3NMaXN0ID0gZnVuY3Rpb24gKGFjY2Vzc0xpc3QpIHtcbiAgICAgICAgZm9yICh2YXIga2V5ID0gMDsga2V5IDwgYWNjZXNzTGlzdC5sZW5ndGg7IGtleSsrKSB7XG4gICAgICAgICAgICB2YXIgYWNjZXNzTGlzdEl0ZW0gPSBhY2Nlc3NMaXN0W2tleV07XG4gICAgICAgICAgICB2YXIgYWRkcmVzcyA9IGFjY2Vzc0xpc3RJdGVtWzBdO1xuICAgICAgICAgICAgdmFyIHN0b3JhZ2VTbG90cyA9IGFjY2Vzc0xpc3RJdGVtWzFdO1xuICAgICAgICAgICAgaWYgKGFjY2Vzc0xpc3RJdGVtWzJdICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0FjY2VzcyBsaXN0IGl0ZW0gY2Fubm90IGhhdmUgMyBlbGVtZW50cy4gSXQgY2FuIG9ubHkgaGF2ZSBhbiBhZGRyZXNzLCBhbmQgYW4gYXJyYXkgb2Ygc3RvcmFnZSBzbG90cy4nKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChhZGRyZXNzLmxlbmd0aCAhPSAyMCkge1xuICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignSW52YWxpZCBFSVAtMjkzMCB0cmFuc2FjdGlvbjogYWRkcmVzcyBsZW5ndGggc2hvdWxkIGJlIDIwIGJ5dGVzJyk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBmb3IgKHZhciBzdG9yYWdlU2xvdCA9IDA7IHN0b3JhZ2VTbG90IDwgc3RvcmFnZVNsb3RzLmxlbmd0aDsgc3RvcmFnZVNsb3QrKykge1xuICAgICAgICAgICAgICAgIGlmIChzdG9yYWdlU2xvdHNbc3RvcmFnZVNsb3RdLmxlbmd0aCAhPSAzMikge1xuICAgICAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0ludmFsaWQgRUlQLTI5MzAgdHJhbnNhY3Rpb246IHN0b3JhZ2Ugc2xvdCBsZW5ndGggc2hvdWxkIGJlIDMyIGJ5dGVzJyk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfTtcbiAgICBBY2Nlc3NMaXN0cy5nZXRBY2Nlc3NMaXN0SlNPTiA9IGZ1bmN0aW9uIChhY2Nlc3NMaXN0KSB7XG4gICAgICAgIHZhciBhY2Nlc3NMaXN0SlNPTiA9IFtdO1xuICAgICAgICBmb3IgKHZhciBpbmRleCA9IDA7IGluZGV4IDwgYWNjZXNzTGlzdC5sZW5ndGg7IGluZGV4KyspIHtcbiAgICAgICAgICAgIHZhciBpdGVtID0gYWNjZXNzTGlzdFtpbmRleF07XG4gICAgICAgICAgICB2YXIgSlNPTkl0ZW0gPSB7XG4gICAgICAgICAgICAgICAgYWRkcmVzczogJzB4JyArICgwLCBldGhlcmV1bWpzX3V0aWxfMS5zZXRMZW5ndGhMZWZ0KShpdGVtWzBdLCAyMCkudG9TdHJpbmcoJ2hleCcpLFxuICAgICAgICAgICAgICAgIHN0b3JhZ2VLZXlzOiBbXSxcbiAgICAgICAgICAgIH07XG4gICAgICAgICAgICB2YXIgc3RvcmFnZVNsb3RzID0gaXRlbVsxXTtcbiAgICAgICAgICAgIGZvciAodmFyIHNsb3QgPSAwOyBzbG90IDwgc3RvcmFnZVNsb3RzLmxlbmd0aDsgc2xvdCsrKSB7XG4gICAgICAgICAgICAgICAgdmFyIHN0b3JhZ2VTbG90ID0gc3RvcmFnZVNsb3RzW3Nsb3RdO1xuICAgICAgICAgICAgICAgIEpTT05JdGVtLnN0b3JhZ2VLZXlzLnB1c2goJzB4JyArICgwLCBldGhlcmV1bWpzX3V0aWxfMS5zZXRMZW5ndGhMZWZ0KShzdG9yYWdlU2xvdCwgMzIpLnRvU3RyaW5nKCdoZXgnKSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBhY2Nlc3NMaXN0SlNPTi5wdXNoKEpTT05JdGVtKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gYWNjZXNzTGlzdEpTT047XG4gICAgfTtcbiAgICBBY2Nlc3NMaXN0cy5nZXREYXRhRmVlRUlQMjkzMCA9IGZ1bmN0aW9uIChhY2Nlc3NMaXN0LCBjb21tb24pIHtcbiAgICAgICAgdmFyIGFjY2Vzc0xpc3RTdG9yYWdlS2V5Q29zdCA9IGNvbW1vbi5wYXJhbSgnZ2FzUHJpY2VzJywgJ2FjY2Vzc0xpc3RTdG9yYWdlS2V5Q29zdCcpO1xuICAgICAgICB2YXIgYWNjZXNzTGlzdEFkZHJlc3NDb3N0ID0gY29tbW9uLnBhcmFtKCdnYXNQcmljZXMnLCAnYWNjZXNzTGlzdEFkZHJlc3NDb3N0Jyk7XG4gICAgICAgIHZhciBzbG90cyA9IDA7XG4gICAgICAgIGZvciAodmFyIGluZGV4ID0gMDsgaW5kZXggPCBhY2Nlc3NMaXN0Lmxlbmd0aDsgaW5kZXgrKykge1xuICAgICAgICAgICAgdmFyIGl0ZW0gPSBhY2Nlc3NMaXN0W2luZGV4XTtcbiAgICAgICAgICAgIHZhciBzdG9yYWdlU2xvdHMgPSBpdGVtWzFdO1xuICAgICAgICAgICAgc2xvdHMgKz0gc3RvcmFnZVNsb3RzLmxlbmd0aDtcbiAgICAgICAgfVxuICAgICAgICB2YXIgYWRkcmVzc2VzID0gYWNjZXNzTGlzdC5sZW5ndGg7XG4gICAgICAgIHJldHVybiBhZGRyZXNzZXMgKiBhY2Nlc3NMaXN0QWRkcmVzc0Nvc3QgKyBzbG90cyAqIGFjY2Vzc0xpc3RTdG9yYWdlS2V5Q29zdDtcbiAgICB9O1xuICAgIHJldHVybiBBY2Nlc3NMaXN0cztcbn0oKSk7XG5leHBvcnRzLkFjY2Vzc0xpc3RzID0gQWNjZXNzTGlzdHM7XG4vLyMgc291cmNlTWFwcGluZ1VSTD11dGlsLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@web3auth/ethereum-provider/node_modules/@ethereumjs/tx/dist.browser/util.js\n");

/***/ }),

/***/ "./node_modules/@web3auth/ethereum-provider/node_modules/bn.js/lib/bn.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@web3auth/ethereum-provider/node_modules/bn.js/lib/bn.js ***!
  \*******************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("/* module decorator */ module = __webpack_require__.nmd(module);\n(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = (__webpack_require__(/*! buffer */ \"?c948\").Buffer);\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [number & 0x3ffffff];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [0];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this._strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // '0' - '9'\n    if (c >= 48 && c <= 57) {\n      return c - 48;\n    // 'A' - 'F'\n    } else if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    } else {\n      assert(false, 'Invalid character in ' + string);\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this._strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var b = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        b = c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        b = c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        b = c;\n      }\n      assert(c >= 0 && b < mul, 'Invalid character');\n      r += b;\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [0];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this._strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  function move (dest, src) {\n    dest.words = src.words;\n    dest.length = src.length;\n    dest.negative = src.negative;\n    dest.red = src.red;\n  }\n\n  BN.prototype._move = function _move (dest) {\n    move(dest, this);\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype._strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  // Check Symbol.for because not everywhere where Symbol defined\n  // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol#Browser_compatibility\n  if (typeof Symbol !== 'undefined' && typeof Symbol.for === 'function') {\n    try {\n      BN.prototype[Symbol.for('nodejs.util.inspect.custom')] = inspect;\n    } catch (e) {\n      BN.prototype.inspect = inspect;\n    }\n  } else {\n    BN.prototype.inspect = inspect;\n  }\n\n  function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  }\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modrn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16, 2);\n  };\n\n  if (Buffer) {\n    BN.prototype.toBuffer = function toBuffer (endian, length) {\n      return this.toArrayLike(Buffer, endian, length);\n    };\n  }\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  var allocate = function allocate (ArrayType, size) {\n    if (ArrayType.allocUnsafe) {\n      return ArrayType.allocUnsafe(size);\n    }\n    return new ArrayType(size);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    this._strip();\n\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    var res = allocate(ArrayType, reqLength);\n    var postfix = endian === 'le' ? 'LE' : 'BE';\n    this['_toArrayLike' + postfix](res, byteLength);\n    return res;\n  };\n\n  BN.prototype._toArrayLikeLE = function _toArrayLikeLE (res, byteLength) {\n    var position = 0;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position++] = word & 0xff;\n      if (position < res.length) {\n        res[position++] = (word >> 8) & 0xff;\n      }\n      if (position < res.length) {\n        res[position++] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position < res.length) {\n          res[position++] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position < res.length) {\n      res[position++] = carry;\n\n      while (position < res.length) {\n        res[position++] = 0;\n      }\n    }\n  };\n\n  BN.prototype._toArrayLikeBE = function _toArrayLikeBE (res, byteLength) {\n    var position = res.length - 1;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position--] = word & 0xff;\n      if (position >= 0) {\n        res[position--] = (word >> 8) & 0xff;\n      }\n      if (position >= 0) {\n        res[position--] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position >= 0) {\n          res[position--] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position >= 0) {\n      res[position--] = carry;\n\n      while (position >= 0) {\n        res[position--] = 0;\n      }\n    }\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] >>> wbit) & 0x01;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this._strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this._strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this._strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    // Temporary disable, see https://github.com/indutny/bn.js/issues/211\n    // var fftm = new FFTM();\n    // return fftm.mulp(self, num, out);\n    return bigMulTo(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out._strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this._strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) <= num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this._strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this._strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q._strip();\n    }\n    a._strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modrn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modrn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || (r2 === 1 && cmp === 0)) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modrn = function modrn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return isNegNum ? -acc : acc;\n  };\n\n  // WARNING: DEPRECATED\n  BN.prototype.modn = function modn (num) {\n    return this.modrn(num);\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    this._strip();\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this._strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is a BN v4 instance\n        r.strip();\n      } else {\n        // r is a BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n\n    move(a, a.umod(this.m)._forceRed(this));\n    return a;\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})( false || module, this);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@web3auth/ethereum-provider/node_modules/bn.js/lib/bn.js\n");

/***/ }),

/***/ "./node_modules/@web3auth/ethereum-provider/node_modules/ethereumjs-util/dist.browser/account.js":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/@web3auth/ethereum-provider/node_modules/ethereumjs-util/dist.browser/account.js ***!
  \*******************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"./node_modules/buffer/index.js\")[\"Buffer\"];\n\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.isZeroAddress = exports.zeroAddress = exports.importPublic = exports.privateToAddress = exports.privateToPublic = exports.publicToAddress = exports.pubToAddress = exports.isValidPublic = exports.isValidPrivate = exports.generateAddress2 = exports.generateAddress = exports.isValidChecksumAddress = exports.toChecksumAddress = exports.isValidAddress = exports.Account = void 0;\nvar assert_1 = __importDefault(__webpack_require__(/*! assert */ \"./node_modules/assert/build/assert.js\"));\nvar externals_1 = __webpack_require__(/*! ./externals */ \"./node_modules/@web3auth/ethereum-provider/node_modules/ethereumjs-util/dist.browser/externals.js\");\nvar secp256k1_1 = __webpack_require__(/*! ethereum-cryptography/secp256k1 */ \"./node_modules/ethereum-cryptography/secp256k1.js\");\nvar internal_1 = __webpack_require__(/*! ./internal */ \"./node_modules/@web3auth/ethereum-provider/node_modules/ethereumjs-util/dist.browser/internal.js\");\nvar constants_1 = __webpack_require__(/*! ./constants */ \"./node_modules/@web3auth/ethereum-provider/node_modules/ethereumjs-util/dist.browser/constants.js\");\nvar bytes_1 = __webpack_require__(/*! ./bytes */ \"./node_modules/@web3auth/ethereum-provider/node_modules/ethereumjs-util/dist.browser/bytes.js\");\nvar hash_1 = __webpack_require__(/*! ./hash */ \"./node_modules/@web3auth/ethereum-provider/node_modules/ethereumjs-util/dist.browser/hash.js\");\nvar helpers_1 = __webpack_require__(/*! ./helpers */ \"./node_modules/@web3auth/ethereum-provider/node_modules/ethereumjs-util/dist.browser/helpers.js\");\nvar types_1 = __webpack_require__(/*! ./types */ \"./node_modules/@web3auth/ethereum-provider/node_modules/ethereumjs-util/dist.browser/types.js\");\nvar Account = /** @class */ (function () {\n    /**\n     * This constructor assigns and validates the values.\n     * Use the static factory methods to assist in creating an Account from varying data types.\n     */\n    function Account(nonce, balance, stateRoot, codeHash) {\n        if (nonce === void 0) { nonce = new externals_1.BN(0); }\n        if (balance === void 0) { balance = new externals_1.BN(0); }\n        if (stateRoot === void 0) { stateRoot = constants_1.KECCAK256_RLP; }\n        if (codeHash === void 0) { codeHash = constants_1.KECCAK256_NULL; }\n        this.nonce = nonce;\n        this.balance = balance;\n        this.stateRoot = stateRoot;\n        this.codeHash = codeHash;\n        this._validate();\n    }\n    Account.fromAccountData = function (accountData) {\n        var nonce = accountData.nonce, balance = accountData.balance, stateRoot = accountData.stateRoot, codeHash = accountData.codeHash;\n        return new Account(nonce ? new externals_1.BN((0, bytes_1.toBuffer)(nonce)) : undefined, balance ? new externals_1.BN((0, bytes_1.toBuffer)(balance)) : undefined, stateRoot ? (0, bytes_1.toBuffer)(stateRoot) : undefined, codeHash ? (0, bytes_1.toBuffer)(codeHash) : undefined);\n    };\n    Account.fromRlpSerializedAccount = function (serialized) {\n        var values = externals_1.rlp.decode(serialized);\n        if (!Array.isArray(values)) {\n            throw new Error('Invalid serialized account input. Must be array');\n        }\n        return this.fromValuesArray(values);\n    };\n    Account.fromValuesArray = function (values) {\n        var _a = __read(values, 4), nonce = _a[0], balance = _a[1], stateRoot = _a[2], codeHash = _a[3];\n        return new Account(new externals_1.BN(nonce), new externals_1.BN(balance), stateRoot, codeHash);\n    };\n    Account.prototype._validate = function () {\n        if (this.nonce.lt(new externals_1.BN(0))) {\n            throw new Error('nonce must be greater than zero');\n        }\n        if (this.balance.lt(new externals_1.BN(0))) {\n            throw new Error('balance must be greater than zero');\n        }\n        if (this.stateRoot.length !== 32) {\n            throw new Error('stateRoot must have a length of 32');\n        }\n        if (this.codeHash.length !== 32) {\n            throw new Error('codeHash must have a length of 32');\n        }\n    };\n    /**\n     * Returns a Buffer Array of the raw Buffers for the account, in order.\n     */\n    Account.prototype.raw = function () {\n        return [\n            (0, types_1.bnToUnpaddedBuffer)(this.nonce),\n            (0, types_1.bnToUnpaddedBuffer)(this.balance),\n            this.stateRoot,\n            this.codeHash,\n        ];\n    };\n    /**\n     * Returns the RLP serialization of the account as a `Buffer`.\n     */\n    Account.prototype.serialize = function () {\n        return externals_1.rlp.encode(this.raw());\n    };\n    /**\n     * Returns a `Boolean` determining if the account is a contract.\n     */\n    Account.prototype.isContract = function () {\n        return !this.codeHash.equals(constants_1.KECCAK256_NULL);\n    };\n    /**\n     * Returns a `Boolean` determining if the account is empty complying to the definition of\n     * account emptiness in [EIP-161](https://eips.ethereum.org/EIPS/eip-161):\n     * \"An account is considered empty when it has no code and zero nonce and zero balance.\"\n     */\n    Account.prototype.isEmpty = function () {\n        return this.balance.isZero() && this.nonce.isZero() && this.codeHash.equals(constants_1.KECCAK256_NULL);\n    };\n    return Account;\n}());\nexports.Account = Account;\n/**\n * Checks if the address is a valid. Accepts checksummed addresses too.\n */\nvar isValidAddress = function (hexAddress) {\n    try {\n        (0, helpers_1.assertIsString)(hexAddress);\n    }\n    catch (e) {\n        return false;\n    }\n    return /^0x[0-9a-fA-F]{40}$/.test(hexAddress);\n};\nexports.isValidAddress = isValidAddress;\n/**\n * Returns a checksummed address.\n *\n * If an eip1191ChainId is provided, the chainId will be included in the checksum calculation. This\n * has the effect of checksummed addresses for one chain having invalid checksums for others.\n * For more details see [EIP-1191](https://eips.ethereum.org/EIPS/eip-1191).\n *\n * WARNING: Checksums with and without the chainId will differ and the EIP-1191 checksum is not\n * backwards compatible to the original widely adopted checksum format standard introduced in\n * [EIP-55](https://eips.ethereum.org/EIPS/eip-55), so this will break in existing applications.\n * Usage of this EIP is therefore discouraged unless you have a very targeted use case.\n */\nvar toChecksumAddress = function (hexAddress, eip1191ChainId) {\n    (0, helpers_1.assertIsHexString)(hexAddress);\n    var address = (0, internal_1.stripHexPrefix)(hexAddress).toLowerCase();\n    var prefix = '';\n    if (eip1191ChainId) {\n        var chainId = (0, types_1.toType)(eip1191ChainId, types_1.TypeOutput.BN);\n        prefix = chainId.toString() + '0x';\n    }\n    var hash = (0, hash_1.keccakFromString)(prefix + address).toString('hex');\n    var ret = '0x';\n    for (var i = 0; i < address.length; i++) {\n        if (parseInt(hash[i], 16) >= 8) {\n            ret += address[i].toUpperCase();\n        }\n        else {\n            ret += address[i];\n        }\n    }\n    return ret;\n};\nexports.toChecksumAddress = toChecksumAddress;\n/**\n * Checks if the address is a valid checksummed address.\n *\n * See toChecksumAddress' documentation for details about the eip1191ChainId parameter.\n */\nvar isValidChecksumAddress = function (hexAddress, eip1191ChainId) {\n    return (0, exports.isValidAddress)(hexAddress) && (0, exports.toChecksumAddress)(hexAddress, eip1191ChainId) === hexAddress;\n};\nexports.isValidChecksumAddress = isValidChecksumAddress;\n/**\n * Generates an address of a newly created contract.\n * @param from The address which is creating this new address\n * @param nonce The nonce of the from account\n */\nvar generateAddress = function (from, nonce) {\n    (0, helpers_1.assertIsBuffer)(from);\n    (0, helpers_1.assertIsBuffer)(nonce);\n    var nonceBN = new externals_1.BN(nonce);\n    if (nonceBN.isZero()) {\n        // in RLP we want to encode null in the case of zero nonce\n        // read the RLP documentation for an answer if you dare\n        return (0, hash_1.rlphash)([from, null]).slice(-20);\n    }\n    // Only take the lower 160bits of the hash\n    return (0, hash_1.rlphash)([from, Buffer.from(nonceBN.toArray())]).slice(-20);\n};\nexports.generateAddress = generateAddress;\n/**\n * Generates an address for a contract created using CREATE2.\n * @param from The address which is creating this new address\n * @param salt A salt\n * @param initCode The init code of the contract being created\n */\nvar generateAddress2 = function (from, salt, initCode) {\n    (0, helpers_1.assertIsBuffer)(from);\n    (0, helpers_1.assertIsBuffer)(salt);\n    (0, helpers_1.assertIsBuffer)(initCode);\n    (0, assert_1.default)(from.length === 20);\n    (0, assert_1.default)(salt.length === 32);\n    var address = (0, hash_1.keccak256)(Buffer.concat([Buffer.from('ff', 'hex'), from, salt, (0, hash_1.keccak256)(initCode)]));\n    return address.slice(-20);\n};\nexports.generateAddress2 = generateAddress2;\n/**\n * Checks if the private key satisfies the rules of the curve secp256k1.\n */\nvar isValidPrivate = function (privateKey) {\n    return (0, secp256k1_1.privateKeyVerify)(privateKey);\n};\nexports.isValidPrivate = isValidPrivate;\n/**\n * Checks if the public key satisfies the rules of the curve secp256k1\n * and the requirements of Ethereum.\n * @param publicKey The two points of an uncompressed key, unless sanitize is enabled\n * @param sanitize Accept public keys in other formats\n */\nvar isValidPublic = function (publicKey, sanitize) {\n    if (sanitize === void 0) { sanitize = false; }\n    (0, helpers_1.assertIsBuffer)(publicKey);\n    if (publicKey.length === 64) {\n        // Convert to SEC1 for secp256k1\n        return (0, secp256k1_1.publicKeyVerify)(Buffer.concat([Buffer.from([4]), publicKey]));\n    }\n    if (!sanitize) {\n        return false;\n    }\n    return (0, secp256k1_1.publicKeyVerify)(publicKey);\n};\nexports.isValidPublic = isValidPublic;\n/**\n * Returns the ethereum address of a given public key.\n * Accepts \"Ethereum public keys\" and SEC1 encoded keys.\n * @param pubKey The two points of an uncompressed key, unless sanitize is enabled\n * @param sanitize Accept public keys in other formats\n */\nvar pubToAddress = function (pubKey, sanitize) {\n    if (sanitize === void 0) { sanitize = false; }\n    (0, helpers_1.assertIsBuffer)(pubKey);\n    if (sanitize && pubKey.length !== 64) {\n        pubKey = Buffer.from((0, secp256k1_1.publicKeyConvert)(pubKey, false).slice(1));\n    }\n    (0, assert_1.default)(pubKey.length === 64);\n    // Only take the lower 160bits of the hash\n    return (0, hash_1.keccak)(pubKey).slice(-20);\n};\nexports.pubToAddress = pubToAddress;\nexports.publicToAddress = exports.pubToAddress;\n/**\n * Returns the ethereum public key of a given private key.\n * @param privateKey A private key must be 256 bits wide\n */\nvar privateToPublic = function (privateKey) {\n    (0, helpers_1.assertIsBuffer)(privateKey);\n    // skip the type flag and use the X, Y points\n    return Buffer.from((0, secp256k1_1.publicKeyCreate)(privateKey, false)).slice(1);\n};\nexports.privateToPublic = privateToPublic;\n/**\n * Returns the ethereum address of a given private key.\n * @param privateKey A private key must be 256 bits wide\n */\nvar privateToAddress = function (privateKey) {\n    return (0, exports.publicToAddress)((0, exports.privateToPublic)(privateKey));\n};\nexports.privateToAddress = privateToAddress;\n/**\n * Converts a public key to the Ethereum format.\n */\nvar importPublic = function (publicKey) {\n    (0, helpers_1.assertIsBuffer)(publicKey);\n    if (publicKey.length !== 64) {\n        publicKey = Buffer.from((0, secp256k1_1.publicKeyConvert)(publicKey, false).slice(1));\n    }\n    return publicKey;\n};\nexports.importPublic = importPublic;\n/**\n * Returns the zero address.\n */\nvar zeroAddress = function () {\n    var addressLength = 20;\n    var addr = (0, bytes_1.zeros)(addressLength);\n    return (0, bytes_1.bufferToHex)(addr);\n};\nexports.zeroAddress = zeroAddress;\n/**\n * Checks if a given address is the zero address.\n */\nvar isZeroAddress = function (hexAddress) {\n    try {\n        (0, helpers_1.assertIsString)(hexAddress);\n    }\n    catch (e) {\n        return false;\n    }\n    var zeroAddr = (0, exports.zeroAddress)();\n    return zeroAddr === hexAddress;\n};\nexports.isZeroAddress = isZeroAddress;\n//# sourceMappingURL=account.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@web3auth/ethereum-provider/node_modules/ethereumjs-util/dist.browser/account.js\n");

/***/ }),

/***/ "./node_modules/@web3auth/ethereum-provider/node_modules/ethereumjs-util/dist.browser/address.js":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/@web3auth/ethereum-provider/node_modules/ethereumjs-util/dist.browser/address.js ***!
  \*******************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"./node_modules/buffer/index.js\")[\"Buffer\"];\n\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Address = void 0;\nvar assert_1 = __importDefault(__webpack_require__(/*! assert */ \"./node_modules/assert/build/assert.js\"));\nvar externals_1 = __webpack_require__(/*! ./externals */ \"./node_modules/@web3auth/ethereum-provider/node_modules/ethereumjs-util/dist.browser/externals.js\");\nvar bytes_1 = __webpack_require__(/*! ./bytes */ \"./node_modules/@web3auth/ethereum-provider/node_modules/ethereumjs-util/dist.browser/bytes.js\");\nvar account_1 = __webpack_require__(/*! ./account */ \"./node_modules/@web3auth/ethereum-provider/node_modules/ethereumjs-util/dist.browser/account.js\");\nvar Address = /** @class */ (function () {\n    function Address(buf) {\n        (0, assert_1.default)(buf.length === 20, 'Invalid address length');\n        this.buf = buf;\n    }\n    /**\n     * Returns the zero address.\n     */\n    Address.zero = function () {\n        return new Address((0, bytes_1.zeros)(20));\n    };\n    /**\n     * Returns an Address object from a hex-encoded string.\n     * @param str - Hex-encoded address\n     */\n    Address.fromString = function (str) {\n        (0, assert_1.default)((0, account_1.isValidAddress)(str), 'Invalid address');\n        return new Address((0, bytes_1.toBuffer)(str));\n    };\n    /**\n     * Returns an address for a given public key.\n     * @param pubKey The two points of an uncompressed key\n     */\n    Address.fromPublicKey = function (pubKey) {\n        (0, assert_1.default)(Buffer.isBuffer(pubKey), 'Public key should be Buffer');\n        var buf = (0, account_1.pubToAddress)(pubKey);\n        return new Address(buf);\n    };\n    /**\n     * Returns an address for a given private key.\n     * @param privateKey A private key must be 256 bits wide\n     */\n    Address.fromPrivateKey = function (privateKey) {\n        (0, assert_1.default)(Buffer.isBuffer(privateKey), 'Private key should be Buffer');\n        var buf = (0, account_1.privateToAddress)(privateKey);\n        return new Address(buf);\n    };\n    /**\n     * Generates an address for a newly created contract.\n     * @param from The address which is creating this new address\n     * @param nonce The nonce of the from account\n     */\n    Address.generate = function (from, nonce) {\n        (0, assert_1.default)(externals_1.BN.isBN(nonce));\n        return new Address((0, account_1.generateAddress)(from.buf, nonce.toArrayLike(Buffer)));\n    };\n    /**\n     * Generates an address for a contract created using CREATE2.\n     * @param from The address which is creating this new address\n     * @param salt A salt\n     * @param initCode The init code of the contract being created\n     */\n    Address.generate2 = function (from, salt, initCode) {\n        (0, assert_1.default)(Buffer.isBuffer(salt));\n        (0, assert_1.default)(Buffer.isBuffer(initCode));\n        return new Address((0, account_1.generateAddress2)(from.buf, salt, initCode));\n    };\n    /**\n     * Is address equal to another.\n     */\n    Address.prototype.equals = function (address) {\n        return this.buf.equals(address.buf);\n    };\n    /**\n     * Is address zero.\n     */\n    Address.prototype.isZero = function () {\n        return this.equals(Address.zero());\n    };\n    /**\n     * True if address is in the address range defined\n     * by EIP-1352\n     */\n    Address.prototype.isPrecompileOrSystemAddress = function () {\n        var addressBN = new externals_1.BN(this.buf);\n        var rangeMin = new externals_1.BN(0);\n        var rangeMax = new externals_1.BN('ffff', 'hex');\n        return addressBN.gte(rangeMin) && addressBN.lte(rangeMax);\n    };\n    /**\n     * Returns hex encoding of address.\n     */\n    Address.prototype.toString = function () {\n        return '0x' + this.buf.toString('hex');\n    };\n    /**\n     * Returns Buffer representation of address.\n     */\n    Address.prototype.toBuffer = function () {\n        return Buffer.from(this.buf);\n    };\n    return Address;\n}());\nexports.Address = Address;\n//# sourceMappingURL=address.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHdlYjNhdXRoL2V0aGVyZXVtLXByb3ZpZGVyL25vZGVfbW9kdWxlcy9ldGhlcmV1bWpzLXV0aWwvZGlzdC5icm93c2VyL2FkZHJlc3MuanMuanMiLCJtYXBwaW5ncyI6IjtBQUFhO0FBQ2I7QUFDQSw2Q0FBNkM7QUFDN0M7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsZUFBZTtBQUNmLCtCQUErQixtQkFBTyxDQUFDLHFEQUFRO0FBQy9DLGtCQUFrQixtQkFBTyxDQUFDLHNIQUFhO0FBQ3ZDLGNBQWMsbUJBQU8sQ0FBQyw4R0FBUztBQUMvQixnQkFBZ0IsbUJBQU8sQ0FBQyxrSEFBVztBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4QkFBOEIsTUFBTTtBQUNwQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOEJBQThCLE1BQU07QUFDcEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzRkFBc0YsTUFBTTtBQUM1RjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOEJBQThCLE1BQU07QUFDcEMsOEJBQThCLE1BQU07QUFDcEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLE1BQU07QUFDckI7QUFDQTtBQUNBLENBQUM7QUFDRCxlQUFlO0FBQ2YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0B3ZWIzYXV0aC9ldGhlcmV1bS1wcm92aWRlci9ub2RlX21vZHVsZXMvZXRoZXJldW1qcy11dGlsL2Rpc3QuYnJvd3Nlci9hZGRyZXNzLmpzPzEyYWIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19pbXBvcnREZWZhdWx0ID0gKHRoaXMgJiYgdGhpcy5fX2ltcG9ydERlZmF1bHQpIHx8IGZ1bmN0aW9uIChtb2QpIHtcbiAgICByZXR1cm4gKG1vZCAmJiBtb2QuX19lc01vZHVsZSkgPyBtb2QgOiB7IFwiZGVmYXVsdFwiOiBtb2QgfTtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkFkZHJlc3MgPSB2b2lkIDA7XG52YXIgYXNzZXJ0XzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZShcImFzc2VydFwiKSk7XG52YXIgZXh0ZXJuYWxzXzEgPSByZXF1aXJlKFwiLi9leHRlcm5hbHNcIik7XG52YXIgYnl0ZXNfMSA9IHJlcXVpcmUoXCIuL2J5dGVzXCIpO1xudmFyIGFjY291bnRfMSA9IHJlcXVpcmUoXCIuL2FjY291bnRcIik7XG52YXIgQWRkcmVzcyA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBBZGRyZXNzKGJ1Zikge1xuICAgICAgICAoMCwgYXNzZXJ0XzEuZGVmYXVsdCkoYnVmLmxlbmd0aCA9PT0gMjAsICdJbnZhbGlkIGFkZHJlc3MgbGVuZ3RoJyk7XG4gICAgICAgIHRoaXMuYnVmID0gYnVmO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBSZXR1cm5zIHRoZSB6ZXJvIGFkZHJlc3MuXG4gICAgICovXG4gICAgQWRkcmVzcy56ZXJvID0gZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gbmV3IEFkZHJlc3MoKDAsIGJ5dGVzXzEuemVyb3MpKDIwKSk7XG4gICAgfTtcbiAgICAvKipcbiAgICAgKiBSZXR1cm5zIGFuIEFkZHJlc3Mgb2JqZWN0IGZyb20gYSBoZXgtZW5jb2RlZCBzdHJpbmcuXG4gICAgICogQHBhcmFtIHN0ciAtIEhleC1lbmNvZGVkIGFkZHJlc3NcbiAgICAgKi9cbiAgICBBZGRyZXNzLmZyb21TdHJpbmcgPSBmdW5jdGlvbiAoc3RyKSB7XG4gICAgICAgICgwLCBhc3NlcnRfMS5kZWZhdWx0KSgoMCwgYWNjb3VudF8xLmlzVmFsaWRBZGRyZXNzKShzdHIpLCAnSW52YWxpZCBhZGRyZXNzJyk7XG4gICAgICAgIHJldHVybiBuZXcgQWRkcmVzcygoMCwgYnl0ZXNfMS50b0J1ZmZlcikoc3RyKSk7XG4gICAgfTtcbiAgICAvKipcbiAgICAgKiBSZXR1cm5zIGFuIGFkZHJlc3MgZm9yIGEgZ2l2ZW4gcHVibGljIGtleS5cbiAgICAgKiBAcGFyYW0gcHViS2V5IFRoZSB0d28gcG9pbnRzIG9mIGFuIHVuY29tcHJlc3NlZCBrZXlcbiAgICAgKi9cbiAgICBBZGRyZXNzLmZyb21QdWJsaWNLZXkgPSBmdW5jdGlvbiAocHViS2V5KSB7XG4gICAgICAgICgwLCBhc3NlcnRfMS5kZWZhdWx0KShCdWZmZXIuaXNCdWZmZXIocHViS2V5KSwgJ1B1YmxpYyBrZXkgc2hvdWxkIGJlIEJ1ZmZlcicpO1xuICAgICAgICB2YXIgYnVmID0gKDAsIGFjY291bnRfMS5wdWJUb0FkZHJlc3MpKHB1YktleSk7XG4gICAgICAgIHJldHVybiBuZXcgQWRkcmVzcyhidWYpO1xuICAgIH07XG4gICAgLyoqXG4gICAgICogUmV0dXJucyBhbiBhZGRyZXNzIGZvciBhIGdpdmVuIHByaXZhdGUga2V5LlxuICAgICAqIEBwYXJhbSBwcml2YXRlS2V5IEEgcHJpdmF0ZSBrZXkgbXVzdCBiZSAyNTYgYml0cyB3aWRlXG4gICAgICovXG4gICAgQWRkcmVzcy5mcm9tUHJpdmF0ZUtleSA9IGZ1bmN0aW9uIChwcml2YXRlS2V5KSB7XG4gICAgICAgICgwLCBhc3NlcnRfMS5kZWZhdWx0KShCdWZmZXIuaXNCdWZmZXIocHJpdmF0ZUtleSksICdQcml2YXRlIGtleSBzaG91bGQgYmUgQnVmZmVyJyk7XG4gICAgICAgIHZhciBidWYgPSAoMCwgYWNjb3VudF8xLnByaXZhdGVUb0FkZHJlc3MpKHByaXZhdGVLZXkpO1xuICAgICAgICByZXR1cm4gbmV3IEFkZHJlc3MoYnVmKTtcbiAgICB9O1xuICAgIC8qKlxuICAgICAqIEdlbmVyYXRlcyBhbiBhZGRyZXNzIGZvciBhIG5ld2x5IGNyZWF0ZWQgY29udHJhY3QuXG4gICAgICogQHBhcmFtIGZyb20gVGhlIGFkZHJlc3Mgd2hpY2ggaXMgY3JlYXRpbmcgdGhpcyBuZXcgYWRkcmVzc1xuICAgICAqIEBwYXJhbSBub25jZSBUaGUgbm9uY2Ugb2YgdGhlIGZyb20gYWNjb3VudFxuICAgICAqL1xuICAgIEFkZHJlc3MuZ2VuZXJhdGUgPSBmdW5jdGlvbiAoZnJvbSwgbm9uY2UpIHtcbiAgICAgICAgKDAsIGFzc2VydF8xLmRlZmF1bHQpKGV4dGVybmFsc18xLkJOLmlzQk4obm9uY2UpKTtcbiAgICAgICAgcmV0dXJuIG5ldyBBZGRyZXNzKCgwLCBhY2NvdW50XzEuZ2VuZXJhdGVBZGRyZXNzKShmcm9tLmJ1Ziwgbm9uY2UudG9BcnJheUxpa2UoQnVmZmVyKSkpO1xuICAgIH07XG4gICAgLyoqXG4gICAgICogR2VuZXJhdGVzIGFuIGFkZHJlc3MgZm9yIGEgY29udHJhY3QgY3JlYXRlZCB1c2luZyBDUkVBVEUyLlxuICAgICAqIEBwYXJhbSBmcm9tIFRoZSBhZGRyZXNzIHdoaWNoIGlzIGNyZWF0aW5nIHRoaXMgbmV3IGFkZHJlc3NcbiAgICAgKiBAcGFyYW0gc2FsdCBBIHNhbHRcbiAgICAgKiBAcGFyYW0gaW5pdENvZGUgVGhlIGluaXQgY29kZSBvZiB0aGUgY29udHJhY3QgYmVpbmcgY3JlYXRlZFxuICAgICAqL1xuICAgIEFkZHJlc3MuZ2VuZXJhdGUyID0gZnVuY3Rpb24gKGZyb20sIHNhbHQsIGluaXRDb2RlKSB7XG4gICAgICAgICgwLCBhc3NlcnRfMS5kZWZhdWx0KShCdWZmZXIuaXNCdWZmZXIoc2FsdCkpO1xuICAgICAgICAoMCwgYXNzZXJ0XzEuZGVmYXVsdCkoQnVmZmVyLmlzQnVmZmVyKGluaXRDb2RlKSk7XG4gICAgICAgIHJldHVybiBuZXcgQWRkcmVzcygoMCwgYWNjb3VudF8xLmdlbmVyYXRlQWRkcmVzczIpKGZyb20uYnVmLCBzYWx0LCBpbml0Q29kZSkpO1xuICAgIH07XG4gICAgLyoqXG4gICAgICogSXMgYWRkcmVzcyBlcXVhbCB0byBhbm90aGVyLlxuICAgICAqL1xuICAgIEFkZHJlc3MucHJvdG90eXBlLmVxdWFscyA9IGZ1bmN0aW9uIChhZGRyZXNzKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmJ1Zi5lcXVhbHMoYWRkcmVzcy5idWYpO1xuICAgIH07XG4gICAgLyoqXG4gICAgICogSXMgYWRkcmVzcyB6ZXJvLlxuICAgICAqL1xuICAgIEFkZHJlc3MucHJvdG90eXBlLmlzWmVybyA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZXF1YWxzKEFkZHJlc3MuemVybygpKTtcbiAgICB9O1xuICAgIC8qKlxuICAgICAqIFRydWUgaWYgYWRkcmVzcyBpcyBpbiB0aGUgYWRkcmVzcyByYW5nZSBkZWZpbmVkXG4gICAgICogYnkgRUlQLTEzNTJcbiAgICAgKi9cbiAgICBBZGRyZXNzLnByb3RvdHlwZS5pc1ByZWNvbXBpbGVPclN5c3RlbUFkZHJlc3MgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciBhZGRyZXNzQk4gPSBuZXcgZXh0ZXJuYWxzXzEuQk4odGhpcy5idWYpO1xuICAgICAgICB2YXIgcmFuZ2VNaW4gPSBuZXcgZXh0ZXJuYWxzXzEuQk4oMCk7XG4gICAgICAgIHZhciByYW5nZU1heCA9IG5ldyBleHRlcm5hbHNfMS5CTignZmZmZicsICdoZXgnKTtcbiAgICAgICAgcmV0dXJuIGFkZHJlc3NCTi5ndGUocmFuZ2VNaW4pICYmIGFkZHJlc3NCTi5sdGUocmFuZ2VNYXgpO1xuICAgIH07XG4gICAgLyoqXG4gICAgICogUmV0dXJucyBoZXggZW5jb2Rpbmcgb2YgYWRkcmVzcy5cbiAgICAgKi9cbiAgICBBZGRyZXNzLnByb3RvdHlwZS50b1N0cmluZyA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuICcweCcgKyB0aGlzLmJ1Zi50b1N0cmluZygnaGV4Jyk7XG4gICAgfTtcbiAgICAvKipcbiAgICAgKiBSZXR1cm5zIEJ1ZmZlciByZXByZXNlbnRhdGlvbiBvZiBhZGRyZXNzLlxuICAgICAqL1xuICAgIEFkZHJlc3MucHJvdG90eXBlLnRvQnVmZmVyID0gZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gQnVmZmVyLmZyb20odGhpcy5idWYpO1xuICAgIH07XG4gICAgcmV0dXJuIEFkZHJlc3M7XG59KCkpO1xuZXhwb3J0cy5BZGRyZXNzID0gQWRkcmVzcztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFkZHJlc3MuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@web3auth/ethereum-provider/node_modules/ethereumjs-util/dist.browser/address.js\n");

/***/ }),

/***/ "./node_modules/@web3auth/ethereum-provider/node_modules/ethereumjs-util/dist.browser/bytes.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/@web3auth/ethereum-provider/node_modules/ethereumjs-util/dist.browser/bytes.js ***!
  \*****************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"./node_modules/buffer/index.js\")[\"Buffer\"];\n\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.bufArrToArr = exports.arrToBufArr = exports.validateNoLeadingZeroes = exports.baToJSON = exports.toUtf8 = exports.addHexPrefix = exports.toUnsigned = exports.fromSigned = exports.bufferToHex = exports.bufferToInt = exports.toBuffer = exports.unpadHexString = exports.unpadArray = exports.unpadBuffer = exports.setLengthRight = exports.setLengthLeft = exports.zeros = exports.intToBuffer = exports.intToHex = void 0;\nvar externals_1 = __webpack_require__(/*! ./externals */ \"./node_modules/@web3auth/ethereum-provider/node_modules/ethereumjs-util/dist.browser/externals.js\");\nvar internal_1 = __webpack_require__(/*! ./internal */ \"./node_modules/@web3auth/ethereum-provider/node_modules/ethereumjs-util/dist.browser/internal.js\");\nvar helpers_1 = __webpack_require__(/*! ./helpers */ \"./node_modules/@web3auth/ethereum-provider/node_modules/ethereumjs-util/dist.browser/helpers.js\");\n/**\n * Converts a `Number` into a hex `String`\n * @param {Number} i\n * @return {String}\n */\nvar intToHex = function (i) {\n    if (!Number.isSafeInteger(i) || i < 0) {\n        throw new Error(\"Received an invalid integer type: \".concat(i));\n    }\n    return \"0x\".concat(i.toString(16));\n};\nexports.intToHex = intToHex;\n/**\n * Converts an `Number` to a `Buffer`\n * @param {Number} i\n * @return {Buffer}\n */\nvar intToBuffer = function (i) {\n    var hex = (0, exports.intToHex)(i);\n    return Buffer.from((0, internal_1.padToEven)(hex.slice(2)), 'hex');\n};\nexports.intToBuffer = intToBuffer;\n/**\n * Returns a buffer filled with 0s.\n * @param bytes the number of bytes the buffer should be\n */\nvar zeros = function (bytes) {\n    return Buffer.allocUnsafe(bytes).fill(0);\n};\nexports.zeros = zeros;\n/**\n * Pads a `Buffer` with zeros till it has `length` bytes.\n * Truncates the beginning or end of input if its length exceeds `length`.\n * @param msg the value to pad (Buffer)\n * @param length the number of bytes the output should be\n * @param right whether to start padding form the left or right\n * @return (Buffer)\n */\nvar setLength = function (msg, length, right) {\n    var buf = (0, exports.zeros)(length);\n    if (right) {\n        if (msg.length < length) {\n            msg.copy(buf);\n            return buf;\n        }\n        return msg.slice(0, length);\n    }\n    else {\n        if (msg.length < length) {\n            msg.copy(buf, length - msg.length);\n            return buf;\n        }\n        return msg.slice(-length);\n    }\n};\n/**\n * Left Pads a `Buffer` with leading zeros till it has `length` bytes.\n * Or it truncates the beginning if it exceeds.\n * @param msg the value to pad (Buffer)\n * @param length the number of bytes the output should be\n * @return (Buffer)\n */\nvar setLengthLeft = function (msg, length) {\n    (0, helpers_1.assertIsBuffer)(msg);\n    return setLength(msg, length, false);\n};\nexports.setLengthLeft = setLengthLeft;\n/**\n * Right Pads a `Buffer` with trailing zeros till it has `length` bytes.\n * it truncates the end if it exceeds.\n * @param msg the value to pad (Buffer)\n * @param length the number of bytes the output should be\n * @return (Buffer)\n */\nvar setLengthRight = function (msg, length) {\n    (0, helpers_1.assertIsBuffer)(msg);\n    return setLength(msg, length, true);\n};\nexports.setLengthRight = setLengthRight;\n/**\n * Trims leading zeros from a `Buffer`, `String` or `Number[]`.\n * @param a (Buffer|Array|String)\n * @return (Buffer|Array|String)\n */\nvar stripZeros = function (a) {\n    var first = a[0];\n    while (a.length > 0 && first.toString() === '0') {\n        a = a.slice(1);\n        first = a[0];\n    }\n    return a;\n};\n/**\n * Trims leading zeros from a `Buffer`.\n * @param a (Buffer)\n * @return (Buffer)\n */\nvar unpadBuffer = function (a) {\n    (0, helpers_1.assertIsBuffer)(a);\n    return stripZeros(a);\n};\nexports.unpadBuffer = unpadBuffer;\n/**\n * Trims leading zeros from an `Array` (of numbers).\n * @param a (number[])\n * @return (number[])\n */\nvar unpadArray = function (a) {\n    (0, helpers_1.assertIsArray)(a);\n    return stripZeros(a);\n};\nexports.unpadArray = unpadArray;\n/**\n * Trims leading zeros from a hex-prefixed `String`.\n * @param a (String)\n * @return (String)\n */\nvar unpadHexString = function (a) {\n    (0, helpers_1.assertIsHexString)(a);\n    a = (0, internal_1.stripHexPrefix)(a);\n    return stripZeros(a);\n};\nexports.unpadHexString = unpadHexString;\n/**\n * Attempts to turn a value into a `Buffer`.\n * Inputs supported: `Buffer`, `String` (hex-prefixed), `Number`, null/undefined, `BN` and other objects\n * with a `toArray()` or `toBuffer()` method.\n * @param v the value\n */\nvar toBuffer = function (v) {\n    if (v === null || v === undefined) {\n        return Buffer.allocUnsafe(0);\n    }\n    if (Buffer.isBuffer(v)) {\n        return Buffer.from(v);\n    }\n    if (Array.isArray(v) || v instanceof Uint8Array) {\n        return Buffer.from(v);\n    }\n    if (typeof v === 'string') {\n        if (!(0, internal_1.isHexString)(v)) {\n            throw new Error(\"Cannot convert string to buffer. toBuffer only supports 0x-prefixed hex strings and this string was given: \".concat(v));\n        }\n        return Buffer.from((0, internal_1.padToEven)((0, internal_1.stripHexPrefix)(v)), 'hex');\n    }\n    if (typeof v === 'number') {\n        return (0, exports.intToBuffer)(v);\n    }\n    if (externals_1.BN.isBN(v)) {\n        if (v.isNeg()) {\n            throw new Error(\"Cannot convert negative BN to buffer. Given: \".concat(v));\n        }\n        return v.toArrayLike(Buffer);\n    }\n    if (v.toArray) {\n        // converts a BN to a Buffer\n        return Buffer.from(v.toArray());\n    }\n    if (v.toBuffer) {\n        return Buffer.from(v.toBuffer());\n    }\n    throw new Error('invalid type');\n};\nexports.toBuffer = toBuffer;\n/**\n * Converts a `Buffer` to a `Number`.\n * @param buf `Buffer` object to convert\n * @throws If the input number exceeds 53 bits.\n */\nvar bufferToInt = function (buf) {\n    return new externals_1.BN((0, exports.toBuffer)(buf)).toNumber();\n};\nexports.bufferToInt = bufferToInt;\n/**\n * Converts a `Buffer` into a `0x`-prefixed hex `String`.\n * @param buf `Buffer` object to convert\n */\nvar bufferToHex = function (buf) {\n    buf = (0, exports.toBuffer)(buf);\n    return '0x' + buf.toString('hex');\n};\nexports.bufferToHex = bufferToHex;\n/**\n * Interprets a `Buffer` as a signed integer and returns a `BN`. Assumes 256-bit numbers.\n * @param num Signed integer value\n */\nvar fromSigned = function (num) {\n    return new externals_1.BN(num).fromTwos(256);\n};\nexports.fromSigned = fromSigned;\n/**\n * Converts a `BN` to an unsigned integer and returns it as a `Buffer`. Assumes 256-bit numbers.\n * @param num\n */\nvar toUnsigned = function (num) {\n    return Buffer.from(num.toTwos(256).toArray());\n};\nexports.toUnsigned = toUnsigned;\n/**\n * Adds \"0x\" to a given `String` if it does not already start with \"0x\".\n */\nvar addHexPrefix = function (str) {\n    if (typeof str !== 'string') {\n        return str;\n    }\n    return (0, internal_1.isHexPrefixed)(str) ? str : '0x' + str;\n};\nexports.addHexPrefix = addHexPrefix;\n/**\n * Returns the utf8 string representation from a hex string.\n *\n * Examples:\n *\n * Input 1: '657468657265756d000000000000000000000000000000000000000000000000'\n * Input 2: '657468657265756d'\n * Input 3: '000000000000000000000000000000000000000000000000657468657265756d'\n *\n * Output (all 3 input variants): 'ethereum'\n *\n * Note that this method is not intended to be used with hex strings\n * representing quantities in both big endian or little endian notation.\n *\n * @param string Hex string, should be `0x` prefixed\n * @return Utf8 string\n */\nvar toUtf8 = function (hex) {\n    var zerosRegexp = /^(00)+|(00)+$/g;\n    hex = (0, internal_1.stripHexPrefix)(hex);\n    if (hex.length % 2 !== 0) {\n        throw new Error('Invalid non-even hex string input for toUtf8() provided');\n    }\n    var bufferVal = Buffer.from(hex.replace(zerosRegexp, ''), 'hex');\n    return bufferVal.toString('utf8');\n};\nexports.toUtf8 = toUtf8;\n/**\n * Converts a `Buffer` or `Array` to JSON.\n * @param ba (Buffer|Array)\n * @return (Array|String|null)\n */\nvar baToJSON = function (ba) {\n    if (Buffer.isBuffer(ba)) {\n        return \"0x\".concat(ba.toString('hex'));\n    }\n    else if (ba instanceof Array) {\n        var array = [];\n        for (var i = 0; i < ba.length; i++) {\n            array.push((0, exports.baToJSON)(ba[i]));\n        }\n        return array;\n    }\n};\nexports.baToJSON = baToJSON;\n/**\n * Checks provided Buffers for leading zeroes and throws if found.\n *\n * Examples:\n *\n * Valid values: 0x1, 0x, 0x01, 0x1234\n * Invalid values: 0x0, 0x00, 0x001, 0x0001\n *\n * Note: This method is useful for validating that RLP encoded integers comply with the rule that all\n * integer values encoded to RLP must be in the most compact form and contain no leading zero bytes\n * @param values An object containing string keys and Buffer values\n * @throws if any provided value is found to have leading zero bytes\n */\nvar validateNoLeadingZeroes = function (values) {\n    var e_1, _a;\n    try {\n        for (var _b = __values(Object.entries(values)), _c = _b.next(); !_c.done; _c = _b.next()) {\n            var _d = __read(_c.value, 2), k = _d[0], v = _d[1];\n            if (v !== undefined && v.length > 0 && v[0] === 0) {\n                throw new Error(\"\".concat(k, \" cannot have leading zeroes, received: \").concat(v.toString('hex')));\n            }\n        }\n    }\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n    finally {\n        try {\n            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n        }\n        finally { if (e_1) throw e_1.error; }\n    }\n};\nexports.validateNoLeadingZeroes = validateNoLeadingZeroes;\nfunction arrToBufArr(arr) {\n    if (!Array.isArray(arr)) {\n        return Buffer.from(arr);\n    }\n    return arr.map(function (a) { return arrToBufArr(a); });\n}\nexports.arrToBufArr = arrToBufArr;\nfunction bufArrToArr(arr) {\n    if (!Array.isArray(arr)) {\n        return Uint8Array.from(arr !== null && arr !== void 0 ? arr : []);\n    }\n    return arr.map(function (a) { return bufArrToArr(a); });\n}\nexports.bufArrToArr = bufArrToArr;\n//# sourceMappingURL=bytes.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@web3auth/ethereum-provider/node_modules/ethereumjs-util/dist.browser/bytes.js\n");

/***/ }),

/***/ "./node_modules/@web3auth/ethereum-provider/node_modules/ethereumjs-util/dist.browser/constants.js":
/*!*********************************************************************************************************!*\
  !*** ./node_modules/@web3auth/ethereum-provider/node_modules/ethereumjs-util/dist.browser/constants.js ***!
  \*********************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.KECCAK256_RLP = exports.KECCAK256_RLP_S = exports.KECCAK256_RLP_ARRAY = exports.KECCAK256_RLP_ARRAY_S = exports.KECCAK256_NULL = exports.KECCAK256_NULL_S = exports.TWO_POW256 = exports.MAX_INTEGER = exports.MAX_UINT64 = void 0;\nvar buffer_1 = __webpack_require__(/*! buffer */ \"./node_modules/buffer/index.js\");\nvar externals_1 = __webpack_require__(/*! ./externals */ \"./node_modules/@web3auth/ethereum-provider/node_modules/ethereumjs-util/dist.browser/externals.js\");\n/**\n * 2^64-1\n */\nexports.MAX_UINT64 = new externals_1.BN('ffffffffffffffff', 16);\n/**\n * The max integer that the evm can handle (2^256-1)\n */\nexports.MAX_INTEGER = new externals_1.BN('ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff', 16);\n/**\n * 2^256\n */\nexports.TWO_POW256 = new externals_1.BN('10000000000000000000000000000000000000000000000000000000000000000', 16);\n/**\n * Keccak-256 hash of null\n */\nexports.KECCAK256_NULL_S = 'c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470';\n/**\n * Keccak-256 hash of null\n */\nexports.KECCAK256_NULL = buffer_1.Buffer.from(exports.KECCAK256_NULL_S, 'hex');\n/**\n * Keccak-256 of an RLP of an empty array\n */\nexports.KECCAK256_RLP_ARRAY_S = '1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347';\n/**\n * Keccak-256 of an RLP of an empty array\n */\nexports.KECCAK256_RLP_ARRAY = buffer_1.Buffer.from(exports.KECCAK256_RLP_ARRAY_S, 'hex');\n/**\n * Keccak-256 hash of the RLP of null\n */\nexports.KECCAK256_RLP_S = '56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421';\n/**\n * Keccak-256 hash of the RLP of null\n */\nexports.KECCAK256_RLP = buffer_1.Buffer.from(exports.KECCAK256_RLP_S, 'hex');\n//# sourceMappingURL=constants.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHdlYjNhdXRoL2V0aGVyZXVtLXByb3ZpZGVyL25vZGVfbW9kdWxlcy9ldGhlcmV1bWpzLXV0aWwvZGlzdC5icm93c2VyL2NvbnN0YW50cy5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxxQkFBcUIsR0FBRyx1QkFBdUIsR0FBRywyQkFBMkIsR0FBRyw2QkFBNkIsR0FBRyxzQkFBc0IsR0FBRyx3QkFBd0IsR0FBRyxrQkFBa0IsR0FBRyxtQkFBbUIsR0FBRyxrQkFBa0I7QUFDak8sZUFBZSxtQkFBTyxDQUFDLDhDQUFRO0FBQy9CLGtCQUFrQixtQkFBTyxDQUFDLHNIQUFhO0FBQ3ZDO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQjtBQUNsQjtBQUNBO0FBQ0E7QUFDQSxtQkFBbUI7QUFDbkI7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QjtBQUN4QjtBQUNBO0FBQ0E7QUFDQSxzQkFBc0I7QUFDdEI7QUFDQTtBQUNBO0FBQ0EsNkJBQTZCO0FBQzdCO0FBQ0E7QUFDQTtBQUNBLDJCQUEyQjtBQUMzQjtBQUNBO0FBQ0E7QUFDQSx1QkFBdUI7QUFDdkI7QUFDQTtBQUNBO0FBQ0EscUJBQXFCO0FBQ3JCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ad2ViM2F1dGgvZXRoZXJldW0tcHJvdmlkZXIvbm9kZV9tb2R1bGVzL2V0aGVyZXVtanMtdXRpbC9kaXN0LmJyb3dzZXIvY29uc3RhbnRzLmpzP2YyMzEiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLktFQ0NBSzI1Nl9STFAgPSBleHBvcnRzLktFQ0NBSzI1Nl9STFBfUyA9IGV4cG9ydHMuS0VDQ0FLMjU2X1JMUF9BUlJBWSA9IGV4cG9ydHMuS0VDQ0FLMjU2X1JMUF9BUlJBWV9TID0gZXhwb3J0cy5LRUNDQUsyNTZfTlVMTCA9IGV4cG9ydHMuS0VDQ0FLMjU2X05VTExfUyA9IGV4cG9ydHMuVFdPX1BPVzI1NiA9IGV4cG9ydHMuTUFYX0lOVEVHRVIgPSBleHBvcnRzLk1BWF9VSU5UNjQgPSB2b2lkIDA7XG52YXIgYnVmZmVyXzEgPSByZXF1aXJlKFwiYnVmZmVyXCIpO1xudmFyIGV4dGVybmFsc18xID0gcmVxdWlyZShcIi4vZXh0ZXJuYWxzXCIpO1xuLyoqXG4gKiAyXjY0LTFcbiAqL1xuZXhwb3J0cy5NQVhfVUlOVDY0ID0gbmV3IGV4dGVybmFsc18xLkJOKCdmZmZmZmZmZmZmZmZmZmZmJywgMTYpO1xuLyoqXG4gKiBUaGUgbWF4IGludGVnZXIgdGhhdCB0aGUgZXZtIGNhbiBoYW5kbGUgKDJeMjU2LTEpXG4gKi9cbmV4cG9ydHMuTUFYX0lOVEVHRVIgPSBuZXcgZXh0ZXJuYWxzXzEuQk4oJ2ZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmYnLCAxNik7XG4vKipcbiAqIDJeMjU2XG4gKi9cbmV4cG9ydHMuVFdPX1BPVzI1NiA9IG5ldyBleHRlcm5hbHNfMS5CTignMTAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAnLCAxNik7XG4vKipcbiAqIEtlY2Nhay0yNTYgaGFzaCBvZiBudWxsXG4gKi9cbmV4cG9ydHMuS0VDQ0FLMjU2X05VTExfUyA9ICdjNWQyNDYwMTg2ZjcyMzNjOTI3ZTdkYjJkY2M3MDNjMGU1MDBiNjUzY2E4MjI3M2I3YmZhZDgwNDVkODVhNDcwJztcbi8qKlxuICogS2VjY2FrLTI1NiBoYXNoIG9mIG51bGxcbiAqL1xuZXhwb3J0cy5LRUNDQUsyNTZfTlVMTCA9IGJ1ZmZlcl8xLkJ1ZmZlci5mcm9tKGV4cG9ydHMuS0VDQ0FLMjU2X05VTExfUywgJ2hleCcpO1xuLyoqXG4gKiBLZWNjYWstMjU2IG9mIGFuIFJMUCBvZiBhbiBlbXB0eSBhcnJheVxuICovXG5leHBvcnRzLktFQ0NBSzI1Nl9STFBfQVJSQVlfUyA9ICcxZGNjNGRlOGRlYzc1ZDdhYWI4NWI1NjdiNmNjZDQxYWQzMTI0NTFiOTQ4YTc0MTNmMGExNDJmZDQwZDQ5MzQ3Jztcbi8qKlxuICogS2VjY2FrLTI1NiBvZiBhbiBSTFAgb2YgYW4gZW1wdHkgYXJyYXlcbiAqL1xuZXhwb3J0cy5LRUNDQUsyNTZfUkxQX0FSUkFZID0gYnVmZmVyXzEuQnVmZmVyLmZyb20oZXhwb3J0cy5LRUNDQUsyNTZfUkxQX0FSUkFZX1MsICdoZXgnKTtcbi8qKlxuICogS2VjY2FrLTI1NiBoYXNoIG9mIHRoZSBSTFAgb2YgbnVsbFxuICovXG5leHBvcnRzLktFQ0NBSzI1Nl9STFBfUyA9ICc1NmU4MWYxNzFiY2M1NWE2ZmY4MzQ1ZTY5MmMwZjg2ZTViNDhlMDFiOTk2Y2FkYzAwMTYyMmZiNWUzNjNiNDIxJztcbi8qKlxuICogS2VjY2FrLTI1NiBoYXNoIG9mIHRoZSBSTFAgb2YgbnVsbFxuICovXG5leHBvcnRzLktFQ0NBSzI1Nl9STFAgPSBidWZmZXJfMS5CdWZmZXIuZnJvbShleHBvcnRzLktFQ0NBSzI1Nl9STFBfUywgJ2hleCcpO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y29uc3RhbnRzLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@web3auth/ethereum-provider/node_modules/ethereumjs-util/dist.browser/constants.js\n");

/***/ }),

/***/ "./node_modules/@web3auth/ethereum-provider/node_modules/ethereumjs-util/dist.browser/externals.js":
/*!*********************************************************************************************************!*\
  !*** ./node_modules/@web3auth/ethereum-provider/node_modules/ethereumjs-util/dist.browser/externals.js ***!
  \*********************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\n/**\n * Re-exports commonly used modules:\n * * Exports [`BN`](https://github.com/indutny/bn.js), [`rlp`](https://github.com/ethereumjs/rlp).\n * @packageDocumentation\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.rlp = exports.BN = void 0;\nvar bn_js_1 = __importDefault(__webpack_require__(/*! bn.js */ \"./node_modules/@web3auth/ethereum-provider/node_modules/bn.js/lib/bn.js\"));\nexports.BN = bn_js_1.default;\nvar rlp = __importStar(__webpack_require__(/*! rlp */ \"./node_modules/rlp/dist.browser/index.js\"));\nexports.rlp = rlp;\n//# sourceMappingURL=externals.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHdlYjNhdXRoL2V0aGVyZXVtLXByb3ZpZGVyL25vZGVfbW9kdWxlcy9ldGhlcmV1bWpzLXV0aWwvZGlzdC5icm93c2VyL2V4dGVybmFscy5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsb0NBQW9DO0FBQ25EO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBLDBDQUEwQyw0QkFBNEI7QUFDdEUsQ0FBQztBQUNEO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2Q0FBNkM7QUFDN0M7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsV0FBVyxHQUFHLFVBQVU7QUFDeEIsOEJBQThCLG1CQUFPLENBQUMsc0ZBQU87QUFDN0MsVUFBVTtBQUNWLHVCQUF1QixtQkFBTyxDQUFDLHFEQUFLO0FBQ3BDLFdBQVc7QUFDWCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHdlYjNhdXRoL2V0aGVyZXVtLXByb3ZpZGVyL25vZGVfbW9kdWxlcy9ldGhlcmV1bWpzLXV0aWwvZGlzdC5icm93c2VyL2V4dGVybmFscy5qcz9jYTNmIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLyoqXG4gKiBSZS1leHBvcnRzIGNvbW1vbmx5IHVzZWQgbW9kdWxlczpcbiAqICogRXhwb3J0cyBbYEJOYF0oaHR0cHM6Ly9naXRodWIuY29tL2luZHV0bnkvYm4uanMpLCBbYHJscGBdKGh0dHBzOi8vZ2l0aHViLmNvbS9ldGhlcmV1bWpzL3JscCkuXG4gKiBAcGFja2FnZURvY3VtZW50YXRpb25cbiAqL1xudmFyIF9fY3JlYXRlQmluZGluZyA9ICh0aGlzICYmIHRoaXMuX19jcmVhdGVCaW5kaW5nKSB8fCAoT2JqZWN0LmNyZWF0ZSA/IChmdW5jdGlvbihvLCBtLCBrLCBrMikge1xuICAgIGlmIChrMiA9PT0gdW5kZWZpbmVkKSBrMiA9IGs7XG4gICAgdmFyIGRlc2MgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKG0sIGspO1xuICAgIGlmICghZGVzYyB8fCAoXCJnZXRcIiBpbiBkZXNjID8gIW0uX19lc01vZHVsZSA6IGRlc2Mud3JpdGFibGUgfHwgZGVzYy5jb25maWd1cmFibGUpKSB7XG4gICAgICBkZXNjID0geyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uKCkgeyByZXR1cm4gbVtrXTsgfSB9O1xuICAgIH1cbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkobywgazIsIGRlc2MpO1xufSkgOiAoZnVuY3Rpb24obywgbSwgaywgazIpIHtcbiAgICBpZiAoazIgPT09IHVuZGVmaW5lZCkgazIgPSBrO1xuICAgIG9bazJdID0gbVtrXTtcbn0pKTtcbnZhciBfX3NldE1vZHVsZURlZmF1bHQgPSAodGhpcyAmJiB0aGlzLl9fc2V0TW9kdWxlRGVmYXVsdCkgfHwgKE9iamVjdC5jcmVhdGUgPyAoZnVuY3Rpb24obywgdikge1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvLCBcImRlZmF1bHRcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCB2YWx1ZTogdiB9KTtcbn0pIDogZnVuY3Rpb24obywgdikge1xuICAgIG9bXCJkZWZhdWx0XCJdID0gdjtcbn0pO1xudmFyIF9faW1wb3J0U3RhciA9ICh0aGlzICYmIHRoaXMuX19pbXBvcnRTdGFyKSB8fCBmdW5jdGlvbiAobW9kKSB7XG4gICAgaWYgKG1vZCAmJiBtb2QuX19lc01vZHVsZSkgcmV0dXJuIG1vZDtcbiAgICB2YXIgcmVzdWx0ID0ge307XG4gICAgaWYgKG1vZCAhPSBudWxsKSBmb3IgKHZhciBrIGluIG1vZCkgaWYgKGsgIT09IFwiZGVmYXVsdFwiICYmIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChtb2QsIGspKSBfX2NyZWF0ZUJpbmRpbmcocmVzdWx0LCBtb2QsIGspO1xuICAgIF9fc2V0TW9kdWxlRGVmYXVsdChyZXN1bHQsIG1vZCk7XG4gICAgcmV0dXJuIHJlc3VsdDtcbn07XG52YXIgX19pbXBvcnREZWZhdWx0ID0gKHRoaXMgJiYgdGhpcy5fX2ltcG9ydERlZmF1bHQpIHx8IGZ1bmN0aW9uIChtb2QpIHtcbiAgICByZXR1cm4gKG1vZCAmJiBtb2QuX19lc01vZHVsZSkgPyBtb2QgOiB7IFwiZGVmYXVsdFwiOiBtb2QgfTtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLnJscCA9IGV4cG9ydHMuQk4gPSB2b2lkIDA7XG52YXIgYm5fanNfMSA9IF9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwiYm4uanNcIikpO1xuZXhwb3J0cy5CTiA9IGJuX2pzXzEuZGVmYXVsdDtcbnZhciBybHAgPSBfX2ltcG9ydFN0YXIocmVxdWlyZShcInJscFwiKSk7XG5leHBvcnRzLnJscCA9IHJscDtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWV4dGVybmFscy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@web3auth/ethereum-provider/node_modules/ethereumjs-util/dist.browser/externals.js\n");

/***/ }),

/***/ "./node_modules/@web3auth/ethereum-provider/node_modules/ethereumjs-util/dist.browser/hash.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/@web3auth/ethereum-provider/node_modules/ethereumjs-util/dist.browser/hash.js ***!
  \****************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"./node_modules/buffer/index.js\")[\"Buffer\"];\n\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.rlphash = exports.ripemd160FromArray = exports.ripemd160FromString = exports.ripemd160 = exports.sha256FromArray = exports.sha256FromString = exports.sha256 = exports.keccakFromArray = exports.keccakFromHexString = exports.keccakFromString = exports.keccak256 = exports.keccak = void 0;\nvar keccak_1 = __webpack_require__(/*! ethereum-cryptography/keccak */ \"./node_modules/ethereum-cryptography/keccak.js\");\nvar createHash = __webpack_require__(/*! create-hash */ \"./node_modules/create-hash/browser.js\");\nvar externals_1 = __webpack_require__(/*! ./externals */ \"./node_modules/@web3auth/ethereum-provider/node_modules/ethereumjs-util/dist.browser/externals.js\");\nvar bytes_1 = __webpack_require__(/*! ./bytes */ \"./node_modules/@web3auth/ethereum-provider/node_modules/ethereumjs-util/dist.browser/bytes.js\");\nvar helpers_1 = __webpack_require__(/*! ./helpers */ \"./node_modules/@web3auth/ethereum-provider/node_modules/ethereumjs-util/dist.browser/helpers.js\");\n/**\n * Creates Keccak hash of a Buffer input\n * @param a The input data (Buffer)\n * @param bits (number = 256) The Keccak width\n */\nvar keccak = function (a, bits) {\n    if (bits === void 0) { bits = 256; }\n    (0, helpers_1.assertIsBuffer)(a);\n    switch (bits) {\n        case 224: {\n            return (0, keccak_1.keccak224)(a);\n        }\n        case 256: {\n            return (0, keccak_1.keccak256)(a);\n        }\n        case 384: {\n            return (0, keccak_1.keccak384)(a);\n        }\n        case 512: {\n            return (0, keccak_1.keccak512)(a);\n        }\n        default: {\n            throw new Error(\"Invald algorithm: keccak\".concat(bits));\n        }\n    }\n};\nexports.keccak = keccak;\n/**\n * Creates Keccak-256 hash of the input, alias for keccak(a, 256).\n * @param a The input data (Buffer)\n */\nvar keccak256 = function (a) {\n    return (0, exports.keccak)(a);\n};\nexports.keccak256 = keccak256;\n/**\n * Creates Keccak hash of a utf-8 string input\n * @param a The input data (String)\n * @param bits (number = 256) The Keccak width\n */\nvar keccakFromString = function (a, bits) {\n    if (bits === void 0) { bits = 256; }\n    (0, helpers_1.assertIsString)(a);\n    var buf = Buffer.from(a, 'utf8');\n    return (0, exports.keccak)(buf, bits);\n};\nexports.keccakFromString = keccakFromString;\n/**\n * Creates Keccak hash of an 0x-prefixed string input\n * @param a The input data (String)\n * @param bits (number = 256) The Keccak width\n */\nvar keccakFromHexString = function (a, bits) {\n    if (bits === void 0) { bits = 256; }\n    (0, helpers_1.assertIsHexString)(a);\n    return (0, exports.keccak)((0, bytes_1.toBuffer)(a), bits);\n};\nexports.keccakFromHexString = keccakFromHexString;\n/**\n * Creates Keccak hash of a number array input\n * @param a The input data (number[])\n * @param bits (number = 256) The Keccak width\n */\nvar keccakFromArray = function (a, bits) {\n    if (bits === void 0) { bits = 256; }\n    (0, helpers_1.assertIsArray)(a);\n    return (0, exports.keccak)((0, bytes_1.toBuffer)(a), bits);\n};\nexports.keccakFromArray = keccakFromArray;\n/**\n * Creates SHA256 hash of an input.\n * @param  a The input data (Buffer|Array|String)\n */\nvar _sha256 = function (a) {\n    a = (0, bytes_1.toBuffer)(a);\n    return createHash('sha256').update(a).digest();\n};\n/**\n * Creates SHA256 hash of a Buffer input.\n * @param a The input data (Buffer)\n */\nvar sha256 = function (a) {\n    (0, helpers_1.assertIsBuffer)(a);\n    return _sha256(a);\n};\nexports.sha256 = sha256;\n/**\n * Creates SHA256 hash of a string input.\n * @param a The input data (string)\n */\nvar sha256FromString = function (a) {\n    (0, helpers_1.assertIsString)(a);\n    return _sha256(a);\n};\nexports.sha256FromString = sha256FromString;\n/**\n * Creates SHA256 hash of a number[] input.\n * @param a The input data (number[])\n */\nvar sha256FromArray = function (a) {\n    (0, helpers_1.assertIsArray)(a);\n    return _sha256(a);\n};\nexports.sha256FromArray = sha256FromArray;\n/**\n * Creates RIPEMD160 hash of the input.\n * @param a The input data (Buffer|Array|String|Number)\n * @param padded Whether it should be padded to 256 bits or not\n */\nvar _ripemd160 = function (a, padded) {\n    a = (0, bytes_1.toBuffer)(a);\n    var hash = createHash('rmd160').update(a).digest();\n    if (padded === true) {\n        return (0, bytes_1.setLengthLeft)(hash, 32);\n    }\n    else {\n        return hash;\n    }\n};\n/**\n * Creates RIPEMD160 hash of a Buffer input.\n * @param a The input data (Buffer)\n * @param padded Whether it should be padded to 256 bits or not\n */\nvar ripemd160 = function (a, padded) {\n    (0, helpers_1.assertIsBuffer)(a);\n    return _ripemd160(a, padded);\n};\nexports.ripemd160 = ripemd160;\n/**\n * Creates RIPEMD160 hash of a string input.\n * @param a The input data (String)\n * @param padded Whether it should be padded to 256 bits or not\n */\nvar ripemd160FromString = function (a, padded) {\n    (0, helpers_1.assertIsString)(a);\n    return _ripemd160(a, padded);\n};\nexports.ripemd160FromString = ripemd160FromString;\n/**\n * Creates RIPEMD160 hash of a number[] input.\n * @param a The input data (number[])\n * @param padded Whether it should be padded to 256 bits or not\n */\nvar ripemd160FromArray = function (a, padded) {\n    (0, helpers_1.assertIsArray)(a);\n    return _ripemd160(a, padded);\n};\nexports.ripemd160FromArray = ripemd160FromArray;\n/**\n * Creates SHA-3 hash of the RLP encoded version of the input.\n * @param a The input data\n */\nvar rlphash = function (a) {\n    return (0, exports.keccak)(externals_1.rlp.encode(a));\n};\nexports.rlphash = rlphash;\n//# sourceMappingURL=hash.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@web3auth/ethereum-provider/node_modules/ethereumjs-util/dist.browser/hash.js\n");

/***/ }),

/***/ "./node_modules/@web3auth/ethereum-provider/node_modules/ethereumjs-util/dist.browser/helpers.js":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/@web3auth/ethereum-provider/node_modules/ethereumjs-util/dist.browser/helpers.js ***!
  \*******************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"./node_modules/buffer/index.js\")[\"Buffer\"];\n\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.assertIsString = exports.assertIsArray = exports.assertIsBuffer = exports.assertIsHexString = void 0;\nvar internal_1 = __webpack_require__(/*! ./internal */ \"./node_modules/@web3auth/ethereum-provider/node_modules/ethereumjs-util/dist.browser/internal.js\");\n/**\n * Throws if a string is not hex prefixed\n * @param {string} input string to check hex prefix of\n */\nvar assertIsHexString = function (input) {\n    if (!(0, internal_1.isHexString)(input)) {\n        var msg = \"This method only supports 0x-prefixed hex strings but input was: \".concat(input);\n        throw new Error(msg);\n    }\n};\nexports.assertIsHexString = assertIsHexString;\n/**\n * Throws if input is not a buffer\n * @param {Buffer} input value to check\n */\nvar assertIsBuffer = function (input) {\n    if (!Buffer.isBuffer(input)) {\n        var msg = \"This method only supports Buffer but input was: \".concat(input);\n        throw new Error(msg);\n    }\n};\nexports.assertIsBuffer = assertIsBuffer;\n/**\n * Throws if input is not an array\n * @param {number[]} input value to check\n */\nvar assertIsArray = function (input) {\n    if (!Array.isArray(input)) {\n        var msg = \"This method only supports number arrays but input was: \".concat(input);\n        throw new Error(msg);\n    }\n};\nexports.assertIsArray = assertIsArray;\n/**\n * Throws if input is not a string\n * @param {string} input value to check\n */\nvar assertIsString = function (input) {\n    if (typeof input !== 'string') {\n        var msg = \"This method only supports strings but input was: \".concat(input);\n        throw new Error(msg);\n    }\n};\nexports.assertIsString = assertIsString;\n//# sourceMappingURL=helpers.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHdlYjNhdXRoL2V0aGVyZXVtLXByb3ZpZGVyL25vZGVfbW9kdWxlcy9ldGhlcmV1bWpzLXV0aWwvZGlzdC5icm93c2VyL2hlbHBlcnMuanMuanMiLCJtYXBwaW5ncyI6IjtBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHNCQUFzQixHQUFHLHFCQUFxQixHQUFHLHNCQUFzQixHQUFHLHlCQUF5QjtBQUNuRyxpQkFBaUIsbUJBQU8sQ0FBQyxvSEFBWTtBQUNyQztBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUJBQXlCO0FBQ3pCO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkI7QUFDQTtBQUNBLFNBQVMsTUFBTTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCO0FBQ3RCO0FBQ0E7QUFDQSxXQUFXLFVBQVU7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckI7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQjtBQUN0QiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHdlYjNhdXRoL2V0aGVyZXVtLXByb3ZpZGVyL25vZGVfbW9kdWxlcy9ldGhlcmV1bWpzLXV0aWwvZGlzdC5icm93c2VyL2hlbHBlcnMuanM/YzY4OSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuYXNzZXJ0SXNTdHJpbmcgPSBleHBvcnRzLmFzc2VydElzQXJyYXkgPSBleHBvcnRzLmFzc2VydElzQnVmZmVyID0gZXhwb3J0cy5hc3NlcnRJc0hleFN0cmluZyA9IHZvaWQgMDtcbnZhciBpbnRlcm5hbF8xID0gcmVxdWlyZShcIi4vaW50ZXJuYWxcIik7XG4vKipcbiAqIFRocm93cyBpZiBhIHN0cmluZyBpcyBub3QgaGV4IHByZWZpeGVkXG4gKiBAcGFyYW0ge3N0cmluZ30gaW5wdXQgc3RyaW5nIHRvIGNoZWNrIGhleCBwcmVmaXggb2ZcbiAqL1xudmFyIGFzc2VydElzSGV4U3RyaW5nID0gZnVuY3Rpb24gKGlucHV0KSB7XG4gICAgaWYgKCEoMCwgaW50ZXJuYWxfMS5pc0hleFN0cmluZykoaW5wdXQpKSB7XG4gICAgICAgIHZhciBtc2cgPSBcIlRoaXMgbWV0aG9kIG9ubHkgc3VwcG9ydHMgMHgtcHJlZml4ZWQgaGV4IHN0cmluZ3MgYnV0IGlucHV0IHdhczogXCIuY29uY2F0KGlucHV0KTtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKG1zZyk7XG4gICAgfVxufTtcbmV4cG9ydHMuYXNzZXJ0SXNIZXhTdHJpbmcgPSBhc3NlcnRJc0hleFN0cmluZztcbi8qKlxuICogVGhyb3dzIGlmIGlucHV0IGlzIG5vdCBhIGJ1ZmZlclxuICogQHBhcmFtIHtCdWZmZXJ9IGlucHV0IHZhbHVlIHRvIGNoZWNrXG4gKi9cbnZhciBhc3NlcnRJc0J1ZmZlciA9IGZ1bmN0aW9uIChpbnB1dCkge1xuICAgIGlmICghQnVmZmVyLmlzQnVmZmVyKGlucHV0KSkge1xuICAgICAgICB2YXIgbXNnID0gXCJUaGlzIG1ldGhvZCBvbmx5IHN1cHBvcnRzIEJ1ZmZlciBidXQgaW5wdXQgd2FzOiBcIi5jb25jYXQoaW5wdXQpO1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IobXNnKTtcbiAgICB9XG59O1xuZXhwb3J0cy5hc3NlcnRJc0J1ZmZlciA9IGFzc2VydElzQnVmZmVyO1xuLyoqXG4gKiBUaHJvd3MgaWYgaW5wdXQgaXMgbm90IGFuIGFycmF5XG4gKiBAcGFyYW0ge251bWJlcltdfSBpbnB1dCB2YWx1ZSB0byBjaGVja1xuICovXG52YXIgYXNzZXJ0SXNBcnJheSA9IGZ1bmN0aW9uIChpbnB1dCkge1xuICAgIGlmICghQXJyYXkuaXNBcnJheShpbnB1dCkpIHtcbiAgICAgICAgdmFyIG1zZyA9IFwiVGhpcyBtZXRob2Qgb25seSBzdXBwb3J0cyBudW1iZXIgYXJyYXlzIGJ1dCBpbnB1dCB3YXM6IFwiLmNvbmNhdChpbnB1dCk7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihtc2cpO1xuICAgIH1cbn07XG5leHBvcnRzLmFzc2VydElzQXJyYXkgPSBhc3NlcnRJc0FycmF5O1xuLyoqXG4gKiBUaHJvd3MgaWYgaW5wdXQgaXMgbm90IGEgc3RyaW5nXG4gKiBAcGFyYW0ge3N0cmluZ30gaW5wdXQgdmFsdWUgdG8gY2hlY2tcbiAqL1xudmFyIGFzc2VydElzU3RyaW5nID0gZnVuY3Rpb24gKGlucHV0KSB7XG4gICAgaWYgKHR5cGVvZiBpbnB1dCAhPT0gJ3N0cmluZycpIHtcbiAgICAgICAgdmFyIG1zZyA9IFwiVGhpcyBtZXRob2Qgb25seSBzdXBwb3J0cyBzdHJpbmdzIGJ1dCBpbnB1dCB3YXM6IFwiLmNvbmNhdChpbnB1dCk7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihtc2cpO1xuICAgIH1cbn07XG5leHBvcnRzLmFzc2VydElzU3RyaW5nID0gYXNzZXJ0SXNTdHJpbmc7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1oZWxwZXJzLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@web3auth/ethereum-provider/node_modules/ethereumjs-util/dist.browser/helpers.js\n");

/***/ }),

/***/ "./node_modules/@web3auth/ethereum-provider/node_modules/ethereumjs-util/dist.browser/index.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/@web3auth/ethereum-provider/node_modules/ethereumjs-util/dist.browser/index.js ***!
  \*****************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.isHexString = exports.getKeys = exports.fromAscii = exports.fromUtf8 = exports.toAscii = exports.arrayContainsArray = exports.getBinarySize = exports.padToEven = exports.stripHexPrefix = exports.isHexPrefixed = void 0;\n/**\n * Constants\n */\n__exportStar(__webpack_require__(/*! ./constants */ \"./node_modules/@web3auth/ethereum-provider/node_modules/ethereumjs-util/dist.browser/constants.js\"), exports);\n/**\n * Account class and helper functions\n */\n__exportStar(__webpack_require__(/*! ./account */ \"./node_modules/@web3auth/ethereum-provider/node_modules/ethereumjs-util/dist.browser/account.js\"), exports);\n/**\n * Address type\n */\n__exportStar(__webpack_require__(/*! ./address */ \"./node_modules/@web3auth/ethereum-provider/node_modules/ethereumjs-util/dist.browser/address.js\"), exports);\n/**\n * Hash functions\n */\n__exportStar(__webpack_require__(/*! ./hash */ \"./node_modules/@web3auth/ethereum-provider/node_modules/ethereumjs-util/dist.browser/hash.js\"), exports);\n/**\n * ECDSA signature\n */\n__exportStar(__webpack_require__(/*! ./signature */ \"./node_modules/@web3auth/ethereum-provider/node_modules/ethereumjs-util/dist.browser/signature.js\"), exports);\n/**\n * Utilities for manipulating Buffers, byte arrays, etc.\n */\n__exportStar(__webpack_require__(/*! ./bytes */ \"./node_modules/@web3auth/ethereum-provider/node_modules/ethereumjs-util/dist.browser/bytes.js\"), exports);\n/**\n * Function for definining properties on an object\n */\n__exportStar(__webpack_require__(/*! ./object */ \"./node_modules/@web3auth/ethereum-provider/node_modules/ethereumjs-util/dist.browser/object.js\"), exports);\n/**\n * External exports (BN, rlp)\n */\n__exportStar(__webpack_require__(/*! ./externals */ \"./node_modules/@web3auth/ethereum-provider/node_modules/ethereumjs-util/dist.browser/externals.js\"), exports);\n/**\n * Helpful TypeScript types\n */\n__exportStar(__webpack_require__(/*! ./types */ \"./node_modules/@web3auth/ethereum-provider/node_modules/ethereumjs-util/dist.browser/types.js\"), exports);\n/**\n * Export ethjs-util methods\n */\nvar internal_1 = __webpack_require__(/*! ./internal */ \"./node_modules/@web3auth/ethereum-provider/node_modules/ethereumjs-util/dist.browser/internal.js\");\nObject.defineProperty(exports, \"isHexPrefixed\", ({ enumerable: true, get: function () { return internal_1.isHexPrefixed; } }));\nObject.defineProperty(exports, \"stripHexPrefix\", ({ enumerable: true, get: function () { return internal_1.stripHexPrefix; } }));\nObject.defineProperty(exports, \"padToEven\", ({ enumerable: true, get: function () { return internal_1.padToEven; } }));\nObject.defineProperty(exports, \"getBinarySize\", ({ enumerable: true, get: function () { return internal_1.getBinarySize; } }));\nObject.defineProperty(exports, \"arrayContainsArray\", ({ enumerable: true, get: function () { return internal_1.arrayContainsArray; } }));\nObject.defineProperty(exports, \"toAscii\", ({ enumerable: true, get: function () { return internal_1.toAscii; } }));\nObject.defineProperty(exports, \"fromUtf8\", ({ enumerable: true, get: function () { return internal_1.fromUtf8; } }));\nObject.defineProperty(exports, \"fromAscii\", ({ enumerable: true, get: function () { return internal_1.fromAscii; } }));\nObject.defineProperty(exports, \"getKeys\", ({ enumerable: true, get: function () { return internal_1.getKeys; } }));\nObject.defineProperty(exports, \"isHexString\", ({ enumerable: true, get: function () { return internal_1.isHexString; } }));\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHdlYjNhdXRoL2V0aGVyZXVtLXByb3ZpZGVyL25vZGVfbW9kdWxlcy9ldGhlcmV1bWpzLXV0aWwvZGlzdC5icm93c2VyL2luZGV4LmpzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLG9DQUFvQztBQUNuRDtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELG1CQUFtQixHQUFHLGVBQWUsR0FBRyxpQkFBaUIsR0FBRyxnQkFBZ0IsR0FBRyxlQUFlLEdBQUcsMEJBQTBCLEdBQUcscUJBQXFCLEdBQUcsaUJBQWlCLEdBQUcsc0JBQXNCLEdBQUcscUJBQXFCO0FBQ3hOO0FBQ0E7QUFDQTtBQUNBLGFBQWEsbUJBQU8sQ0FBQyxzSEFBYTtBQUNsQztBQUNBO0FBQ0E7QUFDQSxhQUFhLG1CQUFPLENBQUMsa0hBQVc7QUFDaEM7QUFDQTtBQUNBO0FBQ0EsYUFBYSxtQkFBTyxDQUFDLGtIQUFXO0FBQ2hDO0FBQ0E7QUFDQTtBQUNBLGFBQWEsbUJBQU8sQ0FBQyw0R0FBUTtBQUM3QjtBQUNBO0FBQ0E7QUFDQSxhQUFhLG1CQUFPLENBQUMsc0hBQWE7QUFDbEM7QUFDQTtBQUNBO0FBQ0EsYUFBYSxtQkFBTyxDQUFDLDhHQUFTO0FBQzlCO0FBQ0E7QUFDQTtBQUNBLGFBQWEsbUJBQU8sQ0FBQyxnSEFBVTtBQUMvQjtBQUNBO0FBQ0E7QUFDQSxhQUFhLG1CQUFPLENBQUMsc0hBQWE7QUFDbEM7QUFDQTtBQUNBO0FBQ0EsYUFBYSxtQkFBTyxDQUFDLDhHQUFTO0FBQzlCO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQixtQkFBTyxDQUFDLG9IQUFZO0FBQ3JDLGlEQUFnRCxFQUFFLHFDQUFxQyxvQ0FBb0MsRUFBQztBQUM1SCxrREFBaUQsRUFBRSxxQ0FBcUMscUNBQXFDLEVBQUM7QUFDOUgsNkNBQTRDLEVBQUUscUNBQXFDLGdDQUFnQyxFQUFDO0FBQ3BILGlEQUFnRCxFQUFFLHFDQUFxQyxvQ0FBb0MsRUFBQztBQUM1SCxzREFBcUQsRUFBRSxxQ0FBcUMseUNBQXlDLEVBQUM7QUFDdEksMkNBQTBDLEVBQUUscUNBQXFDLDhCQUE4QixFQUFDO0FBQ2hILDRDQUEyQyxFQUFFLHFDQUFxQywrQkFBK0IsRUFBQztBQUNsSCw2Q0FBNEMsRUFBRSxxQ0FBcUMsZ0NBQWdDLEVBQUM7QUFDcEgsMkNBQTBDLEVBQUUscUNBQXFDLDhCQUE4QixFQUFDO0FBQ2hILCtDQUE4QyxFQUFFLHFDQUFxQyxrQ0FBa0MsRUFBQztBQUN4SCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHdlYjNhdXRoL2V0aGVyZXVtLXByb3ZpZGVyL25vZGVfbW9kdWxlcy9ldGhlcmV1bWpzLXV0aWwvZGlzdC5icm93c2VyL2luZGV4LmpzPzRlZTciXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19jcmVhdGVCaW5kaW5nID0gKHRoaXMgJiYgdGhpcy5fX2NyZWF0ZUJpbmRpbmcpIHx8IChPYmplY3QuY3JlYXRlID8gKGZ1bmN0aW9uKG8sIG0sIGssIGsyKSB7XG4gICAgaWYgKGsyID09PSB1bmRlZmluZWQpIGsyID0gaztcbiAgICB2YXIgZGVzYyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IobSwgayk7XG4gICAgaWYgKCFkZXNjIHx8IChcImdldFwiIGluIGRlc2MgPyAhbS5fX2VzTW9kdWxlIDogZGVzYy53cml0YWJsZSB8fCBkZXNjLmNvbmZpZ3VyYWJsZSkpIHtcbiAgICAgIGRlc2MgPSB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24oKSB7IHJldHVybiBtW2tdOyB9IH07XG4gICAgfVxuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvLCBrMiwgZGVzYyk7XG59KSA6IChmdW5jdGlvbihvLCBtLCBrLCBrMikge1xuICAgIGlmIChrMiA9PT0gdW5kZWZpbmVkKSBrMiA9IGs7XG4gICAgb1trMl0gPSBtW2tdO1xufSkpO1xudmFyIF9fZXhwb3J0U3RhciA9ICh0aGlzICYmIHRoaXMuX19leHBvcnRTdGFyKSB8fCBmdW5jdGlvbihtLCBleHBvcnRzKSB7XG4gICAgZm9yICh2YXIgcCBpbiBtKSBpZiAocCAhPT0gXCJkZWZhdWx0XCIgJiYgIU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChleHBvcnRzLCBwKSkgX19jcmVhdGVCaW5kaW5nKGV4cG9ydHMsIG0sIHApO1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuaXNIZXhTdHJpbmcgPSBleHBvcnRzLmdldEtleXMgPSBleHBvcnRzLmZyb21Bc2NpaSA9IGV4cG9ydHMuZnJvbVV0ZjggPSBleHBvcnRzLnRvQXNjaWkgPSBleHBvcnRzLmFycmF5Q29udGFpbnNBcnJheSA9IGV4cG9ydHMuZ2V0QmluYXJ5U2l6ZSA9IGV4cG9ydHMucGFkVG9FdmVuID0gZXhwb3J0cy5zdHJpcEhleFByZWZpeCA9IGV4cG9ydHMuaXNIZXhQcmVmaXhlZCA9IHZvaWQgMDtcbi8qKlxuICogQ29uc3RhbnRzXG4gKi9cbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9jb25zdGFudHNcIiksIGV4cG9ydHMpO1xuLyoqXG4gKiBBY2NvdW50IGNsYXNzIGFuZCBoZWxwZXIgZnVuY3Rpb25zXG4gKi9cbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9hY2NvdW50XCIpLCBleHBvcnRzKTtcbi8qKlxuICogQWRkcmVzcyB0eXBlXG4gKi9cbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9hZGRyZXNzXCIpLCBleHBvcnRzKTtcbi8qKlxuICogSGFzaCBmdW5jdGlvbnNcbiAqL1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL2hhc2hcIiksIGV4cG9ydHMpO1xuLyoqXG4gKiBFQ0RTQSBzaWduYXR1cmVcbiAqL1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL3NpZ25hdHVyZVwiKSwgZXhwb3J0cyk7XG4vKipcbiAqIFV0aWxpdGllcyBmb3IgbWFuaXB1bGF0aW5nIEJ1ZmZlcnMsIGJ5dGUgYXJyYXlzLCBldGMuXG4gKi9cbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9ieXRlc1wiKSwgZXhwb3J0cyk7XG4vKipcbiAqIEZ1bmN0aW9uIGZvciBkZWZpbmluaW5nIHByb3BlcnRpZXMgb24gYW4gb2JqZWN0XG4gKi9cbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9vYmplY3RcIiksIGV4cG9ydHMpO1xuLyoqXG4gKiBFeHRlcm5hbCBleHBvcnRzIChCTiwgcmxwKVxuICovXG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vZXh0ZXJuYWxzXCIpLCBleHBvcnRzKTtcbi8qKlxuICogSGVscGZ1bCBUeXBlU2NyaXB0IHR5cGVzXG4gKi9cbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi90eXBlc1wiKSwgZXhwb3J0cyk7XG4vKipcbiAqIEV4cG9ydCBldGhqcy11dGlsIG1ldGhvZHNcbiAqL1xudmFyIGludGVybmFsXzEgPSByZXF1aXJlKFwiLi9pbnRlcm5hbFwiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcImlzSGV4UHJlZml4ZWRcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGludGVybmFsXzEuaXNIZXhQcmVmaXhlZDsgfSB9KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcInN0cmlwSGV4UHJlZml4XCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBpbnRlcm5hbF8xLnN0cmlwSGV4UHJlZml4OyB9IH0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwicGFkVG9FdmVuXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBpbnRlcm5hbF8xLnBhZFRvRXZlbjsgfSB9KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcImdldEJpbmFyeVNpemVcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGludGVybmFsXzEuZ2V0QmluYXJ5U2l6ZTsgfSB9KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcImFycmF5Q29udGFpbnNBcnJheVwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gaW50ZXJuYWxfMS5hcnJheUNvbnRhaW5zQXJyYXk7IH0gfSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJ0b0FzY2lpXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBpbnRlcm5hbF8xLnRvQXNjaWk7IH0gfSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJmcm9tVXRmOFwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gaW50ZXJuYWxfMS5mcm9tVXRmODsgfSB9KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcImZyb21Bc2NpaVwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gaW50ZXJuYWxfMS5mcm9tQXNjaWk7IH0gfSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJnZXRLZXlzXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBpbnRlcm5hbF8xLmdldEtleXM7IH0gfSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJpc0hleFN0cmluZ1wiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gaW50ZXJuYWxfMS5pc0hleFN0cmluZzsgfSB9KTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@web3auth/ethereum-provider/node_modules/ethereumjs-util/dist.browser/index.js\n");

/***/ }),

/***/ "./node_modules/@web3auth/ethereum-provider/node_modules/ethereumjs-util/dist.browser/internal.js":
/*!********************************************************************************************************!*\
  !*** ./node_modules/@web3auth/ethereum-provider/node_modules/ethereumjs-util/dist.browser/internal.js ***!
  \********************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"./node_modules/buffer/index.js\")[\"Buffer\"];\n\n/*\nThe MIT License\n\nCopyright (c) 2016 Nick Dodson. nickdodson.com\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.isHexString = exports.getKeys = exports.fromAscii = exports.fromUtf8 = exports.toAscii = exports.arrayContainsArray = exports.getBinarySize = exports.padToEven = exports.stripHexPrefix = exports.isHexPrefixed = void 0;\n/**\n * Returns a `Boolean` on whether or not the a `String` starts with '0x'\n * @param str the string input value\n * @return a boolean if it is or is not hex prefixed\n * @throws if the str input is not a string\n */\nfunction isHexPrefixed(str) {\n    if (typeof str !== 'string') {\n        throw new Error(\"[isHexPrefixed] input must be type 'string', received type \".concat(typeof str));\n    }\n    return str[0] === '0' && str[1] === 'x';\n}\nexports.isHexPrefixed = isHexPrefixed;\n/**\n * Removes '0x' from a given `String` if present\n * @param str the string value\n * @returns the string without 0x prefix\n */\nvar stripHexPrefix = function (str) {\n    if (typeof str !== 'string')\n        throw new Error(\"[stripHexPrefix] input must be type 'string', received \".concat(typeof str));\n    return isHexPrefixed(str) ? str.slice(2) : str;\n};\nexports.stripHexPrefix = stripHexPrefix;\n/**\n * Pads a `String` to have an even length\n * @param value\n * @return output\n */\nfunction padToEven(value) {\n    var a = value;\n    if (typeof a !== 'string') {\n        throw new Error(\"[padToEven] value must be type 'string', received \".concat(typeof a));\n    }\n    if (a.length % 2)\n        a = \"0\".concat(a);\n    return a;\n}\nexports.padToEven = padToEven;\n/**\n * Get the binary size of a string\n * @param str\n * @returns the number of bytes contained within the string\n */\nfunction getBinarySize(str) {\n    if (typeof str !== 'string') {\n        throw new Error(\"[getBinarySize] method requires input type 'string', recieved \".concat(typeof str));\n    }\n    return Buffer.byteLength(str, 'utf8');\n}\nexports.getBinarySize = getBinarySize;\n/**\n * Returns TRUE if the first specified array contains all elements\n * from the second one. FALSE otherwise.\n *\n * @param superset\n * @param subset\n *\n */\nfunction arrayContainsArray(superset, subset, some) {\n    if (Array.isArray(superset) !== true) {\n        throw new Error(\"[arrayContainsArray] method requires input 'superset' to be an array, got type '\".concat(typeof superset, \"'\"));\n    }\n    if (Array.isArray(subset) !== true) {\n        throw new Error(\"[arrayContainsArray] method requires input 'subset' to be an array, got type '\".concat(typeof subset, \"'\"));\n    }\n    return subset[some ? 'some' : 'every'](function (value) { return superset.indexOf(value) >= 0; });\n}\nexports.arrayContainsArray = arrayContainsArray;\n/**\n * Should be called to get ascii from its hex representation\n *\n * @param string in hex\n * @returns ascii string representation of hex value\n */\nfunction toAscii(hex) {\n    var str = '';\n    var i = 0;\n    var l = hex.length;\n    if (hex.substring(0, 2) === '0x')\n        i = 2;\n    for (; i < l; i += 2) {\n        var code = parseInt(hex.substr(i, 2), 16);\n        str += String.fromCharCode(code);\n    }\n    return str;\n}\nexports.toAscii = toAscii;\n/**\n * Should be called to get hex representation (prefixed by 0x) of utf8 string\n *\n * @param string\n * @param optional padding\n * @returns hex representation of input string\n */\nfunction fromUtf8(stringValue) {\n    var str = Buffer.from(stringValue, 'utf8');\n    return \"0x\".concat(padToEven(str.toString('hex')).replace(/^0+|0+$/g, ''));\n}\nexports.fromUtf8 = fromUtf8;\n/**\n * Should be called to get hex representation (prefixed by 0x) of ascii string\n *\n * @param  string\n * @param  optional padding\n * @returns  hex representation of input string\n */\nfunction fromAscii(stringValue) {\n    var hex = '';\n    for (var i = 0; i < stringValue.length; i++) {\n        var code = stringValue.charCodeAt(i);\n        var n = code.toString(16);\n        hex += n.length < 2 ? \"0\".concat(n) : n;\n    }\n    return \"0x\".concat(hex);\n}\nexports.fromAscii = fromAscii;\n/**\n * Returns the keys from an array of objects.\n * @example\n * ```js\n * getKeys([{a: '1', b: '2'}, {a: '3', b: '4'}], 'a') => ['1', '3']\n *````\n * @param  params\n * @param  key\n * @param  allowEmpty\n * @returns output just a simple array of output keys\n */\nfunction getKeys(params, key, allowEmpty) {\n    if (!Array.isArray(params)) {\n        throw new Error(\"[getKeys] method expects input 'params' to be an array, got \".concat(typeof params));\n    }\n    if (typeof key !== 'string') {\n        throw new Error(\"[getKeys] method expects input 'key' to be type 'string', got \".concat(typeof params));\n    }\n    var result = [];\n    for (var i = 0; i < params.length; i++) {\n        var value = params[i][key];\n        if (allowEmpty && !value) {\n            value = '';\n        }\n        else if (typeof value !== 'string') {\n            throw new Error(\"invalid abi - expected type 'string', received \".concat(typeof value));\n        }\n        result.push(value);\n    }\n    return result;\n}\nexports.getKeys = getKeys;\n/**\n * Is the string a hex string.\n *\n * @param  value\n * @param  length\n * @returns  output the string is a hex string\n */\nfunction isHexString(value, length) {\n    if (typeof value !== 'string' || !value.match(/^0x[0-9A-Fa-f]*$/))\n        return false;\n    if (length && value.length !== 2 + 2 * length)\n        return false;\n    return true;\n}\nexports.isHexString = isHexString;\n//# sourceMappingURL=internal.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@web3auth/ethereum-provider/node_modules/ethereumjs-util/dist.browser/internal.js\n");

/***/ }),

/***/ "./node_modules/@web3auth/ethereum-provider/node_modules/ethereumjs-util/dist.browser/object.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/@web3auth/ethereum-provider/node_modules/ethereumjs-util/dist.browser/object.js ***!
  \******************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"./node_modules/buffer/index.js\")[\"Buffer\"];\n\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.defineProperties = void 0;\nvar assert_1 = __importDefault(__webpack_require__(/*! assert */ \"./node_modules/assert/build/assert.js\"));\nvar internal_1 = __webpack_require__(/*! ./internal */ \"./node_modules/@web3auth/ethereum-provider/node_modules/ethereumjs-util/dist.browser/internal.js\");\nvar externals_1 = __webpack_require__(/*! ./externals */ \"./node_modules/@web3auth/ethereum-provider/node_modules/ethereumjs-util/dist.browser/externals.js\");\nvar bytes_1 = __webpack_require__(/*! ./bytes */ \"./node_modules/@web3auth/ethereum-provider/node_modules/ethereumjs-util/dist.browser/bytes.js\");\n/**\n * Defines properties on a `Object`. It make the assumption that underlying data is binary.\n * @param self the `Object` to define properties on\n * @param fields an array fields to define. Fields can contain:\n * * `name` - the name of the properties\n * * `length` - the number of bytes the field can have\n * * `allowLess` - if the field can be less than the length\n * * `allowEmpty`\n * @param data data to be validated against the definitions\n * @deprecated\n */\nvar defineProperties = function (self, fields, data) {\n    self.raw = [];\n    self._fields = [];\n    // attach the `toJSON`\n    self.toJSON = function (label) {\n        if (label === void 0) { label = false; }\n        if (label) {\n            var obj_1 = {};\n            self._fields.forEach(function (field) {\n                obj_1[field] = \"0x\".concat(self[field].toString('hex'));\n            });\n            return obj_1;\n        }\n        return (0, bytes_1.baToJSON)(self.raw);\n    };\n    self.serialize = function serialize() {\n        return externals_1.rlp.encode(self.raw);\n    };\n    fields.forEach(function (field, i) {\n        self._fields.push(field.name);\n        function getter() {\n            return self.raw[i];\n        }\n        function setter(v) {\n            v = (0, bytes_1.toBuffer)(v);\n            if (v.toString('hex') === '00' && !field.allowZero) {\n                v = Buffer.allocUnsafe(0);\n            }\n            if (field.allowLess && field.length) {\n                v = (0, bytes_1.unpadBuffer)(v);\n                (0, assert_1.default)(field.length >= v.length, \"The field \".concat(field.name, \" must not have more \").concat(field.length, \" bytes\"));\n            }\n            else if (!(field.allowZero && v.length === 0) && field.length) {\n                (0, assert_1.default)(field.length === v.length, \"The field \".concat(field.name, \" must have byte length of \").concat(field.length));\n            }\n            self.raw[i] = v;\n        }\n        Object.defineProperty(self, field.name, {\n            enumerable: true,\n            configurable: true,\n            get: getter,\n            set: setter,\n        });\n        if (field.default) {\n            self[field.name] = field.default;\n        }\n        // attach alias\n        if (field.alias) {\n            Object.defineProperty(self, field.alias, {\n                enumerable: false,\n                configurable: true,\n                set: setter,\n                get: getter,\n            });\n        }\n    });\n    // if the constuctor is passed data\n    if (data) {\n        if (typeof data === 'string') {\n            data = Buffer.from((0, internal_1.stripHexPrefix)(data), 'hex');\n        }\n        if (Buffer.isBuffer(data)) {\n            data = externals_1.rlp.decode(data);\n        }\n        if (Array.isArray(data)) {\n            if (data.length > self._fields.length) {\n                throw new Error('wrong number of fields in data');\n            }\n            // make sure all the items are buffers\n            data.forEach(function (d, i) {\n                self[self._fields[i]] = (0, bytes_1.toBuffer)(d);\n            });\n        }\n        else if (typeof data === 'object') {\n            var keys_1 = Object.keys(data);\n            fields.forEach(function (field) {\n                if (keys_1.indexOf(field.name) !== -1)\n                    self[field.name] = data[field.name];\n                if (keys_1.indexOf(field.alias) !== -1)\n                    self[field.alias] = data[field.alias];\n            });\n        }\n        else {\n            throw new Error('invalid data');\n        }\n    }\n};\nexports.defineProperties = defineProperties;\n//# sourceMappingURL=object.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHdlYjNhdXRoL2V0aGVyZXVtLXByb3ZpZGVyL25vZGVfbW9kdWxlcy9ldGhlcmV1bWpzLXV0aWwvZGlzdC5icm93c2VyL29iamVjdC5qcy5qcyIsIm1hcHBpbmdzIjoiO0FBQWE7QUFDYjtBQUNBLDZDQUE2QztBQUM3QztBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCx3QkFBd0I7QUFDeEIsK0JBQStCLG1CQUFPLENBQUMscURBQVE7QUFDL0MsaUJBQWlCLG1CQUFPLENBQUMsb0hBQVk7QUFDckMsa0JBQWtCLG1CQUFPLENBQUMsc0hBQWE7QUFDdkMsY0FBYyxtQkFBTyxDQUFDLDhHQUFTO0FBQy9CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0NBQWdDO0FBQ2hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQixNQUFNO0FBQzFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxtQkFBbUIsTUFBTTtBQUN6QjtBQUNBLFlBQVksTUFBTTtBQUNsQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0I7QUFDeEIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0B3ZWIzYXV0aC9ldGhlcmV1bS1wcm92aWRlci9ub2RlX21vZHVsZXMvZXRoZXJldW1qcy11dGlsL2Rpc3QuYnJvd3Nlci9vYmplY3QuanM/MGY1OCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2ltcG9ydERlZmF1bHQgPSAodGhpcyAmJiB0aGlzLl9faW1wb3J0RGVmYXVsdCkgfHwgZnVuY3Rpb24gKG1vZCkge1xuICAgIHJldHVybiAobW9kICYmIG1vZC5fX2VzTW9kdWxlKSA/IG1vZCA6IHsgXCJkZWZhdWx0XCI6IG1vZCB9O1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuZGVmaW5lUHJvcGVydGllcyA9IHZvaWQgMDtcbnZhciBhc3NlcnRfMSA9IF9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwiYXNzZXJ0XCIpKTtcbnZhciBpbnRlcm5hbF8xID0gcmVxdWlyZShcIi4vaW50ZXJuYWxcIik7XG52YXIgZXh0ZXJuYWxzXzEgPSByZXF1aXJlKFwiLi9leHRlcm5hbHNcIik7XG52YXIgYnl0ZXNfMSA9IHJlcXVpcmUoXCIuL2J5dGVzXCIpO1xuLyoqXG4gKiBEZWZpbmVzIHByb3BlcnRpZXMgb24gYSBgT2JqZWN0YC4gSXQgbWFrZSB0aGUgYXNzdW1wdGlvbiB0aGF0IHVuZGVybHlpbmcgZGF0YSBpcyBiaW5hcnkuXG4gKiBAcGFyYW0gc2VsZiB0aGUgYE9iamVjdGAgdG8gZGVmaW5lIHByb3BlcnRpZXMgb25cbiAqIEBwYXJhbSBmaWVsZHMgYW4gYXJyYXkgZmllbGRzIHRvIGRlZmluZS4gRmllbGRzIGNhbiBjb250YWluOlxuICogKiBgbmFtZWAgLSB0aGUgbmFtZSBvZiB0aGUgcHJvcGVydGllc1xuICogKiBgbGVuZ3RoYCAtIHRoZSBudW1iZXIgb2YgYnl0ZXMgdGhlIGZpZWxkIGNhbiBoYXZlXG4gKiAqIGBhbGxvd0xlc3NgIC0gaWYgdGhlIGZpZWxkIGNhbiBiZSBsZXNzIHRoYW4gdGhlIGxlbmd0aFxuICogKiBgYWxsb3dFbXB0eWBcbiAqIEBwYXJhbSBkYXRhIGRhdGEgdG8gYmUgdmFsaWRhdGVkIGFnYWluc3QgdGhlIGRlZmluaXRpb25zXG4gKiBAZGVwcmVjYXRlZFxuICovXG52YXIgZGVmaW5lUHJvcGVydGllcyA9IGZ1bmN0aW9uIChzZWxmLCBmaWVsZHMsIGRhdGEpIHtcbiAgICBzZWxmLnJhdyA9IFtdO1xuICAgIHNlbGYuX2ZpZWxkcyA9IFtdO1xuICAgIC8vIGF0dGFjaCB0aGUgYHRvSlNPTmBcbiAgICBzZWxmLnRvSlNPTiA9IGZ1bmN0aW9uIChsYWJlbCkge1xuICAgICAgICBpZiAobGFiZWwgPT09IHZvaWQgMCkgeyBsYWJlbCA9IGZhbHNlOyB9XG4gICAgICAgIGlmIChsYWJlbCkge1xuICAgICAgICAgICAgdmFyIG9ial8xID0ge307XG4gICAgICAgICAgICBzZWxmLl9maWVsZHMuZm9yRWFjaChmdW5jdGlvbiAoZmllbGQpIHtcbiAgICAgICAgICAgICAgICBvYmpfMVtmaWVsZF0gPSBcIjB4XCIuY29uY2F0KHNlbGZbZmllbGRdLnRvU3RyaW5nKCdoZXgnKSk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIHJldHVybiBvYmpfMTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gKDAsIGJ5dGVzXzEuYmFUb0pTT04pKHNlbGYucmF3KTtcbiAgICB9O1xuICAgIHNlbGYuc2VyaWFsaXplID0gZnVuY3Rpb24gc2VyaWFsaXplKCkge1xuICAgICAgICByZXR1cm4gZXh0ZXJuYWxzXzEucmxwLmVuY29kZShzZWxmLnJhdyk7XG4gICAgfTtcbiAgICBmaWVsZHMuZm9yRWFjaChmdW5jdGlvbiAoZmllbGQsIGkpIHtcbiAgICAgICAgc2VsZi5fZmllbGRzLnB1c2goZmllbGQubmFtZSk7XG4gICAgICAgIGZ1bmN0aW9uIGdldHRlcigpIHtcbiAgICAgICAgICAgIHJldHVybiBzZWxmLnJhd1tpXTtcbiAgICAgICAgfVxuICAgICAgICBmdW5jdGlvbiBzZXR0ZXIodikge1xuICAgICAgICAgICAgdiA9ICgwLCBieXRlc18xLnRvQnVmZmVyKSh2KTtcbiAgICAgICAgICAgIGlmICh2LnRvU3RyaW5nKCdoZXgnKSA9PT0gJzAwJyAmJiAhZmllbGQuYWxsb3daZXJvKSB7XG4gICAgICAgICAgICAgICAgdiA9IEJ1ZmZlci5hbGxvY1Vuc2FmZSgwKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChmaWVsZC5hbGxvd0xlc3MgJiYgZmllbGQubGVuZ3RoKSB7XG4gICAgICAgICAgICAgICAgdiA9ICgwLCBieXRlc18xLnVucGFkQnVmZmVyKSh2KTtcbiAgICAgICAgICAgICAgICAoMCwgYXNzZXJ0XzEuZGVmYXVsdCkoZmllbGQubGVuZ3RoID49IHYubGVuZ3RoLCBcIlRoZSBmaWVsZCBcIi5jb25jYXQoZmllbGQubmFtZSwgXCIgbXVzdCBub3QgaGF2ZSBtb3JlIFwiKS5jb25jYXQoZmllbGQubGVuZ3RoLCBcIiBieXRlc1wiKSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIGlmICghKGZpZWxkLmFsbG93WmVybyAmJiB2Lmxlbmd0aCA9PT0gMCkgJiYgZmllbGQubGVuZ3RoKSB7XG4gICAgICAgICAgICAgICAgKDAsIGFzc2VydF8xLmRlZmF1bHQpKGZpZWxkLmxlbmd0aCA9PT0gdi5sZW5ndGgsIFwiVGhlIGZpZWxkIFwiLmNvbmNhdChmaWVsZC5uYW1lLCBcIiBtdXN0IGhhdmUgYnl0ZSBsZW5ndGggb2YgXCIpLmNvbmNhdChmaWVsZC5sZW5ndGgpKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHNlbGYucmF3W2ldID0gdjtcbiAgICAgICAgfVxuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoc2VsZiwgZmllbGQubmFtZSwge1xuICAgICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIGdldDogZ2V0dGVyLFxuICAgICAgICAgICAgc2V0OiBzZXR0ZXIsXG4gICAgICAgIH0pO1xuICAgICAgICBpZiAoZmllbGQuZGVmYXVsdCkge1xuICAgICAgICAgICAgc2VsZltmaWVsZC5uYW1lXSA9IGZpZWxkLmRlZmF1bHQ7XG4gICAgICAgIH1cbiAgICAgICAgLy8gYXR0YWNoIGFsaWFzXG4gICAgICAgIGlmIChmaWVsZC5hbGlhcykge1xuICAgICAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHNlbGYsIGZpZWxkLmFsaWFzLCB7XG4gICAgICAgICAgICAgICAgZW51bWVyYWJsZTogZmFsc2UsXG4gICAgICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgICAgIHNldDogc2V0dGVyLFxuICAgICAgICAgICAgICAgIGdldDogZ2V0dGVyLFxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICB9KTtcbiAgICAvLyBpZiB0aGUgY29uc3R1Y3RvciBpcyBwYXNzZWQgZGF0YVxuICAgIGlmIChkYXRhKSB7XG4gICAgICAgIGlmICh0eXBlb2YgZGF0YSA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgICAgIGRhdGEgPSBCdWZmZXIuZnJvbSgoMCwgaW50ZXJuYWxfMS5zdHJpcEhleFByZWZpeCkoZGF0YSksICdoZXgnKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoQnVmZmVyLmlzQnVmZmVyKGRhdGEpKSB7XG4gICAgICAgICAgICBkYXRhID0gZXh0ZXJuYWxzXzEucmxwLmRlY29kZShkYXRhKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoQXJyYXkuaXNBcnJheShkYXRhKSkge1xuICAgICAgICAgICAgaWYgKGRhdGEubGVuZ3RoID4gc2VsZi5fZmllbGRzLmxlbmd0aCkge1xuICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignd3JvbmcgbnVtYmVyIG9mIGZpZWxkcyBpbiBkYXRhJyk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAvLyBtYWtlIHN1cmUgYWxsIHRoZSBpdGVtcyBhcmUgYnVmZmVyc1xuICAgICAgICAgICAgZGF0YS5mb3JFYWNoKGZ1bmN0aW9uIChkLCBpKSB7XG4gICAgICAgICAgICAgICAgc2VsZltzZWxmLl9maWVsZHNbaV1dID0gKDAsIGJ5dGVzXzEudG9CdWZmZXIpKGQpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAodHlwZW9mIGRhdGEgPT09ICdvYmplY3QnKSB7XG4gICAgICAgICAgICB2YXIga2V5c18xID0gT2JqZWN0LmtleXMoZGF0YSk7XG4gICAgICAgICAgICBmaWVsZHMuZm9yRWFjaChmdW5jdGlvbiAoZmllbGQpIHtcbiAgICAgICAgICAgICAgICBpZiAoa2V5c18xLmluZGV4T2YoZmllbGQubmFtZSkgIT09IC0xKVxuICAgICAgICAgICAgICAgICAgICBzZWxmW2ZpZWxkLm5hbWVdID0gZGF0YVtmaWVsZC5uYW1lXTtcbiAgICAgICAgICAgICAgICBpZiAoa2V5c18xLmluZGV4T2YoZmllbGQuYWxpYXMpICE9PSAtMSlcbiAgICAgICAgICAgICAgICAgICAgc2VsZltmaWVsZC5hbGlhc10gPSBkYXRhW2ZpZWxkLmFsaWFzXTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdpbnZhbGlkIGRhdGEnKTtcbiAgICAgICAgfVxuICAgIH1cbn07XG5leHBvcnRzLmRlZmluZVByb3BlcnRpZXMgPSBkZWZpbmVQcm9wZXJ0aWVzO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9b2JqZWN0LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@web3auth/ethereum-provider/node_modules/ethereumjs-util/dist.browser/object.js\n");

/***/ }),

/***/ "./node_modules/@web3auth/ethereum-provider/node_modules/ethereumjs-util/dist.browser/signature.js":
/*!*********************************************************************************************************!*\
  !*** ./node_modules/@web3auth/ethereum-provider/node_modules/ethereumjs-util/dist.browser/signature.js ***!
  \*********************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"./node_modules/buffer/index.js\")[\"Buffer\"];\n\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.hashPersonalMessage = exports.isValidSignature = exports.fromRpcSig = exports.toCompactSig = exports.toRpcSig = exports.ecrecover = exports.ecsign = void 0;\nvar secp256k1_1 = __webpack_require__(/*! ethereum-cryptography/secp256k1 */ \"./node_modules/ethereum-cryptography/secp256k1.js\");\nvar externals_1 = __webpack_require__(/*! ./externals */ \"./node_modules/@web3auth/ethereum-provider/node_modules/ethereumjs-util/dist.browser/externals.js\");\nvar bytes_1 = __webpack_require__(/*! ./bytes */ \"./node_modules/@web3auth/ethereum-provider/node_modules/ethereumjs-util/dist.browser/bytes.js\");\nvar hash_1 = __webpack_require__(/*! ./hash */ \"./node_modules/@web3auth/ethereum-provider/node_modules/ethereumjs-util/dist.browser/hash.js\");\nvar helpers_1 = __webpack_require__(/*! ./helpers */ \"./node_modules/@web3auth/ethereum-provider/node_modules/ethereumjs-util/dist.browser/helpers.js\");\nvar types_1 = __webpack_require__(/*! ./types */ \"./node_modules/@web3auth/ethereum-provider/node_modules/ethereumjs-util/dist.browser/types.js\");\nfunction ecsign(msgHash, privateKey, chainId) {\n    var _a = (0, secp256k1_1.ecdsaSign)(msgHash, privateKey), signature = _a.signature, recovery = _a.recid;\n    var r = Buffer.from(signature.slice(0, 32));\n    var s = Buffer.from(signature.slice(32, 64));\n    if (!chainId || typeof chainId === 'number') {\n        // return legacy type ECDSASignature (deprecated in favor of ECDSASignatureBuffer to handle large chainIds)\n        if (chainId && !Number.isSafeInteger(chainId)) {\n            throw new Error('The provided number is greater than MAX_SAFE_INTEGER (please use an alternative input type)');\n        }\n        var v_1 = chainId ? recovery + (chainId * 2 + 35) : recovery + 27;\n        return { r: r, s: s, v: v_1 };\n    }\n    var chainIdBN = (0, types_1.toType)(chainId, types_1.TypeOutput.BN);\n    var v = chainIdBN.muln(2).addn(35).addn(recovery).toArrayLike(Buffer);\n    return { r: r, s: s, v: v };\n}\nexports.ecsign = ecsign;\nfunction calculateSigRecovery(v, chainId) {\n    var vBN = (0, types_1.toType)(v, types_1.TypeOutput.BN);\n    if (vBN.eqn(0) || vBN.eqn(1))\n        return (0, types_1.toType)(v, types_1.TypeOutput.BN);\n    if (!chainId) {\n        return vBN.subn(27);\n    }\n    var chainIdBN = (0, types_1.toType)(chainId, types_1.TypeOutput.BN);\n    return vBN.sub(chainIdBN.muln(2).addn(35));\n}\nfunction isValidSigRecovery(recovery) {\n    var rec = new externals_1.BN(recovery);\n    return rec.eqn(0) || rec.eqn(1);\n}\n/**\n * ECDSA public key recovery from signature.\n * NOTE: Accepts `v == 0 | v == 1` for EIP1559 transactions\n * @returns Recovered public key\n */\nvar ecrecover = function (msgHash, v, r, s, chainId) {\n    var signature = Buffer.concat([(0, bytes_1.setLengthLeft)(r, 32), (0, bytes_1.setLengthLeft)(s, 32)], 64);\n    var recovery = calculateSigRecovery(v, chainId);\n    if (!isValidSigRecovery(recovery)) {\n        throw new Error('Invalid signature v value');\n    }\n    var senderPubKey = (0, secp256k1_1.ecdsaRecover)(signature, recovery.toNumber(), msgHash);\n    return Buffer.from((0, secp256k1_1.publicKeyConvert)(senderPubKey, false).slice(1));\n};\nexports.ecrecover = ecrecover;\n/**\n * Convert signature parameters into the format of `eth_sign` RPC method.\n * NOTE: Accepts `v == 0 | v == 1` for EIP1559 transactions\n * @returns Signature\n */\nvar toRpcSig = function (v, r, s, chainId) {\n    var recovery = calculateSigRecovery(v, chainId);\n    if (!isValidSigRecovery(recovery)) {\n        throw new Error('Invalid signature v value');\n    }\n    // geth (and the RPC eth_sign method) uses the 65 byte format used by Bitcoin\n    return (0, bytes_1.bufferToHex)(Buffer.concat([(0, bytes_1.setLengthLeft)(r, 32), (0, bytes_1.setLengthLeft)(s, 32), (0, bytes_1.toBuffer)(v)]));\n};\nexports.toRpcSig = toRpcSig;\n/**\n * Convert signature parameters into the format of Compact Signature Representation (EIP-2098).\n * NOTE: Accepts `v == 0 | v == 1` for EIP1559 transactions\n * @returns Signature\n */\nvar toCompactSig = function (v, r, s, chainId) {\n    var recovery = calculateSigRecovery(v, chainId);\n    if (!isValidSigRecovery(recovery)) {\n        throw new Error('Invalid signature v value');\n    }\n    var vn = (0, types_1.toType)(v, types_1.TypeOutput.Number);\n    var ss = s;\n    if ((vn > 28 && vn % 2 === 1) || vn === 1 || vn === 28) {\n        ss = Buffer.from(s);\n        ss[0] |= 0x80;\n    }\n    return (0, bytes_1.bufferToHex)(Buffer.concat([(0, bytes_1.setLengthLeft)(r, 32), (0, bytes_1.setLengthLeft)(ss, 32)]));\n};\nexports.toCompactSig = toCompactSig;\n/**\n * Convert signature format of the `eth_sign` RPC method to signature parameters\n * NOTE: all because of a bug in geth: https://github.com/ethereum/go-ethereum/issues/2053\n * NOTE: After EIP1559, `v` could be `0` or `1` but this function assumes\n * it's a signed message (EIP-191 or EIP-712) adding `27` at the end. Remove if needed.\n */\nvar fromRpcSig = function (sig) {\n    var buf = (0, bytes_1.toBuffer)(sig);\n    var r;\n    var s;\n    var v;\n    if (buf.length >= 65) {\n        r = buf.slice(0, 32);\n        s = buf.slice(32, 64);\n        v = (0, bytes_1.bufferToInt)(buf.slice(64));\n    }\n    else if (buf.length === 64) {\n        // Compact Signature Representation (https://eips.ethereum.org/EIPS/eip-2098)\n        r = buf.slice(0, 32);\n        s = buf.slice(32, 64);\n        v = (0, bytes_1.bufferToInt)(buf.slice(32, 33)) >> 7;\n        s[0] &= 0x7f;\n    }\n    else {\n        throw new Error('Invalid signature length');\n    }\n    // support both versions of `eth_sign` responses\n    if (v < 27) {\n        v += 27;\n    }\n    return {\n        v: v,\n        r: r,\n        s: s,\n    };\n};\nexports.fromRpcSig = fromRpcSig;\n/**\n * Validate a ECDSA signature.\n * NOTE: Accepts `v == 0 | v == 1` for EIP1559 transactions\n * @param homesteadOrLater Indicates whether this is being used on either the homestead hardfork or a later one\n */\nvar isValidSignature = function (v, r, s, homesteadOrLater, chainId) {\n    if (homesteadOrLater === void 0) { homesteadOrLater = true; }\n    var SECP256K1_N_DIV_2 = new externals_1.BN('7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0', 16);\n    var SECP256K1_N = new externals_1.BN('fffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141', 16);\n    if (r.length !== 32 || s.length !== 32) {\n        return false;\n    }\n    if (!isValidSigRecovery(calculateSigRecovery(v, chainId))) {\n        return false;\n    }\n    var rBN = new externals_1.BN(r);\n    var sBN = new externals_1.BN(s);\n    if (rBN.isZero() || rBN.gt(SECP256K1_N) || sBN.isZero() || sBN.gt(SECP256K1_N)) {\n        return false;\n    }\n    if (homesteadOrLater && sBN.cmp(SECP256K1_N_DIV_2) === 1) {\n        return false;\n    }\n    return true;\n};\nexports.isValidSignature = isValidSignature;\n/**\n * Returns the keccak-256 hash of `message`, prefixed with the header used by the `eth_sign` RPC call.\n * The output of this function can be fed into `ecsign` to produce the same signature as the `eth_sign`\n * call for a given `message`, or fed to `ecrecover` along with a signature to recover the public key\n * used to produce the signature.\n */\nvar hashPersonalMessage = function (message) {\n    (0, helpers_1.assertIsBuffer)(message);\n    var prefix = Buffer.from(\"\\u0019Ethereum Signed Message:\\n\".concat(message.length), 'utf-8');\n    return (0, hash_1.keccak)(Buffer.concat([prefix, message]));\n};\nexports.hashPersonalMessage = hashPersonalMessage;\n//# sourceMappingURL=signature.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@web3auth/ethereum-provider/node_modules/ethereumjs-util/dist.browser/signature.js\n");

/***/ }),

/***/ "./node_modules/@web3auth/ethereum-provider/node_modules/ethereumjs-util/dist.browser/types.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/@web3auth/ethereum-provider/node_modules/ethereumjs-util/dist.browser/types.js ***!
  \*****************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"./node_modules/buffer/index.js\")[\"Buffer\"];\n\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.toType = exports.TypeOutput = exports.bnToRlp = exports.bnToUnpaddedBuffer = exports.bnToHex = void 0;\nvar externals_1 = __webpack_require__(/*! ./externals */ \"./node_modules/@web3auth/ethereum-provider/node_modules/ethereumjs-util/dist.browser/externals.js\");\nvar internal_1 = __webpack_require__(/*! ./internal */ \"./node_modules/@web3auth/ethereum-provider/node_modules/ethereumjs-util/dist.browser/internal.js\");\nvar bytes_1 = __webpack_require__(/*! ./bytes */ \"./node_modules/@web3auth/ethereum-provider/node_modules/ethereumjs-util/dist.browser/bytes.js\");\n/**\n * Convert BN to 0x-prefixed hex string.\n */\nfunction bnToHex(value) {\n    return \"0x\".concat(value.toString(16));\n}\nexports.bnToHex = bnToHex;\n/**\n * Convert value from BN to an unpadded Buffer\n * (useful for RLP transport)\n * @param value value to convert\n */\nfunction bnToUnpaddedBuffer(value) {\n    // Using `bn.toArrayLike(Buffer)` instead of `bn.toBuffer()`\n    // for compatibility with browserify and similar tools\n    return (0, bytes_1.unpadBuffer)(value.toArrayLike(Buffer));\n}\nexports.bnToUnpaddedBuffer = bnToUnpaddedBuffer;\n/**\n * Deprecated alias for {@link bnToUnpaddedBuffer}\n * @deprecated\n */\nfunction bnToRlp(value) {\n    return bnToUnpaddedBuffer(value);\n}\nexports.bnToRlp = bnToRlp;\n/**\n * Type output options\n */\nvar TypeOutput;\n(function (TypeOutput) {\n    TypeOutput[TypeOutput[\"Number\"] = 0] = \"Number\";\n    TypeOutput[TypeOutput[\"BN\"] = 1] = \"BN\";\n    TypeOutput[TypeOutput[\"Buffer\"] = 2] = \"Buffer\";\n    TypeOutput[TypeOutput[\"PrefixedHexString\"] = 3] = \"PrefixedHexString\";\n})(TypeOutput = exports.TypeOutput || (exports.TypeOutput = {}));\nfunction toType(input, outputType) {\n    if (input === null) {\n        return null;\n    }\n    if (input === undefined) {\n        return undefined;\n    }\n    if (typeof input === 'string' && !(0, internal_1.isHexString)(input)) {\n        throw new Error(\"A string must be provided with a 0x-prefix, given: \".concat(input));\n    }\n    else if (typeof input === 'number' && !Number.isSafeInteger(input)) {\n        throw new Error('The provided number is greater than MAX_SAFE_INTEGER (please use an alternative input type)');\n    }\n    var output = (0, bytes_1.toBuffer)(input);\n    if (outputType === TypeOutput.Buffer) {\n        return output;\n    }\n    else if (outputType === TypeOutput.BN) {\n        return new externals_1.BN(output);\n    }\n    else if (outputType === TypeOutput.Number) {\n        var bn = new externals_1.BN(output);\n        var max = new externals_1.BN(Number.MAX_SAFE_INTEGER.toString());\n        if (bn.gt(max)) {\n            throw new Error('The provided number is greater than MAX_SAFE_INTEGER (please use an alternative output type)');\n        }\n        return bn.toNumber();\n    }\n    else {\n        // outputType === TypeOutput.PrefixedHexString\n        return \"0x\".concat(output.toString('hex'));\n    }\n}\nexports.toType = toType;\n//# sourceMappingURL=types.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHdlYjNhdXRoL2V0aGVyZXVtLXByb3ZpZGVyL25vZGVfbW9kdWxlcy9ldGhlcmV1bWpzLXV0aWwvZGlzdC5icm93c2VyL3R5cGVzLmpzLmpzIiwibWFwcGluZ3MiOiI7QUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxjQUFjLEdBQUcsa0JBQWtCLEdBQUcsZUFBZSxHQUFHLDBCQUEwQixHQUFHLGVBQWU7QUFDcEcsa0JBQWtCLG1CQUFPLENBQUMsc0hBQWE7QUFDdkMsaUJBQWlCLG1CQUFPLENBQUMsb0hBQVk7QUFDckMsY0FBYyxtQkFBTyxDQUFDLDhHQUFTO0FBQy9CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0RBQXNELE1BQU07QUFDNUQ7QUFDQSwwQkFBMEI7QUFDMUI7QUFDQSx5QkFBeUI7QUFDekI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLHNDQUFzQyxrQkFBa0IsS0FBSztBQUM5RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjO0FBQ2QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0B3ZWIzYXV0aC9ldGhlcmV1bS1wcm92aWRlci9ub2RlX21vZHVsZXMvZXRoZXJldW1qcy11dGlsL2Rpc3QuYnJvd3Nlci90eXBlcy5qcz9hODBhIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy50b1R5cGUgPSBleHBvcnRzLlR5cGVPdXRwdXQgPSBleHBvcnRzLmJuVG9SbHAgPSBleHBvcnRzLmJuVG9VbnBhZGRlZEJ1ZmZlciA9IGV4cG9ydHMuYm5Ub0hleCA9IHZvaWQgMDtcbnZhciBleHRlcm5hbHNfMSA9IHJlcXVpcmUoXCIuL2V4dGVybmFsc1wiKTtcbnZhciBpbnRlcm5hbF8xID0gcmVxdWlyZShcIi4vaW50ZXJuYWxcIik7XG52YXIgYnl0ZXNfMSA9IHJlcXVpcmUoXCIuL2J5dGVzXCIpO1xuLyoqXG4gKiBDb252ZXJ0IEJOIHRvIDB4LXByZWZpeGVkIGhleCBzdHJpbmcuXG4gKi9cbmZ1bmN0aW9uIGJuVG9IZXgodmFsdWUpIHtcbiAgICByZXR1cm4gXCIweFwiLmNvbmNhdCh2YWx1ZS50b1N0cmluZygxNikpO1xufVxuZXhwb3J0cy5iblRvSGV4ID0gYm5Ub0hleDtcbi8qKlxuICogQ29udmVydCB2YWx1ZSBmcm9tIEJOIHRvIGFuIHVucGFkZGVkIEJ1ZmZlclxuICogKHVzZWZ1bCBmb3IgUkxQIHRyYW5zcG9ydClcbiAqIEBwYXJhbSB2YWx1ZSB2YWx1ZSB0byBjb252ZXJ0XG4gKi9cbmZ1bmN0aW9uIGJuVG9VbnBhZGRlZEJ1ZmZlcih2YWx1ZSkge1xuICAgIC8vIFVzaW5nIGBibi50b0FycmF5TGlrZShCdWZmZXIpYCBpbnN0ZWFkIG9mIGBibi50b0J1ZmZlcigpYFxuICAgIC8vIGZvciBjb21wYXRpYmlsaXR5IHdpdGggYnJvd3NlcmlmeSBhbmQgc2ltaWxhciB0b29sc1xuICAgIHJldHVybiAoMCwgYnl0ZXNfMS51bnBhZEJ1ZmZlcikodmFsdWUudG9BcnJheUxpa2UoQnVmZmVyKSk7XG59XG5leHBvcnRzLmJuVG9VbnBhZGRlZEJ1ZmZlciA9IGJuVG9VbnBhZGRlZEJ1ZmZlcjtcbi8qKlxuICogRGVwcmVjYXRlZCBhbGlhcyBmb3Ige0BsaW5rIGJuVG9VbnBhZGRlZEJ1ZmZlcn1cbiAqIEBkZXByZWNhdGVkXG4gKi9cbmZ1bmN0aW9uIGJuVG9SbHAodmFsdWUpIHtcbiAgICByZXR1cm4gYm5Ub1VucGFkZGVkQnVmZmVyKHZhbHVlKTtcbn1cbmV4cG9ydHMuYm5Ub1JscCA9IGJuVG9SbHA7XG4vKipcbiAqIFR5cGUgb3V0cHV0IG9wdGlvbnNcbiAqL1xudmFyIFR5cGVPdXRwdXQ7XG4oZnVuY3Rpb24gKFR5cGVPdXRwdXQpIHtcbiAgICBUeXBlT3V0cHV0W1R5cGVPdXRwdXRbXCJOdW1iZXJcIl0gPSAwXSA9IFwiTnVtYmVyXCI7XG4gICAgVHlwZU91dHB1dFtUeXBlT3V0cHV0W1wiQk5cIl0gPSAxXSA9IFwiQk5cIjtcbiAgICBUeXBlT3V0cHV0W1R5cGVPdXRwdXRbXCJCdWZmZXJcIl0gPSAyXSA9IFwiQnVmZmVyXCI7XG4gICAgVHlwZU91dHB1dFtUeXBlT3V0cHV0W1wiUHJlZml4ZWRIZXhTdHJpbmdcIl0gPSAzXSA9IFwiUHJlZml4ZWRIZXhTdHJpbmdcIjtcbn0pKFR5cGVPdXRwdXQgPSBleHBvcnRzLlR5cGVPdXRwdXQgfHwgKGV4cG9ydHMuVHlwZU91dHB1dCA9IHt9KSk7XG5mdW5jdGlvbiB0b1R5cGUoaW5wdXQsIG91dHB1dFR5cGUpIHtcbiAgICBpZiAoaW5wdXQgPT09IG51bGwpIHtcbiAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuICAgIGlmIChpbnB1dCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgfVxuICAgIGlmICh0eXBlb2YgaW5wdXQgPT09ICdzdHJpbmcnICYmICEoMCwgaW50ZXJuYWxfMS5pc0hleFN0cmluZykoaW5wdXQpKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIkEgc3RyaW5nIG11c3QgYmUgcHJvdmlkZWQgd2l0aCBhIDB4LXByZWZpeCwgZ2l2ZW46IFwiLmNvbmNhdChpbnB1dCkpO1xuICAgIH1cbiAgICBlbHNlIGlmICh0eXBlb2YgaW5wdXQgPT09ICdudW1iZXInICYmICFOdW1iZXIuaXNTYWZlSW50ZWdlcihpbnB1dCkpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdUaGUgcHJvdmlkZWQgbnVtYmVyIGlzIGdyZWF0ZXIgdGhhbiBNQVhfU0FGRV9JTlRFR0VSIChwbGVhc2UgdXNlIGFuIGFsdGVybmF0aXZlIGlucHV0IHR5cGUpJyk7XG4gICAgfVxuICAgIHZhciBvdXRwdXQgPSAoMCwgYnl0ZXNfMS50b0J1ZmZlcikoaW5wdXQpO1xuICAgIGlmIChvdXRwdXRUeXBlID09PSBUeXBlT3V0cHV0LkJ1ZmZlcikge1xuICAgICAgICByZXR1cm4gb3V0cHV0O1xuICAgIH1cbiAgICBlbHNlIGlmIChvdXRwdXRUeXBlID09PSBUeXBlT3V0cHV0LkJOKSB7XG4gICAgICAgIHJldHVybiBuZXcgZXh0ZXJuYWxzXzEuQk4ob3V0cHV0KTtcbiAgICB9XG4gICAgZWxzZSBpZiAob3V0cHV0VHlwZSA9PT0gVHlwZU91dHB1dC5OdW1iZXIpIHtcbiAgICAgICAgdmFyIGJuID0gbmV3IGV4dGVybmFsc18xLkJOKG91dHB1dCk7XG4gICAgICAgIHZhciBtYXggPSBuZXcgZXh0ZXJuYWxzXzEuQk4oTnVtYmVyLk1BWF9TQUZFX0lOVEVHRVIudG9TdHJpbmcoKSk7XG4gICAgICAgIGlmIChibi5ndChtYXgpKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ1RoZSBwcm92aWRlZCBudW1iZXIgaXMgZ3JlYXRlciB0aGFuIE1BWF9TQUZFX0lOVEVHRVIgKHBsZWFzZSB1c2UgYW4gYWx0ZXJuYXRpdmUgb3V0cHV0IHR5cGUpJyk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGJuLnRvTnVtYmVyKCk7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICAvLyBvdXRwdXRUeXBlID09PSBUeXBlT3V0cHV0LlByZWZpeGVkSGV4U3RyaW5nXG4gICAgICAgIHJldHVybiBcIjB4XCIuY29uY2F0KG91dHB1dC50b1N0cmluZygnaGV4JykpO1xuICAgIH1cbn1cbmV4cG9ydHMudG9UeXBlID0gdG9UeXBlO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dHlwZXMuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@web3auth/ethereum-provider/node_modules/ethereumjs-util/dist.browser/types.js\n");

/***/ }),

/***/ "./node_modules/cipher-base/index.js":
/*!*******************************************!*\
  !*** ./node_modules/cipher-base/index.js ***!
  \*******************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("var Buffer = (__webpack_require__(/*! safe-buffer */ \"./node_modules/safe-buffer/index.js\").Buffer)\nvar Transform = (__webpack_require__(/*! stream */ \"./node_modules/next/dist/compiled/stream-browserify/index.js\").Transform)\nvar StringDecoder = (__webpack_require__(/*! string_decoder */ \"./node_modules/string_decoder/lib/string_decoder.js\").StringDecoder)\nvar inherits = __webpack_require__(/*! inherits */ \"./node_modules/inherits/inherits_browser.js\")\n\nfunction CipherBase (hashMode) {\n  Transform.call(this)\n  this.hashMode = typeof hashMode === 'string'\n  if (this.hashMode) {\n    this[hashMode] = this._finalOrDigest\n  } else {\n    this.final = this._finalOrDigest\n  }\n  if (this._final) {\n    this.__final = this._final\n    this._final = null\n  }\n  this._decoder = null\n  this._encoding = null\n}\ninherits(CipherBase, Transform)\n\nCipherBase.prototype.update = function (data, inputEnc, outputEnc) {\n  if (typeof data === 'string') {\n    data = Buffer.from(data, inputEnc)\n  }\n\n  var outData = this._update(data)\n  if (this.hashMode) return this\n\n  if (outputEnc) {\n    outData = this._toString(outData, outputEnc)\n  }\n\n  return outData\n}\n\nCipherBase.prototype.setAutoPadding = function () {}\nCipherBase.prototype.getAuthTag = function () {\n  throw new Error('trying to get auth tag in unsupported state')\n}\n\nCipherBase.prototype.setAuthTag = function () {\n  throw new Error('trying to set auth tag in unsupported state')\n}\n\nCipherBase.prototype.setAAD = function () {\n  throw new Error('trying to set aad in unsupported state')\n}\n\nCipherBase.prototype._transform = function (data, _, next) {\n  var err\n  try {\n    if (this.hashMode) {\n      this._update(data)\n    } else {\n      this.push(this._update(data))\n    }\n  } catch (e) {\n    err = e\n  } finally {\n    next(err)\n  }\n}\nCipherBase.prototype._flush = function (done) {\n  var err\n  try {\n    this.push(this.__final())\n  } catch (e) {\n    err = e\n  }\n\n  done(err)\n}\nCipherBase.prototype._finalOrDigest = function (outputEnc) {\n  var outData = this.__final() || Buffer.alloc(0)\n  if (outputEnc) {\n    outData = this._toString(outData, outputEnc, true)\n  }\n  return outData\n}\n\nCipherBase.prototype._toString = function (value, enc, fin) {\n  if (!this._decoder) {\n    this._decoder = new StringDecoder(enc)\n    this._encoding = enc\n  }\n\n  if (this._encoding !== enc) throw new Error('can\\'t switch encodings')\n\n  var out = this._decoder.write(value)\n  if (fin) {\n    out += this._decoder.end()\n  }\n\n  return out\n}\n\nmodule.exports = CipherBase\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvY2lwaGVyLWJhc2UvaW5kZXguanMuanMiLCJtYXBwaW5ncyI6IkFBQUEsYUFBYSxzRkFBNkI7QUFDMUMsZ0JBQWdCLDZHQUEyQjtBQUMzQyxvQkFBb0IsZ0hBQXVDO0FBQzNELGVBQWUsbUJBQU8sQ0FBQyw2REFBVTs7QUFFakM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvY2lwaGVyLWJhc2UvaW5kZXguanM/ODgxMSJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgQnVmZmVyID0gcmVxdWlyZSgnc2FmZS1idWZmZXInKS5CdWZmZXJcbnZhciBUcmFuc2Zvcm0gPSByZXF1aXJlKCdzdHJlYW0nKS5UcmFuc2Zvcm1cbnZhciBTdHJpbmdEZWNvZGVyID0gcmVxdWlyZSgnc3RyaW5nX2RlY29kZXInKS5TdHJpbmdEZWNvZGVyXG52YXIgaW5oZXJpdHMgPSByZXF1aXJlKCdpbmhlcml0cycpXG5cbmZ1bmN0aW9uIENpcGhlckJhc2UgKGhhc2hNb2RlKSB7XG4gIFRyYW5zZm9ybS5jYWxsKHRoaXMpXG4gIHRoaXMuaGFzaE1vZGUgPSB0eXBlb2YgaGFzaE1vZGUgPT09ICdzdHJpbmcnXG4gIGlmICh0aGlzLmhhc2hNb2RlKSB7XG4gICAgdGhpc1toYXNoTW9kZV0gPSB0aGlzLl9maW5hbE9yRGlnZXN0XG4gIH0gZWxzZSB7XG4gICAgdGhpcy5maW5hbCA9IHRoaXMuX2ZpbmFsT3JEaWdlc3RcbiAgfVxuICBpZiAodGhpcy5fZmluYWwpIHtcbiAgICB0aGlzLl9fZmluYWwgPSB0aGlzLl9maW5hbFxuICAgIHRoaXMuX2ZpbmFsID0gbnVsbFxuICB9XG4gIHRoaXMuX2RlY29kZXIgPSBudWxsXG4gIHRoaXMuX2VuY29kaW5nID0gbnVsbFxufVxuaW5oZXJpdHMoQ2lwaGVyQmFzZSwgVHJhbnNmb3JtKVxuXG5DaXBoZXJCYXNlLnByb3RvdHlwZS51cGRhdGUgPSBmdW5jdGlvbiAoZGF0YSwgaW5wdXRFbmMsIG91dHB1dEVuYykge1xuICBpZiAodHlwZW9mIGRhdGEgPT09ICdzdHJpbmcnKSB7XG4gICAgZGF0YSA9IEJ1ZmZlci5mcm9tKGRhdGEsIGlucHV0RW5jKVxuICB9XG5cbiAgdmFyIG91dERhdGEgPSB0aGlzLl91cGRhdGUoZGF0YSlcbiAgaWYgKHRoaXMuaGFzaE1vZGUpIHJldHVybiB0aGlzXG5cbiAgaWYgKG91dHB1dEVuYykge1xuICAgIG91dERhdGEgPSB0aGlzLl90b1N0cmluZyhvdXREYXRhLCBvdXRwdXRFbmMpXG4gIH1cblxuICByZXR1cm4gb3V0RGF0YVxufVxuXG5DaXBoZXJCYXNlLnByb3RvdHlwZS5zZXRBdXRvUGFkZGluZyA9IGZ1bmN0aW9uICgpIHt9XG5DaXBoZXJCYXNlLnByb3RvdHlwZS5nZXRBdXRoVGFnID0gZnVuY3Rpb24gKCkge1xuICB0aHJvdyBuZXcgRXJyb3IoJ3RyeWluZyB0byBnZXQgYXV0aCB0YWcgaW4gdW5zdXBwb3J0ZWQgc3RhdGUnKVxufVxuXG5DaXBoZXJCYXNlLnByb3RvdHlwZS5zZXRBdXRoVGFnID0gZnVuY3Rpb24gKCkge1xuICB0aHJvdyBuZXcgRXJyb3IoJ3RyeWluZyB0byBzZXQgYXV0aCB0YWcgaW4gdW5zdXBwb3J0ZWQgc3RhdGUnKVxufVxuXG5DaXBoZXJCYXNlLnByb3RvdHlwZS5zZXRBQUQgPSBmdW5jdGlvbiAoKSB7XG4gIHRocm93IG5ldyBFcnJvcigndHJ5aW5nIHRvIHNldCBhYWQgaW4gdW5zdXBwb3J0ZWQgc3RhdGUnKVxufVxuXG5DaXBoZXJCYXNlLnByb3RvdHlwZS5fdHJhbnNmb3JtID0gZnVuY3Rpb24gKGRhdGEsIF8sIG5leHQpIHtcbiAgdmFyIGVyclxuICB0cnkge1xuICAgIGlmICh0aGlzLmhhc2hNb2RlKSB7XG4gICAgICB0aGlzLl91cGRhdGUoZGF0YSlcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5wdXNoKHRoaXMuX3VwZGF0ZShkYXRhKSlcbiAgICB9XG4gIH0gY2F0Y2ggKGUpIHtcbiAgICBlcnIgPSBlXG4gIH0gZmluYWxseSB7XG4gICAgbmV4dChlcnIpXG4gIH1cbn1cbkNpcGhlckJhc2UucHJvdG90eXBlLl9mbHVzaCA9IGZ1bmN0aW9uIChkb25lKSB7XG4gIHZhciBlcnJcbiAgdHJ5IHtcbiAgICB0aGlzLnB1c2godGhpcy5fX2ZpbmFsKCkpXG4gIH0gY2F0Y2ggKGUpIHtcbiAgICBlcnIgPSBlXG4gIH1cblxuICBkb25lKGVycilcbn1cbkNpcGhlckJhc2UucHJvdG90eXBlLl9maW5hbE9yRGlnZXN0ID0gZnVuY3Rpb24gKG91dHB1dEVuYykge1xuICB2YXIgb3V0RGF0YSA9IHRoaXMuX19maW5hbCgpIHx8IEJ1ZmZlci5hbGxvYygwKVxuICBpZiAob3V0cHV0RW5jKSB7XG4gICAgb3V0RGF0YSA9IHRoaXMuX3RvU3RyaW5nKG91dERhdGEsIG91dHB1dEVuYywgdHJ1ZSlcbiAgfVxuICByZXR1cm4gb3V0RGF0YVxufVxuXG5DaXBoZXJCYXNlLnByb3RvdHlwZS5fdG9TdHJpbmcgPSBmdW5jdGlvbiAodmFsdWUsIGVuYywgZmluKSB7XG4gIGlmICghdGhpcy5fZGVjb2Rlcikge1xuICAgIHRoaXMuX2RlY29kZXIgPSBuZXcgU3RyaW5nRGVjb2RlcihlbmMpXG4gICAgdGhpcy5fZW5jb2RpbmcgPSBlbmNcbiAgfVxuXG4gIGlmICh0aGlzLl9lbmNvZGluZyAhPT0gZW5jKSB0aHJvdyBuZXcgRXJyb3IoJ2NhblxcJ3Qgc3dpdGNoIGVuY29kaW5ncycpXG5cbiAgdmFyIG91dCA9IHRoaXMuX2RlY29kZXIud3JpdGUodmFsdWUpXG4gIGlmIChmaW4pIHtcbiAgICBvdXQgKz0gdGhpcy5fZGVjb2Rlci5lbmQoKVxuICB9XG5cbiAgcmV0dXJuIG91dFxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IENpcGhlckJhc2VcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/cipher-base/index.js\n");

/***/ }),

/***/ "./node_modules/crc-32/crc32.js":
/*!**************************************!*\
  !*** ./node_modules/crc-32/crc32.js ***!
  \**************************************/
/***/ (function(__unused_webpack_module, exports) {

eval("/*! crc32.js (C) 2014-present SheetJS -- http://sheetjs.com */\n/* vim: set ts=2: */\n/*exported CRC32 */\nvar CRC32;\n(function (factory) {\n\t/*jshint ignore:start */\n\t/*eslint-disable */\n\tif(typeof DO_NOT_EXPORT_CRC === 'undefined') {\n\t\tif(true) {\n\t\t\tfactory(exports);\n\t\t} else {}\n\t} else {\n\t\tfactory(CRC32 = {});\n\t}\n\t/*eslint-enable */\n\t/*jshint ignore:end */\n}(function(CRC32) {\nCRC32.version = '1.2.2';\n/*global Int32Array */\nfunction signed_crc_table() {\n\tvar c = 0, table = new Array(256);\n\n\tfor(var n =0; n != 256; ++n){\n\t\tc = n;\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\ttable[n] = c;\n\t}\n\n\treturn typeof Int32Array !== 'undefined' ? new Int32Array(table) : table;\n}\n\nvar T0 = signed_crc_table();\nfunction slice_by_16_tables(T) {\n\tvar c = 0, v = 0, n = 0, table = typeof Int32Array !== 'undefined' ? new Int32Array(4096) : new Array(4096) ;\n\n\tfor(n = 0; n != 256; ++n) table[n] = T[n];\n\tfor(n = 0; n != 256; ++n) {\n\t\tv = T[n];\n\t\tfor(c = 256 + n; c < 4096; c += 256) v = table[c] = (v >>> 8) ^ T[v & 0xFF];\n\t}\n\tvar out = [];\n\tfor(n = 1; n != 16; ++n) out[n - 1] = typeof Int32Array !== 'undefined' ? table.subarray(n * 256, n * 256 + 256) : table.slice(n * 256, n * 256 + 256);\n\treturn out;\n}\nvar TT = slice_by_16_tables(T0);\nvar T1 = TT[0],  T2 = TT[1],  T3 = TT[2],  T4 = TT[3],  T5 = TT[4];\nvar T6 = TT[5],  T7 = TT[6],  T8 = TT[7],  T9 = TT[8],  Ta = TT[9];\nvar Tb = TT[10], Tc = TT[11], Td = TT[12], Te = TT[13], Tf = TT[14];\nfunction crc32_bstr(bstr, seed) {\n\tvar C = seed ^ -1;\n\tfor(var i = 0, L = bstr.length; i < L;) C = (C>>>8) ^ T0[(C^bstr.charCodeAt(i++))&0xFF];\n\treturn ~C;\n}\n\nfunction crc32_buf(B, seed) {\n\tvar C = seed ^ -1, L = B.length - 15, i = 0;\n\tfor(; i < L;) C =\n\t\tTf[B[i++] ^ (C & 255)] ^\n\t\tTe[B[i++] ^ ((C >> 8) & 255)] ^\n\t\tTd[B[i++] ^ ((C >> 16) & 255)] ^\n\t\tTc[B[i++] ^ (C >>> 24)] ^\n\t\tTb[B[i++]] ^ Ta[B[i++]] ^ T9[B[i++]] ^ T8[B[i++]] ^\n\t\tT7[B[i++]] ^ T6[B[i++]] ^ T5[B[i++]] ^ T4[B[i++]] ^\n\t\tT3[B[i++]] ^ T2[B[i++]] ^ T1[B[i++]] ^ T0[B[i++]];\n\tL += 15;\n\twhile(i < L) C = (C>>>8) ^ T0[(C^B[i++])&0xFF];\n\treturn ~C;\n}\n\nfunction crc32_str(str, seed) {\n\tvar C = seed ^ -1;\n\tfor(var i = 0, L = str.length, c = 0, d = 0; i < L;) {\n\t\tc = str.charCodeAt(i++);\n\t\tif(c < 0x80) {\n\t\t\tC = (C>>>8) ^ T0[(C^c)&0xFF];\n\t\t} else if(c < 0x800) {\n\t\t\tC = (C>>>8) ^ T0[(C ^ (192|((c>>6)&31)))&0xFF];\n\t\t\tC = (C>>>8) ^ T0[(C ^ (128|(c&63)))&0xFF];\n\t\t} else if(c >= 0xD800 && c < 0xE000) {\n\t\t\tc = (c&1023)+64; d = str.charCodeAt(i++)&1023;\n\t\t\tC = (C>>>8) ^ T0[(C ^ (240|((c>>8)&7)))&0xFF];\n\t\t\tC = (C>>>8) ^ T0[(C ^ (128|((c>>2)&63)))&0xFF];\n\t\t\tC = (C>>>8) ^ T0[(C ^ (128|((d>>6)&15)|((c&3)<<4)))&0xFF];\n\t\t\tC = (C>>>8) ^ T0[(C ^ (128|(d&63)))&0xFF];\n\t\t} else {\n\t\t\tC = (C>>>8) ^ T0[(C ^ (224|((c>>12)&15)))&0xFF];\n\t\t\tC = (C>>>8) ^ T0[(C ^ (128|((c>>6)&63)))&0xFF];\n\t\t\tC = (C>>>8) ^ T0[(C ^ (128|(c&63)))&0xFF];\n\t\t}\n\t}\n\treturn ~C;\n}\nCRC32.table = T0;\n// $FlowIgnore\nCRC32.bstr = crc32_bstr;\n// $FlowIgnore\nCRC32.buf = crc32_buf;\n// $FlowIgnore\nCRC32.str = crc32_str;\n}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvY3JjLTMyL2NyYzMyLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLLElBQTJCO0FBQ2hDO0FBQ0EsSUFBSSxLQUFLLEVBUU47QUFDSCxHQUFHO0FBQ0gsb0JBQW9CO0FBQ3BCO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxlQUFlLFVBQVU7QUFDekI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQSxZQUFZLFVBQVU7QUFDdEIsWUFBWSxVQUFVO0FBQ3RCO0FBQ0EsbUJBQW1CLFVBQVU7QUFDN0I7QUFDQTtBQUNBLFlBQVksU0FBUztBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUNBQWlDLE1BQU07QUFDdkM7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsT0FBTyxNQUFNO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsOENBQThDLE1BQU07QUFDcEQ7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQSxJQUFJO0FBQ0osb0JBQW9CO0FBQ3BCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9jcmMtMzIvY3JjMzIuanM/YzIzMSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiEgY3JjMzIuanMgKEMpIDIwMTQtcHJlc2VudCBTaGVldEpTIC0tIGh0dHA6Ly9zaGVldGpzLmNvbSAqL1xuLyogdmltOiBzZXQgdHM9MjogKi9cbi8qZXhwb3J0ZWQgQ1JDMzIgKi9cbnZhciBDUkMzMjtcbihmdW5jdGlvbiAoZmFjdG9yeSkge1xuXHQvKmpzaGludCBpZ25vcmU6c3RhcnQgKi9cblx0Lyplc2xpbnQtZGlzYWJsZSAqL1xuXHRpZih0eXBlb2YgRE9fTk9UX0VYUE9SVF9DUkMgPT09ICd1bmRlZmluZWQnKSB7XG5cdFx0aWYoJ29iamVjdCcgPT09IHR5cGVvZiBleHBvcnRzKSB7XG5cdFx0XHRmYWN0b3J5KGV4cG9ydHMpO1xuXHRcdH0gZWxzZSBpZiAoJ2Z1bmN0aW9uJyA9PT0gdHlwZW9mIGRlZmluZSAmJiBkZWZpbmUuYW1kKSB7XG5cdFx0XHRkZWZpbmUoZnVuY3Rpb24gKCkge1xuXHRcdFx0XHR2YXIgbW9kdWxlID0ge307XG5cdFx0XHRcdGZhY3RvcnkobW9kdWxlKTtcblx0XHRcdFx0cmV0dXJuIG1vZHVsZTtcblx0XHRcdH0pO1xuXHRcdH0gZWxzZSB7XG5cdFx0XHRmYWN0b3J5KENSQzMyID0ge30pO1xuXHRcdH1cblx0fSBlbHNlIHtcblx0XHRmYWN0b3J5KENSQzMyID0ge30pO1xuXHR9XG5cdC8qZXNsaW50LWVuYWJsZSAqL1xuXHQvKmpzaGludCBpZ25vcmU6ZW5kICovXG59KGZ1bmN0aW9uKENSQzMyKSB7XG5DUkMzMi52ZXJzaW9uID0gJzEuMi4yJztcbi8qZ2xvYmFsIEludDMyQXJyYXkgKi9cbmZ1bmN0aW9uIHNpZ25lZF9jcmNfdGFibGUoKSB7XG5cdHZhciBjID0gMCwgdGFibGUgPSBuZXcgQXJyYXkoMjU2KTtcblxuXHRmb3IodmFyIG4gPTA7IG4gIT0gMjU2OyArK24pe1xuXHRcdGMgPSBuO1xuXHRcdGMgPSAoKGMmMSkgPyAoLTMwNjY3NDkxMiBeIChjID4+PiAxKSkgOiAoYyA+Pj4gMSkpO1xuXHRcdGMgPSAoKGMmMSkgPyAoLTMwNjY3NDkxMiBeIChjID4+PiAxKSkgOiAoYyA+Pj4gMSkpO1xuXHRcdGMgPSAoKGMmMSkgPyAoLTMwNjY3NDkxMiBeIChjID4+PiAxKSkgOiAoYyA+Pj4gMSkpO1xuXHRcdGMgPSAoKGMmMSkgPyAoLTMwNjY3NDkxMiBeIChjID4+PiAxKSkgOiAoYyA+Pj4gMSkpO1xuXHRcdGMgPSAoKGMmMSkgPyAoLTMwNjY3NDkxMiBeIChjID4+PiAxKSkgOiAoYyA+Pj4gMSkpO1xuXHRcdGMgPSAoKGMmMSkgPyAoLTMwNjY3NDkxMiBeIChjID4+PiAxKSkgOiAoYyA+Pj4gMSkpO1xuXHRcdGMgPSAoKGMmMSkgPyAoLTMwNjY3NDkxMiBeIChjID4+PiAxKSkgOiAoYyA+Pj4gMSkpO1xuXHRcdGMgPSAoKGMmMSkgPyAoLTMwNjY3NDkxMiBeIChjID4+PiAxKSkgOiAoYyA+Pj4gMSkpO1xuXHRcdHRhYmxlW25dID0gYztcblx0fVxuXG5cdHJldHVybiB0eXBlb2YgSW50MzJBcnJheSAhPT0gJ3VuZGVmaW5lZCcgPyBuZXcgSW50MzJBcnJheSh0YWJsZSkgOiB0YWJsZTtcbn1cblxudmFyIFQwID0gc2lnbmVkX2NyY190YWJsZSgpO1xuZnVuY3Rpb24gc2xpY2VfYnlfMTZfdGFibGVzKFQpIHtcblx0dmFyIGMgPSAwLCB2ID0gMCwgbiA9IDAsIHRhYmxlID0gdHlwZW9mIEludDMyQXJyYXkgIT09ICd1bmRlZmluZWQnID8gbmV3IEludDMyQXJyYXkoNDA5NikgOiBuZXcgQXJyYXkoNDA5NikgO1xuXG5cdGZvcihuID0gMDsgbiAhPSAyNTY7ICsrbikgdGFibGVbbl0gPSBUW25dO1xuXHRmb3IobiA9IDA7IG4gIT0gMjU2OyArK24pIHtcblx0XHR2ID0gVFtuXTtcblx0XHRmb3IoYyA9IDI1NiArIG47IGMgPCA0MDk2OyBjICs9IDI1NikgdiA9IHRhYmxlW2NdID0gKHYgPj4+IDgpIF4gVFt2ICYgMHhGRl07XG5cdH1cblx0dmFyIG91dCA9IFtdO1xuXHRmb3IobiA9IDE7IG4gIT0gMTY7ICsrbikgb3V0W24gLSAxXSA9IHR5cGVvZiBJbnQzMkFycmF5ICE9PSAndW5kZWZpbmVkJyA/IHRhYmxlLnN1YmFycmF5KG4gKiAyNTYsIG4gKiAyNTYgKyAyNTYpIDogdGFibGUuc2xpY2UobiAqIDI1NiwgbiAqIDI1NiArIDI1Nik7XG5cdHJldHVybiBvdXQ7XG59XG52YXIgVFQgPSBzbGljZV9ieV8xNl90YWJsZXMoVDApO1xudmFyIFQxID0gVFRbMF0sICBUMiA9IFRUWzFdLCAgVDMgPSBUVFsyXSwgIFQ0ID0gVFRbM10sICBUNSA9IFRUWzRdO1xudmFyIFQ2ID0gVFRbNV0sICBUNyA9IFRUWzZdLCAgVDggPSBUVFs3XSwgIFQ5ID0gVFRbOF0sICBUYSA9IFRUWzldO1xudmFyIFRiID0gVFRbMTBdLCBUYyA9IFRUWzExXSwgVGQgPSBUVFsxMl0sIFRlID0gVFRbMTNdLCBUZiA9IFRUWzE0XTtcbmZ1bmN0aW9uIGNyYzMyX2JzdHIoYnN0ciwgc2VlZCkge1xuXHR2YXIgQyA9IHNlZWQgXiAtMTtcblx0Zm9yKHZhciBpID0gMCwgTCA9IGJzdHIubGVuZ3RoOyBpIDwgTDspIEMgPSAoQz4+PjgpIF4gVDBbKENeYnN0ci5jaGFyQ29kZUF0KGkrKykpJjB4RkZdO1xuXHRyZXR1cm4gfkM7XG59XG5cbmZ1bmN0aW9uIGNyYzMyX2J1ZihCLCBzZWVkKSB7XG5cdHZhciBDID0gc2VlZCBeIC0xLCBMID0gQi5sZW5ndGggLSAxNSwgaSA9IDA7XG5cdGZvcig7IGkgPCBMOykgQyA9XG5cdFx0VGZbQltpKytdIF4gKEMgJiAyNTUpXSBeXG5cdFx0VGVbQltpKytdIF4gKChDID4+IDgpICYgMjU1KV0gXlxuXHRcdFRkW0JbaSsrXSBeICgoQyA+PiAxNikgJiAyNTUpXSBeXG5cdFx0VGNbQltpKytdIF4gKEMgPj4+IDI0KV0gXlxuXHRcdFRiW0JbaSsrXV0gXiBUYVtCW2krK11dIF4gVDlbQltpKytdXSBeIFQ4W0JbaSsrXV0gXlxuXHRcdFQ3W0JbaSsrXV0gXiBUNltCW2krK11dIF4gVDVbQltpKytdXSBeIFQ0W0JbaSsrXV0gXlxuXHRcdFQzW0JbaSsrXV0gXiBUMltCW2krK11dIF4gVDFbQltpKytdXSBeIFQwW0JbaSsrXV07XG5cdEwgKz0gMTU7XG5cdHdoaWxlKGkgPCBMKSBDID0gKEM+Pj44KSBeIFQwWyhDXkJbaSsrXSkmMHhGRl07XG5cdHJldHVybiB+Qztcbn1cblxuZnVuY3Rpb24gY3JjMzJfc3RyKHN0ciwgc2VlZCkge1xuXHR2YXIgQyA9IHNlZWQgXiAtMTtcblx0Zm9yKHZhciBpID0gMCwgTCA9IHN0ci5sZW5ndGgsIGMgPSAwLCBkID0gMDsgaSA8IEw7KSB7XG5cdFx0YyA9IHN0ci5jaGFyQ29kZUF0KGkrKyk7XG5cdFx0aWYoYyA8IDB4ODApIHtcblx0XHRcdEMgPSAoQz4+PjgpIF4gVDBbKENeYykmMHhGRl07XG5cdFx0fSBlbHNlIGlmKGMgPCAweDgwMCkge1xuXHRcdFx0QyA9IChDPj4+OCkgXiBUMFsoQyBeICgxOTJ8KChjPj42KSYzMSkpKSYweEZGXTtcblx0XHRcdEMgPSAoQz4+PjgpIF4gVDBbKEMgXiAoMTI4fChjJjYzKSkpJjB4RkZdO1xuXHRcdH0gZWxzZSBpZihjID49IDB4RDgwMCAmJiBjIDwgMHhFMDAwKSB7XG5cdFx0XHRjID0gKGMmMTAyMykrNjQ7IGQgPSBzdHIuY2hhckNvZGVBdChpKyspJjEwMjM7XG5cdFx0XHRDID0gKEM+Pj44KSBeIFQwWyhDIF4gKDI0MHwoKGM+PjgpJjcpKSkmMHhGRl07XG5cdFx0XHRDID0gKEM+Pj44KSBeIFQwWyhDIF4gKDEyOHwoKGM+PjIpJjYzKSkpJjB4RkZdO1xuXHRcdFx0QyA9IChDPj4+OCkgXiBUMFsoQyBeICgxMjh8KChkPj42KSYxNSl8KChjJjMpPDw0KSkpJjB4RkZdO1xuXHRcdFx0QyA9IChDPj4+OCkgXiBUMFsoQyBeICgxMjh8KGQmNjMpKSkmMHhGRl07XG5cdFx0fSBlbHNlIHtcblx0XHRcdEMgPSAoQz4+PjgpIF4gVDBbKEMgXiAoMjI0fCgoYz4+MTIpJjE1KSkpJjB4RkZdO1xuXHRcdFx0QyA9IChDPj4+OCkgXiBUMFsoQyBeICgxMjh8KChjPj42KSY2MykpKSYweEZGXTtcblx0XHRcdEMgPSAoQz4+PjgpIF4gVDBbKEMgXiAoMTI4fChjJjYzKSkpJjB4RkZdO1xuXHRcdH1cblx0fVxuXHRyZXR1cm4gfkM7XG59XG5DUkMzMi50YWJsZSA9IFQwO1xuLy8gJEZsb3dJZ25vcmVcbkNSQzMyLmJzdHIgPSBjcmMzMl9ic3RyO1xuLy8gJEZsb3dJZ25vcmVcbkNSQzMyLmJ1ZiA9IGNyYzMyX2J1Zjtcbi8vICRGbG93SWdub3JlXG5DUkMzMi5zdHIgPSBjcmMzMl9zdHI7XG59KSk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/crc-32/crc32.js\n");

/***/ }),

/***/ "./node_modules/create-hash/browser.js":
/*!*********************************************!*\
  !*** ./node_modules/create-hash/browser.js ***!
  \*********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval("\nvar inherits = __webpack_require__(/*! inherits */ \"./node_modules/inherits/inherits_browser.js\")\nvar MD5 = __webpack_require__(/*! md5.js */ \"./node_modules/md5.js/index.js\")\nvar RIPEMD160 = __webpack_require__(/*! ripemd160 */ \"./node_modules/ripemd160/index.js\")\nvar sha = __webpack_require__(/*! sha.js */ \"./node_modules/sha.js/index.js\")\nvar Base = __webpack_require__(/*! cipher-base */ \"./node_modules/cipher-base/index.js\")\n\nfunction Hash (hash) {\n  Base.call(this, 'digest')\n\n  this._hash = hash\n}\n\ninherits(Hash, Base)\n\nHash.prototype._update = function (data) {\n  this._hash.update(data)\n}\n\nHash.prototype._final = function () {\n  return this._hash.digest()\n}\n\nmodule.exports = function createHash (alg) {\n  alg = alg.toLowerCase()\n  if (alg === 'md5') return new MD5()\n  if (alg === 'rmd160' || alg === 'ripemd160') return new RIPEMD160()\n\n  return new Hash(sha(alg))\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvY3JlYXRlLWhhc2gvYnJvd3Nlci5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBWTtBQUNaLGVBQWUsbUJBQU8sQ0FBQyw2REFBVTtBQUNqQyxVQUFVLG1CQUFPLENBQUMsOENBQVE7QUFDMUIsZ0JBQWdCLG1CQUFPLENBQUMsb0RBQVc7QUFDbkMsVUFBVSxtQkFBTyxDQUFDLDhDQUFRO0FBQzFCLFdBQVcsbUJBQU8sQ0FBQyx3REFBYTs7QUFFaEM7QUFDQTs7QUFFQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvY3JlYXRlLWhhc2gvYnJvd3Nlci5qcz8wMjc2Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0J1xudmFyIGluaGVyaXRzID0gcmVxdWlyZSgnaW5oZXJpdHMnKVxudmFyIE1ENSA9IHJlcXVpcmUoJ21kNS5qcycpXG52YXIgUklQRU1EMTYwID0gcmVxdWlyZSgncmlwZW1kMTYwJylcbnZhciBzaGEgPSByZXF1aXJlKCdzaGEuanMnKVxudmFyIEJhc2UgPSByZXF1aXJlKCdjaXBoZXItYmFzZScpXG5cbmZ1bmN0aW9uIEhhc2ggKGhhc2gpIHtcbiAgQmFzZS5jYWxsKHRoaXMsICdkaWdlc3QnKVxuXG4gIHRoaXMuX2hhc2ggPSBoYXNoXG59XG5cbmluaGVyaXRzKEhhc2gsIEJhc2UpXG5cbkhhc2gucHJvdG90eXBlLl91cGRhdGUgPSBmdW5jdGlvbiAoZGF0YSkge1xuICB0aGlzLl9oYXNoLnVwZGF0ZShkYXRhKVxufVxuXG5IYXNoLnByb3RvdHlwZS5fZmluYWwgPSBmdW5jdGlvbiAoKSB7XG4gIHJldHVybiB0aGlzLl9oYXNoLmRpZ2VzdCgpXG59XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gY3JlYXRlSGFzaCAoYWxnKSB7XG4gIGFsZyA9IGFsZy50b0xvd2VyQ2FzZSgpXG4gIGlmIChhbGcgPT09ICdtZDUnKSByZXR1cm4gbmV3IE1ENSgpXG4gIGlmIChhbGcgPT09ICdybWQxNjAnIHx8IGFsZyA9PT0gJ3JpcGVtZDE2MCcpIHJldHVybiBuZXcgUklQRU1EMTYwKClcblxuICByZXR1cm4gbmV3IEhhc2goc2hhKGFsZykpXG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/create-hash/browser.js\n");

/***/ }),

/***/ "./node_modules/ethereum-cryptography/hash-utils.js":
/*!**********************************************************!*\
  !*** ./node_modules/ethereum-cryptography/hash-utils.js ***!
  \**********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"./node_modules/buffer/index.js\")[\"Buffer\"];\n\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nfunction createHashFunction(hashConstructor) {\n    return function (msg) {\n        var hash = hashConstructor();\n        hash.update(msg);\n        return Buffer.from(hash.digest());\n    };\n}\nexports.createHashFunction = createHashFunction;\n//# sourceMappingURL=hash-utils.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZXRoZXJldW0tY3J5cHRvZ3JhcGh5L2hhc2gtdXRpbHMuanMuanMiLCJtYXBwaW5ncyI6IjtBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdEO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxNQUFNO0FBQ3JCO0FBQ0E7QUFDQSwwQkFBMEI7QUFDMUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2V0aGVyZXVtLWNyeXB0b2dyYXBoeS9oYXNoLXV0aWxzLmpzP2Y3MzUiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5mdW5jdGlvbiBjcmVhdGVIYXNoRnVuY3Rpb24oaGFzaENvbnN0cnVjdG9yKSB7XG4gICAgcmV0dXJuIGZ1bmN0aW9uIChtc2cpIHtcbiAgICAgICAgdmFyIGhhc2ggPSBoYXNoQ29uc3RydWN0b3IoKTtcbiAgICAgICAgaGFzaC51cGRhdGUobXNnKTtcbiAgICAgICAgcmV0dXJuIEJ1ZmZlci5mcm9tKGhhc2guZGlnZXN0KCkpO1xuICAgIH07XG59XG5leHBvcnRzLmNyZWF0ZUhhc2hGdW5jdGlvbiA9IGNyZWF0ZUhhc2hGdW5jdGlvbjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWhhc2gtdXRpbHMuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/ethereum-cryptography/hash-utils.js\n");

/***/ }),

/***/ "./node_modules/ethereum-cryptography/keccak.js":
/*!******************************************************!*\
  !*** ./node_modules/ethereum-cryptography/keccak.js ***!
  \******************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar hash_utils_1 = __webpack_require__(/*! ./hash-utils */ \"./node_modules/ethereum-cryptography/hash-utils.js\");\nvar createKeccakHash = __webpack_require__(/*! keccak */ \"./node_modules/keccak/js.js\");\nexports.keccak224 = hash_utils_1.createHashFunction(function () {\n    return createKeccakHash(\"keccak224\");\n});\nexports.keccak256 = hash_utils_1.createHashFunction(function () {\n    return createKeccakHash(\"keccak256\");\n});\nexports.keccak384 = hash_utils_1.createHashFunction(function () {\n    return createKeccakHash(\"keccak384\");\n});\nexports.keccak512 = hash_utils_1.createHashFunction(function () {\n    return createKeccakHash(\"keccak512\");\n});\n//# sourceMappingURL=keccak.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZXRoZXJldW0tY3J5cHRvZ3JhcGh5L2tlY2Nhay5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxtQkFBbUIsbUJBQU8sQ0FBQyx3RUFBYztBQUN6Qyx1QkFBdUIsbUJBQU8sQ0FBQywyQ0FBUTtBQUN2QyxpQkFBaUI7QUFDakI7QUFDQSxDQUFDO0FBQ0QsaUJBQWlCO0FBQ2pCO0FBQ0EsQ0FBQztBQUNELGlCQUFpQjtBQUNqQjtBQUNBLENBQUM7QUFDRCxpQkFBaUI7QUFDakI7QUFDQSxDQUFDO0FBQ0QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2V0aGVyZXVtLWNyeXB0b2dyYXBoeS9rZWNjYWsuanM/OWIwMSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbnZhciBoYXNoX3V0aWxzXzEgPSByZXF1aXJlKFwiLi9oYXNoLXV0aWxzXCIpO1xudmFyIGNyZWF0ZUtlY2Nha0hhc2ggPSByZXF1aXJlKFwia2VjY2FrXCIpO1xuZXhwb3J0cy5rZWNjYWsyMjQgPSBoYXNoX3V0aWxzXzEuY3JlYXRlSGFzaEZ1bmN0aW9uKGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4gY3JlYXRlS2VjY2FrSGFzaChcImtlY2NhazIyNFwiKTtcbn0pO1xuZXhwb3J0cy5rZWNjYWsyNTYgPSBoYXNoX3V0aWxzXzEuY3JlYXRlSGFzaEZ1bmN0aW9uKGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4gY3JlYXRlS2VjY2FrSGFzaChcImtlY2NhazI1NlwiKTtcbn0pO1xuZXhwb3J0cy5rZWNjYWszODQgPSBoYXNoX3V0aWxzXzEuY3JlYXRlSGFzaEZ1bmN0aW9uKGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4gY3JlYXRlS2VjY2FrSGFzaChcImtlY2NhazM4NFwiKTtcbn0pO1xuZXhwb3J0cy5rZWNjYWs1MTIgPSBoYXNoX3V0aWxzXzEuY3JlYXRlSGFzaEZ1bmN0aW9uKGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4gY3JlYXRlS2VjY2FrSGFzaChcImtlY2NhazUxMlwiKTtcbn0pO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9a2VjY2FrLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/ethereum-cryptography/keccak.js\n");

/***/ }),

/***/ "./node_modules/ethereum-cryptography/random.js":
/*!******************************************************!*\
  !*** ./node_modules/ethereum-cryptography/random.js ***!
  \******************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar randombytes = __webpack_require__(/*! randombytes */ \"./node_modules/randombytes/browser.js\");\nfunction getRandomBytes(bytes) {\n    return new Promise(function (resolve, reject) {\n        randombytes(bytes, function (err, resp) {\n            if (err) {\n                reject(err);\n                return;\n            }\n            resolve(resp);\n        });\n    });\n}\nexports.getRandomBytes = getRandomBytes;\nfunction getRandomBytesSync(bytes) {\n    return randombytes(bytes);\n}\nexports.getRandomBytesSync = getRandomBytesSync;\n//# sourceMappingURL=random.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZXRoZXJldW0tY3J5cHRvZ3JhcGh5L3JhbmRvbS5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxrQkFBa0IsbUJBQU8sQ0FBQywwREFBYTtBQUN2QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNULEtBQUs7QUFDTDtBQUNBLHNCQUFzQjtBQUN0QjtBQUNBO0FBQ0E7QUFDQSwwQkFBMEI7QUFDMUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2V0aGVyZXVtLWNyeXB0b2dyYXBoeS9yYW5kb20uanM/NTk5ZSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbnZhciByYW5kb21ieXRlcyA9IHJlcXVpcmUoXCJyYW5kb21ieXRlc1wiKTtcbmZ1bmN0aW9uIGdldFJhbmRvbUJ5dGVzKGJ5dGVzKSB7XG4gICAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHtcbiAgICAgICAgcmFuZG9tYnl0ZXMoYnl0ZXMsIGZ1bmN0aW9uIChlcnIsIHJlc3ApIHtcbiAgICAgICAgICAgIGlmIChlcnIpIHtcbiAgICAgICAgICAgICAgICByZWplY3QoZXJyKTtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXNvbHZlKHJlc3ApO1xuICAgICAgICB9KTtcbiAgICB9KTtcbn1cbmV4cG9ydHMuZ2V0UmFuZG9tQnl0ZXMgPSBnZXRSYW5kb21CeXRlcztcbmZ1bmN0aW9uIGdldFJhbmRvbUJ5dGVzU3luYyhieXRlcykge1xuICAgIHJldHVybiByYW5kb21ieXRlcyhieXRlcyk7XG59XG5leHBvcnRzLmdldFJhbmRvbUJ5dGVzU3luYyA9IGdldFJhbmRvbUJ5dGVzU3luYztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXJhbmRvbS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/ethereum-cryptography/random.js\n");

/***/ }),

/***/ "./node_modules/ethereum-cryptography/secp256k1.js":
/*!*********************************************************!*\
  !*** ./node_modules/ethereum-cryptography/secp256k1.js ***!
  \*********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar secp256k1_1 = __webpack_require__(/*! secp256k1 */ \"./node_modules/secp256k1/elliptic.js\");\nvar random_1 = __webpack_require__(/*! ./random */ \"./node_modules/ethereum-cryptography/random.js\");\nvar SECP256K1_PRIVATE_KEY_SIZE = 32;\nfunction createPrivateKey() {\n    return __awaiter(this, void 0, void 0, function () {\n        var pk;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (false) {}\n                    return [4 /*yield*/, random_1.getRandomBytes(SECP256K1_PRIVATE_KEY_SIZE)];\n                case 1:\n                    pk = _a.sent();\n                    if (secp256k1_1.privateKeyVerify(pk)) {\n                        return [2 /*return*/, pk];\n                    }\n                    return [3 /*break*/, 0];\n                case 2: return [2 /*return*/];\n            }\n        });\n    });\n}\nexports.createPrivateKey = createPrivateKey;\nfunction createPrivateKeySync() {\n    while (true) {\n        var pk = random_1.getRandomBytesSync(SECP256K1_PRIVATE_KEY_SIZE);\n        if (secp256k1_1.privateKeyVerify(pk)) {\n            return pk;\n        }\n    }\n}\nexports.createPrivateKeySync = createPrivateKeySync;\n__export(__webpack_require__(/*! secp256k1 */ \"./node_modules/secp256k1/elliptic.js\"));\n//# sourceMappingURL=secp256k1.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZXRoZXJldW0tY3J5cHRvZ3JhcGh5L3NlY3AyNTZrMS5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0EsNEJBQTRCLCtEQUErRCxpQkFBaUI7QUFDNUc7QUFDQSxvQ0FBb0MsTUFBTSwrQkFBK0IsWUFBWTtBQUNyRixtQ0FBbUMsTUFBTSxtQ0FBbUMsWUFBWTtBQUN4RixnQ0FBZ0M7QUFDaEM7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLGNBQWMsNkJBQTZCLDBCQUEwQixjQUFjLHFCQUFxQjtBQUN4RyxpQkFBaUIsb0RBQW9ELHFFQUFxRSxjQUFjO0FBQ3hKLHVCQUF1QixzQkFBc0I7QUFDN0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0NBQXdDO0FBQ3hDLG1DQUFtQyxTQUFTO0FBQzVDLG1DQUFtQyxXQUFXLFVBQVU7QUFDeEQsMENBQTBDLGNBQWM7QUFDeEQ7QUFDQSw4R0FBOEcsT0FBTztBQUNySCxpRkFBaUYsaUJBQWlCO0FBQ2xHLHlEQUF5RCxnQkFBZ0IsUUFBUTtBQUNqRiwrQ0FBK0MsZ0JBQWdCLGdCQUFnQjtBQUMvRTtBQUNBLGtDQUFrQztBQUNsQztBQUNBO0FBQ0EsVUFBVSxZQUFZLGFBQWEsU0FBUyxVQUFVO0FBQ3RELG9DQUFvQyxTQUFTO0FBQzdDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsa0JBQWtCLG1CQUFPLENBQUMsdURBQVc7QUFDckMsZUFBZSxtQkFBTyxDQUFDLGdFQUFVO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLEtBQUssRUFBRSxFQUF3QjtBQUN2RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1QsS0FBSztBQUNMO0FBQ0Esd0JBQXdCO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0QkFBNEI7QUFDNUIsU0FBUyxtQkFBTyxDQUFDLHVEQUFXO0FBQzVCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9ldGhlcmV1bS1jcnlwdG9ncmFwaHkvc2VjcDI1NmsxLmpzPzI3Y2UiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19hd2FpdGVyID0gKHRoaXMgJiYgdGhpcy5fX2F3YWl0ZXIpIHx8IGZ1bmN0aW9uICh0aGlzQXJnLCBfYXJndW1lbnRzLCBQLCBnZW5lcmF0b3IpIHtcbiAgICBmdW5jdGlvbiBhZG9wdCh2YWx1ZSkgeyByZXR1cm4gdmFsdWUgaW5zdGFuY2VvZiBQID8gdmFsdWUgOiBuZXcgUChmdW5jdGlvbiAocmVzb2x2ZSkgeyByZXNvbHZlKHZhbHVlKTsgfSk7IH1cbiAgICByZXR1cm4gbmV3IChQIHx8IChQID0gUHJvbWlzZSkpKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHtcbiAgICAgICAgZnVuY3Rpb24gZnVsZmlsbGVkKHZhbHVlKSB7IHRyeSB7IHN0ZXAoZ2VuZXJhdG9yLm5leHQodmFsdWUpKTsgfSBjYXRjaCAoZSkgeyByZWplY3QoZSk7IH0gfVxuICAgICAgICBmdW5jdGlvbiByZWplY3RlZCh2YWx1ZSkgeyB0cnkgeyBzdGVwKGdlbmVyYXRvcltcInRocm93XCJdKHZhbHVlKSk7IH0gY2F0Y2ggKGUpIHsgcmVqZWN0KGUpOyB9IH1cbiAgICAgICAgZnVuY3Rpb24gc3RlcChyZXN1bHQpIHsgcmVzdWx0LmRvbmUgPyByZXNvbHZlKHJlc3VsdC52YWx1ZSkgOiBhZG9wdChyZXN1bHQudmFsdWUpLnRoZW4oZnVsZmlsbGVkLCByZWplY3RlZCk7IH1cbiAgICAgICAgc3RlcCgoZ2VuZXJhdG9yID0gZ2VuZXJhdG9yLmFwcGx5KHRoaXNBcmcsIF9hcmd1bWVudHMgfHwgW10pKS5uZXh0KCkpO1xuICAgIH0pO1xufTtcbnZhciBfX2dlbmVyYXRvciA9ICh0aGlzICYmIHRoaXMuX19nZW5lcmF0b3IpIHx8IGZ1bmN0aW9uICh0aGlzQXJnLCBib2R5KSB7XG4gICAgdmFyIF8gPSB7IGxhYmVsOiAwLCBzZW50OiBmdW5jdGlvbigpIHsgaWYgKHRbMF0gJiAxKSB0aHJvdyB0WzFdOyByZXR1cm4gdFsxXTsgfSwgdHJ5czogW10sIG9wczogW10gfSwgZiwgeSwgdCwgZztcbiAgICByZXR1cm4gZyA9IHsgbmV4dDogdmVyYigwKSwgXCJ0aHJvd1wiOiB2ZXJiKDEpLCBcInJldHVyblwiOiB2ZXJiKDIpIH0sIHR5cGVvZiBTeW1ib2wgPT09IFwiZnVuY3Rpb25cIiAmJiAoZ1tTeW1ib2wuaXRlcmF0b3JdID0gZnVuY3Rpb24oKSB7IHJldHVybiB0aGlzOyB9KSwgZztcbiAgICBmdW5jdGlvbiB2ZXJiKG4pIHsgcmV0dXJuIGZ1bmN0aW9uICh2KSB7IHJldHVybiBzdGVwKFtuLCB2XSk7IH07IH1cbiAgICBmdW5jdGlvbiBzdGVwKG9wKSB7XG4gICAgICAgIGlmIChmKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiR2VuZXJhdG9yIGlzIGFscmVhZHkgZXhlY3V0aW5nLlwiKTtcbiAgICAgICAgd2hpbGUgKF8pIHRyeSB7XG4gICAgICAgICAgICBpZiAoZiA9IDEsIHkgJiYgKHQgPSBvcFswXSAmIDIgPyB5W1wicmV0dXJuXCJdIDogb3BbMF0gPyB5W1widGhyb3dcIl0gfHwgKCh0ID0geVtcInJldHVyblwiXSkgJiYgdC5jYWxsKHkpLCAwKSA6IHkubmV4dCkgJiYgISh0ID0gdC5jYWxsKHksIG9wWzFdKSkuZG9uZSkgcmV0dXJuIHQ7XG4gICAgICAgICAgICBpZiAoeSA9IDAsIHQpIG9wID0gW29wWzBdICYgMiwgdC52YWx1ZV07XG4gICAgICAgICAgICBzd2l0Y2ggKG9wWzBdKSB7XG4gICAgICAgICAgICAgICAgY2FzZSAwOiBjYXNlIDE6IHQgPSBvcDsgYnJlYWs7XG4gICAgICAgICAgICAgICAgY2FzZSA0OiBfLmxhYmVsKys7IHJldHVybiB7IHZhbHVlOiBvcFsxXSwgZG9uZTogZmFsc2UgfTtcbiAgICAgICAgICAgICAgICBjYXNlIDU6IF8ubGFiZWwrKzsgeSA9IG9wWzFdOyBvcCA9IFswXTsgY29udGludWU7XG4gICAgICAgICAgICAgICAgY2FzZSA3OiBvcCA9IF8ub3BzLnBvcCgpOyBfLnRyeXMucG9wKCk7IGNvbnRpbnVlO1xuICAgICAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgICAgICAgIGlmICghKHQgPSBfLnRyeXMsIHQgPSB0Lmxlbmd0aCA+IDAgJiYgdFt0Lmxlbmd0aCAtIDFdKSAmJiAob3BbMF0gPT09IDYgfHwgb3BbMF0gPT09IDIpKSB7IF8gPSAwOyBjb250aW51ZTsgfVxuICAgICAgICAgICAgICAgICAgICBpZiAob3BbMF0gPT09IDMgJiYgKCF0IHx8IChvcFsxXSA+IHRbMF0gJiYgb3BbMV0gPCB0WzNdKSkpIHsgXy5sYWJlbCA9IG9wWzFdOyBicmVhazsgfVxuICAgICAgICAgICAgICAgICAgICBpZiAob3BbMF0gPT09IDYgJiYgXy5sYWJlbCA8IHRbMV0pIHsgXy5sYWJlbCA9IHRbMV07IHQgPSBvcDsgYnJlYWs7IH1cbiAgICAgICAgICAgICAgICAgICAgaWYgKHQgJiYgXy5sYWJlbCA8IHRbMl0pIHsgXy5sYWJlbCA9IHRbMl07IF8ub3BzLnB1c2gob3ApOyBicmVhazsgfVxuICAgICAgICAgICAgICAgICAgICBpZiAodFsyXSkgXy5vcHMucG9wKCk7XG4gICAgICAgICAgICAgICAgICAgIF8udHJ5cy5wb3AoKTsgY29udGludWU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBvcCA9IGJvZHkuY2FsbCh0aGlzQXJnLCBfKTtcbiAgICAgICAgfSBjYXRjaCAoZSkgeyBvcCA9IFs2LCBlXTsgeSA9IDA7IH0gZmluYWxseSB7IGYgPSB0ID0gMDsgfVxuICAgICAgICBpZiAob3BbMF0gJiA1KSB0aHJvdyBvcFsxXTsgcmV0dXJuIHsgdmFsdWU6IG9wWzBdID8gb3BbMV0gOiB2b2lkIDAsIGRvbmU6IHRydWUgfTtcbiAgICB9XG59O1xuZnVuY3Rpb24gX19leHBvcnQobSkge1xuICAgIGZvciAodmFyIHAgaW4gbSkgaWYgKCFleHBvcnRzLmhhc093blByb3BlcnR5KHApKSBleHBvcnRzW3BdID0gbVtwXTtcbn1cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbnZhciBzZWNwMjU2azFfMSA9IHJlcXVpcmUoXCJzZWNwMjU2azFcIik7XG52YXIgcmFuZG9tXzEgPSByZXF1aXJlKFwiLi9yYW5kb21cIik7XG52YXIgU0VDUDI1NksxX1BSSVZBVEVfS0VZX1NJWkUgPSAzMjtcbmZ1bmN0aW9uIGNyZWF0ZVByaXZhdGVLZXkoKSB7XG4gICAgcmV0dXJuIF9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgcGs7XG4gICAgICAgIHJldHVybiBfX2dlbmVyYXRvcih0aGlzLCBmdW5jdGlvbiAoX2EpIHtcbiAgICAgICAgICAgIHN3aXRjaCAoX2EubGFiZWwpIHtcbiAgICAgICAgICAgICAgICBjYXNlIDA6XG4gICAgICAgICAgICAgICAgICAgIGlmICghdHJ1ZSkgcmV0dXJuIFszIC8qYnJlYWsqLywgMl07XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBbNCAvKnlpZWxkKi8sIHJhbmRvbV8xLmdldFJhbmRvbUJ5dGVzKFNFQ1AyNTZLMV9QUklWQVRFX0tFWV9TSVpFKV07XG4gICAgICAgICAgICAgICAgY2FzZSAxOlxuICAgICAgICAgICAgICAgICAgICBwayA9IF9hLnNlbnQoKTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKHNlY3AyNTZrMV8xLnByaXZhdGVLZXlWZXJpZnkocGspKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gWzIgLypyZXR1cm4qLywgcGtdO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBbMyAvKmJyZWFrKi8sIDBdO1xuICAgICAgICAgICAgICAgIGNhc2UgMjogcmV0dXJuIFsyIC8qcmV0dXJuKi9dO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICB9KTtcbn1cbmV4cG9ydHMuY3JlYXRlUHJpdmF0ZUtleSA9IGNyZWF0ZVByaXZhdGVLZXk7XG5mdW5jdGlvbiBjcmVhdGVQcml2YXRlS2V5U3luYygpIHtcbiAgICB3aGlsZSAodHJ1ZSkge1xuICAgICAgICB2YXIgcGsgPSByYW5kb21fMS5nZXRSYW5kb21CeXRlc1N5bmMoU0VDUDI1NksxX1BSSVZBVEVfS0VZX1NJWkUpO1xuICAgICAgICBpZiAoc2VjcDI1NmsxXzEucHJpdmF0ZUtleVZlcmlmeShwaykpIHtcbiAgICAgICAgICAgIHJldHVybiBwaztcbiAgICAgICAgfVxuICAgIH1cbn1cbmV4cG9ydHMuY3JlYXRlUHJpdmF0ZUtleVN5bmMgPSBjcmVhdGVQcml2YXRlS2V5U3luYztcbl9fZXhwb3J0KHJlcXVpcmUoXCJzZWNwMjU2azFcIikpO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c2VjcDI1NmsxLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/ethereum-cryptography/secp256k1.js\n");

/***/ }),

/***/ "./node_modules/ethereumjs-abi/index.js":
/*!**********************************************!*\
  !*** ./node_modules/ethereumjs-abi/index.js ***!
  \**********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("module.exports = __webpack_require__(/*! ./lib/index.js */ \"./node_modules/ethereumjs-abi/lib/index.js\")\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZXRoZXJldW1qcy1hYmkvaW5kZXguanMuanMiLCJtYXBwaW5ncyI6IkFBQUEsd0dBQTBDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9ldGhlcmV1bWpzLWFiaS9pbmRleC5qcz9jNWNhIl0sInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9saWIvaW5kZXguanMnKVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/ethereumjs-abi/index.js\n");

/***/ }),

/***/ "./node_modules/ethereumjs-abi/lib/index.js":
/*!**************************************************!*\
  !*** ./node_modules/ethereumjs-abi/lib/index.js ***!
  \**************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"./node_modules/buffer/index.js\")[\"Buffer\"];\n/* eslint-disable no-useless-escape */\nconst utils = __webpack_require__(/*! ethereumjs-util */ \"./node_modules/ethereumjs-abi/node_modules/ethereumjs-util/dist/index.js\")\nconst BN = __webpack_require__(/*! bn.js */ \"./node_modules/bn.js/lib/bn.js\")\n\nvar ABI = function () {\n}\n\n// Convert from short to canonical names\n// FIXME: optimise or make this nicer?\nfunction elementaryName (name) {\n  if (name.startsWith('int[')) {\n    return 'int256' + name.slice(3)\n  } else if (name === 'int') {\n    return 'int256'\n  } else if (name.startsWith('uint[')) {\n    return 'uint256' + name.slice(4)\n  } else if (name === 'uint') {\n    return 'uint256'\n  } else if (name.startsWith('fixed[')) {\n    return 'fixed128x128' + name.slice(5)\n  } else if (name === 'fixed') {\n    return 'fixed128x128'\n  } else if (name.startsWith('ufixed[')) {\n    return 'ufixed128x128' + name.slice(6)\n  } else if (name === 'ufixed') {\n    return 'ufixed128x128'\n  }\n  return name\n}\n\nABI.eventID = function (name, types) {\n  // FIXME: use node.js util.format?\n  var sig = name + '(' + types.map(elementaryName).join(',') + ')'\n  return utils.keccak256(Buffer.from(sig))\n}\n\nABI.methodID = function (name, types) {\n  return ABI.eventID(name, types).slice(0, 4)\n}\n\n// Parse N from type<N>\nfunction parseTypeN (type) {\n  return parseInt(/^\\D+(\\d+)$/.exec(type)[1], 10)\n}\n\n// Parse N,M from type<N>x<M>\nfunction parseTypeNxM (type) {\n  var tmp = /^\\D+(\\d+)x(\\d+)$/.exec(type)\n  return [ parseInt(tmp[1], 10), parseInt(tmp[2], 10) ]\n}\n\n// Parse N in type[<N>] where \"type\" can itself be an array type.\nfunction parseTypeArray (type) {\n  var tmp = type.match(/(.*)\\[(.*?)\\]$/)\n  if (tmp) {\n    return tmp[2] === '' ? 'dynamic' : parseInt(tmp[2], 10)\n  }\n  return null\n}\n\nfunction parseNumber (arg) {\n  var type = typeof arg\n  if (type === 'string') {\n    if (utils.isHexPrefixed(arg)) {\n      return new BN(utils.stripHexPrefix(arg), 16)\n    } else {\n      return new BN(arg, 10)\n    }\n  } else if (type === 'number') {\n    return new BN(arg)\n  } else if (arg.toArray) {\n    // assume this is a BN for the moment, replace with BN.isBN soon\n    return arg\n  } else {\n    throw new Error('Argument is not a number')\n  }\n}\n\n// someMethod(bytes,uint)\n// someMethod(bytes,uint):(boolean)\nfunction parseSignature (sig) {\n  var tmp = /^(\\w+)\\((.*)\\)$/.exec(sig)\n\n  if (tmp.length !== 3) {\n    throw new Error('Invalid method signature')\n  }\n\n  var args = /^(.+)\\):\\((.+)$/.exec(tmp[2])\n\n  if (args !== null && args.length === 3) {\n    return {\n      method: tmp[1],\n      args: args[1].split(','),\n      retargs: args[2].split(',')\n    }\n  } else {\n    var params = tmp[2].split(',')\n    if (params.length === 1 && params[0] === '') {\n      // Special-case (possibly naive) fixup for functions that take no arguments.\n      // TODO: special cases are always bad, but this makes the function return\n      // match what the calling functions expect\n      params = []\n    }\n    return {\n      method: tmp[1],\n      args: params\n    }\n  }\n}\n\n// Encodes a single item (can be dynamic array)\n// @returns: Buffer\nfunction encodeSingle (type, arg) {\n  var size, num, ret, i\n\n  if (type === 'address') {\n    return encodeSingle('uint160', parseNumber(arg))\n  } else if (type === 'bool') {\n    return encodeSingle('uint8', arg ? 1 : 0)\n  } else if (type === 'string') {\n    return encodeSingle('bytes', Buffer.from(arg, 'utf8'))\n  } else if (isArray(type)) {\n    // this part handles fixed-length ([2]) and variable length ([]) arrays\n    // NOTE: we catch here all calls to arrays, that simplifies the rest\n    if (typeof arg.length === 'undefined') {\n      throw new Error('Not an array?')\n    }\n    size = parseTypeArray(type)\n    if (size !== 'dynamic' && size !== 0 && arg.length > size) {\n      throw new Error('Elements exceed array size: ' + size)\n    }\n    ret = []\n    type = type.slice(0, type.lastIndexOf('['))\n    if (typeof arg === 'string') {\n      arg = JSON.parse(arg)\n    }\n    for (i in arg) {\n      ret.push(encodeSingle(type, arg[i]))\n    }\n    if (size === 'dynamic') {\n      var length = encodeSingle('uint256', arg.length)\n      ret.unshift(length)\n    }\n    return Buffer.concat(ret)\n  } else if (type === 'bytes') {\n    arg = Buffer.from(arg)\n\n    ret = Buffer.concat([ encodeSingle('uint256', arg.length), arg ])\n\n    if ((arg.length % 32) !== 0) {\n      ret = Buffer.concat([ ret, utils.zeros(32 - (arg.length % 32)) ])\n    }\n\n    return ret\n  } else if (type.startsWith('bytes')) {\n    size = parseTypeN(type)\n    if (size < 1 || size > 32) {\n      throw new Error('Invalid bytes<N> width: ' + size)\n    }\n\n    return utils.setLengthRight(arg, 32)\n  } else if (type.startsWith('uint')) {\n    size = parseTypeN(type)\n    if ((size % 8) || (size < 8) || (size > 256)) {\n      throw new Error('Invalid uint<N> width: ' + size)\n    }\n\n    num = parseNumber(arg)\n    if (num.bitLength() > size) {\n      throw new Error('Supplied uint exceeds width: ' + size + ' vs ' + num.bitLength())\n    }\n\n    if (num < 0) {\n      throw new Error('Supplied uint is negative')\n    }\n\n    return num.toArrayLike(Buffer, 'be', 32)\n  } else if (type.startsWith('int')) {\n    size = parseTypeN(type)\n    if ((size % 8) || (size < 8) || (size > 256)) {\n      throw new Error('Invalid int<N> width: ' + size)\n    }\n\n    num = parseNumber(arg)\n    if (num.bitLength() > size) {\n      throw new Error('Supplied int exceeds width: ' + size + ' vs ' + num.bitLength())\n    }\n\n    return num.toTwos(256).toArrayLike(Buffer, 'be', 32)\n  } else if (type.startsWith('ufixed')) {\n    size = parseTypeNxM(type)\n\n    num = parseNumber(arg)\n\n    if (num < 0) {\n      throw new Error('Supplied ufixed is negative')\n    }\n\n    return encodeSingle('uint256', num.mul(new BN(2).pow(new BN(size[1]))))\n  } else if (type.startsWith('fixed')) {\n    size = parseTypeNxM(type)\n\n    return encodeSingle('int256', parseNumber(arg).mul(new BN(2).pow(new BN(size[1]))))\n  }\n\n  throw new Error('Unsupported or invalid type: ' + type)\n}\n\n// Decodes a single item (can be dynamic array)\n// @returns: array\n// FIXME: this method will need a lot of attention at checking limits and validation\nfunction decodeSingle (parsedType, data, offset) {\n  if (typeof parsedType === 'string') {\n    parsedType = parseType(parsedType)\n  }\n  var size, num, ret, i\n\n  if (parsedType.name === 'address') {\n    return decodeSingle(parsedType.rawType, data, offset).toArrayLike(Buffer, 'be', 20).toString('hex')\n  } else if (parsedType.name === 'bool') {\n    return decodeSingle(parsedType.rawType, data, offset).toString() === new BN(1).toString()\n  } else if (parsedType.name === 'string') {\n    var bytes = decodeSingle(parsedType.rawType, data, offset)\n    return Buffer.from(bytes, 'utf8').toString()\n  } else if (parsedType.isArray) {\n    // this part handles fixed-length arrays ([2]) and variable length ([]) arrays\n    // NOTE: we catch here all calls to arrays, that simplifies the rest\n    ret = []\n    size = parsedType.size\n\n    if (parsedType.size === 'dynamic') {\n      offset = decodeSingle('uint256', data, offset).toNumber()\n      size = decodeSingle('uint256', data, offset).toNumber()\n      offset = offset + 32\n    }\n    for (i = 0; i < size; i++) {\n      var decoded = decodeSingle(parsedType.subArray, data, offset)\n      ret.push(decoded)\n      offset += parsedType.subArray.memoryUsage\n    }\n    return ret\n  } else if (parsedType.name === 'bytes') {\n    offset = decodeSingle('uint256', data, offset).toNumber()\n    size = decodeSingle('uint256', data, offset).toNumber()\n    return data.slice(offset + 32, offset + 32 + size)\n  } else if (parsedType.name.startsWith('bytes')) {\n    return data.slice(offset, offset + parsedType.size)\n  } else if (parsedType.name.startsWith('uint')) {\n    num = new BN(data.slice(offset, offset + 32), 16, 'be')\n    if (num.bitLength() > parsedType.size) {\n      throw new Error('Decoded int exceeds width: ' + parsedType.size + ' vs ' + num.bitLength())\n    }\n    return num\n  } else if (parsedType.name.startsWith('int')) {\n    num = new BN(data.slice(offset, offset + 32), 16, 'be').fromTwos(256)\n    if (num.bitLength() > parsedType.size) {\n      throw new Error('Decoded uint exceeds width: ' + parsedType.size + ' vs ' + num.bitLength())\n    }\n\n    return num\n  } else if (parsedType.name.startsWith('ufixed')) {\n    size = new BN(2).pow(new BN(parsedType.size[1]))\n    num = decodeSingle('uint256', data, offset)\n    if (!num.mod(size).isZero()) {\n      throw new Error('Decimals not supported yet')\n    }\n    return num.div(size)\n  } else if (parsedType.name.startsWith('fixed')) {\n    size = new BN(2).pow(new BN(parsedType.size[1]))\n    num = decodeSingle('int256', data, offset)\n    if (!num.mod(size).isZero()) {\n      throw new Error('Decimals not supported yet')\n    }\n    return num.div(size)\n  }\n  throw new Error('Unsupported or invalid type: ' + parsedType.name)\n}\n\n// Parse the given type\n// @returns: {} containing the type itself, memory usage and (including size and subArray if applicable)\nfunction parseType (type) {\n  var size\n  var ret\n  if (isArray(type)) {\n    size = parseTypeArray(type)\n    var subArray = type.slice(0, type.lastIndexOf('['))\n    subArray = parseType(subArray)\n    ret = {\n      isArray: true,\n      name: type,\n      size: size,\n      memoryUsage: size === 'dynamic' ? 32 : subArray.memoryUsage * size,\n      subArray: subArray\n    }\n    return ret\n  } else {\n    var rawType\n    switch (type) {\n      case 'address':\n        rawType = 'uint160'\n        break\n      case 'bool':\n        rawType = 'uint8'\n        break\n      case 'string':\n        rawType = 'bytes'\n        break\n    }\n    ret = {\n      rawType: rawType,\n      name: type,\n      memoryUsage: 32\n    }\n\n    if ((type.startsWith('bytes') && type !== 'bytes') || type.startsWith('uint') || type.startsWith('int')) {\n      ret.size = parseTypeN(type)\n    } else if (type.startsWith('ufixed') || type.startsWith('fixed')) {\n      ret.size = parseTypeNxM(type)\n    }\n\n    if (type.startsWith('bytes') && type !== 'bytes' && (ret.size < 1 || ret.size > 32)) {\n      throw new Error('Invalid bytes<N> width: ' + ret.size)\n    }\n    if ((type.startsWith('uint') || type.startsWith('int')) && (ret.size % 8 || ret.size < 8 || ret.size > 256)) {\n      throw new Error('Invalid int/uint<N> width: ' + ret.size)\n    }\n    return ret\n  }\n}\n\n// Is a type dynamic?\nfunction isDynamic (type) {\n  // FIXME: handle all types? I don't think anything is missing now\n  return (type === 'string') || (type === 'bytes') || (parseTypeArray(type) === 'dynamic')\n}\n\n// Is a type an array?\nfunction isArray (type) {\n  return type.lastIndexOf(']') === type.length - 1\n}\n\n// Encode a method/event with arguments\n// @types an array of string type names\n// @args  an array of the appropriate values\nABI.rawEncode = function (types, values) {\n  var output = []\n  var data = []\n\n  var headLength = 0\n\n  types.forEach(function (type) {\n    if (isArray(type)) {\n      var size = parseTypeArray(type)\n\n      if (size !== 'dynamic') {\n        headLength += 32 * size\n      } else {\n        headLength += 32\n      }\n    } else {\n      headLength += 32\n    }\n  })\n\n  for (var i = 0; i < types.length; i++) {\n    var type = elementaryName(types[i])\n    var value = values[i]\n    var cur = encodeSingle(type, value)\n\n    // Use the head/tail method for storing dynamic data\n    if (isDynamic(type)) {\n      output.push(encodeSingle('uint256', headLength))\n      data.push(cur)\n      headLength += cur.length\n    } else {\n      output.push(cur)\n    }\n  }\n\n  return Buffer.concat(output.concat(data))\n}\n\nABI.rawDecode = function (types, data) {\n  var ret = []\n  data = Buffer.from(data)\n  var offset = 0\n  for (var i = 0; i < types.length; i++) {\n    var type = elementaryName(types[i])\n    var parsed = parseType(type, data, offset)\n    var decoded = decodeSingle(parsed, data, offset)\n    offset += parsed.memoryUsage\n    ret.push(decoded)\n  }\n  return ret\n}\n\nABI.simpleEncode = function (method) {\n  var args = Array.prototype.slice.call(arguments).slice(1)\n  var sig = parseSignature(method)\n\n  // FIXME: validate/convert arguments\n  if (args.length !== sig.args.length) {\n    throw new Error('Argument count mismatch')\n  }\n\n  return Buffer.concat([ ABI.methodID(sig.method, sig.args), ABI.rawEncode(sig.args, args) ])\n}\n\nABI.simpleDecode = function (method, data) {\n  var sig = parseSignature(method)\n\n  // FIXME: validate/convert arguments\n  if (!sig.retargs) {\n    throw new Error('No return values in method')\n  }\n\n  return ABI.rawDecode(sig.retargs, data)\n}\n\nfunction stringify (type, value) {\n  if (type.startsWith('address') || type.startsWith('bytes')) {\n    return '0x' + value.toString('hex')\n  } else {\n    return value.toString()\n  }\n}\n\nABI.stringify = function (types, values) {\n  var ret = []\n\n  for (var i in types) {\n    var type = types[i]\n    var value = values[i]\n\n    // if it is an array type, concat the items\n    if (/^[^\\[]+\\[.*\\]$/.test(type)) {\n      value = value.map(function (item) {\n        return stringify(type, item)\n      }).join(', ')\n    } else {\n      value = stringify(type, value)\n    }\n\n    ret.push(value)\n  }\n\n  return ret\n}\n\nABI.solidityHexValue = function (type, value, bitsize) {\n  // pass in bitsize = null if use default bitsize\n  var size, num\n  if (isArray(type)) {\n    var subType = type.replace(/\\[.*?\\]/, '')\n    if (!isArray(subType)) {\n      var arraySize = parseTypeArray(type)\n      if (arraySize !== 'dynamic' && arraySize !== 0 && value.length > arraySize) {\n        throw new Error('Elements exceed array size: ' + arraySize)\n      }\n    }\n    var arrayValues = value.map(function (v) {\n      return ABI.solidityHexValue(subType, v, 256)\n    })\n    return Buffer.concat(arrayValues)\n  } else if (type === 'bytes') {\n    return value\n  } else if (type === 'string') {\n    return Buffer.from(value, 'utf8')\n  } else if (type === 'bool') {\n    bitsize = bitsize || 8\n    var padding = Array((bitsize) / 4).join('0')\n    return Buffer.from(value ? padding + '1' : padding + '0', 'hex')\n  } else if (type === 'address') {\n    var bytesize = 20\n    if (bitsize) {\n      bytesize = bitsize / 8\n    }\n    return utils.setLengthLeft(value, bytesize)\n  } else if (type.startsWith('bytes')) {\n    size = parseTypeN(type)\n    if (size < 1 || size > 32) {\n      throw new Error('Invalid bytes<N> width: ' + size)\n    }\n\n    return utils.setLengthRight(value, size)\n  } else if (type.startsWith('uint')) {\n    size = parseTypeN(type)\n    if ((size % 8) || (size < 8) || (size > 256)) {\n      throw new Error('Invalid uint<N> width: ' + size)\n    }\n\n    num = parseNumber(value)\n    if (num.bitLength() > size) {\n      throw new Error('Supplied uint exceeds width: ' + size + ' vs ' + num.bitLength())\n    }\n\n    bitsize = bitsize || size\n    return num.toArrayLike(Buffer, 'be', bitsize / 8)\n  } else if (type.startsWith('int')) {\n    size = parseTypeN(type)\n    if ((size % 8) || (size < 8) || (size > 256)) {\n      throw new Error('Invalid int<N> width: ' + size)\n    }\n\n    num = parseNumber(value)\n    if (num.bitLength() > size) {\n      throw new Error('Supplied int exceeds width: ' + size + ' vs ' + num.bitLength())\n    }\n\n    bitsize = bitsize || size\n    return num.toTwos(size).toArrayLike(Buffer, 'be', bitsize / 8)\n  } else {\n    // FIXME: support all other types\n    throw new Error('Unsupported or invalid type: ' + type)\n  }\n}\n\nABI.solidityPack = function (types, values) {\n  if (types.length !== values.length) {\n    throw new Error('Number of types are not matching the values')\n  }\n\n  var ret = []\n\n  for (var i = 0; i < types.length; i++) {\n    var type = elementaryName(types[i])\n    var value = values[i]\n    ret.push(ABI.solidityHexValue(type, value, null))\n  }\n\n  return Buffer.concat(ret)\n}\n\nABI.soliditySHA3 = function (types, values) {\n  return utils.keccak256(ABI.solidityPack(types, values))\n}\n\nABI.soliditySHA256 = function (types, values) {\n  return utils.sha256(ABI.solidityPack(types, values))\n}\n\nABI.solidityRIPEMD160 = function (types, values) {\n  return utils.ripemd160(ABI.solidityPack(types, values), true)\n}\n\n// Serpent's users are familiar with this encoding\n// - s: string\n// - b: bytes\n// - b<N>: bytes<N>\n// - i: int256\n// - a: int256[]\n\nfunction isNumeric (c) {\n  // FIXME: is this correct? Seems to work\n  return (c >= '0') && (c <= '9')\n}\n\n// For a \"documentation\" refer to https://github.com/ethereum/serpent/blob/develop/preprocess.cpp\nABI.fromSerpent = function (sig) {\n  var ret = []\n  for (var i = 0; i < sig.length; i++) {\n    var type = sig[i]\n    if (type === 's') {\n      ret.push('bytes')\n    } else if (type === 'b') {\n      var tmp = 'bytes'\n      var j = i + 1\n      while ((j < sig.length) && isNumeric(sig[j])) {\n        tmp += sig[j] - '0'\n        j++\n      }\n      i = j - 1\n      ret.push(tmp)\n    } else if (type === 'i') {\n      ret.push('int256')\n    } else if (type === 'a') {\n      ret.push('int256[]')\n    } else {\n      throw new Error('Unsupported or invalid type: ' + type)\n    }\n  }\n  return ret\n}\n\nABI.toSerpent = function (types) {\n  var ret = []\n  for (var i = 0; i < types.length; i++) {\n    var type = types[i]\n    if (type === 'bytes') {\n      ret.push('s')\n    } else if (type.startsWith('bytes')) {\n      ret.push('b' + parseTypeN(type))\n    } else if (type === 'int256') {\n      ret.push('i')\n    } else if (type === 'int256[]') {\n      ret.push('a')\n    } else {\n      throw new Error('Unsupported or invalid type: ' + type)\n    }\n  }\n  return ret.join('')\n}\n\nmodule.exports = ABI\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/ethereumjs-abi/lib/index.js\n");

/***/ }),

/***/ "./node_modules/ethereumjs-abi/node_modules/ethereumjs-util/dist/account.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/ethereumjs-abi/node_modules/ethereumjs-util/dist/account.js ***!
  \**********************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"./node_modules/buffer/index.js\")[\"Buffer\"];\n\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.importPublic = exports.privateToPublic = exports.privateToAddress = exports.publicToAddress = exports.pubToAddress = exports.isValidPublic = exports.isValidPrivate = exports.isPrecompiled = exports.generateAddress2 = exports.generateAddress = exports.isValidChecksumAddress = exports.toChecksumAddress = exports.isZeroAddress = exports.isValidAddress = exports.zeroAddress = void 0;\nvar assert = __webpack_require__(/*! assert */ \"./node_modules/assert/build/assert.js\");\nvar ethjsUtil = __webpack_require__(/*! ethjs-util */ \"./node_modules/ethjs-util/lib/index.js\");\nvar secp256k1 = __webpack_require__(/*! ./secp256k1v3-adapter */ \"./node_modules/ethereumjs-abi/node_modules/ethereumjs-util/dist/secp256k1v3-adapter.js\");\nvar BN = __webpack_require__(/*! bn.js */ \"./node_modules/bn.js/lib/bn.js\");\nvar bytes_1 = __webpack_require__(/*! ./bytes */ \"./node_modules/ethereumjs-abi/node_modules/ethereumjs-util/dist/bytes.js\");\nvar hash_1 = __webpack_require__(/*! ./hash */ \"./node_modules/ethereumjs-abi/node_modules/ethereumjs-util/dist/hash.js\");\n/**\n * Returns a zero address.\n */\nexports.zeroAddress = function () {\n    var addressLength = 20;\n    var addr = bytes_1.zeros(addressLength);\n    return bytes_1.bufferToHex(addr);\n};\n/**\n * Checks if the address is a valid. Accepts checksummed addresses too.\n */\nexports.isValidAddress = function (address) {\n    return /^0x[0-9a-fA-F]{40}$/.test(address);\n};\n/**\n * Checks if a given address is a zero address.\n */\nexports.isZeroAddress = function (address) {\n    var zeroAddr = exports.zeroAddress();\n    return zeroAddr === bytes_1.addHexPrefix(address);\n};\n/**\n * Returns a checksummed address.\n *\n * If a eip1191ChainId is provided, the chainId will be included in the checksum calculation. This\n * has the effect of checksummed addresses for one chain having invalid checksums for others.\n * For more details, consult EIP-1191.\n *\n * WARNING: Checksums with and without the chainId will differ. As of 2019-06-26, the most commonly\n * used variation in Ethereum was without the chainId. This may change in the future.\n */\nexports.toChecksumAddress = function (address, eip1191ChainId) {\n    address = ethjsUtil.stripHexPrefix(address).toLowerCase();\n    var prefix = eip1191ChainId !== undefined ? eip1191ChainId.toString() + '0x' : '';\n    var hash = hash_1.keccak(prefix + address).toString('hex');\n    var ret = '0x';\n    for (var i = 0; i < address.length; i++) {\n        if (parseInt(hash[i], 16) >= 8) {\n            ret += address[i].toUpperCase();\n        }\n        else {\n            ret += address[i];\n        }\n    }\n    return ret;\n};\n/**\n * Checks if the address is a valid checksummed address.\n *\n * See toChecksumAddress' documentation for details about the eip1191ChainId parameter.\n */\nexports.isValidChecksumAddress = function (address, eip1191ChainId) {\n    return exports.isValidAddress(address) && exports.toChecksumAddress(address, eip1191ChainId) === address;\n};\n/**\n * Generates an address of a newly created contract.\n * @param from The address which is creating this new address\n * @param nonce The nonce of the from account\n */\nexports.generateAddress = function (from, nonce) {\n    from = bytes_1.toBuffer(from);\n    var nonceBN = new BN(nonce);\n    if (nonceBN.isZero()) {\n        // in RLP we want to encode null in the case of zero nonce\n        // read the RLP documentation for an answer if you dare\n        return hash_1.rlphash([from, null]).slice(-20);\n    }\n    // Only take the lower 160bits of the hash\n    return hash_1.rlphash([from, Buffer.from(nonceBN.toArray())]).slice(-20);\n};\n/**\n * Generates an address for a contract created using CREATE2.\n * @param from The address which is creating this new address\n * @param salt A salt\n * @param initCode The init code of the contract being created\n */\nexports.generateAddress2 = function (from, salt, initCode) {\n    var fromBuf = bytes_1.toBuffer(from);\n    var saltBuf = bytes_1.toBuffer(salt);\n    var initCodeBuf = bytes_1.toBuffer(initCode);\n    assert(fromBuf.length === 20);\n    assert(saltBuf.length === 32);\n    var address = hash_1.keccak256(Buffer.concat([Buffer.from('ff', 'hex'), fromBuf, saltBuf, hash_1.keccak256(initCodeBuf)]));\n    return address.slice(-20);\n};\n/**\n * Returns true if the supplied address belongs to a precompiled account (Byzantium).\n */\nexports.isPrecompiled = function (address) {\n    var a = bytes_1.unpad(address);\n    return a.length === 1 && a[0] >= 1 && a[0] <= 8;\n};\n/**\n * Checks if the private key satisfies the rules of the curve secp256k1.\n */\nexports.isValidPrivate = function (privateKey) {\n    return secp256k1.privateKeyVerify(privateKey);\n};\n/**\n * Checks if the public key satisfies the rules of the curve secp256k1\n * and the requirements of Ethereum.\n * @param publicKey The two points of an uncompressed key, unless sanitize is enabled\n * @param sanitize Accept public keys in other formats\n */\nexports.isValidPublic = function (publicKey, sanitize) {\n    if (sanitize === void 0) { sanitize = false; }\n    if (publicKey.length === 64) {\n        // Convert to SEC1 for secp256k1\n        return secp256k1.publicKeyVerify(Buffer.concat([Buffer.from([4]), publicKey]));\n    }\n    if (!sanitize) {\n        return false;\n    }\n    return secp256k1.publicKeyVerify(publicKey);\n};\n/**\n * Returns the ethereum address of a given public key.\n * Accepts \"Ethereum public keys\" and SEC1 encoded keys.\n * @param pubKey The two points of an uncompressed key, unless sanitize is enabled\n * @param sanitize Accept public keys in other formats\n */\nexports.pubToAddress = function (pubKey, sanitize) {\n    if (sanitize === void 0) { sanitize = false; }\n    pubKey = bytes_1.toBuffer(pubKey);\n    if (sanitize && pubKey.length !== 64) {\n        pubKey = secp256k1.publicKeyConvert(pubKey, false).slice(1);\n    }\n    assert(pubKey.length === 64);\n    // Only take the lower 160bits of the hash\n    return hash_1.keccak(pubKey).slice(-20);\n};\nexports.publicToAddress = exports.pubToAddress;\n/**\n * Returns the ethereum address of a given private key.\n * @param privateKey A private key must be 256 bits wide\n */\nexports.privateToAddress = function (privateKey) {\n    return exports.publicToAddress(exports.privateToPublic(privateKey));\n};\n/**\n * Returns the ethereum public key of a given private key.\n * @param privateKey A private key must be 256 bits wide\n */\nexports.privateToPublic = function (privateKey) {\n    privateKey = bytes_1.toBuffer(privateKey);\n    // skip the type flag and use the X, Y points\n    return secp256k1.publicKeyCreate(privateKey, false).slice(1);\n};\n/**\n * Converts a public key to the Ethereum format.\n */\nexports.importPublic = function (publicKey) {\n    publicKey = bytes_1.toBuffer(publicKey);\n    if (publicKey.length !== 64) {\n        publicKey = secp256k1.publicKeyConvert(publicKey, false).slice(1);\n    }\n    return publicKey;\n};\n//# sourceMappingURL=account.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/ethereumjs-abi/node_modules/ethereumjs-util/dist/account.js\n");

/***/ }),

/***/ "./node_modules/ethereumjs-abi/node_modules/ethereumjs-util/dist/bytes.js":
/*!********************************************************************************!*\
  !*** ./node_modules/ethereumjs-abi/node_modules/ethereumjs-util/dist/bytes.js ***!
  \********************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"./node_modules/buffer/index.js\")[\"Buffer\"];\n\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.baToJSON = exports.addHexPrefix = exports.toUnsigned = exports.fromSigned = exports.bufferToHex = exports.bufferToInt = exports.toBuffer = exports.stripZeros = exports.unpad = exports.setLengthRight = exports.setLength = exports.setLengthLeft = exports.zeros = void 0;\nvar ethjsUtil = __webpack_require__(/*! ethjs-util */ \"./node_modules/ethjs-util/lib/index.js\");\nvar BN = __webpack_require__(/*! bn.js */ \"./node_modules/bn.js/lib/bn.js\");\n/**\n * Returns a buffer filled with 0s.\n * @param bytes the number of bytes the buffer should be\n */\nexports.zeros = function (bytes) {\n    return Buffer.allocUnsafe(bytes).fill(0);\n};\n/**\n * Left Pads an `Array` or `Buffer` with leading zeros till it has `length` bytes.\n * Or it truncates the beginning if it exceeds.\n * @param msg the value to pad (Buffer|Array)\n * @param length the number of bytes the output should be\n * @param right whether to start padding form the left or right\n * @return (Buffer|Array)\n */\nexports.setLengthLeft = function (msg, length, right) {\n    if (right === void 0) { right = false; }\n    var buf = exports.zeros(length);\n    msg = exports.toBuffer(msg);\n    if (right) {\n        if (msg.length < length) {\n            msg.copy(buf);\n            return buf;\n        }\n        return msg.slice(0, length);\n    }\n    else {\n        if (msg.length < length) {\n            msg.copy(buf, length - msg.length);\n            return buf;\n        }\n        return msg.slice(-length);\n    }\n};\nexports.setLength = exports.setLengthLeft;\n/**\n * Right Pads an `Array` or `Buffer` with leading zeros till it has `length` bytes.\n * Or it truncates the beginning if it exceeds.\n * @param msg the value to pad (Buffer|Array)\n * @param length the number of bytes the output should be\n * @return (Buffer|Array)\n */\nexports.setLengthRight = function (msg, length) {\n    return exports.setLength(msg, length, true);\n};\n/**\n * Trims leading zeros from a `Buffer` or an `Array`.\n * @param a (Buffer|Array|String)\n * @return (Buffer|Array|String)\n */\nexports.unpad = function (a) {\n    a = ethjsUtil.stripHexPrefix(a);\n    var first = a[0];\n    while (a.length > 0 && first.toString() === '0') {\n        a = a.slice(1);\n        first = a[0];\n    }\n    return a;\n};\nexports.stripZeros = exports.unpad;\n/**\n * Attempts to turn a value into a `Buffer`. As input it supports `Buffer`, `String`, `Number`, null/undefined, `BN` and other objects with a `toArray()` method.\n * @param v the value\n */\nexports.toBuffer = function (v) {\n    if (!Buffer.isBuffer(v)) {\n        if (Array.isArray(v)) {\n            v = Buffer.from(v);\n        }\n        else if (typeof v === 'string') {\n            if (ethjsUtil.isHexString(v)) {\n                v = Buffer.from(ethjsUtil.padToEven(ethjsUtil.stripHexPrefix(v)), 'hex');\n            }\n            else {\n                throw new Error(\"Cannot convert string to buffer. toBuffer only supports 0x-prefixed hex strings and this string was given: \" + v);\n            }\n        }\n        else if (typeof v === 'number') {\n            v = ethjsUtil.intToBuffer(v);\n        }\n        else if (v === null || v === undefined) {\n            v = Buffer.allocUnsafe(0);\n        }\n        else if (BN.isBN(v)) {\n            v = v.toArrayLike(Buffer);\n        }\n        else if (v.toArray) {\n            // converts a BN to a Buffer\n            v = Buffer.from(v.toArray());\n        }\n        else {\n            throw new Error('invalid type');\n        }\n    }\n    return v;\n};\n/**\n * Converts a `Buffer` to a `Number`.\n * @param buf `Buffer` object to convert\n * @throws If the input number exceeds 53 bits.\n */\nexports.bufferToInt = function (buf) {\n    return new BN(exports.toBuffer(buf)).toNumber();\n};\n/**\n * Converts a `Buffer` into a `0x`-prefixed hex `String`.\n * @param buf `Buffer` object to convert\n */\nexports.bufferToHex = function (buf) {\n    buf = exports.toBuffer(buf);\n    return '0x' + buf.toString('hex');\n};\n/**\n * Interprets a `Buffer` as a signed integer and returns a `BN`. Assumes 256-bit numbers.\n * @param num Signed integer value\n */\nexports.fromSigned = function (num) {\n    return new BN(num).fromTwos(256);\n};\n/**\n * Converts a `BN` to an unsigned integer and returns it as a `Buffer`. Assumes 256-bit numbers.\n * @param num\n */\nexports.toUnsigned = function (num) {\n    return Buffer.from(num.toTwos(256).toArray());\n};\n/**\n * Adds \"0x\" to a given `String` if it does not already start with \"0x\".\n */\nexports.addHexPrefix = function (str) {\n    if (typeof str !== 'string') {\n        return str;\n    }\n    return ethjsUtil.isHexPrefixed(str) ? str : '0x' + str;\n};\n/**\n * Converts a `Buffer` or `Array` to JSON.\n * @param ba (Buffer|Array)\n * @return (Array|String|null)\n */\nexports.baToJSON = function (ba) {\n    if (Buffer.isBuffer(ba)) {\n        return \"0x\" + ba.toString('hex');\n    }\n    else if (ba instanceof Array) {\n        var array = [];\n        for (var i = 0; i < ba.length; i++) {\n            array.push(exports.baToJSON(ba[i]));\n        }\n        return array;\n    }\n};\n//# sourceMappingURL=bytes.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/ethereumjs-abi/node_modules/ethereumjs-util/dist/bytes.js\n");

/***/ }),

/***/ "./node_modules/ethereumjs-abi/node_modules/ethereumjs-util/dist/constants.js":
/*!************************************************************************************!*\
  !*** ./node_modules/ethereumjs-abi/node_modules/ethereumjs-util/dist/constants.js ***!
  \************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"./node_modules/buffer/index.js\")[\"Buffer\"];\n\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.KECCAK256_RLP = exports.KECCAK256_RLP_S = exports.KECCAK256_RLP_ARRAY = exports.KECCAK256_RLP_ARRAY_S = exports.KECCAK256_NULL = exports.KECCAK256_NULL_S = exports.TWO_POW256 = exports.MAX_INTEGER = void 0;\nvar BN = __webpack_require__(/*! bn.js */ \"./node_modules/bn.js/lib/bn.js\");\n/**\n * The max integer that this VM can handle\n */\nexports.MAX_INTEGER = new BN('ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff', 16);\n/**\n * 2^256\n */\nexports.TWO_POW256 = new BN('10000000000000000000000000000000000000000000000000000000000000000', 16);\n/**\n * Keccak-256 hash of null\n */\nexports.KECCAK256_NULL_S = 'c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470';\n/**\n * Keccak-256 hash of null\n */\nexports.KECCAK256_NULL = Buffer.from(exports.KECCAK256_NULL_S, 'hex');\n/**\n * Keccak-256 of an RLP of an empty array\n */\nexports.KECCAK256_RLP_ARRAY_S = '1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347';\n/**\n * Keccak-256 of an RLP of an empty array\n */\nexports.KECCAK256_RLP_ARRAY = Buffer.from(exports.KECCAK256_RLP_ARRAY_S, 'hex');\n/**\n * Keccak-256 hash of the RLP of null\n */\nexports.KECCAK256_RLP_S = '56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421';\n/**\n * Keccak-256 hash of the RLP of null\n */\nexports.KECCAK256_RLP = Buffer.from(exports.KECCAK256_RLP_S, 'hex');\n//# sourceMappingURL=constants.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZXRoZXJldW1qcy1hYmkvbm9kZV9tb2R1bGVzL2V0aGVyZXVtanMtdXRpbC9kaXN0L2NvbnN0YW50cy5qcy5qcyIsIm1hcHBpbmdzIjoiO0FBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QscUJBQXFCLEdBQUcsdUJBQXVCLEdBQUcsMkJBQTJCLEdBQUcsNkJBQTZCLEdBQUcsc0JBQXNCLEdBQUcsd0JBQXdCLEdBQUcsa0JBQWtCLEdBQUcsbUJBQW1CO0FBQzVNLFNBQVMsbUJBQU8sQ0FBQyw2Q0FBTztBQUN4QjtBQUNBO0FBQ0E7QUFDQSxtQkFBbUI7QUFDbkI7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QjtBQUN4QjtBQUNBO0FBQ0E7QUFDQSxzQkFBc0IsR0FBRyxNQUFNO0FBQy9CO0FBQ0E7QUFDQTtBQUNBLDZCQUE2QjtBQUM3QjtBQUNBO0FBQ0E7QUFDQSwyQkFBMkIsR0FBRyxNQUFNO0FBQ3BDO0FBQ0E7QUFDQTtBQUNBLHVCQUF1QjtBQUN2QjtBQUNBO0FBQ0E7QUFDQSxxQkFBcUIsR0FBRyxNQUFNO0FBQzlCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9ldGhlcmV1bWpzLWFiaS9ub2RlX21vZHVsZXMvZXRoZXJldW1qcy11dGlsL2Rpc3QvY29uc3RhbnRzLmpzP2MxNzUiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLktFQ0NBSzI1Nl9STFAgPSBleHBvcnRzLktFQ0NBSzI1Nl9STFBfUyA9IGV4cG9ydHMuS0VDQ0FLMjU2X1JMUF9BUlJBWSA9IGV4cG9ydHMuS0VDQ0FLMjU2X1JMUF9BUlJBWV9TID0gZXhwb3J0cy5LRUNDQUsyNTZfTlVMTCA9IGV4cG9ydHMuS0VDQ0FLMjU2X05VTExfUyA9IGV4cG9ydHMuVFdPX1BPVzI1NiA9IGV4cG9ydHMuTUFYX0lOVEVHRVIgPSB2b2lkIDA7XG52YXIgQk4gPSByZXF1aXJlKFwiYm4uanNcIik7XG4vKipcbiAqIFRoZSBtYXggaW50ZWdlciB0aGF0IHRoaXMgVk0gY2FuIGhhbmRsZVxuICovXG5leHBvcnRzLk1BWF9JTlRFR0VSID0gbmV3IEJOKCdmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmJywgMTYpO1xuLyoqXG4gKiAyXjI1NlxuICovXG5leHBvcnRzLlRXT19QT1cyNTYgPSBuZXcgQk4oJzEwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwJywgMTYpO1xuLyoqXG4gKiBLZWNjYWstMjU2IGhhc2ggb2YgbnVsbFxuICovXG5leHBvcnRzLktFQ0NBSzI1Nl9OVUxMX1MgPSAnYzVkMjQ2MDE4NmY3MjMzYzkyN2U3ZGIyZGNjNzAzYzBlNTAwYjY1M2NhODIyNzNiN2JmYWQ4MDQ1ZDg1YTQ3MCc7XG4vKipcbiAqIEtlY2Nhay0yNTYgaGFzaCBvZiBudWxsXG4gKi9cbmV4cG9ydHMuS0VDQ0FLMjU2X05VTEwgPSBCdWZmZXIuZnJvbShleHBvcnRzLktFQ0NBSzI1Nl9OVUxMX1MsICdoZXgnKTtcbi8qKlxuICogS2VjY2FrLTI1NiBvZiBhbiBSTFAgb2YgYW4gZW1wdHkgYXJyYXlcbiAqL1xuZXhwb3J0cy5LRUNDQUsyNTZfUkxQX0FSUkFZX1MgPSAnMWRjYzRkZThkZWM3NWQ3YWFiODViNTY3YjZjY2Q0MWFkMzEyNDUxYjk0OGE3NDEzZjBhMTQyZmQ0MGQ0OTM0Nyc7XG4vKipcbiAqIEtlY2Nhay0yNTYgb2YgYW4gUkxQIG9mIGFuIGVtcHR5IGFycmF5XG4gKi9cbmV4cG9ydHMuS0VDQ0FLMjU2X1JMUF9BUlJBWSA9IEJ1ZmZlci5mcm9tKGV4cG9ydHMuS0VDQ0FLMjU2X1JMUF9BUlJBWV9TLCAnaGV4Jyk7XG4vKipcbiAqIEtlY2Nhay0yNTYgaGFzaCBvZiB0aGUgUkxQIG9mIG51bGxcbiAqL1xuZXhwb3J0cy5LRUNDQUsyNTZfUkxQX1MgPSAnNTZlODFmMTcxYmNjNTVhNmZmODM0NWU2OTJjMGY4NmU1YjQ4ZTAxYjk5NmNhZGMwMDE2MjJmYjVlMzYzYjQyMSc7XG4vKipcbiAqIEtlY2Nhay0yNTYgaGFzaCBvZiB0aGUgUkxQIG9mIG51bGxcbiAqL1xuZXhwb3J0cy5LRUNDQUsyNTZfUkxQID0gQnVmZmVyLmZyb20oZXhwb3J0cy5LRUNDQUsyNTZfUkxQX1MsICdoZXgnKTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNvbnN0YW50cy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/ethereumjs-abi/node_modules/ethereumjs-util/dist/constants.js\n");

/***/ }),

/***/ "./node_modules/ethereumjs-abi/node_modules/ethereumjs-util/dist/hash.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/ethereumjs-abi/node_modules/ethereumjs-util/dist/hash.js ***!
  \*******************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"./node_modules/buffer/index.js\")[\"Buffer\"];\n\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.rlphash = exports.ripemd160 = exports.sha256 = exports.keccak256 = exports.keccak = void 0;\nvar _a = __webpack_require__(/*! ethereum-cryptography/keccak */ \"./node_modules/ethereum-cryptography/keccak.js\"), keccak224 = _a.keccak224, keccak384 = _a.keccak384, k256 = _a.keccak256, keccak512 = _a.keccak512;\nvar createHash = __webpack_require__(/*! create-hash */ \"./node_modules/create-hash/browser.js\");\nvar ethjsUtil = __webpack_require__(/*! ethjs-util */ \"./node_modules/ethjs-util/lib/index.js\");\nvar rlp = __webpack_require__(/*! rlp */ \"./node_modules/rlp/dist.browser/index.js\");\nvar bytes_1 = __webpack_require__(/*! ./bytes */ \"./node_modules/ethereumjs-abi/node_modules/ethereumjs-util/dist/bytes.js\");\n/**\n * Creates Keccak hash of the input\n * @param a The input data (Buffer|Array|String|Number) If the string is a 0x-prefixed hex value\n * it's interpreted as hexadecimal, otherwise as utf8.\n * @param bits The Keccak width\n */\nexports.keccak = function (a, bits) {\n    if (bits === void 0) { bits = 256; }\n    if (typeof a === 'string' && !ethjsUtil.isHexString(a)) {\n        a = Buffer.from(a, 'utf8');\n    }\n    else {\n        a = bytes_1.toBuffer(a);\n    }\n    if (!bits)\n        bits = 256;\n    switch (bits) {\n        case 224: {\n            return keccak224(a);\n        }\n        case 256: {\n            return k256(a);\n        }\n        case 384: {\n            return keccak384(a);\n        }\n        case 512: {\n            return keccak512(a);\n        }\n        default: {\n            throw new Error(\"Invald algorithm: keccak\" + bits);\n        }\n    }\n};\n/**\n * Creates Keccak-256 hash of the input, alias for keccak(a, 256).\n * @param a The input data (Buffer|Array|String|Number)\n */\nexports.keccak256 = function (a) {\n    return exports.keccak(a);\n};\n/**\n * Creates SHA256 hash of the input.\n * @param a The input data (Buffer|Array|String|Number)\n */\nexports.sha256 = function (a) {\n    a = bytes_1.toBuffer(a);\n    return createHash('sha256')\n        .update(a)\n        .digest();\n};\n/**\n * Creates RIPEMD160 hash of the input.\n * @param a The input data (Buffer|Array|String|Number)\n * @param padded Whether it should be padded to 256 bits or not\n */\nexports.ripemd160 = function (a, padded) {\n    a = bytes_1.toBuffer(a);\n    var hash = createHash('rmd160')\n        .update(a)\n        .digest();\n    if (padded === true) {\n        return bytes_1.setLength(hash, 32);\n    }\n    else {\n        return hash;\n    }\n};\n/**\n * Creates SHA-3 hash of the RLP encoded version of the input.\n * @param a The input data\n */\nexports.rlphash = function (a) {\n    return exports.keccak(rlp.encode(a));\n};\n//# sourceMappingURL=hash.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZXRoZXJldW1qcy1hYmkvbm9kZV9tb2R1bGVzL2V0aGVyZXVtanMtdXRpbC9kaXN0L2hhc2guanMuanMiLCJtYXBwaW5ncyI6IjtBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGVBQWUsR0FBRyxpQkFBaUIsR0FBRyxjQUFjLEdBQUcsaUJBQWlCLEdBQUcsY0FBYztBQUN6RixTQUFTLG1CQUFPLENBQUMsb0ZBQThCO0FBQy9DLGlCQUFpQixtQkFBTyxDQUFDLDBEQUFhO0FBQ3RDLGdCQUFnQixtQkFBTyxDQUFDLDBEQUFZO0FBQ3BDLFVBQVUsbUJBQU8sQ0FBQyxxREFBSztBQUN2QixjQUFjLG1CQUFPLENBQUMseUZBQVM7QUFDL0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYztBQUNkLDJCQUEyQjtBQUMzQjtBQUNBLFlBQVksTUFBTTtBQUNsQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjO0FBQ2Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZTtBQUNmO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvZXRoZXJldW1qcy1hYmkvbm9kZV9tb2R1bGVzL2V0aGVyZXVtanMtdXRpbC9kaXN0L2hhc2guanM/NmYzNiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMucmxwaGFzaCA9IGV4cG9ydHMucmlwZW1kMTYwID0gZXhwb3J0cy5zaGEyNTYgPSBleHBvcnRzLmtlY2NhazI1NiA9IGV4cG9ydHMua2VjY2FrID0gdm9pZCAwO1xudmFyIF9hID0gcmVxdWlyZSgnZXRoZXJldW0tY3J5cHRvZ3JhcGh5L2tlY2NhaycpLCBrZWNjYWsyMjQgPSBfYS5rZWNjYWsyMjQsIGtlY2NhazM4NCA9IF9hLmtlY2NhazM4NCwgazI1NiA9IF9hLmtlY2NhazI1Niwga2VjY2FrNTEyID0gX2Eua2VjY2FrNTEyO1xudmFyIGNyZWF0ZUhhc2ggPSByZXF1aXJlKCdjcmVhdGUtaGFzaCcpO1xudmFyIGV0aGpzVXRpbCA9IHJlcXVpcmUoJ2V0aGpzLXV0aWwnKTtcbnZhciBybHAgPSByZXF1aXJlKFwicmxwXCIpO1xudmFyIGJ5dGVzXzEgPSByZXF1aXJlKFwiLi9ieXRlc1wiKTtcbi8qKlxuICogQ3JlYXRlcyBLZWNjYWsgaGFzaCBvZiB0aGUgaW5wdXRcbiAqIEBwYXJhbSBhIFRoZSBpbnB1dCBkYXRhIChCdWZmZXJ8QXJyYXl8U3RyaW5nfE51bWJlcikgSWYgdGhlIHN0cmluZyBpcyBhIDB4LXByZWZpeGVkIGhleCB2YWx1ZVxuICogaXQncyBpbnRlcnByZXRlZCBhcyBoZXhhZGVjaW1hbCwgb3RoZXJ3aXNlIGFzIHV0ZjguXG4gKiBAcGFyYW0gYml0cyBUaGUgS2VjY2FrIHdpZHRoXG4gKi9cbmV4cG9ydHMua2VjY2FrID0gZnVuY3Rpb24gKGEsIGJpdHMpIHtcbiAgICBpZiAoYml0cyA9PT0gdm9pZCAwKSB7IGJpdHMgPSAyNTY7IH1cbiAgICBpZiAodHlwZW9mIGEgPT09ICdzdHJpbmcnICYmICFldGhqc1V0aWwuaXNIZXhTdHJpbmcoYSkpIHtcbiAgICAgICAgYSA9IEJ1ZmZlci5mcm9tKGEsICd1dGY4Jyk7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICBhID0gYnl0ZXNfMS50b0J1ZmZlcihhKTtcbiAgICB9XG4gICAgaWYgKCFiaXRzKVxuICAgICAgICBiaXRzID0gMjU2O1xuICAgIHN3aXRjaCAoYml0cykge1xuICAgICAgICBjYXNlIDIyNDoge1xuICAgICAgICAgICAgcmV0dXJuIGtlY2NhazIyNChhKTtcbiAgICAgICAgfVxuICAgICAgICBjYXNlIDI1Njoge1xuICAgICAgICAgICAgcmV0dXJuIGsyNTYoYSk7XG4gICAgICAgIH1cbiAgICAgICAgY2FzZSAzODQ6IHtcbiAgICAgICAgICAgIHJldHVybiBrZWNjYWszODQoYSk7XG4gICAgICAgIH1cbiAgICAgICAgY2FzZSA1MTI6IHtcbiAgICAgICAgICAgIHJldHVybiBrZWNjYWs1MTIoYSk7XG4gICAgICAgIH1cbiAgICAgICAgZGVmYXVsdDoge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiSW52YWxkIGFsZ29yaXRobToga2VjY2FrXCIgKyBiaXRzKTtcbiAgICAgICAgfVxuICAgIH1cbn07XG4vKipcbiAqIENyZWF0ZXMgS2VjY2FrLTI1NiBoYXNoIG9mIHRoZSBpbnB1dCwgYWxpYXMgZm9yIGtlY2NhayhhLCAyNTYpLlxuICogQHBhcmFtIGEgVGhlIGlucHV0IGRhdGEgKEJ1ZmZlcnxBcnJheXxTdHJpbmd8TnVtYmVyKVxuICovXG5leHBvcnRzLmtlY2NhazI1NiA9IGZ1bmN0aW9uIChhKSB7XG4gICAgcmV0dXJuIGV4cG9ydHMua2VjY2FrKGEpO1xufTtcbi8qKlxuICogQ3JlYXRlcyBTSEEyNTYgaGFzaCBvZiB0aGUgaW5wdXQuXG4gKiBAcGFyYW0gYSBUaGUgaW5wdXQgZGF0YSAoQnVmZmVyfEFycmF5fFN0cmluZ3xOdW1iZXIpXG4gKi9cbmV4cG9ydHMuc2hhMjU2ID0gZnVuY3Rpb24gKGEpIHtcbiAgICBhID0gYnl0ZXNfMS50b0J1ZmZlcihhKTtcbiAgICByZXR1cm4gY3JlYXRlSGFzaCgnc2hhMjU2JylcbiAgICAgICAgLnVwZGF0ZShhKVxuICAgICAgICAuZGlnZXN0KCk7XG59O1xuLyoqXG4gKiBDcmVhdGVzIFJJUEVNRDE2MCBoYXNoIG9mIHRoZSBpbnB1dC5cbiAqIEBwYXJhbSBhIFRoZSBpbnB1dCBkYXRhIChCdWZmZXJ8QXJyYXl8U3RyaW5nfE51bWJlcilcbiAqIEBwYXJhbSBwYWRkZWQgV2hldGhlciBpdCBzaG91bGQgYmUgcGFkZGVkIHRvIDI1NiBiaXRzIG9yIG5vdFxuICovXG5leHBvcnRzLnJpcGVtZDE2MCA9IGZ1bmN0aW9uIChhLCBwYWRkZWQpIHtcbiAgICBhID0gYnl0ZXNfMS50b0J1ZmZlcihhKTtcbiAgICB2YXIgaGFzaCA9IGNyZWF0ZUhhc2goJ3JtZDE2MCcpXG4gICAgICAgIC51cGRhdGUoYSlcbiAgICAgICAgLmRpZ2VzdCgpO1xuICAgIGlmIChwYWRkZWQgPT09IHRydWUpIHtcbiAgICAgICAgcmV0dXJuIGJ5dGVzXzEuc2V0TGVuZ3RoKGhhc2gsIDMyKTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIHJldHVybiBoYXNoO1xuICAgIH1cbn07XG4vKipcbiAqIENyZWF0ZXMgU0hBLTMgaGFzaCBvZiB0aGUgUkxQIGVuY29kZWQgdmVyc2lvbiBvZiB0aGUgaW5wdXQuXG4gKiBAcGFyYW0gYSBUaGUgaW5wdXQgZGF0YVxuICovXG5leHBvcnRzLnJscGhhc2ggPSBmdW5jdGlvbiAoYSkge1xuICAgIHJldHVybiBleHBvcnRzLmtlY2NhayhybHAuZW5jb2RlKGEpKTtcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1oYXNoLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/ethereumjs-abi/node_modules/ethereumjs-util/dist/hash.js\n");

/***/ }),

/***/ "./node_modules/ethereumjs-abi/node_modules/ethereumjs-util/dist/index.js":
/*!********************************************************************************!*\
  !*** ./node_modules/ethereumjs-abi/node_modules/ethereumjs-util/dist/index.js ***!
  \********************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.secp256k1 = exports.rlp = exports.BN = void 0;\nvar secp256k1 = __webpack_require__(/*! ./secp256k1v3-adapter */ \"./node_modules/ethereumjs-abi/node_modules/ethereumjs-util/dist/secp256k1v3-adapter.js\");\nexports.secp256k1 = secp256k1;\nvar ethjsUtil = __webpack_require__(/*! ethjs-util */ \"./node_modules/ethjs-util/lib/index.js\");\nvar BN = __webpack_require__(/*! bn.js */ \"./node_modules/bn.js/lib/bn.js\");\nexports.BN = BN;\nvar rlp = __webpack_require__(/*! rlp */ \"./node_modules/rlp/dist.browser/index.js\");\nexports.rlp = rlp;\nObject.assign(exports, ethjsUtil);\n/**\n * Constants\n */\n__exportStar(__webpack_require__(/*! ./constants */ \"./node_modules/ethereumjs-abi/node_modules/ethereumjs-util/dist/constants.js\"), exports);\n/**\n * Public-key cryptography (secp256k1) and addresses\n */\n__exportStar(__webpack_require__(/*! ./account */ \"./node_modules/ethereumjs-abi/node_modules/ethereumjs-util/dist/account.js\"), exports);\n/**\n * Hash functions\n */\n__exportStar(__webpack_require__(/*! ./hash */ \"./node_modules/ethereumjs-abi/node_modules/ethereumjs-util/dist/hash.js\"), exports);\n/**\n * ECDSA signature\n */\n__exportStar(__webpack_require__(/*! ./signature */ \"./node_modules/ethereumjs-abi/node_modules/ethereumjs-util/dist/signature.js\"), exports);\n/**\n * Utilities for manipulating Buffers, byte arrays, etc.\n */\n__exportStar(__webpack_require__(/*! ./bytes */ \"./node_modules/ethereumjs-abi/node_modules/ethereumjs-util/dist/bytes.js\"), exports);\n/**\n * Function for definining properties on an object\n */\n__exportStar(__webpack_require__(/*! ./object */ \"./node_modules/ethereumjs-abi/node_modules/ethereumjs-util/dist/object.js\"), exports);\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZXRoZXJldW1qcy1hYmkvbm9kZV9tb2R1bGVzL2V0aGVyZXVtanMtdXRpbC9kaXN0L2luZGV4LmpzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBLG1DQUFtQyxvQ0FBb0MsZ0JBQWdCO0FBQ3ZGLENBQUM7QUFDRDtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxpQkFBaUIsR0FBRyxXQUFXLEdBQUcsVUFBVTtBQUM1QyxnQkFBZ0IsbUJBQU8sQ0FBQyxxSEFBdUI7QUFDL0MsaUJBQWlCO0FBQ2pCLGdCQUFnQixtQkFBTyxDQUFDLDBEQUFZO0FBQ3BDLFNBQVMsbUJBQU8sQ0FBQyw2Q0FBTztBQUN4QixVQUFVO0FBQ1YsVUFBVSxtQkFBTyxDQUFDLHFEQUFLO0FBQ3ZCLFdBQVc7QUFDWDtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWEsbUJBQU8sQ0FBQyxpR0FBYTtBQUNsQztBQUNBO0FBQ0E7QUFDQSxhQUFhLG1CQUFPLENBQUMsNkZBQVc7QUFDaEM7QUFDQTtBQUNBO0FBQ0EsYUFBYSxtQkFBTyxDQUFDLHVGQUFRO0FBQzdCO0FBQ0E7QUFDQTtBQUNBLGFBQWEsbUJBQU8sQ0FBQyxpR0FBYTtBQUNsQztBQUNBO0FBQ0E7QUFDQSxhQUFhLG1CQUFPLENBQUMseUZBQVM7QUFDOUI7QUFDQTtBQUNBO0FBQ0EsYUFBYSxtQkFBTyxDQUFDLDJGQUFVO0FBQy9CIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9ldGhlcmV1bWpzLWFiaS9ub2RlX21vZHVsZXMvZXRoZXJldW1qcy11dGlsL2Rpc3QvaW5kZXguanM/YjUyYiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2NyZWF0ZUJpbmRpbmcgPSAodGhpcyAmJiB0aGlzLl9fY3JlYXRlQmluZGluZykgfHwgKE9iamVjdC5jcmVhdGUgPyAoZnVuY3Rpb24obywgbSwgaywgazIpIHtcbiAgICBpZiAoazIgPT09IHVuZGVmaW5lZCkgazIgPSBrO1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvLCBrMiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uKCkgeyByZXR1cm4gbVtrXTsgfSB9KTtcbn0pIDogKGZ1bmN0aW9uKG8sIG0sIGssIGsyKSB7XG4gICAgaWYgKGsyID09PSB1bmRlZmluZWQpIGsyID0gaztcbiAgICBvW2syXSA9IG1ba107XG59KSk7XG52YXIgX19leHBvcnRTdGFyID0gKHRoaXMgJiYgdGhpcy5fX2V4cG9ydFN0YXIpIHx8IGZ1bmN0aW9uKG0sIGV4cG9ydHMpIHtcbiAgICBmb3IgKHZhciBwIGluIG0pIGlmIChwICE9PSBcImRlZmF1bHRcIiAmJiAhZXhwb3J0cy5oYXNPd25Qcm9wZXJ0eShwKSkgX19jcmVhdGVCaW5kaW5nKGV4cG9ydHMsIG0sIHApO1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuc2VjcDI1NmsxID0gZXhwb3J0cy5ybHAgPSBleHBvcnRzLkJOID0gdm9pZCAwO1xudmFyIHNlY3AyNTZrMSA9IHJlcXVpcmUoJy4vc2VjcDI1NmsxdjMtYWRhcHRlcicpO1xuZXhwb3J0cy5zZWNwMjU2azEgPSBzZWNwMjU2azE7XG52YXIgZXRoanNVdGlsID0gcmVxdWlyZSgnZXRoanMtdXRpbCcpO1xudmFyIEJOID0gcmVxdWlyZShcImJuLmpzXCIpO1xuZXhwb3J0cy5CTiA9IEJOO1xudmFyIHJscCA9IHJlcXVpcmUoXCJybHBcIik7XG5leHBvcnRzLnJscCA9IHJscDtcbk9iamVjdC5hc3NpZ24oZXhwb3J0cywgZXRoanNVdGlsKTtcbi8qKlxuICogQ29uc3RhbnRzXG4gKi9cbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9jb25zdGFudHNcIiksIGV4cG9ydHMpO1xuLyoqXG4gKiBQdWJsaWMta2V5IGNyeXB0b2dyYXBoeSAoc2VjcDI1NmsxKSBhbmQgYWRkcmVzc2VzXG4gKi9cbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9hY2NvdW50XCIpLCBleHBvcnRzKTtcbi8qKlxuICogSGFzaCBmdW5jdGlvbnNcbiAqL1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL2hhc2hcIiksIGV4cG9ydHMpO1xuLyoqXG4gKiBFQ0RTQSBzaWduYXR1cmVcbiAqL1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL3NpZ25hdHVyZVwiKSwgZXhwb3J0cyk7XG4vKipcbiAqIFV0aWxpdGllcyBmb3IgbWFuaXB1bGF0aW5nIEJ1ZmZlcnMsIGJ5dGUgYXJyYXlzLCBldGMuXG4gKi9cbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9ieXRlc1wiKSwgZXhwb3J0cyk7XG4vKipcbiAqIEZ1bmN0aW9uIGZvciBkZWZpbmluaW5nIHByb3BlcnRpZXMgb24gYW4gb2JqZWN0XG4gKi9cbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9vYmplY3RcIiksIGV4cG9ydHMpO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/ethereumjs-abi/node_modules/ethereumjs-util/dist/index.js\n");

/***/ }),

/***/ "./node_modules/ethereumjs-abi/node_modules/ethereumjs-util/dist/object.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/ethereumjs-abi/node_modules/ethereumjs-util/dist/object.js ***!
  \*********************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"./node_modules/buffer/index.js\")[\"Buffer\"];\n\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.defineProperties = void 0;\nvar assert = __webpack_require__(/*! assert */ \"./node_modules/assert/build/assert.js\");\nvar ethjsUtil = __webpack_require__(/*! ethjs-util */ \"./node_modules/ethjs-util/lib/index.js\");\nvar rlp = __webpack_require__(/*! rlp */ \"./node_modules/rlp/dist.browser/index.js\");\nvar bytes_1 = __webpack_require__(/*! ./bytes */ \"./node_modules/ethereumjs-abi/node_modules/ethereumjs-util/dist/bytes.js\");\n/**\n * Defines properties on a `Object`. It make the assumption that underlying data is binary.\n * @param self the `Object` to define properties on\n * @param fields an array fields to define. Fields can contain:\n * * `name` - the name of the properties\n * * `length` - the number of bytes the field can have\n * * `allowLess` - if the field can be less than the length\n * * `allowEmpty`\n * @param data data to be validated against the definitions\n * @deprecated\n */\nexports.defineProperties = function (self, fields, data) {\n    self.raw = [];\n    self._fields = [];\n    // attach the `toJSON`\n    self.toJSON = function (label) {\n        if (label === void 0) { label = false; }\n        if (label) {\n            var obj_1 = {};\n            self._fields.forEach(function (field) {\n                obj_1[field] = \"0x\" + self[field].toString('hex');\n            });\n            return obj_1;\n        }\n        return bytes_1.baToJSON(self.raw);\n    };\n    self.serialize = function serialize() {\n        return rlp.encode(self.raw);\n    };\n    fields.forEach(function (field, i) {\n        self._fields.push(field.name);\n        function getter() {\n            return self.raw[i];\n        }\n        function setter(v) {\n            v = bytes_1.toBuffer(v);\n            if (v.toString('hex') === '00' && !field.allowZero) {\n                v = Buffer.allocUnsafe(0);\n            }\n            if (field.allowLess && field.length) {\n                v = bytes_1.stripZeros(v);\n                assert(field.length >= v.length, \"The field \" + field.name + \" must not have more \" + field.length + \" bytes\");\n            }\n            else if (!(field.allowZero && v.length === 0) && field.length) {\n                assert(field.length === v.length, \"The field \" + field.name + \" must have byte length of \" + field.length);\n            }\n            self.raw[i] = v;\n        }\n        Object.defineProperty(self, field.name, {\n            enumerable: true,\n            configurable: true,\n            get: getter,\n            set: setter,\n        });\n        if (field.default) {\n            self[field.name] = field.default;\n        }\n        // attach alias\n        if (field.alias) {\n            Object.defineProperty(self, field.alias, {\n                enumerable: false,\n                configurable: true,\n                set: setter,\n                get: getter,\n            });\n        }\n    });\n    // if the constuctor is passed data\n    if (data) {\n        if (typeof data === 'string') {\n            data = Buffer.from(ethjsUtil.stripHexPrefix(data), 'hex');\n        }\n        if (Buffer.isBuffer(data)) {\n            data = rlp.decode(data);\n        }\n        if (Array.isArray(data)) {\n            if (data.length > self._fields.length) {\n                throw new Error('wrong number of fields in data');\n            }\n            // make sure all the items are buffers\n            data.forEach(function (d, i) {\n                self[self._fields[i]] = bytes_1.toBuffer(d);\n            });\n        }\n        else if (typeof data === 'object') {\n            var keys_1 = Object.keys(data);\n            fields.forEach(function (field) {\n                if (keys_1.indexOf(field.name) !== -1)\n                    self[field.name] = data[field.name];\n                if (keys_1.indexOf(field.alias) !== -1)\n                    self[field.alias] = data[field.alias];\n            });\n        }\n        else {\n            throw new Error('invalid data');\n        }\n    }\n};\n//# sourceMappingURL=object.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZXRoZXJldW1qcy1hYmkvbm9kZV9tb2R1bGVzL2V0aGVyZXVtanMtdXRpbC9kaXN0L29iamVjdC5qcy5qcyIsIm1hcHBpbmdzIjoiO0FBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsd0JBQXdCO0FBQ3hCLGFBQWEsbUJBQU8sQ0FBQyxxREFBUTtBQUM3QixnQkFBZ0IsbUJBQU8sQ0FBQywwREFBWTtBQUNwQyxVQUFVLG1CQUFPLENBQUMscURBQUs7QUFDdkIsY0FBYyxtQkFBTyxDQUFDLHlGQUFTO0FBQy9CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0I7QUFDeEI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQ0FBZ0M7QUFDaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLE1BQU07QUFDMUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQixNQUFNO0FBQ3pCO0FBQ0EsWUFBWSxNQUFNO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9ldGhlcmV1bWpzLWFiaS9ub2RlX21vZHVsZXMvZXRoZXJldW1qcy11dGlsL2Rpc3Qvb2JqZWN0LmpzP2M3MzEiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmRlZmluZVByb3BlcnRpZXMgPSB2b2lkIDA7XG52YXIgYXNzZXJ0ID0gcmVxdWlyZSgnYXNzZXJ0Jyk7XG52YXIgZXRoanNVdGlsID0gcmVxdWlyZSgnZXRoanMtdXRpbCcpO1xudmFyIHJscCA9IHJlcXVpcmUoXCJybHBcIik7XG52YXIgYnl0ZXNfMSA9IHJlcXVpcmUoXCIuL2J5dGVzXCIpO1xuLyoqXG4gKiBEZWZpbmVzIHByb3BlcnRpZXMgb24gYSBgT2JqZWN0YC4gSXQgbWFrZSB0aGUgYXNzdW1wdGlvbiB0aGF0IHVuZGVybHlpbmcgZGF0YSBpcyBiaW5hcnkuXG4gKiBAcGFyYW0gc2VsZiB0aGUgYE9iamVjdGAgdG8gZGVmaW5lIHByb3BlcnRpZXMgb25cbiAqIEBwYXJhbSBmaWVsZHMgYW4gYXJyYXkgZmllbGRzIHRvIGRlZmluZS4gRmllbGRzIGNhbiBjb250YWluOlxuICogKiBgbmFtZWAgLSB0aGUgbmFtZSBvZiB0aGUgcHJvcGVydGllc1xuICogKiBgbGVuZ3RoYCAtIHRoZSBudW1iZXIgb2YgYnl0ZXMgdGhlIGZpZWxkIGNhbiBoYXZlXG4gKiAqIGBhbGxvd0xlc3NgIC0gaWYgdGhlIGZpZWxkIGNhbiBiZSBsZXNzIHRoYW4gdGhlIGxlbmd0aFxuICogKiBgYWxsb3dFbXB0eWBcbiAqIEBwYXJhbSBkYXRhIGRhdGEgdG8gYmUgdmFsaWRhdGVkIGFnYWluc3QgdGhlIGRlZmluaXRpb25zXG4gKiBAZGVwcmVjYXRlZFxuICovXG5leHBvcnRzLmRlZmluZVByb3BlcnRpZXMgPSBmdW5jdGlvbiAoc2VsZiwgZmllbGRzLCBkYXRhKSB7XG4gICAgc2VsZi5yYXcgPSBbXTtcbiAgICBzZWxmLl9maWVsZHMgPSBbXTtcbiAgICAvLyBhdHRhY2ggdGhlIGB0b0pTT05gXG4gICAgc2VsZi50b0pTT04gPSBmdW5jdGlvbiAobGFiZWwpIHtcbiAgICAgICAgaWYgKGxhYmVsID09PSB2b2lkIDApIHsgbGFiZWwgPSBmYWxzZTsgfVxuICAgICAgICBpZiAobGFiZWwpIHtcbiAgICAgICAgICAgIHZhciBvYmpfMSA9IHt9O1xuICAgICAgICAgICAgc2VsZi5fZmllbGRzLmZvckVhY2goZnVuY3Rpb24gKGZpZWxkKSB7XG4gICAgICAgICAgICAgICAgb2JqXzFbZmllbGRdID0gXCIweFwiICsgc2VsZltmaWVsZF0udG9TdHJpbmcoJ2hleCcpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICByZXR1cm4gb2JqXzE7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGJ5dGVzXzEuYmFUb0pTT04oc2VsZi5yYXcpO1xuICAgIH07XG4gICAgc2VsZi5zZXJpYWxpemUgPSBmdW5jdGlvbiBzZXJpYWxpemUoKSB7XG4gICAgICAgIHJldHVybiBybHAuZW5jb2RlKHNlbGYucmF3KTtcbiAgICB9O1xuICAgIGZpZWxkcy5mb3JFYWNoKGZ1bmN0aW9uIChmaWVsZCwgaSkge1xuICAgICAgICBzZWxmLl9maWVsZHMucHVzaChmaWVsZC5uYW1lKTtcbiAgICAgICAgZnVuY3Rpb24gZ2V0dGVyKCkge1xuICAgICAgICAgICAgcmV0dXJuIHNlbGYucmF3W2ldO1xuICAgICAgICB9XG4gICAgICAgIGZ1bmN0aW9uIHNldHRlcih2KSB7XG4gICAgICAgICAgICB2ID0gYnl0ZXNfMS50b0J1ZmZlcih2KTtcbiAgICAgICAgICAgIGlmICh2LnRvU3RyaW5nKCdoZXgnKSA9PT0gJzAwJyAmJiAhZmllbGQuYWxsb3daZXJvKSB7XG4gICAgICAgICAgICAgICAgdiA9IEJ1ZmZlci5hbGxvY1Vuc2FmZSgwKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChmaWVsZC5hbGxvd0xlc3MgJiYgZmllbGQubGVuZ3RoKSB7XG4gICAgICAgICAgICAgICAgdiA9IGJ5dGVzXzEuc3RyaXBaZXJvcyh2KTtcbiAgICAgICAgICAgICAgICBhc3NlcnQoZmllbGQubGVuZ3RoID49IHYubGVuZ3RoLCBcIlRoZSBmaWVsZCBcIiArIGZpZWxkLm5hbWUgKyBcIiBtdXN0IG5vdCBoYXZlIG1vcmUgXCIgKyBmaWVsZC5sZW5ndGggKyBcIiBieXRlc1wiKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2UgaWYgKCEoZmllbGQuYWxsb3daZXJvICYmIHYubGVuZ3RoID09PSAwKSAmJiBmaWVsZC5sZW5ndGgpIHtcbiAgICAgICAgICAgICAgICBhc3NlcnQoZmllbGQubGVuZ3RoID09PSB2Lmxlbmd0aCwgXCJUaGUgZmllbGQgXCIgKyBmaWVsZC5uYW1lICsgXCIgbXVzdCBoYXZlIGJ5dGUgbGVuZ3RoIG9mIFwiICsgZmllbGQubGVuZ3RoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHNlbGYucmF3W2ldID0gdjtcbiAgICAgICAgfVxuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoc2VsZiwgZmllbGQubmFtZSwge1xuICAgICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIGdldDogZ2V0dGVyLFxuICAgICAgICAgICAgc2V0OiBzZXR0ZXIsXG4gICAgICAgIH0pO1xuICAgICAgICBpZiAoZmllbGQuZGVmYXVsdCkge1xuICAgICAgICAgICAgc2VsZltmaWVsZC5uYW1lXSA9IGZpZWxkLmRlZmF1bHQ7XG4gICAgICAgIH1cbiAgICAgICAgLy8gYXR0YWNoIGFsaWFzXG4gICAgICAgIGlmIChmaWVsZC5hbGlhcykge1xuICAgICAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHNlbGYsIGZpZWxkLmFsaWFzLCB7XG4gICAgICAgICAgICAgICAgZW51bWVyYWJsZTogZmFsc2UsXG4gICAgICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgICAgIHNldDogc2V0dGVyLFxuICAgICAgICAgICAgICAgIGdldDogZ2V0dGVyLFxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICB9KTtcbiAgICAvLyBpZiB0aGUgY29uc3R1Y3RvciBpcyBwYXNzZWQgZGF0YVxuICAgIGlmIChkYXRhKSB7XG4gICAgICAgIGlmICh0eXBlb2YgZGF0YSA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgICAgIGRhdGEgPSBCdWZmZXIuZnJvbShldGhqc1V0aWwuc3RyaXBIZXhQcmVmaXgoZGF0YSksICdoZXgnKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoQnVmZmVyLmlzQnVmZmVyKGRhdGEpKSB7XG4gICAgICAgICAgICBkYXRhID0gcmxwLmRlY29kZShkYXRhKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoQXJyYXkuaXNBcnJheShkYXRhKSkge1xuICAgICAgICAgICAgaWYgKGRhdGEubGVuZ3RoID4gc2VsZi5fZmllbGRzLmxlbmd0aCkge1xuICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignd3JvbmcgbnVtYmVyIG9mIGZpZWxkcyBpbiBkYXRhJyk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAvLyBtYWtlIHN1cmUgYWxsIHRoZSBpdGVtcyBhcmUgYnVmZmVyc1xuICAgICAgICAgICAgZGF0YS5mb3JFYWNoKGZ1bmN0aW9uIChkLCBpKSB7XG4gICAgICAgICAgICAgICAgc2VsZltzZWxmLl9maWVsZHNbaV1dID0gYnl0ZXNfMS50b0J1ZmZlcihkKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKHR5cGVvZiBkYXRhID09PSAnb2JqZWN0Jykge1xuICAgICAgICAgICAgdmFyIGtleXNfMSA9IE9iamVjdC5rZXlzKGRhdGEpO1xuICAgICAgICAgICAgZmllbGRzLmZvckVhY2goZnVuY3Rpb24gKGZpZWxkKSB7XG4gICAgICAgICAgICAgICAgaWYgKGtleXNfMS5pbmRleE9mKGZpZWxkLm5hbWUpICE9PSAtMSlcbiAgICAgICAgICAgICAgICAgICAgc2VsZltmaWVsZC5uYW1lXSA9IGRhdGFbZmllbGQubmFtZV07XG4gICAgICAgICAgICAgICAgaWYgKGtleXNfMS5pbmRleE9mKGZpZWxkLmFsaWFzKSAhPT0gLTEpXG4gICAgICAgICAgICAgICAgICAgIHNlbGZbZmllbGQuYWxpYXNdID0gZGF0YVtmaWVsZC5hbGlhc107XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignaW52YWxpZCBkYXRhJyk7XG4gICAgICAgIH1cbiAgICB9XG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9b2JqZWN0LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/ethereumjs-abi/node_modules/ethereumjs-util/dist/object.js\n");

/***/ }),

/***/ "./node_modules/ethereumjs-abi/node_modules/ethereumjs-util/dist/secp256k1v3-adapter.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/ethereumjs-abi/node_modules/ethereumjs-util/dist/secp256k1v3-adapter.js ***!
  \**********************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"./node_modules/buffer/index.js\")[\"Buffer\"];\n\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ecdhUnsafe = exports.ecdh = exports.recover = exports.verify = exports.sign = exports.signatureImportLax = exports.signatureImport = exports.signatureExport = exports.signatureNormalize = exports.publicKeyCombine = exports.publicKeyTweakMul = exports.publicKeyTweakAdd = exports.publicKeyVerify = exports.publicKeyConvert = exports.publicKeyCreate = exports.privateKeyTweakMul = exports.privateKeyTweakAdd = exports.privateKeyModInverse = exports.privateKeyNegate = exports.privateKeyImport = exports.privateKeyExport = exports.privateKeyVerify = void 0;\nvar secp256k1 = __webpack_require__(/*! ethereum-cryptography/secp256k1 */ \"./node_modules/ethereum-cryptography/secp256k1.js\");\nvar secp256k1v3 = __webpack_require__(/*! ./secp256k1v3-lib/index */ \"./node_modules/ethereumjs-abi/node_modules/ethereumjs-util/dist/secp256k1v3-lib/index.js\");\nvar der = __webpack_require__(/*! ./secp256k1v3-lib/der */ \"./node_modules/ethereumjs-abi/node_modules/ethereumjs-util/dist/secp256k1v3-lib/der.js\");\n/**\n * Verify an ECDSA privateKey\n * @method privateKeyVerify\n * @param {Buffer} privateKey\n * @return {boolean}\n */\nexports.privateKeyVerify = function (privateKey) {\n    // secp256k1 v4 version throws when privateKey length is not 32\n    if (privateKey.length !== 32) {\n        return false;\n    }\n    return secp256k1.privateKeyVerify(Uint8Array.from(privateKey));\n};\n/**\n * Export a privateKey in DER format\n * @method privateKeyExport\n * @param {Buffer} privateKey\n * @param {boolean} compressed\n * @return {boolean}\n */\nexports.privateKeyExport = function (privateKey, compressed) {\n    // secp256k1 v4 version throws when privateKey length is not 32\n    if (privateKey.length !== 32) {\n        throw new RangeError('private key length is invalid');\n    }\n    var publicKey = secp256k1v3.privateKeyExport(privateKey, compressed);\n    return der.privateKeyExport(privateKey, publicKey, compressed);\n};\n/**\n * Import a privateKey in DER format\n * @method privateKeyImport\n * @param {Buffer} privateKey\n * @return {Buffer}\n */\nexports.privateKeyImport = function (privateKey) {\n    // privateKeyImport method is not part of secp256k1 v4 package\n    // this implementation is based on v3\n    privateKey = der.privateKeyImport(privateKey);\n    if (privateKey !== null && privateKey.length === 32 && exports.privateKeyVerify(privateKey)) {\n        return privateKey;\n    }\n    throw new Error(\"couldn't import from DER format\");\n};\n/**\n * Negate a privateKey by subtracting it from the order of the curve's base point\n * @method privateKeyNegate\n * @param {Buffer} privateKey\n * @return {Buffer}\n */\nexports.privateKeyNegate = function (privateKey) {\n    return Buffer.from(secp256k1.privateKeyNegate(Uint8Array.from(privateKey)));\n};\n/**\n * Compute the inverse of a privateKey (modulo the order of the curve's base point).\n * @method privateKeyModInverse\n * @param {Buffer} privateKey\n * @return {Buffer}\n */\nexports.privateKeyModInverse = function (privateKey) {\n    if (privateKey.length !== 32) {\n        throw new Error('private key length is invalid');\n    }\n    return Buffer.from(secp256k1v3.privateKeyModInverse(Uint8Array.from(privateKey)));\n};\n/**\n * Tweak a privateKey by adding tweak to it.\n * @method privateKeyTweakAdd\n * @param {Buffer} privateKey\n * @param {Buffer} tweak\n * @return {Buffer}\n */\nexports.privateKeyTweakAdd = function (privateKey, tweak) {\n    return Buffer.from(secp256k1.privateKeyTweakAdd(Uint8Array.from(privateKey), tweak));\n};\n/**\n * Tweak a privateKey by multiplying it by a tweak.\n * @method privateKeyTweakMul\n * @param {Buffer} privateKey\n * @param {Buffer} tweak\n * @return {Buffer}\n */\nexports.privateKeyTweakMul = function (privateKey, tweak) {\n    return Buffer.from(secp256k1.privateKeyTweakMul(Uint8Array.from(privateKey), Uint8Array.from(tweak)));\n};\n/**\n * Compute the public key for a privateKey.\n * @method publicKeyCreate\n * @param {Buffer} privateKey\n * @param {boolean} compressed\n * @return {Buffer}\n */\nexports.publicKeyCreate = function (privateKey, compressed) {\n    return Buffer.from(secp256k1.publicKeyCreate(Uint8Array.from(privateKey), compressed));\n};\n/**\n * Convert a publicKey to compressed or uncompressed form.\n * @method publicKeyConvert\n * @param {Buffer} publicKey\n * @param {boolean} compressed\n * @return {Buffer}\n */\nexports.publicKeyConvert = function (publicKey, compressed) {\n    return Buffer.from(secp256k1.publicKeyConvert(Uint8Array.from(publicKey), compressed));\n};\n/**\n * Verify an ECDSA publicKey.\n * @method publicKeyVerify\n * @param {Buffer} publicKey\n * @return {boolean}\n */\nexports.publicKeyVerify = function (publicKey) {\n    // secp256k1 v4 version throws when publicKey length is not 33 or 65\n    if (publicKey.length !== 33 && publicKey.length !== 65) {\n        return false;\n    }\n    return secp256k1.publicKeyVerify(Uint8Array.from(publicKey));\n};\n/**\n * Tweak a publicKey by adding tweak times the generator to it.\n * @method publicKeyTweakAdd\n * @param {Buffer} publicKey\n * @param {Buffer} tweak\n * @param {boolean} compressed\n * @return {Buffer}\n */\nexports.publicKeyTweakAdd = function (publicKey, tweak, compressed) {\n    return Buffer.from(secp256k1.publicKeyTweakAdd(Uint8Array.from(publicKey), Uint8Array.from(tweak), compressed));\n};\n/**\n * Tweak a publicKey by multiplying it by a tweak value\n * @method publicKeyTweakMul\n * @param {Buffer} publicKey\n * @param {Buffer} tweak\n * @param {boolean} compressed\n * @return {Buffer}\n */\nexports.publicKeyTweakMul = function (publicKey, tweak, compressed) {\n    return Buffer.from(secp256k1.publicKeyTweakMul(Uint8Array.from(publicKey), Uint8Array.from(tweak), compressed));\n};\n/**\n * Add a given publicKeys together.\n * @method publicKeyCombine\n * @param {Array<Buffer>} publicKeys\n * @param {boolean} compressed\n * @return {Buffer}\n */\nexports.publicKeyCombine = function (publicKeys, compressed) {\n    var keys = [];\n    publicKeys.forEach(function (publicKey) {\n        keys.push(Uint8Array.from(publicKey));\n    });\n    return Buffer.from(secp256k1.publicKeyCombine(keys, compressed));\n};\n/**\n * Convert a signature to a normalized lower-S form.\n * @method signatureNormalize\n * @param {Buffer} signature\n * @return {Buffer}\n */\nexports.signatureNormalize = function (signature) {\n    return Buffer.from(secp256k1.signatureNormalize(Uint8Array.from(signature)));\n};\n/**\n * Serialize an ECDSA signature in DER format.\n * @method signatureExport\n * @param {Buffer} signature\n * @return {Buffer}\n */\nexports.signatureExport = function (signature) {\n    return Buffer.from(secp256k1.signatureExport(Uint8Array.from(signature)));\n};\n/**\n * Parse a DER ECDSA signature (follow by [BIP66](https://github.com/bitcoin/bips/blob/master/bip-0066.mediawiki)).\n * @method signatureImport\n * @param {Buffer} signature\n * @return {Buffer}\n */\nexports.signatureImport = function (signature) {\n    return Buffer.from(secp256k1.signatureImport(Uint8Array.from(signature)));\n};\n/**\n * Parse a DER ECDSA signature (not follow by [BIP66](https://github.com/bitcoin/bips/blob/master/bip-0066.mediawiki)).\n * @method signatureImportLax\n * @param {Buffer} signature\n * @return {Buffer}\n */\nexports.signatureImportLax = function (signature) {\n    // signatureImportLax method is not part of secp256k1 v4 package\n    // this implementation is based on v3\n    // ensure that signature is greater than 0\n    if (signature.length === 0) {\n        throw new RangeError('signature length is invalid');\n    }\n    var sigObj = der.signatureImportLax(signature);\n    if (sigObj === null) {\n        throw new Error(\"couldn't parse DER signature\");\n    }\n    return secp256k1v3.signatureImport(sigObj);\n};\n/**\n * Create an ECDSA signature. Always return low-S signature.\n * @method sign\n * @param {Buffer} message\n * @param {Buffer} privateKey\n * @param {Object} options\n * @return {Buffer}\n */\nexports.sign = function (message, privateKey, options) {\n    if (options === null) {\n        throw new TypeError('options should be an Object');\n    }\n    var signOptions = undefined;\n    if (options) {\n        signOptions = {};\n        if (options.data === null) {\n            // validate option.data length\n            throw new TypeError('options.data should be a Buffer');\n        }\n        if (options.data) {\n            if (options.data.length != 32) {\n                throw new RangeError('options.data length is invalid');\n            }\n            signOptions.data = new Uint8Array(options.data);\n        }\n        if (options.noncefn === null) {\n            throw new TypeError('options.noncefn should be a Function');\n        }\n        if (options.noncefn) {\n            // convert option.noncefn function signature\n            signOptions.noncefn = function (message, privateKey, algo, data, attempt) {\n                var bufferAlgo = algo != null ? Buffer.from(algo) : null;\n                var bufferData = data != null ? Buffer.from(data) : null;\n                var buffer = Buffer.from('');\n                if (options.noncefn) {\n                    buffer = options.noncefn(Buffer.from(message), Buffer.from(privateKey), bufferAlgo, bufferData, attempt);\n                }\n                return new Uint8Array(buffer);\n            };\n        }\n    }\n    var sig = secp256k1.ecdsaSign(Uint8Array.from(message), Uint8Array.from(privateKey), signOptions);\n    return {\n        signature: Buffer.from(sig.signature),\n        recovery: sig.recid,\n    };\n};\n/**\n * Verify an ECDSA signature.\n * @method verify\n * @param {Buffer} message\n * @param {Buffer} signature\n * @param {Buffer} publicKey\n * @return {boolean}\n */\nexports.verify = function (message, signature, publicKey) {\n    return secp256k1.ecdsaVerify(Uint8Array.from(signature), Uint8Array.from(message), publicKey);\n};\n/**\n * Recover an ECDSA public key from a signature.\n * @method recover\n * @param {Buffer} message\n * @param {Buffer} signature\n * @param {Number} recid\n * @param {boolean} compressed\n * @return {Buffer}\n */\nexports.recover = function (message, signature, recid, compressed) {\n    return Buffer.from(secp256k1.ecdsaRecover(Uint8Array.from(signature), recid, Uint8Array.from(message), compressed));\n};\n/**\n * Compute an EC Diffie-Hellman secret and applied sha256 to compressed public key.\n * @method ecdh\n * @param {Buffer} publicKey\n * @param {Buffer} privateKey\n * @return {Buffer}\n */\nexports.ecdh = function (publicKey, privateKey) {\n    // note: secp256k1 v3 doesn't allow optional parameter\n    return Buffer.from(secp256k1.ecdh(Uint8Array.from(publicKey), Uint8Array.from(privateKey), {}));\n};\nexports.ecdhUnsafe = function (publicKey, privateKey, compressed) {\n    // ecdhUnsafe method is not part of secp256k1 v4 package\n    // this implementation is based on v3\n    // ensure valid publicKey length\n    if (publicKey.length !== 33 && publicKey.length !== 65) {\n        throw new RangeError('public key length is invalid');\n    }\n    // ensure valid privateKey length\n    if (privateKey.length !== 32) {\n        throw new RangeError('private key length is invalid');\n    }\n    return Buffer.from(secp256k1v3.ecdhUnsafe(Uint8Array.from(publicKey), Uint8Array.from(privateKey), compressed));\n};\n//# sourceMappingURL=secp256k1v3-adapter.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/ethereumjs-abi/node_modules/ethereumjs-util/dist/secp256k1v3-adapter.js\n");

/***/ }),

/***/ "./node_modules/ethereumjs-abi/node_modules/ethereumjs-util/dist/secp256k1v3-lib/der.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/ethereumjs-abi/node_modules/ethereumjs-util/dist/secp256k1v3-lib/der.js ***!
  \**********************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"./node_modules/buffer/index.js\")[\"Buffer\"];\n\n// This file is imported from secp256k1 v3\n// https://github.com/cryptocoinjs/secp256k1-node/blob/master/LICENSE\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar EC_PRIVKEY_EXPORT_DER_COMPRESSED = Buffer.from([\n    // begin\n    0x30,\n    0x81,\n    0xd3,\n    0x02,\n    0x01,\n    0x01,\n    0x04,\n    0x20,\n    // private key\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    // middle\n    0xa0,\n    0x81,\n    0x85,\n    0x30,\n    0x81,\n    0x82,\n    0x02,\n    0x01,\n    0x01,\n    0x30,\n    0x2c,\n    0x06,\n    0x07,\n    0x2a,\n    0x86,\n    0x48,\n    0xce,\n    0x3d,\n    0x01,\n    0x01,\n    0x02,\n    0x21,\n    0x00,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xfe,\n    0xff,\n    0xff,\n    0xfc,\n    0x2f,\n    0x30,\n    0x06,\n    0x04,\n    0x01,\n    0x00,\n    0x04,\n    0x01,\n    0x07,\n    0x04,\n    0x21,\n    0x02,\n    0x79,\n    0xbe,\n    0x66,\n    0x7e,\n    0xf9,\n    0xdc,\n    0xbb,\n    0xac,\n    0x55,\n    0xa0,\n    0x62,\n    0x95,\n    0xce,\n    0x87,\n    0x0b,\n    0x07,\n    0x02,\n    0x9b,\n    0xfc,\n    0xdb,\n    0x2d,\n    0xce,\n    0x28,\n    0xd9,\n    0x59,\n    0xf2,\n    0x81,\n    0x5b,\n    0x16,\n    0xf8,\n    0x17,\n    0x98,\n    0x02,\n    0x21,\n    0x00,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xfe,\n    0xba,\n    0xae,\n    0xdc,\n    0xe6,\n    0xaf,\n    0x48,\n    0xa0,\n    0x3b,\n    0xbf,\n    0xd2,\n    0x5e,\n    0x8c,\n    0xd0,\n    0x36,\n    0x41,\n    0x41,\n    0x02,\n    0x01,\n    0x01,\n    0xa1,\n    0x24,\n    0x03,\n    0x22,\n    0x00,\n    // public key\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n]);\nvar EC_PRIVKEY_EXPORT_DER_UNCOMPRESSED = Buffer.from([\n    // begin\n    0x30,\n    0x82,\n    0x01,\n    0x13,\n    0x02,\n    0x01,\n    0x01,\n    0x04,\n    0x20,\n    // private key\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    // middle\n    0xa0,\n    0x81,\n    0xa5,\n    0x30,\n    0x81,\n    0xa2,\n    0x02,\n    0x01,\n    0x01,\n    0x30,\n    0x2c,\n    0x06,\n    0x07,\n    0x2a,\n    0x86,\n    0x48,\n    0xce,\n    0x3d,\n    0x01,\n    0x01,\n    0x02,\n    0x21,\n    0x00,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xfe,\n    0xff,\n    0xff,\n    0xfc,\n    0x2f,\n    0x30,\n    0x06,\n    0x04,\n    0x01,\n    0x00,\n    0x04,\n    0x01,\n    0x07,\n    0x04,\n    0x41,\n    0x04,\n    0x79,\n    0xbe,\n    0x66,\n    0x7e,\n    0xf9,\n    0xdc,\n    0xbb,\n    0xac,\n    0x55,\n    0xa0,\n    0x62,\n    0x95,\n    0xce,\n    0x87,\n    0x0b,\n    0x07,\n    0x02,\n    0x9b,\n    0xfc,\n    0xdb,\n    0x2d,\n    0xce,\n    0x28,\n    0xd9,\n    0x59,\n    0xf2,\n    0x81,\n    0x5b,\n    0x16,\n    0xf8,\n    0x17,\n    0x98,\n    0x48,\n    0x3a,\n    0xda,\n    0x77,\n    0x26,\n    0xa3,\n    0xc4,\n    0x65,\n    0x5d,\n    0xa4,\n    0xfb,\n    0xfc,\n    0x0e,\n    0x11,\n    0x08,\n    0xa8,\n    0xfd,\n    0x17,\n    0xb4,\n    0x48,\n    0xa6,\n    0x85,\n    0x54,\n    0x19,\n    0x9c,\n    0x47,\n    0xd0,\n    0x8f,\n    0xfb,\n    0x10,\n    0xd4,\n    0xb8,\n    0x02,\n    0x21,\n    0x00,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xfe,\n    0xba,\n    0xae,\n    0xdc,\n    0xe6,\n    0xaf,\n    0x48,\n    0xa0,\n    0x3b,\n    0xbf,\n    0xd2,\n    0x5e,\n    0x8c,\n    0xd0,\n    0x36,\n    0x41,\n    0x41,\n    0x02,\n    0x01,\n    0x01,\n    0xa1,\n    0x44,\n    0x03,\n    0x42,\n    0x00,\n    // public key\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n]);\nexports.privateKeyExport = function (privateKey, publicKey, compressed) {\n    if (compressed === void 0) { compressed = true; }\n    var result = Buffer.from(compressed ? EC_PRIVKEY_EXPORT_DER_COMPRESSED : EC_PRIVKEY_EXPORT_DER_UNCOMPRESSED);\n    privateKey.copy(result, compressed ? 8 : 9);\n    publicKey.copy(result, compressed ? 181 : 214);\n    return result;\n};\nexports.privateKeyImport = function (privateKey) {\n    var length = privateKey.length;\n    // sequence header\n    var index = 0;\n    if (length < index + 1 || privateKey[index] !== 0x30)\n        return null;\n    index += 1;\n    // sequence length constructor\n    if (length < index + 1 || !(privateKey[index] & 0x80))\n        return null;\n    var lenb = privateKey[index] & 0x7f;\n    index += 1;\n    if (lenb < 1 || lenb > 2)\n        return null;\n    if (length < index + lenb)\n        return null;\n    // sequence length\n    var len = privateKey[index + lenb - 1] | (lenb > 1 ? privateKey[index + lenb - 2] << 8 : 0);\n    index += lenb;\n    if (length < index + len)\n        return null;\n    // sequence element 0: version number (=1)\n    if (length < index + 3 ||\n        privateKey[index] !== 0x02 ||\n        privateKey[index + 1] !== 0x01 ||\n        privateKey[index + 2] !== 0x01) {\n        return null;\n    }\n    index += 3;\n    // sequence element 1: octet string, up to 32 bytes\n    if (length < index + 2 ||\n        privateKey[index] !== 0x04 ||\n        privateKey[index + 1] > 0x20 ||\n        length < index + 2 + privateKey[index + 1]) {\n        return null;\n    }\n    return privateKey.slice(index + 2, index + 2 + privateKey[index + 1]);\n};\nexports.signatureImportLax = function (signature) {\n    var r = Buffer.alloc(32, 0);\n    var s = Buffer.alloc(32, 0);\n    var length = signature.length;\n    var index = 0;\n    // sequence tag byte\n    if (signature[index++] !== 0x30) {\n        return null;\n    }\n    // sequence length byte\n    var lenbyte = signature[index++];\n    if (lenbyte & 0x80) {\n        index += lenbyte - 0x80;\n        if (index > length) {\n            return null;\n        }\n    }\n    // sequence tag byte for r\n    if (signature[index++] !== 0x02) {\n        return null;\n    }\n    // length for r\n    var rlen = signature[index++];\n    if (rlen & 0x80) {\n        lenbyte = rlen - 0x80;\n        if (index + lenbyte > length) {\n            return null;\n        }\n        for (; lenbyte > 0 && signature[index] === 0x00; index += 1, lenbyte -= 1)\n            ;\n        for (rlen = 0; lenbyte > 0; index += 1, lenbyte -= 1)\n            rlen = (rlen << 8) + signature[index];\n    }\n    if (rlen > length - index) {\n        return null;\n    }\n    var rindex = index;\n    index += rlen;\n    // sequence tag byte for s\n    if (signature[index++] !== 0x02) {\n        return null;\n    }\n    // length for s\n    var slen = signature[index++];\n    if (slen & 0x80) {\n        lenbyte = slen - 0x80;\n        if (index + lenbyte > length) {\n            return null;\n        }\n        for (; lenbyte > 0 && signature[index] === 0x00; index += 1, lenbyte -= 1)\n            ;\n        for (slen = 0; lenbyte > 0; index += 1, lenbyte -= 1)\n            slen = (slen << 8) + signature[index];\n    }\n    if (slen > length - index) {\n        return null;\n    }\n    var sindex = index;\n    index += slen;\n    // ignore leading zeros in r\n    for (; rlen > 0 && signature[rindex] === 0x00; rlen -= 1, rindex += 1)\n        ;\n    // copy r value\n    if (rlen > 32) {\n        return null;\n    }\n    var rvalue = signature.slice(rindex, rindex + rlen);\n    rvalue.copy(r, 32 - rvalue.length);\n    // ignore leading zeros in s\n    for (; slen > 0 && signature[sindex] === 0x00; slen -= 1, sindex += 1)\n        ;\n    // copy s value\n    if (slen > 32) {\n        return null;\n    }\n    var svalue = signature.slice(sindex, sindex + slen);\n    svalue.copy(s, 32 - svalue.length);\n    return { r: r, s: s };\n};\n//# sourceMappingURL=der.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/ethereumjs-abi/node_modules/ethereumjs-util/dist/secp256k1v3-lib/der.js\n");

/***/ }),

/***/ "./node_modules/ethereumjs-abi/node_modules/ethereumjs-util/dist/secp256k1v3-lib/index.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/ethereumjs-abi/node_modules/ethereumjs-util/dist/secp256k1v3-lib/index.js ***!
  \************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"./node_modules/buffer/index.js\")[\"Buffer\"];\n\n// This file is imported from secp256k1 v3\n// https://github.com/cryptocoinjs/secp256k1-node/blob/master/LICENSE\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar BN = __webpack_require__(/*! bn.js */ \"./node_modules/bn.js/lib/bn.js\");\nvar EC = (__webpack_require__(/*! elliptic */ \"./node_modules/elliptic/lib/elliptic.js\").ec);\nvar ec = new EC('secp256k1');\nvar ecparams = ec.curve;\nexports.privateKeyExport = function (privateKey, compressed) {\n    if (compressed === void 0) { compressed = true; }\n    var d = new BN(privateKey);\n    if (d.ucmp(ecparams.n) >= 0) {\n        throw new Error(\"couldn't export to DER format\");\n    }\n    var point = ec.g.mul(d);\n    return toPublicKey(point.getX(), point.getY(), compressed);\n};\nexports.privateKeyModInverse = function (privateKey) {\n    var bn = new BN(privateKey);\n    if (bn.ucmp(ecparams.n) >= 0 || bn.isZero()) {\n        throw new Error('private key range is invalid');\n    }\n    return bn.invm(ecparams.n).toArrayLike(Buffer, 'be', 32);\n};\nexports.signatureImport = function (sigObj) {\n    var r = new BN(sigObj.r);\n    if (r.ucmp(ecparams.n) >= 0) {\n        r = new BN(0);\n    }\n    var s = new BN(sigObj.s);\n    if (s.ucmp(ecparams.n) >= 0) {\n        s = new BN(0);\n    }\n    return Buffer.concat([r.toArrayLike(Buffer, 'be', 32), s.toArrayLike(Buffer, 'be', 32)]);\n};\nexports.ecdhUnsafe = function (publicKey, privateKey, compressed) {\n    if (compressed === void 0) { compressed = true; }\n    var point = ec.keyFromPublic(publicKey);\n    var scalar = new BN(privateKey);\n    if (scalar.ucmp(ecparams.n) >= 0 || scalar.isZero()) {\n        throw new Error('scalar was invalid (zero or overflow)');\n    }\n    var shared = point.pub.mul(scalar);\n    return toPublicKey(shared.getX(), shared.getY(), compressed);\n};\nvar toPublicKey = function (x, y, compressed) {\n    var publicKey;\n    if (compressed) {\n        publicKey = Buffer.alloc(33);\n        publicKey[0] = y.isOdd() ? 0x03 : 0x02;\n        x.toArrayLike(Buffer, 'be', 32).copy(publicKey, 1);\n    }\n    else {\n        publicKey = Buffer.alloc(65);\n        publicKey[0] = 0x04;\n        x.toArrayLike(Buffer, 'be', 32).copy(publicKey, 1);\n        y.toArrayLike(Buffer, 'be', 32).copy(publicKey, 33);\n    }\n    return publicKey;\n};\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZXRoZXJldW1qcy1hYmkvbm9kZV9tb2R1bGVzL2V0aGVyZXVtanMtdXRpbC9kaXN0L3NlY3AyNTZrMXYzLWxpYi9pbmRleC5qcy5qcyIsIm1hcHBpbmdzIjoiO0FBQWE7QUFDYjtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELFNBQVMsbUJBQU8sQ0FBQyw2Q0FBTztBQUN4QixTQUFTLG1GQUFzQjtBQUMvQjtBQUNBO0FBQ0Esd0JBQXdCO0FBQ3hCLGlDQUFpQztBQUNqQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRCQUE0QjtBQUM1QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJDQUEyQyxNQUFNO0FBQ2pEO0FBQ0EsdUJBQXVCO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLE1BQU0sdUJBQXVCLE1BQU0sMkJBQTJCLE1BQU07QUFDL0U7QUFDQSxrQkFBa0I7QUFDbEIsaUNBQWlDO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsTUFBTTtBQUMxQjtBQUNBLHNCQUFzQixNQUFNO0FBQzVCO0FBQ0E7QUFDQSxvQkFBb0IsTUFBTTtBQUMxQjtBQUNBLHNCQUFzQixNQUFNO0FBQzVCLHNCQUFzQixNQUFNO0FBQzVCO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9ldGhlcmV1bWpzLWFiaS9ub2RlX21vZHVsZXMvZXRoZXJldW1qcy11dGlsL2Rpc3Qvc2VjcDI1NmsxdjMtbGliL2luZGV4LmpzPzAyOTIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vLyBUaGlzIGZpbGUgaXMgaW1wb3J0ZWQgZnJvbSBzZWNwMjU2azEgdjNcbi8vIGh0dHBzOi8vZ2l0aHViLmNvbS9jcnlwdG9jb2luanMvc2VjcDI1NmsxLW5vZGUvYmxvYi9tYXN0ZXIvTElDRU5TRVxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xudmFyIEJOID0gcmVxdWlyZShcImJuLmpzXCIpO1xudmFyIEVDID0gcmVxdWlyZSgnZWxsaXB0aWMnKS5lYztcbnZhciBlYyA9IG5ldyBFQygnc2VjcDI1NmsxJyk7XG52YXIgZWNwYXJhbXMgPSBlYy5jdXJ2ZTtcbmV4cG9ydHMucHJpdmF0ZUtleUV4cG9ydCA9IGZ1bmN0aW9uIChwcml2YXRlS2V5LCBjb21wcmVzc2VkKSB7XG4gICAgaWYgKGNvbXByZXNzZWQgPT09IHZvaWQgMCkgeyBjb21wcmVzc2VkID0gdHJ1ZTsgfVxuICAgIHZhciBkID0gbmV3IEJOKHByaXZhdGVLZXkpO1xuICAgIGlmIChkLnVjbXAoZWNwYXJhbXMubikgPj0gMCkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJjb3VsZG4ndCBleHBvcnQgdG8gREVSIGZvcm1hdFwiKTtcbiAgICB9XG4gICAgdmFyIHBvaW50ID0gZWMuZy5tdWwoZCk7XG4gICAgcmV0dXJuIHRvUHVibGljS2V5KHBvaW50LmdldFgoKSwgcG9pbnQuZ2V0WSgpLCBjb21wcmVzc2VkKTtcbn07XG5leHBvcnRzLnByaXZhdGVLZXlNb2RJbnZlcnNlID0gZnVuY3Rpb24gKHByaXZhdGVLZXkpIHtcbiAgICB2YXIgYm4gPSBuZXcgQk4ocHJpdmF0ZUtleSk7XG4gICAgaWYgKGJuLnVjbXAoZWNwYXJhbXMubikgPj0gMCB8fCBibi5pc1plcm8oKSkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ3ByaXZhdGUga2V5IHJhbmdlIGlzIGludmFsaWQnKTtcbiAgICB9XG4gICAgcmV0dXJuIGJuLmludm0oZWNwYXJhbXMubikudG9BcnJheUxpa2UoQnVmZmVyLCAnYmUnLCAzMik7XG59O1xuZXhwb3J0cy5zaWduYXR1cmVJbXBvcnQgPSBmdW5jdGlvbiAoc2lnT2JqKSB7XG4gICAgdmFyIHIgPSBuZXcgQk4oc2lnT2JqLnIpO1xuICAgIGlmIChyLnVjbXAoZWNwYXJhbXMubikgPj0gMCkge1xuICAgICAgICByID0gbmV3IEJOKDApO1xuICAgIH1cbiAgICB2YXIgcyA9IG5ldyBCTihzaWdPYmoucyk7XG4gICAgaWYgKHMudWNtcChlY3BhcmFtcy5uKSA+PSAwKSB7XG4gICAgICAgIHMgPSBuZXcgQk4oMCk7XG4gICAgfVxuICAgIHJldHVybiBCdWZmZXIuY29uY2F0KFtyLnRvQXJyYXlMaWtlKEJ1ZmZlciwgJ2JlJywgMzIpLCBzLnRvQXJyYXlMaWtlKEJ1ZmZlciwgJ2JlJywgMzIpXSk7XG59O1xuZXhwb3J0cy5lY2RoVW5zYWZlID0gZnVuY3Rpb24gKHB1YmxpY0tleSwgcHJpdmF0ZUtleSwgY29tcHJlc3NlZCkge1xuICAgIGlmIChjb21wcmVzc2VkID09PSB2b2lkIDApIHsgY29tcHJlc3NlZCA9IHRydWU7IH1cbiAgICB2YXIgcG9pbnQgPSBlYy5rZXlGcm9tUHVibGljKHB1YmxpY0tleSk7XG4gICAgdmFyIHNjYWxhciA9IG5ldyBCTihwcml2YXRlS2V5KTtcbiAgICBpZiAoc2NhbGFyLnVjbXAoZWNwYXJhbXMubikgPj0gMCB8fCBzY2FsYXIuaXNaZXJvKCkpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdzY2FsYXIgd2FzIGludmFsaWQgKHplcm8gb3Igb3ZlcmZsb3cpJyk7XG4gICAgfVxuICAgIHZhciBzaGFyZWQgPSBwb2ludC5wdWIubXVsKHNjYWxhcik7XG4gICAgcmV0dXJuIHRvUHVibGljS2V5KHNoYXJlZC5nZXRYKCksIHNoYXJlZC5nZXRZKCksIGNvbXByZXNzZWQpO1xufTtcbnZhciB0b1B1YmxpY0tleSA9IGZ1bmN0aW9uICh4LCB5LCBjb21wcmVzc2VkKSB7XG4gICAgdmFyIHB1YmxpY0tleTtcbiAgICBpZiAoY29tcHJlc3NlZCkge1xuICAgICAgICBwdWJsaWNLZXkgPSBCdWZmZXIuYWxsb2MoMzMpO1xuICAgICAgICBwdWJsaWNLZXlbMF0gPSB5LmlzT2RkKCkgPyAweDAzIDogMHgwMjtcbiAgICAgICAgeC50b0FycmF5TGlrZShCdWZmZXIsICdiZScsIDMyKS5jb3B5KHB1YmxpY0tleSwgMSk7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICBwdWJsaWNLZXkgPSBCdWZmZXIuYWxsb2MoNjUpO1xuICAgICAgICBwdWJsaWNLZXlbMF0gPSAweDA0O1xuICAgICAgICB4LnRvQXJyYXlMaWtlKEJ1ZmZlciwgJ2JlJywgMzIpLmNvcHkocHVibGljS2V5LCAxKTtcbiAgICAgICAgeS50b0FycmF5TGlrZShCdWZmZXIsICdiZScsIDMyKS5jb3B5KHB1YmxpY0tleSwgMzMpO1xuICAgIH1cbiAgICByZXR1cm4gcHVibGljS2V5O1xufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/ethereumjs-abi/node_modules/ethereumjs-util/dist/secp256k1v3-lib/index.js\n");

/***/ }),

/***/ "./node_modules/ethereumjs-abi/node_modules/ethereumjs-util/dist/signature.js":
/*!************************************************************************************!*\
  !*** ./node_modules/ethereumjs-abi/node_modules/ethereumjs-util/dist/signature.js ***!
  \************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"./node_modules/buffer/index.js\")[\"Buffer\"];\n\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.hashPersonalMessage = exports.isValidSignature = exports.fromRpcSig = exports.toRpcSig = exports.ecrecover = exports.ecsign = void 0;\nvar secp256k1 = __webpack_require__(/*! ./secp256k1v3-adapter */ \"./node_modules/ethereumjs-abi/node_modules/ethereumjs-util/dist/secp256k1v3-adapter.js\");\nvar BN = __webpack_require__(/*! bn.js */ \"./node_modules/bn.js/lib/bn.js\");\nvar bytes_1 = __webpack_require__(/*! ./bytes */ \"./node_modules/ethereumjs-abi/node_modules/ethereumjs-util/dist/bytes.js\");\nvar hash_1 = __webpack_require__(/*! ./hash */ \"./node_modules/ethereumjs-abi/node_modules/ethereumjs-util/dist/hash.js\");\n/**\n * Returns the ECDSA signature of a message hash.\n */\nexports.ecsign = function (msgHash, privateKey, chainId) {\n    var sig = secp256k1.sign(msgHash, privateKey);\n    var recovery = sig.recovery;\n    var ret = {\n        r: sig.signature.slice(0, 32),\n        s: sig.signature.slice(32, 64),\n        v: chainId ? recovery + (chainId * 2 + 35) : recovery + 27,\n    };\n    return ret;\n};\n/**\n * ECDSA public key recovery from signature.\n * @returns Recovered public key\n */\nexports.ecrecover = function (msgHash, v, r, s, chainId) {\n    var signature = Buffer.concat([bytes_1.setLength(r, 32), bytes_1.setLength(s, 32)], 64);\n    var recovery = calculateSigRecovery(v, chainId);\n    if (!isValidSigRecovery(recovery)) {\n        throw new Error('Invalid signature v value');\n    }\n    var senderPubKey = secp256k1.recover(msgHash, signature, recovery);\n    return secp256k1.publicKeyConvert(senderPubKey, false).slice(1);\n};\n/**\n * Convert signature parameters into the format of `eth_sign` RPC method.\n * @returns Signature\n */\nexports.toRpcSig = function (v, r, s, chainId) {\n    var recovery = calculateSigRecovery(v, chainId);\n    if (!isValidSigRecovery(recovery)) {\n        throw new Error('Invalid signature v value');\n    }\n    // geth (and the RPC eth_sign method) uses the 65 byte format used by Bitcoin\n    return bytes_1.bufferToHex(Buffer.concat([bytes_1.setLengthLeft(r, 32), bytes_1.setLengthLeft(s, 32), bytes_1.toBuffer(v)]));\n};\n/**\n * Convert signature format of the `eth_sign` RPC method to signature parameters\n * NOTE: all because of a bug in geth: https://github.com/ethereum/go-ethereum/issues/2053\n */\nexports.fromRpcSig = function (sig) {\n    var buf = bytes_1.toBuffer(sig);\n    // NOTE: with potential introduction of chainId this might need to be updated\n    if (buf.length !== 65) {\n        throw new Error('Invalid signature length');\n    }\n    var v = buf[64];\n    // support both versions of `eth_sign` responses\n    if (v < 27) {\n        v += 27;\n    }\n    return {\n        v: v,\n        r: buf.slice(0, 32),\n        s: buf.slice(32, 64),\n    };\n};\n/**\n * Validate a ECDSA signature.\n * @param homesteadOrLater Indicates whether this is being used on either the homestead hardfork or a later one\n */\nexports.isValidSignature = function (v, r, s, homesteadOrLater, chainId) {\n    if (homesteadOrLater === void 0) { homesteadOrLater = true; }\n    var SECP256K1_N_DIV_2 = new BN('7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0', 16);\n    var SECP256K1_N = new BN('fffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141', 16);\n    if (r.length !== 32 || s.length !== 32) {\n        return false;\n    }\n    if (!isValidSigRecovery(calculateSigRecovery(v, chainId))) {\n        return false;\n    }\n    var rBN = new BN(r);\n    var sBN = new BN(s);\n    if (rBN.isZero() || rBN.gt(SECP256K1_N) || sBN.isZero() || sBN.gt(SECP256K1_N)) {\n        return false;\n    }\n    if (homesteadOrLater && sBN.cmp(SECP256K1_N_DIV_2) === 1) {\n        return false;\n    }\n    return true;\n};\n/**\n * Returns the keccak-256 hash of `message`, prefixed with the header used by the `eth_sign` RPC call.\n * The output of this function can be fed into `ecsign` to produce the same signature as the `eth_sign`\n * call for a given `message`, or fed to `ecrecover` along with a signature to recover the public key\n * used to produce the signature.\n */\nexports.hashPersonalMessage = function (message) {\n    var prefix = Buffer.from(\"\\u0019Ethereum Signed Message:\\n\" + message.length.toString(), 'utf-8');\n    return hash_1.keccak(Buffer.concat([prefix, message]));\n};\nfunction calculateSigRecovery(v, chainId) {\n    return chainId ? v - (2 * chainId + 35) : v - 27;\n}\nfunction isValidSigRecovery(recovery) {\n    return recovery === 0 || recovery === 1;\n}\n//# sourceMappingURL=signature.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZXRoZXJldW1qcy1hYmkvbm9kZV9tb2R1bGVzL2V0aGVyZXVtanMtdXRpbC9kaXN0L3NpZ25hdHVyZS5qcy5qcyIsIm1hcHBpbmdzIjoiO0FBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsMkJBQTJCLEdBQUcsd0JBQXdCLEdBQUcsa0JBQWtCLEdBQUcsZ0JBQWdCLEdBQUcsaUJBQWlCLEdBQUcsY0FBYztBQUNuSSxnQkFBZ0IsbUJBQU8sQ0FBQyxxSEFBdUI7QUFDL0MsU0FBUyxtQkFBTyxDQUFDLDZDQUFPO0FBQ3hCLGNBQWMsbUJBQU8sQ0FBQyx5RkFBUztBQUMvQixhQUFhLG1CQUFPLENBQUMsdUZBQVE7QUFDN0I7QUFDQTtBQUNBO0FBQ0EsY0FBYztBQUNkO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCLG9CQUFvQixNQUFNO0FBQzFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0I7QUFDaEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLCtCQUErQixNQUFNO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0I7QUFDbEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QjtBQUN4Qix1Q0FBdUM7QUFDdkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkJBQTJCO0FBQzNCLGlCQUFpQixNQUFNO0FBQ3ZCLHlCQUF5QixNQUFNO0FBQy9CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2V0aGVyZXVtanMtYWJpL25vZGVfbW9kdWxlcy9ldGhlcmV1bWpzLXV0aWwvZGlzdC9zaWduYXR1cmUuanM/NWU4NiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuaGFzaFBlcnNvbmFsTWVzc2FnZSA9IGV4cG9ydHMuaXNWYWxpZFNpZ25hdHVyZSA9IGV4cG9ydHMuZnJvbVJwY1NpZyA9IGV4cG9ydHMudG9ScGNTaWcgPSBleHBvcnRzLmVjcmVjb3ZlciA9IGV4cG9ydHMuZWNzaWduID0gdm9pZCAwO1xudmFyIHNlY3AyNTZrMSA9IHJlcXVpcmUoJy4vc2VjcDI1NmsxdjMtYWRhcHRlcicpO1xudmFyIEJOID0gcmVxdWlyZShcImJuLmpzXCIpO1xudmFyIGJ5dGVzXzEgPSByZXF1aXJlKFwiLi9ieXRlc1wiKTtcbnZhciBoYXNoXzEgPSByZXF1aXJlKFwiLi9oYXNoXCIpO1xuLyoqXG4gKiBSZXR1cm5zIHRoZSBFQ0RTQSBzaWduYXR1cmUgb2YgYSBtZXNzYWdlIGhhc2guXG4gKi9cbmV4cG9ydHMuZWNzaWduID0gZnVuY3Rpb24gKG1zZ0hhc2gsIHByaXZhdGVLZXksIGNoYWluSWQpIHtcbiAgICB2YXIgc2lnID0gc2VjcDI1NmsxLnNpZ24obXNnSGFzaCwgcHJpdmF0ZUtleSk7XG4gICAgdmFyIHJlY292ZXJ5ID0gc2lnLnJlY292ZXJ5O1xuICAgIHZhciByZXQgPSB7XG4gICAgICAgIHI6IHNpZy5zaWduYXR1cmUuc2xpY2UoMCwgMzIpLFxuICAgICAgICBzOiBzaWcuc2lnbmF0dXJlLnNsaWNlKDMyLCA2NCksXG4gICAgICAgIHY6IGNoYWluSWQgPyByZWNvdmVyeSArIChjaGFpbklkICogMiArIDM1KSA6IHJlY292ZXJ5ICsgMjcsXG4gICAgfTtcbiAgICByZXR1cm4gcmV0O1xufTtcbi8qKlxuICogRUNEU0EgcHVibGljIGtleSByZWNvdmVyeSBmcm9tIHNpZ25hdHVyZS5cbiAqIEByZXR1cm5zIFJlY292ZXJlZCBwdWJsaWMga2V5XG4gKi9cbmV4cG9ydHMuZWNyZWNvdmVyID0gZnVuY3Rpb24gKG1zZ0hhc2gsIHYsIHIsIHMsIGNoYWluSWQpIHtcbiAgICB2YXIgc2lnbmF0dXJlID0gQnVmZmVyLmNvbmNhdChbYnl0ZXNfMS5zZXRMZW5ndGgociwgMzIpLCBieXRlc18xLnNldExlbmd0aChzLCAzMildLCA2NCk7XG4gICAgdmFyIHJlY292ZXJ5ID0gY2FsY3VsYXRlU2lnUmVjb3ZlcnkodiwgY2hhaW5JZCk7XG4gICAgaWYgKCFpc1ZhbGlkU2lnUmVjb3ZlcnkocmVjb3ZlcnkpKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignSW52YWxpZCBzaWduYXR1cmUgdiB2YWx1ZScpO1xuICAgIH1cbiAgICB2YXIgc2VuZGVyUHViS2V5ID0gc2VjcDI1NmsxLnJlY292ZXIobXNnSGFzaCwgc2lnbmF0dXJlLCByZWNvdmVyeSk7XG4gICAgcmV0dXJuIHNlY3AyNTZrMS5wdWJsaWNLZXlDb252ZXJ0KHNlbmRlclB1YktleSwgZmFsc2UpLnNsaWNlKDEpO1xufTtcbi8qKlxuICogQ29udmVydCBzaWduYXR1cmUgcGFyYW1ldGVycyBpbnRvIHRoZSBmb3JtYXQgb2YgYGV0aF9zaWduYCBSUEMgbWV0aG9kLlxuICogQHJldHVybnMgU2lnbmF0dXJlXG4gKi9cbmV4cG9ydHMudG9ScGNTaWcgPSBmdW5jdGlvbiAodiwgciwgcywgY2hhaW5JZCkge1xuICAgIHZhciByZWNvdmVyeSA9IGNhbGN1bGF0ZVNpZ1JlY292ZXJ5KHYsIGNoYWluSWQpO1xuICAgIGlmICghaXNWYWxpZFNpZ1JlY292ZXJ5KHJlY292ZXJ5KSkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0ludmFsaWQgc2lnbmF0dXJlIHYgdmFsdWUnKTtcbiAgICB9XG4gICAgLy8gZ2V0aCAoYW5kIHRoZSBSUEMgZXRoX3NpZ24gbWV0aG9kKSB1c2VzIHRoZSA2NSBieXRlIGZvcm1hdCB1c2VkIGJ5IEJpdGNvaW5cbiAgICByZXR1cm4gYnl0ZXNfMS5idWZmZXJUb0hleChCdWZmZXIuY29uY2F0KFtieXRlc18xLnNldExlbmd0aExlZnQociwgMzIpLCBieXRlc18xLnNldExlbmd0aExlZnQocywgMzIpLCBieXRlc18xLnRvQnVmZmVyKHYpXSkpO1xufTtcbi8qKlxuICogQ29udmVydCBzaWduYXR1cmUgZm9ybWF0IG9mIHRoZSBgZXRoX3NpZ25gIFJQQyBtZXRob2QgdG8gc2lnbmF0dXJlIHBhcmFtZXRlcnNcbiAqIE5PVEU6IGFsbCBiZWNhdXNlIG9mIGEgYnVnIGluIGdldGg6IGh0dHBzOi8vZ2l0aHViLmNvbS9ldGhlcmV1bS9nby1ldGhlcmV1bS9pc3N1ZXMvMjA1M1xuICovXG5leHBvcnRzLmZyb21ScGNTaWcgPSBmdW5jdGlvbiAoc2lnKSB7XG4gICAgdmFyIGJ1ZiA9IGJ5dGVzXzEudG9CdWZmZXIoc2lnKTtcbiAgICAvLyBOT1RFOiB3aXRoIHBvdGVudGlhbCBpbnRyb2R1Y3Rpb24gb2YgY2hhaW5JZCB0aGlzIG1pZ2h0IG5lZWQgdG8gYmUgdXBkYXRlZFxuICAgIGlmIChidWYubGVuZ3RoICE9PSA2NSkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0ludmFsaWQgc2lnbmF0dXJlIGxlbmd0aCcpO1xuICAgIH1cbiAgICB2YXIgdiA9IGJ1Zls2NF07XG4gICAgLy8gc3VwcG9ydCBib3RoIHZlcnNpb25zIG9mIGBldGhfc2lnbmAgcmVzcG9uc2VzXG4gICAgaWYgKHYgPCAyNykge1xuICAgICAgICB2ICs9IDI3O1xuICAgIH1cbiAgICByZXR1cm4ge1xuICAgICAgICB2OiB2LFxuICAgICAgICByOiBidWYuc2xpY2UoMCwgMzIpLFxuICAgICAgICBzOiBidWYuc2xpY2UoMzIsIDY0KSxcbiAgICB9O1xufTtcbi8qKlxuICogVmFsaWRhdGUgYSBFQ0RTQSBzaWduYXR1cmUuXG4gKiBAcGFyYW0gaG9tZXN0ZWFkT3JMYXRlciBJbmRpY2F0ZXMgd2hldGhlciB0aGlzIGlzIGJlaW5nIHVzZWQgb24gZWl0aGVyIHRoZSBob21lc3RlYWQgaGFyZGZvcmsgb3IgYSBsYXRlciBvbmVcbiAqL1xuZXhwb3J0cy5pc1ZhbGlkU2lnbmF0dXJlID0gZnVuY3Rpb24gKHYsIHIsIHMsIGhvbWVzdGVhZE9yTGF0ZXIsIGNoYWluSWQpIHtcbiAgICBpZiAoaG9tZXN0ZWFkT3JMYXRlciA9PT0gdm9pZCAwKSB7IGhvbWVzdGVhZE9yTGF0ZXIgPSB0cnVlOyB9XG4gICAgdmFyIFNFQ1AyNTZLMV9OX0RJVl8yID0gbmV3IEJOKCc3ZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZjVkNTc2ZTczNTdhNDUwMWRkZmU5MmY0NjY4MWIyMGEwJywgMTYpO1xuICAgIHZhciBTRUNQMjU2SzFfTiA9IG5ldyBCTignZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmViYWFlZGNlNmFmNDhhMDNiYmZkMjVlOGNkMDM2NDE0MScsIDE2KTtcbiAgICBpZiAoci5sZW5ndGggIT09IDMyIHx8IHMubGVuZ3RoICE9PSAzMikge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIGlmICghaXNWYWxpZFNpZ1JlY292ZXJ5KGNhbGN1bGF0ZVNpZ1JlY292ZXJ5KHYsIGNoYWluSWQpKSkge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIHZhciByQk4gPSBuZXcgQk4ocik7XG4gICAgdmFyIHNCTiA9IG5ldyBCTihzKTtcbiAgICBpZiAockJOLmlzWmVybygpIHx8IHJCTi5ndChTRUNQMjU2SzFfTikgfHwgc0JOLmlzWmVybygpIHx8IHNCTi5ndChTRUNQMjU2SzFfTikpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICBpZiAoaG9tZXN0ZWFkT3JMYXRlciAmJiBzQk4uY21wKFNFQ1AyNTZLMV9OX0RJVl8yKSA9PT0gMSkge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIHJldHVybiB0cnVlO1xufTtcbi8qKlxuICogUmV0dXJucyB0aGUga2VjY2FrLTI1NiBoYXNoIG9mIGBtZXNzYWdlYCwgcHJlZml4ZWQgd2l0aCB0aGUgaGVhZGVyIHVzZWQgYnkgdGhlIGBldGhfc2lnbmAgUlBDIGNhbGwuXG4gKiBUaGUgb3V0cHV0IG9mIHRoaXMgZnVuY3Rpb24gY2FuIGJlIGZlZCBpbnRvIGBlY3NpZ25gIHRvIHByb2R1Y2UgdGhlIHNhbWUgc2lnbmF0dXJlIGFzIHRoZSBgZXRoX3NpZ25gXG4gKiBjYWxsIGZvciBhIGdpdmVuIGBtZXNzYWdlYCwgb3IgZmVkIHRvIGBlY3JlY292ZXJgIGFsb25nIHdpdGggYSBzaWduYXR1cmUgdG8gcmVjb3ZlciB0aGUgcHVibGljIGtleVxuICogdXNlZCB0byBwcm9kdWNlIHRoZSBzaWduYXR1cmUuXG4gKi9cbmV4cG9ydHMuaGFzaFBlcnNvbmFsTWVzc2FnZSA9IGZ1bmN0aW9uIChtZXNzYWdlKSB7XG4gICAgdmFyIHByZWZpeCA9IEJ1ZmZlci5mcm9tKFwiXFx1MDAxOUV0aGVyZXVtIFNpZ25lZCBNZXNzYWdlOlxcblwiICsgbWVzc2FnZS5sZW5ndGgudG9TdHJpbmcoKSwgJ3V0Zi04Jyk7XG4gICAgcmV0dXJuIGhhc2hfMS5rZWNjYWsoQnVmZmVyLmNvbmNhdChbcHJlZml4LCBtZXNzYWdlXSkpO1xufTtcbmZ1bmN0aW9uIGNhbGN1bGF0ZVNpZ1JlY292ZXJ5KHYsIGNoYWluSWQpIHtcbiAgICByZXR1cm4gY2hhaW5JZCA/IHYgLSAoMiAqIGNoYWluSWQgKyAzNSkgOiB2IC0gMjc7XG59XG5mdW5jdGlvbiBpc1ZhbGlkU2lnUmVjb3ZlcnkocmVjb3ZlcnkpIHtcbiAgICByZXR1cm4gcmVjb3ZlcnkgPT09IDAgfHwgcmVjb3ZlcnkgPT09IDE7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1zaWduYXR1cmUuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/ethereumjs-abi/node_modules/ethereumjs-util/dist/signature.js\n");

/***/ }),

/***/ "./node_modules/ethjs-util/lib/index.js":
/*!**********************************************!*\
  !*** ./node_modules/ethjs-util/lib/index.js ***!
  \**********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval("/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"./node_modules/buffer/index.js\")[\"Buffer\"];\n\n\nvar isHexPrefixed = __webpack_require__(/*! is-hex-prefixed */ \"./node_modules/is-hex-prefixed/src/index.js\");\nvar stripHexPrefix = __webpack_require__(/*! strip-hex-prefix */ \"./node_modules/strip-hex-prefix/src/index.js\");\n\n/**\n * Pads a `String` to have an even length\n * @param {String} value\n * @return {String} output\n */\nfunction padToEven(value) {\n  var a = value; // eslint-disable-line\n\n  if (typeof a !== 'string') {\n    throw new Error('[ethjs-util] while padding to even, value must be string, is currently ' + typeof a + ', while padToEven.');\n  }\n\n  if (a.length % 2) {\n    a = '0' + a;\n  }\n\n  return a;\n}\n\n/**\n * Converts a `Number` into a hex `String`\n * @param {Number} i\n * @return {String}\n */\nfunction intToHex(i) {\n  var hex = i.toString(16); // eslint-disable-line\n\n  return '0x' + hex;\n}\n\n/**\n * Converts an `Number` to a `Buffer`\n * @param {Number} i\n * @return {Buffer}\n */\nfunction intToBuffer(i) {\n  var hex = intToHex(i);\n\n  return new Buffer(padToEven(hex.slice(2)), 'hex');\n}\n\n/**\n * Get the binary size of a string\n * @param {String} str\n * @return {Number}\n */\nfunction getBinarySize(str) {\n  if (typeof str !== 'string') {\n    throw new Error('[ethjs-util] while getting binary size, method getBinarySize requires input \\'str\\' to be type String, got \\'' + typeof str + '\\'.');\n  }\n\n  return Buffer.byteLength(str, 'utf8');\n}\n\n/**\n * Returns TRUE if the first specified array contains all elements\n * from the second one. FALSE otherwise.\n *\n * @param {array} superset\n * @param {array} subset\n *\n * @returns {boolean}\n */\nfunction arrayContainsArray(superset, subset, some) {\n  if (Array.isArray(superset) !== true) {\n    throw new Error('[ethjs-util] method arrayContainsArray requires input \\'superset\\' to be an array got type \\'' + typeof superset + '\\'');\n  }\n  if (Array.isArray(subset) !== true) {\n    throw new Error('[ethjs-util] method arrayContainsArray requires input \\'subset\\' to be an array got type \\'' + typeof subset + '\\'');\n  }\n\n  return subset[Boolean(some) && 'some' || 'every'](function (value) {\n    return superset.indexOf(value) >= 0;\n  });\n}\n\n/**\n * Should be called to get utf8 from it's hex representation\n *\n * @method toUtf8\n * @param {String} string in hex\n * @returns {String} ascii string representation of hex value\n */\nfunction toUtf8(hex) {\n  var bufferValue = new Buffer(padToEven(stripHexPrefix(hex).replace(/^0+|0+$/g, '')), 'hex');\n\n  return bufferValue.toString('utf8');\n}\n\n/**\n * Should be called to get ascii from it's hex representation\n *\n * @method toAscii\n * @param {String} string in hex\n * @returns {String} ascii string representation of hex value\n */\nfunction toAscii(hex) {\n  var str = ''; // eslint-disable-line\n  var i = 0,\n      l = hex.length; // eslint-disable-line\n\n  if (hex.substring(0, 2) === '0x') {\n    i = 2;\n  }\n\n  for (; i < l; i += 2) {\n    var code = parseInt(hex.substr(i, 2), 16);\n    str += String.fromCharCode(code);\n  }\n\n  return str;\n}\n\n/**\n * Should be called to get hex representation (prefixed by 0x) of utf8 string\n *\n * @method fromUtf8\n * @param {String} string\n * @param {Number} optional padding\n * @returns {String} hex representation of input string\n */\nfunction fromUtf8(stringValue) {\n  var str = new Buffer(stringValue, 'utf8');\n\n  return '0x' + padToEven(str.toString('hex')).replace(/^0+|0+$/g, '');\n}\n\n/**\n * Should be called to get hex representation (prefixed by 0x) of ascii string\n *\n * @method fromAscii\n * @param {String} string\n * @param {Number} optional padding\n * @returns {String} hex representation of input string\n */\nfunction fromAscii(stringValue) {\n  var hex = ''; // eslint-disable-line\n  for (var i = 0; i < stringValue.length; i++) {\n    // eslint-disable-line\n    var code = stringValue.charCodeAt(i);\n    var n = code.toString(16);\n    hex += n.length < 2 ? '0' + n : n;\n  }\n\n  return '0x' + hex;\n}\n\n/**\n * getKeys([{a: 1, b: 2}, {a: 3, b: 4}], 'a') => [1, 3]\n *\n * @method getKeys get specific key from inner object array of objects\n * @param {String} params\n * @param {String} key\n * @param {Boolean} allowEmpty\n * @returns {Array} output just a simple array of output keys\n */\nfunction getKeys(params, key, allowEmpty) {\n  if (!Array.isArray(params)) {\n    throw new Error('[ethjs-util] method getKeys expecting type Array as \\'params\\' input, got \\'' + typeof params + '\\'');\n  }\n  if (typeof key !== 'string') {\n    throw new Error('[ethjs-util] method getKeys expecting type String for input \\'key\\' got \\'' + typeof key + '\\'.');\n  }\n\n  var result = []; // eslint-disable-line\n\n  for (var i = 0; i < params.length; i++) {\n    // eslint-disable-line\n    var value = params[i][key]; // eslint-disable-line\n    if (allowEmpty && !value) {\n      value = '';\n    } else if (typeof value !== 'string') {\n      throw new Error('invalid abi');\n    }\n    result.push(value);\n  }\n\n  return result;\n}\n\n/**\n * Is the string a hex string.\n *\n * @method check if string is hex string of specific length\n * @param {String} value\n * @param {Number} length\n * @returns {Boolean} output the string is a hex string\n */\nfunction isHexString(value, length) {\n  if (typeof value !== 'string' || !value.match(/^0x[0-9A-Fa-f]*$/)) {\n    return false;\n  }\n\n  if (length && value.length !== 2 + 2 * length) {\n    return false;\n  }\n\n  return true;\n}\n\nmodule.exports = {\n  arrayContainsArray: arrayContainsArray,\n  intToBuffer: intToBuffer,\n  getBinarySize: getBinarySize,\n  isHexPrefixed: isHexPrefixed,\n  stripHexPrefix: stripHexPrefix,\n  padToEven: padToEven,\n  intToHex: intToHex,\n  fromAscii: fromAscii,\n  fromUtf8: fromUtf8,\n  toAscii: toAscii,\n  toUtf8: toUtf8,\n  getKeys: getKeys,\n  isHexString: isHexString\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/ethjs-util/lib/index.js\n");

/***/ }),

/***/ "./node_modules/is-hex-prefixed/src/index.js":
/*!***************************************************!*\
  !*** ./node_modules/is-hex-prefixed/src/index.js ***!
  \***************************************************/
/***/ (function(module) {

eval("/**\n * Returns a `Boolean` on whether or not the a `String` starts with '0x'\n * @param {String} str the string input value\n * @return {Boolean} a boolean if it is or is not hex prefixed\n * @throws if the str input is not a string\n */\nmodule.exports = function isHexPrefixed(str) {\n  if (typeof str !== 'string') {\n    throw new Error(\"[is-hex-prefixed] value must be type 'string', is currently type \" + (typeof str) + \", while checking isHexPrefixed.\");\n  }\n\n  return str.slice(0, 2) === '0x';\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvaXMtaGV4LXByZWZpeGVkL3NyYy9pbmRleC5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CLFlBQVksU0FBUztBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvaXMtaGV4LXByZWZpeGVkL3NyYy9pbmRleC5qcz83NzViIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogUmV0dXJucyBhIGBCb29sZWFuYCBvbiB3aGV0aGVyIG9yIG5vdCB0aGUgYSBgU3RyaW5nYCBzdGFydHMgd2l0aCAnMHgnXG4gKiBAcGFyYW0ge1N0cmluZ30gc3RyIHRoZSBzdHJpbmcgaW5wdXQgdmFsdWVcbiAqIEByZXR1cm4ge0Jvb2xlYW59IGEgYm9vbGVhbiBpZiBpdCBpcyBvciBpcyBub3QgaGV4IHByZWZpeGVkXG4gKiBAdGhyb3dzIGlmIHRoZSBzdHIgaW5wdXQgaXMgbm90IGEgc3RyaW5nXG4gKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gaXNIZXhQcmVmaXhlZChzdHIpIHtcbiAgaWYgKHR5cGVvZiBzdHIgIT09ICdzdHJpbmcnKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFwiW2lzLWhleC1wcmVmaXhlZF0gdmFsdWUgbXVzdCBiZSB0eXBlICdzdHJpbmcnLCBpcyBjdXJyZW50bHkgdHlwZSBcIiArICh0eXBlb2Ygc3RyKSArIFwiLCB3aGlsZSBjaGVja2luZyBpc0hleFByZWZpeGVkLlwiKTtcbiAgfVxuXG4gIHJldHVybiBzdHIuc2xpY2UoMCwgMikgPT09ICcweCc7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/is-hex-prefixed/src/index.js\n");

/***/ }),

/***/ "./node_modules/jsonschema/lib/attribute.js":
/*!**************************************************!*\
  !*** ./node_modules/jsonschema/lib/attribute.js ***!
  \**************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval("\n\nvar helpers = __webpack_require__(/*! ./helpers */ \"./node_modules/jsonschema/lib/helpers.js\");\n\n/** @type ValidatorResult */\nvar ValidatorResult = helpers.ValidatorResult;\n/** @type SchemaError */\nvar SchemaError = helpers.SchemaError;\n\nvar attribute = {};\n\nattribute.ignoreProperties = {\n  // informative properties\n  'id': true,\n  'default': true,\n  'description': true,\n  'title': true,\n  // arguments to other properties\n  'additionalItems': true,\n  'then': true,\n  'else': true,\n  // special-handled properties\n  '$schema': true,\n  '$ref': true,\n  'extends': true,\n};\n\n/**\n * @name validators\n */\nvar validators = attribute.validators = {};\n\n/**\n * Validates whether the instance if of a certain type\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {ValidatorResult|null}\n */\nvalidators.type = function validateType (instance, schema, options, ctx) {\n  // Ignore undefined instances\n  if (instance === undefined) {\n    return null;\n  }\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var types = Array.isArray(schema.type) ? schema.type : [schema.type];\n  if (!types.some(this.testType.bind(this, instance, schema, options, ctx))) {\n    var list = types.map(function (v) {\n      if(!v) return;\n      var id = v.$id || v.id;\n      return id ? ('<' + id + '>') : (v+'');\n    });\n    result.addError({\n      name: 'type',\n      argument: list,\n      message: \"is not of a type(s) \" + list,\n    });\n  }\n  return result;\n};\n\nfunction testSchemaNoThrow(instance, options, ctx, callback, schema){\n  var throwError = options.throwError;\n  var throwAll = options.throwAll;\n  options.throwError = false;\n  options.throwAll = false;\n  var res = this.validateSchema(instance, schema, options, ctx);\n  options.throwError = throwError;\n  options.throwAll = throwAll;\n\n  if (!res.valid && callback instanceof Function) {\n    callback(res);\n  }\n  return res.valid;\n}\n\n/**\n * Validates whether the instance matches some of the given schemas\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {ValidatorResult|null}\n */\nvalidators.anyOf = function validateAnyOf (instance, schema, options, ctx) {\n  // Ignore undefined instances\n  if (instance === undefined) {\n    return null;\n  }\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var inner = new ValidatorResult(instance, schema, options, ctx);\n  if (!Array.isArray(schema.anyOf)){\n    throw new SchemaError(\"anyOf must be an array\");\n  }\n  if (!schema.anyOf.some(\n    testSchemaNoThrow.bind(\n      this, instance, options, ctx, function(res){inner.importErrors(res);}\n    ))) {\n    var list = schema.anyOf.map(function (v, i) {\n      var id = v.$id || v.id;\n      if(id) return '<' + id + '>';\n      return(v.title && JSON.stringify(v.title)) || (v['$ref'] && ('<' + v['$ref'] + '>')) || '[subschema '+i+']';\n    });\n    if (options.nestedErrors) {\n      result.importErrors(inner);\n    }\n    result.addError({\n      name: 'anyOf',\n      argument: list,\n      message: \"is not any of \" + list.join(','),\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance matches every given schema\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null}\n */\nvalidators.allOf = function validateAllOf (instance, schema, options, ctx) {\n  // Ignore undefined instances\n  if (instance === undefined) {\n    return null;\n  }\n  if (!Array.isArray(schema.allOf)){\n    throw new SchemaError(\"allOf must be an array\");\n  }\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var self = this;\n  schema.allOf.forEach(function(v, i){\n    var valid = self.validateSchema(instance, v, options, ctx);\n    if(!valid.valid){\n      var id = v.$id || v.id;\n      var msg = id || (v.title && JSON.stringify(v.title)) || (v['$ref'] && ('<' + v['$ref'] + '>')) || '[subschema '+i+']';\n      result.addError({\n        name: 'allOf',\n        argument: { id: msg, length: valid.errors.length, valid: valid },\n        message: 'does not match allOf schema ' + msg + ' with ' + valid.errors.length + ' error[s]:',\n      });\n      result.importErrors(valid);\n    }\n  });\n  return result;\n};\n\n/**\n * Validates whether the instance matches exactly one of the given schemas\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null}\n */\nvalidators.oneOf = function validateOneOf (instance, schema, options, ctx) {\n  // Ignore undefined instances\n  if (instance === undefined) {\n    return null;\n  }\n  if (!Array.isArray(schema.oneOf)){\n    throw new SchemaError(\"oneOf must be an array\");\n  }\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var inner = new ValidatorResult(instance, schema, options, ctx);\n  var count = schema.oneOf.filter(\n    testSchemaNoThrow.bind(\n      this, instance, options, ctx, function(res) {inner.importErrors(res);}\n    ) ).length;\n  var list = schema.oneOf.map(function (v, i) {\n    var id = v.$id || v.id;\n    return id || (v.title && JSON.stringify(v.title)) || (v['$ref'] && ('<' + v['$ref'] + '>')) || '[subschema '+i+']';\n  });\n  if (count!==1) {\n    if (options.nestedErrors) {\n      result.importErrors(inner);\n    }\n    result.addError({\n      name: 'oneOf',\n      argument: list,\n      message: \"is not exactly one from \" + list.join(','),\n    });\n  }\n  return result;\n};\n\n/**\n * Validates \"then\" or \"else\" depending on the result of validating \"if\"\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null}\n */\nvalidators.if = function validateIf (instance, schema, options, ctx) {\n  // Ignore undefined instances\n  if (instance === undefined) return null;\n  if (!helpers.isSchema(schema.if)) throw new Error('Expected \"if\" keyword to be a schema');\n  var ifValid = testSchemaNoThrow.call(this, instance, options, ctx, null, schema.if);\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var res;\n  if(ifValid){\n    if (schema.then === undefined) return;\n    if (!helpers.isSchema(schema.then)) throw new Error('Expected \"then\" keyword to be a schema');\n    res = this.validateSchema(instance, schema.then, options, ctx.makeChild(schema.then));\n    result.importErrors(res);\n  }else{\n    if (schema.else === undefined) return;\n    if (!helpers.isSchema(schema.else)) throw new Error('Expected \"else\" keyword to be a schema');\n    res = this.validateSchema(instance, schema.else, options, ctx.makeChild(schema.else));\n    result.importErrors(res);\n  }\n  return result;\n};\n\nfunction getEnumerableProperty(object, key){\n  // Determine if `key` shows up in `for(var key in object)`\n  // First test Object.hasOwnProperty.call as an optimization: that guarantees it does\n  if(Object.hasOwnProperty.call(object, key)) return object[key];\n  // Test `key in object` as an optimization; false means it won't\n  if(!(key in object)) return;\n  while( (object = Object.getPrototypeOf(object)) ){\n    if(Object.propertyIsEnumerable.call(object, key)) return object[key];\n  }\n}\n\n/**\n * Validates propertyNames\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null|ValidatorResult}\n */\nvalidators.propertyNames = function validatePropertyNames (instance, schema, options, ctx) {\n  if(!this.types.object(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var subschema = schema.propertyNames!==undefined ? schema.propertyNames : {};\n  if(!helpers.isSchema(subschema)) throw new SchemaError('Expected \"propertyNames\" to be a schema (object or boolean)');\n\n  for (var property in instance) {\n    if(getEnumerableProperty(instance, property) !== undefined){\n      var res = this.validateSchema(property, subschema, options, ctx.makeChild(subschema));\n      result.importErrors(res);\n    }\n  }\n\n  return result;\n};\n\n/**\n * Validates properties\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null|ValidatorResult}\n */\nvalidators.properties = function validateProperties (instance, schema, options, ctx) {\n  if(!this.types.object(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var properties = schema.properties || {};\n  for (var property in properties) {\n    var subschema = properties[property];\n    if(subschema===undefined){\n      continue;\n    }else if(subschema===null){\n      throw new SchemaError('Unexpected null, expected schema in \"properties\"');\n    }\n    if (typeof options.preValidateProperty == 'function') {\n      options.preValidateProperty(instance, property, subschema, options, ctx);\n    }\n    var prop = getEnumerableProperty(instance, property);\n    var res = this.validateSchema(prop, subschema, options, ctx.makeChild(subschema, property));\n    if(res.instance !== result.instance[property]) result.instance[property] = res.instance;\n    result.importErrors(res);\n  }\n  return result;\n};\n\n/**\n * Test a specific property within in instance against the additionalProperties schema attribute\n * This ignores properties with definitions in the properties schema attribute, but no other attributes.\n * If too many more types of property-existence tests pop up they may need their own class of tests (like `type` has)\n * @private\n * @return {boolean}\n */\nfunction testAdditionalProperty (instance, schema, options, ctx, property, result) {\n  if(!this.types.object(instance)) return;\n  if (schema.properties && schema.properties[property] !== undefined) {\n    return;\n  }\n  if (schema.additionalProperties === false) {\n    result.addError({\n      name: 'additionalProperties',\n      argument: property,\n      message: \"is not allowed to have the additional property \" + JSON.stringify(property),\n    });\n  } else {\n    var additionalProperties = schema.additionalProperties || {};\n\n    if (typeof options.preValidateProperty == 'function') {\n      options.preValidateProperty(instance, property, additionalProperties, options, ctx);\n    }\n\n    var res = this.validateSchema(instance[property], additionalProperties, options, ctx.makeChild(additionalProperties, property));\n    if(res.instance !== result.instance[property]) result.instance[property] = res.instance;\n    result.importErrors(res);\n  }\n}\n\n/**\n * Validates patternProperties\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null|ValidatorResult}\n */\nvalidators.patternProperties = function validatePatternProperties (instance, schema, options, ctx) {\n  if(!this.types.object(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var patternProperties = schema.patternProperties || {};\n\n  for (var property in instance) {\n    var test = true;\n    for (var pattern in patternProperties) {\n      var subschema = patternProperties[pattern];\n      if(subschema===undefined){\n        continue;\n      }else if(subschema===null){\n        throw new SchemaError('Unexpected null, expected schema in \"patternProperties\"');\n      }\n      try {\n        var regexp = new RegExp(pattern, 'u');\n      } catch(_e) {\n        // In the event the stricter handling causes an error, fall back on the forgiving handling\n        // DEPRECATED\n        regexp = new RegExp(pattern);\n      }\n      if (!regexp.test(property)) {\n        continue;\n      }\n      test = false;\n\n      if (typeof options.preValidateProperty == 'function') {\n        options.preValidateProperty(instance, property, subschema, options, ctx);\n      }\n\n      var res = this.validateSchema(instance[property], subschema, options, ctx.makeChild(subschema, property));\n      if(res.instance !== result.instance[property]) result.instance[property] = res.instance;\n      result.importErrors(res);\n    }\n    if (test) {\n      testAdditionalProperty.call(this, instance, schema, options, ctx, property, result);\n    }\n  }\n\n  return result;\n};\n\n/**\n * Validates additionalProperties\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null|ValidatorResult}\n */\nvalidators.additionalProperties = function validateAdditionalProperties (instance, schema, options, ctx) {\n  if(!this.types.object(instance)) return;\n  // if patternProperties is defined then we'll test when that one is called instead\n  if (schema.patternProperties) {\n    return null;\n  }\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  for (var property in instance) {\n    testAdditionalProperty.call(this, instance, schema, options, ctx, property, result);\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance value is at least of a certain length, when the instance value is a string.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.minProperties = function validateMinProperties (instance, schema, options, ctx) {\n  if (!this.types.object(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var keys = Object.keys(instance);\n  if (!(keys.length >= schema.minProperties)) {\n    result.addError({\n      name: 'minProperties',\n      argument: schema.minProperties,\n      message: \"does not meet minimum property length of \" + schema.minProperties,\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance value is at most of a certain length, when the instance value is a string.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.maxProperties = function validateMaxProperties (instance, schema, options, ctx) {\n  if (!this.types.object(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var keys = Object.keys(instance);\n  if (!(keys.length <= schema.maxProperties)) {\n    result.addError({\n      name: 'maxProperties',\n      argument: schema.maxProperties,\n      message: \"does not meet maximum property length of \" + schema.maxProperties,\n    });\n  }\n  return result;\n};\n\n/**\n * Validates items when instance is an array\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null|ValidatorResult}\n */\nvalidators.items = function validateItems (instance, schema, options, ctx) {\n  var self = this;\n  if (!this.types.array(instance)) return;\n  if (schema.items===undefined) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  instance.every(function (value, i) {\n    if(Array.isArray(schema.items)){\n      var items =  schema.items[i]===undefined ? schema.additionalItems : schema.items[i];\n    }else{\n      var items = schema.items;\n    }\n    if (items === undefined) {\n      return true;\n    }\n    if (items === false) {\n      result.addError({\n        name: 'items',\n        message: \"additionalItems not permitted\",\n      });\n      return false;\n    }\n    var res = self.validateSchema(value, items, options, ctx.makeChild(items, i));\n    if(res.instance !== result.instance[i]) result.instance[i] = res.instance;\n    result.importErrors(res);\n    return true;\n  });\n  return result;\n};\n\n/**\n * Validates the \"contains\" keyword\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null|ValidatorResult}\n */\nvalidators.contains = function validateContains (instance, schema, options, ctx) {\n  var self = this;\n  if (!this.types.array(instance)) return;\n  if (schema.contains===undefined) return;\n  if (!helpers.isSchema(schema.contains)) throw new Error('Expected \"contains\" keyword to be a schema');\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var count = instance.some(function (value, i) {\n    var res = self.validateSchema(value, schema.contains, options, ctx.makeChild(schema.contains, i));\n    return res.errors.length===0;\n  });\n  if(count===false){\n    result.addError({\n      name: 'contains',\n      argument: schema.contains,\n      message: \"must contain an item matching given schema\",\n    });\n  }\n  return result;\n};\n\n/**\n * Validates minimum and exclusiveMinimum when the type of the instance value is a number.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.minimum = function validateMinimum (instance, schema, options, ctx) {\n  if (!this.types.number(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (schema.exclusiveMinimum && schema.exclusiveMinimum === true) {\n    if(!(instance > schema.minimum)){\n      result.addError({\n        name: 'minimum',\n        argument: schema.minimum,\n        message: \"must be greater than \" + schema.minimum,\n      });\n    }\n  } else {\n    if(!(instance >= schema.minimum)){\n      result.addError({\n        name: 'minimum',\n        argument: schema.minimum,\n        message: \"must be greater than or equal to \" + schema.minimum,\n      });\n    }\n  }\n  return result;\n};\n\n/**\n * Validates maximum and exclusiveMaximum when the type of the instance value is a number.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.maximum = function validateMaximum (instance, schema, options, ctx) {\n  if (!this.types.number(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (schema.exclusiveMaximum && schema.exclusiveMaximum === true) {\n    if(!(instance < schema.maximum)){\n      result.addError({\n        name: 'maximum',\n        argument: schema.maximum,\n        message: \"must be less than \" + schema.maximum,\n      });\n    }\n  } else {\n    if(!(instance <= schema.maximum)){\n      result.addError({\n        name: 'maximum',\n        argument: schema.maximum,\n        message: \"must be less than or equal to \" + schema.maximum,\n      });\n    }\n  }\n  return result;\n};\n\n/**\n * Validates the number form of exclusiveMinimum when the type of the instance value is a number.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.exclusiveMinimum = function validateExclusiveMinimum (instance, schema, options, ctx) {\n  // Support the boolean form of exclusiveMinimum, which is handled by the \"minimum\" keyword.\n  if(typeof schema.exclusiveMinimum === 'boolean') return;\n  if (!this.types.number(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var valid = instance > schema.exclusiveMinimum;\n  if (!valid) {\n    result.addError({\n      name: 'exclusiveMinimum',\n      argument: schema.exclusiveMinimum,\n      message: \"must be strictly greater than \" + schema.exclusiveMinimum,\n    });\n  }\n  return result;\n};\n\n/**\n * Validates the number form of exclusiveMaximum when the type of the instance value is a number.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.exclusiveMaximum = function validateExclusiveMaximum (instance, schema, options, ctx) {\n  // Support the boolean form of exclusiveMaximum, which is handled by the \"maximum\" keyword.\n  if(typeof schema.exclusiveMaximum === 'boolean') return;\n  if (!this.types.number(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var valid = instance < schema.exclusiveMaximum;\n  if (!valid) {\n    result.addError({\n      name: 'exclusiveMaximum',\n      argument: schema.exclusiveMaximum,\n      message: \"must be strictly less than \" + schema.exclusiveMaximum,\n    });\n  }\n  return result;\n};\n\n/**\n * Perform validation for multipleOf and divisibleBy, which are essentially the same.\n * @param instance\n * @param schema\n * @param validationType\n * @param errorMessage\n * @returns {String|null}\n */\nvar validateMultipleOfOrDivisbleBy = function validateMultipleOfOrDivisbleBy (instance, schema, options, ctx, validationType, errorMessage) {\n  if (!this.types.number(instance)) return;\n\n  var validationArgument = schema[validationType];\n  if (validationArgument == 0) {\n    throw new SchemaError(validationType + \" cannot be zero\");\n  }\n\n  var result = new ValidatorResult(instance, schema, options, ctx);\n\n  var instanceDecimals = helpers.getDecimalPlaces(instance);\n  var divisorDecimals = helpers.getDecimalPlaces(validationArgument);\n\n  var maxDecimals = Math.max(instanceDecimals , divisorDecimals);\n  var multiplier = Math.pow(10, maxDecimals);\n\n  if (Math.round(instance * multiplier) % Math.round(validationArgument * multiplier) !== 0) {\n    result.addError({\n      name: validationType,\n      argument:  validationArgument,\n      message: errorMessage + JSON.stringify(validationArgument),\n    });\n  }\n\n  return result;\n};\n\n/**\n * Validates divisibleBy when the type of the instance value is a number.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.multipleOf = function validateMultipleOf (instance, schema, options, ctx) {\n  return validateMultipleOfOrDivisbleBy.call(this, instance, schema, options, ctx, \"multipleOf\", \"is not a multiple of (divisible by) \");\n};\n\n/**\n * Validates multipleOf when the type of the instance value is a number.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.divisibleBy = function validateDivisibleBy (instance, schema, options, ctx) {\n  return validateMultipleOfOrDivisbleBy.call(this, instance, schema, options, ctx, \"divisibleBy\", \"is not divisible by (multiple of) \");\n};\n\n/**\n * Validates whether the instance value is present.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.required = function validateRequired (instance, schema, options, ctx) {\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (instance === undefined && schema.required === true) {\n    // A boolean form is implemented for reverse-compatibility with schemas written against older drafts\n    result.addError({\n      name: 'required',\n      message: \"is required\",\n    });\n  } else if (this.types.object(instance) && Array.isArray(schema.required)) {\n    schema.required.forEach(function(n){\n      if(getEnumerableProperty(instance, n)===undefined){\n        result.addError({\n          name: 'required',\n          argument: n,\n          message: \"requires property \" + JSON.stringify(n),\n        });\n      }\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance value matches the regular expression, when the instance value is a string.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.pattern = function validatePattern (instance, schema, options, ctx) {\n  if (!this.types.string(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var pattern = schema.pattern;\n  try {\n    var regexp = new RegExp(pattern, 'u');\n  } catch(_e) {\n    // In the event the stricter handling causes an error, fall back on the forgiving handling\n    // DEPRECATED\n    regexp = new RegExp(pattern);\n  }\n  if (!instance.match(regexp)) {\n    result.addError({\n      name: 'pattern',\n      argument: schema.pattern,\n      message: \"does not match pattern \" + JSON.stringify(schema.pattern.toString()),\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance value is of a certain defined format or a custom\n * format.\n * The following formats are supported for string types:\n *   - date-time\n *   - date\n *   - time\n *   - ip-address\n *   - ipv6\n *   - uri\n *   - color\n *   - host-name\n *   - alpha\n *   - alpha-numeric\n *   - utc-millisec\n * @param instance\n * @param schema\n * @param [options]\n * @param [ctx]\n * @return {String|null}\n */\nvalidators.format = function validateFormat (instance, schema, options, ctx) {\n  if (instance===undefined) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (!result.disableFormat && !helpers.isFormat(instance, schema.format, this)) {\n    result.addError({\n      name: 'format',\n      argument: schema.format,\n      message: \"does not conform to the \" + JSON.stringify(schema.format) + \" format\",\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance value is at least of a certain length, when the instance value is a string.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.minLength = function validateMinLength (instance, schema, options, ctx) {\n  if (!this.types.string(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var hsp = instance.match(/[\\uDC00-\\uDFFF]/g);\n  var length = instance.length - (hsp ? hsp.length : 0);\n  if (!(length >= schema.minLength)) {\n    result.addError({\n      name: 'minLength',\n      argument: schema.minLength,\n      message: \"does not meet minimum length of \" + schema.minLength,\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance value is at most of a certain length, when the instance value is a string.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.maxLength = function validateMaxLength (instance, schema, options, ctx) {\n  if (!this.types.string(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  // TODO if this was already computed in \"minLength\", use that value instead of re-computing\n  var hsp = instance.match(/[\\uDC00-\\uDFFF]/g);\n  var length = instance.length - (hsp ? hsp.length : 0);\n  if (!(length <= schema.maxLength)) {\n    result.addError({\n      name: 'maxLength',\n      argument: schema.maxLength,\n      message: \"does not meet maximum length of \" + schema.maxLength,\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether instance contains at least a minimum number of items, when the instance is an Array.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.minItems = function validateMinItems (instance, schema, options, ctx) {\n  if (!this.types.array(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (!(instance.length >= schema.minItems)) {\n    result.addError({\n      name: 'minItems',\n      argument: schema.minItems,\n      message: \"does not meet minimum length of \" + schema.minItems,\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether instance contains no more than a maximum number of items, when the instance is an Array.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.maxItems = function validateMaxItems (instance, schema, options, ctx) {\n  if (!this.types.array(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (!(instance.length <= schema.maxItems)) {\n    result.addError({\n      name: 'maxItems',\n      argument: schema.maxItems,\n      message: \"does not meet maximum length of \" + schema.maxItems,\n    });\n  }\n  return result;\n};\n\n/**\n * Deep compares arrays for duplicates\n * @param v\n * @param i\n * @param a\n * @private\n * @return {boolean}\n */\nfunction testArrays (v, i, a) {\n  var j, len = a.length;\n  for (j = i + 1, len; j < len; j++) {\n    if (helpers.deepCompareStrict(v, a[j])) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Validates whether there are no duplicates, when the instance is an Array.\n * @param instance\n * @return {String|null}\n */\nvalidators.uniqueItems = function validateUniqueItems (instance, schema, options, ctx) {\n  if (schema.uniqueItems!==true) return;\n  if (!this.types.array(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (!instance.every(testArrays)) {\n    result.addError({\n      name: 'uniqueItems',\n      message: \"contains duplicate item\",\n    });\n  }\n  return result;\n};\n\n/**\n * Validate for the presence of dependency properties, if the instance is an object.\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {null|ValidatorResult}\n */\nvalidators.dependencies = function validateDependencies (instance, schema, options, ctx) {\n  if (!this.types.object(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  for (var property in schema.dependencies) {\n    if (instance[property] === undefined) {\n      continue;\n    }\n    var dep = schema.dependencies[property];\n    var childContext = ctx.makeChild(dep, property);\n    if (typeof dep == 'string') {\n      dep = [dep];\n    }\n    if (Array.isArray(dep)) {\n      dep.forEach(function (prop) {\n        if (instance[prop] === undefined) {\n          result.addError({\n            // FIXME there's two different \"dependencies\" errors here with slightly different outputs\n            // Can we make these the same? Or should we create different error types?\n            name: 'dependencies',\n            argument: childContext.propertyPath,\n            message: \"property \" + prop + \" not found, required by \" + childContext.propertyPath,\n          });\n        }\n      });\n    } else {\n      var res = this.validateSchema(instance, dep, options, childContext);\n      if(result.instance !== res.instance) result.instance = res.instance;\n      if (res && res.errors.length) {\n        result.addError({\n          name: 'dependencies',\n          argument: childContext.propertyPath,\n          message: \"does not meet dependency required by \" + childContext.propertyPath,\n        });\n        result.importErrors(res);\n      }\n    }\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance value is one of the enumerated values.\n *\n * @param instance\n * @param schema\n * @return {ValidatorResult|null}\n */\nvalidators['enum'] = function validateEnum (instance, schema, options, ctx) {\n  if (instance === undefined) {\n    return null;\n  }\n  if (!Array.isArray(schema['enum'])) {\n    throw new SchemaError(\"enum expects an array\", schema);\n  }\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (!schema['enum'].some(helpers.deepCompareStrict.bind(null, instance))) {\n    result.addError({\n      name: 'enum',\n      argument: schema['enum'],\n      message: \"is not one of enum values: \" + schema['enum'].map(String).join(','),\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance exactly matches a given value\n *\n * @param instance\n * @param schema\n * @return {ValidatorResult|null}\n */\nvalidators['const'] = function validateEnum (instance, schema, options, ctx) {\n  if (instance === undefined) {\n    return null;\n  }\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (!helpers.deepCompareStrict(schema['const'], instance)) {\n    result.addError({\n      name: 'const',\n      argument: schema['const'],\n      message: \"does not exactly match expected constant: \" + schema['const'],\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance if of a prohibited type.\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {null|ValidatorResult}\n */\nvalidators.not = validators.disallow = function validateNot (instance, schema, options, ctx) {\n  var self = this;\n  if(instance===undefined) return null;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var notTypes = schema.not || schema.disallow;\n  if(!notTypes) return null;\n  if(!Array.isArray(notTypes)) notTypes=[notTypes];\n  notTypes.forEach(function (type) {\n    if (self.testType(instance, schema, options, ctx, type)) {\n      var id = type && (type.$id || type.id);\n      var schemaId = id || type;\n      result.addError({\n        name: 'not',\n        argument: schemaId,\n        message: \"is of prohibited type \" + schemaId,\n      });\n    }\n  });\n  return result;\n};\n\nmodule.exports = attribute;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/jsonschema/lib/attribute.js\n");

/***/ }),

/***/ "./node_modules/jsonschema/lib/helpers.js":
/*!************************************************!*\
  !*** ./node_modules/jsonschema/lib/helpers.js ***!
  \************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar uri = __webpack_require__(/*! url */ \"./node_modules/next/dist/compiled/native-url/index.js\");\n\nvar ValidationError = exports.ValidationError = function ValidationError (message, instance, schema, path, name, argument) {\n  if(Array.isArray(path)){\n    this.path = path;\n    this.property = path.reduce(function(sum, item){\n      return sum + makeSuffix(item);\n    }, 'instance');\n  }else if(path !== undefined){\n    this.property = path;\n  }\n  if (message) {\n    this.message = message;\n  }\n  if (schema) {\n    var id = schema.$id || schema.id;\n    this.schema = id || schema;\n  }\n  if (instance !== undefined) {\n    this.instance = instance;\n  }\n  this.name = name;\n  this.argument = argument;\n  this.stack = this.toString();\n};\n\nValidationError.prototype.toString = function toString() {\n  return this.property + ' ' + this.message;\n};\n\nvar ValidatorResult = exports.ValidatorResult = function ValidatorResult(instance, schema, options, ctx) {\n  this.instance = instance;\n  this.schema = schema;\n  this.options = options;\n  this.path = ctx.path;\n  this.propertyPath = ctx.propertyPath;\n  this.errors = [];\n  this.throwError = options && options.throwError;\n  this.throwFirst = options && options.throwFirst;\n  this.throwAll = options && options.throwAll;\n  this.disableFormat = options && options.disableFormat === true;\n};\n\nValidatorResult.prototype.addError = function addError(detail) {\n  var err;\n  if (typeof detail == 'string') {\n    err = new ValidationError(detail, this.instance, this.schema, this.path);\n  } else {\n    if (!detail) throw new Error('Missing error detail');\n    if (!detail.message) throw new Error('Missing error message');\n    if (!detail.name) throw new Error('Missing validator type');\n    err = new ValidationError(detail.message, this.instance, this.schema, this.path, detail.name, detail.argument);\n  }\n\n  this.errors.push(err);\n  if (this.throwFirst) {\n    throw new ValidatorResultError(this);\n  }else if(this.throwError){\n    throw err;\n  }\n  return err;\n};\n\nValidatorResult.prototype.importErrors = function importErrors(res) {\n  if (typeof res == 'string' || (res && res.validatorType)) {\n    this.addError(res);\n  } else if (res && res.errors) {\n    this.errors = this.errors.concat(res.errors);\n  }\n};\n\nfunction stringizer (v,i){\n  return i+': '+v.toString()+'\\n';\n}\nValidatorResult.prototype.toString = function toString(res) {\n  return this.errors.map(stringizer).join('');\n};\n\nObject.defineProperty(ValidatorResult.prototype, \"valid\", { get: function() {\n  return !this.errors.length;\n} });\n\nmodule.exports.ValidatorResultError = ValidatorResultError;\nfunction ValidatorResultError(result) {\n  if(Error.captureStackTrace){\n    Error.captureStackTrace(this, ValidatorResultError);\n  }\n  this.instance = result.instance;\n  this.schema = result.schema;\n  this.options = result.options;\n  this.errors = result.errors;\n}\nValidatorResultError.prototype = new Error();\nValidatorResultError.prototype.constructor = ValidatorResultError;\nValidatorResultError.prototype.name = \"Validation Error\";\n\n/**\n * Describes a problem with a Schema which prevents validation of an instance\n * @name SchemaError\n * @constructor\n */\nvar SchemaError = exports.SchemaError = function SchemaError (msg, schema) {\n  this.message = msg;\n  this.schema = schema;\n  Error.call(this, msg);\n  Error.captureStackTrace(this, SchemaError);\n};\nSchemaError.prototype = Object.create(Error.prototype,\n  {\n    constructor: {value: SchemaError, enumerable: false},\n    name: {value: 'SchemaError', enumerable: false},\n  });\n\nvar SchemaContext = exports.SchemaContext = function SchemaContext (schema, options, path, base, schemas) {\n  this.schema = schema;\n  this.options = options;\n  if(Array.isArray(path)){\n    this.path = path;\n    this.propertyPath = path.reduce(function(sum, item){\n      return sum + makeSuffix(item);\n    }, 'instance');\n  }else{\n    this.propertyPath = path;\n  }\n  this.base = base;\n  this.schemas = schemas;\n};\n\nSchemaContext.prototype.resolve = function resolve (target) {\n  return uri.resolve(this.base, target);\n};\n\nSchemaContext.prototype.makeChild = function makeChild(schema, propertyName){\n  var path = (propertyName===undefined) ? this.path : this.path.concat([propertyName]);\n  var id = schema.$id || schema.id;\n  var base = uri.resolve(this.base, id||'');\n  var ctx = new SchemaContext(schema, this.options, path, base, Object.create(this.schemas));\n  if(id && !ctx.schemas[base]){\n    ctx.schemas[base] = schema;\n  }\n  return ctx;\n};\n\nvar FORMAT_REGEXPS = exports.FORMAT_REGEXPS = {\n  // 7.3.1. Dates, Times, and Duration\n  'date-time': /^\\d{4}-(?:0[0-9]{1}|1[0-2]{1})-(3[01]|0[1-9]|[12][0-9])[tT ](2[0-4]|[01][0-9]):([0-5][0-9]):(60|[0-5][0-9])(\\.\\d+)?([zZ]|[+-]([0-5][0-9]):(60|[0-5][0-9]))$/,\n  'date': /^\\d{4}-(?:0[0-9]{1}|1[0-2]{1})-(3[01]|0[1-9]|[12][0-9])$/,\n  'time': /^(2[0-4]|[01][0-9]):([0-5][0-9]):(60|[0-5][0-9])$/,\n  'duration': /P(T\\d+(H(\\d+M(\\d+S)?)?|M(\\d+S)?|S)|\\d+(D|M(\\d+D)?|Y(\\d+M(\\d+D)?)?)(T\\d+(H(\\d+M(\\d+S)?)?|M(\\d+S)?|S))?|\\d+W)/i,\n\n  // 7.3.2. Email Addresses\n  // TODO: fix the email production\n  'email': /^(?:[\\w\\!\\#\\$\\%\\&\\'\\*\\+\\-\\/\\=\\?\\^\\`\\{\\|\\}\\~]+\\.)*[\\w\\!\\#\\$\\%\\&\\'\\*\\+\\-\\/\\=\\?\\^\\`\\{\\|\\}\\~]+@(?:(?:(?:[a-zA-Z0-9](?:[a-zA-Z0-9\\-](?!\\.)){0,61}[a-zA-Z0-9]?\\.)+[a-zA-Z0-9](?:[a-zA-Z0-9\\-](?!$)){0,61}[a-zA-Z0-9]?)|(?:\\[(?:(?:[01]?\\d{1,2}|2[0-4]\\d|25[0-5])\\.){3}(?:[01]?\\d{1,2}|2[0-4]\\d|25[0-5])\\]))$/,\n  'idn-email': /^(\"(?:[!#-\\[\\]-\\u{10FFFF}]|\\\\[\\t -\\u{10FFFF}])*\"|[!#-'*+\\-/-9=?A-Z\\^-\\u{10FFFF}](?:\\.?[!#-'*+\\-/-9=?A-Z\\^-\\u{10FFFF}])*)@([!#-'*+\\-/-9=?A-Z\\^-\\u{10FFFF}](?:\\.?[!#-'*+\\-/-9=?A-Z\\^-\\u{10FFFF}])*|\\[[!-Z\\^-\\u{10FFFF}]*\\])$/u,\n\n  // 7.3.3. Hostnames\n\n  // 7.3.4. IP Addresses\n  'ip-address': /^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/,\n  // FIXME whitespace is invalid\n  'ipv6': /^\\s*((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:)))(%.+)?\\s*$/,\n\n  // 7.3.5. Resource Identifiers\n  // TODO: A more accurate regular expression for \"uri\" goes:\n  // [A-Za-z][+\\-.0-9A-Za-z]*:((/(/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~])+|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~]+)?|[.0-:A-Fa-f]+)\\])?)(:\\d*)?)?)?#(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*|(/(/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~])+|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~]+)?|[.0-:A-Fa-f]+)\\])?)(:\\d*)?[/?]|[!$&-.0-;=?-Z_a-z~])|/?%[0-9A-Fa-f]{2}|[!$&-.0-;=?-Z_a-z~])(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*(#(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*)?|/(/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~])+(:\\d*)?|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~]+)?|[.0-:A-Fa-f]+)\\])?:\\d*|\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~]+)?|[.0-:A-Fa-f]+)\\])?)?)?\n  'uri': /^[a-zA-Z][a-zA-Z0-9+.-]*:[^\\s]*$/,\n  'uri-reference': /^(((([A-Za-z][+\\-.0-9A-Za-z]*(:%[0-9A-Fa-f]{2}|:[!$&-.0-;=?-Z_a-z~]|[/?])|\\?)(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*|([A-Za-z][+\\-.0-9A-Za-z]*:?)?)|([A-Za-z][+\\-.0-9A-Za-z]*:)?\\/((%[0-9A-Fa-f]{2}|\\/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~])+|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~]+)?|[.0-:A-Fa-f]+)\\])?)(:\\d*)?[/?]|[!$&-.0-;=?-Z_a-z~])(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*|(\\/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~])+|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~]+)?|[.0-:A-Fa-f]+)\\])?)(:\\d*)?)?))#(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*|(([A-Za-z][+\\-.0-9A-Za-z]*)?%[0-9A-Fa-f]{2}|[!$&-.0-9;=@_~]|[A-Za-z][+\\-.0-9A-Za-z]*[!$&-*,;=@_~])(%[0-9A-Fa-f]{2}|[!$&-.0-9;=@-Z_a-z~])*((([/?](%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*)?#|[/?])(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*)?|([A-Za-z][+\\-.0-9A-Za-z]*(:%[0-9A-Fa-f]{2}|:[!$&-.0-;=?-Z_a-z~]|[/?])|\\?)(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*|([A-Za-z][+\\-.0-9A-Za-z]*:)?\\/((%[0-9A-Fa-f]{2}|\\/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~])+|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~]+)?|[.0-:A-Fa-f]+)\\])?)(:\\d*)?[/?]|[!$&-.0-;=?-Z_a-z~])(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*|\\/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~])+(:\\d*)?|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~]+)?|[.0-:A-Fa-f]+)\\])?:\\d*|\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~]+)?|[.0-:A-Fa-f]+)\\])?)?|[A-Za-z][+\\-.0-9A-Za-z]*:?)?$/,\n  'iri': /^[a-zA-Z][a-zA-Z0-9+.-]*:[^\\s]*$/,\n  'iri-reference': /^(((([A-Za-z][+\\-.0-9A-Za-z]*(:%[0-9A-Fa-f]{2}|:[!$&-.0-;=?-Z_a-z~-\\u{10FFFF}]|[/?])|\\?)(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~-\\u{10FFFF}])*|([A-Za-z][+\\-.0-9A-Za-z]*:?)?)|([A-Za-z][+\\-.0-9A-Za-z]*:)?\\/((%[0-9A-Fa-f]{2}|\\/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~-\\u{10FFFF}])+|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~-\\u{10FFFF}]+)?|[.0-:A-Fa-f]+)\\])?)(:\\d*)?[/?]|[!$&-.0-;=?-Z_a-z~-\\u{10FFFF}])(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~-\\u{10FFFF}])*|(\\/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~-\\u{10FFFF}])+|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~-\\u{10FFFF}]+)?|[.0-:A-Fa-f]+)\\])?)(:\\d*)?)?))#(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~-\\u{10FFFF}])*|(([A-Za-z][+\\-.0-9A-Za-z]*)?%[0-9A-Fa-f]{2}|[!$&-.0-9;=@_~-\\u{10FFFF}]|[A-Za-z][+\\-.0-9A-Za-z]*[!$&-*,;=@_~-\\u{10FFFF}])(%[0-9A-Fa-f]{2}|[!$&-.0-9;=@-Z_a-z~-\\u{10FFFF}])*((([/?](%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~-\\u{10FFFF}])*)?#|[/?])(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~-\\u{10FFFF}])*)?|([A-Za-z][+\\-.0-9A-Za-z]*(:%[0-9A-Fa-f]{2}|:[!$&-.0-;=?-Z_a-z~-\\u{10FFFF}]|[/?])|\\?)(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~-\\u{10FFFF}])*|([A-Za-z][+\\-.0-9A-Za-z]*:)?\\/((%[0-9A-Fa-f]{2}|\\/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~-\\u{10FFFF}])+|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~-\\u{10FFFF}]+)?|[.0-:A-Fa-f]+)\\])?)(:\\d*)?[/?]|[!$&-.0-;=?-Z_a-z~-\\u{10FFFF}])(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~-\\u{10FFFF}])*|\\/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~-\\u{10FFFF}])+(:\\d*)?|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~-\\u{10FFFF}]+)?|[.0-:A-Fa-f]+)\\])?:\\d*|\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~-\\u{10FFFF}]+)?|[.0-:A-Fa-f]+)\\])?)?|[A-Za-z][+\\-.0-9A-Za-z]*:?)?$/u,\n  'uuid': /^[0-9A-F]{8}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{12}$/i,\n\n  // 7.3.6. uri-template\n  'uri-template': /(%[0-9a-f]{2}|[!#$&(-;=?@\\[\\]_a-z~]|\\{[!#&+,./;=?@|]?(%[0-9a-f]{2}|[0-9_a-z])(\\.?(%[0-9a-f]{2}|[0-9_a-z]))*(:[1-9]\\d{0,3}|\\*)?(,(%[0-9a-f]{2}|[0-9_a-z])(\\.?(%[0-9a-f]{2}|[0-9_a-z]))*(:[1-9]\\d{0,3}|\\*)?)*\\})*/iu,\n\n  // 7.3.7. JSON Pointers\n  'json-pointer': /^(\\/([\\x00-\\x2e0-@\\[-}\\x7f]|~[01])*)*$/iu,\n  'relative-json-pointer': /^\\d+(#|(\\/([\\x00-\\x2e0-@\\[-}\\x7f]|~[01])*)*)$/iu,\n\n  // hostname regex from: http://stackoverflow.com/a/1420225/5628\n  'hostname': /^(?=.{1,255}$)[0-9A-Za-z](?:(?:[0-9A-Za-z]|-){0,61}[0-9A-Za-z])?(?:\\.[0-9A-Za-z](?:(?:[0-9A-Za-z]|-){0,61}[0-9A-Za-z])?)*\\.?$/,\n  'host-name': /^(?=.{1,255}$)[0-9A-Za-z](?:(?:[0-9A-Za-z]|-){0,61}[0-9A-Za-z])?(?:\\.[0-9A-Za-z](?:(?:[0-9A-Za-z]|-){0,61}[0-9A-Za-z])?)*\\.?$/,\n\n  'utc-millisec': function (input) {\n    return (typeof input === 'string') && parseFloat(input) === parseInt(input, 10) && !isNaN(input);\n  },\n\n  // 7.3.8. regex\n  'regex': function (input) {\n    var result = true;\n    try {\n      new RegExp(input);\n    } catch (e) {\n      result = false;\n    }\n    return result;\n  },\n\n  // Other definitions\n  // \"style\" was removed from JSON Schema in draft-4 and is deprecated\n  'style': /[\\r\\n\\t ]*[^\\r\\n\\t ][^:]*:[\\r\\n\\t ]*[^\\r\\n\\t ;]*[\\r\\n\\t ]*;?/,\n  // \"color\" was removed from JSON Schema in draft-4 and is deprecated\n  'color': /^(#?([0-9A-Fa-f]{3}){1,2}\\b|aqua|black|blue|fuchsia|gray|green|lime|maroon|navy|olive|orange|purple|red|silver|teal|white|yellow|(rgb\\(\\s*\\b([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\b\\s*,\\s*\\b([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\b\\s*,\\s*\\b([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\b\\s*\\))|(rgb\\(\\s*(\\d?\\d%|100%)+\\s*,\\s*(\\d?\\d%|100%)+\\s*,\\s*(\\d?\\d%|100%)+\\s*\\)))$/,\n  'phone': /^\\+(?:[0-9] ?){6,14}[0-9]$/,\n  'alpha': /^[a-zA-Z]+$/,\n  'alphanumeric': /^[a-zA-Z0-9]+$/,\n};\n\nFORMAT_REGEXPS.regexp = FORMAT_REGEXPS.regex;\nFORMAT_REGEXPS.pattern = FORMAT_REGEXPS.regex;\nFORMAT_REGEXPS.ipv4 = FORMAT_REGEXPS['ip-address'];\n\nexports.isFormat = function isFormat (input, format, validator) {\n  if (typeof input === 'string' && FORMAT_REGEXPS[format] !== undefined) {\n    if (FORMAT_REGEXPS[format] instanceof RegExp) {\n      return FORMAT_REGEXPS[format].test(input);\n    }\n    if (typeof FORMAT_REGEXPS[format] === 'function') {\n      return FORMAT_REGEXPS[format](input);\n    }\n  } else if (validator && validator.customFormats &&\n      typeof validator.customFormats[format] === 'function') {\n    return validator.customFormats[format](input);\n  }\n  return true;\n};\n\nvar makeSuffix = exports.makeSuffix = function makeSuffix (key) {\n  key = key.toString();\n  // This function could be capable of outputting valid a ECMAScript string, but the\n  // resulting code for testing which form to use would be tens of thousands of characters long\n  // That means this will use the name form for some illegal forms\n  if (!key.match(/[.\\s\\[\\]]/) && !key.match(/^[\\d]/)) {\n    return '.' + key;\n  }\n  if (key.match(/^\\d+$/)) {\n    return '[' + key + ']';\n  }\n  return '[' + JSON.stringify(key) + ']';\n};\n\nexports.deepCompareStrict = function deepCompareStrict (a, b) {\n  if (typeof a !== typeof b) {\n    return false;\n  }\n  if (Array.isArray(a)) {\n    if (!Array.isArray(b)) {\n      return false;\n    }\n    if (a.length !== b.length) {\n      return false;\n    }\n    return a.every(function (v, i) {\n      return deepCompareStrict(a[i], b[i]);\n    });\n  }\n  if (typeof a === 'object') {\n    if (!a || !b) {\n      return a === b;\n    }\n    var aKeys = Object.keys(a);\n    var bKeys = Object.keys(b);\n    if (aKeys.length !== bKeys.length) {\n      return false;\n    }\n    return aKeys.every(function (v) {\n      return deepCompareStrict(a[v], b[v]);\n    });\n  }\n  return a === b;\n};\n\nfunction deepMerger (target, dst, e, i) {\n  if (typeof e === 'object') {\n    dst[i] = deepMerge(target[i], e);\n  } else {\n    if (target.indexOf(e) === -1) {\n      dst.push(e);\n    }\n  }\n}\n\nfunction copyist (src, dst, key) {\n  dst[key] = src[key];\n}\n\nfunction copyistWithDeepMerge (target, src, dst, key) {\n  if (typeof src[key] !== 'object' || !src[key]) {\n    dst[key] = src[key];\n  }\n  else {\n    if (!target[key]) {\n      dst[key] = src[key];\n    } else {\n      dst[key] = deepMerge(target[key], src[key]);\n    }\n  }\n}\n\nfunction deepMerge (target, src) {\n  var array = Array.isArray(src);\n  var dst = array && [] || {};\n\n  if (array) {\n    target = target || [];\n    dst = dst.concat(target);\n    src.forEach(deepMerger.bind(null, target, dst));\n  } else {\n    if (target && typeof target === 'object') {\n      Object.keys(target).forEach(copyist.bind(null, target, dst));\n    }\n    Object.keys(src).forEach(copyistWithDeepMerge.bind(null, target, src, dst));\n  }\n\n  return dst;\n}\n\nmodule.exports.deepMerge = deepMerge;\n\n/**\n * Validates instance against the provided schema\n * Implements URI+JSON Pointer encoding, e.g. \"%7e\"=\"~0\"=>\"~\", \"~1\"=\"%2f\"=>\"/\"\n * @param o\n * @param s The path to walk o along\n * @return any\n */\nexports.objectGetPath = function objectGetPath(o, s) {\n  var parts = s.split('/').slice(1);\n  var k;\n  while (typeof (k=parts.shift()) == 'string') {\n    var n = decodeURIComponent(k.replace(/~0/,'~').replace(/~1/g,'/'));\n    if (!(n in o)) return;\n    o = o[n];\n  }\n  return o;\n};\n\nfunction pathEncoder (v) {\n  return '/'+encodeURIComponent(v).replace(/~/g,'%7E');\n}\n/**\n * Accept an Array of property names and return a JSON Pointer URI fragment\n * @param Array a\n * @return {String}\n */\nexports.encodePath = function encodePointer(a){\n  // ~ must be encoded explicitly because hacks\n  // the slash is encoded by encodeURIComponent\n  return a.map(pathEncoder).join('');\n};\n\n\n/**\n * Calculate the number of decimal places a number uses\n * We need this to get correct results out of multipleOf and divisibleBy\n * when either figure is has decimal places, due to IEEE-754 float issues.\n * @param number\n * @returns {number}\n */\nexports.getDecimalPlaces = function getDecimalPlaces(number) {\n\n  var decimalPlaces = 0;\n  if (isNaN(number)) return decimalPlaces;\n\n  if (typeof number !== 'number') {\n    number = Number(number);\n  }\n\n  var parts = number.toString().split('e');\n  if (parts.length === 2) {\n    if (parts[1][0] !== '-') {\n      return decimalPlaces;\n    } else {\n      decimalPlaces = Number(parts[1].slice(1));\n    }\n  }\n\n  var decimalParts = parts[0].split('.');\n  if (decimalParts.length === 2) {\n    decimalPlaces += decimalParts[1].length;\n  }\n\n  return decimalPlaces;\n};\n\nexports.isSchema = function isSchema(val){\n  return (typeof val === 'object' && val) || (typeof val === 'boolean');\n};\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/jsonschema/lib/helpers.js\n");

/***/ }),

/***/ "./node_modules/jsonschema/lib/index.js":
/*!**********************************************!*\
  !*** ./node_modules/jsonschema/lib/index.js ***!
  \**********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval("\n\nvar Validator = module.exports.Validator = __webpack_require__(/*! ./validator */ \"./node_modules/jsonschema/lib/validator.js\");\n\nmodule.exports.ValidatorResult = __webpack_require__(/*! ./helpers */ \"./node_modules/jsonschema/lib/helpers.js\").ValidatorResult;\nmodule.exports.ValidatorResultError = __webpack_require__(/*! ./helpers */ \"./node_modules/jsonschema/lib/helpers.js\").ValidatorResultError;\nmodule.exports.ValidationError = __webpack_require__(/*! ./helpers */ \"./node_modules/jsonschema/lib/helpers.js\").ValidationError;\nmodule.exports.SchemaError = __webpack_require__(/*! ./helpers */ \"./node_modules/jsonschema/lib/helpers.js\").SchemaError;\nmodule.exports.SchemaScanResult = __webpack_require__(/*! ./scan */ \"./node_modules/jsonschema/lib/scan.js\").SchemaScanResult;\nmodule.exports.scan = __webpack_require__(/*! ./scan */ \"./node_modules/jsonschema/lib/scan.js\").scan;\n\nmodule.exports.validate = function (instance, schema, options) {\n  var v = new Validator();\n  return v.validate(instance, schema, options);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvanNvbnNjaGVtYS9saWIvaW5kZXguanMuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsZ0JBQWdCLCtHQUFpRDs7QUFFakUsaUlBQXFFO0FBQ3JFLDJJQUErRTtBQUMvRSxpSUFBcUU7QUFDckUseUhBQTZEO0FBQzdELDZIQUFvRTtBQUNwRSxxR0FBNEM7O0FBRTVDLHVCQUF1QjtBQUN2QjtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2pzb25zY2hlbWEvbGliL2luZGV4LmpzPzJhYjUiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG52YXIgVmFsaWRhdG9yID0gbW9kdWxlLmV4cG9ydHMuVmFsaWRhdG9yID0gcmVxdWlyZSgnLi92YWxpZGF0b3InKTtcblxubW9kdWxlLmV4cG9ydHMuVmFsaWRhdG9yUmVzdWx0ID0gcmVxdWlyZSgnLi9oZWxwZXJzJykuVmFsaWRhdG9yUmVzdWx0O1xubW9kdWxlLmV4cG9ydHMuVmFsaWRhdG9yUmVzdWx0RXJyb3IgPSByZXF1aXJlKCcuL2hlbHBlcnMnKS5WYWxpZGF0b3JSZXN1bHRFcnJvcjtcbm1vZHVsZS5leHBvcnRzLlZhbGlkYXRpb25FcnJvciA9IHJlcXVpcmUoJy4vaGVscGVycycpLlZhbGlkYXRpb25FcnJvcjtcbm1vZHVsZS5leHBvcnRzLlNjaGVtYUVycm9yID0gcmVxdWlyZSgnLi9oZWxwZXJzJykuU2NoZW1hRXJyb3I7XG5tb2R1bGUuZXhwb3J0cy5TY2hlbWFTY2FuUmVzdWx0ID0gcmVxdWlyZSgnLi9zY2FuJykuU2NoZW1hU2NhblJlc3VsdDtcbm1vZHVsZS5leHBvcnRzLnNjYW4gPSByZXF1aXJlKCcuL3NjYW4nKS5zY2FuO1xuXG5tb2R1bGUuZXhwb3J0cy52YWxpZGF0ZSA9IGZ1bmN0aW9uIChpbnN0YW5jZSwgc2NoZW1hLCBvcHRpb25zKSB7XG4gIHZhciB2ID0gbmV3IFZhbGlkYXRvcigpO1xuICByZXR1cm4gdi52YWxpZGF0ZShpbnN0YW5jZSwgc2NoZW1hLCBvcHRpb25zKTtcbn07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/jsonschema/lib/index.js\n");

/***/ }),

/***/ "./node_modules/jsonschema/lib/scan.js":
/*!*********************************************!*\
  !*** ./node_modules/jsonschema/lib/scan.js ***!
  \*********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval("\n\nvar urilib = __webpack_require__(/*! url */ \"./node_modules/next/dist/compiled/native-url/index.js\");\nvar helpers = __webpack_require__(/*! ./helpers */ \"./node_modules/jsonschema/lib/helpers.js\");\n\nmodule.exports.SchemaScanResult = SchemaScanResult;\nfunction SchemaScanResult(found, ref){\n  this.id = found;\n  this.ref = ref;\n}\n\n/**\n * Adds a schema with a certain urn to the Validator instance.\n * @param string uri\n * @param object schema\n * @return {Object}\n */\nmodule.exports.scan = function scan(base, schema){\n  function scanSchema(baseuri, schema){\n    if(!schema || typeof schema!='object') return;\n    // Mark all referenced schemas so we can tell later which schemas are referred to, but never defined\n    if(schema.$ref){\n      var resolvedUri = urilib.resolve(baseuri, schema.$ref);\n      ref[resolvedUri] = ref[resolvedUri] ? ref[resolvedUri]+1 : 0;\n      return;\n    }\n    var id = schema.$id || schema.id;\n    var ourBase = id ? urilib.resolve(baseuri, id) : baseuri;\n    if (ourBase) {\n      // If there's no fragment, append an empty one\n      if(ourBase.indexOf('#')<0) ourBase += '#';\n      if(found[ourBase]){\n        if(!helpers.deepCompareStrict(found[ourBase], schema)){\n          throw new Error('Schema <'+ourBase+'> already exists with different definition');\n        }\n        return found[ourBase];\n      }\n      found[ourBase] = schema;\n      // strip trailing fragment\n      if(ourBase[ourBase.length-1]=='#'){\n        found[ourBase.substring(0, ourBase.length-1)] = schema;\n      }\n    }\n    scanArray(ourBase+'/items', (Array.isArray(schema.items)?schema.items:[schema.items]));\n    scanArray(ourBase+'/extends', (Array.isArray(schema.extends)?schema.extends:[schema.extends]));\n    scanSchema(ourBase+'/additionalItems', schema.additionalItems);\n    scanObject(ourBase+'/properties', schema.properties);\n    scanSchema(ourBase+'/additionalProperties', schema.additionalProperties);\n    scanObject(ourBase+'/definitions', schema.definitions);\n    scanObject(ourBase+'/patternProperties', schema.patternProperties);\n    scanObject(ourBase+'/dependencies', schema.dependencies);\n    scanArray(ourBase+'/disallow', schema.disallow);\n    scanArray(ourBase+'/allOf', schema.allOf);\n    scanArray(ourBase+'/anyOf', schema.anyOf);\n    scanArray(ourBase+'/oneOf', schema.oneOf);\n    scanSchema(ourBase+'/not', schema.not);\n  }\n  function scanArray(baseuri, schemas){\n    if(!Array.isArray(schemas)) return;\n    for(var i=0; i<schemas.length; i++){\n      scanSchema(baseuri+'/'+i, schemas[i]);\n    }\n  }\n  function scanObject(baseuri, schemas){\n    if(!schemas || typeof schemas!='object') return;\n    for(var p in schemas){\n      scanSchema(baseuri+'/'+p, schemas[p]);\n    }\n  }\n\n  var found = {};\n  var ref = {};\n  scanSchema(base, schema);\n  return new SchemaScanResult(found, ref);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvanNvbnNjaGVtYS9saWIvc2Nhbi5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYixhQUFhLG1CQUFPLENBQUMsa0VBQUs7QUFDMUIsY0FBYyxtQkFBTyxDQUFDLDJEQUFXOztBQUVqQywrQkFBK0I7QUFDL0I7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQSxtQkFBbUI7QUFDbkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQixrQkFBa0I7QUFDbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2pzb25zY2hlbWEvbGliL3NjYW4uanM/YjRiZiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxudmFyIHVyaWxpYiA9IHJlcXVpcmUoJ3VybCcpO1xudmFyIGhlbHBlcnMgPSByZXF1aXJlKCcuL2hlbHBlcnMnKTtcblxubW9kdWxlLmV4cG9ydHMuU2NoZW1hU2NhblJlc3VsdCA9IFNjaGVtYVNjYW5SZXN1bHQ7XG5mdW5jdGlvbiBTY2hlbWFTY2FuUmVzdWx0KGZvdW5kLCByZWYpe1xuICB0aGlzLmlkID0gZm91bmQ7XG4gIHRoaXMucmVmID0gcmVmO1xufVxuXG4vKipcbiAqIEFkZHMgYSBzY2hlbWEgd2l0aCBhIGNlcnRhaW4gdXJuIHRvIHRoZSBWYWxpZGF0b3IgaW5zdGFuY2UuXG4gKiBAcGFyYW0gc3RyaW5nIHVyaVxuICogQHBhcmFtIG9iamVjdCBzY2hlbWFcbiAqIEByZXR1cm4ge09iamVjdH1cbiAqL1xubW9kdWxlLmV4cG9ydHMuc2NhbiA9IGZ1bmN0aW9uIHNjYW4oYmFzZSwgc2NoZW1hKXtcbiAgZnVuY3Rpb24gc2NhblNjaGVtYShiYXNldXJpLCBzY2hlbWEpe1xuICAgIGlmKCFzY2hlbWEgfHwgdHlwZW9mIHNjaGVtYSE9J29iamVjdCcpIHJldHVybjtcbiAgICAvLyBNYXJrIGFsbCByZWZlcmVuY2VkIHNjaGVtYXMgc28gd2UgY2FuIHRlbGwgbGF0ZXIgd2hpY2ggc2NoZW1hcyBhcmUgcmVmZXJyZWQgdG8sIGJ1dCBuZXZlciBkZWZpbmVkXG4gICAgaWYoc2NoZW1hLiRyZWYpe1xuICAgICAgdmFyIHJlc29sdmVkVXJpID0gdXJpbGliLnJlc29sdmUoYmFzZXVyaSwgc2NoZW1hLiRyZWYpO1xuICAgICAgcmVmW3Jlc29sdmVkVXJpXSA9IHJlZltyZXNvbHZlZFVyaV0gPyByZWZbcmVzb2x2ZWRVcmldKzEgOiAwO1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICB2YXIgaWQgPSBzY2hlbWEuJGlkIHx8IHNjaGVtYS5pZDtcbiAgICB2YXIgb3VyQmFzZSA9IGlkID8gdXJpbGliLnJlc29sdmUoYmFzZXVyaSwgaWQpIDogYmFzZXVyaTtcbiAgICBpZiAob3VyQmFzZSkge1xuICAgICAgLy8gSWYgdGhlcmUncyBubyBmcmFnbWVudCwgYXBwZW5kIGFuIGVtcHR5IG9uZVxuICAgICAgaWYob3VyQmFzZS5pbmRleE9mKCcjJyk8MCkgb3VyQmFzZSArPSAnIyc7XG4gICAgICBpZihmb3VuZFtvdXJCYXNlXSl7XG4gICAgICAgIGlmKCFoZWxwZXJzLmRlZXBDb21wYXJlU3RyaWN0KGZvdW5kW291ckJhc2VdLCBzY2hlbWEpKXtcbiAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ1NjaGVtYSA8JytvdXJCYXNlKyc+IGFscmVhZHkgZXhpc3RzIHdpdGggZGlmZmVyZW50IGRlZmluaXRpb24nKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gZm91bmRbb3VyQmFzZV07XG4gICAgICB9XG4gICAgICBmb3VuZFtvdXJCYXNlXSA9IHNjaGVtYTtcbiAgICAgIC8vIHN0cmlwIHRyYWlsaW5nIGZyYWdtZW50XG4gICAgICBpZihvdXJCYXNlW291ckJhc2UubGVuZ3RoLTFdPT0nIycpe1xuICAgICAgICBmb3VuZFtvdXJCYXNlLnN1YnN0cmluZygwLCBvdXJCYXNlLmxlbmd0aC0xKV0gPSBzY2hlbWE7XG4gICAgICB9XG4gICAgfVxuICAgIHNjYW5BcnJheShvdXJCYXNlKycvaXRlbXMnLCAoQXJyYXkuaXNBcnJheShzY2hlbWEuaXRlbXMpP3NjaGVtYS5pdGVtczpbc2NoZW1hLml0ZW1zXSkpO1xuICAgIHNjYW5BcnJheShvdXJCYXNlKycvZXh0ZW5kcycsIChBcnJheS5pc0FycmF5KHNjaGVtYS5leHRlbmRzKT9zY2hlbWEuZXh0ZW5kczpbc2NoZW1hLmV4dGVuZHNdKSk7XG4gICAgc2NhblNjaGVtYShvdXJCYXNlKycvYWRkaXRpb25hbEl0ZW1zJywgc2NoZW1hLmFkZGl0aW9uYWxJdGVtcyk7XG4gICAgc2Nhbk9iamVjdChvdXJCYXNlKycvcHJvcGVydGllcycsIHNjaGVtYS5wcm9wZXJ0aWVzKTtcbiAgICBzY2FuU2NoZW1hKG91ckJhc2UrJy9hZGRpdGlvbmFsUHJvcGVydGllcycsIHNjaGVtYS5hZGRpdGlvbmFsUHJvcGVydGllcyk7XG4gICAgc2Nhbk9iamVjdChvdXJCYXNlKycvZGVmaW5pdGlvbnMnLCBzY2hlbWEuZGVmaW5pdGlvbnMpO1xuICAgIHNjYW5PYmplY3Qob3VyQmFzZSsnL3BhdHRlcm5Qcm9wZXJ0aWVzJywgc2NoZW1hLnBhdHRlcm5Qcm9wZXJ0aWVzKTtcbiAgICBzY2FuT2JqZWN0KG91ckJhc2UrJy9kZXBlbmRlbmNpZXMnLCBzY2hlbWEuZGVwZW5kZW5jaWVzKTtcbiAgICBzY2FuQXJyYXkob3VyQmFzZSsnL2Rpc2FsbG93Jywgc2NoZW1hLmRpc2FsbG93KTtcbiAgICBzY2FuQXJyYXkob3VyQmFzZSsnL2FsbE9mJywgc2NoZW1hLmFsbE9mKTtcbiAgICBzY2FuQXJyYXkob3VyQmFzZSsnL2FueU9mJywgc2NoZW1hLmFueU9mKTtcbiAgICBzY2FuQXJyYXkob3VyQmFzZSsnL29uZU9mJywgc2NoZW1hLm9uZU9mKTtcbiAgICBzY2FuU2NoZW1hKG91ckJhc2UrJy9ub3QnLCBzY2hlbWEubm90KTtcbiAgfVxuICBmdW5jdGlvbiBzY2FuQXJyYXkoYmFzZXVyaSwgc2NoZW1hcyl7XG4gICAgaWYoIUFycmF5LmlzQXJyYXkoc2NoZW1hcykpIHJldHVybjtcbiAgICBmb3IodmFyIGk9MDsgaTxzY2hlbWFzLmxlbmd0aDsgaSsrKXtcbiAgICAgIHNjYW5TY2hlbWEoYmFzZXVyaSsnLycraSwgc2NoZW1hc1tpXSk7XG4gICAgfVxuICB9XG4gIGZ1bmN0aW9uIHNjYW5PYmplY3QoYmFzZXVyaSwgc2NoZW1hcyl7XG4gICAgaWYoIXNjaGVtYXMgfHwgdHlwZW9mIHNjaGVtYXMhPSdvYmplY3QnKSByZXR1cm47XG4gICAgZm9yKHZhciBwIGluIHNjaGVtYXMpe1xuICAgICAgc2NhblNjaGVtYShiYXNldXJpKycvJytwLCBzY2hlbWFzW3BdKTtcbiAgICB9XG4gIH1cblxuICB2YXIgZm91bmQgPSB7fTtcbiAgdmFyIHJlZiA9IHt9O1xuICBzY2FuU2NoZW1hKGJhc2UsIHNjaGVtYSk7XG4gIHJldHVybiBuZXcgU2NoZW1hU2NhblJlc3VsdChmb3VuZCwgcmVmKTtcbn07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/jsonschema/lib/scan.js\n");

/***/ }),

/***/ "./node_modules/jsonschema/lib/validator.js":
/*!**************************************************!*\
  !*** ./node_modules/jsonschema/lib/validator.js ***!
  \**************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval("\n\nvar urilib = __webpack_require__(/*! url */ \"./node_modules/next/dist/compiled/native-url/index.js\");\n\nvar attribute = __webpack_require__(/*! ./attribute */ \"./node_modules/jsonschema/lib/attribute.js\");\nvar helpers = __webpack_require__(/*! ./helpers */ \"./node_modules/jsonschema/lib/helpers.js\");\nvar scanSchema = (__webpack_require__(/*! ./scan */ \"./node_modules/jsonschema/lib/scan.js\").scan);\nvar ValidatorResult = helpers.ValidatorResult;\nvar ValidatorResultError = helpers.ValidatorResultError;\nvar SchemaError = helpers.SchemaError;\nvar SchemaContext = helpers.SchemaContext;\n//var anonymousBase = 'vnd.jsonschema:///';\nvar anonymousBase = '/';\n\n/**\n * Creates a new Validator object\n * @name Validator\n * @constructor\n */\nvar Validator = function Validator () {\n  // Allow a validator instance to override global custom formats or to have their\n  // own custom formats.\n  this.customFormats = Object.create(Validator.prototype.customFormats);\n  this.schemas = {};\n  this.unresolvedRefs = [];\n\n  // Use Object.create to make this extensible without Validator instances stepping on each other's toes.\n  this.types = Object.create(types);\n  this.attributes = Object.create(attribute.validators);\n};\n\n// Allow formats to be registered globally.\nValidator.prototype.customFormats = {};\n\n// Hint at the presence of a property\nValidator.prototype.schemas = null;\nValidator.prototype.types = null;\nValidator.prototype.attributes = null;\nValidator.prototype.unresolvedRefs = null;\n\n/**\n * Adds a schema with a certain urn to the Validator instance.\n * @param schema\n * @param urn\n * @return {Object}\n */\nValidator.prototype.addSchema = function addSchema (schema, base) {\n  var self = this;\n  if (!schema) {\n    return null;\n  }\n  var scan = scanSchema(base||anonymousBase, schema);\n  var ourUri = base || schema.$id || schema.id;\n  for(var uri in scan.id){\n    this.schemas[uri] = scan.id[uri];\n  }\n  for(var uri in scan.ref){\n    // If this schema is already defined, it will be filtered out by the next step\n    this.unresolvedRefs.push(uri);\n  }\n  // Remove newly defined schemas from unresolvedRefs\n  this.unresolvedRefs = this.unresolvedRefs.filter(function(uri){\n    return typeof self.schemas[uri]==='undefined';\n  });\n  return this.schemas[ourUri];\n};\n\nValidator.prototype.addSubSchemaArray = function addSubSchemaArray(baseuri, schemas) {\n  if(!Array.isArray(schemas)) return;\n  for(var i=0; i<schemas.length; i++){\n    this.addSubSchema(baseuri, schemas[i]);\n  }\n};\n\nValidator.prototype.addSubSchemaObject = function addSubSchemaArray(baseuri, schemas) {\n  if(!schemas || typeof schemas!='object') return;\n  for(var p in schemas){\n    this.addSubSchema(baseuri, schemas[p]);\n  }\n};\n\n\n\n/**\n * Sets all the schemas of the Validator instance.\n * @param schemas\n */\nValidator.prototype.setSchemas = function setSchemas (schemas) {\n  this.schemas = schemas;\n};\n\n/**\n * Returns the schema of a certain urn\n * @param urn\n */\nValidator.prototype.getSchema = function getSchema (urn) {\n  return this.schemas[urn];\n};\n\n/**\n * Validates instance against the provided schema\n * @param instance\n * @param schema\n * @param [options]\n * @param [ctx]\n * @return {Array}\n */\nValidator.prototype.validate = function validate (instance, schema, options, ctx) {\n  if((typeof schema !== 'boolean' && typeof schema !== 'object') || schema === null){\n    throw new SchemaError('Expected `schema` to be an object or boolean');\n  }\n  if (!options) {\n    options = {};\n  }\n  // This section indexes subschemas in the provided schema, so they don't need to be added with Validator#addSchema\n  // This will work so long as the function at uri.resolve() will resolve a relative URI to a relative URI\n  var id = schema.$id || schema.id;\n  var base = urilib.resolve(options.base||anonymousBase, id||'');\n  if(!ctx){\n    ctx = new SchemaContext(schema, options, [], base, Object.create(this.schemas));\n    if (!ctx.schemas[base]) {\n      ctx.schemas[base] = schema;\n    }\n    var found = scanSchema(base, schema);\n    for(var n in found.id){\n      var sch = found.id[n];\n      ctx.schemas[n] = sch;\n    }\n  }\n  if(options.required && instance===undefined){\n    var result = new ValidatorResult(instance, schema, options, ctx);\n    result.addError('is required, but is undefined');\n    return result;\n  }\n  var result = this.validateSchema(instance, schema, options, ctx);\n  if (!result) {\n    throw new Error('Result undefined');\n  }else if(options.throwAll && result.errors.length){\n    throw new ValidatorResultError(result);\n  }\n  return result;\n};\n\n/**\n* @param Object schema\n* @return mixed schema uri or false\n*/\nfunction shouldResolve(schema) {\n  var ref = (typeof schema === 'string') ? schema : schema.$ref;\n  if (typeof ref=='string') return ref;\n  return false;\n}\n\n/**\n * Validates an instance against the schema (the actual work horse)\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @private\n * @return {ValidatorResult}\n */\nValidator.prototype.validateSchema = function validateSchema (instance, schema, options, ctx) {\n  var result = new ValidatorResult(instance, schema, options, ctx);\n\n  // Support for the true/false schemas\n  if(typeof schema==='boolean') {\n    if(schema===true){\n      // `true` is always valid\n      schema = {};\n    }else if(schema===false){\n      // `false` is always invalid\n      schema = {type: []};\n    }\n  }else if(!schema){\n    // This might be a string\n    throw new Error(\"schema is undefined\");\n  }\n\n  if (schema['extends']) {\n    if (Array.isArray(schema['extends'])) {\n      var schemaobj = {schema: schema, ctx: ctx};\n      schema['extends'].forEach(this.schemaTraverser.bind(this, schemaobj));\n      schema = schemaobj.schema;\n      schemaobj.schema = null;\n      schemaobj.ctx = null;\n      schemaobj = null;\n    } else {\n      schema = helpers.deepMerge(schema, this.superResolve(schema['extends'], ctx));\n    }\n  }\n\n  // If passed a string argument, load that schema URI\n  var switchSchema = shouldResolve(schema);\n  if (switchSchema) {\n    var resolved = this.resolve(schema, switchSchema, ctx);\n    var subctx = new SchemaContext(resolved.subschema, options, ctx.path, resolved.switchSchema, ctx.schemas);\n    return this.validateSchema(instance, resolved.subschema, options, subctx);\n  }\n\n  var skipAttributes = options && options.skipAttributes || [];\n  // Validate each schema attribute against the instance\n  for (var key in schema) {\n    if (!attribute.ignoreProperties[key] && skipAttributes.indexOf(key) < 0) {\n      var validatorErr = null;\n      var validator = this.attributes[key];\n      if (validator) {\n        validatorErr = validator.call(this, instance, schema, options, ctx);\n      } else if (options.allowUnknownAttributes === false) {\n        // This represents an error with the schema itself, not an invalid instance\n        throw new SchemaError(\"Unsupported attribute: \" + key, schema);\n      }\n      if (validatorErr) {\n        result.importErrors(validatorErr);\n      }\n    }\n  }\n\n  if (typeof options.rewrite == 'function') {\n    var value = options.rewrite.call(this, instance, schema, options, ctx);\n    result.instance = value;\n  }\n  return result;\n};\n\n/**\n* @private\n* @param Object schema\n* @param SchemaContext ctx\n* @returns Object schema or resolved schema\n*/\nValidator.prototype.schemaTraverser = function schemaTraverser (schemaobj, s) {\n  schemaobj.schema = helpers.deepMerge(schemaobj.schema, this.superResolve(s, schemaobj.ctx));\n};\n\n/**\n* @private\n* @param Object schema\n* @param SchemaContext ctx\n* @returns Object schema or resolved schema\n*/\nValidator.prototype.superResolve = function superResolve (schema, ctx) {\n  var ref = shouldResolve(schema);\n  if(ref) {\n    return this.resolve(schema, ref, ctx).subschema;\n  }\n  return schema;\n};\n\n/**\n* @private\n* @param Object schema\n* @param Object switchSchema\n* @param SchemaContext ctx\n* @return Object resolved schemas {subschema:String, switchSchema: String}\n* @throws SchemaError\n*/\nValidator.prototype.resolve = function resolve (schema, switchSchema, ctx) {\n  switchSchema = ctx.resolve(switchSchema);\n  // First see if the schema exists under the provided URI\n  if (ctx.schemas[switchSchema]) {\n    return {subschema: ctx.schemas[switchSchema], switchSchema: switchSchema};\n  }\n  // Else try walking the property pointer\n  var parsed = urilib.parse(switchSchema);\n  var fragment = parsed && parsed.hash;\n  var document = fragment && fragment.length && switchSchema.substr(0, switchSchema.length - fragment.length);\n  if (!document || !ctx.schemas[document]) {\n    throw new SchemaError(\"no such schema <\" + switchSchema + \">\", schema);\n  }\n  var subschema = helpers.objectGetPath(ctx.schemas[document], fragment.substr(1));\n  if(subschema===undefined){\n    throw new SchemaError(\"no such schema \" + fragment + \" located in <\" + document + \">\", schema);\n  }\n  return {subschema: subschema, switchSchema: switchSchema};\n};\n\n/**\n * Tests whether the instance if of a certain type.\n * @private\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @param type\n * @return {boolean}\n */\nValidator.prototype.testType = function validateType (instance, schema, options, ctx, type) {\n  if(type===undefined){\n    return;\n  }else if(type===null){\n    throw new SchemaError('Unexpected null in \"type\" keyword');\n  }\n  if (typeof this.types[type] == 'function') {\n    return this.types[type].call(this, instance);\n  }\n  if (type && typeof type == 'object') {\n    var res = this.validateSchema(instance, type, options, ctx);\n    return res === undefined || !(res && res.errors.length);\n  }\n  // Undefined or properties not on the list are acceptable, same as not being defined\n  return true;\n};\n\nvar types = Validator.prototype.types = {};\ntypes.string = function testString (instance) {\n  return typeof instance == 'string';\n};\ntypes.number = function testNumber (instance) {\n  // isFinite returns false for NaN, Infinity, and -Infinity\n  return typeof instance == 'number' && isFinite(instance);\n};\ntypes.integer = function testInteger (instance) {\n  return (typeof instance == 'number') && instance % 1 === 0;\n};\ntypes.boolean = function testBoolean (instance) {\n  return typeof instance == 'boolean';\n};\ntypes.array = function testArray (instance) {\n  return Array.isArray(instance);\n};\ntypes['null'] = function testNull (instance) {\n  return instance === null;\n};\ntypes.date = function testDate (instance) {\n  return instance instanceof Date;\n};\ntypes.any = function testAny (instance) {\n  return true;\n};\ntypes.object = function testObject (instance) {\n  // TODO: fix this - see #15\n  return instance && (typeof instance === 'object') && !(Array.isArray(instance)) && !(instance instanceof Date);\n};\n\nmodule.exports = Validator;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/jsonschema/lib/validator.js\n");

/***/ }),

/***/ "./node_modules/md5.js/index.js":
/*!**************************************!*\
  !*** ./node_modules/md5.js/index.js ***!
  \**************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval("\nvar inherits = __webpack_require__(/*! inherits */ \"./node_modules/inherits/inherits_browser.js\")\nvar HashBase = __webpack_require__(/*! hash-base */ \"./node_modules/md5.js/node_modules/hash-base/index.js\")\nvar Buffer = (__webpack_require__(/*! safe-buffer */ \"./node_modules/safe-buffer/index.js\").Buffer)\n\nvar ARRAY16 = new Array(16)\n\nfunction MD5 () {\n  HashBase.call(this, 64)\n\n  // state\n  this._a = 0x67452301\n  this._b = 0xefcdab89\n  this._c = 0x98badcfe\n  this._d = 0x10325476\n}\n\ninherits(MD5, HashBase)\n\nMD5.prototype._update = function () {\n  var M = ARRAY16\n  for (var i = 0; i < 16; ++i) M[i] = this._block.readInt32LE(i * 4)\n\n  var a = this._a\n  var b = this._b\n  var c = this._c\n  var d = this._d\n\n  a = fnF(a, b, c, d, M[0], 0xd76aa478, 7)\n  d = fnF(d, a, b, c, M[1], 0xe8c7b756, 12)\n  c = fnF(c, d, a, b, M[2], 0x242070db, 17)\n  b = fnF(b, c, d, a, M[3], 0xc1bdceee, 22)\n  a = fnF(a, b, c, d, M[4], 0xf57c0faf, 7)\n  d = fnF(d, a, b, c, M[5], 0x4787c62a, 12)\n  c = fnF(c, d, a, b, M[6], 0xa8304613, 17)\n  b = fnF(b, c, d, a, M[7], 0xfd469501, 22)\n  a = fnF(a, b, c, d, M[8], 0x698098d8, 7)\n  d = fnF(d, a, b, c, M[9], 0x8b44f7af, 12)\n  c = fnF(c, d, a, b, M[10], 0xffff5bb1, 17)\n  b = fnF(b, c, d, a, M[11], 0x895cd7be, 22)\n  a = fnF(a, b, c, d, M[12], 0x6b901122, 7)\n  d = fnF(d, a, b, c, M[13], 0xfd987193, 12)\n  c = fnF(c, d, a, b, M[14], 0xa679438e, 17)\n  b = fnF(b, c, d, a, M[15], 0x49b40821, 22)\n\n  a = fnG(a, b, c, d, M[1], 0xf61e2562, 5)\n  d = fnG(d, a, b, c, M[6], 0xc040b340, 9)\n  c = fnG(c, d, a, b, M[11], 0x265e5a51, 14)\n  b = fnG(b, c, d, a, M[0], 0xe9b6c7aa, 20)\n  a = fnG(a, b, c, d, M[5], 0xd62f105d, 5)\n  d = fnG(d, a, b, c, M[10], 0x02441453, 9)\n  c = fnG(c, d, a, b, M[15], 0xd8a1e681, 14)\n  b = fnG(b, c, d, a, M[4], 0xe7d3fbc8, 20)\n  a = fnG(a, b, c, d, M[9], 0x21e1cde6, 5)\n  d = fnG(d, a, b, c, M[14], 0xc33707d6, 9)\n  c = fnG(c, d, a, b, M[3], 0xf4d50d87, 14)\n  b = fnG(b, c, d, a, M[8], 0x455a14ed, 20)\n  a = fnG(a, b, c, d, M[13], 0xa9e3e905, 5)\n  d = fnG(d, a, b, c, M[2], 0xfcefa3f8, 9)\n  c = fnG(c, d, a, b, M[7], 0x676f02d9, 14)\n  b = fnG(b, c, d, a, M[12], 0x8d2a4c8a, 20)\n\n  a = fnH(a, b, c, d, M[5], 0xfffa3942, 4)\n  d = fnH(d, a, b, c, M[8], 0x8771f681, 11)\n  c = fnH(c, d, a, b, M[11], 0x6d9d6122, 16)\n  b = fnH(b, c, d, a, M[14], 0xfde5380c, 23)\n  a = fnH(a, b, c, d, M[1], 0xa4beea44, 4)\n  d = fnH(d, a, b, c, M[4], 0x4bdecfa9, 11)\n  c = fnH(c, d, a, b, M[7], 0xf6bb4b60, 16)\n  b = fnH(b, c, d, a, M[10], 0xbebfbc70, 23)\n  a = fnH(a, b, c, d, M[13], 0x289b7ec6, 4)\n  d = fnH(d, a, b, c, M[0], 0xeaa127fa, 11)\n  c = fnH(c, d, a, b, M[3], 0xd4ef3085, 16)\n  b = fnH(b, c, d, a, M[6], 0x04881d05, 23)\n  a = fnH(a, b, c, d, M[9], 0xd9d4d039, 4)\n  d = fnH(d, a, b, c, M[12], 0xe6db99e5, 11)\n  c = fnH(c, d, a, b, M[15], 0x1fa27cf8, 16)\n  b = fnH(b, c, d, a, M[2], 0xc4ac5665, 23)\n\n  a = fnI(a, b, c, d, M[0], 0xf4292244, 6)\n  d = fnI(d, a, b, c, M[7], 0x432aff97, 10)\n  c = fnI(c, d, a, b, M[14], 0xab9423a7, 15)\n  b = fnI(b, c, d, a, M[5], 0xfc93a039, 21)\n  a = fnI(a, b, c, d, M[12], 0x655b59c3, 6)\n  d = fnI(d, a, b, c, M[3], 0x8f0ccc92, 10)\n  c = fnI(c, d, a, b, M[10], 0xffeff47d, 15)\n  b = fnI(b, c, d, a, M[1], 0x85845dd1, 21)\n  a = fnI(a, b, c, d, M[8], 0x6fa87e4f, 6)\n  d = fnI(d, a, b, c, M[15], 0xfe2ce6e0, 10)\n  c = fnI(c, d, a, b, M[6], 0xa3014314, 15)\n  b = fnI(b, c, d, a, M[13], 0x4e0811a1, 21)\n  a = fnI(a, b, c, d, M[4], 0xf7537e82, 6)\n  d = fnI(d, a, b, c, M[11], 0xbd3af235, 10)\n  c = fnI(c, d, a, b, M[2], 0x2ad7d2bb, 15)\n  b = fnI(b, c, d, a, M[9], 0xeb86d391, 21)\n\n  this._a = (this._a + a) | 0\n  this._b = (this._b + b) | 0\n  this._c = (this._c + c) | 0\n  this._d = (this._d + d) | 0\n}\n\nMD5.prototype._digest = function () {\n  // create padding and handle blocks\n  this._block[this._blockOffset++] = 0x80\n  if (this._blockOffset > 56) {\n    this._block.fill(0, this._blockOffset, 64)\n    this._update()\n    this._blockOffset = 0\n  }\n\n  this._block.fill(0, this._blockOffset, 56)\n  this._block.writeUInt32LE(this._length[0], 56)\n  this._block.writeUInt32LE(this._length[1], 60)\n  this._update()\n\n  // produce result\n  var buffer = Buffer.allocUnsafe(16)\n  buffer.writeInt32LE(this._a, 0)\n  buffer.writeInt32LE(this._b, 4)\n  buffer.writeInt32LE(this._c, 8)\n  buffer.writeInt32LE(this._d, 12)\n  return buffer\n}\n\nfunction rotl (x, n) {\n  return (x << n) | (x >>> (32 - n))\n}\n\nfunction fnF (a, b, c, d, m, k, s) {\n  return (rotl((a + ((b & c) | ((~b) & d)) + m + k) | 0, s) + b) | 0\n}\n\nfunction fnG (a, b, c, d, m, k, s) {\n  return (rotl((a + ((b & d) | (c & (~d))) + m + k) | 0, s) + b) | 0\n}\n\nfunction fnH (a, b, c, d, m, k, s) {\n  return (rotl((a + (b ^ c ^ d) + m + k) | 0, s) + b) | 0\n}\n\nfunction fnI (a, b, c, d, m, k, s) {\n  return (rotl((a + ((c ^ (b | (~d)))) + m + k) | 0, s) + b) | 0\n}\n\nmodule.exports = MD5\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWQ1LmpzL2luZGV4LmpzLmpzIiwibWFwcGluZ3MiOiJBQUFZO0FBQ1osZUFBZSxtQkFBTyxDQUFDLDZEQUFVO0FBQ2pDLGVBQWUsbUJBQU8sQ0FBQyx3RUFBVztBQUNsQyxhQUFhLHNGQUE2Qjs7QUFFMUM7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBLGtCQUFrQixRQUFROztBQUUxQjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9tZDUuanMvaW5kZXguanM/NjczYyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCdcbnZhciBpbmhlcml0cyA9IHJlcXVpcmUoJ2luaGVyaXRzJylcbnZhciBIYXNoQmFzZSA9IHJlcXVpcmUoJ2hhc2gtYmFzZScpXG52YXIgQnVmZmVyID0gcmVxdWlyZSgnc2FmZS1idWZmZXInKS5CdWZmZXJcblxudmFyIEFSUkFZMTYgPSBuZXcgQXJyYXkoMTYpXG5cbmZ1bmN0aW9uIE1ENSAoKSB7XG4gIEhhc2hCYXNlLmNhbGwodGhpcywgNjQpXG5cbiAgLy8gc3RhdGVcbiAgdGhpcy5fYSA9IDB4Njc0NTIzMDFcbiAgdGhpcy5fYiA9IDB4ZWZjZGFiODlcbiAgdGhpcy5fYyA9IDB4OThiYWRjZmVcbiAgdGhpcy5fZCA9IDB4MTAzMjU0NzZcbn1cblxuaW5oZXJpdHMoTUQ1LCBIYXNoQmFzZSlcblxuTUQ1LnByb3RvdHlwZS5fdXBkYXRlID0gZnVuY3Rpb24gKCkge1xuICB2YXIgTSA9IEFSUkFZMTZcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCAxNjsgKytpKSBNW2ldID0gdGhpcy5fYmxvY2sucmVhZEludDMyTEUoaSAqIDQpXG5cbiAgdmFyIGEgPSB0aGlzLl9hXG4gIHZhciBiID0gdGhpcy5fYlxuICB2YXIgYyA9IHRoaXMuX2NcbiAgdmFyIGQgPSB0aGlzLl9kXG5cbiAgYSA9IGZuRihhLCBiLCBjLCBkLCBNWzBdLCAweGQ3NmFhNDc4LCA3KVxuICBkID0gZm5GKGQsIGEsIGIsIGMsIE1bMV0sIDB4ZThjN2I3NTYsIDEyKVxuICBjID0gZm5GKGMsIGQsIGEsIGIsIE1bMl0sIDB4MjQyMDcwZGIsIDE3KVxuICBiID0gZm5GKGIsIGMsIGQsIGEsIE1bM10sIDB4YzFiZGNlZWUsIDIyKVxuICBhID0gZm5GKGEsIGIsIGMsIGQsIE1bNF0sIDB4ZjU3YzBmYWYsIDcpXG4gIGQgPSBmbkYoZCwgYSwgYiwgYywgTVs1XSwgMHg0Nzg3YzYyYSwgMTIpXG4gIGMgPSBmbkYoYywgZCwgYSwgYiwgTVs2XSwgMHhhODMwNDYxMywgMTcpXG4gIGIgPSBmbkYoYiwgYywgZCwgYSwgTVs3XSwgMHhmZDQ2OTUwMSwgMjIpXG4gIGEgPSBmbkYoYSwgYiwgYywgZCwgTVs4XSwgMHg2OTgwOThkOCwgNylcbiAgZCA9IGZuRihkLCBhLCBiLCBjLCBNWzldLCAweDhiNDRmN2FmLCAxMilcbiAgYyA9IGZuRihjLCBkLCBhLCBiLCBNWzEwXSwgMHhmZmZmNWJiMSwgMTcpXG4gIGIgPSBmbkYoYiwgYywgZCwgYSwgTVsxMV0sIDB4ODk1Y2Q3YmUsIDIyKVxuICBhID0gZm5GKGEsIGIsIGMsIGQsIE1bMTJdLCAweDZiOTAxMTIyLCA3KVxuICBkID0gZm5GKGQsIGEsIGIsIGMsIE1bMTNdLCAweGZkOTg3MTkzLCAxMilcbiAgYyA9IGZuRihjLCBkLCBhLCBiLCBNWzE0XSwgMHhhNjc5NDM4ZSwgMTcpXG4gIGIgPSBmbkYoYiwgYywgZCwgYSwgTVsxNV0sIDB4NDliNDA4MjEsIDIyKVxuXG4gIGEgPSBmbkcoYSwgYiwgYywgZCwgTVsxXSwgMHhmNjFlMjU2MiwgNSlcbiAgZCA9IGZuRyhkLCBhLCBiLCBjLCBNWzZdLCAweGMwNDBiMzQwLCA5KVxuICBjID0gZm5HKGMsIGQsIGEsIGIsIE1bMTFdLCAweDI2NWU1YTUxLCAxNClcbiAgYiA9IGZuRyhiLCBjLCBkLCBhLCBNWzBdLCAweGU5YjZjN2FhLCAyMClcbiAgYSA9IGZuRyhhLCBiLCBjLCBkLCBNWzVdLCAweGQ2MmYxMDVkLCA1KVxuICBkID0gZm5HKGQsIGEsIGIsIGMsIE1bMTBdLCAweDAyNDQxNDUzLCA5KVxuICBjID0gZm5HKGMsIGQsIGEsIGIsIE1bMTVdLCAweGQ4YTFlNjgxLCAxNClcbiAgYiA9IGZuRyhiLCBjLCBkLCBhLCBNWzRdLCAweGU3ZDNmYmM4LCAyMClcbiAgYSA9IGZuRyhhLCBiLCBjLCBkLCBNWzldLCAweDIxZTFjZGU2LCA1KVxuICBkID0gZm5HKGQsIGEsIGIsIGMsIE1bMTRdLCAweGMzMzcwN2Q2LCA5KVxuICBjID0gZm5HKGMsIGQsIGEsIGIsIE1bM10sIDB4ZjRkNTBkODcsIDE0KVxuICBiID0gZm5HKGIsIGMsIGQsIGEsIE1bOF0sIDB4NDU1YTE0ZWQsIDIwKVxuICBhID0gZm5HKGEsIGIsIGMsIGQsIE1bMTNdLCAweGE5ZTNlOTA1LCA1KVxuICBkID0gZm5HKGQsIGEsIGIsIGMsIE1bMl0sIDB4ZmNlZmEzZjgsIDkpXG4gIGMgPSBmbkcoYywgZCwgYSwgYiwgTVs3XSwgMHg2NzZmMDJkOSwgMTQpXG4gIGIgPSBmbkcoYiwgYywgZCwgYSwgTVsxMl0sIDB4OGQyYTRjOGEsIDIwKVxuXG4gIGEgPSBmbkgoYSwgYiwgYywgZCwgTVs1XSwgMHhmZmZhMzk0MiwgNClcbiAgZCA9IGZuSChkLCBhLCBiLCBjLCBNWzhdLCAweDg3NzFmNjgxLCAxMSlcbiAgYyA9IGZuSChjLCBkLCBhLCBiLCBNWzExXSwgMHg2ZDlkNjEyMiwgMTYpXG4gIGIgPSBmbkgoYiwgYywgZCwgYSwgTVsxNF0sIDB4ZmRlNTM4MGMsIDIzKVxuICBhID0gZm5IKGEsIGIsIGMsIGQsIE1bMV0sIDB4YTRiZWVhNDQsIDQpXG4gIGQgPSBmbkgoZCwgYSwgYiwgYywgTVs0XSwgMHg0YmRlY2ZhOSwgMTEpXG4gIGMgPSBmbkgoYywgZCwgYSwgYiwgTVs3XSwgMHhmNmJiNGI2MCwgMTYpXG4gIGIgPSBmbkgoYiwgYywgZCwgYSwgTVsxMF0sIDB4YmViZmJjNzAsIDIzKVxuICBhID0gZm5IKGEsIGIsIGMsIGQsIE1bMTNdLCAweDI4OWI3ZWM2LCA0KVxuICBkID0gZm5IKGQsIGEsIGIsIGMsIE1bMF0sIDB4ZWFhMTI3ZmEsIDExKVxuICBjID0gZm5IKGMsIGQsIGEsIGIsIE1bM10sIDB4ZDRlZjMwODUsIDE2KVxuICBiID0gZm5IKGIsIGMsIGQsIGEsIE1bNl0sIDB4MDQ4ODFkMDUsIDIzKVxuICBhID0gZm5IKGEsIGIsIGMsIGQsIE1bOV0sIDB4ZDlkNGQwMzksIDQpXG4gIGQgPSBmbkgoZCwgYSwgYiwgYywgTVsxMl0sIDB4ZTZkYjk5ZTUsIDExKVxuICBjID0gZm5IKGMsIGQsIGEsIGIsIE1bMTVdLCAweDFmYTI3Y2Y4LCAxNilcbiAgYiA9IGZuSChiLCBjLCBkLCBhLCBNWzJdLCAweGM0YWM1NjY1LCAyMylcblxuICBhID0gZm5JKGEsIGIsIGMsIGQsIE1bMF0sIDB4ZjQyOTIyNDQsIDYpXG4gIGQgPSBmbkkoZCwgYSwgYiwgYywgTVs3XSwgMHg0MzJhZmY5NywgMTApXG4gIGMgPSBmbkkoYywgZCwgYSwgYiwgTVsxNF0sIDB4YWI5NDIzYTcsIDE1KVxuICBiID0gZm5JKGIsIGMsIGQsIGEsIE1bNV0sIDB4ZmM5M2EwMzksIDIxKVxuICBhID0gZm5JKGEsIGIsIGMsIGQsIE1bMTJdLCAweDY1NWI1OWMzLCA2KVxuICBkID0gZm5JKGQsIGEsIGIsIGMsIE1bM10sIDB4OGYwY2NjOTIsIDEwKVxuICBjID0gZm5JKGMsIGQsIGEsIGIsIE1bMTBdLCAweGZmZWZmNDdkLCAxNSlcbiAgYiA9IGZuSShiLCBjLCBkLCBhLCBNWzFdLCAweDg1ODQ1ZGQxLCAyMSlcbiAgYSA9IGZuSShhLCBiLCBjLCBkLCBNWzhdLCAweDZmYTg3ZTRmLCA2KVxuICBkID0gZm5JKGQsIGEsIGIsIGMsIE1bMTVdLCAweGZlMmNlNmUwLCAxMClcbiAgYyA9IGZuSShjLCBkLCBhLCBiLCBNWzZdLCAweGEzMDE0MzE0LCAxNSlcbiAgYiA9IGZuSShiLCBjLCBkLCBhLCBNWzEzXSwgMHg0ZTA4MTFhMSwgMjEpXG4gIGEgPSBmbkkoYSwgYiwgYywgZCwgTVs0XSwgMHhmNzUzN2U4MiwgNilcbiAgZCA9IGZuSShkLCBhLCBiLCBjLCBNWzExXSwgMHhiZDNhZjIzNSwgMTApXG4gIGMgPSBmbkkoYywgZCwgYSwgYiwgTVsyXSwgMHgyYWQ3ZDJiYiwgMTUpXG4gIGIgPSBmbkkoYiwgYywgZCwgYSwgTVs5XSwgMHhlYjg2ZDM5MSwgMjEpXG5cbiAgdGhpcy5fYSA9ICh0aGlzLl9hICsgYSkgfCAwXG4gIHRoaXMuX2IgPSAodGhpcy5fYiArIGIpIHwgMFxuICB0aGlzLl9jID0gKHRoaXMuX2MgKyBjKSB8IDBcbiAgdGhpcy5fZCA9ICh0aGlzLl9kICsgZCkgfCAwXG59XG5cbk1ENS5wcm90b3R5cGUuX2RpZ2VzdCA9IGZ1bmN0aW9uICgpIHtcbiAgLy8gY3JlYXRlIHBhZGRpbmcgYW5kIGhhbmRsZSBibG9ja3NcbiAgdGhpcy5fYmxvY2tbdGhpcy5fYmxvY2tPZmZzZXQrK10gPSAweDgwXG4gIGlmICh0aGlzLl9ibG9ja09mZnNldCA+IDU2KSB7XG4gICAgdGhpcy5fYmxvY2suZmlsbCgwLCB0aGlzLl9ibG9ja09mZnNldCwgNjQpXG4gICAgdGhpcy5fdXBkYXRlKClcbiAgICB0aGlzLl9ibG9ja09mZnNldCA9IDBcbiAgfVxuXG4gIHRoaXMuX2Jsb2NrLmZpbGwoMCwgdGhpcy5fYmxvY2tPZmZzZXQsIDU2KVxuICB0aGlzLl9ibG9jay53cml0ZVVJbnQzMkxFKHRoaXMuX2xlbmd0aFswXSwgNTYpXG4gIHRoaXMuX2Jsb2NrLndyaXRlVUludDMyTEUodGhpcy5fbGVuZ3RoWzFdLCA2MClcbiAgdGhpcy5fdXBkYXRlKClcblxuICAvLyBwcm9kdWNlIHJlc3VsdFxuICB2YXIgYnVmZmVyID0gQnVmZmVyLmFsbG9jVW5zYWZlKDE2KVxuICBidWZmZXIud3JpdGVJbnQzMkxFKHRoaXMuX2EsIDApXG4gIGJ1ZmZlci53cml0ZUludDMyTEUodGhpcy5fYiwgNClcbiAgYnVmZmVyLndyaXRlSW50MzJMRSh0aGlzLl9jLCA4KVxuICBidWZmZXIud3JpdGVJbnQzMkxFKHRoaXMuX2QsIDEyKVxuICByZXR1cm4gYnVmZmVyXG59XG5cbmZ1bmN0aW9uIHJvdGwgKHgsIG4pIHtcbiAgcmV0dXJuICh4IDw8IG4pIHwgKHggPj4+ICgzMiAtIG4pKVxufVxuXG5mdW5jdGlvbiBmbkYgKGEsIGIsIGMsIGQsIG0sIGssIHMpIHtcbiAgcmV0dXJuIChyb3RsKChhICsgKChiICYgYykgfCAoKH5iKSAmIGQpKSArIG0gKyBrKSB8IDAsIHMpICsgYikgfCAwXG59XG5cbmZ1bmN0aW9uIGZuRyAoYSwgYiwgYywgZCwgbSwgaywgcykge1xuICByZXR1cm4gKHJvdGwoKGEgKyAoKGIgJiBkKSB8IChjICYgKH5kKSkpICsgbSArIGspIHwgMCwgcykgKyBiKSB8IDBcbn1cblxuZnVuY3Rpb24gZm5IIChhLCBiLCBjLCBkLCBtLCBrLCBzKSB7XG4gIHJldHVybiAocm90bCgoYSArIChiIF4gYyBeIGQpICsgbSArIGspIHwgMCwgcykgKyBiKSB8IDBcbn1cblxuZnVuY3Rpb24gZm5JIChhLCBiLCBjLCBkLCBtLCBrLCBzKSB7XG4gIHJldHVybiAocm90bCgoYSArICgoYyBeIChiIHwgKH5kKSkpKSArIG0gKyBrKSB8IDAsIHMpICsgYikgfCAwXG59XG5cbm1vZHVsZS5leHBvcnRzID0gTUQ1XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/md5.js/index.js\n");

/***/ }),

/***/ "./node_modules/md5.js/node_modules/hash-base/index.js":
/*!*************************************************************!*\
  !*** ./node_modules/md5.js/node_modules/hash-base/index.js ***!
  \*************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval("\nvar Buffer = (__webpack_require__(/*! safe-buffer */ \"./node_modules/safe-buffer/index.js\").Buffer)\nvar Transform = (__webpack_require__(/*! readable-stream */ \"./node_modules/md5.js/node_modules/readable-stream/readable-browser.js\").Transform)\nvar inherits = __webpack_require__(/*! inherits */ \"./node_modules/inherits/inherits_browser.js\")\n\nfunction throwIfNotStringOrBuffer (val, prefix) {\n  if (!Buffer.isBuffer(val) && typeof val !== 'string') {\n    throw new TypeError(prefix + ' must be a string or a buffer')\n  }\n}\n\nfunction HashBase (blockSize) {\n  Transform.call(this)\n\n  this._block = Buffer.allocUnsafe(blockSize)\n  this._blockSize = blockSize\n  this._blockOffset = 0\n  this._length = [0, 0, 0, 0]\n\n  this._finalized = false\n}\n\ninherits(HashBase, Transform)\n\nHashBase.prototype._transform = function (chunk, encoding, callback) {\n  var error = null\n  try {\n    this.update(chunk, encoding)\n  } catch (err) {\n    error = err\n  }\n\n  callback(error)\n}\n\nHashBase.prototype._flush = function (callback) {\n  var error = null\n  try {\n    this.push(this.digest())\n  } catch (err) {\n    error = err\n  }\n\n  callback(error)\n}\n\nHashBase.prototype.update = function (data, encoding) {\n  throwIfNotStringOrBuffer(data, 'Data')\n  if (this._finalized) throw new Error('Digest already called')\n  if (!Buffer.isBuffer(data)) data = Buffer.from(data, encoding)\n\n  // consume data\n  var block = this._block\n  var offset = 0\n  while (this._blockOffset + data.length - offset >= this._blockSize) {\n    for (var i = this._blockOffset; i < this._blockSize;) block[i++] = data[offset++]\n    this._update()\n    this._blockOffset = 0\n  }\n  while (offset < data.length) block[this._blockOffset++] = data[offset++]\n\n  // update length\n  for (var j = 0, carry = data.length * 8; carry > 0; ++j) {\n    this._length[j] += carry\n    carry = (this._length[j] / 0x0100000000) | 0\n    if (carry > 0) this._length[j] -= 0x0100000000 * carry\n  }\n\n  return this\n}\n\nHashBase.prototype._update = function () {\n  throw new Error('_update is not implemented')\n}\n\nHashBase.prototype.digest = function (encoding) {\n  if (this._finalized) throw new Error('Digest already called')\n  this._finalized = true\n\n  var digest = this._digest()\n  if (encoding !== undefined) digest = digest.toString(encoding)\n\n  // reset state\n  this._block.fill(0)\n  this._blockOffset = 0\n  for (var i = 0; i < 4; ++i) this._length[i] = 0\n\n  return digest\n}\n\nHashBase.prototype._digest = function () {\n  throw new Error('_digest is not implemented')\n}\n\nmodule.exports = HashBase\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWQ1LmpzL25vZGVfbW9kdWxlcy9oYXNoLWJhc2UvaW5kZXguanMuanMiLCJtYXBwaW5ncyI6IkFBQVk7QUFDWixhQUFhLHNGQUE2QjtBQUMxQyxnQkFBZ0IsZ0lBQW9DO0FBQ3BELGVBQWUsbUJBQU8sQ0FBQyw2REFBVTs7QUFFakM7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9DQUFvQyxvQkFBb0I7QUFDeEQ7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSwyQ0FBMkMsV0FBVztBQUN0RDtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0IsT0FBTzs7QUFFekI7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL21kNS5qcy9ub2RlX21vZHVsZXMvaGFzaC1iYXNlL2luZGV4LmpzP2IzMjIiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnXG52YXIgQnVmZmVyID0gcmVxdWlyZSgnc2FmZS1idWZmZXInKS5CdWZmZXJcbnZhciBUcmFuc2Zvcm0gPSByZXF1aXJlKCdyZWFkYWJsZS1zdHJlYW0nKS5UcmFuc2Zvcm1cbnZhciBpbmhlcml0cyA9IHJlcXVpcmUoJ2luaGVyaXRzJylcblxuZnVuY3Rpb24gdGhyb3dJZk5vdFN0cmluZ09yQnVmZmVyICh2YWwsIHByZWZpeCkge1xuICBpZiAoIUJ1ZmZlci5pc0J1ZmZlcih2YWwpICYmIHR5cGVvZiB2YWwgIT09ICdzdHJpbmcnKSB7XG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcihwcmVmaXggKyAnIG11c3QgYmUgYSBzdHJpbmcgb3IgYSBidWZmZXInKVxuICB9XG59XG5cbmZ1bmN0aW9uIEhhc2hCYXNlIChibG9ja1NpemUpIHtcbiAgVHJhbnNmb3JtLmNhbGwodGhpcylcblxuICB0aGlzLl9ibG9jayA9IEJ1ZmZlci5hbGxvY1Vuc2FmZShibG9ja1NpemUpXG4gIHRoaXMuX2Jsb2NrU2l6ZSA9IGJsb2NrU2l6ZVxuICB0aGlzLl9ibG9ja09mZnNldCA9IDBcbiAgdGhpcy5fbGVuZ3RoID0gWzAsIDAsIDAsIDBdXG5cbiAgdGhpcy5fZmluYWxpemVkID0gZmFsc2Vcbn1cblxuaW5oZXJpdHMoSGFzaEJhc2UsIFRyYW5zZm9ybSlcblxuSGFzaEJhc2UucHJvdG90eXBlLl90cmFuc2Zvcm0gPSBmdW5jdGlvbiAoY2h1bmssIGVuY29kaW5nLCBjYWxsYmFjaykge1xuICB2YXIgZXJyb3IgPSBudWxsXG4gIHRyeSB7XG4gICAgdGhpcy51cGRhdGUoY2h1bmssIGVuY29kaW5nKVxuICB9IGNhdGNoIChlcnIpIHtcbiAgICBlcnJvciA9IGVyclxuICB9XG5cbiAgY2FsbGJhY2soZXJyb3IpXG59XG5cbkhhc2hCYXNlLnByb3RvdHlwZS5fZmx1c2ggPSBmdW5jdGlvbiAoY2FsbGJhY2spIHtcbiAgdmFyIGVycm9yID0gbnVsbFxuICB0cnkge1xuICAgIHRoaXMucHVzaCh0aGlzLmRpZ2VzdCgpKVxuICB9IGNhdGNoIChlcnIpIHtcbiAgICBlcnJvciA9IGVyclxuICB9XG5cbiAgY2FsbGJhY2soZXJyb3IpXG59XG5cbkhhc2hCYXNlLnByb3RvdHlwZS51cGRhdGUgPSBmdW5jdGlvbiAoZGF0YSwgZW5jb2RpbmcpIHtcbiAgdGhyb3dJZk5vdFN0cmluZ09yQnVmZmVyKGRhdGEsICdEYXRhJylcbiAgaWYgKHRoaXMuX2ZpbmFsaXplZCkgdGhyb3cgbmV3IEVycm9yKCdEaWdlc3QgYWxyZWFkeSBjYWxsZWQnKVxuICBpZiAoIUJ1ZmZlci5pc0J1ZmZlcihkYXRhKSkgZGF0YSA9IEJ1ZmZlci5mcm9tKGRhdGEsIGVuY29kaW5nKVxuXG4gIC8vIGNvbnN1bWUgZGF0YVxuICB2YXIgYmxvY2sgPSB0aGlzLl9ibG9ja1xuICB2YXIgb2Zmc2V0ID0gMFxuICB3aGlsZSAodGhpcy5fYmxvY2tPZmZzZXQgKyBkYXRhLmxlbmd0aCAtIG9mZnNldCA+PSB0aGlzLl9ibG9ja1NpemUpIHtcbiAgICBmb3IgKHZhciBpID0gdGhpcy5fYmxvY2tPZmZzZXQ7IGkgPCB0aGlzLl9ibG9ja1NpemU7KSBibG9ja1tpKytdID0gZGF0YVtvZmZzZXQrK11cbiAgICB0aGlzLl91cGRhdGUoKVxuICAgIHRoaXMuX2Jsb2NrT2Zmc2V0ID0gMFxuICB9XG4gIHdoaWxlIChvZmZzZXQgPCBkYXRhLmxlbmd0aCkgYmxvY2tbdGhpcy5fYmxvY2tPZmZzZXQrK10gPSBkYXRhW29mZnNldCsrXVxuXG4gIC8vIHVwZGF0ZSBsZW5ndGhcbiAgZm9yICh2YXIgaiA9IDAsIGNhcnJ5ID0gZGF0YS5sZW5ndGggKiA4OyBjYXJyeSA+IDA7ICsraikge1xuICAgIHRoaXMuX2xlbmd0aFtqXSArPSBjYXJyeVxuICAgIGNhcnJ5ID0gKHRoaXMuX2xlbmd0aFtqXSAvIDB4MDEwMDAwMDAwMCkgfCAwXG4gICAgaWYgKGNhcnJ5ID4gMCkgdGhpcy5fbGVuZ3RoW2pdIC09IDB4MDEwMDAwMDAwMCAqIGNhcnJ5XG4gIH1cblxuICByZXR1cm4gdGhpc1xufVxuXG5IYXNoQmFzZS5wcm90b3R5cGUuX3VwZGF0ZSA9IGZ1bmN0aW9uICgpIHtcbiAgdGhyb3cgbmV3IEVycm9yKCdfdXBkYXRlIGlzIG5vdCBpbXBsZW1lbnRlZCcpXG59XG5cbkhhc2hCYXNlLnByb3RvdHlwZS5kaWdlc3QgPSBmdW5jdGlvbiAoZW5jb2RpbmcpIHtcbiAgaWYgKHRoaXMuX2ZpbmFsaXplZCkgdGhyb3cgbmV3IEVycm9yKCdEaWdlc3QgYWxyZWFkeSBjYWxsZWQnKVxuICB0aGlzLl9maW5hbGl6ZWQgPSB0cnVlXG5cbiAgdmFyIGRpZ2VzdCA9IHRoaXMuX2RpZ2VzdCgpXG4gIGlmIChlbmNvZGluZyAhPT0gdW5kZWZpbmVkKSBkaWdlc3QgPSBkaWdlc3QudG9TdHJpbmcoZW5jb2RpbmcpXG5cbiAgLy8gcmVzZXQgc3RhdGVcbiAgdGhpcy5fYmxvY2suZmlsbCgwKVxuICB0aGlzLl9ibG9ja09mZnNldCA9IDBcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCA0OyArK2kpIHRoaXMuX2xlbmd0aFtpXSA9IDBcblxuICByZXR1cm4gZGlnZXN0XG59XG5cbkhhc2hCYXNlLnByb3RvdHlwZS5fZGlnZXN0ID0gZnVuY3Rpb24gKCkge1xuICB0aHJvdyBuZXcgRXJyb3IoJ19kaWdlc3QgaXMgbm90IGltcGxlbWVudGVkJylcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBIYXNoQmFzZVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/md5.js/node_modules/hash-base/index.js\n");

/***/ }),

/***/ "./node_modules/md5.js/node_modules/readable-stream/errors-browser.js":
/*!****************************************************************************!*\
  !*** ./node_modules/md5.js/node_modules/readable-stream/errors-browser.js ***!
  \****************************************************************************/
/***/ (function(module) {

"use strict";
eval("\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\nvar codes = {};\n\nfunction createErrorType(code, message, Base) {\n  if (!Base) {\n    Base = Error;\n  }\n\n  function getMessage(arg1, arg2, arg3) {\n    if (typeof message === 'string') {\n      return message;\n    } else {\n      return message(arg1, arg2, arg3);\n    }\n  }\n\n  var NodeError =\n  /*#__PURE__*/\n  function (_Base) {\n    _inheritsLoose(NodeError, _Base);\n\n    function NodeError(arg1, arg2, arg3) {\n      return _Base.call(this, getMessage(arg1, arg2, arg3)) || this;\n    }\n\n    return NodeError;\n  }(Base);\n\n  NodeError.prototype.name = Base.name;\n  NodeError.prototype.code = code;\n  codes[code] = NodeError;\n} // https://github.com/nodejs/node/blob/v10.8.0/lib/internal/errors.js\n\n\nfunction oneOf(expected, thing) {\n  if (Array.isArray(expected)) {\n    var len = expected.length;\n    expected = expected.map(function (i) {\n      return String(i);\n    });\n\n    if (len > 2) {\n      return \"one of \".concat(thing, \" \").concat(expected.slice(0, len - 1).join(', '), \", or \") + expected[len - 1];\n    } else if (len === 2) {\n      return \"one of \".concat(thing, \" \").concat(expected[0], \" or \").concat(expected[1]);\n    } else {\n      return \"of \".concat(thing, \" \").concat(expected[0]);\n    }\n  } else {\n    return \"of \".concat(thing, \" \").concat(String(expected));\n  }\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/startsWith\n\n\nfunction startsWith(str, search, pos) {\n  return str.substr(!pos || pos < 0 ? 0 : +pos, search.length) === search;\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/endsWith\n\n\nfunction endsWith(str, search, this_len) {\n  if (this_len === undefined || this_len > str.length) {\n    this_len = str.length;\n  }\n\n  return str.substring(this_len - search.length, this_len) === search;\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/includes\n\n\nfunction includes(str, search, start) {\n  if (typeof start !== 'number') {\n    start = 0;\n  }\n\n  if (start + search.length > str.length) {\n    return false;\n  } else {\n    return str.indexOf(search, start) !== -1;\n  }\n}\n\ncreateErrorType('ERR_INVALID_OPT_VALUE', function (name, value) {\n  return 'The value \"' + value + '\" is invalid for option \"' + name + '\"';\n}, TypeError);\ncreateErrorType('ERR_INVALID_ARG_TYPE', function (name, expected, actual) {\n  // determiner: 'must be' or 'must not be'\n  var determiner;\n\n  if (typeof expected === 'string' && startsWith(expected, 'not ')) {\n    determiner = 'must not be';\n    expected = expected.replace(/^not /, '');\n  } else {\n    determiner = 'must be';\n  }\n\n  var msg;\n\n  if (endsWith(name, ' argument')) {\n    // For cases like 'first argument'\n    msg = \"The \".concat(name, \" \").concat(determiner, \" \").concat(oneOf(expected, 'type'));\n  } else {\n    var type = includes(name, '.') ? 'property' : 'argument';\n    msg = \"The \\\"\".concat(name, \"\\\" \").concat(type, \" \").concat(determiner, \" \").concat(oneOf(expected, 'type'));\n  }\n\n  msg += \". Received type \".concat(typeof actual);\n  return msg;\n}, TypeError);\ncreateErrorType('ERR_STREAM_PUSH_AFTER_EOF', 'stream.push() after EOF');\ncreateErrorType('ERR_METHOD_NOT_IMPLEMENTED', function (name) {\n  return 'The ' + name + ' method is not implemented';\n});\ncreateErrorType('ERR_STREAM_PREMATURE_CLOSE', 'Premature close');\ncreateErrorType('ERR_STREAM_DESTROYED', function (name) {\n  return 'Cannot call ' + name + ' after a stream was destroyed';\n});\ncreateErrorType('ERR_MULTIPLE_CALLBACK', 'Callback called multiple times');\ncreateErrorType('ERR_STREAM_CANNOT_PIPE', 'Cannot pipe, not readable');\ncreateErrorType('ERR_STREAM_WRITE_AFTER_END', 'write after end');\ncreateErrorType('ERR_STREAM_NULL_VALUES', 'May not write null values to stream', TypeError);\ncreateErrorType('ERR_UNKNOWN_ENCODING', function (arg) {\n  return 'Unknown encoding: ' + arg;\n}, TypeError);\ncreateErrorType('ERR_STREAM_UNSHIFT_AFTER_END_EVENT', 'stream.unshift() after end event');\nmodule.exports.codes = codes;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWQ1LmpzL25vZGVfbW9kdWxlcy9yZWFkYWJsZS1zdHJlYW0vZXJyb3JzLWJyb3dzZXIuanMuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsZ0RBQWdELDBEQUEwRCwyQ0FBMkM7O0FBRXJKOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7QUFDQSxFQUFFOzs7QUFHRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSzs7QUFFTDtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBLEVBQUU7OztBQUdGO0FBQ0E7QUFDQSxFQUFFOzs7QUFHRjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLEVBQUU7OztBQUdGO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBLG9CQUFvQiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbWQ1LmpzL25vZGVfbW9kdWxlcy9yZWFkYWJsZS1zdHJlYW0vZXJyb3JzLWJyb3dzZXIuanM/OTQzYyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmZ1bmN0aW9uIF9pbmhlcml0c0xvb3NlKHN1YkNsYXNzLCBzdXBlckNsYXNzKSB7IHN1YkNsYXNzLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoc3VwZXJDbGFzcy5wcm90b3R5cGUpOyBzdWJDbGFzcy5wcm90b3R5cGUuY29uc3RydWN0b3IgPSBzdWJDbGFzczsgc3ViQ2xhc3MuX19wcm90b19fID0gc3VwZXJDbGFzczsgfVxuXG52YXIgY29kZXMgPSB7fTtcblxuZnVuY3Rpb24gY3JlYXRlRXJyb3JUeXBlKGNvZGUsIG1lc3NhZ2UsIEJhc2UpIHtcbiAgaWYgKCFCYXNlKSB7XG4gICAgQmFzZSA9IEVycm9yO1xuICB9XG5cbiAgZnVuY3Rpb24gZ2V0TWVzc2FnZShhcmcxLCBhcmcyLCBhcmczKSB7XG4gICAgaWYgKHR5cGVvZiBtZXNzYWdlID09PSAnc3RyaW5nJykge1xuICAgICAgcmV0dXJuIG1lc3NhZ2U7XG4gICAgfSBlbHNlIHtcbiAgICAgIHJldHVybiBtZXNzYWdlKGFyZzEsIGFyZzIsIGFyZzMpO1xuICAgIH1cbiAgfVxuXG4gIHZhciBOb2RlRXJyb3IgPVxuICAvKiNfX1BVUkVfXyovXG4gIGZ1bmN0aW9uIChfQmFzZSkge1xuICAgIF9pbmhlcml0c0xvb3NlKE5vZGVFcnJvciwgX0Jhc2UpO1xuXG4gICAgZnVuY3Rpb24gTm9kZUVycm9yKGFyZzEsIGFyZzIsIGFyZzMpIHtcbiAgICAgIHJldHVybiBfQmFzZS5jYWxsKHRoaXMsIGdldE1lc3NhZ2UoYXJnMSwgYXJnMiwgYXJnMykpIHx8IHRoaXM7XG4gICAgfVxuXG4gICAgcmV0dXJuIE5vZGVFcnJvcjtcbiAgfShCYXNlKTtcblxuICBOb2RlRXJyb3IucHJvdG90eXBlLm5hbWUgPSBCYXNlLm5hbWU7XG4gIE5vZGVFcnJvci5wcm90b3R5cGUuY29kZSA9IGNvZGU7XG4gIGNvZGVzW2NvZGVdID0gTm9kZUVycm9yO1xufSAvLyBodHRwczovL2dpdGh1Yi5jb20vbm9kZWpzL25vZGUvYmxvYi92MTAuOC4wL2xpYi9pbnRlcm5hbC9lcnJvcnMuanNcblxuXG5mdW5jdGlvbiBvbmVPZihleHBlY3RlZCwgdGhpbmcpIHtcbiAgaWYgKEFycmF5LmlzQXJyYXkoZXhwZWN0ZWQpKSB7XG4gICAgdmFyIGxlbiA9IGV4cGVjdGVkLmxlbmd0aDtcbiAgICBleHBlY3RlZCA9IGV4cGVjdGVkLm1hcChmdW5jdGlvbiAoaSkge1xuICAgICAgcmV0dXJuIFN0cmluZyhpKTtcbiAgICB9KTtcblxuICAgIGlmIChsZW4gPiAyKSB7XG4gICAgICByZXR1cm4gXCJvbmUgb2YgXCIuY29uY2F0KHRoaW5nLCBcIiBcIikuY29uY2F0KGV4cGVjdGVkLnNsaWNlKDAsIGxlbiAtIDEpLmpvaW4oJywgJyksIFwiLCBvciBcIikgKyBleHBlY3RlZFtsZW4gLSAxXTtcbiAgICB9IGVsc2UgaWYgKGxlbiA9PT0gMikge1xuICAgICAgcmV0dXJuIFwib25lIG9mIFwiLmNvbmNhdCh0aGluZywgXCIgXCIpLmNvbmNhdChleHBlY3RlZFswXSwgXCIgb3IgXCIpLmNvbmNhdChleHBlY3RlZFsxXSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHJldHVybiBcIm9mIFwiLmNvbmNhdCh0aGluZywgXCIgXCIpLmNvbmNhdChleHBlY3RlZFswXSk7XG4gICAgfVxuICB9IGVsc2Uge1xuICAgIHJldHVybiBcIm9mIFwiLmNvbmNhdCh0aGluZywgXCIgXCIpLmNvbmNhdChTdHJpbmcoZXhwZWN0ZWQpKTtcbiAgfVxufSAvLyBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9lbi1VUy9kb2NzL1dlYi9KYXZhU2NyaXB0L1JlZmVyZW5jZS9HbG9iYWxfT2JqZWN0cy9TdHJpbmcvc3RhcnRzV2l0aFxuXG5cbmZ1bmN0aW9uIHN0YXJ0c1dpdGgoc3RyLCBzZWFyY2gsIHBvcykge1xuICByZXR1cm4gc3RyLnN1YnN0cighcG9zIHx8IHBvcyA8IDAgPyAwIDogK3Bvcywgc2VhcmNoLmxlbmd0aCkgPT09IHNlYXJjaDtcbn0gLy8gaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvSmF2YVNjcmlwdC9SZWZlcmVuY2UvR2xvYmFsX09iamVjdHMvU3RyaW5nL2VuZHNXaXRoXG5cblxuZnVuY3Rpb24gZW5kc1dpdGgoc3RyLCBzZWFyY2gsIHRoaXNfbGVuKSB7XG4gIGlmICh0aGlzX2xlbiA9PT0gdW5kZWZpbmVkIHx8IHRoaXNfbGVuID4gc3RyLmxlbmd0aCkge1xuICAgIHRoaXNfbGVuID0gc3RyLmxlbmd0aDtcbiAgfVxuXG4gIHJldHVybiBzdHIuc3Vic3RyaW5nKHRoaXNfbGVuIC0gc2VhcmNoLmxlbmd0aCwgdGhpc19sZW4pID09PSBzZWFyY2g7XG59IC8vIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2VuLVVTL2RvY3MvV2ViL0phdmFTY3JpcHQvUmVmZXJlbmNlL0dsb2JhbF9PYmplY3RzL1N0cmluZy9pbmNsdWRlc1xuXG5cbmZ1bmN0aW9uIGluY2x1ZGVzKHN0ciwgc2VhcmNoLCBzdGFydCkge1xuICBpZiAodHlwZW9mIHN0YXJ0ICE9PSAnbnVtYmVyJykge1xuICAgIHN0YXJ0ID0gMDtcbiAgfVxuXG4gIGlmIChzdGFydCArIHNlYXJjaC5sZW5ndGggPiBzdHIubGVuZ3RoKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9IGVsc2Uge1xuICAgIHJldHVybiBzdHIuaW5kZXhPZihzZWFyY2gsIHN0YXJ0KSAhPT0gLTE7XG4gIH1cbn1cblxuY3JlYXRlRXJyb3JUeXBlKCdFUlJfSU5WQUxJRF9PUFRfVkFMVUUnLCBmdW5jdGlvbiAobmFtZSwgdmFsdWUpIHtcbiAgcmV0dXJuICdUaGUgdmFsdWUgXCInICsgdmFsdWUgKyAnXCIgaXMgaW52YWxpZCBmb3Igb3B0aW9uIFwiJyArIG5hbWUgKyAnXCInO1xufSwgVHlwZUVycm9yKTtcbmNyZWF0ZUVycm9yVHlwZSgnRVJSX0lOVkFMSURfQVJHX1RZUEUnLCBmdW5jdGlvbiAobmFtZSwgZXhwZWN0ZWQsIGFjdHVhbCkge1xuICAvLyBkZXRlcm1pbmVyOiAnbXVzdCBiZScgb3IgJ211c3Qgbm90IGJlJ1xuICB2YXIgZGV0ZXJtaW5lcjtcblxuICBpZiAodHlwZW9mIGV4cGVjdGVkID09PSAnc3RyaW5nJyAmJiBzdGFydHNXaXRoKGV4cGVjdGVkLCAnbm90ICcpKSB7XG4gICAgZGV0ZXJtaW5lciA9ICdtdXN0IG5vdCBiZSc7XG4gICAgZXhwZWN0ZWQgPSBleHBlY3RlZC5yZXBsYWNlKC9ebm90IC8sICcnKTtcbiAgfSBlbHNlIHtcbiAgICBkZXRlcm1pbmVyID0gJ211c3QgYmUnO1xuICB9XG5cbiAgdmFyIG1zZztcblxuICBpZiAoZW5kc1dpdGgobmFtZSwgJyBhcmd1bWVudCcpKSB7XG4gICAgLy8gRm9yIGNhc2VzIGxpa2UgJ2ZpcnN0IGFyZ3VtZW50J1xuICAgIG1zZyA9IFwiVGhlIFwiLmNvbmNhdChuYW1lLCBcIiBcIikuY29uY2F0KGRldGVybWluZXIsIFwiIFwiKS5jb25jYXQob25lT2YoZXhwZWN0ZWQsICd0eXBlJykpO1xuICB9IGVsc2Uge1xuICAgIHZhciB0eXBlID0gaW5jbHVkZXMobmFtZSwgJy4nKSA/ICdwcm9wZXJ0eScgOiAnYXJndW1lbnQnO1xuICAgIG1zZyA9IFwiVGhlIFxcXCJcIi5jb25jYXQobmFtZSwgXCJcXFwiIFwiKS5jb25jYXQodHlwZSwgXCIgXCIpLmNvbmNhdChkZXRlcm1pbmVyLCBcIiBcIikuY29uY2F0KG9uZU9mKGV4cGVjdGVkLCAndHlwZScpKTtcbiAgfVxuXG4gIG1zZyArPSBcIi4gUmVjZWl2ZWQgdHlwZSBcIi5jb25jYXQodHlwZW9mIGFjdHVhbCk7XG4gIHJldHVybiBtc2c7XG59LCBUeXBlRXJyb3IpO1xuY3JlYXRlRXJyb3JUeXBlKCdFUlJfU1RSRUFNX1BVU0hfQUZURVJfRU9GJywgJ3N0cmVhbS5wdXNoKCkgYWZ0ZXIgRU9GJyk7XG5jcmVhdGVFcnJvclR5cGUoJ0VSUl9NRVRIT0RfTk9UX0lNUExFTUVOVEVEJywgZnVuY3Rpb24gKG5hbWUpIHtcbiAgcmV0dXJuICdUaGUgJyArIG5hbWUgKyAnIG1ldGhvZCBpcyBub3QgaW1wbGVtZW50ZWQnO1xufSk7XG5jcmVhdGVFcnJvclR5cGUoJ0VSUl9TVFJFQU1fUFJFTUFUVVJFX0NMT1NFJywgJ1ByZW1hdHVyZSBjbG9zZScpO1xuY3JlYXRlRXJyb3JUeXBlKCdFUlJfU1RSRUFNX0RFU1RST1lFRCcsIGZ1bmN0aW9uIChuYW1lKSB7XG4gIHJldHVybiAnQ2Fubm90IGNhbGwgJyArIG5hbWUgKyAnIGFmdGVyIGEgc3RyZWFtIHdhcyBkZXN0cm95ZWQnO1xufSk7XG5jcmVhdGVFcnJvclR5cGUoJ0VSUl9NVUxUSVBMRV9DQUxMQkFDSycsICdDYWxsYmFjayBjYWxsZWQgbXVsdGlwbGUgdGltZXMnKTtcbmNyZWF0ZUVycm9yVHlwZSgnRVJSX1NUUkVBTV9DQU5OT1RfUElQRScsICdDYW5ub3QgcGlwZSwgbm90IHJlYWRhYmxlJyk7XG5jcmVhdGVFcnJvclR5cGUoJ0VSUl9TVFJFQU1fV1JJVEVfQUZURVJfRU5EJywgJ3dyaXRlIGFmdGVyIGVuZCcpO1xuY3JlYXRlRXJyb3JUeXBlKCdFUlJfU1RSRUFNX05VTExfVkFMVUVTJywgJ01heSBub3Qgd3JpdGUgbnVsbCB2YWx1ZXMgdG8gc3RyZWFtJywgVHlwZUVycm9yKTtcbmNyZWF0ZUVycm9yVHlwZSgnRVJSX1VOS05PV05fRU5DT0RJTkcnLCBmdW5jdGlvbiAoYXJnKSB7XG4gIHJldHVybiAnVW5rbm93biBlbmNvZGluZzogJyArIGFyZztcbn0sIFR5cGVFcnJvcik7XG5jcmVhdGVFcnJvclR5cGUoJ0VSUl9TVFJFQU1fVU5TSElGVF9BRlRFUl9FTkRfRVZFTlQnLCAnc3RyZWFtLnVuc2hpZnQoKSBhZnRlciBlbmQgZXZlbnQnKTtcbm1vZHVsZS5leHBvcnRzLmNvZGVzID0gY29kZXM7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/md5.js/node_modules/readable-stream/errors-browser.js\n");

/***/ }),

/***/ "./node_modules/md5.js/node_modules/readable-stream/lib/_stream_duplex.js":
/*!********************************************************************************!*\
  !*** ./node_modules/md5.js/node_modules/readable-stream/lib/_stream_duplex.js ***!
  \********************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval("/* provided dependency */ var process = __webpack_require__(/*! process */ \"./node_modules/process/browser.js\");\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a duplex stream is just a stream that is both readable and writable.\n// Since JS doesn't have multiple prototypal inheritance, this class\n// prototypally inherits from Readable, and then parasitically from\n// Writable.\n\n\n\n/*<replacement>*/\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n  for (var key in obj) keys.push(key);\n  return keys;\n};\n/*</replacement>*/\n\nmodule.exports = Duplex;\nvar Readable = __webpack_require__(/*! ./_stream_readable */ \"./node_modules/md5.js/node_modules/readable-stream/lib/_stream_readable.js\");\nvar Writable = __webpack_require__(/*! ./_stream_writable */ \"./node_modules/md5.js/node_modules/readable-stream/lib/_stream_writable.js\");\n__webpack_require__(/*! inherits */ \"./node_modules/inherits/inherits_browser.js\")(Duplex, Readable);\n{\n  // Allow the keys array to be GC'ed.\n  var keys = objectKeys(Writable.prototype);\n  for (var v = 0; v < keys.length; v++) {\n    var method = keys[v];\n    if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];\n  }\n}\nfunction Duplex(options) {\n  if (!(this instanceof Duplex)) return new Duplex(options);\n  Readable.call(this, options);\n  Writable.call(this, options);\n  this.allowHalfOpen = true;\n  if (options) {\n    if (options.readable === false) this.readable = false;\n    if (options.writable === false) this.writable = false;\n    if (options.allowHalfOpen === false) {\n      this.allowHalfOpen = false;\n      this.once('end', onend);\n    }\n  }\n}\nObject.defineProperty(Duplex.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.highWaterMark;\n  }\n});\nObject.defineProperty(Duplex.prototype, 'writableBuffer', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState && this._writableState.getBuffer();\n  }\n});\nObject.defineProperty(Duplex.prototype, 'writableLength', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.length;\n  }\n});\n\n// the no-half-open enforcer\nfunction onend() {\n  // If the writable side ended, then we're ok.\n  if (this._writableState.ended) return;\n\n  // no more data can be written.\n  // But allow more writes to happen in this tick.\n  process.nextTick(onEndNT, this);\n}\nfunction onEndNT(self) {\n  self.end();\n}\nObject.defineProperty(Duplex.prototype, 'destroyed', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return false;\n    }\n    return this._readableState.destroyed && this._writableState.destroyed;\n  },\n  set: function set(value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._readableState.destroyed = value;\n    this._writableState.destroyed = value;\n  }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWQ1LmpzL25vZGVfbW9kdWxlcy9yZWFkYWJsZS1zdHJlYW0vbGliL19zdHJlYW1fZHVwbGV4LmpzLmpzIiwibWFwcGluZ3MiOiI7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVhOztBQUViO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsZUFBZSxtQkFBTyxDQUFDLHNHQUFvQjtBQUMzQyxlQUFlLG1CQUFPLENBQUMsc0dBQW9CO0FBQzNDLG1CQUFPLENBQUMsNkRBQVU7QUFDbEI7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLGlCQUFpQjtBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7O0FBRUQ7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLEVBQUUsT0FBTztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9tZDUuanMvbm9kZV9tb2R1bGVzL3JlYWRhYmxlLXN0cmVhbS9saWIvX3N0cmVhbV9kdXBsZXguanM/OGY3MSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgSm95ZW50LCBJbmMuIGFuZCBvdGhlciBOb2RlIGNvbnRyaWJ1dG9ycy5cbi8vXG4vLyBQZXJtaXNzaW9uIGlzIGhlcmVieSBncmFudGVkLCBmcmVlIG9mIGNoYXJnZSwgdG8gYW55IHBlcnNvbiBvYnRhaW5pbmcgYVxuLy8gY29weSBvZiB0aGlzIHNvZnR3YXJlIGFuZCBhc3NvY2lhdGVkIGRvY3VtZW50YXRpb24gZmlsZXMgKHRoZVxuLy8gXCJTb2Z0d2FyZVwiKSwgdG8gZGVhbCBpbiB0aGUgU29mdHdhcmUgd2l0aG91dCByZXN0cmljdGlvbiwgaW5jbHVkaW5nXG4vLyB3aXRob3V0IGxpbWl0YXRpb24gdGhlIHJpZ2h0cyB0byB1c2UsIGNvcHksIG1vZGlmeSwgbWVyZ2UsIHB1Ymxpc2gsXG4vLyBkaXN0cmlidXRlLCBzdWJsaWNlbnNlLCBhbmQvb3Igc2VsbCBjb3BpZXMgb2YgdGhlIFNvZnR3YXJlLCBhbmQgdG8gcGVybWl0XG4vLyBwZXJzb25zIHRvIHdob20gdGhlIFNvZnR3YXJlIGlzIGZ1cm5pc2hlZCB0byBkbyBzbywgc3ViamVjdCB0byB0aGVcbi8vIGZvbGxvd2luZyBjb25kaXRpb25zOlxuLy9cbi8vIFRoZSBhYm92ZSBjb3B5cmlnaHQgbm90aWNlIGFuZCB0aGlzIHBlcm1pc3Npb24gbm90aWNlIHNoYWxsIGJlIGluY2x1ZGVkXG4vLyBpbiBhbGwgY29waWVzIG9yIHN1YnN0YW50aWFsIHBvcnRpb25zIG9mIHRoZSBTb2Z0d2FyZS5cbi8vXG4vLyBUSEUgU09GVFdBUkUgSVMgUFJPVklERUQgXCJBUyBJU1wiLCBXSVRIT1VUIFdBUlJBTlRZIE9GIEFOWSBLSU5ELCBFWFBSRVNTXG4vLyBPUiBJTVBMSUVELCBJTkNMVURJTkcgQlVUIE5PVCBMSU1JVEVEIFRPIFRIRSBXQVJSQU5USUVTIE9GXG4vLyBNRVJDSEFOVEFCSUxJVFksIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFIEFORCBOT05JTkZSSU5HRU1FTlQuIElOXG4vLyBOTyBFVkVOVCBTSEFMTCBUSEUgQVVUSE9SUyBPUiBDT1BZUklHSFQgSE9MREVSUyBCRSBMSUFCTEUgRk9SIEFOWSBDTEFJTSxcbi8vIERBTUFHRVMgT1IgT1RIRVIgTElBQklMSVRZLCBXSEVUSEVSIElOIEFOIEFDVElPTiBPRiBDT05UUkFDVCwgVE9SVCBPUlxuLy8gT1RIRVJXSVNFLCBBUklTSU5HIEZST00sIE9VVCBPRiBPUiBJTiBDT05ORUNUSU9OIFdJVEggVEhFIFNPRlRXQVJFIE9SIFRIRVxuLy8gVVNFIE9SIE9USEVSIERFQUxJTkdTIElOIFRIRSBTT0ZUV0FSRS5cblxuLy8gYSBkdXBsZXggc3RyZWFtIGlzIGp1c3QgYSBzdHJlYW0gdGhhdCBpcyBib3RoIHJlYWRhYmxlIGFuZCB3cml0YWJsZS5cbi8vIFNpbmNlIEpTIGRvZXNuJ3QgaGF2ZSBtdWx0aXBsZSBwcm90b3R5cGFsIGluaGVyaXRhbmNlLCB0aGlzIGNsYXNzXG4vLyBwcm90b3R5cGFsbHkgaW5oZXJpdHMgZnJvbSBSZWFkYWJsZSwgYW5kIHRoZW4gcGFyYXNpdGljYWxseSBmcm9tXG4vLyBXcml0YWJsZS5cblxuJ3VzZSBzdHJpY3QnO1xuXG4vKjxyZXBsYWNlbWVudD4qL1xudmFyIG9iamVjdEtleXMgPSBPYmplY3Qua2V5cyB8fCBmdW5jdGlvbiAob2JqKSB7XG4gIHZhciBrZXlzID0gW107XG4gIGZvciAodmFyIGtleSBpbiBvYmopIGtleXMucHVzaChrZXkpO1xuICByZXR1cm4ga2V5cztcbn07XG4vKjwvcmVwbGFjZW1lbnQ+Ki9cblxubW9kdWxlLmV4cG9ydHMgPSBEdXBsZXg7XG52YXIgUmVhZGFibGUgPSByZXF1aXJlKCcuL19zdHJlYW1fcmVhZGFibGUnKTtcbnZhciBXcml0YWJsZSA9IHJlcXVpcmUoJy4vX3N0cmVhbV93cml0YWJsZScpO1xucmVxdWlyZSgnaW5oZXJpdHMnKShEdXBsZXgsIFJlYWRhYmxlKTtcbntcbiAgLy8gQWxsb3cgdGhlIGtleXMgYXJyYXkgdG8gYmUgR0MnZWQuXG4gIHZhciBrZXlzID0gb2JqZWN0S2V5cyhXcml0YWJsZS5wcm90b3R5cGUpO1xuICBmb3IgKHZhciB2ID0gMDsgdiA8IGtleXMubGVuZ3RoOyB2KyspIHtcbiAgICB2YXIgbWV0aG9kID0ga2V5c1t2XTtcbiAgICBpZiAoIUR1cGxleC5wcm90b3R5cGVbbWV0aG9kXSkgRHVwbGV4LnByb3RvdHlwZVttZXRob2RdID0gV3JpdGFibGUucHJvdG90eXBlW21ldGhvZF07XG4gIH1cbn1cbmZ1bmN0aW9uIER1cGxleChvcHRpb25zKSB7XG4gIGlmICghKHRoaXMgaW5zdGFuY2VvZiBEdXBsZXgpKSByZXR1cm4gbmV3IER1cGxleChvcHRpb25zKTtcbiAgUmVhZGFibGUuY2FsbCh0aGlzLCBvcHRpb25zKTtcbiAgV3JpdGFibGUuY2FsbCh0aGlzLCBvcHRpb25zKTtcbiAgdGhpcy5hbGxvd0hhbGZPcGVuID0gdHJ1ZTtcbiAgaWYgKG9wdGlvbnMpIHtcbiAgICBpZiAob3B0aW9ucy5yZWFkYWJsZSA9PT0gZmFsc2UpIHRoaXMucmVhZGFibGUgPSBmYWxzZTtcbiAgICBpZiAob3B0aW9ucy53cml0YWJsZSA9PT0gZmFsc2UpIHRoaXMud3JpdGFibGUgPSBmYWxzZTtcbiAgICBpZiAob3B0aW9ucy5hbGxvd0hhbGZPcGVuID09PSBmYWxzZSkge1xuICAgICAgdGhpcy5hbGxvd0hhbGZPcGVuID0gZmFsc2U7XG4gICAgICB0aGlzLm9uY2UoJ2VuZCcsIG9uZW5kKTtcbiAgICB9XG4gIH1cbn1cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShEdXBsZXgucHJvdG90eXBlLCAnd3JpdGFibGVIaWdoV2F0ZXJNYXJrJywge1xuICAvLyBtYWtpbmcgaXQgZXhwbGljaXQgdGhpcyBwcm9wZXJ0eSBpcyBub3QgZW51bWVyYWJsZVxuICAvLyBiZWNhdXNlIG90aGVyd2lzZSBzb21lIHByb3RvdHlwZSBtYW5pcHVsYXRpb24gaW5cbiAgLy8gdXNlcmxhbmQgd2lsbCBmYWlsXG4gIGVudW1lcmFibGU6IGZhbHNlLFxuICBnZXQ6IGZ1bmN0aW9uIGdldCgpIHtcbiAgICByZXR1cm4gdGhpcy5fd3JpdGFibGVTdGF0ZS5oaWdoV2F0ZXJNYXJrO1xuICB9XG59KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShEdXBsZXgucHJvdG90eXBlLCAnd3JpdGFibGVCdWZmZXInLCB7XG4gIC8vIG1ha2luZyBpdCBleHBsaWNpdCB0aGlzIHByb3BlcnR5IGlzIG5vdCBlbnVtZXJhYmxlXG4gIC8vIGJlY2F1c2Ugb3RoZXJ3aXNlIHNvbWUgcHJvdG90eXBlIG1hbmlwdWxhdGlvbiBpblxuICAvLyB1c2VybGFuZCB3aWxsIGZhaWxcbiAgZW51bWVyYWJsZTogZmFsc2UsXG4gIGdldDogZnVuY3Rpb24gZ2V0KCkge1xuICAgIHJldHVybiB0aGlzLl93cml0YWJsZVN0YXRlICYmIHRoaXMuX3dyaXRhYmxlU3RhdGUuZ2V0QnVmZmVyKCk7XG4gIH1cbn0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KER1cGxleC5wcm90b3R5cGUsICd3cml0YWJsZUxlbmd0aCcsIHtcbiAgLy8gbWFraW5nIGl0IGV4cGxpY2l0IHRoaXMgcHJvcGVydHkgaXMgbm90IGVudW1lcmFibGVcbiAgLy8gYmVjYXVzZSBvdGhlcndpc2Ugc29tZSBwcm90b3R5cGUgbWFuaXB1bGF0aW9uIGluXG4gIC8vIHVzZXJsYW5kIHdpbGwgZmFpbFxuICBlbnVtZXJhYmxlOiBmYWxzZSxcbiAgZ2V0OiBmdW5jdGlvbiBnZXQoKSB7XG4gICAgcmV0dXJuIHRoaXMuX3dyaXRhYmxlU3RhdGUubGVuZ3RoO1xuICB9XG59KTtcblxuLy8gdGhlIG5vLWhhbGYtb3BlbiBlbmZvcmNlclxuZnVuY3Rpb24gb25lbmQoKSB7XG4gIC8vIElmIHRoZSB3cml0YWJsZSBzaWRlIGVuZGVkLCB0aGVuIHdlJ3JlIG9rLlxuICBpZiAodGhpcy5fd3JpdGFibGVTdGF0ZS5lbmRlZCkgcmV0dXJuO1xuXG4gIC8vIG5vIG1vcmUgZGF0YSBjYW4gYmUgd3JpdHRlbi5cbiAgLy8gQnV0IGFsbG93IG1vcmUgd3JpdGVzIHRvIGhhcHBlbiBpbiB0aGlzIHRpY2suXG4gIHByb2Nlc3MubmV4dFRpY2sob25FbmROVCwgdGhpcyk7XG59XG5mdW5jdGlvbiBvbkVuZE5UKHNlbGYpIHtcbiAgc2VsZi5lbmQoKTtcbn1cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShEdXBsZXgucHJvdG90eXBlLCAnZGVzdHJveWVkJywge1xuICAvLyBtYWtpbmcgaXQgZXhwbGljaXQgdGhpcyBwcm9wZXJ0eSBpcyBub3QgZW51bWVyYWJsZVxuICAvLyBiZWNhdXNlIG90aGVyd2lzZSBzb21lIHByb3RvdHlwZSBtYW5pcHVsYXRpb24gaW5cbiAgLy8gdXNlcmxhbmQgd2lsbCBmYWlsXG4gIGVudW1lcmFibGU6IGZhbHNlLFxuICBnZXQ6IGZ1bmN0aW9uIGdldCgpIHtcbiAgICBpZiAodGhpcy5fcmVhZGFibGVTdGF0ZSA9PT0gdW5kZWZpbmVkIHx8IHRoaXMuX3dyaXRhYmxlU3RhdGUgPT09IHVuZGVmaW5lZCkge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICByZXR1cm4gdGhpcy5fcmVhZGFibGVTdGF0ZS5kZXN0cm95ZWQgJiYgdGhpcy5fd3JpdGFibGVTdGF0ZS5kZXN0cm95ZWQ7XG4gIH0sXG4gIHNldDogZnVuY3Rpb24gc2V0KHZhbHVlKSB7XG4gICAgLy8gd2UgaWdub3JlIHRoZSB2YWx1ZSBpZiB0aGUgc3RyZWFtXG4gICAgLy8gaGFzIG5vdCBiZWVuIGluaXRpYWxpemVkIHlldFxuICAgIGlmICh0aGlzLl9yZWFkYWJsZVN0YXRlID09PSB1bmRlZmluZWQgfHwgdGhpcy5fd3JpdGFibGVTdGF0ZSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgLy8gYmFja3dhcmQgY29tcGF0aWJpbGl0eSwgdGhlIHVzZXIgaXMgZXhwbGljaXRseVxuICAgIC8vIG1hbmFnaW5nIGRlc3Ryb3llZFxuICAgIHRoaXMuX3JlYWRhYmxlU3RhdGUuZGVzdHJveWVkID0gdmFsdWU7XG4gICAgdGhpcy5fd3JpdGFibGVTdGF0ZS5kZXN0cm95ZWQgPSB2YWx1ZTtcbiAgfVxufSk7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/md5.js/node_modules/readable-stream/lib/_stream_duplex.js\n");

/***/ }),

/***/ "./node_modules/md5.js/node_modules/readable-stream/lib/_stream_passthrough.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/md5.js/node_modules/readable-stream/lib/_stream_passthrough.js ***!
  \*************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval("// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a passthrough stream.\n// basically just the most minimal sort of Transform stream.\n// Every written chunk gets output as-is.\n\n\n\nmodule.exports = PassThrough;\nvar Transform = __webpack_require__(/*! ./_stream_transform */ \"./node_modules/md5.js/node_modules/readable-stream/lib/_stream_transform.js\");\n__webpack_require__(/*! inherits */ \"./node_modules/inherits/inherits_browser.js\")(PassThrough, Transform);\nfunction PassThrough(options) {\n  if (!(this instanceof PassThrough)) return new PassThrough(options);\n  Transform.call(this, options);\n}\nPassThrough.prototype._transform = function (chunk, encoding, cb) {\n  cb(null, chunk);\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWQ1LmpzL25vZGVfbW9kdWxlcy9yZWFkYWJsZS1zdHJlYW0vbGliL19zdHJlYW1fcGFzc3Rocm91Z2guanMuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRWE7O0FBRWI7QUFDQSxnQkFBZ0IsbUJBQU8sQ0FBQyx3R0FBcUI7QUFDN0MsbUJBQU8sQ0FBQyw2REFBVTtBQUNsQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbWQ1LmpzL25vZGVfbW9kdWxlcy9yZWFkYWJsZS1zdHJlYW0vbGliL19zdHJlYW1fcGFzc3Rocm91Z2guanM/OWJkYiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgSm95ZW50LCBJbmMuIGFuZCBvdGhlciBOb2RlIGNvbnRyaWJ1dG9ycy5cbi8vXG4vLyBQZXJtaXNzaW9uIGlzIGhlcmVieSBncmFudGVkLCBmcmVlIG9mIGNoYXJnZSwgdG8gYW55IHBlcnNvbiBvYnRhaW5pbmcgYVxuLy8gY29weSBvZiB0aGlzIHNvZnR3YXJlIGFuZCBhc3NvY2lhdGVkIGRvY3VtZW50YXRpb24gZmlsZXMgKHRoZVxuLy8gXCJTb2Z0d2FyZVwiKSwgdG8gZGVhbCBpbiB0aGUgU29mdHdhcmUgd2l0aG91dCByZXN0cmljdGlvbiwgaW5jbHVkaW5nXG4vLyB3aXRob3V0IGxpbWl0YXRpb24gdGhlIHJpZ2h0cyB0byB1c2UsIGNvcHksIG1vZGlmeSwgbWVyZ2UsIHB1Ymxpc2gsXG4vLyBkaXN0cmlidXRlLCBzdWJsaWNlbnNlLCBhbmQvb3Igc2VsbCBjb3BpZXMgb2YgdGhlIFNvZnR3YXJlLCBhbmQgdG8gcGVybWl0XG4vLyBwZXJzb25zIHRvIHdob20gdGhlIFNvZnR3YXJlIGlzIGZ1cm5pc2hlZCB0byBkbyBzbywgc3ViamVjdCB0byB0aGVcbi8vIGZvbGxvd2luZyBjb25kaXRpb25zOlxuLy9cbi8vIFRoZSBhYm92ZSBjb3B5cmlnaHQgbm90aWNlIGFuZCB0aGlzIHBlcm1pc3Npb24gbm90aWNlIHNoYWxsIGJlIGluY2x1ZGVkXG4vLyBpbiBhbGwgY29waWVzIG9yIHN1YnN0YW50aWFsIHBvcnRpb25zIG9mIHRoZSBTb2Z0d2FyZS5cbi8vXG4vLyBUSEUgU09GVFdBUkUgSVMgUFJPVklERUQgXCJBUyBJU1wiLCBXSVRIT1VUIFdBUlJBTlRZIE9GIEFOWSBLSU5ELCBFWFBSRVNTXG4vLyBPUiBJTVBMSUVELCBJTkNMVURJTkcgQlVUIE5PVCBMSU1JVEVEIFRPIFRIRSBXQVJSQU5USUVTIE9GXG4vLyBNRVJDSEFOVEFCSUxJVFksIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFIEFORCBOT05JTkZSSU5HRU1FTlQuIElOXG4vLyBOTyBFVkVOVCBTSEFMTCBUSEUgQVVUSE9SUyBPUiBDT1BZUklHSFQgSE9MREVSUyBCRSBMSUFCTEUgRk9SIEFOWSBDTEFJTSxcbi8vIERBTUFHRVMgT1IgT1RIRVIgTElBQklMSVRZLCBXSEVUSEVSIElOIEFOIEFDVElPTiBPRiBDT05UUkFDVCwgVE9SVCBPUlxuLy8gT1RIRVJXSVNFLCBBUklTSU5HIEZST00sIE9VVCBPRiBPUiBJTiBDT05ORUNUSU9OIFdJVEggVEhFIFNPRlRXQVJFIE9SIFRIRVxuLy8gVVNFIE9SIE9USEVSIERFQUxJTkdTIElOIFRIRSBTT0ZUV0FSRS5cblxuLy8gYSBwYXNzdGhyb3VnaCBzdHJlYW0uXG4vLyBiYXNpY2FsbHkganVzdCB0aGUgbW9zdCBtaW5pbWFsIHNvcnQgb2YgVHJhbnNmb3JtIHN0cmVhbS5cbi8vIEV2ZXJ5IHdyaXR0ZW4gY2h1bmsgZ2V0cyBvdXRwdXQgYXMtaXMuXG5cbid1c2Ugc3RyaWN0JztcblxubW9kdWxlLmV4cG9ydHMgPSBQYXNzVGhyb3VnaDtcbnZhciBUcmFuc2Zvcm0gPSByZXF1aXJlKCcuL19zdHJlYW1fdHJhbnNmb3JtJyk7XG5yZXF1aXJlKCdpbmhlcml0cycpKFBhc3NUaHJvdWdoLCBUcmFuc2Zvcm0pO1xuZnVuY3Rpb24gUGFzc1Rocm91Z2gob3B0aW9ucykge1xuICBpZiAoISh0aGlzIGluc3RhbmNlb2YgUGFzc1Rocm91Z2gpKSByZXR1cm4gbmV3IFBhc3NUaHJvdWdoKG9wdGlvbnMpO1xuICBUcmFuc2Zvcm0uY2FsbCh0aGlzLCBvcHRpb25zKTtcbn1cblBhc3NUaHJvdWdoLnByb3RvdHlwZS5fdHJhbnNmb3JtID0gZnVuY3Rpb24gKGNodW5rLCBlbmNvZGluZywgY2IpIHtcbiAgY2IobnVsbCwgY2h1bmspO1xufTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/md5.js/node_modules/readable-stream/lib/_stream_passthrough.js\n");

/***/ }),

/***/ "./node_modules/md5.js/node_modules/readable-stream/lib/_stream_readable.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/md5.js/node_modules/readable-stream/lib/_stream_readable.js ***!
  \**********************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval("/* provided dependency */ var process = __webpack_require__(/*! process */ \"./node_modules/process/browser.js\");\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n\nmodule.exports = Readable;\n\n/*<replacement>*/\nvar Duplex;\n/*</replacement>*/\n\nReadable.ReadableState = ReadableState;\n\n/*<replacement>*/\nvar EE = (__webpack_require__(/*! events */ \"./node_modules/events/events.js\").EventEmitter);\nvar EElistenerCount = function EElistenerCount(emitter, type) {\n  return emitter.listeners(type).length;\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream = __webpack_require__(/*! ./internal/streams/stream */ \"./node_modules/md5.js/node_modules/readable-stream/lib/internal/streams/stream-browser.js\");\n/*</replacement>*/\n\nvar Buffer = (__webpack_require__(/*! buffer */ \"./node_modules/buffer/index.js\").Buffer);\nvar OurUint8Array = (typeof __webpack_require__.g !== 'undefined' ? __webpack_require__.g : typeof window !== 'undefined' ? window : typeof self !== 'undefined' ? self : {}).Uint8Array || function () {};\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n\n/*<replacement>*/\nvar debugUtil = __webpack_require__(/*! util */ \"?a844\");\nvar debug;\nif (debugUtil && debugUtil.debuglog) {\n  debug = debugUtil.debuglog('stream');\n} else {\n  debug = function debug() {};\n}\n/*</replacement>*/\n\nvar BufferList = __webpack_require__(/*! ./internal/streams/buffer_list */ \"./node_modules/md5.js/node_modules/readable-stream/lib/internal/streams/buffer_list.js\");\nvar destroyImpl = __webpack_require__(/*! ./internal/streams/destroy */ \"./node_modules/md5.js/node_modules/readable-stream/lib/internal/streams/destroy.js\");\nvar _require = __webpack_require__(/*! ./internal/streams/state */ \"./node_modules/md5.js/node_modules/readable-stream/lib/internal/streams/state.js\"),\n  getHighWaterMark = _require.getHighWaterMark;\nvar _require$codes = (__webpack_require__(/*! ../errors */ \"./node_modules/md5.js/node_modules/readable-stream/errors-browser.js\").codes),\n  ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE,\n  ERR_STREAM_PUSH_AFTER_EOF = _require$codes.ERR_STREAM_PUSH_AFTER_EOF,\n  ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,\n  ERR_STREAM_UNSHIFT_AFTER_END_EVENT = _require$codes.ERR_STREAM_UNSHIFT_AFTER_END_EVENT;\n\n// Lazy loaded to improve the startup performance.\nvar StringDecoder;\nvar createReadableStreamAsyncIterator;\nvar from;\n__webpack_require__(/*! inherits */ \"./node_modules/inherits/inherits_browser.js\")(Readable, Stream);\nvar errorOrDestroy = destroyImpl.errorOrDestroy;\nvar kProxyEvents = ['error', 'close', 'destroy', 'pause', 'resume'];\nfunction prependListener(emitter, event, fn) {\n  // Sadly this is not cacheable as some libraries bundle their own\n  // event emitter implementation with them.\n  if (typeof emitter.prependListener === 'function') return emitter.prependListener(event, fn);\n\n  // This is a hack to make sure that our error handler is attached before any\n  // userland ones.  NEVER DO THIS. This is here only because this code needs\n  // to continue to work with older versions of Node.js that do not include\n  // the prependListener() method. The goal is to eventually remove this hack.\n  if (!emitter._events || !emitter._events[event]) emitter.on(event, fn);else if (Array.isArray(emitter._events[event])) emitter._events[event].unshift(fn);else emitter._events[event] = [fn, emitter._events[event]];\n}\nfunction ReadableState(options, stream, isDuplex) {\n  Duplex = Duplex || __webpack_require__(/*! ./_stream_duplex */ \"./node_modules/md5.js/node_modules/readable-stream/lib/_stream_duplex.js\");\n  options = options || {};\n\n  // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream.\n  // These options can be provided separately as readableXXX and writableXXX.\n  if (typeof isDuplex !== 'boolean') isDuplex = stream instanceof Duplex;\n\n  // object stream flag. Used to make read(n) ignore n and to\n  // make all the buffer merging and length checks go away\n  this.objectMode = !!options.objectMode;\n  if (isDuplex) this.objectMode = this.objectMode || !!options.readableObjectMode;\n\n  // the point at which it stops calling _read() to fill the buffer\n  // Note: 0 is a valid value, means \"don't call _read preemptively ever\"\n  this.highWaterMark = getHighWaterMark(this, options, 'readableHighWaterMark', isDuplex);\n\n  // A linked list is used to store data chunks instead of an array because the\n  // linked list can remove elements from the beginning faster than\n  // array.shift()\n  this.buffer = new BufferList();\n  this.length = 0;\n  this.pipes = null;\n  this.pipesCount = 0;\n  this.flowing = null;\n  this.ended = false;\n  this.endEmitted = false;\n  this.reading = false;\n\n  // a flag to be able to tell if the event 'readable'/'data' is emitted\n  // immediately, or on a later tick.  We set this to true at first, because\n  // any actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first read call.\n  this.sync = true;\n\n  // whenever we return null, then we set a flag to say\n  // that we're awaiting a 'readable' event emission.\n  this.needReadable = false;\n  this.emittedReadable = false;\n  this.readableListening = false;\n  this.resumeScheduled = false;\n  this.paused = true;\n\n  // Should close be emitted on destroy. Defaults to true.\n  this.emitClose = options.emitClose !== false;\n\n  // Should .destroy() be called after 'end' (and potentially 'finish')\n  this.autoDestroy = !!options.autoDestroy;\n\n  // has it been destroyed\n  this.destroyed = false;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // the number of writers that are awaiting a drain event in .pipe()s\n  this.awaitDrain = 0;\n\n  // if true, a maybeReadMore has been scheduled\n  this.readingMore = false;\n  this.decoder = null;\n  this.encoding = null;\n  if (options.encoding) {\n    if (!StringDecoder) StringDecoder = (__webpack_require__(/*! string_decoder/ */ \"./node_modules/string_decoder/lib/string_decoder.js\").StringDecoder);\n    this.decoder = new StringDecoder(options.encoding);\n    this.encoding = options.encoding;\n  }\n}\nfunction Readable(options) {\n  Duplex = Duplex || __webpack_require__(/*! ./_stream_duplex */ \"./node_modules/md5.js/node_modules/readable-stream/lib/_stream_duplex.js\");\n  if (!(this instanceof Readable)) return new Readable(options);\n\n  // Checking for a Stream.Duplex instance is faster here instead of inside\n  // the ReadableState constructor, at least with V8 6.5\n  var isDuplex = this instanceof Duplex;\n  this._readableState = new ReadableState(options, this, isDuplex);\n\n  // legacy\n  this.readable = true;\n  if (options) {\n    if (typeof options.read === 'function') this._read = options.read;\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n  }\n  Stream.call(this);\n}\nObject.defineProperty(Readable.prototype, 'destroyed', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    if (this._readableState === undefined) {\n      return false;\n    }\n    return this._readableState.destroyed;\n  },\n  set: function set(value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._readableState) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._readableState.destroyed = value;\n  }\n});\nReadable.prototype.destroy = destroyImpl.destroy;\nReadable.prototype._undestroy = destroyImpl.undestroy;\nReadable.prototype._destroy = function (err, cb) {\n  cb(err);\n};\n\n// Manually shove something into the read() buffer.\n// This returns true if the highWaterMark has not been hit yet,\n// similar to how Writable.write() returns true if you should\n// write() some more.\nReadable.prototype.push = function (chunk, encoding) {\n  var state = this._readableState;\n  var skipChunkCheck;\n  if (!state.objectMode) {\n    if (typeof chunk === 'string') {\n      encoding = encoding || state.defaultEncoding;\n      if (encoding !== state.encoding) {\n        chunk = Buffer.from(chunk, encoding);\n        encoding = '';\n      }\n      skipChunkCheck = true;\n    }\n  } else {\n    skipChunkCheck = true;\n  }\n  return readableAddChunk(this, chunk, encoding, false, skipChunkCheck);\n};\n\n// Unshift should *always* be something directly out of read()\nReadable.prototype.unshift = function (chunk) {\n  return readableAddChunk(this, chunk, null, true, false);\n};\nfunction readableAddChunk(stream, chunk, encoding, addToFront, skipChunkCheck) {\n  debug('readableAddChunk', chunk);\n  var state = stream._readableState;\n  if (chunk === null) {\n    state.reading = false;\n    onEofChunk(stream, state);\n  } else {\n    var er;\n    if (!skipChunkCheck) er = chunkInvalid(state, chunk);\n    if (er) {\n      errorOrDestroy(stream, er);\n    } else if (state.objectMode || chunk && chunk.length > 0) {\n      if (typeof chunk !== 'string' && !state.objectMode && Object.getPrototypeOf(chunk) !== Buffer.prototype) {\n        chunk = _uint8ArrayToBuffer(chunk);\n      }\n      if (addToFront) {\n        if (state.endEmitted) errorOrDestroy(stream, new ERR_STREAM_UNSHIFT_AFTER_END_EVENT());else addChunk(stream, state, chunk, true);\n      } else if (state.ended) {\n        errorOrDestroy(stream, new ERR_STREAM_PUSH_AFTER_EOF());\n      } else if (state.destroyed) {\n        return false;\n      } else {\n        state.reading = false;\n        if (state.decoder && !encoding) {\n          chunk = state.decoder.write(chunk);\n          if (state.objectMode || chunk.length !== 0) addChunk(stream, state, chunk, false);else maybeReadMore(stream, state);\n        } else {\n          addChunk(stream, state, chunk, false);\n        }\n      }\n    } else if (!addToFront) {\n      state.reading = false;\n      maybeReadMore(stream, state);\n    }\n  }\n\n  // We can push more data if we are below the highWaterMark.\n  // Also, if we have no data yet, we can stand some more bytes.\n  // This is to work around cases where hwm=0, such as the repl.\n  return !state.ended && (state.length < state.highWaterMark || state.length === 0);\n}\nfunction addChunk(stream, state, chunk, addToFront) {\n  if (state.flowing && state.length === 0 && !state.sync) {\n    state.awaitDrain = 0;\n    stream.emit('data', chunk);\n  } else {\n    // update the buffer info.\n    state.length += state.objectMode ? 1 : chunk.length;\n    if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);\n    if (state.needReadable) emitReadable(stream);\n  }\n  maybeReadMore(stream, state);\n}\nfunction chunkInvalid(state, chunk) {\n  var er;\n  if (!_isUint8Array(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new ERR_INVALID_ARG_TYPE('chunk', ['string', 'Buffer', 'Uint8Array'], chunk);\n  }\n  return er;\n}\nReadable.prototype.isPaused = function () {\n  return this._readableState.flowing === false;\n};\n\n// backwards compatibility.\nReadable.prototype.setEncoding = function (enc) {\n  if (!StringDecoder) StringDecoder = (__webpack_require__(/*! string_decoder/ */ \"./node_modules/string_decoder/lib/string_decoder.js\").StringDecoder);\n  var decoder = new StringDecoder(enc);\n  this._readableState.decoder = decoder;\n  // If setEncoding(null), decoder.encoding equals utf8\n  this._readableState.encoding = this._readableState.decoder.encoding;\n\n  // Iterate over current buffer to convert already stored Buffers:\n  var p = this._readableState.buffer.head;\n  var content = '';\n  while (p !== null) {\n    content += decoder.write(p.data);\n    p = p.next;\n  }\n  this._readableState.buffer.clear();\n  if (content !== '') this._readableState.buffer.push(content);\n  this._readableState.length = content.length;\n  return this;\n};\n\n// Don't raise the hwm > 1GB\nvar MAX_HWM = 0x40000000;\nfunction computeNewHighWaterMark(n) {\n  if (n >= MAX_HWM) {\n    // TODO(ronag): Throw ERR_VALUE_OUT_OF_RANGE.\n    n = MAX_HWM;\n  } else {\n    // Get the next highest power of 2 to prevent increasing hwm excessively in\n    // tiny amounts\n    n--;\n    n |= n >>> 1;\n    n |= n >>> 2;\n    n |= n >>> 4;\n    n |= n >>> 8;\n    n |= n >>> 16;\n    n++;\n  }\n  return n;\n}\n\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction howMuchToRead(n, state) {\n  if (n <= 0 || state.length === 0 && state.ended) return 0;\n  if (state.objectMode) return 1;\n  if (n !== n) {\n    // Only flow one buffer at a time\n    if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;\n  }\n  // If we're asking for more than the current hwm, then raise the hwm.\n  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);\n  if (n <= state.length) return n;\n  // Don't have enough\n  if (!state.ended) {\n    state.needReadable = true;\n    return 0;\n  }\n  return state.length;\n}\n\n// you can override either this method, or the async _read(n) below.\nReadable.prototype.read = function (n) {\n  debug('read', n);\n  n = parseInt(n, 10);\n  var state = this._readableState;\n  var nOrig = n;\n  if (n !== 0) state.emittedReadable = false;\n\n  // if we're doing read(0) to trigger a readable event, but we\n  // already have a bunch of data in the buffer, then just trigger\n  // the 'readable' event and move on.\n  if (n === 0 && state.needReadable && ((state.highWaterMark !== 0 ? state.length >= state.highWaterMark : state.length > 0) || state.ended)) {\n    debug('read: emitReadable', state.length, state.ended);\n    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);\n    return null;\n  }\n  n = howMuchToRead(n, state);\n\n  // if we've ended, and we're now clear, then finish it up.\n  if (n === 0 && state.ended) {\n    if (state.length === 0) endReadable(this);\n    return null;\n  }\n\n  // All the actual chunk generation logic needs to be\n  // *below* the call to _read.  The reason is that in certain\n  // synthetic stream cases, such as passthrough streams, _read\n  // may be a completely synchronous operation which may change\n  // the state of the read buffer, providing enough data when\n  // before there was *not* enough.\n  //\n  // So, the steps are:\n  // 1. Figure out what the state of things will be after we do\n  // a read from the buffer.\n  //\n  // 2. If that resulting state will trigger a _read, then call _read.\n  // Note that this may be asynchronous, or synchronous.  Yes, it is\n  // deeply ugly to write APIs this way, but that still doesn't mean\n  // that the Readable class should behave improperly, as streams are\n  // designed to be sync/async agnostic.\n  // Take note if the _read call is sync or async (ie, if the read call\n  // has returned yet), so that we know whether or not it's safe to emit\n  // 'readable' etc.\n  //\n  // 3. Actually pull the requested chunks out of the buffer and return.\n\n  // if we need a readable event, then we need to do some reading.\n  var doRead = state.needReadable;\n  debug('need readable', doRead);\n\n  // if we currently have less than the highWaterMark, then also read some\n  if (state.length === 0 || state.length - n < state.highWaterMark) {\n    doRead = true;\n    debug('length less than watermark', doRead);\n  }\n\n  // however, if we've ended, then there's no point, and if we're already\n  // reading, then it's unnecessary.\n  if (state.ended || state.reading) {\n    doRead = false;\n    debug('reading or ended', doRead);\n  } else if (doRead) {\n    debug('do read');\n    state.reading = true;\n    state.sync = true;\n    // if the length is currently zero, then we *need* a readable event.\n    if (state.length === 0) state.needReadable = true;\n    // call internal read method\n    this._read(state.highWaterMark);\n    state.sync = false;\n    // If _read pushed data synchronously, then `reading` will be false,\n    // and we need to re-evaluate how much data we can return to the user.\n    if (!state.reading) n = howMuchToRead(nOrig, state);\n  }\n  var ret;\n  if (n > 0) ret = fromList(n, state);else ret = null;\n  if (ret === null) {\n    state.needReadable = state.length <= state.highWaterMark;\n    n = 0;\n  } else {\n    state.length -= n;\n    state.awaitDrain = 0;\n  }\n  if (state.length === 0) {\n    // If we have nothing in the buffer, then we want to know\n    // as soon as we *do* get something into the buffer.\n    if (!state.ended) state.needReadable = true;\n\n    // If we tried to read() past the EOF, then emit end on the next tick.\n    if (nOrig !== n && state.ended) endReadable(this);\n  }\n  if (ret !== null) this.emit('data', ret);\n  return ret;\n};\nfunction onEofChunk(stream, state) {\n  debug('onEofChunk');\n  if (state.ended) return;\n  if (state.decoder) {\n    var chunk = state.decoder.end();\n    if (chunk && chunk.length) {\n      state.buffer.push(chunk);\n      state.length += state.objectMode ? 1 : chunk.length;\n    }\n  }\n  state.ended = true;\n  if (state.sync) {\n    // if we are sync, wait until next tick to emit the data.\n    // Otherwise we risk emitting data in the flow()\n    // the readable code triggers during a read() call\n    emitReadable(stream);\n  } else {\n    // emit 'readable' now to make sure it gets picked up.\n    state.needReadable = false;\n    if (!state.emittedReadable) {\n      state.emittedReadable = true;\n      emitReadable_(stream);\n    }\n  }\n}\n\n// Don't emit readable right away in sync mode, because this can trigger\n// another read() call => stack overflow.  This way, it might trigger\n// a nextTick recursion warning, but that's not so bad.\nfunction emitReadable(stream) {\n  var state = stream._readableState;\n  debug('emitReadable', state.needReadable, state.emittedReadable);\n  state.needReadable = false;\n  if (!state.emittedReadable) {\n    debug('emitReadable', state.flowing);\n    state.emittedReadable = true;\n    process.nextTick(emitReadable_, stream);\n  }\n}\nfunction emitReadable_(stream) {\n  var state = stream._readableState;\n  debug('emitReadable_', state.destroyed, state.length, state.ended);\n  if (!state.destroyed && (state.length || state.ended)) {\n    stream.emit('readable');\n    state.emittedReadable = false;\n  }\n\n  // The stream needs another readable event if\n  // 1. It is not flowing, as the flow mechanism will take\n  //    care of it.\n  // 2. It is not ended.\n  // 3. It is below the highWaterMark, so we can schedule\n  //    another readable later.\n  state.needReadable = !state.flowing && !state.ended && state.length <= state.highWaterMark;\n  flow(stream);\n}\n\n// at this point, the user has presumably seen the 'readable' event,\n// and called read() to consume some data.  that may have triggered\n// in turn another _read(n) call, in which case reading = true if\n// it's in progress.\n// However, if we're not ended, or reading, and the length < hwm,\n// then go ahead and try to read some more preemptively.\nfunction maybeReadMore(stream, state) {\n  if (!state.readingMore) {\n    state.readingMore = true;\n    process.nextTick(maybeReadMore_, stream, state);\n  }\n}\nfunction maybeReadMore_(stream, state) {\n  // Attempt to read more data if we should.\n  //\n  // The conditions for reading more data are (one of):\n  // - Not enough data buffered (state.length < state.highWaterMark). The loop\n  //   is responsible for filling the buffer with enough data if such data\n  //   is available. If highWaterMark is 0 and we are not in the flowing mode\n  //   we should _not_ attempt to buffer any extra data. We'll get more data\n  //   when the stream consumer calls read() instead.\n  // - No data in the buffer, and the stream is in flowing mode. In this mode\n  //   the loop below is responsible for ensuring read() is called. Failing to\n  //   call read here would abort the flow and there's no other mechanism for\n  //   continuing the flow if the stream consumer has just subscribed to the\n  //   'data' event.\n  //\n  // In addition to the above conditions to keep reading data, the following\n  // conditions prevent the data from being read:\n  // - The stream has ended (state.ended).\n  // - There is already a pending 'read' operation (state.reading). This is a\n  //   case where the the stream has called the implementation defined _read()\n  //   method, but they are processing the call asynchronously and have _not_\n  //   called push() with new data. In this case we skip performing more\n  //   read()s. The execution ends in this method again after the _read() ends\n  //   up calling push() with more data.\n  while (!state.reading && !state.ended && (state.length < state.highWaterMark || state.flowing && state.length === 0)) {\n    var len = state.length;\n    debug('maybeReadMore read 0');\n    stream.read(0);\n    if (len === state.length)\n      // didn't get any data, stop spinning.\n      break;\n  }\n  state.readingMore = false;\n}\n\n// abstract method.  to be overridden in specific implementation classes.\n// call cb(er, data) where data is <= n in length.\n// for virtual (non-string, non-buffer) streams, \"length\" is somewhat\n// arbitrary, and perhaps not very meaningful.\nReadable.prototype._read = function (n) {\n  errorOrDestroy(this, new ERR_METHOD_NOT_IMPLEMENTED('_read()'));\n};\nReadable.prototype.pipe = function (dest, pipeOpts) {\n  var src = this;\n  var state = this._readableState;\n  switch (state.pipesCount) {\n    case 0:\n      state.pipes = dest;\n      break;\n    case 1:\n      state.pipes = [state.pipes, dest];\n      break;\n    default:\n      state.pipes.push(dest);\n      break;\n  }\n  state.pipesCount += 1;\n  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);\n  var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;\n  var endFn = doEnd ? onend : unpipe;\n  if (state.endEmitted) process.nextTick(endFn);else src.once('end', endFn);\n  dest.on('unpipe', onunpipe);\n  function onunpipe(readable, unpipeInfo) {\n    debug('onunpipe');\n    if (readable === src) {\n      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {\n        unpipeInfo.hasUnpiped = true;\n        cleanup();\n      }\n    }\n  }\n  function onend() {\n    debug('onend');\n    dest.end();\n  }\n\n  // when the dest drains, it reduces the awaitDrain counter\n  // on the source.  This would be more elegant with a .once()\n  // handler in flow(), but adding and removing repeatedly is\n  // too slow.\n  var ondrain = pipeOnDrain(src);\n  dest.on('drain', ondrain);\n  var cleanedUp = false;\n  function cleanup() {\n    debug('cleanup');\n    // cleanup event handlers once the pipe is broken\n    dest.removeListener('close', onclose);\n    dest.removeListener('finish', onfinish);\n    dest.removeListener('drain', ondrain);\n    dest.removeListener('error', onerror);\n    dest.removeListener('unpipe', onunpipe);\n    src.removeListener('end', onend);\n    src.removeListener('end', unpipe);\n    src.removeListener('data', ondata);\n    cleanedUp = true;\n\n    // if the reader is waiting for a drain event from this\n    // specific writer, then it would cause it to never start\n    // flowing again.\n    // So, if this is awaiting a drain, then we just call it now.\n    // If we don't know, then assume that we are waiting for one.\n    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();\n  }\n  src.on('data', ondata);\n  function ondata(chunk) {\n    debug('ondata');\n    var ret = dest.write(chunk);\n    debug('dest.write', ret);\n    if (ret === false) {\n      // If the user unpiped during `dest.write()`, it is possible\n      // to get stuck in a permanently paused state if that write\n      // also returned false.\n      // => Check whether `dest` is still a piping destination.\n      if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {\n        debug('false write response, pause', state.awaitDrain);\n        state.awaitDrain++;\n      }\n      src.pause();\n    }\n  }\n\n  // if the dest has an error, then stop piping into it.\n  // however, don't suppress the throwing behavior for this.\n  function onerror(er) {\n    debug('onerror', er);\n    unpipe();\n    dest.removeListener('error', onerror);\n    if (EElistenerCount(dest, 'error') === 0) errorOrDestroy(dest, er);\n  }\n\n  // Make sure our error handler is attached before userland ones.\n  prependListener(dest, 'error', onerror);\n\n  // Both close and finish should trigger unpipe, but only once.\n  function onclose() {\n    dest.removeListener('finish', onfinish);\n    unpipe();\n  }\n  dest.once('close', onclose);\n  function onfinish() {\n    debug('onfinish');\n    dest.removeListener('close', onclose);\n    unpipe();\n  }\n  dest.once('finish', onfinish);\n  function unpipe() {\n    debug('unpipe');\n    src.unpipe(dest);\n  }\n\n  // tell the dest that it's being piped to\n  dest.emit('pipe', src);\n\n  // start the flow if it hasn't been started already.\n  if (!state.flowing) {\n    debug('pipe resume');\n    src.resume();\n  }\n  return dest;\n};\nfunction pipeOnDrain(src) {\n  return function pipeOnDrainFunctionResult() {\n    var state = src._readableState;\n    debug('pipeOnDrain', state.awaitDrain);\n    if (state.awaitDrain) state.awaitDrain--;\n    if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {\n      state.flowing = true;\n      flow(src);\n    }\n  };\n}\nReadable.prototype.unpipe = function (dest) {\n  var state = this._readableState;\n  var unpipeInfo = {\n    hasUnpiped: false\n  };\n\n  // if we're not piping anywhere, then do nothing.\n  if (state.pipesCount === 0) return this;\n\n  // just one destination.  most common case.\n  if (state.pipesCount === 1) {\n    // passed in one, but it's not the right one.\n    if (dest && dest !== state.pipes) return this;\n    if (!dest) dest = state.pipes;\n\n    // got a match.\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n    if (dest) dest.emit('unpipe', this, unpipeInfo);\n    return this;\n  }\n\n  // slow case. multiple pipe destinations.\n\n  if (!dest) {\n    // remove all.\n    var dests = state.pipes;\n    var len = state.pipesCount;\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n    for (var i = 0; i < len; i++) dests[i].emit('unpipe', this, {\n      hasUnpiped: false\n    });\n    return this;\n  }\n\n  // try to find the right one.\n  var index = indexOf(state.pipes, dest);\n  if (index === -1) return this;\n  state.pipes.splice(index, 1);\n  state.pipesCount -= 1;\n  if (state.pipesCount === 1) state.pipes = state.pipes[0];\n  dest.emit('unpipe', this, unpipeInfo);\n  return this;\n};\n\n// set up data events if they are asked for\n// Ensure readable listeners eventually get something\nReadable.prototype.on = function (ev, fn) {\n  var res = Stream.prototype.on.call(this, ev, fn);\n  var state = this._readableState;\n  if (ev === 'data') {\n    // update readableListening so that resume() may be a no-op\n    // a few lines down. This is needed to support once('readable').\n    state.readableListening = this.listenerCount('readable') > 0;\n\n    // Try start flowing on next tick if stream isn't explicitly paused\n    if (state.flowing !== false) this.resume();\n  } else if (ev === 'readable') {\n    if (!state.endEmitted && !state.readableListening) {\n      state.readableListening = state.needReadable = true;\n      state.flowing = false;\n      state.emittedReadable = false;\n      debug('on readable', state.length, state.reading);\n      if (state.length) {\n        emitReadable(this);\n      } else if (!state.reading) {\n        process.nextTick(nReadingNextTick, this);\n      }\n    }\n  }\n  return res;\n};\nReadable.prototype.addListener = Readable.prototype.on;\nReadable.prototype.removeListener = function (ev, fn) {\n  var res = Stream.prototype.removeListener.call(this, ev, fn);\n  if (ev === 'readable') {\n    // We need to check if there is someone still listening to\n    // readable and reset the state. However this needs to happen\n    // after readable has been emitted but before I/O (nextTick) to\n    // support once('readable', fn) cycles. This means that calling\n    // resume within the same tick will have no\n    // effect.\n    process.nextTick(updateReadableListening, this);\n  }\n  return res;\n};\nReadable.prototype.removeAllListeners = function (ev) {\n  var res = Stream.prototype.removeAllListeners.apply(this, arguments);\n  if (ev === 'readable' || ev === undefined) {\n    // We need to check if there is someone still listening to\n    // readable and reset the state. However this needs to happen\n    // after readable has been emitted but before I/O (nextTick) to\n    // support once('readable', fn) cycles. This means that calling\n    // resume within the same tick will have no\n    // effect.\n    process.nextTick(updateReadableListening, this);\n  }\n  return res;\n};\nfunction updateReadableListening(self) {\n  var state = self._readableState;\n  state.readableListening = self.listenerCount('readable') > 0;\n  if (state.resumeScheduled && !state.paused) {\n    // flowing needs to be set to true now, otherwise\n    // the upcoming resume will not flow.\n    state.flowing = true;\n\n    // crude way to check if we should resume\n  } else if (self.listenerCount('data') > 0) {\n    self.resume();\n  }\n}\nfunction nReadingNextTick(self) {\n  debug('readable nexttick read 0');\n  self.read(0);\n}\n\n// pause() and resume() are remnants of the legacy readable stream API\n// If the user uses them, then switch into old mode.\nReadable.prototype.resume = function () {\n  var state = this._readableState;\n  if (!state.flowing) {\n    debug('resume');\n    // we flow only if there is no one listening\n    // for readable, but we still have to call\n    // resume()\n    state.flowing = !state.readableListening;\n    resume(this, state);\n  }\n  state.paused = false;\n  return this;\n};\nfunction resume(stream, state) {\n  if (!state.resumeScheduled) {\n    state.resumeScheduled = true;\n    process.nextTick(resume_, stream, state);\n  }\n}\nfunction resume_(stream, state) {\n  debug('resume', state.reading);\n  if (!state.reading) {\n    stream.read(0);\n  }\n  state.resumeScheduled = false;\n  stream.emit('resume');\n  flow(stream);\n  if (state.flowing && !state.reading) stream.read(0);\n}\nReadable.prototype.pause = function () {\n  debug('call pause flowing=%j', this._readableState.flowing);\n  if (this._readableState.flowing !== false) {\n    debug('pause');\n    this._readableState.flowing = false;\n    this.emit('pause');\n  }\n  this._readableState.paused = true;\n  return this;\n};\nfunction flow(stream) {\n  var state = stream._readableState;\n  debug('flow', state.flowing);\n  while (state.flowing && stream.read() !== null);\n}\n\n// wrap an old-style stream as the async data source.\n// This is *not* part of the readable stream interface.\n// It is an ugly unfortunate mess of history.\nReadable.prototype.wrap = function (stream) {\n  var _this = this;\n  var state = this._readableState;\n  var paused = false;\n  stream.on('end', function () {\n    debug('wrapped end');\n    if (state.decoder && !state.ended) {\n      var chunk = state.decoder.end();\n      if (chunk && chunk.length) _this.push(chunk);\n    }\n    _this.push(null);\n  });\n  stream.on('data', function (chunk) {\n    debug('wrapped data');\n    if (state.decoder) chunk = state.decoder.write(chunk);\n\n    // don't skip over falsy values in objectMode\n    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;\n    var ret = _this.push(chunk);\n    if (!ret) {\n      paused = true;\n      stream.pause();\n    }\n  });\n\n  // proxy all the other methods.\n  // important when wrapping filters and duplexes.\n  for (var i in stream) {\n    if (this[i] === undefined && typeof stream[i] === 'function') {\n      this[i] = function methodWrap(method) {\n        return function methodWrapReturnFunction() {\n          return stream[method].apply(stream, arguments);\n        };\n      }(i);\n    }\n  }\n\n  // proxy certain important events.\n  for (var n = 0; n < kProxyEvents.length; n++) {\n    stream.on(kProxyEvents[n], this.emit.bind(this, kProxyEvents[n]));\n  }\n\n  // when we try to consume some more bytes, simply unpause the\n  // underlying stream.\n  this._read = function (n) {\n    debug('wrapped _read', n);\n    if (paused) {\n      paused = false;\n      stream.resume();\n    }\n  };\n  return this;\n};\nif (typeof Symbol === 'function') {\n  Readable.prototype[Symbol.asyncIterator] = function () {\n    if (createReadableStreamAsyncIterator === undefined) {\n      createReadableStreamAsyncIterator = __webpack_require__(/*! ./internal/streams/async_iterator */ \"./node_modules/md5.js/node_modules/readable-stream/lib/internal/streams/async_iterator.js\");\n    }\n    return createReadableStreamAsyncIterator(this);\n  };\n}\nObject.defineProperty(Readable.prototype, 'readableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState.highWaterMark;\n  }\n});\nObject.defineProperty(Readable.prototype, 'readableBuffer', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState && this._readableState.buffer;\n  }\n});\nObject.defineProperty(Readable.prototype, 'readableFlowing', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState.flowing;\n  },\n  set: function set(state) {\n    if (this._readableState) {\n      this._readableState.flowing = state;\n    }\n  }\n});\n\n// exposed for testing purposes only.\nReadable._fromList = fromList;\nObject.defineProperty(Readable.prototype, 'readableLength', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState.length;\n  }\n});\n\n// Pluck off n bytes from an array of buffers.\n// Length is the combined lengths of all the buffers in the list.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction fromList(n, state) {\n  // nothing buffered\n  if (state.length === 0) return null;\n  var ret;\n  if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {\n    // read it all, truncate the list\n    if (state.decoder) ret = state.buffer.join('');else if (state.buffer.length === 1) ret = state.buffer.first();else ret = state.buffer.concat(state.length);\n    state.buffer.clear();\n  } else {\n    // read part of list\n    ret = state.buffer.consume(n, state.decoder);\n  }\n  return ret;\n}\nfunction endReadable(stream) {\n  var state = stream._readableState;\n  debug('endReadable', state.endEmitted);\n  if (!state.endEmitted) {\n    state.ended = true;\n    process.nextTick(endReadableNT, state, stream);\n  }\n}\nfunction endReadableNT(state, stream) {\n  debug('endReadableNT', state.endEmitted, state.length);\n\n  // Check that we didn't get one last unshift.\n  if (!state.endEmitted && state.length === 0) {\n    state.endEmitted = true;\n    stream.readable = false;\n    stream.emit('end');\n    if (state.autoDestroy) {\n      // In case of duplex streams we need a way to detect\n      // if the writable side is ready for autoDestroy as well\n      var wState = stream._writableState;\n      if (!wState || wState.autoDestroy && wState.finished) {\n        stream.destroy();\n      }\n    }\n  }\n}\nif (typeof Symbol === 'function') {\n  Readable.from = function (iterable, opts) {\n    if (from === undefined) {\n      from = __webpack_require__(/*! ./internal/streams/from */ \"./node_modules/md5.js/node_modules/readable-stream/lib/internal/streams/from-browser.js\");\n    }\n    return from(Readable, iterable, opts);\n  };\n}\nfunction indexOf(xs, x) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    if (xs[i] === x) return i;\n  }\n  return -1;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/md5.js/node_modules/readable-stream/lib/_stream_readable.js\n");

/***/ }),

/***/ "./node_modules/md5.js/node_modules/readable-stream/lib/_stream_transform.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/md5.js/node_modules/readable-stream/lib/_stream_transform.js ***!
  \***********************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval("// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a transform stream is a readable/writable stream where you do\n// something with the data.  Sometimes it's called a \"filter\",\n// but that's not a great name for it, since that implies a thing where\n// some bits pass through, and others are simply ignored.  (That would\n// be a valid example of a transform, of course.)\n//\n// While the output is causally related to the input, it's not a\n// necessarily symmetric or synchronous transformation.  For example,\n// a zlib stream might take multiple plain-text writes(), and then\n// emit a single compressed chunk some time in the future.\n//\n// Here's how this works:\n//\n// The Transform stream has all the aspects of the readable and writable\n// stream classes.  When you write(chunk), that calls _write(chunk,cb)\n// internally, and returns false if there's a lot of pending writes\n// buffered up.  When you call read(), that calls _read(n) until\n// there's enough pending readable data buffered up.\n//\n// In a transform stream, the written data is placed in a buffer.  When\n// _read(n) is called, it transforms the queued up data, calling the\n// buffered _write cb's as it consumes chunks.  If consuming a single\n// written chunk would result in multiple output chunks, then the first\n// outputted bit calls the readcb, and subsequent chunks just go into\n// the read buffer, and will cause it to emit 'readable' if necessary.\n//\n// This way, back-pressure is actually determined by the reading side,\n// since _read has to be called to start processing a new chunk.  However,\n// a pathological inflate type of transform can cause excessive buffering\n// here.  For example, imagine a stream where every byte of input is\n// interpreted as an integer from 0-255, and then results in that many\n// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in\n// 1kb of data being output.  In this case, you could write a very small\n// amount of input, and end up with a very large amount of output.  In\n// such a pathological inflating mechanism, there'd be no way to tell\n// the system to stop doing the transform.  A single 4MB write could\n// cause the system to run out of memory.\n//\n// However, even in such a pathological case, only a single written chunk\n// would be consumed, and then the rest would wait (un-transformed) until\n// the results of the previous transformed chunk were consumed.\n\n\n\nmodule.exports = Transform;\nvar _require$codes = (__webpack_require__(/*! ../errors */ \"./node_modules/md5.js/node_modules/readable-stream/errors-browser.js\").codes),\n  ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,\n  ERR_MULTIPLE_CALLBACK = _require$codes.ERR_MULTIPLE_CALLBACK,\n  ERR_TRANSFORM_ALREADY_TRANSFORMING = _require$codes.ERR_TRANSFORM_ALREADY_TRANSFORMING,\n  ERR_TRANSFORM_WITH_LENGTH_0 = _require$codes.ERR_TRANSFORM_WITH_LENGTH_0;\nvar Duplex = __webpack_require__(/*! ./_stream_duplex */ \"./node_modules/md5.js/node_modules/readable-stream/lib/_stream_duplex.js\");\n__webpack_require__(/*! inherits */ \"./node_modules/inherits/inherits_browser.js\")(Transform, Duplex);\nfunction afterTransform(er, data) {\n  var ts = this._transformState;\n  ts.transforming = false;\n  var cb = ts.writecb;\n  if (cb === null) {\n    return this.emit('error', new ERR_MULTIPLE_CALLBACK());\n  }\n  ts.writechunk = null;\n  ts.writecb = null;\n  if (data != null)\n    // single equals check for both `null` and `undefined`\n    this.push(data);\n  cb(er);\n  var rs = this._readableState;\n  rs.reading = false;\n  if (rs.needReadable || rs.length < rs.highWaterMark) {\n    this._read(rs.highWaterMark);\n  }\n}\nfunction Transform(options) {\n  if (!(this instanceof Transform)) return new Transform(options);\n  Duplex.call(this, options);\n  this._transformState = {\n    afterTransform: afterTransform.bind(this),\n    needTransform: false,\n    transforming: false,\n    writecb: null,\n    writechunk: null,\n    writeencoding: null\n  };\n\n  // start out asking for a readable event once data is transformed.\n  this._readableState.needReadable = true;\n\n  // we have implemented the _read method, and done the other things\n  // that Readable wants before the first _read call, so unset the\n  // sync guard flag.\n  this._readableState.sync = false;\n  if (options) {\n    if (typeof options.transform === 'function') this._transform = options.transform;\n    if (typeof options.flush === 'function') this._flush = options.flush;\n  }\n\n  // When the writable side finishes, then flush out anything remaining.\n  this.on('prefinish', prefinish);\n}\nfunction prefinish() {\n  var _this = this;\n  if (typeof this._flush === 'function' && !this._readableState.destroyed) {\n    this._flush(function (er, data) {\n      done(_this, er, data);\n    });\n  } else {\n    done(this, null, null);\n  }\n}\nTransform.prototype.push = function (chunk, encoding) {\n  this._transformState.needTransform = false;\n  return Duplex.prototype.push.call(this, chunk, encoding);\n};\n\n// This is the part where you do stuff!\n// override this function in implementation classes.\n// 'chunk' is an input chunk.\n//\n// Call `push(newChunk)` to pass along transformed output\n// to the readable side.  You may call 'push' zero or more times.\n//\n// Call `cb(err)` when you are done with this chunk.  If you pass\n// an error, then that'll put the hurt on the whole operation.  If you\n// never call cb(), then you'll never get another chunk.\nTransform.prototype._transform = function (chunk, encoding, cb) {\n  cb(new ERR_METHOD_NOT_IMPLEMENTED('_transform()'));\n};\nTransform.prototype._write = function (chunk, encoding, cb) {\n  var ts = this._transformState;\n  ts.writecb = cb;\n  ts.writechunk = chunk;\n  ts.writeencoding = encoding;\n  if (!ts.transforming) {\n    var rs = this._readableState;\n    if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);\n  }\n};\n\n// Doesn't matter what the args are here.\n// _transform does all the work.\n// That we got here means that the readable side wants more data.\nTransform.prototype._read = function (n) {\n  var ts = this._transformState;\n  if (ts.writechunk !== null && !ts.transforming) {\n    ts.transforming = true;\n    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);\n  } else {\n    // mark that we need a transform, so that any data that comes in\n    // will get processed, now that we've asked for it.\n    ts.needTransform = true;\n  }\n};\nTransform.prototype._destroy = function (err, cb) {\n  Duplex.prototype._destroy.call(this, err, function (err2) {\n    cb(err2);\n  });\n};\nfunction done(stream, er, data) {\n  if (er) return stream.emit('error', er);\n  if (data != null)\n    // single equals check for both `null` and `undefined`\n    stream.push(data);\n\n  // TODO(BridgeAR): Write a test for these two error cases\n  // if there's nothing in the write buffer, then that means\n  // that nothing more will ever be provided\n  if (stream._writableState.length) throw new ERR_TRANSFORM_WITH_LENGTH_0();\n  if (stream._transformState.transforming) throw new ERR_TRANSFORM_ALREADY_TRANSFORMING();\n  return stream.push(null);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/md5.js/node_modules/readable-stream/lib/_stream_transform.js\n");

/***/ }),

/***/ "./node_modules/md5.js/node_modules/readable-stream/lib/_stream_writable.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/md5.js/node_modules/readable-stream/lib/_stream_writable.js ***!
  \**********************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval("/* provided dependency */ var process = __webpack_require__(/*! process */ \"./node_modules/process/browser.js\");\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// A bit simpler than readable streams.\n// Implement an async ._write(chunk, encoding, cb), and it'll handle all\n// the drain event emission and buffering.\n\n\n\nmodule.exports = Writable;\n\n/* <replacement> */\nfunction WriteReq(chunk, encoding, cb) {\n  this.chunk = chunk;\n  this.encoding = encoding;\n  this.callback = cb;\n  this.next = null;\n}\n\n// It seems a linked list but it is not\n// there will be only 2 of these for each stream\nfunction CorkedRequest(state) {\n  var _this = this;\n  this.next = null;\n  this.entry = null;\n  this.finish = function () {\n    onCorkedFinish(_this, state);\n  };\n}\n/* </replacement> */\n\n/*<replacement>*/\nvar Duplex;\n/*</replacement>*/\n\nWritable.WritableState = WritableState;\n\n/*<replacement>*/\nvar internalUtil = {\n  deprecate: __webpack_require__(/*! util-deprecate */ \"./node_modules/util-deprecate/browser.js\")\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream = __webpack_require__(/*! ./internal/streams/stream */ \"./node_modules/md5.js/node_modules/readable-stream/lib/internal/streams/stream-browser.js\");\n/*</replacement>*/\n\nvar Buffer = (__webpack_require__(/*! buffer */ \"./node_modules/buffer/index.js\").Buffer);\nvar OurUint8Array = (typeof __webpack_require__.g !== 'undefined' ? __webpack_require__.g : typeof window !== 'undefined' ? window : typeof self !== 'undefined' ? self : {}).Uint8Array || function () {};\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\nvar destroyImpl = __webpack_require__(/*! ./internal/streams/destroy */ \"./node_modules/md5.js/node_modules/readable-stream/lib/internal/streams/destroy.js\");\nvar _require = __webpack_require__(/*! ./internal/streams/state */ \"./node_modules/md5.js/node_modules/readable-stream/lib/internal/streams/state.js\"),\n  getHighWaterMark = _require.getHighWaterMark;\nvar _require$codes = (__webpack_require__(/*! ../errors */ \"./node_modules/md5.js/node_modules/readable-stream/errors-browser.js\").codes),\n  ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE,\n  ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,\n  ERR_MULTIPLE_CALLBACK = _require$codes.ERR_MULTIPLE_CALLBACK,\n  ERR_STREAM_CANNOT_PIPE = _require$codes.ERR_STREAM_CANNOT_PIPE,\n  ERR_STREAM_DESTROYED = _require$codes.ERR_STREAM_DESTROYED,\n  ERR_STREAM_NULL_VALUES = _require$codes.ERR_STREAM_NULL_VALUES,\n  ERR_STREAM_WRITE_AFTER_END = _require$codes.ERR_STREAM_WRITE_AFTER_END,\n  ERR_UNKNOWN_ENCODING = _require$codes.ERR_UNKNOWN_ENCODING;\nvar errorOrDestroy = destroyImpl.errorOrDestroy;\n__webpack_require__(/*! inherits */ \"./node_modules/inherits/inherits_browser.js\")(Writable, Stream);\nfunction nop() {}\nfunction WritableState(options, stream, isDuplex) {\n  Duplex = Duplex || __webpack_require__(/*! ./_stream_duplex */ \"./node_modules/md5.js/node_modules/readable-stream/lib/_stream_duplex.js\");\n  options = options || {};\n\n  // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream,\n  // e.g. options.readableObjectMode vs. options.writableObjectMode, etc.\n  if (typeof isDuplex !== 'boolean') isDuplex = stream instanceof Duplex;\n\n  // object stream flag to indicate whether or not this stream\n  // contains buffers or objects.\n  this.objectMode = !!options.objectMode;\n  if (isDuplex) this.objectMode = this.objectMode || !!options.writableObjectMode;\n\n  // the point at which write() starts returning false\n  // Note: 0 is a valid value, means that we always return false if\n  // the entire buffer is not flushed immediately on write()\n  this.highWaterMark = getHighWaterMark(this, options, 'writableHighWaterMark', isDuplex);\n\n  // if _final has been called\n  this.finalCalled = false;\n\n  // drain event flag.\n  this.needDrain = false;\n  // at the start of calling end()\n  this.ending = false;\n  // when end() has been called, and returned\n  this.ended = false;\n  // when 'finish' is emitted\n  this.finished = false;\n\n  // has it been destroyed\n  this.destroyed = false;\n\n  // should we decode strings into buffers before passing to _write?\n  // this is here so that some node-core streams can optimize string\n  // handling at a lower level.\n  var noDecode = options.decodeStrings === false;\n  this.decodeStrings = !noDecode;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // not an actual buffer we keep track of, but a measurement\n  // of how much we're waiting to get pushed to some underlying\n  // socket or file.\n  this.length = 0;\n\n  // a flag to see when we're in the middle of a write.\n  this.writing = false;\n\n  // when true all writes will be buffered until .uncork() call\n  this.corked = 0;\n\n  // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, because any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n  this.sync = true;\n\n  // a flag to know if we're processing previously buffered items, which\n  // may call the _write() callback in the same tick, so that we don't\n  // end up in an overlapped onwrite situation.\n  this.bufferProcessing = false;\n\n  // the callback that's passed to _write(chunk,cb)\n  this.onwrite = function (er) {\n    onwrite(stream, er);\n  };\n\n  // the callback that the user supplies to write(chunk,encoding,cb)\n  this.writecb = null;\n\n  // the amount that is being written when _write is called.\n  this.writelen = 0;\n  this.bufferedRequest = null;\n  this.lastBufferedRequest = null;\n\n  // number of pending user-supplied write callbacks\n  // this must be 0 before 'finish' can be emitted\n  this.pendingcb = 0;\n\n  // emit prefinish if the only thing we're waiting for is _write cbs\n  // This is relevant for synchronous Transform streams\n  this.prefinished = false;\n\n  // True if the error was already emitted and should not be thrown again\n  this.errorEmitted = false;\n\n  // Should close be emitted on destroy. Defaults to true.\n  this.emitClose = options.emitClose !== false;\n\n  // Should .destroy() be called after 'finish' (and potentially 'end')\n  this.autoDestroy = !!options.autoDestroy;\n\n  // count buffered requests\n  this.bufferedRequestCount = 0;\n\n  // allocate the first CorkedRequest, there is always\n  // one allocated and free to use, and we maintain at most two\n  this.corkedRequestsFree = new CorkedRequest(this);\n}\nWritableState.prototype.getBuffer = function getBuffer() {\n  var current = this.bufferedRequest;\n  var out = [];\n  while (current) {\n    out.push(current);\n    current = current.next;\n  }\n  return out;\n};\n(function () {\n  try {\n    Object.defineProperty(WritableState.prototype, 'buffer', {\n      get: internalUtil.deprecate(function writableStateBufferGetter() {\n        return this.getBuffer();\n      }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.', 'DEP0003')\n    });\n  } catch (_) {}\n})();\n\n// Test _writableState for inheritance to account for Duplex streams,\n// whose prototype chain only points to Readable.\nvar realHasInstance;\nif (typeof Symbol === 'function' && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] === 'function') {\n  realHasInstance = Function.prototype[Symbol.hasInstance];\n  Object.defineProperty(Writable, Symbol.hasInstance, {\n    value: function value(object) {\n      if (realHasInstance.call(this, object)) return true;\n      if (this !== Writable) return false;\n      return object && object._writableState instanceof WritableState;\n    }\n  });\n} else {\n  realHasInstance = function realHasInstance(object) {\n    return object instanceof this;\n  };\n}\nfunction Writable(options) {\n  Duplex = Duplex || __webpack_require__(/*! ./_stream_duplex */ \"./node_modules/md5.js/node_modules/readable-stream/lib/_stream_duplex.js\");\n\n  // Writable ctor is applied to Duplexes, too.\n  // `realHasInstance` is necessary because using plain `instanceof`\n  // would return false, as no `_writableState` property is attached.\n\n  // Trying to use the custom `instanceof` for Writable here will also break the\n  // Node.js LazyTransform implementation, which has a non-trivial getter for\n  // `_writableState` that would lead to infinite recursion.\n\n  // Checking for a Stream.Duplex instance is faster here instead of inside\n  // the WritableState constructor, at least with V8 6.5\n  var isDuplex = this instanceof Duplex;\n  if (!isDuplex && !realHasInstance.call(Writable, this)) return new Writable(options);\n  this._writableState = new WritableState(options, this, isDuplex);\n\n  // legacy.\n  this.writable = true;\n  if (options) {\n    if (typeof options.write === 'function') this._write = options.write;\n    if (typeof options.writev === 'function') this._writev = options.writev;\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n    if (typeof options.final === 'function') this._final = options.final;\n  }\n  Stream.call(this);\n}\n\n// Otherwise people can pipe Writable streams, which is just wrong.\nWritable.prototype.pipe = function () {\n  errorOrDestroy(this, new ERR_STREAM_CANNOT_PIPE());\n};\nfunction writeAfterEnd(stream, cb) {\n  var er = new ERR_STREAM_WRITE_AFTER_END();\n  // TODO: defer error events consistently everywhere, not just the cb\n  errorOrDestroy(stream, er);\n  process.nextTick(cb, er);\n}\n\n// Checks that a user-supplied chunk is valid, especially for the particular\n// mode the stream is in. Currently this means that `null` is never accepted\n// and undefined/non-string values are only allowed in object mode.\nfunction validChunk(stream, state, chunk, cb) {\n  var er;\n  if (chunk === null) {\n    er = new ERR_STREAM_NULL_VALUES();\n  } else if (typeof chunk !== 'string' && !state.objectMode) {\n    er = new ERR_INVALID_ARG_TYPE('chunk', ['string', 'Buffer'], chunk);\n  }\n  if (er) {\n    errorOrDestroy(stream, er);\n    process.nextTick(cb, er);\n    return false;\n  }\n  return true;\n}\nWritable.prototype.write = function (chunk, encoding, cb) {\n  var state = this._writableState;\n  var ret = false;\n  var isBuf = !state.objectMode && _isUint8Array(chunk);\n  if (isBuf && !Buffer.isBuffer(chunk)) {\n    chunk = _uint8ArrayToBuffer(chunk);\n  }\n  if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n  if (isBuf) encoding = 'buffer';else if (!encoding) encoding = state.defaultEncoding;\n  if (typeof cb !== 'function') cb = nop;\n  if (state.ending) writeAfterEnd(this, cb);else if (isBuf || validChunk(this, state, chunk, cb)) {\n    state.pendingcb++;\n    ret = writeOrBuffer(this, state, isBuf, chunk, encoding, cb);\n  }\n  return ret;\n};\nWritable.prototype.cork = function () {\n  this._writableState.corked++;\n};\nWritable.prototype.uncork = function () {\n  var state = this._writableState;\n  if (state.corked) {\n    state.corked--;\n    if (!state.writing && !state.corked && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);\n  }\n};\nWritable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {\n  // node::ParseEncoding() requires lower case.\n  if (typeof encoding === 'string') encoding = encoding.toLowerCase();\n  if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1)) throw new ERR_UNKNOWN_ENCODING(encoding);\n  this._writableState.defaultEncoding = encoding;\n  return this;\n};\nObject.defineProperty(Writable.prototype, 'writableBuffer', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState && this._writableState.getBuffer();\n  }\n});\nfunction decodeChunk(state, chunk, encoding) {\n  if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {\n    chunk = Buffer.from(chunk, encoding);\n  }\n  return chunk;\n}\nObject.defineProperty(Writable.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.highWaterMark;\n  }\n});\n\n// if we're already writing something, then just put this\n// in the queue, and wait our turn.  Otherwise, call _write\n// If we return false, then we need a drain event, so set that flag.\nfunction writeOrBuffer(stream, state, isBuf, chunk, encoding, cb) {\n  if (!isBuf) {\n    var newChunk = decodeChunk(state, chunk, encoding);\n    if (chunk !== newChunk) {\n      isBuf = true;\n      encoding = 'buffer';\n      chunk = newChunk;\n    }\n  }\n  var len = state.objectMode ? 1 : chunk.length;\n  state.length += len;\n  var ret = state.length < state.highWaterMark;\n  // we must ensure that previous needDrain will not be reset to false.\n  if (!ret) state.needDrain = true;\n  if (state.writing || state.corked) {\n    var last = state.lastBufferedRequest;\n    state.lastBufferedRequest = {\n      chunk: chunk,\n      encoding: encoding,\n      isBuf: isBuf,\n      callback: cb,\n      next: null\n    };\n    if (last) {\n      last.next = state.lastBufferedRequest;\n    } else {\n      state.bufferedRequest = state.lastBufferedRequest;\n    }\n    state.bufferedRequestCount += 1;\n  } else {\n    doWrite(stream, state, false, len, chunk, encoding, cb);\n  }\n  return ret;\n}\nfunction doWrite(stream, state, writev, len, chunk, encoding, cb) {\n  state.writelen = len;\n  state.writecb = cb;\n  state.writing = true;\n  state.sync = true;\n  if (state.destroyed) state.onwrite(new ERR_STREAM_DESTROYED('write'));else if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);\n  state.sync = false;\n}\nfunction onwriteError(stream, state, sync, er, cb) {\n  --state.pendingcb;\n  if (sync) {\n    // defer the callback if we are being called synchronously\n    // to avoid piling up things on the stack\n    process.nextTick(cb, er);\n    // this can emit finish, and it will always happen\n    // after error\n    process.nextTick(finishMaybe, stream, state);\n    stream._writableState.errorEmitted = true;\n    errorOrDestroy(stream, er);\n  } else {\n    // the caller expect this to happen before if\n    // it is async\n    cb(er);\n    stream._writableState.errorEmitted = true;\n    errorOrDestroy(stream, er);\n    // this can emit finish, but finish must\n    // always follow error\n    finishMaybe(stream, state);\n  }\n}\nfunction onwriteStateUpdate(state) {\n  state.writing = false;\n  state.writecb = null;\n  state.length -= state.writelen;\n  state.writelen = 0;\n}\nfunction onwrite(stream, er) {\n  var state = stream._writableState;\n  var sync = state.sync;\n  var cb = state.writecb;\n  if (typeof cb !== 'function') throw new ERR_MULTIPLE_CALLBACK();\n  onwriteStateUpdate(state);\n  if (er) onwriteError(stream, state, sync, er, cb);else {\n    // Check if we're actually ready to finish, but don't emit yet\n    var finished = needFinish(state) || stream.destroyed;\n    if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {\n      clearBuffer(stream, state);\n    }\n    if (sync) {\n      process.nextTick(afterWrite, stream, state, finished, cb);\n    } else {\n      afterWrite(stream, state, finished, cb);\n    }\n  }\n}\nfunction afterWrite(stream, state, finished, cb) {\n  if (!finished) onwriteDrain(stream, state);\n  state.pendingcb--;\n  cb();\n  finishMaybe(stream, state);\n}\n\n// Must force callback to be called on nextTick, so that we don't\n// emit 'drain' before the write() consumer gets the 'false' return\n// value, and has a chance to attach a 'drain' listener.\nfunction onwriteDrain(stream, state) {\n  if (state.length === 0 && state.needDrain) {\n    state.needDrain = false;\n    stream.emit('drain');\n  }\n}\n\n// if there's something in the buffer waiting, then process it\nfunction clearBuffer(stream, state) {\n  state.bufferProcessing = true;\n  var entry = state.bufferedRequest;\n  if (stream._writev && entry && entry.next) {\n    // Fast case, write everything using _writev()\n    var l = state.bufferedRequestCount;\n    var buffer = new Array(l);\n    var holder = state.corkedRequestsFree;\n    holder.entry = entry;\n    var count = 0;\n    var allBuffers = true;\n    while (entry) {\n      buffer[count] = entry;\n      if (!entry.isBuf) allBuffers = false;\n      entry = entry.next;\n      count += 1;\n    }\n    buffer.allBuffers = allBuffers;\n    doWrite(stream, state, true, state.length, buffer, '', holder.finish);\n\n    // doWrite is almost always async, defer these to save a bit of time\n    // as the hot path ends with doWrite\n    state.pendingcb++;\n    state.lastBufferedRequest = null;\n    if (holder.next) {\n      state.corkedRequestsFree = holder.next;\n      holder.next = null;\n    } else {\n      state.corkedRequestsFree = new CorkedRequest(state);\n    }\n    state.bufferedRequestCount = 0;\n  } else {\n    // Slow case, write chunks one-by-one\n    while (entry) {\n      var chunk = entry.chunk;\n      var encoding = entry.encoding;\n      var cb = entry.callback;\n      var len = state.objectMode ? 1 : chunk.length;\n      doWrite(stream, state, false, len, chunk, encoding, cb);\n      entry = entry.next;\n      state.bufferedRequestCount--;\n      // if we didn't call the onwrite immediately, then\n      // it means that we need to wait until it does.\n      // also, that means that the chunk and cb are currently\n      // being processed, so move the buffer counter past them.\n      if (state.writing) {\n        break;\n      }\n    }\n    if (entry === null) state.lastBufferedRequest = null;\n  }\n  state.bufferedRequest = entry;\n  state.bufferProcessing = false;\n}\nWritable.prototype._write = function (chunk, encoding, cb) {\n  cb(new ERR_METHOD_NOT_IMPLEMENTED('_write()'));\n};\nWritable.prototype._writev = null;\nWritable.prototype.end = function (chunk, encoding, cb) {\n  var state = this._writableState;\n  if (typeof chunk === 'function') {\n    cb = chunk;\n    chunk = null;\n    encoding = null;\n  } else if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n  if (chunk !== null && chunk !== undefined) this.write(chunk, encoding);\n\n  // .end() fully uncorks\n  if (state.corked) {\n    state.corked = 1;\n    this.uncork();\n  }\n\n  // ignore unnecessary end() calls.\n  if (!state.ending) endWritable(this, state, cb);\n  return this;\n};\nObject.defineProperty(Writable.prototype, 'writableLength', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.length;\n  }\n});\nfunction needFinish(state) {\n  return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;\n}\nfunction callFinal(stream, state) {\n  stream._final(function (err) {\n    state.pendingcb--;\n    if (err) {\n      errorOrDestroy(stream, err);\n    }\n    state.prefinished = true;\n    stream.emit('prefinish');\n    finishMaybe(stream, state);\n  });\n}\nfunction prefinish(stream, state) {\n  if (!state.prefinished && !state.finalCalled) {\n    if (typeof stream._final === 'function' && !state.destroyed) {\n      state.pendingcb++;\n      state.finalCalled = true;\n      process.nextTick(callFinal, stream, state);\n    } else {\n      state.prefinished = true;\n      stream.emit('prefinish');\n    }\n  }\n}\nfunction finishMaybe(stream, state) {\n  var need = needFinish(state);\n  if (need) {\n    prefinish(stream, state);\n    if (state.pendingcb === 0) {\n      state.finished = true;\n      stream.emit('finish');\n      if (state.autoDestroy) {\n        // In case of duplex streams we need a way to detect\n        // if the readable side is ready for autoDestroy as well\n        var rState = stream._readableState;\n        if (!rState || rState.autoDestroy && rState.endEmitted) {\n          stream.destroy();\n        }\n      }\n    }\n  }\n  return need;\n}\nfunction endWritable(stream, state, cb) {\n  state.ending = true;\n  finishMaybe(stream, state);\n  if (cb) {\n    if (state.finished) process.nextTick(cb);else stream.once('finish', cb);\n  }\n  state.ended = true;\n  stream.writable = false;\n}\nfunction onCorkedFinish(corkReq, state, err) {\n  var entry = corkReq.entry;\n  corkReq.entry = null;\n  while (entry) {\n    var cb = entry.callback;\n    state.pendingcb--;\n    cb(err);\n    entry = entry.next;\n  }\n\n  // reuse the free corkReq.\n  state.corkedRequestsFree.next = corkReq;\n}\nObject.defineProperty(Writable.prototype, 'destroyed', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    if (this._writableState === undefined) {\n      return false;\n    }\n    return this._writableState.destroyed;\n  },\n  set: function set(value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._writableState) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._writableState.destroyed = value;\n  }\n});\nWritable.prototype.destroy = destroyImpl.destroy;\nWritable.prototype._undestroy = destroyImpl.undestroy;\nWritable.prototype._destroy = function (err, cb) {\n  cb(err);\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/md5.js/node_modules/readable-stream/lib/_stream_writable.js\n");

/***/ }),

/***/ "./node_modules/md5.js/node_modules/readable-stream/lib/internal/streams/async_iterator.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/md5.js/node_modules/readable-stream/lib/internal/streams/async_iterator.js ***!
  \*************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval("/* provided dependency */ var process = __webpack_require__(/*! process */ \"./node_modules/process/browser.js\");\n\n\nvar _Object$setPrototypeO;\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nvar finished = __webpack_require__(/*! ./end-of-stream */ \"./node_modules/md5.js/node_modules/readable-stream/lib/internal/streams/end-of-stream.js\");\nvar kLastResolve = Symbol('lastResolve');\nvar kLastReject = Symbol('lastReject');\nvar kError = Symbol('error');\nvar kEnded = Symbol('ended');\nvar kLastPromise = Symbol('lastPromise');\nvar kHandlePromise = Symbol('handlePromise');\nvar kStream = Symbol('stream');\nfunction createIterResult(value, done) {\n  return {\n    value: value,\n    done: done\n  };\n}\nfunction readAndResolve(iter) {\n  var resolve = iter[kLastResolve];\n  if (resolve !== null) {\n    var data = iter[kStream].read();\n    // we defer if data is null\n    // we can be expecting either 'end' or\n    // 'error'\n    if (data !== null) {\n      iter[kLastPromise] = null;\n      iter[kLastResolve] = null;\n      iter[kLastReject] = null;\n      resolve(createIterResult(data, false));\n    }\n  }\n}\nfunction onReadable(iter) {\n  // we wait for the next tick, because it might\n  // emit an error with process.nextTick\n  process.nextTick(readAndResolve, iter);\n}\nfunction wrapForNext(lastPromise, iter) {\n  return function (resolve, reject) {\n    lastPromise.then(function () {\n      if (iter[kEnded]) {\n        resolve(createIterResult(undefined, true));\n        return;\n      }\n      iter[kHandlePromise](resolve, reject);\n    }, reject);\n  };\n}\nvar AsyncIteratorPrototype = Object.getPrototypeOf(function () {});\nvar ReadableStreamAsyncIteratorPrototype = Object.setPrototypeOf((_Object$setPrototypeO = {\n  get stream() {\n    return this[kStream];\n  },\n  next: function next() {\n    var _this = this;\n    // if we have detected an error in the meanwhile\n    // reject straight away\n    var error = this[kError];\n    if (error !== null) {\n      return Promise.reject(error);\n    }\n    if (this[kEnded]) {\n      return Promise.resolve(createIterResult(undefined, true));\n    }\n    if (this[kStream].destroyed) {\n      // We need to defer via nextTick because if .destroy(err) is\n      // called, the error will be emitted via nextTick, and\n      // we cannot guarantee that there is no error lingering around\n      // waiting to be emitted.\n      return new Promise(function (resolve, reject) {\n        process.nextTick(function () {\n          if (_this[kError]) {\n            reject(_this[kError]);\n          } else {\n            resolve(createIterResult(undefined, true));\n          }\n        });\n      });\n    }\n\n    // if we have multiple next() calls\n    // we will wait for the previous Promise to finish\n    // this logic is optimized to support for await loops,\n    // where next() is only called once at a time\n    var lastPromise = this[kLastPromise];\n    var promise;\n    if (lastPromise) {\n      promise = new Promise(wrapForNext(lastPromise, this));\n    } else {\n      // fast path needed to support multiple this.push()\n      // without triggering the next() queue\n      var data = this[kStream].read();\n      if (data !== null) {\n        return Promise.resolve(createIterResult(data, false));\n      }\n      promise = new Promise(this[kHandlePromise]);\n    }\n    this[kLastPromise] = promise;\n    return promise;\n  }\n}, _defineProperty(_Object$setPrototypeO, Symbol.asyncIterator, function () {\n  return this;\n}), _defineProperty(_Object$setPrototypeO, \"return\", function _return() {\n  var _this2 = this;\n  // destroy(err, cb) is a private API\n  // we can guarantee we have that here, because we control the\n  // Readable class this is attached to\n  return new Promise(function (resolve, reject) {\n    _this2[kStream].destroy(null, function (err) {\n      if (err) {\n        reject(err);\n        return;\n      }\n      resolve(createIterResult(undefined, true));\n    });\n  });\n}), _Object$setPrototypeO), AsyncIteratorPrototype);\nvar createReadableStreamAsyncIterator = function createReadableStreamAsyncIterator(stream) {\n  var _Object$create;\n  var iterator = Object.create(ReadableStreamAsyncIteratorPrototype, (_Object$create = {}, _defineProperty(_Object$create, kStream, {\n    value: stream,\n    writable: true\n  }), _defineProperty(_Object$create, kLastResolve, {\n    value: null,\n    writable: true\n  }), _defineProperty(_Object$create, kLastReject, {\n    value: null,\n    writable: true\n  }), _defineProperty(_Object$create, kError, {\n    value: null,\n    writable: true\n  }), _defineProperty(_Object$create, kEnded, {\n    value: stream._readableState.endEmitted,\n    writable: true\n  }), _defineProperty(_Object$create, kHandlePromise, {\n    value: function value(resolve, reject) {\n      var data = iterator[kStream].read();\n      if (data) {\n        iterator[kLastPromise] = null;\n        iterator[kLastResolve] = null;\n        iterator[kLastReject] = null;\n        resolve(createIterResult(data, false));\n      } else {\n        iterator[kLastResolve] = resolve;\n        iterator[kLastReject] = reject;\n      }\n    },\n    writable: true\n  }), _Object$create));\n  iterator[kLastPromise] = null;\n  finished(stream, function (err) {\n    if (err && err.code !== 'ERR_STREAM_PREMATURE_CLOSE') {\n      var reject = iterator[kLastReject];\n      // reject if we are waiting for data in the Promise\n      // returned by next() and store the error\n      if (reject !== null) {\n        iterator[kLastPromise] = null;\n        iterator[kLastResolve] = null;\n        iterator[kLastReject] = null;\n        reject(err);\n      }\n      iterator[kError] = err;\n      return;\n    }\n    var resolve = iterator[kLastResolve];\n    if (resolve !== null) {\n      iterator[kLastPromise] = null;\n      iterator[kLastResolve] = null;\n      iterator[kLastReject] = null;\n      resolve(createIterResult(undefined, true));\n    }\n    iterator[kEnded] = true;\n  });\n  stream.on('readable', onReadable.bind(null, iterator));\n  return iterator;\n};\nmodule.exports = createReadableStreamAsyncIterator;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/md5.js/node_modules/readable-stream/lib/internal/streams/async_iterator.js\n");

/***/ }),

/***/ "./node_modules/md5.js/node_modules/readable-stream/lib/internal/streams/buffer_list.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/md5.js/node_modules/readable-stream/lib/internal/streams/buffer_list.js ***!
  \**********************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval("\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nvar _require = __webpack_require__(/*! buffer */ \"./node_modules/buffer/index.js\"),\n  Buffer = _require.Buffer;\nvar _require2 = __webpack_require__(/*! util */ \"?924a\"),\n  inspect = _require2.inspect;\nvar custom = inspect && inspect.custom || 'inspect';\nfunction copyBuffer(src, target, offset) {\n  Buffer.prototype.copy.call(src, target, offset);\n}\nmodule.exports = /*#__PURE__*/function () {\n  function BufferList() {\n    _classCallCheck(this, BufferList);\n    this.head = null;\n    this.tail = null;\n    this.length = 0;\n  }\n  _createClass(BufferList, [{\n    key: \"push\",\n    value: function push(v) {\n      var entry = {\n        data: v,\n        next: null\n      };\n      if (this.length > 0) this.tail.next = entry;else this.head = entry;\n      this.tail = entry;\n      ++this.length;\n    }\n  }, {\n    key: \"unshift\",\n    value: function unshift(v) {\n      var entry = {\n        data: v,\n        next: this.head\n      };\n      if (this.length === 0) this.tail = entry;\n      this.head = entry;\n      ++this.length;\n    }\n  }, {\n    key: \"shift\",\n    value: function shift() {\n      if (this.length === 0) return;\n      var ret = this.head.data;\n      if (this.length === 1) this.head = this.tail = null;else this.head = this.head.next;\n      --this.length;\n      return ret;\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this.head = this.tail = null;\n      this.length = 0;\n    }\n  }, {\n    key: \"join\",\n    value: function join(s) {\n      if (this.length === 0) return '';\n      var p = this.head;\n      var ret = '' + p.data;\n      while (p = p.next) ret += s + p.data;\n      return ret;\n    }\n  }, {\n    key: \"concat\",\n    value: function concat(n) {\n      if (this.length === 0) return Buffer.alloc(0);\n      var ret = Buffer.allocUnsafe(n >>> 0);\n      var p = this.head;\n      var i = 0;\n      while (p) {\n        copyBuffer(p.data, ret, i);\n        i += p.data.length;\n        p = p.next;\n      }\n      return ret;\n    }\n\n    // Consumes a specified amount of bytes or characters from the buffered data.\n  }, {\n    key: \"consume\",\n    value: function consume(n, hasStrings) {\n      var ret;\n      if (n < this.head.data.length) {\n        // `slice` is the same for buffers and strings.\n        ret = this.head.data.slice(0, n);\n        this.head.data = this.head.data.slice(n);\n      } else if (n === this.head.data.length) {\n        // First chunk is a perfect match.\n        ret = this.shift();\n      } else {\n        // Result spans more than one buffer.\n        ret = hasStrings ? this._getString(n) : this._getBuffer(n);\n      }\n      return ret;\n    }\n  }, {\n    key: \"first\",\n    value: function first() {\n      return this.head.data;\n    }\n\n    // Consumes a specified amount of characters from the buffered data.\n  }, {\n    key: \"_getString\",\n    value: function _getString(n) {\n      var p = this.head;\n      var c = 1;\n      var ret = p.data;\n      n -= ret.length;\n      while (p = p.next) {\n        var str = p.data;\n        var nb = n > str.length ? str.length : n;\n        if (nb === str.length) ret += str;else ret += str.slice(0, n);\n        n -= nb;\n        if (n === 0) {\n          if (nb === str.length) {\n            ++c;\n            if (p.next) this.head = p.next;else this.head = this.tail = null;\n          } else {\n            this.head = p;\n            p.data = str.slice(nb);\n          }\n          break;\n        }\n        ++c;\n      }\n      this.length -= c;\n      return ret;\n    }\n\n    // Consumes a specified amount of bytes from the buffered data.\n  }, {\n    key: \"_getBuffer\",\n    value: function _getBuffer(n) {\n      var ret = Buffer.allocUnsafe(n);\n      var p = this.head;\n      var c = 1;\n      p.data.copy(ret);\n      n -= p.data.length;\n      while (p = p.next) {\n        var buf = p.data;\n        var nb = n > buf.length ? buf.length : n;\n        buf.copy(ret, ret.length - n, 0, nb);\n        n -= nb;\n        if (n === 0) {\n          if (nb === buf.length) {\n            ++c;\n            if (p.next) this.head = p.next;else this.head = this.tail = null;\n          } else {\n            this.head = p;\n            p.data = buf.slice(nb);\n          }\n          break;\n        }\n        ++c;\n      }\n      this.length -= c;\n      return ret;\n    }\n\n    // Make sure the linked list only shows the minimal necessary information.\n  }, {\n    key: custom,\n    value: function value(_, options) {\n      return inspect(this, _objectSpread(_objectSpread({}, options), {}, {\n        // Only inspect one level.\n        depth: 0,\n        // It should not recurse.\n        customInspect: false\n      }));\n    }\n  }]);\n  return BufferList;\n}();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/md5.js/node_modules/readable-stream/lib/internal/streams/buffer_list.js\n");

/***/ }),

/***/ "./node_modules/md5.js/node_modules/readable-stream/lib/internal/streams/destroy.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/md5.js/node_modules/readable-stream/lib/internal/streams/destroy.js ***!
  \******************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval("/* provided dependency */ var process = __webpack_require__(/*! process */ \"./node_modules/process/browser.js\");\n\n\n// undocumented cb() API, needed for core, not for public API\nfunction destroy(err, cb) {\n  var _this = this;\n  var readableDestroyed = this._readableState && this._readableState.destroyed;\n  var writableDestroyed = this._writableState && this._writableState.destroyed;\n  if (readableDestroyed || writableDestroyed) {\n    if (cb) {\n      cb(err);\n    } else if (err) {\n      if (!this._writableState) {\n        process.nextTick(emitErrorNT, this, err);\n      } else if (!this._writableState.errorEmitted) {\n        this._writableState.errorEmitted = true;\n        process.nextTick(emitErrorNT, this, err);\n      }\n    }\n    return this;\n  }\n\n  // we set destroyed to true before firing error callbacks in order\n  // to make it re-entrance safe in case destroy() is called within callbacks\n\n  if (this._readableState) {\n    this._readableState.destroyed = true;\n  }\n\n  // if this is a duplex stream mark the writable part as destroyed as well\n  if (this._writableState) {\n    this._writableState.destroyed = true;\n  }\n  this._destroy(err || null, function (err) {\n    if (!cb && err) {\n      if (!_this._writableState) {\n        process.nextTick(emitErrorAndCloseNT, _this, err);\n      } else if (!_this._writableState.errorEmitted) {\n        _this._writableState.errorEmitted = true;\n        process.nextTick(emitErrorAndCloseNT, _this, err);\n      } else {\n        process.nextTick(emitCloseNT, _this);\n      }\n    } else if (cb) {\n      process.nextTick(emitCloseNT, _this);\n      cb(err);\n    } else {\n      process.nextTick(emitCloseNT, _this);\n    }\n  });\n  return this;\n}\nfunction emitErrorAndCloseNT(self, err) {\n  emitErrorNT(self, err);\n  emitCloseNT(self);\n}\nfunction emitCloseNT(self) {\n  if (self._writableState && !self._writableState.emitClose) return;\n  if (self._readableState && !self._readableState.emitClose) return;\n  self.emit('close');\n}\nfunction undestroy() {\n  if (this._readableState) {\n    this._readableState.destroyed = false;\n    this._readableState.reading = false;\n    this._readableState.ended = false;\n    this._readableState.endEmitted = false;\n  }\n  if (this._writableState) {\n    this._writableState.destroyed = false;\n    this._writableState.ended = false;\n    this._writableState.ending = false;\n    this._writableState.finalCalled = false;\n    this._writableState.prefinished = false;\n    this._writableState.finished = false;\n    this._writableState.errorEmitted = false;\n  }\n}\nfunction emitErrorNT(self, err) {\n  self.emit('error', err);\n}\nfunction errorOrDestroy(stream, err) {\n  // We have tests that rely on errors being emitted\n  // in the same tick, so changing this is semver major.\n  // For now when you opt-in to autoDestroy we allow\n  // the error to be emitted nextTick. In a future\n  // semver major update we should change the default to this.\n\n  var rState = stream._readableState;\n  var wState = stream._writableState;\n  if (rState && rState.autoDestroy || wState && wState.autoDestroy) stream.destroy(err);else stream.emit('error', err);\n}\nmodule.exports = {\n  destroy: destroy,\n  undestroy: undestroy,\n  errorOrDestroy: errorOrDestroy\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWQ1LmpzL25vZGVfbW9kdWxlcy9yZWFkYWJsZS1zdHJlYW0vbGliL2ludGVybmFsL3N0cmVhbXMvZGVzdHJveS5qcy5qcyIsIm1hcHBpbmdzIjoiO0FBQWE7O0FBRWI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBLFFBQVEsT0FBTztBQUNmLFFBQVE7QUFDUjtBQUNBLFFBQVEsT0FBTztBQUNmO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUSxPQUFPO0FBQ2YsUUFBUTtBQUNSO0FBQ0EsUUFBUSxPQUFPO0FBQ2YsUUFBUTtBQUNSLFFBQVEsT0FBTztBQUNmO0FBQ0EsTUFBTTtBQUNOLE1BQU0sT0FBTztBQUNiO0FBQ0EsTUFBTTtBQUNOLE1BQU0sT0FBTztBQUNiO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSx3RkFBd0Y7QUFDeEY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9tZDUuanMvbm9kZV9tb2R1bGVzL3JlYWRhYmxlLXN0cmVhbS9saWIvaW50ZXJuYWwvc3RyZWFtcy9kZXN0cm95LmpzP2I2NDQiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG4vLyB1bmRvY3VtZW50ZWQgY2IoKSBBUEksIG5lZWRlZCBmb3IgY29yZSwgbm90IGZvciBwdWJsaWMgQVBJXG5mdW5jdGlvbiBkZXN0cm95KGVyciwgY2IpIHtcbiAgdmFyIF90aGlzID0gdGhpcztcbiAgdmFyIHJlYWRhYmxlRGVzdHJveWVkID0gdGhpcy5fcmVhZGFibGVTdGF0ZSAmJiB0aGlzLl9yZWFkYWJsZVN0YXRlLmRlc3Ryb3llZDtcbiAgdmFyIHdyaXRhYmxlRGVzdHJveWVkID0gdGhpcy5fd3JpdGFibGVTdGF0ZSAmJiB0aGlzLl93cml0YWJsZVN0YXRlLmRlc3Ryb3llZDtcbiAgaWYgKHJlYWRhYmxlRGVzdHJveWVkIHx8IHdyaXRhYmxlRGVzdHJveWVkKSB7XG4gICAgaWYgKGNiKSB7XG4gICAgICBjYihlcnIpO1xuICAgIH0gZWxzZSBpZiAoZXJyKSB7XG4gICAgICBpZiAoIXRoaXMuX3dyaXRhYmxlU3RhdGUpIHtcbiAgICAgICAgcHJvY2Vzcy5uZXh0VGljayhlbWl0RXJyb3JOVCwgdGhpcywgZXJyKTtcbiAgICAgIH0gZWxzZSBpZiAoIXRoaXMuX3dyaXRhYmxlU3RhdGUuZXJyb3JFbWl0dGVkKSB7XG4gICAgICAgIHRoaXMuX3dyaXRhYmxlU3RhdGUuZXJyb3JFbWl0dGVkID0gdHJ1ZTtcbiAgICAgICAgcHJvY2Vzcy5uZXh0VGljayhlbWl0RXJyb3JOVCwgdGhpcywgZXJyKTtcbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHRoaXM7XG4gIH1cblxuICAvLyB3ZSBzZXQgZGVzdHJveWVkIHRvIHRydWUgYmVmb3JlIGZpcmluZyBlcnJvciBjYWxsYmFja3MgaW4gb3JkZXJcbiAgLy8gdG8gbWFrZSBpdCByZS1lbnRyYW5jZSBzYWZlIGluIGNhc2UgZGVzdHJveSgpIGlzIGNhbGxlZCB3aXRoaW4gY2FsbGJhY2tzXG5cbiAgaWYgKHRoaXMuX3JlYWRhYmxlU3RhdGUpIHtcbiAgICB0aGlzLl9yZWFkYWJsZVN0YXRlLmRlc3Ryb3llZCA9IHRydWU7XG4gIH1cblxuICAvLyBpZiB0aGlzIGlzIGEgZHVwbGV4IHN0cmVhbSBtYXJrIHRoZSB3cml0YWJsZSBwYXJ0IGFzIGRlc3Ryb3llZCBhcyB3ZWxsXG4gIGlmICh0aGlzLl93cml0YWJsZVN0YXRlKSB7XG4gICAgdGhpcy5fd3JpdGFibGVTdGF0ZS5kZXN0cm95ZWQgPSB0cnVlO1xuICB9XG4gIHRoaXMuX2Rlc3Ryb3koZXJyIHx8IG51bGwsIGZ1bmN0aW9uIChlcnIpIHtcbiAgICBpZiAoIWNiICYmIGVycikge1xuICAgICAgaWYgKCFfdGhpcy5fd3JpdGFibGVTdGF0ZSkge1xuICAgICAgICBwcm9jZXNzLm5leHRUaWNrKGVtaXRFcnJvckFuZENsb3NlTlQsIF90aGlzLCBlcnIpO1xuICAgICAgfSBlbHNlIGlmICghX3RoaXMuX3dyaXRhYmxlU3RhdGUuZXJyb3JFbWl0dGVkKSB7XG4gICAgICAgIF90aGlzLl93cml0YWJsZVN0YXRlLmVycm9yRW1pdHRlZCA9IHRydWU7XG4gICAgICAgIHByb2Nlc3MubmV4dFRpY2soZW1pdEVycm9yQW5kQ2xvc2VOVCwgX3RoaXMsIGVycik7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBwcm9jZXNzLm5leHRUaWNrKGVtaXRDbG9zZU5ULCBfdGhpcyk7XG4gICAgICB9XG4gICAgfSBlbHNlIGlmIChjYikge1xuICAgICAgcHJvY2Vzcy5uZXh0VGljayhlbWl0Q2xvc2VOVCwgX3RoaXMpO1xuICAgICAgY2IoZXJyKTtcbiAgICB9IGVsc2Uge1xuICAgICAgcHJvY2Vzcy5uZXh0VGljayhlbWl0Q2xvc2VOVCwgX3RoaXMpO1xuICAgIH1cbiAgfSk7XG4gIHJldHVybiB0aGlzO1xufVxuZnVuY3Rpb24gZW1pdEVycm9yQW5kQ2xvc2VOVChzZWxmLCBlcnIpIHtcbiAgZW1pdEVycm9yTlQoc2VsZiwgZXJyKTtcbiAgZW1pdENsb3NlTlQoc2VsZik7XG59XG5mdW5jdGlvbiBlbWl0Q2xvc2VOVChzZWxmKSB7XG4gIGlmIChzZWxmLl93cml0YWJsZVN0YXRlICYmICFzZWxmLl93cml0YWJsZVN0YXRlLmVtaXRDbG9zZSkgcmV0dXJuO1xuICBpZiAoc2VsZi5fcmVhZGFibGVTdGF0ZSAmJiAhc2VsZi5fcmVhZGFibGVTdGF0ZS5lbWl0Q2xvc2UpIHJldHVybjtcbiAgc2VsZi5lbWl0KCdjbG9zZScpO1xufVxuZnVuY3Rpb24gdW5kZXN0cm95KCkge1xuICBpZiAodGhpcy5fcmVhZGFibGVTdGF0ZSkge1xuICAgIHRoaXMuX3JlYWRhYmxlU3RhdGUuZGVzdHJveWVkID0gZmFsc2U7XG4gICAgdGhpcy5fcmVhZGFibGVTdGF0ZS5yZWFkaW5nID0gZmFsc2U7XG4gICAgdGhpcy5fcmVhZGFibGVTdGF0ZS5lbmRlZCA9IGZhbHNlO1xuICAgIHRoaXMuX3JlYWRhYmxlU3RhdGUuZW5kRW1pdHRlZCA9IGZhbHNlO1xuICB9XG4gIGlmICh0aGlzLl93cml0YWJsZVN0YXRlKSB7XG4gICAgdGhpcy5fd3JpdGFibGVTdGF0ZS5kZXN0cm95ZWQgPSBmYWxzZTtcbiAgICB0aGlzLl93cml0YWJsZVN0YXRlLmVuZGVkID0gZmFsc2U7XG4gICAgdGhpcy5fd3JpdGFibGVTdGF0ZS5lbmRpbmcgPSBmYWxzZTtcbiAgICB0aGlzLl93cml0YWJsZVN0YXRlLmZpbmFsQ2FsbGVkID0gZmFsc2U7XG4gICAgdGhpcy5fd3JpdGFibGVTdGF0ZS5wcmVmaW5pc2hlZCA9IGZhbHNlO1xuICAgIHRoaXMuX3dyaXRhYmxlU3RhdGUuZmluaXNoZWQgPSBmYWxzZTtcbiAgICB0aGlzLl93cml0YWJsZVN0YXRlLmVycm9yRW1pdHRlZCA9IGZhbHNlO1xuICB9XG59XG5mdW5jdGlvbiBlbWl0RXJyb3JOVChzZWxmLCBlcnIpIHtcbiAgc2VsZi5lbWl0KCdlcnJvcicsIGVycik7XG59XG5mdW5jdGlvbiBlcnJvck9yRGVzdHJveShzdHJlYW0sIGVycikge1xuICAvLyBXZSBoYXZlIHRlc3RzIHRoYXQgcmVseSBvbiBlcnJvcnMgYmVpbmcgZW1pdHRlZFxuICAvLyBpbiB0aGUgc2FtZSB0aWNrLCBzbyBjaGFuZ2luZyB0aGlzIGlzIHNlbXZlciBtYWpvci5cbiAgLy8gRm9yIG5vdyB3aGVuIHlvdSBvcHQtaW4gdG8gYXV0b0Rlc3Ryb3kgd2UgYWxsb3dcbiAgLy8gdGhlIGVycm9yIHRvIGJlIGVtaXR0ZWQgbmV4dFRpY2suIEluIGEgZnV0dXJlXG4gIC8vIHNlbXZlciBtYWpvciB1cGRhdGUgd2Ugc2hvdWxkIGNoYW5nZSB0aGUgZGVmYXVsdCB0byB0aGlzLlxuXG4gIHZhciByU3RhdGUgPSBzdHJlYW0uX3JlYWRhYmxlU3RhdGU7XG4gIHZhciB3U3RhdGUgPSBzdHJlYW0uX3dyaXRhYmxlU3RhdGU7XG4gIGlmIChyU3RhdGUgJiYgclN0YXRlLmF1dG9EZXN0cm95IHx8IHdTdGF0ZSAmJiB3U3RhdGUuYXV0b0Rlc3Ryb3kpIHN0cmVhbS5kZXN0cm95KGVycik7ZWxzZSBzdHJlYW0uZW1pdCgnZXJyb3InLCBlcnIpO1xufVxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIGRlc3Ryb3k6IGRlc3Ryb3ksXG4gIHVuZGVzdHJveTogdW5kZXN0cm95LFxuICBlcnJvck9yRGVzdHJveTogZXJyb3JPckRlc3Ryb3lcbn07Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/md5.js/node_modules/readable-stream/lib/internal/streams/destroy.js\n");

/***/ }),

/***/ "./node_modules/md5.js/node_modules/readable-stream/lib/internal/streams/end-of-stream.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/md5.js/node_modules/readable-stream/lib/internal/streams/end-of-stream.js ***!
  \************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval("// Ported from https://github.com/mafintosh/end-of-stream with\n// permission from the author, Mathias Buus (@mafintosh).\n\n\n\nvar ERR_STREAM_PREMATURE_CLOSE = (__webpack_require__(/*! ../../../errors */ \"./node_modules/md5.js/node_modules/readable-stream/errors-browser.js\").codes.ERR_STREAM_PREMATURE_CLOSE);\nfunction once(callback) {\n  var called = false;\n  return function () {\n    if (called) return;\n    called = true;\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    callback.apply(this, args);\n  };\n}\nfunction noop() {}\nfunction isRequest(stream) {\n  return stream.setHeader && typeof stream.abort === 'function';\n}\nfunction eos(stream, opts, callback) {\n  if (typeof opts === 'function') return eos(stream, null, opts);\n  if (!opts) opts = {};\n  callback = once(callback || noop);\n  var readable = opts.readable || opts.readable !== false && stream.readable;\n  var writable = opts.writable || opts.writable !== false && stream.writable;\n  var onlegacyfinish = function onlegacyfinish() {\n    if (!stream.writable) onfinish();\n  };\n  var writableEnded = stream._writableState && stream._writableState.finished;\n  var onfinish = function onfinish() {\n    writable = false;\n    writableEnded = true;\n    if (!readable) callback.call(stream);\n  };\n  var readableEnded = stream._readableState && stream._readableState.endEmitted;\n  var onend = function onend() {\n    readable = false;\n    readableEnded = true;\n    if (!writable) callback.call(stream);\n  };\n  var onerror = function onerror(err) {\n    callback.call(stream, err);\n  };\n  var onclose = function onclose() {\n    var err;\n    if (readable && !readableEnded) {\n      if (!stream._readableState || !stream._readableState.ended) err = new ERR_STREAM_PREMATURE_CLOSE();\n      return callback.call(stream, err);\n    }\n    if (writable && !writableEnded) {\n      if (!stream._writableState || !stream._writableState.ended) err = new ERR_STREAM_PREMATURE_CLOSE();\n      return callback.call(stream, err);\n    }\n  };\n  var onrequest = function onrequest() {\n    stream.req.on('finish', onfinish);\n  };\n  if (isRequest(stream)) {\n    stream.on('complete', onfinish);\n    stream.on('abort', onclose);\n    if (stream.req) onrequest();else stream.on('request', onrequest);\n  } else if (writable && !stream._writableState) {\n    // legacy streams\n    stream.on('end', onlegacyfinish);\n    stream.on('close', onlegacyfinish);\n  }\n  stream.on('end', onend);\n  stream.on('finish', onfinish);\n  if (opts.error !== false) stream.on('error', onerror);\n  stream.on('close', onclose);\n  return function () {\n    stream.removeListener('complete', onfinish);\n    stream.removeListener('abort', onclose);\n    stream.removeListener('request', onrequest);\n    if (stream.req) stream.req.removeListener('finish', onfinish);\n    stream.removeListener('end', onlegacyfinish);\n    stream.removeListener('close', onlegacyfinish);\n    stream.removeListener('finish', onfinish);\n    stream.removeListener('end', onend);\n    stream.removeListener('error', onerror);\n    stream.removeListener('close', onclose);\n  };\n}\nmodule.exports = eos;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWQ1LmpzL25vZGVfbW9kdWxlcy9yZWFkYWJsZS1zdHJlYW0vbGliL2ludGVybmFsL3N0cmVhbXMvZW5kLW9mLXN0cmVhbS5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBOztBQUVhOztBQUViLGlDQUFpQyxxSkFBMkQ7QUFDNUY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdFQUF3RSxhQUFhO0FBQ3JGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQ0FBZ0M7QUFDaEMsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9tZDUuanMvbm9kZV9tb2R1bGVzL3JlYWRhYmxlLXN0cmVhbS9saWIvaW50ZXJuYWwvc3RyZWFtcy9lbmQtb2Ytc3RyZWFtLmpzPzg1ZjkiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gUG9ydGVkIGZyb20gaHR0cHM6Ly9naXRodWIuY29tL21hZmludG9zaC9lbmQtb2Ytc3RyZWFtIHdpdGhcbi8vIHBlcm1pc3Npb24gZnJvbSB0aGUgYXV0aG9yLCBNYXRoaWFzIEJ1dXMgKEBtYWZpbnRvc2gpLlxuXG4ndXNlIHN0cmljdCc7XG5cbnZhciBFUlJfU1RSRUFNX1BSRU1BVFVSRV9DTE9TRSA9IHJlcXVpcmUoJy4uLy4uLy4uL2Vycm9ycycpLmNvZGVzLkVSUl9TVFJFQU1fUFJFTUFUVVJFX0NMT1NFO1xuZnVuY3Rpb24gb25jZShjYWxsYmFjaykge1xuICB2YXIgY2FsbGVkID0gZmFsc2U7XG4gIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgaWYgKGNhbGxlZCkgcmV0dXJuO1xuICAgIGNhbGxlZCA9IHRydWU7XG4gICAgZm9yICh2YXIgX2xlbiA9IGFyZ3VtZW50cy5sZW5ndGgsIGFyZ3MgPSBuZXcgQXJyYXkoX2xlbiksIF9rZXkgPSAwOyBfa2V5IDwgX2xlbjsgX2tleSsrKSB7XG4gICAgICBhcmdzW19rZXldID0gYXJndW1lbnRzW19rZXldO1xuICAgIH1cbiAgICBjYWxsYmFjay5hcHBseSh0aGlzLCBhcmdzKTtcbiAgfTtcbn1cbmZ1bmN0aW9uIG5vb3AoKSB7fVxuZnVuY3Rpb24gaXNSZXF1ZXN0KHN0cmVhbSkge1xuICByZXR1cm4gc3RyZWFtLnNldEhlYWRlciAmJiB0eXBlb2Ygc3RyZWFtLmFib3J0ID09PSAnZnVuY3Rpb24nO1xufVxuZnVuY3Rpb24gZW9zKHN0cmVhbSwgb3B0cywgY2FsbGJhY2spIHtcbiAgaWYgKHR5cGVvZiBvcHRzID09PSAnZnVuY3Rpb24nKSByZXR1cm4gZW9zKHN0cmVhbSwgbnVsbCwgb3B0cyk7XG4gIGlmICghb3B0cykgb3B0cyA9IHt9O1xuICBjYWxsYmFjayA9IG9uY2UoY2FsbGJhY2sgfHwgbm9vcCk7XG4gIHZhciByZWFkYWJsZSA9IG9wdHMucmVhZGFibGUgfHwgb3B0cy5yZWFkYWJsZSAhPT0gZmFsc2UgJiYgc3RyZWFtLnJlYWRhYmxlO1xuICB2YXIgd3JpdGFibGUgPSBvcHRzLndyaXRhYmxlIHx8IG9wdHMud3JpdGFibGUgIT09IGZhbHNlICYmIHN0cmVhbS53cml0YWJsZTtcbiAgdmFyIG9ubGVnYWN5ZmluaXNoID0gZnVuY3Rpb24gb25sZWdhY3lmaW5pc2goKSB7XG4gICAgaWYgKCFzdHJlYW0ud3JpdGFibGUpIG9uZmluaXNoKCk7XG4gIH07XG4gIHZhciB3cml0YWJsZUVuZGVkID0gc3RyZWFtLl93cml0YWJsZVN0YXRlICYmIHN0cmVhbS5fd3JpdGFibGVTdGF0ZS5maW5pc2hlZDtcbiAgdmFyIG9uZmluaXNoID0gZnVuY3Rpb24gb25maW5pc2goKSB7XG4gICAgd3JpdGFibGUgPSBmYWxzZTtcbiAgICB3cml0YWJsZUVuZGVkID0gdHJ1ZTtcbiAgICBpZiAoIXJlYWRhYmxlKSBjYWxsYmFjay5jYWxsKHN0cmVhbSk7XG4gIH07XG4gIHZhciByZWFkYWJsZUVuZGVkID0gc3RyZWFtLl9yZWFkYWJsZVN0YXRlICYmIHN0cmVhbS5fcmVhZGFibGVTdGF0ZS5lbmRFbWl0dGVkO1xuICB2YXIgb25lbmQgPSBmdW5jdGlvbiBvbmVuZCgpIHtcbiAgICByZWFkYWJsZSA9IGZhbHNlO1xuICAgIHJlYWRhYmxlRW5kZWQgPSB0cnVlO1xuICAgIGlmICghd3JpdGFibGUpIGNhbGxiYWNrLmNhbGwoc3RyZWFtKTtcbiAgfTtcbiAgdmFyIG9uZXJyb3IgPSBmdW5jdGlvbiBvbmVycm9yKGVycikge1xuICAgIGNhbGxiYWNrLmNhbGwoc3RyZWFtLCBlcnIpO1xuICB9O1xuICB2YXIgb25jbG9zZSA9IGZ1bmN0aW9uIG9uY2xvc2UoKSB7XG4gICAgdmFyIGVycjtcbiAgICBpZiAocmVhZGFibGUgJiYgIXJlYWRhYmxlRW5kZWQpIHtcbiAgICAgIGlmICghc3RyZWFtLl9yZWFkYWJsZVN0YXRlIHx8ICFzdHJlYW0uX3JlYWRhYmxlU3RhdGUuZW5kZWQpIGVyciA9IG5ldyBFUlJfU1RSRUFNX1BSRU1BVFVSRV9DTE9TRSgpO1xuICAgICAgcmV0dXJuIGNhbGxiYWNrLmNhbGwoc3RyZWFtLCBlcnIpO1xuICAgIH1cbiAgICBpZiAod3JpdGFibGUgJiYgIXdyaXRhYmxlRW5kZWQpIHtcbiAgICAgIGlmICghc3RyZWFtLl93cml0YWJsZVN0YXRlIHx8ICFzdHJlYW0uX3dyaXRhYmxlU3RhdGUuZW5kZWQpIGVyciA9IG5ldyBFUlJfU1RSRUFNX1BSRU1BVFVSRV9DTE9TRSgpO1xuICAgICAgcmV0dXJuIGNhbGxiYWNrLmNhbGwoc3RyZWFtLCBlcnIpO1xuICAgIH1cbiAgfTtcbiAgdmFyIG9ucmVxdWVzdCA9IGZ1bmN0aW9uIG9ucmVxdWVzdCgpIHtcbiAgICBzdHJlYW0ucmVxLm9uKCdmaW5pc2gnLCBvbmZpbmlzaCk7XG4gIH07XG4gIGlmIChpc1JlcXVlc3Qoc3RyZWFtKSkge1xuICAgIHN0cmVhbS5vbignY29tcGxldGUnLCBvbmZpbmlzaCk7XG4gICAgc3RyZWFtLm9uKCdhYm9ydCcsIG9uY2xvc2UpO1xuICAgIGlmIChzdHJlYW0ucmVxKSBvbnJlcXVlc3QoKTtlbHNlIHN0cmVhbS5vbigncmVxdWVzdCcsIG9ucmVxdWVzdCk7XG4gIH0gZWxzZSBpZiAod3JpdGFibGUgJiYgIXN0cmVhbS5fd3JpdGFibGVTdGF0ZSkge1xuICAgIC8vIGxlZ2FjeSBzdHJlYW1zXG4gICAgc3RyZWFtLm9uKCdlbmQnLCBvbmxlZ2FjeWZpbmlzaCk7XG4gICAgc3RyZWFtLm9uKCdjbG9zZScsIG9ubGVnYWN5ZmluaXNoKTtcbiAgfVxuICBzdHJlYW0ub24oJ2VuZCcsIG9uZW5kKTtcbiAgc3RyZWFtLm9uKCdmaW5pc2gnLCBvbmZpbmlzaCk7XG4gIGlmIChvcHRzLmVycm9yICE9PSBmYWxzZSkgc3RyZWFtLm9uKCdlcnJvcicsIG9uZXJyb3IpO1xuICBzdHJlYW0ub24oJ2Nsb3NlJywgb25jbG9zZSk7XG4gIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgc3RyZWFtLnJlbW92ZUxpc3RlbmVyKCdjb21wbGV0ZScsIG9uZmluaXNoKTtcbiAgICBzdHJlYW0ucmVtb3ZlTGlzdGVuZXIoJ2Fib3J0Jywgb25jbG9zZSk7XG4gICAgc3RyZWFtLnJlbW92ZUxpc3RlbmVyKCdyZXF1ZXN0Jywgb25yZXF1ZXN0KTtcbiAgICBpZiAoc3RyZWFtLnJlcSkgc3RyZWFtLnJlcS5yZW1vdmVMaXN0ZW5lcignZmluaXNoJywgb25maW5pc2gpO1xuICAgIHN0cmVhbS5yZW1vdmVMaXN0ZW5lcignZW5kJywgb25sZWdhY3lmaW5pc2gpO1xuICAgIHN0cmVhbS5yZW1vdmVMaXN0ZW5lcignY2xvc2UnLCBvbmxlZ2FjeWZpbmlzaCk7XG4gICAgc3RyZWFtLnJlbW92ZUxpc3RlbmVyKCdmaW5pc2gnLCBvbmZpbmlzaCk7XG4gICAgc3RyZWFtLnJlbW92ZUxpc3RlbmVyKCdlbmQnLCBvbmVuZCk7XG4gICAgc3RyZWFtLnJlbW92ZUxpc3RlbmVyKCdlcnJvcicsIG9uZXJyb3IpO1xuICAgIHN0cmVhbS5yZW1vdmVMaXN0ZW5lcignY2xvc2UnLCBvbmNsb3NlKTtcbiAgfTtcbn1cbm1vZHVsZS5leHBvcnRzID0gZW9zOyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/md5.js/node_modules/readable-stream/lib/internal/streams/end-of-stream.js\n");

/***/ }),

/***/ "./node_modules/md5.js/node_modules/readable-stream/lib/internal/streams/from-browser.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/md5.js/node_modules/readable-stream/lib/internal/streams/from-browser.js ***!
  \***********************************************************************************************/
/***/ (function(module) {

eval("module.exports = function () {\n  throw new Error('Readable.from is not available in the browser')\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWQ1LmpzL25vZGVfbW9kdWxlcy9yZWFkYWJsZS1zdHJlYW0vbGliL2ludGVybmFsL3N0cmVhbXMvZnJvbS1icm93c2VyLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbWQ1LmpzL25vZGVfbW9kdWxlcy9yZWFkYWJsZS1zdHJlYW0vbGliL2ludGVybmFsL3N0cmVhbXMvZnJvbS1icm93c2VyLmpzPzA5OTkiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoKSB7XG4gIHRocm93IG5ldyBFcnJvcignUmVhZGFibGUuZnJvbSBpcyBub3QgYXZhaWxhYmxlIGluIHRoZSBicm93c2VyJylcbn07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/md5.js/node_modules/readable-stream/lib/internal/streams/from-browser.js\n");

/***/ }),

/***/ "./node_modules/md5.js/node_modules/readable-stream/lib/internal/streams/pipeline.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/md5.js/node_modules/readable-stream/lib/internal/streams/pipeline.js ***!
  \*******************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval("// Ported from https://github.com/mafintosh/pump with\n// permission from the author, Mathias Buus (@mafintosh).\n\n\n\nvar eos;\nfunction once(callback) {\n  var called = false;\n  return function () {\n    if (called) return;\n    called = true;\n    callback.apply(void 0, arguments);\n  };\n}\nvar _require$codes = (__webpack_require__(/*! ../../../errors */ \"./node_modules/md5.js/node_modules/readable-stream/errors-browser.js\").codes),\n  ERR_MISSING_ARGS = _require$codes.ERR_MISSING_ARGS,\n  ERR_STREAM_DESTROYED = _require$codes.ERR_STREAM_DESTROYED;\nfunction noop(err) {\n  // Rethrow the error if it exists to avoid swallowing it\n  if (err) throw err;\n}\nfunction isRequest(stream) {\n  return stream.setHeader && typeof stream.abort === 'function';\n}\nfunction destroyer(stream, reading, writing, callback) {\n  callback = once(callback);\n  var closed = false;\n  stream.on('close', function () {\n    closed = true;\n  });\n  if (eos === undefined) eos = __webpack_require__(/*! ./end-of-stream */ \"./node_modules/md5.js/node_modules/readable-stream/lib/internal/streams/end-of-stream.js\");\n  eos(stream, {\n    readable: reading,\n    writable: writing\n  }, function (err) {\n    if (err) return callback(err);\n    closed = true;\n    callback();\n  });\n  var destroyed = false;\n  return function (err) {\n    if (closed) return;\n    if (destroyed) return;\n    destroyed = true;\n\n    // request.destroy just do .end - .abort is what we want\n    if (isRequest(stream)) return stream.abort();\n    if (typeof stream.destroy === 'function') return stream.destroy();\n    callback(err || new ERR_STREAM_DESTROYED('pipe'));\n  };\n}\nfunction call(fn) {\n  fn();\n}\nfunction pipe(from, to) {\n  return from.pipe(to);\n}\nfunction popCallback(streams) {\n  if (!streams.length) return noop;\n  if (typeof streams[streams.length - 1] !== 'function') return noop;\n  return streams.pop();\n}\nfunction pipeline() {\n  for (var _len = arguments.length, streams = new Array(_len), _key = 0; _key < _len; _key++) {\n    streams[_key] = arguments[_key];\n  }\n  var callback = popCallback(streams);\n  if (Array.isArray(streams[0])) streams = streams[0];\n  if (streams.length < 2) {\n    throw new ERR_MISSING_ARGS('streams');\n  }\n  var error;\n  var destroys = streams.map(function (stream, i) {\n    var reading = i < streams.length - 1;\n    var writing = i > 0;\n    return destroyer(stream, reading, writing, function (err) {\n      if (!error) error = err;\n      if (err) destroys.forEach(call);\n      if (reading) return;\n      destroys.forEach(call);\n      callback(error);\n    });\n  });\n  return streams.reduce(pipe);\n}\nmodule.exports = pipeline;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWQ1LmpzL25vZGVfbW9kdWxlcy9yZWFkYWJsZS1zdHJlYW0vbGliL2ludGVybmFsL3N0cmVhbXMvcGlwZWxpbmUuanMuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTs7QUFFYTs7QUFFYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUIsMEhBQWdDO0FBQ3JEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0gsK0JBQStCLG1CQUFPLENBQUMsaUhBQWlCO0FBQ3hEO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5RUFBeUUsYUFBYTtBQUN0RjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLEdBQUc7QUFDSDtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL21kNS5qcy9ub2RlX21vZHVsZXMvcmVhZGFibGUtc3RyZWFtL2xpYi9pbnRlcm5hbC9zdHJlYW1zL3BpcGVsaW5lLmpzPzc3M2MiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gUG9ydGVkIGZyb20gaHR0cHM6Ly9naXRodWIuY29tL21hZmludG9zaC9wdW1wIHdpdGhcbi8vIHBlcm1pc3Npb24gZnJvbSB0aGUgYXV0aG9yLCBNYXRoaWFzIEJ1dXMgKEBtYWZpbnRvc2gpLlxuXG4ndXNlIHN0cmljdCc7XG5cbnZhciBlb3M7XG5mdW5jdGlvbiBvbmNlKGNhbGxiYWNrKSB7XG4gIHZhciBjYWxsZWQgPSBmYWxzZTtcbiAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICBpZiAoY2FsbGVkKSByZXR1cm47XG4gICAgY2FsbGVkID0gdHJ1ZTtcbiAgICBjYWxsYmFjay5hcHBseSh2b2lkIDAsIGFyZ3VtZW50cyk7XG4gIH07XG59XG52YXIgX3JlcXVpcmUkY29kZXMgPSByZXF1aXJlKCcuLi8uLi8uLi9lcnJvcnMnKS5jb2RlcyxcbiAgRVJSX01JU1NJTkdfQVJHUyA9IF9yZXF1aXJlJGNvZGVzLkVSUl9NSVNTSU5HX0FSR1MsXG4gIEVSUl9TVFJFQU1fREVTVFJPWUVEID0gX3JlcXVpcmUkY29kZXMuRVJSX1NUUkVBTV9ERVNUUk9ZRUQ7XG5mdW5jdGlvbiBub29wKGVycikge1xuICAvLyBSZXRocm93IHRoZSBlcnJvciBpZiBpdCBleGlzdHMgdG8gYXZvaWQgc3dhbGxvd2luZyBpdFxuICBpZiAoZXJyKSB0aHJvdyBlcnI7XG59XG5mdW5jdGlvbiBpc1JlcXVlc3Qoc3RyZWFtKSB7XG4gIHJldHVybiBzdHJlYW0uc2V0SGVhZGVyICYmIHR5cGVvZiBzdHJlYW0uYWJvcnQgPT09ICdmdW5jdGlvbic7XG59XG5mdW5jdGlvbiBkZXN0cm95ZXIoc3RyZWFtLCByZWFkaW5nLCB3cml0aW5nLCBjYWxsYmFjaykge1xuICBjYWxsYmFjayA9IG9uY2UoY2FsbGJhY2spO1xuICB2YXIgY2xvc2VkID0gZmFsc2U7XG4gIHN0cmVhbS5vbignY2xvc2UnLCBmdW5jdGlvbiAoKSB7XG4gICAgY2xvc2VkID0gdHJ1ZTtcbiAgfSk7XG4gIGlmIChlb3MgPT09IHVuZGVmaW5lZCkgZW9zID0gcmVxdWlyZSgnLi9lbmQtb2Ytc3RyZWFtJyk7XG4gIGVvcyhzdHJlYW0sIHtcbiAgICByZWFkYWJsZTogcmVhZGluZyxcbiAgICB3cml0YWJsZTogd3JpdGluZ1xuICB9LCBmdW5jdGlvbiAoZXJyKSB7XG4gICAgaWYgKGVycikgcmV0dXJuIGNhbGxiYWNrKGVycik7XG4gICAgY2xvc2VkID0gdHJ1ZTtcbiAgICBjYWxsYmFjaygpO1xuICB9KTtcbiAgdmFyIGRlc3Ryb3llZCA9IGZhbHNlO1xuICByZXR1cm4gZnVuY3Rpb24gKGVycikge1xuICAgIGlmIChjbG9zZWQpIHJldHVybjtcbiAgICBpZiAoZGVzdHJveWVkKSByZXR1cm47XG4gICAgZGVzdHJveWVkID0gdHJ1ZTtcblxuICAgIC8vIHJlcXVlc3QuZGVzdHJveSBqdXN0IGRvIC5lbmQgLSAuYWJvcnQgaXMgd2hhdCB3ZSB3YW50XG4gICAgaWYgKGlzUmVxdWVzdChzdHJlYW0pKSByZXR1cm4gc3RyZWFtLmFib3J0KCk7XG4gICAgaWYgKHR5cGVvZiBzdHJlYW0uZGVzdHJveSA9PT0gJ2Z1bmN0aW9uJykgcmV0dXJuIHN0cmVhbS5kZXN0cm95KCk7XG4gICAgY2FsbGJhY2soZXJyIHx8IG5ldyBFUlJfU1RSRUFNX0RFU1RST1lFRCgncGlwZScpKTtcbiAgfTtcbn1cbmZ1bmN0aW9uIGNhbGwoZm4pIHtcbiAgZm4oKTtcbn1cbmZ1bmN0aW9uIHBpcGUoZnJvbSwgdG8pIHtcbiAgcmV0dXJuIGZyb20ucGlwZSh0byk7XG59XG5mdW5jdGlvbiBwb3BDYWxsYmFjayhzdHJlYW1zKSB7XG4gIGlmICghc3RyZWFtcy5sZW5ndGgpIHJldHVybiBub29wO1xuICBpZiAodHlwZW9mIHN0cmVhbXNbc3RyZWFtcy5sZW5ndGggLSAxXSAhPT0gJ2Z1bmN0aW9uJykgcmV0dXJuIG5vb3A7XG4gIHJldHVybiBzdHJlYW1zLnBvcCgpO1xufVxuZnVuY3Rpb24gcGlwZWxpbmUoKSB7XG4gIGZvciAodmFyIF9sZW4gPSBhcmd1bWVudHMubGVuZ3RoLCBzdHJlYW1zID0gbmV3IEFycmF5KF9sZW4pLCBfa2V5ID0gMDsgX2tleSA8IF9sZW47IF9rZXkrKykge1xuICAgIHN0cmVhbXNbX2tleV0gPSBhcmd1bWVudHNbX2tleV07XG4gIH1cbiAgdmFyIGNhbGxiYWNrID0gcG9wQ2FsbGJhY2soc3RyZWFtcyk7XG4gIGlmIChBcnJheS5pc0FycmF5KHN0cmVhbXNbMF0pKSBzdHJlYW1zID0gc3RyZWFtc1swXTtcbiAgaWYgKHN0cmVhbXMubGVuZ3RoIDwgMikge1xuICAgIHRocm93IG5ldyBFUlJfTUlTU0lOR19BUkdTKCdzdHJlYW1zJyk7XG4gIH1cbiAgdmFyIGVycm9yO1xuICB2YXIgZGVzdHJveXMgPSBzdHJlYW1zLm1hcChmdW5jdGlvbiAoc3RyZWFtLCBpKSB7XG4gICAgdmFyIHJlYWRpbmcgPSBpIDwgc3RyZWFtcy5sZW5ndGggLSAxO1xuICAgIHZhciB3cml0aW5nID0gaSA+IDA7XG4gICAgcmV0dXJuIGRlc3Ryb3llcihzdHJlYW0sIHJlYWRpbmcsIHdyaXRpbmcsIGZ1bmN0aW9uIChlcnIpIHtcbiAgICAgIGlmICghZXJyb3IpIGVycm9yID0gZXJyO1xuICAgICAgaWYgKGVycikgZGVzdHJveXMuZm9yRWFjaChjYWxsKTtcbiAgICAgIGlmIChyZWFkaW5nKSByZXR1cm47XG4gICAgICBkZXN0cm95cy5mb3JFYWNoKGNhbGwpO1xuICAgICAgY2FsbGJhY2soZXJyb3IpO1xuICAgIH0pO1xuICB9KTtcbiAgcmV0dXJuIHN0cmVhbXMucmVkdWNlKHBpcGUpO1xufVxubW9kdWxlLmV4cG9ydHMgPSBwaXBlbGluZTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/md5.js/node_modules/readable-stream/lib/internal/streams/pipeline.js\n");

/***/ }),

/***/ "./node_modules/md5.js/node_modules/readable-stream/lib/internal/streams/state.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/md5.js/node_modules/readable-stream/lib/internal/streams/state.js ***!
  \****************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval("\n\nvar ERR_INVALID_OPT_VALUE = (__webpack_require__(/*! ../../../errors */ \"./node_modules/md5.js/node_modules/readable-stream/errors-browser.js\").codes.ERR_INVALID_OPT_VALUE);\nfunction highWaterMarkFrom(options, isDuplex, duplexKey) {\n  return options.highWaterMark != null ? options.highWaterMark : isDuplex ? options[duplexKey] : null;\n}\nfunction getHighWaterMark(state, options, duplexKey, isDuplex) {\n  var hwm = highWaterMarkFrom(options, isDuplex, duplexKey);\n  if (hwm != null) {\n    if (!(isFinite(hwm) && Math.floor(hwm) === hwm) || hwm < 0) {\n      var name = isDuplex ? duplexKey : 'highWaterMark';\n      throw new ERR_INVALID_OPT_VALUE(name, hwm);\n    }\n    return Math.floor(hwm);\n  }\n\n  // Default value\n  return state.objectMode ? 16 : 16 * 1024;\n}\nmodule.exports = {\n  getHighWaterMark: getHighWaterMark\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWQ1LmpzL25vZGVfbW9kdWxlcy9yZWFkYWJsZS1zdHJlYW0vbGliL2ludGVybmFsL3N0cmVhbXMvc3RhdGUuanMuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsNEJBQTRCLGdKQUFzRDtBQUNsRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9tZDUuanMvbm9kZV9tb2R1bGVzL3JlYWRhYmxlLXN0cmVhbS9saWIvaW50ZXJuYWwvc3RyZWFtcy9zdGF0ZS5qcz85MGQ5Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxudmFyIEVSUl9JTlZBTElEX09QVF9WQUxVRSA9IHJlcXVpcmUoJy4uLy4uLy4uL2Vycm9ycycpLmNvZGVzLkVSUl9JTlZBTElEX09QVF9WQUxVRTtcbmZ1bmN0aW9uIGhpZ2hXYXRlck1hcmtGcm9tKG9wdGlvbnMsIGlzRHVwbGV4LCBkdXBsZXhLZXkpIHtcbiAgcmV0dXJuIG9wdGlvbnMuaGlnaFdhdGVyTWFyayAhPSBudWxsID8gb3B0aW9ucy5oaWdoV2F0ZXJNYXJrIDogaXNEdXBsZXggPyBvcHRpb25zW2R1cGxleEtleV0gOiBudWxsO1xufVxuZnVuY3Rpb24gZ2V0SGlnaFdhdGVyTWFyayhzdGF0ZSwgb3B0aW9ucywgZHVwbGV4S2V5LCBpc0R1cGxleCkge1xuICB2YXIgaHdtID0gaGlnaFdhdGVyTWFya0Zyb20ob3B0aW9ucywgaXNEdXBsZXgsIGR1cGxleEtleSk7XG4gIGlmIChod20gIT0gbnVsbCkge1xuICAgIGlmICghKGlzRmluaXRlKGh3bSkgJiYgTWF0aC5mbG9vcihod20pID09PSBod20pIHx8IGh3bSA8IDApIHtcbiAgICAgIHZhciBuYW1lID0gaXNEdXBsZXggPyBkdXBsZXhLZXkgOiAnaGlnaFdhdGVyTWFyayc7XG4gICAgICB0aHJvdyBuZXcgRVJSX0lOVkFMSURfT1BUX1ZBTFVFKG5hbWUsIGh3bSk7XG4gICAgfVxuICAgIHJldHVybiBNYXRoLmZsb29yKGh3bSk7XG4gIH1cblxuICAvLyBEZWZhdWx0IHZhbHVlXG4gIHJldHVybiBzdGF0ZS5vYmplY3RNb2RlID8gMTYgOiAxNiAqIDEwMjQ7XG59XG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgZ2V0SGlnaFdhdGVyTWFyazogZ2V0SGlnaFdhdGVyTWFya1xufTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/md5.js/node_modules/readable-stream/lib/internal/streams/state.js\n");

/***/ }),

/***/ "./node_modules/md5.js/node_modules/readable-stream/lib/internal/streams/stream-browser.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/md5.js/node_modules/readable-stream/lib/internal/streams/stream-browser.js ***!
  \*************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("module.exports = __webpack_require__(/*! events */ \"./node_modules/events/events.js\").EventEmitter;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWQ1LmpzL25vZGVfbW9kdWxlcy9yZWFkYWJsZS1zdHJlYW0vbGliL2ludGVybmFsL3N0cmVhbXMvc3RyZWFtLWJyb3dzZXIuanMuanMiLCJtYXBwaW5ncyI6IkFBQUEsa0dBQStDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9tZDUuanMvbm9kZV9tb2R1bGVzL3JlYWRhYmxlLXN0cmVhbS9saWIvaW50ZXJuYWwvc3RyZWFtcy9zdHJlYW0tYnJvd3Nlci5qcz8xZWY3Il0sInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnZXZlbnRzJykuRXZlbnRFbWl0dGVyO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/md5.js/node_modules/readable-stream/lib/internal/streams/stream-browser.js\n");

/***/ }),

/***/ "./node_modules/md5.js/node_modules/readable-stream/readable-browser.js":
/*!******************************************************************************!*\
  !*** ./node_modules/md5.js/node_modules/readable-stream/readable-browser.js ***!
  \******************************************************************************/
/***/ (function(module, exports, __webpack_require__) {

eval("exports = module.exports = __webpack_require__(/*! ./lib/_stream_readable.js */ \"./node_modules/md5.js/node_modules/readable-stream/lib/_stream_readable.js\");\nexports.Stream = exports;\nexports.Readable = exports;\nexports.Writable = __webpack_require__(/*! ./lib/_stream_writable.js */ \"./node_modules/md5.js/node_modules/readable-stream/lib/_stream_writable.js\");\nexports.Duplex = __webpack_require__(/*! ./lib/_stream_duplex.js */ \"./node_modules/md5.js/node_modules/readable-stream/lib/_stream_duplex.js\");\nexports.Transform = __webpack_require__(/*! ./lib/_stream_transform.js */ \"./node_modules/md5.js/node_modules/readable-stream/lib/_stream_transform.js\");\nexports.PassThrough = __webpack_require__(/*! ./lib/_stream_passthrough.js */ \"./node_modules/md5.js/node_modules/readable-stream/lib/_stream_passthrough.js\");\nexports.finished = __webpack_require__(/*! ./lib/internal/streams/end-of-stream.js */ \"./node_modules/md5.js/node_modules/readable-stream/lib/internal/streams/end-of-stream.js\");\nexports.pipeline = __webpack_require__(/*! ./lib/internal/streams/pipeline.js */ \"./node_modules/md5.js/node_modules/readable-stream/lib/internal/streams/pipeline.js\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWQ1LmpzL25vZGVfbW9kdWxlcy9yZWFkYWJsZS1zdHJlYW0vcmVhZGFibGUtYnJvd3Nlci5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBQSxVQUFVLG1KQUFxRDtBQUMvRCxjQUFjO0FBQ2QsZ0JBQWdCO0FBQ2hCLHFKQUF1RDtBQUN2RCwrSUFBbUQ7QUFDbkQsd0pBQXlEO0FBQ3pELDhKQUE2RDtBQUM3RCxpTEFBcUU7QUFDckUsdUtBQWdFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9tZDUuanMvbm9kZV9tb2R1bGVzL3JlYWRhYmxlLXN0cmVhbS9yZWFkYWJsZS1icm93c2VyLmpzPzU0NjkiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9saWIvX3N0cmVhbV9yZWFkYWJsZS5qcycpO1xuZXhwb3J0cy5TdHJlYW0gPSBleHBvcnRzO1xuZXhwb3J0cy5SZWFkYWJsZSA9IGV4cG9ydHM7XG5leHBvcnRzLldyaXRhYmxlID0gcmVxdWlyZSgnLi9saWIvX3N0cmVhbV93cml0YWJsZS5qcycpO1xuZXhwb3J0cy5EdXBsZXggPSByZXF1aXJlKCcuL2xpYi9fc3RyZWFtX2R1cGxleC5qcycpO1xuZXhwb3J0cy5UcmFuc2Zvcm0gPSByZXF1aXJlKCcuL2xpYi9fc3RyZWFtX3RyYW5zZm9ybS5qcycpO1xuZXhwb3J0cy5QYXNzVGhyb3VnaCA9IHJlcXVpcmUoJy4vbGliL19zdHJlYW1fcGFzc3Rocm91Z2guanMnKTtcbmV4cG9ydHMuZmluaXNoZWQgPSByZXF1aXJlKCcuL2xpYi9pbnRlcm5hbC9zdHJlYW1zL2VuZC1vZi1zdHJlYW0uanMnKTtcbmV4cG9ydHMucGlwZWxpbmUgPSByZXF1aXJlKCcuL2xpYi9pbnRlcm5hbC9zdHJlYW1zL3BpcGVsaW5lLmpzJyk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/md5.js/node_modules/readable-stream/readable-browser.js\n");

/***/ }),

/***/ "./node_modules/ripemd160/index.js":
/*!*****************************************!*\
  !*** ./node_modules/ripemd160/index.js ***!
  \*****************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval("\nvar Buffer = (__webpack_require__(/*! buffer */ \"./node_modules/buffer/index.js\").Buffer)\nvar inherits = __webpack_require__(/*! inherits */ \"./node_modules/inherits/inherits_browser.js\")\nvar HashBase = __webpack_require__(/*! hash-base */ \"./node_modules/ripemd160/node_modules/hash-base/index.js\")\n\nvar ARRAY16 = new Array(16)\n\nvar zl = [\n  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n  7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8,\n  3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12,\n  1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2,\n  4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13\n]\n\nvar zr = [\n  5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12,\n  6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2,\n  15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13,\n  8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14,\n  12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11\n]\n\nvar sl = [\n  11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8,\n  7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12,\n  11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5,\n  11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12,\n  9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6\n]\n\nvar sr = [\n  8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6,\n  9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11,\n  9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5,\n  15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8,\n  8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11\n]\n\nvar hl = [0x00000000, 0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xa953fd4e]\nvar hr = [0x50a28be6, 0x5c4dd124, 0x6d703ef3, 0x7a6d76e9, 0x00000000]\n\nfunction RIPEMD160 () {\n  HashBase.call(this, 64)\n\n  // state\n  this._a = 0x67452301\n  this._b = 0xefcdab89\n  this._c = 0x98badcfe\n  this._d = 0x10325476\n  this._e = 0xc3d2e1f0\n}\n\ninherits(RIPEMD160, HashBase)\n\nRIPEMD160.prototype._update = function () {\n  var words = ARRAY16\n  for (var j = 0; j < 16; ++j) words[j] = this._block.readInt32LE(j * 4)\n\n  var al = this._a | 0\n  var bl = this._b | 0\n  var cl = this._c | 0\n  var dl = this._d | 0\n  var el = this._e | 0\n\n  var ar = this._a | 0\n  var br = this._b | 0\n  var cr = this._c | 0\n  var dr = this._d | 0\n  var er = this._e | 0\n\n  // computation\n  for (var i = 0; i < 80; i += 1) {\n    var tl\n    var tr\n    if (i < 16) {\n      tl = fn1(al, bl, cl, dl, el, words[zl[i]], hl[0], sl[i])\n      tr = fn5(ar, br, cr, dr, er, words[zr[i]], hr[0], sr[i])\n    } else if (i < 32) {\n      tl = fn2(al, bl, cl, dl, el, words[zl[i]], hl[1], sl[i])\n      tr = fn4(ar, br, cr, dr, er, words[zr[i]], hr[1], sr[i])\n    } else if (i < 48) {\n      tl = fn3(al, bl, cl, dl, el, words[zl[i]], hl[2], sl[i])\n      tr = fn3(ar, br, cr, dr, er, words[zr[i]], hr[2], sr[i])\n    } else if (i < 64) {\n      tl = fn4(al, bl, cl, dl, el, words[zl[i]], hl[3], sl[i])\n      tr = fn2(ar, br, cr, dr, er, words[zr[i]], hr[3], sr[i])\n    } else { // if (i<80) {\n      tl = fn5(al, bl, cl, dl, el, words[zl[i]], hl[4], sl[i])\n      tr = fn1(ar, br, cr, dr, er, words[zr[i]], hr[4], sr[i])\n    }\n\n    al = el\n    el = dl\n    dl = rotl(cl, 10)\n    cl = bl\n    bl = tl\n\n    ar = er\n    er = dr\n    dr = rotl(cr, 10)\n    cr = br\n    br = tr\n  }\n\n  // update state\n  var t = (this._b + cl + dr) | 0\n  this._b = (this._c + dl + er) | 0\n  this._c = (this._d + el + ar) | 0\n  this._d = (this._e + al + br) | 0\n  this._e = (this._a + bl + cr) | 0\n  this._a = t\n}\n\nRIPEMD160.prototype._digest = function () {\n  // create padding and handle blocks\n  this._block[this._blockOffset++] = 0x80\n  if (this._blockOffset > 56) {\n    this._block.fill(0, this._blockOffset, 64)\n    this._update()\n    this._blockOffset = 0\n  }\n\n  this._block.fill(0, this._blockOffset, 56)\n  this._block.writeUInt32LE(this._length[0], 56)\n  this._block.writeUInt32LE(this._length[1], 60)\n  this._update()\n\n  // produce result\n  var buffer = Buffer.alloc ? Buffer.alloc(20) : new Buffer(20)\n  buffer.writeInt32LE(this._a, 0)\n  buffer.writeInt32LE(this._b, 4)\n  buffer.writeInt32LE(this._c, 8)\n  buffer.writeInt32LE(this._d, 12)\n  buffer.writeInt32LE(this._e, 16)\n  return buffer\n}\n\nfunction rotl (x, n) {\n  return (x << n) | (x >>> (32 - n))\n}\n\nfunction fn1 (a, b, c, d, e, m, k, s) {\n  return (rotl((a + (b ^ c ^ d) + m + k) | 0, s) + e) | 0\n}\n\nfunction fn2 (a, b, c, d, e, m, k, s) {\n  return (rotl((a + ((b & c) | ((~b) & d)) + m + k) | 0, s) + e) | 0\n}\n\nfunction fn3 (a, b, c, d, e, m, k, s) {\n  return (rotl((a + ((b | (~c)) ^ d) + m + k) | 0, s) + e) | 0\n}\n\nfunction fn4 (a, b, c, d, e, m, k, s) {\n  return (rotl((a + ((b & d) | (c & (~d))) + m + k) | 0, s) + e) | 0\n}\n\nfunction fn5 (a, b, c, d, e, m, k, s) {\n  return (rotl((a + (b ^ (c | (~d))) + m + k) | 0, s) + e) | 0\n}\n\nmodule.exports = RIPEMD160\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcmlwZW1kMTYwL2luZGV4LmpzLmpzIiwibWFwcGluZ3MiOiJBQUFZO0FBQ1osYUFBYSw0RUFBd0I7QUFDckMsZUFBZSxtQkFBTyxDQUFDLDZEQUFVO0FBQ2pDLGVBQWUsbUJBQU8sQ0FBQywyRUFBVzs7QUFFbEM7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQSxrQkFBa0IsUUFBUTs7QUFFMUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0Esa0JBQWtCLFFBQVE7QUFDMUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBLE1BQU0sT0FBTztBQUNiO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9yaXBlbWQxNjAvaW5kZXguanM/MWQ5OCJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCdcbnZhciBCdWZmZXIgPSByZXF1aXJlKCdidWZmZXInKS5CdWZmZXJcbnZhciBpbmhlcml0cyA9IHJlcXVpcmUoJ2luaGVyaXRzJylcbnZhciBIYXNoQmFzZSA9IHJlcXVpcmUoJ2hhc2gtYmFzZScpXG5cbnZhciBBUlJBWTE2ID0gbmV3IEFycmF5KDE2KVxuXG52YXIgemwgPSBbXG4gIDAsIDEsIDIsIDMsIDQsIDUsIDYsIDcsIDgsIDksIDEwLCAxMSwgMTIsIDEzLCAxNCwgMTUsXG4gIDcsIDQsIDEzLCAxLCAxMCwgNiwgMTUsIDMsIDEyLCAwLCA5LCA1LCAyLCAxNCwgMTEsIDgsXG4gIDMsIDEwLCAxNCwgNCwgOSwgMTUsIDgsIDEsIDIsIDcsIDAsIDYsIDEzLCAxMSwgNSwgMTIsXG4gIDEsIDksIDExLCAxMCwgMCwgOCwgMTIsIDQsIDEzLCAzLCA3LCAxNSwgMTQsIDUsIDYsIDIsXG4gIDQsIDAsIDUsIDksIDcsIDEyLCAyLCAxMCwgMTQsIDEsIDMsIDgsIDExLCA2LCAxNSwgMTNcbl1cblxudmFyIHpyID0gW1xuICA1LCAxNCwgNywgMCwgOSwgMiwgMTEsIDQsIDEzLCA2LCAxNSwgOCwgMSwgMTAsIDMsIDEyLFxuICA2LCAxMSwgMywgNywgMCwgMTMsIDUsIDEwLCAxNCwgMTUsIDgsIDEyLCA0LCA5LCAxLCAyLFxuICAxNSwgNSwgMSwgMywgNywgMTQsIDYsIDksIDExLCA4LCAxMiwgMiwgMTAsIDAsIDQsIDEzLFxuICA4LCA2LCA0LCAxLCAzLCAxMSwgMTUsIDAsIDUsIDEyLCAyLCAxMywgOSwgNywgMTAsIDE0LFxuICAxMiwgMTUsIDEwLCA0LCAxLCA1LCA4LCA3LCA2LCAyLCAxMywgMTQsIDAsIDMsIDksIDExXG5dXG5cbnZhciBzbCA9IFtcbiAgMTEsIDE0LCAxNSwgMTIsIDUsIDgsIDcsIDksIDExLCAxMywgMTQsIDE1LCA2LCA3LCA5LCA4LFxuICA3LCA2LCA4LCAxMywgMTEsIDksIDcsIDE1LCA3LCAxMiwgMTUsIDksIDExLCA3LCAxMywgMTIsXG4gIDExLCAxMywgNiwgNywgMTQsIDksIDEzLCAxNSwgMTQsIDgsIDEzLCA2LCA1LCAxMiwgNywgNSxcbiAgMTEsIDEyLCAxNCwgMTUsIDE0LCAxNSwgOSwgOCwgOSwgMTQsIDUsIDYsIDgsIDYsIDUsIDEyLFxuICA5LCAxNSwgNSwgMTEsIDYsIDgsIDEzLCAxMiwgNSwgMTIsIDEzLCAxNCwgMTEsIDgsIDUsIDZcbl1cblxudmFyIHNyID0gW1xuICA4LCA5LCA5LCAxMSwgMTMsIDE1LCAxNSwgNSwgNywgNywgOCwgMTEsIDE0LCAxNCwgMTIsIDYsXG4gIDksIDEzLCAxNSwgNywgMTIsIDgsIDksIDExLCA3LCA3LCAxMiwgNywgNiwgMTUsIDEzLCAxMSxcbiAgOSwgNywgMTUsIDExLCA4LCA2LCA2LCAxNCwgMTIsIDEzLCA1LCAxNCwgMTMsIDEzLCA3LCA1LFxuICAxNSwgNSwgOCwgMTEsIDE0LCAxNCwgNiwgMTQsIDYsIDksIDEyLCA5LCAxMiwgNSwgMTUsIDgsXG4gIDgsIDUsIDEyLCA5LCAxMiwgNSwgMTQsIDYsIDgsIDEzLCA2LCA1LCAxNSwgMTMsIDExLCAxMVxuXVxuXG52YXIgaGwgPSBbMHgwMDAwMDAwMCwgMHg1YTgyNzk5OSwgMHg2ZWQ5ZWJhMSwgMHg4ZjFiYmNkYywgMHhhOTUzZmQ0ZV1cbnZhciBociA9IFsweDUwYTI4YmU2LCAweDVjNGRkMTI0LCAweDZkNzAzZWYzLCAweDdhNmQ3NmU5LCAweDAwMDAwMDAwXVxuXG5mdW5jdGlvbiBSSVBFTUQxNjAgKCkge1xuICBIYXNoQmFzZS5jYWxsKHRoaXMsIDY0KVxuXG4gIC8vIHN0YXRlXG4gIHRoaXMuX2EgPSAweDY3NDUyMzAxXG4gIHRoaXMuX2IgPSAweGVmY2RhYjg5XG4gIHRoaXMuX2MgPSAweDk4YmFkY2ZlXG4gIHRoaXMuX2QgPSAweDEwMzI1NDc2XG4gIHRoaXMuX2UgPSAweGMzZDJlMWYwXG59XG5cbmluaGVyaXRzKFJJUEVNRDE2MCwgSGFzaEJhc2UpXG5cblJJUEVNRDE2MC5wcm90b3R5cGUuX3VwZGF0ZSA9IGZ1bmN0aW9uICgpIHtcbiAgdmFyIHdvcmRzID0gQVJSQVkxNlxuICBmb3IgKHZhciBqID0gMDsgaiA8IDE2OyArK2opIHdvcmRzW2pdID0gdGhpcy5fYmxvY2sucmVhZEludDMyTEUoaiAqIDQpXG5cbiAgdmFyIGFsID0gdGhpcy5fYSB8IDBcbiAgdmFyIGJsID0gdGhpcy5fYiB8IDBcbiAgdmFyIGNsID0gdGhpcy5fYyB8IDBcbiAgdmFyIGRsID0gdGhpcy5fZCB8IDBcbiAgdmFyIGVsID0gdGhpcy5fZSB8IDBcblxuICB2YXIgYXIgPSB0aGlzLl9hIHwgMFxuICB2YXIgYnIgPSB0aGlzLl9iIHwgMFxuICB2YXIgY3IgPSB0aGlzLl9jIHwgMFxuICB2YXIgZHIgPSB0aGlzLl9kIHwgMFxuICB2YXIgZXIgPSB0aGlzLl9lIHwgMFxuXG4gIC8vIGNvbXB1dGF0aW9uXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgODA7IGkgKz0gMSkge1xuICAgIHZhciB0bFxuICAgIHZhciB0clxuICAgIGlmIChpIDwgMTYpIHtcbiAgICAgIHRsID0gZm4xKGFsLCBibCwgY2wsIGRsLCBlbCwgd29yZHNbemxbaV1dLCBobFswXSwgc2xbaV0pXG4gICAgICB0ciA9IGZuNShhciwgYnIsIGNyLCBkciwgZXIsIHdvcmRzW3pyW2ldXSwgaHJbMF0sIHNyW2ldKVxuICAgIH0gZWxzZSBpZiAoaSA8IDMyKSB7XG4gICAgICB0bCA9IGZuMihhbCwgYmwsIGNsLCBkbCwgZWwsIHdvcmRzW3psW2ldXSwgaGxbMV0sIHNsW2ldKVxuICAgICAgdHIgPSBmbjQoYXIsIGJyLCBjciwgZHIsIGVyLCB3b3Jkc1t6cltpXV0sIGhyWzFdLCBzcltpXSlcbiAgICB9IGVsc2UgaWYgKGkgPCA0OCkge1xuICAgICAgdGwgPSBmbjMoYWwsIGJsLCBjbCwgZGwsIGVsLCB3b3Jkc1t6bFtpXV0sIGhsWzJdLCBzbFtpXSlcbiAgICAgIHRyID0gZm4zKGFyLCBiciwgY3IsIGRyLCBlciwgd29yZHNbenJbaV1dLCBoclsyXSwgc3JbaV0pXG4gICAgfSBlbHNlIGlmIChpIDwgNjQpIHtcbiAgICAgIHRsID0gZm40KGFsLCBibCwgY2wsIGRsLCBlbCwgd29yZHNbemxbaV1dLCBobFszXSwgc2xbaV0pXG4gICAgICB0ciA9IGZuMihhciwgYnIsIGNyLCBkciwgZXIsIHdvcmRzW3pyW2ldXSwgaHJbM10sIHNyW2ldKVxuICAgIH0gZWxzZSB7IC8vIGlmIChpPDgwKSB7XG4gICAgICB0bCA9IGZuNShhbCwgYmwsIGNsLCBkbCwgZWwsIHdvcmRzW3psW2ldXSwgaGxbNF0sIHNsW2ldKVxuICAgICAgdHIgPSBmbjEoYXIsIGJyLCBjciwgZHIsIGVyLCB3b3Jkc1t6cltpXV0sIGhyWzRdLCBzcltpXSlcbiAgICB9XG5cbiAgICBhbCA9IGVsXG4gICAgZWwgPSBkbFxuICAgIGRsID0gcm90bChjbCwgMTApXG4gICAgY2wgPSBibFxuICAgIGJsID0gdGxcblxuICAgIGFyID0gZXJcbiAgICBlciA9IGRyXG4gICAgZHIgPSByb3RsKGNyLCAxMClcbiAgICBjciA9IGJyXG4gICAgYnIgPSB0clxuICB9XG5cbiAgLy8gdXBkYXRlIHN0YXRlXG4gIHZhciB0ID0gKHRoaXMuX2IgKyBjbCArIGRyKSB8IDBcbiAgdGhpcy5fYiA9ICh0aGlzLl9jICsgZGwgKyBlcikgfCAwXG4gIHRoaXMuX2MgPSAodGhpcy5fZCArIGVsICsgYXIpIHwgMFxuICB0aGlzLl9kID0gKHRoaXMuX2UgKyBhbCArIGJyKSB8IDBcbiAgdGhpcy5fZSA9ICh0aGlzLl9hICsgYmwgKyBjcikgfCAwXG4gIHRoaXMuX2EgPSB0XG59XG5cblJJUEVNRDE2MC5wcm90b3R5cGUuX2RpZ2VzdCA9IGZ1bmN0aW9uICgpIHtcbiAgLy8gY3JlYXRlIHBhZGRpbmcgYW5kIGhhbmRsZSBibG9ja3NcbiAgdGhpcy5fYmxvY2tbdGhpcy5fYmxvY2tPZmZzZXQrK10gPSAweDgwXG4gIGlmICh0aGlzLl9ibG9ja09mZnNldCA+IDU2KSB7XG4gICAgdGhpcy5fYmxvY2suZmlsbCgwLCB0aGlzLl9ibG9ja09mZnNldCwgNjQpXG4gICAgdGhpcy5fdXBkYXRlKClcbiAgICB0aGlzLl9ibG9ja09mZnNldCA9IDBcbiAgfVxuXG4gIHRoaXMuX2Jsb2NrLmZpbGwoMCwgdGhpcy5fYmxvY2tPZmZzZXQsIDU2KVxuICB0aGlzLl9ibG9jay53cml0ZVVJbnQzMkxFKHRoaXMuX2xlbmd0aFswXSwgNTYpXG4gIHRoaXMuX2Jsb2NrLndyaXRlVUludDMyTEUodGhpcy5fbGVuZ3RoWzFdLCA2MClcbiAgdGhpcy5fdXBkYXRlKClcblxuICAvLyBwcm9kdWNlIHJlc3VsdFxuICB2YXIgYnVmZmVyID0gQnVmZmVyLmFsbG9jID8gQnVmZmVyLmFsbG9jKDIwKSA6IG5ldyBCdWZmZXIoMjApXG4gIGJ1ZmZlci53cml0ZUludDMyTEUodGhpcy5fYSwgMClcbiAgYnVmZmVyLndyaXRlSW50MzJMRSh0aGlzLl9iLCA0KVxuICBidWZmZXIud3JpdGVJbnQzMkxFKHRoaXMuX2MsIDgpXG4gIGJ1ZmZlci53cml0ZUludDMyTEUodGhpcy5fZCwgMTIpXG4gIGJ1ZmZlci53cml0ZUludDMyTEUodGhpcy5fZSwgMTYpXG4gIHJldHVybiBidWZmZXJcbn1cblxuZnVuY3Rpb24gcm90bCAoeCwgbikge1xuICByZXR1cm4gKHggPDwgbikgfCAoeCA+Pj4gKDMyIC0gbikpXG59XG5cbmZ1bmN0aW9uIGZuMSAoYSwgYiwgYywgZCwgZSwgbSwgaywgcykge1xuICByZXR1cm4gKHJvdGwoKGEgKyAoYiBeIGMgXiBkKSArIG0gKyBrKSB8IDAsIHMpICsgZSkgfCAwXG59XG5cbmZ1bmN0aW9uIGZuMiAoYSwgYiwgYywgZCwgZSwgbSwgaywgcykge1xuICByZXR1cm4gKHJvdGwoKGEgKyAoKGIgJiBjKSB8ICgofmIpICYgZCkpICsgbSArIGspIHwgMCwgcykgKyBlKSB8IDBcbn1cblxuZnVuY3Rpb24gZm4zIChhLCBiLCBjLCBkLCBlLCBtLCBrLCBzKSB7XG4gIHJldHVybiAocm90bCgoYSArICgoYiB8ICh+YykpIF4gZCkgKyBtICsgaykgfCAwLCBzKSArIGUpIHwgMFxufVxuXG5mdW5jdGlvbiBmbjQgKGEsIGIsIGMsIGQsIGUsIG0sIGssIHMpIHtcbiAgcmV0dXJuIChyb3RsKChhICsgKChiICYgZCkgfCAoYyAmICh+ZCkpKSArIG0gKyBrKSB8IDAsIHMpICsgZSkgfCAwXG59XG5cbmZ1bmN0aW9uIGZuNSAoYSwgYiwgYywgZCwgZSwgbSwgaywgcykge1xuICByZXR1cm4gKHJvdGwoKGEgKyAoYiBeIChjIHwgKH5kKSkpICsgbSArIGspIHwgMCwgcykgKyBlKSB8IDBcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBSSVBFTUQxNjBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/ripemd160/index.js\n");

/***/ }),

/***/ "./node_modules/ripemd160/node_modules/hash-base/index.js":
/*!****************************************************************!*\
  !*** ./node_modules/ripemd160/node_modules/hash-base/index.js ***!
  \****************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval("\nvar Buffer = (__webpack_require__(/*! safe-buffer */ \"./node_modules/safe-buffer/index.js\").Buffer)\nvar Transform = (__webpack_require__(/*! readable-stream */ \"./node_modules/ripemd160/node_modules/readable-stream/readable-browser.js\").Transform)\nvar inherits = __webpack_require__(/*! inherits */ \"./node_modules/inherits/inherits_browser.js\")\n\nfunction throwIfNotStringOrBuffer (val, prefix) {\n  if (!Buffer.isBuffer(val) && typeof val !== 'string') {\n    throw new TypeError(prefix + ' must be a string or a buffer')\n  }\n}\n\nfunction HashBase (blockSize) {\n  Transform.call(this)\n\n  this._block = Buffer.allocUnsafe(blockSize)\n  this._blockSize = blockSize\n  this._blockOffset = 0\n  this._length = [0, 0, 0, 0]\n\n  this._finalized = false\n}\n\ninherits(HashBase, Transform)\n\nHashBase.prototype._transform = function (chunk, encoding, callback) {\n  var error = null\n  try {\n    this.update(chunk, encoding)\n  } catch (err) {\n    error = err\n  }\n\n  callback(error)\n}\n\nHashBase.prototype._flush = function (callback) {\n  var error = null\n  try {\n    this.push(this.digest())\n  } catch (err) {\n    error = err\n  }\n\n  callback(error)\n}\n\nHashBase.prototype.update = function (data, encoding) {\n  throwIfNotStringOrBuffer(data, 'Data')\n  if (this._finalized) throw new Error('Digest already called')\n  if (!Buffer.isBuffer(data)) data = Buffer.from(data, encoding)\n\n  // consume data\n  var block = this._block\n  var offset = 0\n  while (this._blockOffset + data.length - offset >= this._blockSize) {\n    for (var i = this._blockOffset; i < this._blockSize;) block[i++] = data[offset++]\n    this._update()\n    this._blockOffset = 0\n  }\n  while (offset < data.length) block[this._blockOffset++] = data[offset++]\n\n  // update length\n  for (var j = 0, carry = data.length * 8; carry > 0; ++j) {\n    this._length[j] += carry\n    carry = (this._length[j] / 0x0100000000) | 0\n    if (carry > 0) this._length[j] -= 0x0100000000 * carry\n  }\n\n  return this\n}\n\nHashBase.prototype._update = function () {\n  throw new Error('_update is not implemented')\n}\n\nHashBase.prototype.digest = function (encoding) {\n  if (this._finalized) throw new Error('Digest already called')\n  this._finalized = true\n\n  var digest = this._digest()\n  if (encoding !== undefined) digest = digest.toString(encoding)\n\n  // reset state\n  this._block.fill(0)\n  this._blockOffset = 0\n  for (var i = 0; i < 4; ++i) this._length[i] = 0\n\n  return digest\n}\n\nHashBase.prototype._digest = function () {\n  throw new Error('_digest is not implemented')\n}\n\nmodule.exports = HashBase\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcmlwZW1kMTYwL25vZGVfbW9kdWxlcy9oYXNoLWJhc2UvaW5kZXguanMuanMiLCJtYXBwaW5ncyI6IkFBQVk7QUFDWixhQUFhLHNGQUE2QjtBQUMxQyxnQkFBZ0IsbUlBQW9DO0FBQ3BELGVBQWUsbUJBQU8sQ0FBQyw2REFBVTs7QUFFakM7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9DQUFvQyxvQkFBb0I7QUFDeEQ7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSwyQ0FBMkMsV0FBVztBQUN0RDtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0IsT0FBTzs7QUFFekI7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3JpcGVtZDE2MC9ub2RlX21vZHVsZXMvaGFzaC1iYXNlL2luZGV4LmpzPzk0YzUiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnXG52YXIgQnVmZmVyID0gcmVxdWlyZSgnc2FmZS1idWZmZXInKS5CdWZmZXJcbnZhciBUcmFuc2Zvcm0gPSByZXF1aXJlKCdyZWFkYWJsZS1zdHJlYW0nKS5UcmFuc2Zvcm1cbnZhciBpbmhlcml0cyA9IHJlcXVpcmUoJ2luaGVyaXRzJylcblxuZnVuY3Rpb24gdGhyb3dJZk5vdFN0cmluZ09yQnVmZmVyICh2YWwsIHByZWZpeCkge1xuICBpZiAoIUJ1ZmZlci5pc0J1ZmZlcih2YWwpICYmIHR5cGVvZiB2YWwgIT09ICdzdHJpbmcnKSB7XG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcihwcmVmaXggKyAnIG11c3QgYmUgYSBzdHJpbmcgb3IgYSBidWZmZXInKVxuICB9XG59XG5cbmZ1bmN0aW9uIEhhc2hCYXNlIChibG9ja1NpemUpIHtcbiAgVHJhbnNmb3JtLmNhbGwodGhpcylcblxuICB0aGlzLl9ibG9jayA9IEJ1ZmZlci5hbGxvY1Vuc2FmZShibG9ja1NpemUpXG4gIHRoaXMuX2Jsb2NrU2l6ZSA9IGJsb2NrU2l6ZVxuICB0aGlzLl9ibG9ja09mZnNldCA9IDBcbiAgdGhpcy5fbGVuZ3RoID0gWzAsIDAsIDAsIDBdXG5cbiAgdGhpcy5fZmluYWxpemVkID0gZmFsc2Vcbn1cblxuaW5oZXJpdHMoSGFzaEJhc2UsIFRyYW5zZm9ybSlcblxuSGFzaEJhc2UucHJvdG90eXBlLl90cmFuc2Zvcm0gPSBmdW5jdGlvbiAoY2h1bmssIGVuY29kaW5nLCBjYWxsYmFjaykge1xuICB2YXIgZXJyb3IgPSBudWxsXG4gIHRyeSB7XG4gICAgdGhpcy51cGRhdGUoY2h1bmssIGVuY29kaW5nKVxuICB9IGNhdGNoIChlcnIpIHtcbiAgICBlcnJvciA9IGVyclxuICB9XG5cbiAgY2FsbGJhY2soZXJyb3IpXG59XG5cbkhhc2hCYXNlLnByb3RvdHlwZS5fZmx1c2ggPSBmdW5jdGlvbiAoY2FsbGJhY2spIHtcbiAgdmFyIGVycm9yID0gbnVsbFxuICB0cnkge1xuICAgIHRoaXMucHVzaCh0aGlzLmRpZ2VzdCgpKVxuICB9IGNhdGNoIChlcnIpIHtcbiAgICBlcnJvciA9IGVyclxuICB9XG5cbiAgY2FsbGJhY2soZXJyb3IpXG59XG5cbkhhc2hCYXNlLnByb3RvdHlwZS51cGRhdGUgPSBmdW5jdGlvbiAoZGF0YSwgZW5jb2RpbmcpIHtcbiAgdGhyb3dJZk5vdFN0cmluZ09yQnVmZmVyKGRhdGEsICdEYXRhJylcbiAgaWYgKHRoaXMuX2ZpbmFsaXplZCkgdGhyb3cgbmV3IEVycm9yKCdEaWdlc3QgYWxyZWFkeSBjYWxsZWQnKVxuICBpZiAoIUJ1ZmZlci5pc0J1ZmZlcihkYXRhKSkgZGF0YSA9IEJ1ZmZlci5mcm9tKGRhdGEsIGVuY29kaW5nKVxuXG4gIC8vIGNvbnN1bWUgZGF0YVxuICB2YXIgYmxvY2sgPSB0aGlzLl9ibG9ja1xuICB2YXIgb2Zmc2V0ID0gMFxuICB3aGlsZSAodGhpcy5fYmxvY2tPZmZzZXQgKyBkYXRhLmxlbmd0aCAtIG9mZnNldCA+PSB0aGlzLl9ibG9ja1NpemUpIHtcbiAgICBmb3IgKHZhciBpID0gdGhpcy5fYmxvY2tPZmZzZXQ7IGkgPCB0aGlzLl9ibG9ja1NpemU7KSBibG9ja1tpKytdID0gZGF0YVtvZmZzZXQrK11cbiAgICB0aGlzLl91cGRhdGUoKVxuICAgIHRoaXMuX2Jsb2NrT2Zmc2V0ID0gMFxuICB9XG4gIHdoaWxlIChvZmZzZXQgPCBkYXRhLmxlbmd0aCkgYmxvY2tbdGhpcy5fYmxvY2tPZmZzZXQrK10gPSBkYXRhW29mZnNldCsrXVxuXG4gIC8vIHVwZGF0ZSBsZW5ndGhcbiAgZm9yICh2YXIgaiA9IDAsIGNhcnJ5ID0gZGF0YS5sZW5ndGggKiA4OyBjYXJyeSA+IDA7ICsraikge1xuICAgIHRoaXMuX2xlbmd0aFtqXSArPSBjYXJyeVxuICAgIGNhcnJ5ID0gKHRoaXMuX2xlbmd0aFtqXSAvIDB4MDEwMDAwMDAwMCkgfCAwXG4gICAgaWYgKGNhcnJ5ID4gMCkgdGhpcy5fbGVuZ3RoW2pdIC09IDB4MDEwMDAwMDAwMCAqIGNhcnJ5XG4gIH1cblxuICByZXR1cm4gdGhpc1xufVxuXG5IYXNoQmFzZS5wcm90b3R5cGUuX3VwZGF0ZSA9IGZ1bmN0aW9uICgpIHtcbiAgdGhyb3cgbmV3IEVycm9yKCdfdXBkYXRlIGlzIG5vdCBpbXBsZW1lbnRlZCcpXG59XG5cbkhhc2hCYXNlLnByb3RvdHlwZS5kaWdlc3QgPSBmdW5jdGlvbiAoZW5jb2RpbmcpIHtcbiAgaWYgKHRoaXMuX2ZpbmFsaXplZCkgdGhyb3cgbmV3IEVycm9yKCdEaWdlc3QgYWxyZWFkeSBjYWxsZWQnKVxuICB0aGlzLl9maW5hbGl6ZWQgPSB0cnVlXG5cbiAgdmFyIGRpZ2VzdCA9IHRoaXMuX2RpZ2VzdCgpXG4gIGlmIChlbmNvZGluZyAhPT0gdW5kZWZpbmVkKSBkaWdlc3QgPSBkaWdlc3QudG9TdHJpbmcoZW5jb2RpbmcpXG5cbiAgLy8gcmVzZXQgc3RhdGVcbiAgdGhpcy5fYmxvY2suZmlsbCgwKVxuICB0aGlzLl9ibG9ja09mZnNldCA9IDBcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCA0OyArK2kpIHRoaXMuX2xlbmd0aFtpXSA9IDBcblxuICByZXR1cm4gZGlnZXN0XG59XG5cbkhhc2hCYXNlLnByb3RvdHlwZS5fZGlnZXN0ID0gZnVuY3Rpb24gKCkge1xuICB0aHJvdyBuZXcgRXJyb3IoJ19kaWdlc3QgaXMgbm90IGltcGxlbWVudGVkJylcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBIYXNoQmFzZVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/ripemd160/node_modules/hash-base/index.js\n");

/***/ }),

/***/ "./node_modules/ripemd160/node_modules/readable-stream/errors-browser.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/ripemd160/node_modules/readable-stream/errors-browser.js ***!
  \*******************************************************************************/
/***/ (function(module) {

"use strict";
eval("\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\nvar codes = {};\n\nfunction createErrorType(code, message, Base) {\n  if (!Base) {\n    Base = Error;\n  }\n\n  function getMessage(arg1, arg2, arg3) {\n    if (typeof message === 'string') {\n      return message;\n    } else {\n      return message(arg1, arg2, arg3);\n    }\n  }\n\n  var NodeError =\n  /*#__PURE__*/\n  function (_Base) {\n    _inheritsLoose(NodeError, _Base);\n\n    function NodeError(arg1, arg2, arg3) {\n      return _Base.call(this, getMessage(arg1, arg2, arg3)) || this;\n    }\n\n    return NodeError;\n  }(Base);\n\n  NodeError.prototype.name = Base.name;\n  NodeError.prototype.code = code;\n  codes[code] = NodeError;\n} // https://github.com/nodejs/node/blob/v10.8.0/lib/internal/errors.js\n\n\nfunction oneOf(expected, thing) {\n  if (Array.isArray(expected)) {\n    var len = expected.length;\n    expected = expected.map(function (i) {\n      return String(i);\n    });\n\n    if (len > 2) {\n      return \"one of \".concat(thing, \" \").concat(expected.slice(0, len - 1).join(', '), \", or \") + expected[len - 1];\n    } else if (len === 2) {\n      return \"one of \".concat(thing, \" \").concat(expected[0], \" or \").concat(expected[1]);\n    } else {\n      return \"of \".concat(thing, \" \").concat(expected[0]);\n    }\n  } else {\n    return \"of \".concat(thing, \" \").concat(String(expected));\n  }\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/startsWith\n\n\nfunction startsWith(str, search, pos) {\n  return str.substr(!pos || pos < 0 ? 0 : +pos, search.length) === search;\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/endsWith\n\n\nfunction endsWith(str, search, this_len) {\n  if (this_len === undefined || this_len > str.length) {\n    this_len = str.length;\n  }\n\n  return str.substring(this_len - search.length, this_len) === search;\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/includes\n\n\nfunction includes(str, search, start) {\n  if (typeof start !== 'number') {\n    start = 0;\n  }\n\n  if (start + search.length > str.length) {\n    return false;\n  } else {\n    return str.indexOf(search, start) !== -1;\n  }\n}\n\ncreateErrorType('ERR_INVALID_OPT_VALUE', function (name, value) {\n  return 'The value \"' + value + '\" is invalid for option \"' + name + '\"';\n}, TypeError);\ncreateErrorType('ERR_INVALID_ARG_TYPE', function (name, expected, actual) {\n  // determiner: 'must be' or 'must not be'\n  var determiner;\n\n  if (typeof expected === 'string' && startsWith(expected, 'not ')) {\n    determiner = 'must not be';\n    expected = expected.replace(/^not /, '');\n  } else {\n    determiner = 'must be';\n  }\n\n  var msg;\n\n  if (endsWith(name, ' argument')) {\n    // For cases like 'first argument'\n    msg = \"The \".concat(name, \" \").concat(determiner, \" \").concat(oneOf(expected, 'type'));\n  } else {\n    var type = includes(name, '.') ? 'property' : 'argument';\n    msg = \"The \\\"\".concat(name, \"\\\" \").concat(type, \" \").concat(determiner, \" \").concat(oneOf(expected, 'type'));\n  }\n\n  msg += \". Received type \".concat(typeof actual);\n  return msg;\n}, TypeError);\ncreateErrorType('ERR_STREAM_PUSH_AFTER_EOF', 'stream.push() after EOF');\ncreateErrorType('ERR_METHOD_NOT_IMPLEMENTED', function (name) {\n  return 'The ' + name + ' method is not implemented';\n});\ncreateErrorType('ERR_STREAM_PREMATURE_CLOSE', 'Premature close');\ncreateErrorType('ERR_STREAM_DESTROYED', function (name) {\n  return 'Cannot call ' + name + ' after a stream was destroyed';\n});\ncreateErrorType('ERR_MULTIPLE_CALLBACK', 'Callback called multiple times');\ncreateErrorType('ERR_STREAM_CANNOT_PIPE', 'Cannot pipe, not readable');\ncreateErrorType('ERR_STREAM_WRITE_AFTER_END', 'write after end');\ncreateErrorType('ERR_STREAM_NULL_VALUES', 'May not write null values to stream', TypeError);\ncreateErrorType('ERR_UNKNOWN_ENCODING', function (arg) {\n  return 'Unknown encoding: ' + arg;\n}, TypeError);\ncreateErrorType('ERR_STREAM_UNSHIFT_AFTER_END_EVENT', 'stream.unshift() after end event');\nmodule.exports.codes = codes;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcmlwZW1kMTYwL25vZGVfbW9kdWxlcy9yZWFkYWJsZS1zdHJlYW0vZXJyb3JzLWJyb3dzZXIuanMuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsZ0RBQWdELDBEQUEwRCwyQ0FBMkM7O0FBRXJKOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7QUFDQSxFQUFFOzs7QUFHRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSzs7QUFFTDtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBLEVBQUU7OztBQUdGO0FBQ0E7QUFDQSxFQUFFOzs7QUFHRjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLEVBQUU7OztBQUdGO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBLG9CQUFvQiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvcmlwZW1kMTYwL25vZGVfbW9kdWxlcy9yZWFkYWJsZS1zdHJlYW0vZXJyb3JzLWJyb3dzZXIuanM/ODVmZiJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmZ1bmN0aW9uIF9pbmhlcml0c0xvb3NlKHN1YkNsYXNzLCBzdXBlckNsYXNzKSB7IHN1YkNsYXNzLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoc3VwZXJDbGFzcy5wcm90b3R5cGUpOyBzdWJDbGFzcy5wcm90b3R5cGUuY29uc3RydWN0b3IgPSBzdWJDbGFzczsgc3ViQ2xhc3MuX19wcm90b19fID0gc3VwZXJDbGFzczsgfVxuXG52YXIgY29kZXMgPSB7fTtcblxuZnVuY3Rpb24gY3JlYXRlRXJyb3JUeXBlKGNvZGUsIG1lc3NhZ2UsIEJhc2UpIHtcbiAgaWYgKCFCYXNlKSB7XG4gICAgQmFzZSA9IEVycm9yO1xuICB9XG5cbiAgZnVuY3Rpb24gZ2V0TWVzc2FnZShhcmcxLCBhcmcyLCBhcmczKSB7XG4gICAgaWYgKHR5cGVvZiBtZXNzYWdlID09PSAnc3RyaW5nJykge1xuICAgICAgcmV0dXJuIG1lc3NhZ2U7XG4gICAgfSBlbHNlIHtcbiAgICAgIHJldHVybiBtZXNzYWdlKGFyZzEsIGFyZzIsIGFyZzMpO1xuICAgIH1cbiAgfVxuXG4gIHZhciBOb2RlRXJyb3IgPVxuICAvKiNfX1BVUkVfXyovXG4gIGZ1bmN0aW9uIChfQmFzZSkge1xuICAgIF9pbmhlcml0c0xvb3NlKE5vZGVFcnJvciwgX0Jhc2UpO1xuXG4gICAgZnVuY3Rpb24gTm9kZUVycm9yKGFyZzEsIGFyZzIsIGFyZzMpIHtcbiAgICAgIHJldHVybiBfQmFzZS5jYWxsKHRoaXMsIGdldE1lc3NhZ2UoYXJnMSwgYXJnMiwgYXJnMykpIHx8IHRoaXM7XG4gICAgfVxuXG4gICAgcmV0dXJuIE5vZGVFcnJvcjtcbiAgfShCYXNlKTtcblxuICBOb2RlRXJyb3IucHJvdG90eXBlLm5hbWUgPSBCYXNlLm5hbWU7XG4gIE5vZGVFcnJvci5wcm90b3R5cGUuY29kZSA9IGNvZGU7XG4gIGNvZGVzW2NvZGVdID0gTm9kZUVycm9yO1xufSAvLyBodHRwczovL2dpdGh1Yi5jb20vbm9kZWpzL25vZGUvYmxvYi92MTAuOC4wL2xpYi9pbnRlcm5hbC9lcnJvcnMuanNcblxuXG5mdW5jdGlvbiBvbmVPZihleHBlY3RlZCwgdGhpbmcpIHtcbiAgaWYgKEFycmF5LmlzQXJyYXkoZXhwZWN0ZWQpKSB7XG4gICAgdmFyIGxlbiA9IGV4cGVjdGVkLmxlbmd0aDtcbiAgICBleHBlY3RlZCA9IGV4cGVjdGVkLm1hcChmdW5jdGlvbiAoaSkge1xuICAgICAgcmV0dXJuIFN0cmluZyhpKTtcbiAgICB9KTtcblxuICAgIGlmIChsZW4gPiAyKSB7XG4gICAgICByZXR1cm4gXCJvbmUgb2YgXCIuY29uY2F0KHRoaW5nLCBcIiBcIikuY29uY2F0KGV4cGVjdGVkLnNsaWNlKDAsIGxlbiAtIDEpLmpvaW4oJywgJyksIFwiLCBvciBcIikgKyBleHBlY3RlZFtsZW4gLSAxXTtcbiAgICB9IGVsc2UgaWYgKGxlbiA9PT0gMikge1xuICAgICAgcmV0dXJuIFwib25lIG9mIFwiLmNvbmNhdCh0aGluZywgXCIgXCIpLmNvbmNhdChleHBlY3RlZFswXSwgXCIgb3IgXCIpLmNvbmNhdChleHBlY3RlZFsxXSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHJldHVybiBcIm9mIFwiLmNvbmNhdCh0aGluZywgXCIgXCIpLmNvbmNhdChleHBlY3RlZFswXSk7XG4gICAgfVxuICB9IGVsc2Uge1xuICAgIHJldHVybiBcIm9mIFwiLmNvbmNhdCh0aGluZywgXCIgXCIpLmNvbmNhdChTdHJpbmcoZXhwZWN0ZWQpKTtcbiAgfVxufSAvLyBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9lbi1VUy9kb2NzL1dlYi9KYXZhU2NyaXB0L1JlZmVyZW5jZS9HbG9iYWxfT2JqZWN0cy9TdHJpbmcvc3RhcnRzV2l0aFxuXG5cbmZ1bmN0aW9uIHN0YXJ0c1dpdGgoc3RyLCBzZWFyY2gsIHBvcykge1xuICByZXR1cm4gc3RyLnN1YnN0cighcG9zIHx8IHBvcyA8IDAgPyAwIDogK3Bvcywgc2VhcmNoLmxlbmd0aCkgPT09IHNlYXJjaDtcbn0gLy8gaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvSmF2YVNjcmlwdC9SZWZlcmVuY2UvR2xvYmFsX09iamVjdHMvU3RyaW5nL2VuZHNXaXRoXG5cblxuZnVuY3Rpb24gZW5kc1dpdGgoc3RyLCBzZWFyY2gsIHRoaXNfbGVuKSB7XG4gIGlmICh0aGlzX2xlbiA9PT0gdW5kZWZpbmVkIHx8IHRoaXNfbGVuID4gc3RyLmxlbmd0aCkge1xuICAgIHRoaXNfbGVuID0gc3RyLmxlbmd0aDtcbiAgfVxuXG4gIHJldHVybiBzdHIuc3Vic3RyaW5nKHRoaXNfbGVuIC0gc2VhcmNoLmxlbmd0aCwgdGhpc19sZW4pID09PSBzZWFyY2g7XG59IC8vIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2VuLVVTL2RvY3MvV2ViL0phdmFTY3JpcHQvUmVmZXJlbmNlL0dsb2JhbF9PYmplY3RzL1N0cmluZy9pbmNsdWRlc1xuXG5cbmZ1bmN0aW9uIGluY2x1ZGVzKHN0ciwgc2VhcmNoLCBzdGFydCkge1xuICBpZiAodHlwZW9mIHN0YXJ0ICE9PSAnbnVtYmVyJykge1xuICAgIHN0YXJ0ID0gMDtcbiAgfVxuXG4gIGlmIChzdGFydCArIHNlYXJjaC5sZW5ndGggPiBzdHIubGVuZ3RoKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9IGVsc2Uge1xuICAgIHJldHVybiBzdHIuaW5kZXhPZihzZWFyY2gsIHN0YXJ0KSAhPT0gLTE7XG4gIH1cbn1cblxuY3JlYXRlRXJyb3JUeXBlKCdFUlJfSU5WQUxJRF9PUFRfVkFMVUUnLCBmdW5jdGlvbiAobmFtZSwgdmFsdWUpIHtcbiAgcmV0dXJuICdUaGUgdmFsdWUgXCInICsgdmFsdWUgKyAnXCIgaXMgaW52YWxpZCBmb3Igb3B0aW9uIFwiJyArIG5hbWUgKyAnXCInO1xufSwgVHlwZUVycm9yKTtcbmNyZWF0ZUVycm9yVHlwZSgnRVJSX0lOVkFMSURfQVJHX1RZUEUnLCBmdW5jdGlvbiAobmFtZSwgZXhwZWN0ZWQsIGFjdHVhbCkge1xuICAvLyBkZXRlcm1pbmVyOiAnbXVzdCBiZScgb3IgJ211c3Qgbm90IGJlJ1xuICB2YXIgZGV0ZXJtaW5lcjtcblxuICBpZiAodHlwZW9mIGV4cGVjdGVkID09PSAnc3RyaW5nJyAmJiBzdGFydHNXaXRoKGV4cGVjdGVkLCAnbm90ICcpKSB7XG4gICAgZGV0ZXJtaW5lciA9ICdtdXN0IG5vdCBiZSc7XG4gICAgZXhwZWN0ZWQgPSBleHBlY3RlZC5yZXBsYWNlKC9ebm90IC8sICcnKTtcbiAgfSBlbHNlIHtcbiAgICBkZXRlcm1pbmVyID0gJ211c3QgYmUnO1xuICB9XG5cbiAgdmFyIG1zZztcblxuICBpZiAoZW5kc1dpdGgobmFtZSwgJyBhcmd1bWVudCcpKSB7XG4gICAgLy8gRm9yIGNhc2VzIGxpa2UgJ2ZpcnN0IGFyZ3VtZW50J1xuICAgIG1zZyA9IFwiVGhlIFwiLmNvbmNhdChuYW1lLCBcIiBcIikuY29uY2F0KGRldGVybWluZXIsIFwiIFwiKS5jb25jYXQob25lT2YoZXhwZWN0ZWQsICd0eXBlJykpO1xuICB9IGVsc2Uge1xuICAgIHZhciB0eXBlID0gaW5jbHVkZXMobmFtZSwgJy4nKSA/ICdwcm9wZXJ0eScgOiAnYXJndW1lbnQnO1xuICAgIG1zZyA9IFwiVGhlIFxcXCJcIi5jb25jYXQobmFtZSwgXCJcXFwiIFwiKS5jb25jYXQodHlwZSwgXCIgXCIpLmNvbmNhdChkZXRlcm1pbmVyLCBcIiBcIikuY29uY2F0KG9uZU9mKGV4cGVjdGVkLCAndHlwZScpKTtcbiAgfVxuXG4gIG1zZyArPSBcIi4gUmVjZWl2ZWQgdHlwZSBcIi5jb25jYXQodHlwZW9mIGFjdHVhbCk7XG4gIHJldHVybiBtc2c7XG59LCBUeXBlRXJyb3IpO1xuY3JlYXRlRXJyb3JUeXBlKCdFUlJfU1RSRUFNX1BVU0hfQUZURVJfRU9GJywgJ3N0cmVhbS5wdXNoKCkgYWZ0ZXIgRU9GJyk7XG5jcmVhdGVFcnJvclR5cGUoJ0VSUl9NRVRIT0RfTk9UX0lNUExFTUVOVEVEJywgZnVuY3Rpb24gKG5hbWUpIHtcbiAgcmV0dXJuICdUaGUgJyArIG5hbWUgKyAnIG1ldGhvZCBpcyBub3QgaW1wbGVtZW50ZWQnO1xufSk7XG5jcmVhdGVFcnJvclR5cGUoJ0VSUl9TVFJFQU1fUFJFTUFUVVJFX0NMT1NFJywgJ1ByZW1hdHVyZSBjbG9zZScpO1xuY3JlYXRlRXJyb3JUeXBlKCdFUlJfU1RSRUFNX0RFU1RST1lFRCcsIGZ1bmN0aW9uIChuYW1lKSB7XG4gIHJldHVybiAnQ2Fubm90IGNhbGwgJyArIG5hbWUgKyAnIGFmdGVyIGEgc3RyZWFtIHdhcyBkZXN0cm95ZWQnO1xufSk7XG5jcmVhdGVFcnJvclR5cGUoJ0VSUl9NVUxUSVBMRV9DQUxMQkFDSycsICdDYWxsYmFjayBjYWxsZWQgbXVsdGlwbGUgdGltZXMnKTtcbmNyZWF0ZUVycm9yVHlwZSgnRVJSX1NUUkVBTV9DQU5OT1RfUElQRScsICdDYW5ub3QgcGlwZSwgbm90IHJlYWRhYmxlJyk7XG5jcmVhdGVFcnJvclR5cGUoJ0VSUl9TVFJFQU1fV1JJVEVfQUZURVJfRU5EJywgJ3dyaXRlIGFmdGVyIGVuZCcpO1xuY3JlYXRlRXJyb3JUeXBlKCdFUlJfU1RSRUFNX05VTExfVkFMVUVTJywgJ01heSBub3Qgd3JpdGUgbnVsbCB2YWx1ZXMgdG8gc3RyZWFtJywgVHlwZUVycm9yKTtcbmNyZWF0ZUVycm9yVHlwZSgnRVJSX1VOS05PV05fRU5DT0RJTkcnLCBmdW5jdGlvbiAoYXJnKSB7XG4gIHJldHVybiAnVW5rbm93biBlbmNvZGluZzogJyArIGFyZztcbn0sIFR5cGVFcnJvcik7XG5jcmVhdGVFcnJvclR5cGUoJ0VSUl9TVFJFQU1fVU5TSElGVF9BRlRFUl9FTkRfRVZFTlQnLCAnc3RyZWFtLnVuc2hpZnQoKSBhZnRlciBlbmQgZXZlbnQnKTtcbm1vZHVsZS5leHBvcnRzLmNvZGVzID0gY29kZXM7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/ripemd160/node_modules/readable-stream/errors-browser.js\n");

/***/ }),

/***/ "./node_modules/ripemd160/node_modules/readable-stream/lib/_stream_duplex.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/ripemd160/node_modules/readable-stream/lib/_stream_duplex.js ***!
  \***********************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval("/* provided dependency */ var process = __webpack_require__(/*! process */ \"./node_modules/process/browser.js\");\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a duplex stream is just a stream that is both readable and writable.\n// Since JS doesn't have multiple prototypal inheritance, this class\n// prototypally inherits from Readable, and then parasitically from\n// Writable.\n\n\n\n/*<replacement>*/\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n  for (var key in obj) keys.push(key);\n  return keys;\n};\n/*</replacement>*/\n\nmodule.exports = Duplex;\nvar Readable = __webpack_require__(/*! ./_stream_readable */ \"./node_modules/ripemd160/node_modules/readable-stream/lib/_stream_readable.js\");\nvar Writable = __webpack_require__(/*! ./_stream_writable */ \"./node_modules/ripemd160/node_modules/readable-stream/lib/_stream_writable.js\");\n__webpack_require__(/*! inherits */ \"./node_modules/inherits/inherits_browser.js\")(Duplex, Readable);\n{\n  // Allow the keys array to be GC'ed.\n  var keys = objectKeys(Writable.prototype);\n  for (var v = 0; v < keys.length; v++) {\n    var method = keys[v];\n    if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];\n  }\n}\nfunction Duplex(options) {\n  if (!(this instanceof Duplex)) return new Duplex(options);\n  Readable.call(this, options);\n  Writable.call(this, options);\n  this.allowHalfOpen = true;\n  if (options) {\n    if (options.readable === false) this.readable = false;\n    if (options.writable === false) this.writable = false;\n    if (options.allowHalfOpen === false) {\n      this.allowHalfOpen = false;\n      this.once('end', onend);\n    }\n  }\n}\nObject.defineProperty(Duplex.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.highWaterMark;\n  }\n});\nObject.defineProperty(Duplex.prototype, 'writableBuffer', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState && this._writableState.getBuffer();\n  }\n});\nObject.defineProperty(Duplex.prototype, 'writableLength', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.length;\n  }\n});\n\n// the no-half-open enforcer\nfunction onend() {\n  // If the writable side ended, then we're ok.\n  if (this._writableState.ended) return;\n\n  // no more data can be written.\n  // But allow more writes to happen in this tick.\n  process.nextTick(onEndNT, this);\n}\nfunction onEndNT(self) {\n  self.end();\n}\nObject.defineProperty(Duplex.prototype, 'destroyed', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return false;\n    }\n    return this._readableState.destroyed && this._writableState.destroyed;\n  },\n  set: function set(value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._readableState.destroyed = value;\n    this._writableState.destroyed = value;\n  }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcmlwZW1kMTYwL25vZGVfbW9kdWxlcy9yZWFkYWJsZS1zdHJlYW0vbGliL19zdHJlYW1fZHVwbGV4LmpzLmpzIiwibWFwcGluZ3MiOiI7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVhOztBQUViO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsZUFBZSxtQkFBTyxDQUFDLHlHQUFvQjtBQUMzQyxlQUFlLG1CQUFPLENBQUMseUdBQW9CO0FBQzNDLG1CQUFPLENBQUMsNkRBQVU7QUFDbEI7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLGlCQUFpQjtBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7O0FBRUQ7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLEVBQUUsT0FBTztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9yaXBlbWQxNjAvbm9kZV9tb2R1bGVzL3JlYWRhYmxlLXN0cmVhbS9saWIvX3N0cmVhbV9kdXBsZXguanM/ZmEwMiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgSm95ZW50LCBJbmMuIGFuZCBvdGhlciBOb2RlIGNvbnRyaWJ1dG9ycy5cbi8vXG4vLyBQZXJtaXNzaW9uIGlzIGhlcmVieSBncmFudGVkLCBmcmVlIG9mIGNoYXJnZSwgdG8gYW55IHBlcnNvbiBvYnRhaW5pbmcgYVxuLy8gY29weSBvZiB0aGlzIHNvZnR3YXJlIGFuZCBhc3NvY2lhdGVkIGRvY3VtZW50YXRpb24gZmlsZXMgKHRoZVxuLy8gXCJTb2Z0d2FyZVwiKSwgdG8gZGVhbCBpbiB0aGUgU29mdHdhcmUgd2l0aG91dCByZXN0cmljdGlvbiwgaW5jbHVkaW5nXG4vLyB3aXRob3V0IGxpbWl0YXRpb24gdGhlIHJpZ2h0cyB0byB1c2UsIGNvcHksIG1vZGlmeSwgbWVyZ2UsIHB1Ymxpc2gsXG4vLyBkaXN0cmlidXRlLCBzdWJsaWNlbnNlLCBhbmQvb3Igc2VsbCBjb3BpZXMgb2YgdGhlIFNvZnR3YXJlLCBhbmQgdG8gcGVybWl0XG4vLyBwZXJzb25zIHRvIHdob20gdGhlIFNvZnR3YXJlIGlzIGZ1cm5pc2hlZCB0byBkbyBzbywgc3ViamVjdCB0byB0aGVcbi8vIGZvbGxvd2luZyBjb25kaXRpb25zOlxuLy9cbi8vIFRoZSBhYm92ZSBjb3B5cmlnaHQgbm90aWNlIGFuZCB0aGlzIHBlcm1pc3Npb24gbm90aWNlIHNoYWxsIGJlIGluY2x1ZGVkXG4vLyBpbiBhbGwgY29waWVzIG9yIHN1YnN0YW50aWFsIHBvcnRpb25zIG9mIHRoZSBTb2Z0d2FyZS5cbi8vXG4vLyBUSEUgU09GVFdBUkUgSVMgUFJPVklERUQgXCJBUyBJU1wiLCBXSVRIT1VUIFdBUlJBTlRZIE9GIEFOWSBLSU5ELCBFWFBSRVNTXG4vLyBPUiBJTVBMSUVELCBJTkNMVURJTkcgQlVUIE5PVCBMSU1JVEVEIFRPIFRIRSBXQVJSQU5USUVTIE9GXG4vLyBNRVJDSEFOVEFCSUxJVFksIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFIEFORCBOT05JTkZSSU5HRU1FTlQuIElOXG4vLyBOTyBFVkVOVCBTSEFMTCBUSEUgQVVUSE9SUyBPUiBDT1BZUklHSFQgSE9MREVSUyBCRSBMSUFCTEUgRk9SIEFOWSBDTEFJTSxcbi8vIERBTUFHRVMgT1IgT1RIRVIgTElBQklMSVRZLCBXSEVUSEVSIElOIEFOIEFDVElPTiBPRiBDT05UUkFDVCwgVE9SVCBPUlxuLy8gT1RIRVJXSVNFLCBBUklTSU5HIEZST00sIE9VVCBPRiBPUiBJTiBDT05ORUNUSU9OIFdJVEggVEhFIFNPRlRXQVJFIE9SIFRIRVxuLy8gVVNFIE9SIE9USEVSIERFQUxJTkdTIElOIFRIRSBTT0ZUV0FSRS5cblxuLy8gYSBkdXBsZXggc3RyZWFtIGlzIGp1c3QgYSBzdHJlYW0gdGhhdCBpcyBib3RoIHJlYWRhYmxlIGFuZCB3cml0YWJsZS5cbi8vIFNpbmNlIEpTIGRvZXNuJ3QgaGF2ZSBtdWx0aXBsZSBwcm90b3R5cGFsIGluaGVyaXRhbmNlLCB0aGlzIGNsYXNzXG4vLyBwcm90b3R5cGFsbHkgaW5oZXJpdHMgZnJvbSBSZWFkYWJsZSwgYW5kIHRoZW4gcGFyYXNpdGljYWxseSBmcm9tXG4vLyBXcml0YWJsZS5cblxuJ3VzZSBzdHJpY3QnO1xuXG4vKjxyZXBsYWNlbWVudD4qL1xudmFyIG9iamVjdEtleXMgPSBPYmplY3Qua2V5cyB8fCBmdW5jdGlvbiAob2JqKSB7XG4gIHZhciBrZXlzID0gW107XG4gIGZvciAodmFyIGtleSBpbiBvYmopIGtleXMucHVzaChrZXkpO1xuICByZXR1cm4ga2V5cztcbn07XG4vKjwvcmVwbGFjZW1lbnQ+Ki9cblxubW9kdWxlLmV4cG9ydHMgPSBEdXBsZXg7XG52YXIgUmVhZGFibGUgPSByZXF1aXJlKCcuL19zdHJlYW1fcmVhZGFibGUnKTtcbnZhciBXcml0YWJsZSA9IHJlcXVpcmUoJy4vX3N0cmVhbV93cml0YWJsZScpO1xucmVxdWlyZSgnaW5oZXJpdHMnKShEdXBsZXgsIFJlYWRhYmxlKTtcbntcbiAgLy8gQWxsb3cgdGhlIGtleXMgYXJyYXkgdG8gYmUgR0MnZWQuXG4gIHZhciBrZXlzID0gb2JqZWN0S2V5cyhXcml0YWJsZS5wcm90b3R5cGUpO1xuICBmb3IgKHZhciB2ID0gMDsgdiA8IGtleXMubGVuZ3RoOyB2KyspIHtcbiAgICB2YXIgbWV0aG9kID0ga2V5c1t2XTtcbiAgICBpZiAoIUR1cGxleC5wcm90b3R5cGVbbWV0aG9kXSkgRHVwbGV4LnByb3RvdHlwZVttZXRob2RdID0gV3JpdGFibGUucHJvdG90eXBlW21ldGhvZF07XG4gIH1cbn1cbmZ1bmN0aW9uIER1cGxleChvcHRpb25zKSB7XG4gIGlmICghKHRoaXMgaW5zdGFuY2VvZiBEdXBsZXgpKSByZXR1cm4gbmV3IER1cGxleChvcHRpb25zKTtcbiAgUmVhZGFibGUuY2FsbCh0aGlzLCBvcHRpb25zKTtcbiAgV3JpdGFibGUuY2FsbCh0aGlzLCBvcHRpb25zKTtcbiAgdGhpcy5hbGxvd0hhbGZPcGVuID0gdHJ1ZTtcbiAgaWYgKG9wdGlvbnMpIHtcbiAgICBpZiAob3B0aW9ucy5yZWFkYWJsZSA9PT0gZmFsc2UpIHRoaXMucmVhZGFibGUgPSBmYWxzZTtcbiAgICBpZiAob3B0aW9ucy53cml0YWJsZSA9PT0gZmFsc2UpIHRoaXMud3JpdGFibGUgPSBmYWxzZTtcbiAgICBpZiAob3B0aW9ucy5hbGxvd0hhbGZPcGVuID09PSBmYWxzZSkge1xuICAgICAgdGhpcy5hbGxvd0hhbGZPcGVuID0gZmFsc2U7XG4gICAgICB0aGlzLm9uY2UoJ2VuZCcsIG9uZW5kKTtcbiAgICB9XG4gIH1cbn1cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShEdXBsZXgucHJvdG90eXBlLCAnd3JpdGFibGVIaWdoV2F0ZXJNYXJrJywge1xuICAvLyBtYWtpbmcgaXQgZXhwbGljaXQgdGhpcyBwcm9wZXJ0eSBpcyBub3QgZW51bWVyYWJsZVxuICAvLyBiZWNhdXNlIG90aGVyd2lzZSBzb21lIHByb3RvdHlwZSBtYW5pcHVsYXRpb24gaW5cbiAgLy8gdXNlcmxhbmQgd2lsbCBmYWlsXG4gIGVudW1lcmFibGU6IGZhbHNlLFxuICBnZXQ6IGZ1bmN0aW9uIGdldCgpIHtcbiAgICByZXR1cm4gdGhpcy5fd3JpdGFibGVTdGF0ZS5oaWdoV2F0ZXJNYXJrO1xuICB9XG59KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShEdXBsZXgucHJvdG90eXBlLCAnd3JpdGFibGVCdWZmZXInLCB7XG4gIC8vIG1ha2luZyBpdCBleHBsaWNpdCB0aGlzIHByb3BlcnR5IGlzIG5vdCBlbnVtZXJhYmxlXG4gIC8vIGJlY2F1c2Ugb3RoZXJ3aXNlIHNvbWUgcHJvdG90eXBlIG1hbmlwdWxhdGlvbiBpblxuICAvLyB1c2VybGFuZCB3aWxsIGZhaWxcbiAgZW51bWVyYWJsZTogZmFsc2UsXG4gIGdldDogZnVuY3Rpb24gZ2V0KCkge1xuICAgIHJldHVybiB0aGlzLl93cml0YWJsZVN0YXRlICYmIHRoaXMuX3dyaXRhYmxlU3RhdGUuZ2V0QnVmZmVyKCk7XG4gIH1cbn0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KER1cGxleC5wcm90b3R5cGUsICd3cml0YWJsZUxlbmd0aCcsIHtcbiAgLy8gbWFraW5nIGl0IGV4cGxpY2l0IHRoaXMgcHJvcGVydHkgaXMgbm90IGVudW1lcmFibGVcbiAgLy8gYmVjYXVzZSBvdGhlcndpc2Ugc29tZSBwcm90b3R5cGUgbWFuaXB1bGF0aW9uIGluXG4gIC8vIHVzZXJsYW5kIHdpbGwgZmFpbFxuICBlbnVtZXJhYmxlOiBmYWxzZSxcbiAgZ2V0OiBmdW5jdGlvbiBnZXQoKSB7XG4gICAgcmV0dXJuIHRoaXMuX3dyaXRhYmxlU3RhdGUubGVuZ3RoO1xuICB9XG59KTtcblxuLy8gdGhlIG5vLWhhbGYtb3BlbiBlbmZvcmNlclxuZnVuY3Rpb24gb25lbmQoKSB7XG4gIC8vIElmIHRoZSB3cml0YWJsZSBzaWRlIGVuZGVkLCB0aGVuIHdlJ3JlIG9rLlxuICBpZiAodGhpcy5fd3JpdGFibGVTdGF0ZS5lbmRlZCkgcmV0dXJuO1xuXG4gIC8vIG5vIG1vcmUgZGF0YSBjYW4gYmUgd3JpdHRlbi5cbiAgLy8gQnV0IGFsbG93IG1vcmUgd3JpdGVzIHRvIGhhcHBlbiBpbiB0aGlzIHRpY2suXG4gIHByb2Nlc3MubmV4dFRpY2sob25FbmROVCwgdGhpcyk7XG59XG5mdW5jdGlvbiBvbkVuZE5UKHNlbGYpIHtcbiAgc2VsZi5lbmQoKTtcbn1cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShEdXBsZXgucHJvdG90eXBlLCAnZGVzdHJveWVkJywge1xuICAvLyBtYWtpbmcgaXQgZXhwbGljaXQgdGhpcyBwcm9wZXJ0eSBpcyBub3QgZW51bWVyYWJsZVxuICAvLyBiZWNhdXNlIG90aGVyd2lzZSBzb21lIHByb3RvdHlwZSBtYW5pcHVsYXRpb24gaW5cbiAgLy8gdXNlcmxhbmQgd2lsbCBmYWlsXG4gIGVudW1lcmFibGU6IGZhbHNlLFxuICBnZXQ6IGZ1bmN0aW9uIGdldCgpIHtcbiAgICBpZiAodGhpcy5fcmVhZGFibGVTdGF0ZSA9PT0gdW5kZWZpbmVkIHx8IHRoaXMuX3dyaXRhYmxlU3RhdGUgPT09IHVuZGVmaW5lZCkge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICByZXR1cm4gdGhpcy5fcmVhZGFibGVTdGF0ZS5kZXN0cm95ZWQgJiYgdGhpcy5fd3JpdGFibGVTdGF0ZS5kZXN0cm95ZWQ7XG4gIH0sXG4gIHNldDogZnVuY3Rpb24gc2V0KHZhbHVlKSB7XG4gICAgLy8gd2UgaWdub3JlIHRoZSB2YWx1ZSBpZiB0aGUgc3RyZWFtXG4gICAgLy8gaGFzIG5vdCBiZWVuIGluaXRpYWxpemVkIHlldFxuICAgIGlmICh0aGlzLl9yZWFkYWJsZVN0YXRlID09PSB1bmRlZmluZWQgfHwgdGhpcy5fd3JpdGFibGVTdGF0ZSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgLy8gYmFja3dhcmQgY29tcGF0aWJpbGl0eSwgdGhlIHVzZXIgaXMgZXhwbGljaXRseVxuICAgIC8vIG1hbmFnaW5nIGRlc3Ryb3llZFxuICAgIHRoaXMuX3JlYWRhYmxlU3RhdGUuZGVzdHJveWVkID0gdmFsdWU7XG4gICAgdGhpcy5fd3JpdGFibGVTdGF0ZS5kZXN0cm95ZWQgPSB2YWx1ZTtcbiAgfVxufSk7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/ripemd160/node_modules/readable-stream/lib/_stream_duplex.js\n");

/***/ }),

/***/ "./node_modules/ripemd160/node_modules/readable-stream/lib/_stream_passthrough.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/ripemd160/node_modules/readable-stream/lib/_stream_passthrough.js ***!
  \****************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval("// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a passthrough stream.\n// basically just the most minimal sort of Transform stream.\n// Every written chunk gets output as-is.\n\n\n\nmodule.exports = PassThrough;\nvar Transform = __webpack_require__(/*! ./_stream_transform */ \"./node_modules/ripemd160/node_modules/readable-stream/lib/_stream_transform.js\");\n__webpack_require__(/*! inherits */ \"./node_modules/inherits/inherits_browser.js\")(PassThrough, Transform);\nfunction PassThrough(options) {\n  if (!(this instanceof PassThrough)) return new PassThrough(options);\n  Transform.call(this, options);\n}\nPassThrough.prototype._transform = function (chunk, encoding, cb) {\n  cb(null, chunk);\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcmlwZW1kMTYwL25vZGVfbW9kdWxlcy9yZWFkYWJsZS1zdHJlYW0vbGliL19zdHJlYW1fcGFzc3Rocm91Z2guanMuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRWE7O0FBRWI7QUFDQSxnQkFBZ0IsbUJBQU8sQ0FBQywyR0FBcUI7QUFDN0MsbUJBQU8sQ0FBQyw2REFBVTtBQUNsQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvcmlwZW1kMTYwL25vZGVfbW9kdWxlcy9yZWFkYWJsZS1zdHJlYW0vbGliL19zdHJlYW1fcGFzc3Rocm91Z2guanM/YzUwMSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgSm95ZW50LCBJbmMuIGFuZCBvdGhlciBOb2RlIGNvbnRyaWJ1dG9ycy5cbi8vXG4vLyBQZXJtaXNzaW9uIGlzIGhlcmVieSBncmFudGVkLCBmcmVlIG9mIGNoYXJnZSwgdG8gYW55IHBlcnNvbiBvYnRhaW5pbmcgYVxuLy8gY29weSBvZiB0aGlzIHNvZnR3YXJlIGFuZCBhc3NvY2lhdGVkIGRvY3VtZW50YXRpb24gZmlsZXMgKHRoZVxuLy8gXCJTb2Z0d2FyZVwiKSwgdG8gZGVhbCBpbiB0aGUgU29mdHdhcmUgd2l0aG91dCByZXN0cmljdGlvbiwgaW5jbHVkaW5nXG4vLyB3aXRob3V0IGxpbWl0YXRpb24gdGhlIHJpZ2h0cyB0byB1c2UsIGNvcHksIG1vZGlmeSwgbWVyZ2UsIHB1Ymxpc2gsXG4vLyBkaXN0cmlidXRlLCBzdWJsaWNlbnNlLCBhbmQvb3Igc2VsbCBjb3BpZXMgb2YgdGhlIFNvZnR3YXJlLCBhbmQgdG8gcGVybWl0XG4vLyBwZXJzb25zIHRvIHdob20gdGhlIFNvZnR3YXJlIGlzIGZ1cm5pc2hlZCB0byBkbyBzbywgc3ViamVjdCB0byB0aGVcbi8vIGZvbGxvd2luZyBjb25kaXRpb25zOlxuLy9cbi8vIFRoZSBhYm92ZSBjb3B5cmlnaHQgbm90aWNlIGFuZCB0aGlzIHBlcm1pc3Npb24gbm90aWNlIHNoYWxsIGJlIGluY2x1ZGVkXG4vLyBpbiBhbGwgY29waWVzIG9yIHN1YnN0YW50aWFsIHBvcnRpb25zIG9mIHRoZSBTb2Z0d2FyZS5cbi8vXG4vLyBUSEUgU09GVFdBUkUgSVMgUFJPVklERUQgXCJBUyBJU1wiLCBXSVRIT1VUIFdBUlJBTlRZIE9GIEFOWSBLSU5ELCBFWFBSRVNTXG4vLyBPUiBJTVBMSUVELCBJTkNMVURJTkcgQlVUIE5PVCBMSU1JVEVEIFRPIFRIRSBXQVJSQU5USUVTIE9GXG4vLyBNRVJDSEFOVEFCSUxJVFksIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFIEFORCBOT05JTkZSSU5HRU1FTlQuIElOXG4vLyBOTyBFVkVOVCBTSEFMTCBUSEUgQVVUSE9SUyBPUiBDT1BZUklHSFQgSE9MREVSUyBCRSBMSUFCTEUgRk9SIEFOWSBDTEFJTSxcbi8vIERBTUFHRVMgT1IgT1RIRVIgTElBQklMSVRZLCBXSEVUSEVSIElOIEFOIEFDVElPTiBPRiBDT05UUkFDVCwgVE9SVCBPUlxuLy8gT1RIRVJXSVNFLCBBUklTSU5HIEZST00sIE9VVCBPRiBPUiBJTiBDT05ORUNUSU9OIFdJVEggVEhFIFNPRlRXQVJFIE9SIFRIRVxuLy8gVVNFIE9SIE9USEVSIERFQUxJTkdTIElOIFRIRSBTT0ZUV0FSRS5cblxuLy8gYSBwYXNzdGhyb3VnaCBzdHJlYW0uXG4vLyBiYXNpY2FsbHkganVzdCB0aGUgbW9zdCBtaW5pbWFsIHNvcnQgb2YgVHJhbnNmb3JtIHN0cmVhbS5cbi8vIEV2ZXJ5IHdyaXR0ZW4gY2h1bmsgZ2V0cyBvdXRwdXQgYXMtaXMuXG5cbid1c2Ugc3RyaWN0JztcblxubW9kdWxlLmV4cG9ydHMgPSBQYXNzVGhyb3VnaDtcbnZhciBUcmFuc2Zvcm0gPSByZXF1aXJlKCcuL19zdHJlYW1fdHJhbnNmb3JtJyk7XG5yZXF1aXJlKCdpbmhlcml0cycpKFBhc3NUaHJvdWdoLCBUcmFuc2Zvcm0pO1xuZnVuY3Rpb24gUGFzc1Rocm91Z2gob3B0aW9ucykge1xuICBpZiAoISh0aGlzIGluc3RhbmNlb2YgUGFzc1Rocm91Z2gpKSByZXR1cm4gbmV3IFBhc3NUaHJvdWdoKG9wdGlvbnMpO1xuICBUcmFuc2Zvcm0uY2FsbCh0aGlzLCBvcHRpb25zKTtcbn1cblBhc3NUaHJvdWdoLnByb3RvdHlwZS5fdHJhbnNmb3JtID0gZnVuY3Rpb24gKGNodW5rLCBlbmNvZGluZywgY2IpIHtcbiAgY2IobnVsbCwgY2h1bmspO1xufTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/ripemd160/node_modules/readable-stream/lib/_stream_passthrough.js\n");

/***/ }),

/***/ "./node_modules/ripemd160/node_modules/readable-stream/lib/_stream_readable.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/ripemd160/node_modules/readable-stream/lib/_stream_readable.js ***!
  \*************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval("/* provided dependency */ var process = __webpack_require__(/*! process */ \"./node_modules/process/browser.js\");\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n\nmodule.exports = Readable;\n\n/*<replacement>*/\nvar Duplex;\n/*</replacement>*/\n\nReadable.ReadableState = ReadableState;\n\n/*<replacement>*/\nvar EE = (__webpack_require__(/*! events */ \"./node_modules/events/events.js\").EventEmitter);\nvar EElistenerCount = function EElistenerCount(emitter, type) {\n  return emitter.listeners(type).length;\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream = __webpack_require__(/*! ./internal/streams/stream */ \"./node_modules/ripemd160/node_modules/readable-stream/lib/internal/streams/stream-browser.js\");\n/*</replacement>*/\n\nvar Buffer = (__webpack_require__(/*! buffer */ \"./node_modules/buffer/index.js\").Buffer);\nvar OurUint8Array = (typeof __webpack_require__.g !== 'undefined' ? __webpack_require__.g : typeof window !== 'undefined' ? window : typeof self !== 'undefined' ? self : {}).Uint8Array || function () {};\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n\n/*<replacement>*/\nvar debugUtil = __webpack_require__(/*! util */ \"?a137\");\nvar debug;\nif (debugUtil && debugUtil.debuglog) {\n  debug = debugUtil.debuglog('stream');\n} else {\n  debug = function debug() {};\n}\n/*</replacement>*/\n\nvar BufferList = __webpack_require__(/*! ./internal/streams/buffer_list */ \"./node_modules/ripemd160/node_modules/readable-stream/lib/internal/streams/buffer_list.js\");\nvar destroyImpl = __webpack_require__(/*! ./internal/streams/destroy */ \"./node_modules/ripemd160/node_modules/readable-stream/lib/internal/streams/destroy.js\");\nvar _require = __webpack_require__(/*! ./internal/streams/state */ \"./node_modules/ripemd160/node_modules/readable-stream/lib/internal/streams/state.js\"),\n  getHighWaterMark = _require.getHighWaterMark;\nvar _require$codes = (__webpack_require__(/*! ../errors */ \"./node_modules/ripemd160/node_modules/readable-stream/errors-browser.js\").codes),\n  ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE,\n  ERR_STREAM_PUSH_AFTER_EOF = _require$codes.ERR_STREAM_PUSH_AFTER_EOF,\n  ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,\n  ERR_STREAM_UNSHIFT_AFTER_END_EVENT = _require$codes.ERR_STREAM_UNSHIFT_AFTER_END_EVENT;\n\n// Lazy loaded to improve the startup performance.\nvar StringDecoder;\nvar createReadableStreamAsyncIterator;\nvar from;\n__webpack_require__(/*! inherits */ \"./node_modules/inherits/inherits_browser.js\")(Readable, Stream);\nvar errorOrDestroy = destroyImpl.errorOrDestroy;\nvar kProxyEvents = ['error', 'close', 'destroy', 'pause', 'resume'];\nfunction prependListener(emitter, event, fn) {\n  // Sadly this is not cacheable as some libraries bundle their own\n  // event emitter implementation with them.\n  if (typeof emitter.prependListener === 'function') return emitter.prependListener(event, fn);\n\n  // This is a hack to make sure that our error handler is attached before any\n  // userland ones.  NEVER DO THIS. This is here only because this code needs\n  // to continue to work with older versions of Node.js that do not include\n  // the prependListener() method. The goal is to eventually remove this hack.\n  if (!emitter._events || !emitter._events[event]) emitter.on(event, fn);else if (Array.isArray(emitter._events[event])) emitter._events[event].unshift(fn);else emitter._events[event] = [fn, emitter._events[event]];\n}\nfunction ReadableState(options, stream, isDuplex) {\n  Duplex = Duplex || __webpack_require__(/*! ./_stream_duplex */ \"./node_modules/ripemd160/node_modules/readable-stream/lib/_stream_duplex.js\");\n  options = options || {};\n\n  // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream.\n  // These options can be provided separately as readableXXX and writableXXX.\n  if (typeof isDuplex !== 'boolean') isDuplex = stream instanceof Duplex;\n\n  // object stream flag. Used to make read(n) ignore n and to\n  // make all the buffer merging and length checks go away\n  this.objectMode = !!options.objectMode;\n  if (isDuplex) this.objectMode = this.objectMode || !!options.readableObjectMode;\n\n  // the point at which it stops calling _read() to fill the buffer\n  // Note: 0 is a valid value, means \"don't call _read preemptively ever\"\n  this.highWaterMark = getHighWaterMark(this, options, 'readableHighWaterMark', isDuplex);\n\n  // A linked list is used to store data chunks instead of an array because the\n  // linked list can remove elements from the beginning faster than\n  // array.shift()\n  this.buffer = new BufferList();\n  this.length = 0;\n  this.pipes = null;\n  this.pipesCount = 0;\n  this.flowing = null;\n  this.ended = false;\n  this.endEmitted = false;\n  this.reading = false;\n\n  // a flag to be able to tell if the event 'readable'/'data' is emitted\n  // immediately, or on a later tick.  We set this to true at first, because\n  // any actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first read call.\n  this.sync = true;\n\n  // whenever we return null, then we set a flag to say\n  // that we're awaiting a 'readable' event emission.\n  this.needReadable = false;\n  this.emittedReadable = false;\n  this.readableListening = false;\n  this.resumeScheduled = false;\n  this.paused = true;\n\n  // Should close be emitted on destroy. Defaults to true.\n  this.emitClose = options.emitClose !== false;\n\n  // Should .destroy() be called after 'end' (and potentially 'finish')\n  this.autoDestroy = !!options.autoDestroy;\n\n  // has it been destroyed\n  this.destroyed = false;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // the number of writers that are awaiting a drain event in .pipe()s\n  this.awaitDrain = 0;\n\n  // if true, a maybeReadMore has been scheduled\n  this.readingMore = false;\n  this.decoder = null;\n  this.encoding = null;\n  if (options.encoding) {\n    if (!StringDecoder) StringDecoder = (__webpack_require__(/*! string_decoder/ */ \"./node_modules/string_decoder/lib/string_decoder.js\").StringDecoder);\n    this.decoder = new StringDecoder(options.encoding);\n    this.encoding = options.encoding;\n  }\n}\nfunction Readable(options) {\n  Duplex = Duplex || __webpack_require__(/*! ./_stream_duplex */ \"./node_modules/ripemd160/node_modules/readable-stream/lib/_stream_duplex.js\");\n  if (!(this instanceof Readable)) return new Readable(options);\n\n  // Checking for a Stream.Duplex instance is faster here instead of inside\n  // the ReadableState constructor, at least with V8 6.5\n  var isDuplex = this instanceof Duplex;\n  this._readableState = new ReadableState(options, this, isDuplex);\n\n  // legacy\n  this.readable = true;\n  if (options) {\n    if (typeof options.read === 'function') this._read = options.read;\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n  }\n  Stream.call(this);\n}\nObject.defineProperty(Readable.prototype, 'destroyed', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    if (this._readableState === undefined) {\n      return false;\n    }\n    return this._readableState.destroyed;\n  },\n  set: function set(value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._readableState) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._readableState.destroyed = value;\n  }\n});\nReadable.prototype.destroy = destroyImpl.destroy;\nReadable.prototype._undestroy = destroyImpl.undestroy;\nReadable.prototype._destroy = function (err, cb) {\n  cb(err);\n};\n\n// Manually shove something into the read() buffer.\n// This returns true if the highWaterMark has not been hit yet,\n// similar to how Writable.write() returns true if you should\n// write() some more.\nReadable.prototype.push = function (chunk, encoding) {\n  var state = this._readableState;\n  var skipChunkCheck;\n  if (!state.objectMode) {\n    if (typeof chunk === 'string') {\n      encoding = encoding || state.defaultEncoding;\n      if (encoding !== state.encoding) {\n        chunk = Buffer.from(chunk, encoding);\n        encoding = '';\n      }\n      skipChunkCheck = true;\n    }\n  } else {\n    skipChunkCheck = true;\n  }\n  return readableAddChunk(this, chunk, encoding, false, skipChunkCheck);\n};\n\n// Unshift should *always* be something directly out of read()\nReadable.prototype.unshift = function (chunk) {\n  return readableAddChunk(this, chunk, null, true, false);\n};\nfunction readableAddChunk(stream, chunk, encoding, addToFront, skipChunkCheck) {\n  debug('readableAddChunk', chunk);\n  var state = stream._readableState;\n  if (chunk === null) {\n    state.reading = false;\n    onEofChunk(stream, state);\n  } else {\n    var er;\n    if (!skipChunkCheck) er = chunkInvalid(state, chunk);\n    if (er) {\n      errorOrDestroy(stream, er);\n    } else if (state.objectMode || chunk && chunk.length > 0) {\n      if (typeof chunk !== 'string' && !state.objectMode && Object.getPrototypeOf(chunk) !== Buffer.prototype) {\n        chunk = _uint8ArrayToBuffer(chunk);\n      }\n      if (addToFront) {\n        if (state.endEmitted) errorOrDestroy(stream, new ERR_STREAM_UNSHIFT_AFTER_END_EVENT());else addChunk(stream, state, chunk, true);\n      } else if (state.ended) {\n        errorOrDestroy(stream, new ERR_STREAM_PUSH_AFTER_EOF());\n      } else if (state.destroyed) {\n        return false;\n      } else {\n        state.reading = false;\n        if (state.decoder && !encoding) {\n          chunk = state.decoder.write(chunk);\n          if (state.objectMode || chunk.length !== 0) addChunk(stream, state, chunk, false);else maybeReadMore(stream, state);\n        } else {\n          addChunk(stream, state, chunk, false);\n        }\n      }\n    } else if (!addToFront) {\n      state.reading = false;\n      maybeReadMore(stream, state);\n    }\n  }\n\n  // We can push more data if we are below the highWaterMark.\n  // Also, if we have no data yet, we can stand some more bytes.\n  // This is to work around cases where hwm=0, such as the repl.\n  return !state.ended && (state.length < state.highWaterMark || state.length === 0);\n}\nfunction addChunk(stream, state, chunk, addToFront) {\n  if (state.flowing && state.length === 0 && !state.sync) {\n    state.awaitDrain = 0;\n    stream.emit('data', chunk);\n  } else {\n    // update the buffer info.\n    state.length += state.objectMode ? 1 : chunk.length;\n    if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);\n    if (state.needReadable) emitReadable(stream);\n  }\n  maybeReadMore(stream, state);\n}\nfunction chunkInvalid(state, chunk) {\n  var er;\n  if (!_isUint8Array(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new ERR_INVALID_ARG_TYPE('chunk', ['string', 'Buffer', 'Uint8Array'], chunk);\n  }\n  return er;\n}\nReadable.prototype.isPaused = function () {\n  return this._readableState.flowing === false;\n};\n\n// backwards compatibility.\nReadable.prototype.setEncoding = function (enc) {\n  if (!StringDecoder) StringDecoder = (__webpack_require__(/*! string_decoder/ */ \"./node_modules/string_decoder/lib/string_decoder.js\").StringDecoder);\n  var decoder = new StringDecoder(enc);\n  this._readableState.decoder = decoder;\n  // If setEncoding(null), decoder.encoding equals utf8\n  this._readableState.encoding = this._readableState.decoder.encoding;\n\n  // Iterate over current buffer to convert already stored Buffers:\n  var p = this._readableState.buffer.head;\n  var content = '';\n  while (p !== null) {\n    content += decoder.write(p.data);\n    p = p.next;\n  }\n  this._readableState.buffer.clear();\n  if (content !== '') this._readableState.buffer.push(content);\n  this._readableState.length = content.length;\n  return this;\n};\n\n// Don't raise the hwm > 1GB\nvar MAX_HWM = 0x40000000;\nfunction computeNewHighWaterMark(n) {\n  if (n >= MAX_HWM) {\n    // TODO(ronag): Throw ERR_VALUE_OUT_OF_RANGE.\n    n = MAX_HWM;\n  } else {\n    // Get the next highest power of 2 to prevent increasing hwm excessively in\n    // tiny amounts\n    n--;\n    n |= n >>> 1;\n    n |= n >>> 2;\n    n |= n >>> 4;\n    n |= n >>> 8;\n    n |= n >>> 16;\n    n++;\n  }\n  return n;\n}\n\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction howMuchToRead(n, state) {\n  if (n <= 0 || state.length === 0 && state.ended) return 0;\n  if (state.objectMode) return 1;\n  if (n !== n) {\n    // Only flow one buffer at a time\n    if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;\n  }\n  // If we're asking for more than the current hwm, then raise the hwm.\n  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);\n  if (n <= state.length) return n;\n  // Don't have enough\n  if (!state.ended) {\n    state.needReadable = true;\n    return 0;\n  }\n  return state.length;\n}\n\n// you can override either this method, or the async _read(n) below.\nReadable.prototype.read = function (n) {\n  debug('read', n);\n  n = parseInt(n, 10);\n  var state = this._readableState;\n  var nOrig = n;\n  if (n !== 0) state.emittedReadable = false;\n\n  // if we're doing read(0) to trigger a readable event, but we\n  // already have a bunch of data in the buffer, then just trigger\n  // the 'readable' event and move on.\n  if (n === 0 && state.needReadable && ((state.highWaterMark !== 0 ? state.length >= state.highWaterMark : state.length > 0) || state.ended)) {\n    debug('read: emitReadable', state.length, state.ended);\n    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);\n    return null;\n  }\n  n = howMuchToRead(n, state);\n\n  // if we've ended, and we're now clear, then finish it up.\n  if (n === 0 && state.ended) {\n    if (state.length === 0) endReadable(this);\n    return null;\n  }\n\n  // All the actual chunk generation logic needs to be\n  // *below* the call to _read.  The reason is that in certain\n  // synthetic stream cases, such as passthrough streams, _read\n  // may be a completely synchronous operation which may change\n  // the state of the read buffer, providing enough data when\n  // before there was *not* enough.\n  //\n  // So, the steps are:\n  // 1. Figure out what the state of things will be after we do\n  // a read from the buffer.\n  //\n  // 2. If that resulting state will trigger a _read, then call _read.\n  // Note that this may be asynchronous, or synchronous.  Yes, it is\n  // deeply ugly to write APIs this way, but that still doesn't mean\n  // that the Readable class should behave improperly, as streams are\n  // designed to be sync/async agnostic.\n  // Take note if the _read call is sync or async (ie, if the read call\n  // has returned yet), so that we know whether or not it's safe to emit\n  // 'readable' etc.\n  //\n  // 3. Actually pull the requested chunks out of the buffer and return.\n\n  // if we need a readable event, then we need to do some reading.\n  var doRead = state.needReadable;\n  debug('need readable', doRead);\n\n  // if we currently have less than the highWaterMark, then also read some\n  if (state.length === 0 || state.length - n < state.highWaterMark) {\n    doRead = true;\n    debug('length less than watermark', doRead);\n  }\n\n  // however, if we've ended, then there's no point, and if we're already\n  // reading, then it's unnecessary.\n  if (state.ended || state.reading) {\n    doRead = false;\n    debug('reading or ended', doRead);\n  } else if (doRead) {\n    debug('do read');\n    state.reading = true;\n    state.sync = true;\n    // if the length is currently zero, then we *need* a readable event.\n    if (state.length === 0) state.needReadable = true;\n    // call internal read method\n    this._read(state.highWaterMark);\n    state.sync = false;\n    // If _read pushed data synchronously, then `reading` will be false,\n    // and we need to re-evaluate how much data we can return to the user.\n    if (!state.reading) n = howMuchToRead(nOrig, state);\n  }\n  var ret;\n  if (n > 0) ret = fromList(n, state);else ret = null;\n  if (ret === null) {\n    state.needReadable = state.length <= state.highWaterMark;\n    n = 0;\n  } else {\n    state.length -= n;\n    state.awaitDrain = 0;\n  }\n  if (state.length === 0) {\n    // If we have nothing in the buffer, then we want to know\n    // as soon as we *do* get something into the buffer.\n    if (!state.ended) state.needReadable = true;\n\n    // If we tried to read() past the EOF, then emit end on the next tick.\n    if (nOrig !== n && state.ended) endReadable(this);\n  }\n  if (ret !== null) this.emit('data', ret);\n  return ret;\n};\nfunction onEofChunk(stream, state) {\n  debug('onEofChunk');\n  if (state.ended) return;\n  if (state.decoder) {\n    var chunk = state.decoder.end();\n    if (chunk && chunk.length) {\n      state.buffer.push(chunk);\n      state.length += state.objectMode ? 1 : chunk.length;\n    }\n  }\n  state.ended = true;\n  if (state.sync) {\n    // if we are sync, wait until next tick to emit the data.\n    // Otherwise we risk emitting data in the flow()\n    // the readable code triggers during a read() call\n    emitReadable(stream);\n  } else {\n    // emit 'readable' now to make sure it gets picked up.\n    state.needReadable = false;\n    if (!state.emittedReadable) {\n      state.emittedReadable = true;\n      emitReadable_(stream);\n    }\n  }\n}\n\n// Don't emit readable right away in sync mode, because this can trigger\n// another read() call => stack overflow.  This way, it might trigger\n// a nextTick recursion warning, but that's not so bad.\nfunction emitReadable(stream) {\n  var state = stream._readableState;\n  debug('emitReadable', state.needReadable, state.emittedReadable);\n  state.needReadable = false;\n  if (!state.emittedReadable) {\n    debug('emitReadable', state.flowing);\n    state.emittedReadable = true;\n    process.nextTick(emitReadable_, stream);\n  }\n}\nfunction emitReadable_(stream) {\n  var state = stream._readableState;\n  debug('emitReadable_', state.destroyed, state.length, state.ended);\n  if (!state.destroyed && (state.length || state.ended)) {\n    stream.emit('readable');\n    state.emittedReadable = false;\n  }\n\n  // The stream needs another readable event if\n  // 1. It is not flowing, as the flow mechanism will take\n  //    care of it.\n  // 2. It is not ended.\n  // 3. It is below the highWaterMark, so we can schedule\n  //    another readable later.\n  state.needReadable = !state.flowing && !state.ended && state.length <= state.highWaterMark;\n  flow(stream);\n}\n\n// at this point, the user has presumably seen the 'readable' event,\n// and called read() to consume some data.  that may have triggered\n// in turn another _read(n) call, in which case reading = true if\n// it's in progress.\n// However, if we're not ended, or reading, and the length < hwm,\n// then go ahead and try to read some more preemptively.\nfunction maybeReadMore(stream, state) {\n  if (!state.readingMore) {\n    state.readingMore = true;\n    process.nextTick(maybeReadMore_, stream, state);\n  }\n}\nfunction maybeReadMore_(stream, state) {\n  // Attempt to read more data if we should.\n  //\n  // The conditions for reading more data are (one of):\n  // - Not enough data buffered (state.length < state.highWaterMark). The loop\n  //   is responsible for filling the buffer with enough data if such data\n  //   is available. If highWaterMark is 0 and we are not in the flowing mode\n  //   we should _not_ attempt to buffer any extra data. We'll get more data\n  //   when the stream consumer calls read() instead.\n  // - No data in the buffer, and the stream is in flowing mode. In this mode\n  //   the loop below is responsible for ensuring read() is called. Failing to\n  //   call read here would abort the flow and there's no other mechanism for\n  //   continuing the flow if the stream consumer has just subscribed to the\n  //   'data' event.\n  //\n  // In addition to the above conditions to keep reading data, the following\n  // conditions prevent the data from being read:\n  // - The stream has ended (state.ended).\n  // - There is already a pending 'read' operation (state.reading). This is a\n  //   case where the the stream has called the implementation defined _read()\n  //   method, but they are processing the call asynchronously and have _not_\n  //   called push() with new data. In this case we skip performing more\n  //   read()s. The execution ends in this method again after the _read() ends\n  //   up calling push() with more data.\n  while (!state.reading && !state.ended && (state.length < state.highWaterMark || state.flowing && state.length === 0)) {\n    var len = state.length;\n    debug('maybeReadMore read 0');\n    stream.read(0);\n    if (len === state.length)\n      // didn't get any data, stop spinning.\n      break;\n  }\n  state.readingMore = false;\n}\n\n// abstract method.  to be overridden in specific implementation classes.\n// call cb(er, data) where data is <= n in length.\n// for virtual (non-string, non-buffer) streams, \"length\" is somewhat\n// arbitrary, and perhaps not very meaningful.\nReadable.prototype._read = function (n) {\n  errorOrDestroy(this, new ERR_METHOD_NOT_IMPLEMENTED('_read()'));\n};\nReadable.prototype.pipe = function (dest, pipeOpts) {\n  var src = this;\n  var state = this._readableState;\n  switch (state.pipesCount) {\n    case 0:\n      state.pipes = dest;\n      break;\n    case 1:\n      state.pipes = [state.pipes, dest];\n      break;\n    default:\n      state.pipes.push(dest);\n      break;\n  }\n  state.pipesCount += 1;\n  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);\n  var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;\n  var endFn = doEnd ? onend : unpipe;\n  if (state.endEmitted) process.nextTick(endFn);else src.once('end', endFn);\n  dest.on('unpipe', onunpipe);\n  function onunpipe(readable, unpipeInfo) {\n    debug('onunpipe');\n    if (readable === src) {\n      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {\n        unpipeInfo.hasUnpiped = true;\n        cleanup();\n      }\n    }\n  }\n  function onend() {\n    debug('onend');\n    dest.end();\n  }\n\n  // when the dest drains, it reduces the awaitDrain counter\n  // on the source.  This would be more elegant with a .once()\n  // handler in flow(), but adding and removing repeatedly is\n  // too slow.\n  var ondrain = pipeOnDrain(src);\n  dest.on('drain', ondrain);\n  var cleanedUp = false;\n  function cleanup() {\n    debug('cleanup');\n    // cleanup event handlers once the pipe is broken\n    dest.removeListener('close', onclose);\n    dest.removeListener('finish', onfinish);\n    dest.removeListener('drain', ondrain);\n    dest.removeListener('error', onerror);\n    dest.removeListener('unpipe', onunpipe);\n    src.removeListener('end', onend);\n    src.removeListener('end', unpipe);\n    src.removeListener('data', ondata);\n    cleanedUp = true;\n\n    // if the reader is waiting for a drain event from this\n    // specific writer, then it would cause it to never start\n    // flowing again.\n    // So, if this is awaiting a drain, then we just call it now.\n    // If we don't know, then assume that we are waiting for one.\n    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();\n  }\n  src.on('data', ondata);\n  function ondata(chunk) {\n    debug('ondata');\n    var ret = dest.write(chunk);\n    debug('dest.write', ret);\n    if (ret === false) {\n      // If the user unpiped during `dest.write()`, it is possible\n      // to get stuck in a permanently paused state if that write\n      // also returned false.\n      // => Check whether `dest` is still a piping destination.\n      if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {\n        debug('false write response, pause', state.awaitDrain);\n        state.awaitDrain++;\n      }\n      src.pause();\n    }\n  }\n\n  // if the dest has an error, then stop piping into it.\n  // however, don't suppress the throwing behavior for this.\n  function onerror(er) {\n    debug('onerror', er);\n    unpipe();\n    dest.removeListener('error', onerror);\n    if (EElistenerCount(dest, 'error') === 0) errorOrDestroy(dest, er);\n  }\n\n  // Make sure our error handler is attached before userland ones.\n  prependListener(dest, 'error', onerror);\n\n  // Both close and finish should trigger unpipe, but only once.\n  function onclose() {\n    dest.removeListener('finish', onfinish);\n    unpipe();\n  }\n  dest.once('close', onclose);\n  function onfinish() {\n    debug('onfinish');\n    dest.removeListener('close', onclose);\n    unpipe();\n  }\n  dest.once('finish', onfinish);\n  function unpipe() {\n    debug('unpipe');\n    src.unpipe(dest);\n  }\n\n  // tell the dest that it's being piped to\n  dest.emit('pipe', src);\n\n  // start the flow if it hasn't been started already.\n  if (!state.flowing) {\n    debug('pipe resume');\n    src.resume();\n  }\n  return dest;\n};\nfunction pipeOnDrain(src) {\n  return function pipeOnDrainFunctionResult() {\n    var state = src._readableState;\n    debug('pipeOnDrain', state.awaitDrain);\n    if (state.awaitDrain) state.awaitDrain--;\n    if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {\n      state.flowing = true;\n      flow(src);\n    }\n  };\n}\nReadable.prototype.unpipe = function (dest) {\n  var state = this._readableState;\n  var unpipeInfo = {\n    hasUnpiped: false\n  };\n\n  // if we're not piping anywhere, then do nothing.\n  if (state.pipesCount === 0) return this;\n\n  // just one destination.  most common case.\n  if (state.pipesCount === 1) {\n    // passed in one, but it's not the right one.\n    if (dest && dest !== state.pipes) return this;\n    if (!dest) dest = state.pipes;\n\n    // got a match.\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n    if (dest) dest.emit('unpipe', this, unpipeInfo);\n    return this;\n  }\n\n  // slow case. multiple pipe destinations.\n\n  if (!dest) {\n    // remove all.\n    var dests = state.pipes;\n    var len = state.pipesCount;\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n    for (var i = 0; i < len; i++) dests[i].emit('unpipe', this, {\n      hasUnpiped: false\n    });\n    return this;\n  }\n\n  // try to find the right one.\n  var index = indexOf(state.pipes, dest);\n  if (index === -1) return this;\n  state.pipes.splice(index, 1);\n  state.pipesCount -= 1;\n  if (state.pipesCount === 1) state.pipes = state.pipes[0];\n  dest.emit('unpipe', this, unpipeInfo);\n  return this;\n};\n\n// set up data events if they are asked for\n// Ensure readable listeners eventually get something\nReadable.prototype.on = function (ev, fn) {\n  var res = Stream.prototype.on.call(this, ev, fn);\n  var state = this._readableState;\n  if (ev === 'data') {\n    // update readableListening so that resume() may be a no-op\n    // a few lines down. This is needed to support once('readable').\n    state.readableListening = this.listenerCount('readable') > 0;\n\n    // Try start flowing on next tick if stream isn't explicitly paused\n    if (state.flowing !== false) this.resume();\n  } else if (ev === 'readable') {\n    if (!state.endEmitted && !state.readableListening) {\n      state.readableListening = state.needReadable = true;\n      state.flowing = false;\n      state.emittedReadable = false;\n      debug('on readable', state.length, state.reading);\n      if (state.length) {\n        emitReadable(this);\n      } else if (!state.reading) {\n        process.nextTick(nReadingNextTick, this);\n      }\n    }\n  }\n  return res;\n};\nReadable.prototype.addListener = Readable.prototype.on;\nReadable.prototype.removeListener = function (ev, fn) {\n  var res = Stream.prototype.removeListener.call(this, ev, fn);\n  if (ev === 'readable') {\n    // We need to check if there is someone still listening to\n    // readable and reset the state. However this needs to happen\n    // after readable has been emitted but before I/O (nextTick) to\n    // support once('readable', fn) cycles. This means that calling\n    // resume within the same tick will have no\n    // effect.\n    process.nextTick(updateReadableListening, this);\n  }\n  return res;\n};\nReadable.prototype.removeAllListeners = function (ev) {\n  var res = Stream.prototype.removeAllListeners.apply(this, arguments);\n  if (ev === 'readable' || ev === undefined) {\n    // We need to check if there is someone still listening to\n    // readable and reset the state. However this needs to happen\n    // after readable has been emitted but before I/O (nextTick) to\n    // support once('readable', fn) cycles. This means that calling\n    // resume within the same tick will have no\n    // effect.\n    process.nextTick(updateReadableListening, this);\n  }\n  return res;\n};\nfunction updateReadableListening(self) {\n  var state = self._readableState;\n  state.readableListening = self.listenerCount('readable') > 0;\n  if (state.resumeScheduled && !state.paused) {\n    // flowing needs to be set to true now, otherwise\n    // the upcoming resume will not flow.\n    state.flowing = true;\n\n    // crude way to check if we should resume\n  } else if (self.listenerCount('data') > 0) {\n    self.resume();\n  }\n}\nfunction nReadingNextTick(self) {\n  debug('readable nexttick read 0');\n  self.read(0);\n}\n\n// pause() and resume() are remnants of the legacy readable stream API\n// If the user uses them, then switch into old mode.\nReadable.prototype.resume = function () {\n  var state = this._readableState;\n  if (!state.flowing) {\n    debug('resume');\n    // we flow only if there is no one listening\n    // for readable, but we still have to call\n    // resume()\n    state.flowing = !state.readableListening;\n    resume(this, state);\n  }\n  state.paused = false;\n  return this;\n};\nfunction resume(stream, state) {\n  if (!state.resumeScheduled) {\n    state.resumeScheduled = true;\n    process.nextTick(resume_, stream, state);\n  }\n}\nfunction resume_(stream, state) {\n  debug('resume', state.reading);\n  if (!state.reading) {\n    stream.read(0);\n  }\n  state.resumeScheduled = false;\n  stream.emit('resume');\n  flow(stream);\n  if (state.flowing && !state.reading) stream.read(0);\n}\nReadable.prototype.pause = function () {\n  debug('call pause flowing=%j', this._readableState.flowing);\n  if (this._readableState.flowing !== false) {\n    debug('pause');\n    this._readableState.flowing = false;\n    this.emit('pause');\n  }\n  this._readableState.paused = true;\n  return this;\n};\nfunction flow(stream) {\n  var state = stream._readableState;\n  debug('flow', state.flowing);\n  while (state.flowing && stream.read() !== null);\n}\n\n// wrap an old-style stream as the async data source.\n// This is *not* part of the readable stream interface.\n// It is an ugly unfortunate mess of history.\nReadable.prototype.wrap = function (stream) {\n  var _this = this;\n  var state = this._readableState;\n  var paused = false;\n  stream.on('end', function () {\n    debug('wrapped end');\n    if (state.decoder && !state.ended) {\n      var chunk = state.decoder.end();\n      if (chunk && chunk.length) _this.push(chunk);\n    }\n    _this.push(null);\n  });\n  stream.on('data', function (chunk) {\n    debug('wrapped data');\n    if (state.decoder) chunk = state.decoder.write(chunk);\n\n    // don't skip over falsy values in objectMode\n    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;\n    var ret = _this.push(chunk);\n    if (!ret) {\n      paused = true;\n      stream.pause();\n    }\n  });\n\n  // proxy all the other methods.\n  // important when wrapping filters and duplexes.\n  for (var i in stream) {\n    if (this[i] === undefined && typeof stream[i] === 'function') {\n      this[i] = function methodWrap(method) {\n        return function methodWrapReturnFunction() {\n          return stream[method].apply(stream, arguments);\n        };\n      }(i);\n    }\n  }\n\n  // proxy certain important events.\n  for (var n = 0; n < kProxyEvents.length; n++) {\n    stream.on(kProxyEvents[n], this.emit.bind(this, kProxyEvents[n]));\n  }\n\n  // when we try to consume some more bytes, simply unpause the\n  // underlying stream.\n  this._read = function (n) {\n    debug('wrapped _read', n);\n    if (paused) {\n      paused = false;\n      stream.resume();\n    }\n  };\n  return this;\n};\nif (typeof Symbol === 'function') {\n  Readable.prototype[Symbol.asyncIterator] = function () {\n    if (createReadableStreamAsyncIterator === undefined) {\n      createReadableStreamAsyncIterator = __webpack_require__(/*! ./internal/streams/async_iterator */ \"./node_modules/ripemd160/node_modules/readable-stream/lib/internal/streams/async_iterator.js\");\n    }\n    return createReadableStreamAsyncIterator(this);\n  };\n}\nObject.defineProperty(Readable.prototype, 'readableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState.highWaterMark;\n  }\n});\nObject.defineProperty(Readable.prototype, 'readableBuffer', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState && this._readableState.buffer;\n  }\n});\nObject.defineProperty(Readable.prototype, 'readableFlowing', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState.flowing;\n  },\n  set: function set(state) {\n    if (this._readableState) {\n      this._readableState.flowing = state;\n    }\n  }\n});\n\n// exposed for testing purposes only.\nReadable._fromList = fromList;\nObject.defineProperty(Readable.prototype, 'readableLength', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState.length;\n  }\n});\n\n// Pluck off n bytes from an array of buffers.\n// Length is the combined lengths of all the buffers in the list.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction fromList(n, state) {\n  // nothing buffered\n  if (state.length === 0) return null;\n  var ret;\n  if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {\n    // read it all, truncate the list\n    if (state.decoder) ret = state.buffer.join('');else if (state.buffer.length === 1) ret = state.buffer.first();else ret = state.buffer.concat(state.length);\n    state.buffer.clear();\n  } else {\n    // read part of list\n    ret = state.buffer.consume(n, state.decoder);\n  }\n  return ret;\n}\nfunction endReadable(stream) {\n  var state = stream._readableState;\n  debug('endReadable', state.endEmitted);\n  if (!state.endEmitted) {\n    state.ended = true;\n    process.nextTick(endReadableNT, state, stream);\n  }\n}\nfunction endReadableNT(state, stream) {\n  debug('endReadableNT', state.endEmitted, state.length);\n\n  // Check that we didn't get one last unshift.\n  if (!state.endEmitted && state.length === 0) {\n    state.endEmitted = true;\n    stream.readable = false;\n    stream.emit('end');\n    if (state.autoDestroy) {\n      // In case of duplex streams we need a way to detect\n      // if the writable side is ready for autoDestroy as well\n      var wState = stream._writableState;\n      if (!wState || wState.autoDestroy && wState.finished) {\n        stream.destroy();\n      }\n    }\n  }\n}\nif (typeof Symbol === 'function') {\n  Readable.from = function (iterable, opts) {\n    if (from === undefined) {\n      from = __webpack_require__(/*! ./internal/streams/from */ \"./node_modules/ripemd160/node_modules/readable-stream/lib/internal/streams/from-browser.js\");\n    }\n    return from(Readable, iterable, opts);\n  };\n}\nfunction indexOf(xs, x) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    if (xs[i] === x) return i;\n  }\n  return -1;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/ripemd160/node_modules/readable-stream/lib/_stream_readable.js\n");

/***/ }),

/***/ "./node_modules/ripemd160/node_modules/readable-stream/lib/_stream_transform.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/ripemd160/node_modules/readable-stream/lib/_stream_transform.js ***!
  \**************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval("// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a transform stream is a readable/writable stream where you do\n// something with the data.  Sometimes it's called a \"filter\",\n// but that's not a great name for it, since that implies a thing where\n// some bits pass through, and others are simply ignored.  (That would\n// be a valid example of a transform, of course.)\n//\n// While the output is causally related to the input, it's not a\n// necessarily symmetric or synchronous transformation.  For example,\n// a zlib stream might take multiple plain-text writes(), and then\n// emit a single compressed chunk some time in the future.\n//\n// Here's how this works:\n//\n// The Transform stream has all the aspects of the readable and writable\n// stream classes.  When you write(chunk), that calls _write(chunk,cb)\n// internally, and returns false if there's a lot of pending writes\n// buffered up.  When you call read(), that calls _read(n) until\n// there's enough pending readable data buffered up.\n//\n// In a transform stream, the written data is placed in a buffer.  When\n// _read(n) is called, it transforms the queued up data, calling the\n// buffered _write cb's as it consumes chunks.  If consuming a single\n// written chunk would result in multiple output chunks, then the first\n// outputted bit calls the readcb, and subsequent chunks just go into\n// the read buffer, and will cause it to emit 'readable' if necessary.\n//\n// This way, back-pressure is actually determined by the reading side,\n// since _read has to be called to start processing a new chunk.  However,\n// a pathological inflate type of transform can cause excessive buffering\n// here.  For example, imagine a stream where every byte of input is\n// interpreted as an integer from 0-255, and then results in that many\n// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in\n// 1kb of data being output.  In this case, you could write a very small\n// amount of input, and end up with a very large amount of output.  In\n// such a pathological inflating mechanism, there'd be no way to tell\n// the system to stop doing the transform.  A single 4MB write could\n// cause the system to run out of memory.\n//\n// However, even in such a pathological case, only a single written chunk\n// would be consumed, and then the rest would wait (un-transformed) until\n// the results of the previous transformed chunk were consumed.\n\n\n\nmodule.exports = Transform;\nvar _require$codes = (__webpack_require__(/*! ../errors */ \"./node_modules/ripemd160/node_modules/readable-stream/errors-browser.js\").codes),\n  ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,\n  ERR_MULTIPLE_CALLBACK = _require$codes.ERR_MULTIPLE_CALLBACK,\n  ERR_TRANSFORM_ALREADY_TRANSFORMING = _require$codes.ERR_TRANSFORM_ALREADY_TRANSFORMING,\n  ERR_TRANSFORM_WITH_LENGTH_0 = _require$codes.ERR_TRANSFORM_WITH_LENGTH_0;\nvar Duplex = __webpack_require__(/*! ./_stream_duplex */ \"./node_modules/ripemd160/node_modules/readable-stream/lib/_stream_duplex.js\");\n__webpack_require__(/*! inherits */ \"./node_modules/inherits/inherits_browser.js\")(Transform, Duplex);\nfunction afterTransform(er, data) {\n  var ts = this._transformState;\n  ts.transforming = false;\n  var cb = ts.writecb;\n  if (cb === null) {\n    return this.emit('error', new ERR_MULTIPLE_CALLBACK());\n  }\n  ts.writechunk = null;\n  ts.writecb = null;\n  if (data != null)\n    // single equals check for both `null` and `undefined`\n    this.push(data);\n  cb(er);\n  var rs = this._readableState;\n  rs.reading = false;\n  if (rs.needReadable || rs.length < rs.highWaterMark) {\n    this._read(rs.highWaterMark);\n  }\n}\nfunction Transform(options) {\n  if (!(this instanceof Transform)) return new Transform(options);\n  Duplex.call(this, options);\n  this._transformState = {\n    afterTransform: afterTransform.bind(this),\n    needTransform: false,\n    transforming: false,\n    writecb: null,\n    writechunk: null,\n    writeencoding: null\n  };\n\n  // start out asking for a readable event once data is transformed.\n  this._readableState.needReadable = true;\n\n  // we have implemented the _read method, and done the other things\n  // that Readable wants before the first _read call, so unset the\n  // sync guard flag.\n  this._readableState.sync = false;\n  if (options) {\n    if (typeof options.transform === 'function') this._transform = options.transform;\n    if (typeof options.flush === 'function') this._flush = options.flush;\n  }\n\n  // When the writable side finishes, then flush out anything remaining.\n  this.on('prefinish', prefinish);\n}\nfunction prefinish() {\n  var _this = this;\n  if (typeof this._flush === 'function' && !this._readableState.destroyed) {\n    this._flush(function (er, data) {\n      done(_this, er, data);\n    });\n  } else {\n    done(this, null, null);\n  }\n}\nTransform.prototype.push = function (chunk, encoding) {\n  this._transformState.needTransform = false;\n  return Duplex.prototype.push.call(this, chunk, encoding);\n};\n\n// This is the part where you do stuff!\n// override this function in implementation classes.\n// 'chunk' is an input chunk.\n//\n// Call `push(newChunk)` to pass along transformed output\n// to the readable side.  You may call 'push' zero or more times.\n//\n// Call `cb(err)` when you are done with this chunk.  If you pass\n// an error, then that'll put the hurt on the whole operation.  If you\n// never call cb(), then you'll never get another chunk.\nTransform.prototype._transform = function (chunk, encoding, cb) {\n  cb(new ERR_METHOD_NOT_IMPLEMENTED('_transform()'));\n};\nTransform.prototype._write = function (chunk, encoding, cb) {\n  var ts = this._transformState;\n  ts.writecb = cb;\n  ts.writechunk = chunk;\n  ts.writeencoding = encoding;\n  if (!ts.transforming) {\n    var rs = this._readableState;\n    if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);\n  }\n};\n\n// Doesn't matter what the args are here.\n// _transform does all the work.\n// That we got here means that the readable side wants more data.\nTransform.prototype._read = function (n) {\n  var ts = this._transformState;\n  if (ts.writechunk !== null && !ts.transforming) {\n    ts.transforming = true;\n    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);\n  } else {\n    // mark that we need a transform, so that any data that comes in\n    // will get processed, now that we've asked for it.\n    ts.needTransform = true;\n  }\n};\nTransform.prototype._destroy = function (err, cb) {\n  Duplex.prototype._destroy.call(this, err, function (err2) {\n    cb(err2);\n  });\n};\nfunction done(stream, er, data) {\n  if (er) return stream.emit('error', er);\n  if (data != null)\n    // single equals check for both `null` and `undefined`\n    stream.push(data);\n\n  // TODO(BridgeAR): Write a test for these two error cases\n  // if there's nothing in the write buffer, then that means\n  // that nothing more will ever be provided\n  if (stream._writableState.length) throw new ERR_TRANSFORM_WITH_LENGTH_0();\n  if (stream._transformState.transforming) throw new ERR_TRANSFORM_ALREADY_TRANSFORMING();\n  return stream.push(null);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/ripemd160/node_modules/readable-stream/lib/_stream_transform.js\n");

/***/ }),

/***/ "./node_modules/ripemd160/node_modules/readable-stream/lib/_stream_writable.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/ripemd160/node_modules/readable-stream/lib/_stream_writable.js ***!
  \*************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval("/* provided dependency */ var process = __webpack_require__(/*! process */ \"./node_modules/process/browser.js\");\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// A bit simpler than readable streams.\n// Implement an async ._write(chunk, encoding, cb), and it'll handle all\n// the drain event emission and buffering.\n\n\n\nmodule.exports = Writable;\n\n/* <replacement> */\nfunction WriteReq(chunk, encoding, cb) {\n  this.chunk = chunk;\n  this.encoding = encoding;\n  this.callback = cb;\n  this.next = null;\n}\n\n// It seems a linked list but it is not\n// there will be only 2 of these for each stream\nfunction CorkedRequest(state) {\n  var _this = this;\n  this.next = null;\n  this.entry = null;\n  this.finish = function () {\n    onCorkedFinish(_this, state);\n  };\n}\n/* </replacement> */\n\n/*<replacement>*/\nvar Duplex;\n/*</replacement>*/\n\nWritable.WritableState = WritableState;\n\n/*<replacement>*/\nvar internalUtil = {\n  deprecate: __webpack_require__(/*! util-deprecate */ \"./node_modules/util-deprecate/browser.js\")\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream = __webpack_require__(/*! ./internal/streams/stream */ \"./node_modules/ripemd160/node_modules/readable-stream/lib/internal/streams/stream-browser.js\");\n/*</replacement>*/\n\nvar Buffer = (__webpack_require__(/*! buffer */ \"./node_modules/buffer/index.js\").Buffer);\nvar OurUint8Array = (typeof __webpack_require__.g !== 'undefined' ? __webpack_require__.g : typeof window !== 'undefined' ? window : typeof self !== 'undefined' ? self : {}).Uint8Array || function () {};\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\nvar destroyImpl = __webpack_require__(/*! ./internal/streams/destroy */ \"./node_modules/ripemd160/node_modules/readable-stream/lib/internal/streams/destroy.js\");\nvar _require = __webpack_require__(/*! ./internal/streams/state */ \"./node_modules/ripemd160/node_modules/readable-stream/lib/internal/streams/state.js\"),\n  getHighWaterMark = _require.getHighWaterMark;\nvar _require$codes = (__webpack_require__(/*! ../errors */ \"./node_modules/ripemd160/node_modules/readable-stream/errors-browser.js\").codes),\n  ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE,\n  ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,\n  ERR_MULTIPLE_CALLBACK = _require$codes.ERR_MULTIPLE_CALLBACK,\n  ERR_STREAM_CANNOT_PIPE = _require$codes.ERR_STREAM_CANNOT_PIPE,\n  ERR_STREAM_DESTROYED = _require$codes.ERR_STREAM_DESTROYED,\n  ERR_STREAM_NULL_VALUES = _require$codes.ERR_STREAM_NULL_VALUES,\n  ERR_STREAM_WRITE_AFTER_END = _require$codes.ERR_STREAM_WRITE_AFTER_END,\n  ERR_UNKNOWN_ENCODING = _require$codes.ERR_UNKNOWN_ENCODING;\nvar errorOrDestroy = destroyImpl.errorOrDestroy;\n__webpack_require__(/*! inherits */ \"./node_modules/inherits/inherits_browser.js\")(Writable, Stream);\nfunction nop() {}\nfunction WritableState(options, stream, isDuplex) {\n  Duplex = Duplex || __webpack_require__(/*! ./_stream_duplex */ \"./node_modules/ripemd160/node_modules/readable-stream/lib/_stream_duplex.js\");\n  options = options || {};\n\n  // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream,\n  // e.g. options.readableObjectMode vs. options.writableObjectMode, etc.\n  if (typeof isDuplex !== 'boolean') isDuplex = stream instanceof Duplex;\n\n  // object stream flag to indicate whether or not this stream\n  // contains buffers or objects.\n  this.objectMode = !!options.objectMode;\n  if (isDuplex) this.objectMode = this.objectMode || !!options.writableObjectMode;\n\n  // the point at which write() starts returning false\n  // Note: 0 is a valid value, means that we always return false if\n  // the entire buffer is not flushed immediately on write()\n  this.highWaterMark = getHighWaterMark(this, options, 'writableHighWaterMark', isDuplex);\n\n  // if _final has been called\n  this.finalCalled = false;\n\n  // drain event flag.\n  this.needDrain = false;\n  // at the start of calling end()\n  this.ending = false;\n  // when end() has been called, and returned\n  this.ended = false;\n  // when 'finish' is emitted\n  this.finished = false;\n\n  // has it been destroyed\n  this.destroyed = false;\n\n  // should we decode strings into buffers before passing to _write?\n  // this is here so that some node-core streams can optimize string\n  // handling at a lower level.\n  var noDecode = options.decodeStrings === false;\n  this.decodeStrings = !noDecode;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // not an actual buffer we keep track of, but a measurement\n  // of how much we're waiting to get pushed to some underlying\n  // socket or file.\n  this.length = 0;\n\n  // a flag to see when we're in the middle of a write.\n  this.writing = false;\n\n  // when true all writes will be buffered until .uncork() call\n  this.corked = 0;\n\n  // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, because any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n  this.sync = true;\n\n  // a flag to know if we're processing previously buffered items, which\n  // may call the _write() callback in the same tick, so that we don't\n  // end up in an overlapped onwrite situation.\n  this.bufferProcessing = false;\n\n  // the callback that's passed to _write(chunk,cb)\n  this.onwrite = function (er) {\n    onwrite(stream, er);\n  };\n\n  // the callback that the user supplies to write(chunk,encoding,cb)\n  this.writecb = null;\n\n  // the amount that is being written when _write is called.\n  this.writelen = 0;\n  this.bufferedRequest = null;\n  this.lastBufferedRequest = null;\n\n  // number of pending user-supplied write callbacks\n  // this must be 0 before 'finish' can be emitted\n  this.pendingcb = 0;\n\n  // emit prefinish if the only thing we're waiting for is _write cbs\n  // This is relevant for synchronous Transform streams\n  this.prefinished = false;\n\n  // True if the error was already emitted and should not be thrown again\n  this.errorEmitted = false;\n\n  // Should close be emitted on destroy. Defaults to true.\n  this.emitClose = options.emitClose !== false;\n\n  // Should .destroy() be called after 'finish' (and potentially 'end')\n  this.autoDestroy = !!options.autoDestroy;\n\n  // count buffered requests\n  this.bufferedRequestCount = 0;\n\n  // allocate the first CorkedRequest, there is always\n  // one allocated and free to use, and we maintain at most two\n  this.corkedRequestsFree = new CorkedRequest(this);\n}\nWritableState.prototype.getBuffer = function getBuffer() {\n  var current = this.bufferedRequest;\n  var out = [];\n  while (current) {\n    out.push(current);\n    current = current.next;\n  }\n  return out;\n};\n(function () {\n  try {\n    Object.defineProperty(WritableState.prototype, 'buffer', {\n      get: internalUtil.deprecate(function writableStateBufferGetter() {\n        return this.getBuffer();\n      }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.', 'DEP0003')\n    });\n  } catch (_) {}\n})();\n\n// Test _writableState for inheritance to account for Duplex streams,\n// whose prototype chain only points to Readable.\nvar realHasInstance;\nif (typeof Symbol === 'function' && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] === 'function') {\n  realHasInstance = Function.prototype[Symbol.hasInstance];\n  Object.defineProperty(Writable, Symbol.hasInstance, {\n    value: function value(object) {\n      if (realHasInstance.call(this, object)) return true;\n      if (this !== Writable) return false;\n      return object && object._writableState instanceof WritableState;\n    }\n  });\n} else {\n  realHasInstance = function realHasInstance(object) {\n    return object instanceof this;\n  };\n}\nfunction Writable(options) {\n  Duplex = Duplex || __webpack_require__(/*! ./_stream_duplex */ \"./node_modules/ripemd160/node_modules/readable-stream/lib/_stream_duplex.js\");\n\n  // Writable ctor is applied to Duplexes, too.\n  // `realHasInstance` is necessary because using plain `instanceof`\n  // would return false, as no `_writableState` property is attached.\n\n  // Trying to use the custom `instanceof` for Writable here will also break the\n  // Node.js LazyTransform implementation, which has a non-trivial getter for\n  // `_writableState` that would lead to infinite recursion.\n\n  // Checking for a Stream.Duplex instance is faster here instead of inside\n  // the WritableState constructor, at least with V8 6.5\n  var isDuplex = this instanceof Duplex;\n  if (!isDuplex && !realHasInstance.call(Writable, this)) return new Writable(options);\n  this._writableState = new WritableState(options, this, isDuplex);\n\n  // legacy.\n  this.writable = true;\n  if (options) {\n    if (typeof options.write === 'function') this._write = options.write;\n    if (typeof options.writev === 'function') this._writev = options.writev;\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n    if (typeof options.final === 'function') this._final = options.final;\n  }\n  Stream.call(this);\n}\n\n// Otherwise people can pipe Writable streams, which is just wrong.\nWritable.prototype.pipe = function () {\n  errorOrDestroy(this, new ERR_STREAM_CANNOT_PIPE());\n};\nfunction writeAfterEnd(stream, cb) {\n  var er = new ERR_STREAM_WRITE_AFTER_END();\n  // TODO: defer error events consistently everywhere, not just the cb\n  errorOrDestroy(stream, er);\n  process.nextTick(cb, er);\n}\n\n// Checks that a user-supplied chunk is valid, especially for the particular\n// mode the stream is in. Currently this means that `null` is never accepted\n// and undefined/non-string values are only allowed in object mode.\nfunction validChunk(stream, state, chunk, cb) {\n  var er;\n  if (chunk === null) {\n    er = new ERR_STREAM_NULL_VALUES();\n  } else if (typeof chunk !== 'string' && !state.objectMode) {\n    er = new ERR_INVALID_ARG_TYPE('chunk', ['string', 'Buffer'], chunk);\n  }\n  if (er) {\n    errorOrDestroy(stream, er);\n    process.nextTick(cb, er);\n    return false;\n  }\n  return true;\n}\nWritable.prototype.write = function (chunk, encoding, cb) {\n  var state = this._writableState;\n  var ret = false;\n  var isBuf = !state.objectMode && _isUint8Array(chunk);\n  if (isBuf && !Buffer.isBuffer(chunk)) {\n    chunk = _uint8ArrayToBuffer(chunk);\n  }\n  if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n  if (isBuf) encoding = 'buffer';else if (!encoding) encoding = state.defaultEncoding;\n  if (typeof cb !== 'function') cb = nop;\n  if (state.ending) writeAfterEnd(this, cb);else if (isBuf || validChunk(this, state, chunk, cb)) {\n    state.pendingcb++;\n    ret = writeOrBuffer(this, state, isBuf, chunk, encoding, cb);\n  }\n  return ret;\n};\nWritable.prototype.cork = function () {\n  this._writableState.corked++;\n};\nWritable.prototype.uncork = function () {\n  var state = this._writableState;\n  if (state.corked) {\n    state.corked--;\n    if (!state.writing && !state.corked && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);\n  }\n};\nWritable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {\n  // node::ParseEncoding() requires lower case.\n  if (typeof encoding === 'string') encoding = encoding.toLowerCase();\n  if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1)) throw new ERR_UNKNOWN_ENCODING(encoding);\n  this._writableState.defaultEncoding = encoding;\n  return this;\n};\nObject.defineProperty(Writable.prototype, 'writableBuffer', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState && this._writableState.getBuffer();\n  }\n});\nfunction decodeChunk(state, chunk, encoding) {\n  if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {\n    chunk = Buffer.from(chunk, encoding);\n  }\n  return chunk;\n}\nObject.defineProperty(Writable.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.highWaterMark;\n  }\n});\n\n// if we're already writing something, then just put this\n// in the queue, and wait our turn.  Otherwise, call _write\n// If we return false, then we need a drain event, so set that flag.\nfunction writeOrBuffer(stream, state, isBuf, chunk, encoding, cb) {\n  if (!isBuf) {\n    var newChunk = decodeChunk(state, chunk, encoding);\n    if (chunk !== newChunk) {\n      isBuf = true;\n      encoding = 'buffer';\n      chunk = newChunk;\n    }\n  }\n  var len = state.objectMode ? 1 : chunk.length;\n  state.length += len;\n  var ret = state.length < state.highWaterMark;\n  // we must ensure that previous needDrain will not be reset to false.\n  if (!ret) state.needDrain = true;\n  if (state.writing || state.corked) {\n    var last = state.lastBufferedRequest;\n    state.lastBufferedRequest = {\n      chunk: chunk,\n      encoding: encoding,\n      isBuf: isBuf,\n      callback: cb,\n      next: null\n    };\n    if (last) {\n      last.next = state.lastBufferedRequest;\n    } else {\n      state.bufferedRequest = state.lastBufferedRequest;\n    }\n    state.bufferedRequestCount += 1;\n  } else {\n    doWrite(stream, state, false, len, chunk, encoding, cb);\n  }\n  return ret;\n}\nfunction doWrite(stream, state, writev, len, chunk, encoding, cb) {\n  state.writelen = len;\n  state.writecb = cb;\n  state.writing = true;\n  state.sync = true;\n  if (state.destroyed) state.onwrite(new ERR_STREAM_DESTROYED('write'));else if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);\n  state.sync = false;\n}\nfunction onwriteError(stream, state, sync, er, cb) {\n  --state.pendingcb;\n  if (sync) {\n    // defer the callback if we are being called synchronously\n    // to avoid piling up things on the stack\n    process.nextTick(cb, er);\n    // this can emit finish, and it will always happen\n    // after error\n    process.nextTick(finishMaybe, stream, state);\n    stream._writableState.errorEmitted = true;\n    errorOrDestroy(stream, er);\n  } else {\n    // the caller expect this to happen before if\n    // it is async\n    cb(er);\n    stream._writableState.errorEmitted = true;\n    errorOrDestroy(stream, er);\n    // this can emit finish, but finish must\n    // always follow error\n    finishMaybe(stream, state);\n  }\n}\nfunction onwriteStateUpdate(state) {\n  state.writing = false;\n  state.writecb = null;\n  state.length -= state.writelen;\n  state.writelen = 0;\n}\nfunction onwrite(stream, er) {\n  var state = stream._writableState;\n  var sync = state.sync;\n  var cb = state.writecb;\n  if (typeof cb !== 'function') throw new ERR_MULTIPLE_CALLBACK();\n  onwriteStateUpdate(state);\n  if (er) onwriteError(stream, state, sync, er, cb);else {\n    // Check if we're actually ready to finish, but don't emit yet\n    var finished = needFinish(state) || stream.destroyed;\n    if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {\n      clearBuffer(stream, state);\n    }\n    if (sync) {\n      process.nextTick(afterWrite, stream, state, finished, cb);\n    } else {\n      afterWrite(stream, state, finished, cb);\n    }\n  }\n}\nfunction afterWrite(stream, state, finished, cb) {\n  if (!finished) onwriteDrain(stream, state);\n  state.pendingcb--;\n  cb();\n  finishMaybe(stream, state);\n}\n\n// Must force callback to be called on nextTick, so that we don't\n// emit 'drain' before the write() consumer gets the 'false' return\n// value, and has a chance to attach a 'drain' listener.\nfunction onwriteDrain(stream, state) {\n  if (state.length === 0 && state.needDrain) {\n    state.needDrain = false;\n    stream.emit('drain');\n  }\n}\n\n// if there's something in the buffer waiting, then process it\nfunction clearBuffer(stream, state) {\n  state.bufferProcessing = true;\n  var entry = state.bufferedRequest;\n  if (stream._writev && entry && entry.next) {\n    // Fast case, write everything using _writev()\n    var l = state.bufferedRequestCount;\n    var buffer = new Array(l);\n    var holder = state.corkedRequestsFree;\n    holder.entry = entry;\n    var count = 0;\n    var allBuffers = true;\n    while (entry) {\n      buffer[count] = entry;\n      if (!entry.isBuf) allBuffers = false;\n      entry = entry.next;\n      count += 1;\n    }\n    buffer.allBuffers = allBuffers;\n    doWrite(stream, state, true, state.length, buffer, '', holder.finish);\n\n    // doWrite is almost always async, defer these to save a bit of time\n    // as the hot path ends with doWrite\n    state.pendingcb++;\n    state.lastBufferedRequest = null;\n    if (holder.next) {\n      state.corkedRequestsFree = holder.next;\n      holder.next = null;\n    } else {\n      state.corkedRequestsFree = new CorkedRequest(state);\n    }\n    state.bufferedRequestCount = 0;\n  } else {\n    // Slow case, write chunks one-by-one\n    while (entry) {\n      var chunk = entry.chunk;\n      var encoding = entry.encoding;\n      var cb = entry.callback;\n      var len = state.objectMode ? 1 : chunk.length;\n      doWrite(stream, state, false, len, chunk, encoding, cb);\n      entry = entry.next;\n      state.bufferedRequestCount--;\n      // if we didn't call the onwrite immediately, then\n      // it means that we need to wait until it does.\n      // also, that means that the chunk and cb are currently\n      // being processed, so move the buffer counter past them.\n      if (state.writing) {\n        break;\n      }\n    }\n    if (entry === null) state.lastBufferedRequest = null;\n  }\n  state.bufferedRequest = entry;\n  state.bufferProcessing = false;\n}\nWritable.prototype._write = function (chunk, encoding, cb) {\n  cb(new ERR_METHOD_NOT_IMPLEMENTED('_write()'));\n};\nWritable.prototype._writev = null;\nWritable.prototype.end = function (chunk, encoding, cb) {\n  var state = this._writableState;\n  if (typeof chunk === 'function') {\n    cb = chunk;\n    chunk = null;\n    encoding = null;\n  } else if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n  if (chunk !== null && chunk !== undefined) this.write(chunk, encoding);\n\n  // .end() fully uncorks\n  if (state.corked) {\n    state.corked = 1;\n    this.uncork();\n  }\n\n  // ignore unnecessary end() calls.\n  if (!state.ending) endWritable(this, state, cb);\n  return this;\n};\nObject.defineProperty(Writable.prototype, 'writableLength', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.length;\n  }\n});\nfunction needFinish(state) {\n  return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;\n}\nfunction callFinal(stream, state) {\n  stream._final(function (err) {\n    state.pendingcb--;\n    if (err) {\n      errorOrDestroy(stream, err);\n    }\n    state.prefinished = true;\n    stream.emit('prefinish');\n    finishMaybe(stream, state);\n  });\n}\nfunction prefinish(stream, state) {\n  if (!state.prefinished && !state.finalCalled) {\n    if (typeof stream._final === 'function' && !state.destroyed) {\n      state.pendingcb++;\n      state.finalCalled = true;\n      process.nextTick(callFinal, stream, state);\n    } else {\n      state.prefinished = true;\n      stream.emit('prefinish');\n    }\n  }\n}\nfunction finishMaybe(stream, state) {\n  var need = needFinish(state);\n  if (need) {\n    prefinish(stream, state);\n    if (state.pendingcb === 0) {\n      state.finished = true;\n      stream.emit('finish');\n      if (state.autoDestroy) {\n        // In case of duplex streams we need a way to detect\n        // if the readable side is ready for autoDestroy as well\n        var rState = stream._readableState;\n        if (!rState || rState.autoDestroy && rState.endEmitted) {\n          stream.destroy();\n        }\n      }\n    }\n  }\n  return need;\n}\nfunction endWritable(stream, state, cb) {\n  state.ending = true;\n  finishMaybe(stream, state);\n  if (cb) {\n    if (state.finished) process.nextTick(cb);else stream.once('finish', cb);\n  }\n  state.ended = true;\n  stream.writable = false;\n}\nfunction onCorkedFinish(corkReq, state, err) {\n  var entry = corkReq.entry;\n  corkReq.entry = null;\n  while (entry) {\n    var cb = entry.callback;\n    state.pendingcb--;\n    cb(err);\n    entry = entry.next;\n  }\n\n  // reuse the free corkReq.\n  state.corkedRequestsFree.next = corkReq;\n}\nObject.defineProperty(Writable.prototype, 'destroyed', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    if (this._writableState === undefined) {\n      return false;\n    }\n    return this._writableState.destroyed;\n  },\n  set: function set(value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._writableState) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._writableState.destroyed = value;\n  }\n});\nWritable.prototype.destroy = destroyImpl.destroy;\nWritable.prototype._undestroy = destroyImpl.undestroy;\nWritable.prototype._destroy = function (err, cb) {\n  cb(err);\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/ripemd160/node_modules/readable-stream/lib/_stream_writable.js\n");

/***/ }),

/***/ "./node_modules/ripemd160/node_modules/readable-stream/lib/internal/streams/async_iterator.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/ripemd160/node_modules/readable-stream/lib/internal/streams/async_iterator.js ***!
  \****************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval("/* provided dependency */ var process = __webpack_require__(/*! process */ \"./node_modules/process/browser.js\");\n\n\nvar _Object$setPrototypeO;\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nvar finished = __webpack_require__(/*! ./end-of-stream */ \"./node_modules/ripemd160/node_modules/readable-stream/lib/internal/streams/end-of-stream.js\");\nvar kLastResolve = Symbol('lastResolve');\nvar kLastReject = Symbol('lastReject');\nvar kError = Symbol('error');\nvar kEnded = Symbol('ended');\nvar kLastPromise = Symbol('lastPromise');\nvar kHandlePromise = Symbol('handlePromise');\nvar kStream = Symbol('stream');\nfunction createIterResult(value, done) {\n  return {\n    value: value,\n    done: done\n  };\n}\nfunction readAndResolve(iter) {\n  var resolve = iter[kLastResolve];\n  if (resolve !== null) {\n    var data = iter[kStream].read();\n    // we defer if data is null\n    // we can be expecting either 'end' or\n    // 'error'\n    if (data !== null) {\n      iter[kLastPromise] = null;\n      iter[kLastResolve] = null;\n      iter[kLastReject] = null;\n      resolve(createIterResult(data, false));\n    }\n  }\n}\nfunction onReadable(iter) {\n  // we wait for the next tick, because it might\n  // emit an error with process.nextTick\n  process.nextTick(readAndResolve, iter);\n}\nfunction wrapForNext(lastPromise, iter) {\n  return function (resolve, reject) {\n    lastPromise.then(function () {\n      if (iter[kEnded]) {\n        resolve(createIterResult(undefined, true));\n        return;\n      }\n      iter[kHandlePromise](resolve, reject);\n    }, reject);\n  };\n}\nvar AsyncIteratorPrototype = Object.getPrototypeOf(function () {});\nvar ReadableStreamAsyncIteratorPrototype = Object.setPrototypeOf((_Object$setPrototypeO = {\n  get stream() {\n    return this[kStream];\n  },\n  next: function next() {\n    var _this = this;\n    // if we have detected an error in the meanwhile\n    // reject straight away\n    var error = this[kError];\n    if (error !== null) {\n      return Promise.reject(error);\n    }\n    if (this[kEnded]) {\n      return Promise.resolve(createIterResult(undefined, true));\n    }\n    if (this[kStream].destroyed) {\n      // We need to defer via nextTick because if .destroy(err) is\n      // called, the error will be emitted via nextTick, and\n      // we cannot guarantee that there is no error lingering around\n      // waiting to be emitted.\n      return new Promise(function (resolve, reject) {\n        process.nextTick(function () {\n          if (_this[kError]) {\n            reject(_this[kError]);\n          } else {\n            resolve(createIterResult(undefined, true));\n          }\n        });\n      });\n    }\n\n    // if we have multiple next() calls\n    // we will wait for the previous Promise to finish\n    // this logic is optimized to support for await loops,\n    // where next() is only called once at a time\n    var lastPromise = this[kLastPromise];\n    var promise;\n    if (lastPromise) {\n      promise = new Promise(wrapForNext(lastPromise, this));\n    } else {\n      // fast path needed to support multiple this.push()\n      // without triggering the next() queue\n      var data = this[kStream].read();\n      if (data !== null) {\n        return Promise.resolve(createIterResult(data, false));\n      }\n      promise = new Promise(this[kHandlePromise]);\n    }\n    this[kLastPromise] = promise;\n    return promise;\n  }\n}, _defineProperty(_Object$setPrototypeO, Symbol.asyncIterator, function () {\n  return this;\n}), _defineProperty(_Object$setPrototypeO, \"return\", function _return() {\n  var _this2 = this;\n  // destroy(err, cb) is a private API\n  // we can guarantee we have that here, because we control the\n  // Readable class this is attached to\n  return new Promise(function (resolve, reject) {\n    _this2[kStream].destroy(null, function (err) {\n      if (err) {\n        reject(err);\n        return;\n      }\n      resolve(createIterResult(undefined, true));\n    });\n  });\n}), _Object$setPrototypeO), AsyncIteratorPrototype);\nvar createReadableStreamAsyncIterator = function createReadableStreamAsyncIterator(stream) {\n  var _Object$create;\n  var iterator = Object.create(ReadableStreamAsyncIteratorPrototype, (_Object$create = {}, _defineProperty(_Object$create, kStream, {\n    value: stream,\n    writable: true\n  }), _defineProperty(_Object$create, kLastResolve, {\n    value: null,\n    writable: true\n  }), _defineProperty(_Object$create, kLastReject, {\n    value: null,\n    writable: true\n  }), _defineProperty(_Object$create, kError, {\n    value: null,\n    writable: true\n  }), _defineProperty(_Object$create, kEnded, {\n    value: stream._readableState.endEmitted,\n    writable: true\n  }), _defineProperty(_Object$create, kHandlePromise, {\n    value: function value(resolve, reject) {\n      var data = iterator[kStream].read();\n      if (data) {\n        iterator[kLastPromise] = null;\n        iterator[kLastResolve] = null;\n        iterator[kLastReject] = null;\n        resolve(createIterResult(data, false));\n      } else {\n        iterator[kLastResolve] = resolve;\n        iterator[kLastReject] = reject;\n      }\n    },\n    writable: true\n  }), _Object$create));\n  iterator[kLastPromise] = null;\n  finished(stream, function (err) {\n    if (err && err.code !== 'ERR_STREAM_PREMATURE_CLOSE') {\n      var reject = iterator[kLastReject];\n      // reject if we are waiting for data in the Promise\n      // returned by next() and store the error\n      if (reject !== null) {\n        iterator[kLastPromise] = null;\n        iterator[kLastResolve] = null;\n        iterator[kLastReject] = null;\n        reject(err);\n      }\n      iterator[kError] = err;\n      return;\n    }\n    var resolve = iterator[kLastResolve];\n    if (resolve !== null) {\n      iterator[kLastPromise] = null;\n      iterator[kLastResolve] = null;\n      iterator[kLastReject] = null;\n      resolve(createIterResult(undefined, true));\n    }\n    iterator[kEnded] = true;\n  });\n  stream.on('readable', onReadable.bind(null, iterator));\n  return iterator;\n};\nmodule.exports = createReadableStreamAsyncIterator;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/ripemd160/node_modules/readable-stream/lib/internal/streams/async_iterator.js\n");

/***/ }),

/***/ "./node_modules/ripemd160/node_modules/readable-stream/lib/internal/streams/buffer_list.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/ripemd160/node_modules/readable-stream/lib/internal/streams/buffer_list.js ***!
  \*************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval("\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nvar _require = __webpack_require__(/*! buffer */ \"./node_modules/buffer/index.js\"),\n  Buffer = _require.Buffer;\nvar _require2 = __webpack_require__(/*! util */ \"?db9e\"),\n  inspect = _require2.inspect;\nvar custom = inspect && inspect.custom || 'inspect';\nfunction copyBuffer(src, target, offset) {\n  Buffer.prototype.copy.call(src, target, offset);\n}\nmodule.exports = /*#__PURE__*/function () {\n  function BufferList() {\n    _classCallCheck(this, BufferList);\n    this.head = null;\n    this.tail = null;\n    this.length = 0;\n  }\n  _createClass(BufferList, [{\n    key: \"push\",\n    value: function push(v) {\n      var entry = {\n        data: v,\n        next: null\n      };\n      if (this.length > 0) this.tail.next = entry;else this.head = entry;\n      this.tail = entry;\n      ++this.length;\n    }\n  }, {\n    key: \"unshift\",\n    value: function unshift(v) {\n      var entry = {\n        data: v,\n        next: this.head\n      };\n      if (this.length === 0) this.tail = entry;\n      this.head = entry;\n      ++this.length;\n    }\n  }, {\n    key: \"shift\",\n    value: function shift() {\n      if (this.length === 0) return;\n      var ret = this.head.data;\n      if (this.length === 1) this.head = this.tail = null;else this.head = this.head.next;\n      --this.length;\n      return ret;\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this.head = this.tail = null;\n      this.length = 0;\n    }\n  }, {\n    key: \"join\",\n    value: function join(s) {\n      if (this.length === 0) return '';\n      var p = this.head;\n      var ret = '' + p.data;\n      while (p = p.next) ret += s + p.data;\n      return ret;\n    }\n  }, {\n    key: \"concat\",\n    value: function concat(n) {\n      if (this.length === 0) return Buffer.alloc(0);\n      var ret = Buffer.allocUnsafe(n >>> 0);\n      var p = this.head;\n      var i = 0;\n      while (p) {\n        copyBuffer(p.data, ret, i);\n        i += p.data.length;\n        p = p.next;\n      }\n      return ret;\n    }\n\n    // Consumes a specified amount of bytes or characters from the buffered data.\n  }, {\n    key: \"consume\",\n    value: function consume(n, hasStrings) {\n      var ret;\n      if (n < this.head.data.length) {\n        // `slice` is the same for buffers and strings.\n        ret = this.head.data.slice(0, n);\n        this.head.data = this.head.data.slice(n);\n      } else if (n === this.head.data.length) {\n        // First chunk is a perfect match.\n        ret = this.shift();\n      } else {\n        // Result spans more than one buffer.\n        ret = hasStrings ? this._getString(n) : this._getBuffer(n);\n      }\n      return ret;\n    }\n  }, {\n    key: \"first\",\n    value: function first() {\n      return this.head.data;\n    }\n\n    // Consumes a specified amount of characters from the buffered data.\n  }, {\n    key: \"_getString\",\n    value: function _getString(n) {\n      var p = this.head;\n      var c = 1;\n      var ret = p.data;\n      n -= ret.length;\n      while (p = p.next) {\n        var str = p.data;\n        var nb = n > str.length ? str.length : n;\n        if (nb === str.length) ret += str;else ret += str.slice(0, n);\n        n -= nb;\n        if (n === 0) {\n          if (nb === str.length) {\n            ++c;\n            if (p.next) this.head = p.next;else this.head = this.tail = null;\n          } else {\n            this.head = p;\n            p.data = str.slice(nb);\n          }\n          break;\n        }\n        ++c;\n      }\n      this.length -= c;\n      return ret;\n    }\n\n    // Consumes a specified amount of bytes from the buffered data.\n  }, {\n    key: \"_getBuffer\",\n    value: function _getBuffer(n) {\n      var ret = Buffer.allocUnsafe(n);\n      var p = this.head;\n      var c = 1;\n      p.data.copy(ret);\n      n -= p.data.length;\n      while (p = p.next) {\n        var buf = p.data;\n        var nb = n > buf.length ? buf.length : n;\n        buf.copy(ret, ret.length - n, 0, nb);\n        n -= nb;\n        if (n === 0) {\n          if (nb === buf.length) {\n            ++c;\n            if (p.next) this.head = p.next;else this.head = this.tail = null;\n          } else {\n            this.head = p;\n            p.data = buf.slice(nb);\n          }\n          break;\n        }\n        ++c;\n      }\n      this.length -= c;\n      return ret;\n    }\n\n    // Make sure the linked list only shows the minimal necessary information.\n  }, {\n    key: custom,\n    value: function value(_, options) {\n      return inspect(this, _objectSpread(_objectSpread({}, options), {}, {\n        // Only inspect one level.\n        depth: 0,\n        // It should not recurse.\n        customInspect: false\n      }));\n    }\n  }]);\n  return BufferList;\n}();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/ripemd160/node_modules/readable-stream/lib/internal/streams/buffer_list.js\n");

/***/ }),

/***/ "./node_modules/ripemd160/node_modules/readable-stream/lib/internal/streams/destroy.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/ripemd160/node_modules/readable-stream/lib/internal/streams/destroy.js ***!
  \*********************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval("/* provided dependency */ var process = __webpack_require__(/*! process */ \"./node_modules/process/browser.js\");\n\n\n// undocumented cb() API, needed for core, not for public API\nfunction destroy(err, cb) {\n  var _this = this;\n  var readableDestroyed = this._readableState && this._readableState.destroyed;\n  var writableDestroyed = this._writableState && this._writableState.destroyed;\n  if (readableDestroyed || writableDestroyed) {\n    if (cb) {\n      cb(err);\n    } else if (err) {\n      if (!this._writableState) {\n        process.nextTick(emitErrorNT, this, err);\n      } else if (!this._writableState.errorEmitted) {\n        this._writableState.errorEmitted = true;\n        process.nextTick(emitErrorNT, this, err);\n      }\n    }\n    return this;\n  }\n\n  // we set destroyed to true before firing error callbacks in order\n  // to make it re-entrance safe in case destroy() is called within callbacks\n\n  if (this._readableState) {\n    this._readableState.destroyed = true;\n  }\n\n  // if this is a duplex stream mark the writable part as destroyed as well\n  if (this._writableState) {\n    this._writableState.destroyed = true;\n  }\n  this._destroy(err || null, function (err) {\n    if (!cb && err) {\n      if (!_this._writableState) {\n        process.nextTick(emitErrorAndCloseNT, _this, err);\n      } else if (!_this._writableState.errorEmitted) {\n        _this._writableState.errorEmitted = true;\n        process.nextTick(emitErrorAndCloseNT, _this, err);\n      } else {\n        process.nextTick(emitCloseNT, _this);\n      }\n    } else if (cb) {\n      process.nextTick(emitCloseNT, _this);\n      cb(err);\n    } else {\n      process.nextTick(emitCloseNT, _this);\n    }\n  });\n  return this;\n}\nfunction emitErrorAndCloseNT(self, err) {\n  emitErrorNT(self, err);\n  emitCloseNT(self);\n}\nfunction emitCloseNT(self) {\n  if (self._writableState && !self._writableState.emitClose) return;\n  if (self._readableState && !self._readableState.emitClose) return;\n  self.emit('close');\n}\nfunction undestroy() {\n  if (this._readableState) {\n    this._readableState.destroyed = false;\n    this._readableState.reading = false;\n    this._readableState.ended = false;\n    this._readableState.endEmitted = false;\n  }\n  if (this._writableState) {\n    this._writableState.destroyed = false;\n    this._writableState.ended = false;\n    this._writableState.ending = false;\n    this._writableState.finalCalled = false;\n    this._writableState.prefinished = false;\n    this._writableState.finished = false;\n    this._writableState.errorEmitted = false;\n  }\n}\nfunction emitErrorNT(self, err) {\n  self.emit('error', err);\n}\nfunction errorOrDestroy(stream, err) {\n  // We have tests that rely on errors being emitted\n  // in the same tick, so changing this is semver major.\n  // For now when you opt-in to autoDestroy we allow\n  // the error to be emitted nextTick. In a future\n  // semver major update we should change the default to this.\n\n  var rState = stream._readableState;\n  var wState = stream._writableState;\n  if (rState && rState.autoDestroy || wState && wState.autoDestroy) stream.destroy(err);else stream.emit('error', err);\n}\nmodule.exports = {\n  destroy: destroy,\n  undestroy: undestroy,\n  errorOrDestroy: errorOrDestroy\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcmlwZW1kMTYwL25vZGVfbW9kdWxlcy9yZWFkYWJsZS1zdHJlYW0vbGliL2ludGVybmFsL3N0cmVhbXMvZGVzdHJveS5qcy5qcyIsIm1hcHBpbmdzIjoiO0FBQWE7O0FBRWI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBLFFBQVEsT0FBTztBQUNmLFFBQVE7QUFDUjtBQUNBLFFBQVEsT0FBTztBQUNmO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUSxPQUFPO0FBQ2YsUUFBUTtBQUNSO0FBQ0EsUUFBUSxPQUFPO0FBQ2YsUUFBUTtBQUNSLFFBQVEsT0FBTztBQUNmO0FBQ0EsTUFBTTtBQUNOLE1BQU0sT0FBTztBQUNiO0FBQ0EsTUFBTTtBQUNOLE1BQU0sT0FBTztBQUNiO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSx3RkFBd0Y7QUFDeEY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9yaXBlbWQxNjAvbm9kZV9tb2R1bGVzL3JlYWRhYmxlLXN0cmVhbS9saWIvaW50ZXJuYWwvc3RyZWFtcy9kZXN0cm95LmpzP2QyYTAiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG4vLyB1bmRvY3VtZW50ZWQgY2IoKSBBUEksIG5lZWRlZCBmb3IgY29yZSwgbm90IGZvciBwdWJsaWMgQVBJXG5mdW5jdGlvbiBkZXN0cm95KGVyciwgY2IpIHtcbiAgdmFyIF90aGlzID0gdGhpcztcbiAgdmFyIHJlYWRhYmxlRGVzdHJveWVkID0gdGhpcy5fcmVhZGFibGVTdGF0ZSAmJiB0aGlzLl9yZWFkYWJsZVN0YXRlLmRlc3Ryb3llZDtcbiAgdmFyIHdyaXRhYmxlRGVzdHJveWVkID0gdGhpcy5fd3JpdGFibGVTdGF0ZSAmJiB0aGlzLl93cml0YWJsZVN0YXRlLmRlc3Ryb3llZDtcbiAgaWYgKHJlYWRhYmxlRGVzdHJveWVkIHx8IHdyaXRhYmxlRGVzdHJveWVkKSB7XG4gICAgaWYgKGNiKSB7XG4gICAgICBjYihlcnIpO1xuICAgIH0gZWxzZSBpZiAoZXJyKSB7XG4gICAgICBpZiAoIXRoaXMuX3dyaXRhYmxlU3RhdGUpIHtcbiAgICAgICAgcHJvY2Vzcy5uZXh0VGljayhlbWl0RXJyb3JOVCwgdGhpcywgZXJyKTtcbiAgICAgIH0gZWxzZSBpZiAoIXRoaXMuX3dyaXRhYmxlU3RhdGUuZXJyb3JFbWl0dGVkKSB7XG4gICAgICAgIHRoaXMuX3dyaXRhYmxlU3RhdGUuZXJyb3JFbWl0dGVkID0gdHJ1ZTtcbiAgICAgICAgcHJvY2Vzcy5uZXh0VGljayhlbWl0RXJyb3JOVCwgdGhpcywgZXJyKTtcbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHRoaXM7XG4gIH1cblxuICAvLyB3ZSBzZXQgZGVzdHJveWVkIHRvIHRydWUgYmVmb3JlIGZpcmluZyBlcnJvciBjYWxsYmFja3MgaW4gb3JkZXJcbiAgLy8gdG8gbWFrZSBpdCByZS1lbnRyYW5jZSBzYWZlIGluIGNhc2UgZGVzdHJveSgpIGlzIGNhbGxlZCB3aXRoaW4gY2FsbGJhY2tzXG5cbiAgaWYgKHRoaXMuX3JlYWRhYmxlU3RhdGUpIHtcbiAgICB0aGlzLl9yZWFkYWJsZVN0YXRlLmRlc3Ryb3llZCA9IHRydWU7XG4gIH1cblxuICAvLyBpZiB0aGlzIGlzIGEgZHVwbGV4IHN0cmVhbSBtYXJrIHRoZSB3cml0YWJsZSBwYXJ0IGFzIGRlc3Ryb3llZCBhcyB3ZWxsXG4gIGlmICh0aGlzLl93cml0YWJsZVN0YXRlKSB7XG4gICAgdGhpcy5fd3JpdGFibGVTdGF0ZS5kZXN0cm95ZWQgPSB0cnVlO1xuICB9XG4gIHRoaXMuX2Rlc3Ryb3koZXJyIHx8IG51bGwsIGZ1bmN0aW9uIChlcnIpIHtcbiAgICBpZiAoIWNiICYmIGVycikge1xuICAgICAgaWYgKCFfdGhpcy5fd3JpdGFibGVTdGF0ZSkge1xuICAgICAgICBwcm9jZXNzLm5leHRUaWNrKGVtaXRFcnJvckFuZENsb3NlTlQsIF90aGlzLCBlcnIpO1xuICAgICAgfSBlbHNlIGlmICghX3RoaXMuX3dyaXRhYmxlU3RhdGUuZXJyb3JFbWl0dGVkKSB7XG4gICAgICAgIF90aGlzLl93cml0YWJsZVN0YXRlLmVycm9yRW1pdHRlZCA9IHRydWU7XG4gICAgICAgIHByb2Nlc3MubmV4dFRpY2soZW1pdEVycm9yQW5kQ2xvc2VOVCwgX3RoaXMsIGVycik7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBwcm9jZXNzLm5leHRUaWNrKGVtaXRDbG9zZU5ULCBfdGhpcyk7XG4gICAgICB9XG4gICAgfSBlbHNlIGlmIChjYikge1xuICAgICAgcHJvY2Vzcy5uZXh0VGljayhlbWl0Q2xvc2VOVCwgX3RoaXMpO1xuICAgICAgY2IoZXJyKTtcbiAgICB9IGVsc2Uge1xuICAgICAgcHJvY2Vzcy5uZXh0VGljayhlbWl0Q2xvc2VOVCwgX3RoaXMpO1xuICAgIH1cbiAgfSk7XG4gIHJldHVybiB0aGlzO1xufVxuZnVuY3Rpb24gZW1pdEVycm9yQW5kQ2xvc2VOVChzZWxmLCBlcnIpIHtcbiAgZW1pdEVycm9yTlQoc2VsZiwgZXJyKTtcbiAgZW1pdENsb3NlTlQoc2VsZik7XG59XG5mdW5jdGlvbiBlbWl0Q2xvc2VOVChzZWxmKSB7XG4gIGlmIChzZWxmLl93cml0YWJsZVN0YXRlICYmICFzZWxmLl93cml0YWJsZVN0YXRlLmVtaXRDbG9zZSkgcmV0dXJuO1xuICBpZiAoc2VsZi5fcmVhZGFibGVTdGF0ZSAmJiAhc2VsZi5fcmVhZGFibGVTdGF0ZS5lbWl0Q2xvc2UpIHJldHVybjtcbiAgc2VsZi5lbWl0KCdjbG9zZScpO1xufVxuZnVuY3Rpb24gdW5kZXN0cm95KCkge1xuICBpZiAodGhpcy5fcmVhZGFibGVTdGF0ZSkge1xuICAgIHRoaXMuX3JlYWRhYmxlU3RhdGUuZGVzdHJveWVkID0gZmFsc2U7XG4gICAgdGhpcy5fcmVhZGFibGVTdGF0ZS5yZWFkaW5nID0gZmFsc2U7XG4gICAgdGhpcy5fcmVhZGFibGVTdGF0ZS5lbmRlZCA9IGZhbHNlO1xuICAgIHRoaXMuX3JlYWRhYmxlU3RhdGUuZW5kRW1pdHRlZCA9IGZhbHNlO1xuICB9XG4gIGlmICh0aGlzLl93cml0YWJsZVN0YXRlKSB7XG4gICAgdGhpcy5fd3JpdGFibGVTdGF0ZS5kZXN0cm95ZWQgPSBmYWxzZTtcbiAgICB0aGlzLl93cml0YWJsZVN0YXRlLmVuZGVkID0gZmFsc2U7XG4gICAgdGhpcy5fd3JpdGFibGVTdGF0ZS5lbmRpbmcgPSBmYWxzZTtcbiAgICB0aGlzLl93cml0YWJsZVN0YXRlLmZpbmFsQ2FsbGVkID0gZmFsc2U7XG4gICAgdGhpcy5fd3JpdGFibGVTdGF0ZS5wcmVmaW5pc2hlZCA9IGZhbHNlO1xuICAgIHRoaXMuX3dyaXRhYmxlU3RhdGUuZmluaXNoZWQgPSBmYWxzZTtcbiAgICB0aGlzLl93cml0YWJsZVN0YXRlLmVycm9yRW1pdHRlZCA9IGZhbHNlO1xuICB9XG59XG5mdW5jdGlvbiBlbWl0RXJyb3JOVChzZWxmLCBlcnIpIHtcbiAgc2VsZi5lbWl0KCdlcnJvcicsIGVycik7XG59XG5mdW5jdGlvbiBlcnJvck9yRGVzdHJveShzdHJlYW0sIGVycikge1xuICAvLyBXZSBoYXZlIHRlc3RzIHRoYXQgcmVseSBvbiBlcnJvcnMgYmVpbmcgZW1pdHRlZFxuICAvLyBpbiB0aGUgc2FtZSB0aWNrLCBzbyBjaGFuZ2luZyB0aGlzIGlzIHNlbXZlciBtYWpvci5cbiAgLy8gRm9yIG5vdyB3aGVuIHlvdSBvcHQtaW4gdG8gYXV0b0Rlc3Ryb3kgd2UgYWxsb3dcbiAgLy8gdGhlIGVycm9yIHRvIGJlIGVtaXR0ZWQgbmV4dFRpY2suIEluIGEgZnV0dXJlXG4gIC8vIHNlbXZlciBtYWpvciB1cGRhdGUgd2Ugc2hvdWxkIGNoYW5nZSB0aGUgZGVmYXVsdCB0byB0aGlzLlxuXG4gIHZhciByU3RhdGUgPSBzdHJlYW0uX3JlYWRhYmxlU3RhdGU7XG4gIHZhciB3U3RhdGUgPSBzdHJlYW0uX3dyaXRhYmxlU3RhdGU7XG4gIGlmIChyU3RhdGUgJiYgclN0YXRlLmF1dG9EZXN0cm95IHx8IHdTdGF0ZSAmJiB3U3RhdGUuYXV0b0Rlc3Ryb3kpIHN0cmVhbS5kZXN0cm95KGVycik7ZWxzZSBzdHJlYW0uZW1pdCgnZXJyb3InLCBlcnIpO1xufVxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIGRlc3Ryb3k6IGRlc3Ryb3ksXG4gIHVuZGVzdHJveTogdW5kZXN0cm95LFxuICBlcnJvck9yRGVzdHJveTogZXJyb3JPckRlc3Ryb3lcbn07Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/ripemd160/node_modules/readable-stream/lib/internal/streams/destroy.js\n");

/***/ }),

/***/ "./node_modules/ripemd160/node_modules/readable-stream/lib/internal/streams/end-of-stream.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/ripemd160/node_modules/readable-stream/lib/internal/streams/end-of-stream.js ***!
  \***************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval("// Ported from https://github.com/mafintosh/end-of-stream with\n// permission from the author, Mathias Buus (@mafintosh).\n\n\n\nvar ERR_STREAM_PREMATURE_CLOSE = (__webpack_require__(/*! ../../../errors */ \"./node_modules/ripemd160/node_modules/readable-stream/errors-browser.js\").codes.ERR_STREAM_PREMATURE_CLOSE);\nfunction once(callback) {\n  var called = false;\n  return function () {\n    if (called) return;\n    called = true;\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    callback.apply(this, args);\n  };\n}\nfunction noop() {}\nfunction isRequest(stream) {\n  return stream.setHeader && typeof stream.abort === 'function';\n}\nfunction eos(stream, opts, callback) {\n  if (typeof opts === 'function') return eos(stream, null, opts);\n  if (!opts) opts = {};\n  callback = once(callback || noop);\n  var readable = opts.readable || opts.readable !== false && stream.readable;\n  var writable = opts.writable || opts.writable !== false && stream.writable;\n  var onlegacyfinish = function onlegacyfinish() {\n    if (!stream.writable) onfinish();\n  };\n  var writableEnded = stream._writableState && stream._writableState.finished;\n  var onfinish = function onfinish() {\n    writable = false;\n    writableEnded = true;\n    if (!readable) callback.call(stream);\n  };\n  var readableEnded = stream._readableState && stream._readableState.endEmitted;\n  var onend = function onend() {\n    readable = false;\n    readableEnded = true;\n    if (!writable) callback.call(stream);\n  };\n  var onerror = function onerror(err) {\n    callback.call(stream, err);\n  };\n  var onclose = function onclose() {\n    var err;\n    if (readable && !readableEnded) {\n      if (!stream._readableState || !stream._readableState.ended) err = new ERR_STREAM_PREMATURE_CLOSE();\n      return callback.call(stream, err);\n    }\n    if (writable && !writableEnded) {\n      if (!stream._writableState || !stream._writableState.ended) err = new ERR_STREAM_PREMATURE_CLOSE();\n      return callback.call(stream, err);\n    }\n  };\n  var onrequest = function onrequest() {\n    stream.req.on('finish', onfinish);\n  };\n  if (isRequest(stream)) {\n    stream.on('complete', onfinish);\n    stream.on('abort', onclose);\n    if (stream.req) onrequest();else stream.on('request', onrequest);\n  } else if (writable && !stream._writableState) {\n    // legacy streams\n    stream.on('end', onlegacyfinish);\n    stream.on('close', onlegacyfinish);\n  }\n  stream.on('end', onend);\n  stream.on('finish', onfinish);\n  if (opts.error !== false) stream.on('error', onerror);\n  stream.on('close', onclose);\n  return function () {\n    stream.removeListener('complete', onfinish);\n    stream.removeListener('abort', onclose);\n    stream.removeListener('request', onrequest);\n    if (stream.req) stream.req.removeListener('finish', onfinish);\n    stream.removeListener('end', onlegacyfinish);\n    stream.removeListener('close', onlegacyfinish);\n    stream.removeListener('finish', onfinish);\n    stream.removeListener('end', onend);\n    stream.removeListener('error', onerror);\n    stream.removeListener('close', onclose);\n  };\n}\nmodule.exports = eos;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcmlwZW1kMTYwL25vZGVfbW9kdWxlcy9yZWFkYWJsZS1zdHJlYW0vbGliL2ludGVybmFsL3N0cmVhbXMvZW5kLW9mLXN0cmVhbS5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBOztBQUVhOztBQUViLGlDQUFpQyx3SkFBMkQ7QUFDNUY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdFQUF3RSxhQUFhO0FBQ3JGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQ0FBZ0M7QUFDaEMsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9yaXBlbWQxNjAvbm9kZV9tb2R1bGVzL3JlYWRhYmxlLXN0cmVhbS9saWIvaW50ZXJuYWwvc3RyZWFtcy9lbmQtb2Ytc3RyZWFtLmpzP2FjNGYiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gUG9ydGVkIGZyb20gaHR0cHM6Ly9naXRodWIuY29tL21hZmludG9zaC9lbmQtb2Ytc3RyZWFtIHdpdGhcbi8vIHBlcm1pc3Npb24gZnJvbSB0aGUgYXV0aG9yLCBNYXRoaWFzIEJ1dXMgKEBtYWZpbnRvc2gpLlxuXG4ndXNlIHN0cmljdCc7XG5cbnZhciBFUlJfU1RSRUFNX1BSRU1BVFVSRV9DTE9TRSA9IHJlcXVpcmUoJy4uLy4uLy4uL2Vycm9ycycpLmNvZGVzLkVSUl9TVFJFQU1fUFJFTUFUVVJFX0NMT1NFO1xuZnVuY3Rpb24gb25jZShjYWxsYmFjaykge1xuICB2YXIgY2FsbGVkID0gZmFsc2U7XG4gIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgaWYgKGNhbGxlZCkgcmV0dXJuO1xuICAgIGNhbGxlZCA9IHRydWU7XG4gICAgZm9yICh2YXIgX2xlbiA9IGFyZ3VtZW50cy5sZW5ndGgsIGFyZ3MgPSBuZXcgQXJyYXkoX2xlbiksIF9rZXkgPSAwOyBfa2V5IDwgX2xlbjsgX2tleSsrKSB7XG4gICAgICBhcmdzW19rZXldID0gYXJndW1lbnRzW19rZXldO1xuICAgIH1cbiAgICBjYWxsYmFjay5hcHBseSh0aGlzLCBhcmdzKTtcbiAgfTtcbn1cbmZ1bmN0aW9uIG5vb3AoKSB7fVxuZnVuY3Rpb24gaXNSZXF1ZXN0KHN0cmVhbSkge1xuICByZXR1cm4gc3RyZWFtLnNldEhlYWRlciAmJiB0eXBlb2Ygc3RyZWFtLmFib3J0ID09PSAnZnVuY3Rpb24nO1xufVxuZnVuY3Rpb24gZW9zKHN0cmVhbSwgb3B0cywgY2FsbGJhY2spIHtcbiAgaWYgKHR5cGVvZiBvcHRzID09PSAnZnVuY3Rpb24nKSByZXR1cm4gZW9zKHN0cmVhbSwgbnVsbCwgb3B0cyk7XG4gIGlmICghb3B0cykgb3B0cyA9IHt9O1xuICBjYWxsYmFjayA9IG9uY2UoY2FsbGJhY2sgfHwgbm9vcCk7XG4gIHZhciByZWFkYWJsZSA9IG9wdHMucmVhZGFibGUgfHwgb3B0cy5yZWFkYWJsZSAhPT0gZmFsc2UgJiYgc3RyZWFtLnJlYWRhYmxlO1xuICB2YXIgd3JpdGFibGUgPSBvcHRzLndyaXRhYmxlIHx8IG9wdHMud3JpdGFibGUgIT09IGZhbHNlICYmIHN0cmVhbS53cml0YWJsZTtcbiAgdmFyIG9ubGVnYWN5ZmluaXNoID0gZnVuY3Rpb24gb25sZWdhY3lmaW5pc2goKSB7XG4gICAgaWYgKCFzdHJlYW0ud3JpdGFibGUpIG9uZmluaXNoKCk7XG4gIH07XG4gIHZhciB3cml0YWJsZUVuZGVkID0gc3RyZWFtLl93cml0YWJsZVN0YXRlICYmIHN0cmVhbS5fd3JpdGFibGVTdGF0ZS5maW5pc2hlZDtcbiAgdmFyIG9uZmluaXNoID0gZnVuY3Rpb24gb25maW5pc2goKSB7XG4gICAgd3JpdGFibGUgPSBmYWxzZTtcbiAgICB3cml0YWJsZUVuZGVkID0gdHJ1ZTtcbiAgICBpZiAoIXJlYWRhYmxlKSBjYWxsYmFjay5jYWxsKHN0cmVhbSk7XG4gIH07XG4gIHZhciByZWFkYWJsZUVuZGVkID0gc3RyZWFtLl9yZWFkYWJsZVN0YXRlICYmIHN0cmVhbS5fcmVhZGFibGVTdGF0ZS5lbmRFbWl0dGVkO1xuICB2YXIgb25lbmQgPSBmdW5jdGlvbiBvbmVuZCgpIHtcbiAgICByZWFkYWJsZSA9IGZhbHNlO1xuICAgIHJlYWRhYmxlRW5kZWQgPSB0cnVlO1xuICAgIGlmICghd3JpdGFibGUpIGNhbGxiYWNrLmNhbGwoc3RyZWFtKTtcbiAgfTtcbiAgdmFyIG9uZXJyb3IgPSBmdW5jdGlvbiBvbmVycm9yKGVycikge1xuICAgIGNhbGxiYWNrLmNhbGwoc3RyZWFtLCBlcnIpO1xuICB9O1xuICB2YXIgb25jbG9zZSA9IGZ1bmN0aW9uIG9uY2xvc2UoKSB7XG4gICAgdmFyIGVycjtcbiAgICBpZiAocmVhZGFibGUgJiYgIXJlYWRhYmxlRW5kZWQpIHtcbiAgICAgIGlmICghc3RyZWFtLl9yZWFkYWJsZVN0YXRlIHx8ICFzdHJlYW0uX3JlYWRhYmxlU3RhdGUuZW5kZWQpIGVyciA9IG5ldyBFUlJfU1RSRUFNX1BSRU1BVFVSRV9DTE9TRSgpO1xuICAgICAgcmV0dXJuIGNhbGxiYWNrLmNhbGwoc3RyZWFtLCBlcnIpO1xuICAgIH1cbiAgICBpZiAod3JpdGFibGUgJiYgIXdyaXRhYmxlRW5kZWQpIHtcbiAgICAgIGlmICghc3RyZWFtLl93cml0YWJsZVN0YXRlIHx8ICFzdHJlYW0uX3dyaXRhYmxlU3RhdGUuZW5kZWQpIGVyciA9IG5ldyBFUlJfU1RSRUFNX1BSRU1BVFVSRV9DTE9TRSgpO1xuICAgICAgcmV0dXJuIGNhbGxiYWNrLmNhbGwoc3RyZWFtLCBlcnIpO1xuICAgIH1cbiAgfTtcbiAgdmFyIG9ucmVxdWVzdCA9IGZ1bmN0aW9uIG9ucmVxdWVzdCgpIHtcbiAgICBzdHJlYW0ucmVxLm9uKCdmaW5pc2gnLCBvbmZpbmlzaCk7XG4gIH07XG4gIGlmIChpc1JlcXVlc3Qoc3RyZWFtKSkge1xuICAgIHN0cmVhbS5vbignY29tcGxldGUnLCBvbmZpbmlzaCk7XG4gICAgc3RyZWFtLm9uKCdhYm9ydCcsIG9uY2xvc2UpO1xuICAgIGlmIChzdHJlYW0ucmVxKSBvbnJlcXVlc3QoKTtlbHNlIHN0cmVhbS5vbigncmVxdWVzdCcsIG9ucmVxdWVzdCk7XG4gIH0gZWxzZSBpZiAod3JpdGFibGUgJiYgIXN0cmVhbS5fd3JpdGFibGVTdGF0ZSkge1xuICAgIC8vIGxlZ2FjeSBzdHJlYW1zXG4gICAgc3RyZWFtLm9uKCdlbmQnLCBvbmxlZ2FjeWZpbmlzaCk7XG4gICAgc3RyZWFtLm9uKCdjbG9zZScsIG9ubGVnYWN5ZmluaXNoKTtcbiAgfVxuICBzdHJlYW0ub24oJ2VuZCcsIG9uZW5kKTtcbiAgc3RyZWFtLm9uKCdmaW5pc2gnLCBvbmZpbmlzaCk7XG4gIGlmIChvcHRzLmVycm9yICE9PSBmYWxzZSkgc3RyZWFtLm9uKCdlcnJvcicsIG9uZXJyb3IpO1xuICBzdHJlYW0ub24oJ2Nsb3NlJywgb25jbG9zZSk7XG4gIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgc3RyZWFtLnJlbW92ZUxpc3RlbmVyKCdjb21wbGV0ZScsIG9uZmluaXNoKTtcbiAgICBzdHJlYW0ucmVtb3ZlTGlzdGVuZXIoJ2Fib3J0Jywgb25jbG9zZSk7XG4gICAgc3RyZWFtLnJlbW92ZUxpc3RlbmVyKCdyZXF1ZXN0Jywgb25yZXF1ZXN0KTtcbiAgICBpZiAoc3RyZWFtLnJlcSkgc3RyZWFtLnJlcS5yZW1vdmVMaXN0ZW5lcignZmluaXNoJywgb25maW5pc2gpO1xuICAgIHN0cmVhbS5yZW1vdmVMaXN0ZW5lcignZW5kJywgb25sZWdhY3lmaW5pc2gpO1xuICAgIHN0cmVhbS5yZW1vdmVMaXN0ZW5lcignY2xvc2UnLCBvbmxlZ2FjeWZpbmlzaCk7XG4gICAgc3RyZWFtLnJlbW92ZUxpc3RlbmVyKCdmaW5pc2gnLCBvbmZpbmlzaCk7XG4gICAgc3RyZWFtLnJlbW92ZUxpc3RlbmVyKCdlbmQnLCBvbmVuZCk7XG4gICAgc3RyZWFtLnJlbW92ZUxpc3RlbmVyKCdlcnJvcicsIG9uZXJyb3IpO1xuICAgIHN0cmVhbS5yZW1vdmVMaXN0ZW5lcignY2xvc2UnLCBvbmNsb3NlKTtcbiAgfTtcbn1cbm1vZHVsZS5leHBvcnRzID0gZW9zOyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/ripemd160/node_modules/readable-stream/lib/internal/streams/end-of-stream.js\n");

/***/ }),

/***/ "./node_modules/ripemd160/node_modules/readable-stream/lib/internal/streams/from-browser.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/ripemd160/node_modules/readable-stream/lib/internal/streams/from-browser.js ***!
  \**************************************************************************************************/
/***/ (function(module) {

eval("module.exports = function () {\n  throw new Error('Readable.from is not available in the browser')\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcmlwZW1kMTYwL25vZGVfbW9kdWxlcy9yZWFkYWJsZS1zdHJlYW0vbGliL2ludGVybmFsL3N0cmVhbXMvZnJvbS1icm93c2VyLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvcmlwZW1kMTYwL25vZGVfbW9kdWxlcy9yZWFkYWJsZS1zdHJlYW0vbGliL2ludGVybmFsL3N0cmVhbXMvZnJvbS1icm93c2VyLmpzPzg1ZWUiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoKSB7XG4gIHRocm93IG5ldyBFcnJvcignUmVhZGFibGUuZnJvbSBpcyBub3QgYXZhaWxhYmxlIGluIHRoZSBicm93c2VyJylcbn07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/ripemd160/node_modules/readable-stream/lib/internal/streams/from-browser.js\n");

/***/ }),

/***/ "./node_modules/ripemd160/node_modules/readable-stream/lib/internal/streams/pipeline.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/ripemd160/node_modules/readable-stream/lib/internal/streams/pipeline.js ***!
  \**********************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval("// Ported from https://github.com/mafintosh/pump with\n// permission from the author, Mathias Buus (@mafintosh).\n\n\n\nvar eos;\nfunction once(callback) {\n  var called = false;\n  return function () {\n    if (called) return;\n    called = true;\n    callback.apply(void 0, arguments);\n  };\n}\nvar _require$codes = (__webpack_require__(/*! ../../../errors */ \"./node_modules/ripemd160/node_modules/readable-stream/errors-browser.js\").codes),\n  ERR_MISSING_ARGS = _require$codes.ERR_MISSING_ARGS,\n  ERR_STREAM_DESTROYED = _require$codes.ERR_STREAM_DESTROYED;\nfunction noop(err) {\n  // Rethrow the error if it exists to avoid swallowing it\n  if (err) throw err;\n}\nfunction isRequest(stream) {\n  return stream.setHeader && typeof stream.abort === 'function';\n}\nfunction destroyer(stream, reading, writing, callback) {\n  callback = once(callback);\n  var closed = false;\n  stream.on('close', function () {\n    closed = true;\n  });\n  if (eos === undefined) eos = __webpack_require__(/*! ./end-of-stream */ \"./node_modules/ripemd160/node_modules/readable-stream/lib/internal/streams/end-of-stream.js\");\n  eos(stream, {\n    readable: reading,\n    writable: writing\n  }, function (err) {\n    if (err) return callback(err);\n    closed = true;\n    callback();\n  });\n  var destroyed = false;\n  return function (err) {\n    if (closed) return;\n    if (destroyed) return;\n    destroyed = true;\n\n    // request.destroy just do .end - .abort is what we want\n    if (isRequest(stream)) return stream.abort();\n    if (typeof stream.destroy === 'function') return stream.destroy();\n    callback(err || new ERR_STREAM_DESTROYED('pipe'));\n  };\n}\nfunction call(fn) {\n  fn();\n}\nfunction pipe(from, to) {\n  return from.pipe(to);\n}\nfunction popCallback(streams) {\n  if (!streams.length) return noop;\n  if (typeof streams[streams.length - 1] !== 'function') return noop;\n  return streams.pop();\n}\nfunction pipeline() {\n  for (var _len = arguments.length, streams = new Array(_len), _key = 0; _key < _len; _key++) {\n    streams[_key] = arguments[_key];\n  }\n  var callback = popCallback(streams);\n  if (Array.isArray(streams[0])) streams = streams[0];\n  if (streams.length < 2) {\n    throw new ERR_MISSING_ARGS('streams');\n  }\n  var error;\n  var destroys = streams.map(function (stream, i) {\n    var reading = i < streams.length - 1;\n    var writing = i > 0;\n    return destroyer(stream, reading, writing, function (err) {\n      if (!error) error = err;\n      if (err) destroys.forEach(call);\n      if (reading) return;\n      destroys.forEach(call);\n      callback(error);\n    });\n  });\n  return streams.reduce(pipe);\n}\nmodule.exports = pipeline;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcmlwZW1kMTYwL25vZGVfbW9kdWxlcy9yZWFkYWJsZS1zdHJlYW0vbGliL2ludGVybmFsL3N0cmVhbXMvcGlwZWxpbmUuanMuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTs7QUFFYTs7QUFFYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUIsNkhBQWdDO0FBQ3JEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0gsK0JBQStCLG1CQUFPLENBQUMsb0hBQWlCO0FBQ3hEO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5RUFBeUUsYUFBYTtBQUN0RjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLEdBQUc7QUFDSDtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3JpcGVtZDE2MC9ub2RlX21vZHVsZXMvcmVhZGFibGUtc3RyZWFtL2xpYi9pbnRlcm5hbC9zdHJlYW1zL3BpcGVsaW5lLmpzPzAwMjciXSwic291cmNlc0NvbnRlbnQiOlsiLy8gUG9ydGVkIGZyb20gaHR0cHM6Ly9naXRodWIuY29tL21hZmludG9zaC9wdW1wIHdpdGhcbi8vIHBlcm1pc3Npb24gZnJvbSB0aGUgYXV0aG9yLCBNYXRoaWFzIEJ1dXMgKEBtYWZpbnRvc2gpLlxuXG4ndXNlIHN0cmljdCc7XG5cbnZhciBlb3M7XG5mdW5jdGlvbiBvbmNlKGNhbGxiYWNrKSB7XG4gIHZhciBjYWxsZWQgPSBmYWxzZTtcbiAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICBpZiAoY2FsbGVkKSByZXR1cm47XG4gICAgY2FsbGVkID0gdHJ1ZTtcbiAgICBjYWxsYmFjay5hcHBseSh2b2lkIDAsIGFyZ3VtZW50cyk7XG4gIH07XG59XG52YXIgX3JlcXVpcmUkY29kZXMgPSByZXF1aXJlKCcuLi8uLi8uLi9lcnJvcnMnKS5jb2RlcyxcbiAgRVJSX01JU1NJTkdfQVJHUyA9IF9yZXF1aXJlJGNvZGVzLkVSUl9NSVNTSU5HX0FSR1MsXG4gIEVSUl9TVFJFQU1fREVTVFJPWUVEID0gX3JlcXVpcmUkY29kZXMuRVJSX1NUUkVBTV9ERVNUUk9ZRUQ7XG5mdW5jdGlvbiBub29wKGVycikge1xuICAvLyBSZXRocm93IHRoZSBlcnJvciBpZiBpdCBleGlzdHMgdG8gYXZvaWQgc3dhbGxvd2luZyBpdFxuICBpZiAoZXJyKSB0aHJvdyBlcnI7XG59XG5mdW5jdGlvbiBpc1JlcXVlc3Qoc3RyZWFtKSB7XG4gIHJldHVybiBzdHJlYW0uc2V0SGVhZGVyICYmIHR5cGVvZiBzdHJlYW0uYWJvcnQgPT09ICdmdW5jdGlvbic7XG59XG5mdW5jdGlvbiBkZXN0cm95ZXIoc3RyZWFtLCByZWFkaW5nLCB3cml0aW5nLCBjYWxsYmFjaykge1xuICBjYWxsYmFjayA9IG9uY2UoY2FsbGJhY2spO1xuICB2YXIgY2xvc2VkID0gZmFsc2U7XG4gIHN0cmVhbS5vbignY2xvc2UnLCBmdW5jdGlvbiAoKSB7XG4gICAgY2xvc2VkID0gdHJ1ZTtcbiAgfSk7XG4gIGlmIChlb3MgPT09IHVuZGVmaW5lZCkgZW9zID0gcmVxdWlyZSgnLi9lbmQtb2Ytc3RyZWFtJyk7XG4gIGVvcyhzdHJlYW0sIHtcbiAgICByZWFkYWJsZTogcmVhZGluZyxcbiAgICB3cml0YWJsZTogd3JpdGluZ1xuICB9LCBmdW5jdGlvbiAoZXJyKSB7XG4gICAgaWYgKGVycikgcmV0dXJuIGNhbGxiYWNrKGVycik7XG4gICAgY2xvc2VkID0gdHJ1ZTtcbiAgICBjYWxsYmFjaygpO1xuICB9KTtcbiAgdmFyIGRlc3Ryb3llZCA9IGZhbHNlO1xuICByZXR1cm4gZnVuY3Rpb24gKGVycikge1xuICAgIGlmIChjbG9zZWQpIHJldHVybjtcbiAgICBpZiAoZGVzdHJveWVkKSByZXR1cm47XG4gICAgZGVzdHJveWVkID0gdHJ1ZTtcblxuICAgIC8vIHJlcXVlc3QuZGVzdHJveSBqdXN0IGRvIC5lbmQgLSAuYWJvcnQgaXMgd2hhdCB3ZSB3YW50XG4gICAgaWYgKGlzUmVxdWVzdChzdHJlYW0pKSByZXR1cm4gc3RyZWFtLmFib3J0KCk7XG4gICAgaWYgKHR5cGVvZiBzdHJlYW0uZGVzdHJveSA9PT0gJ2Z1bmN0aW9uJykgcmV0dXJuIHN0cmVhbS5kZXN0cm95KCk7XG4gICAgY2FsbGJhY2soZXJyIHx8IG5ldyBFUlJfU1RSRUFNX0RFU1RST1lFRCgncGlwZScpKTtcbiAgfTtcbn1cbmZ1bmN0aW9uIGNhbGwoZm4pIHtcbiAgZm4oKTtcbn1cbmZ1bmN0aW9uIHBpcGUoZnJvbSwgdG8pIHtcbiAgcmV0dXJuIGZyb20ucGlwZSh0byk7XG59XG5mdW5jdGlvbiBwb3BDYWxsYmFjayhzdHJlYW1zKSB7XG4gIGlmICghc3RyZWFtcy5sZW5ndGgpIHJldHVybiBub29wO1xuICBpZiAodHlwZW9mIHN0cmVhbXNbc3RyZWFtcy5sZW5ndGggLSAxXSAhPT0gJ2Z1bmN0aW9uJykgcmV0dXJuIG5vb3A7XG4gIHJldHVybiBzdHJlYW1zLnBvcCgpO1xufVxuZnVuY3Rpb24gcGlwZWxpbmUoKSB7XG4gIGZvciAodmFyIF9sZW4gPSBhcmd1bWVudHMubGVuZ3RoLCBzdHJlYW1zID0gbmV3IEFycmF5KF9sZW4pLCBfa2V5ID0gMDsgX2tleSA8IF9sZW47IF9rZXkrKykge1xuICAgIHN0cmVhbXNbX2tleV0gPSBhcmd1bWVudHNbX2tleV07XG4gIH1cbiAgdmFyIGNhbGxiYWNrID0gcG9wQ2FsbGJhY2soc3RyZWFtcyk7XG4gIGlmIChBcnJheS5pc0FycmF5KHN0cmVhbXNbMF0pKSBzdHJlYW1zID0gc3RyZWFtc1swXTtcbiAgaWYgKHN0cmVhbXMubGVuZ3RoIDwgMikge1xuICAgIHRocm93IG5ldyBFUlJfTUlTU0lOR19BUkdTKCdzdHJlYW1zJyk7XG4gIH1cbiAgdmFyIGVycm9yO1xuICB2YXIgZGVzdHJveXMgPSBzdHJlYW1zLm1hcChmdW5jdGlvbiAoc3RyZWFtLCBpKSB7XG4gICAgdmFyIHJlYWRpbmcgPSBpIDwgc3RyZWFtcy5sZW5ndGggLSAxO1xuICAgIHZhciB3cml0aW5nID0gaSA+IDA7XG4gICAgcmV0dXJuIGRlc3Ryb3llcihzdHJlYW0sIHJlYWRpbmcsIHdyaXRpbmcsIGZ1bmN0aW9uIChlcnIpIHtcbiAgICAgIGlmICghZXJyb3IpIGVycm9yID0gZXJyO1xuICAgICAgaWYgKGVycikgZGVzdHJveXMuZm9yRWFjaChjYWxsKTtcbiAgICAgIGlmIChyZWFkaW5nKSByZXR1cm47XG4gICAgICBkZXN0cm95cy5mb3JFYWNoKGNhbGwpO1xuICAgICAgY2FsbGJhY2soZXJyb3IpO1xuICAgIH0pO1xuICB9KTtcbiAgcmV0dXJuIHN0cmVhbXMucmVkdWNlKHBpcGUpO1xufVxubW9kdWxlLmV4cG9ydHMgPSBwaXBlbGluZTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/ripemd160/node_modules/readable-stream/lib/internal/streams/pipeline.js\n");

/***/ }),

/***/ "./node_modules/ripemd160/node_modules/readable-stream/lib/internal/streams/state.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/ripemd160/node_modules/readable-stream/lib/internal/streams/state.js ***!
  \*******************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval("\n\nvar ERR_INVALID_OPT_VALUE = (__webpack_require__(/*! ../../../errors */ \"./node_modules/ripemd160/node_modules/readable-stream/errors-browser.js\").codes.ERR_INVALID_OPT_VALUE);\nfunction highWaterMarkFrom(options, isDuplex, duplexKey) {\n  return options.highWaterMark != null ? options.highWaterMark : isDuplex ? options[duplexKey] : null;\n}\nfunction getHighWaterMark(state, options, duplexKey, isDuplex) {\n  var hwm = highWaterMarkFrom(options, isDuplex, duplexKey);\n  if (hwm != null) {\n    if (!(isFinite(hwm) && Math.floor(hwm) === hwm) || hwm < 0) {\n      var name = isDuplex ? duplexKey : 'highWaterMark';\n      throw new ERR_INVALID_OPT_VALUE(name, hwm);\n    }\n    return Math.floor(hwm);\n  }\n\n  // Default value\n  return state.objectMode ? 16 : 16 * 1024;\n}\nmodule.exports = {\n  getHighWaterMark: getHighWaterMark\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcmlwZW1kMTYwL25vZGVfbW9kdWxlcy9yZWFkYWJsZS1zdHJlYW0vbGliL2ludGVybmFsL3N0cmVhbXMvc3RhdGUuanMuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsNEJBQTRCLG1KQUFzRDtBQUNsRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9yaXBlbWQxNjAvbm9kZV9tb2R1bGVzL3JlYWRhYmxlLXN0cmVhbS9saWIvaW50ZXJuYWwvc3RyZWFtcy9zdGF0ZS5qcz9lZjllIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxudmFyIEVSUl9JTlZBTElEX09QVF9WQUxVRSA9IHJlcXVpcmUoJy4uLy4uLy4uL2Vycm9ycycpLmNvZGVzLkVSUl9JTlZBTElEX09QVF9WQUxVRTtcbmZ1bmN0aW9uIGhpZ2hXYXRlck1hcmtGcm9tKG9wdGlvbnMsIGlzRHVwbGV4LCBkdXBsZXhLZXkpIHtcbiAgcmV0dXJuIG9wdGlvbnMuaGlnaFdhdGVyTWFyayAhPSBudWxsID8gb3B0aW9ucy5oaWdoV2F0ZXJNYXJrIDogaXNEdXBsZXggPyBvcHRpb25zW2R1cGxleEtleV0gOiBudWxsO1xufVxuZnVuY3Rpb24gZ2V0SGlnaFdhdGVyTWFyayhzdGF0ZSwgb3B0aW9ucywgZHVwbGV4S2V5LCBpc0R1cGxleCkge1xuICB2YXIgaHdtID0gaGlnaFdhdGVyTWFya0Zyb20ob3B0aW9ucywgaXNEdXBsZXgsIGR1cGxleEtleSk7XG4gIGlmIChod20gIT0gbnVsbCkge1xuICAgIGlmICghKGlzRmluaXRlKGh3bSkgJiYgTWF0aC5mbG9vcihod20pID09PSBod20pIHx8IGh3bSA8IDApIHtcbiAgICAgIHZhciBuYW1lID0gaXNEdXBsZXggPyBkdXBsZXhLZXkgOiAnaGlnaFdhdGVyTWFyayc7XG4gICAgICB0aHJvdyBuZXcgRVJSX0lOVkFMSURfT1BUX1ZBTFVFKG5hbWUsIGh3bSk7XG4gICAgfVxuICAgIHJldHVybiBNYXRoLmZsb29yKGh3bSk7XG4gIH1cblxuICAvLyBEZWZhdWx0IHZhbHVlXG4gIHJldHVybiBzdGF0ZS5vYmplY3RNb2RlID8gMTYgOiAxNiAqIDEwMjQ7XG59XG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgZ2V0SGlnaFdhdGVyTWFyazogZ2V0SGlnaFdhdGVyTWFya1xufTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/ripemd160/node_modules/readable-stream/lib/internal/streams/state.js\n");

/***/ }),

/***/ "./node_modules/ripemd160/node_modules/readable-stream/lib/internal/streams/stream-browser.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/ripemd160/node_modules/readable-stream/lib/internal/streams/stream-browser.js ***!
  \****************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("module.exports = __webpack_require__(/*! events */ \"./node_modules/events/events.js\").EventEmitter;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcmlwZW1kMTYwL25vZGVfbW9kdWxlcy9yZWFkYWJsZS1zdHJlYW0vbGliL2ludGVybmFsL3N0cmVhbXMvc3RyZWFtLWJyb3dzZXIuanMuanMiLCJtYXBwaW5ncyI6IkFBQUEsa0dBQStDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9yaXBlbWQxNjAvbm9kZV9tb2R1bGVzL3JlYWRhYmxlLXN0cmVhbS9saWIvaW50ZXJuYWwvc3RyZWFtcy9zdHJlYW0tYnJvd3Nlci5qcz9lOWExIl0sInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnZXZlbnRzJykuRXZlbnRFbWl0dGVyO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/ripemd160/node_modules/readable-stream/lib/internal/streams/stream-browser.js\n");

/***/ }),

/***/ "./node_modules/ripemd160/node_modules/readable-stream/readable-browser.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/ripemd160/node_modules/readable-stream/readable-browser.js ***!
  \*********************************************************************************/
/***/ (function(module, exports, __webpack_require__) {

eval("exports = module.exports = __webpack_require__(/*! ./lib/_stream_readable.js */ \"./node_modules/ripemd160/node_modules/readable-stream/lib/_stream_readable.js\");\nexports.Stream = exports;\nexports.Readable = exports;\nexports.Writable = __webpack_require__(/*! ./lib/_stream_writable.js */ \"./node_modules/ripemd160/node_modules/readable-stream/lib/_stream_writable.js\");\nexports.Duplex = __webpack_require__(/*! ./lib/_stream_duplex.js */ \"./node_modules/ripemd160/node_modules/readable-stream/lib/_stream_duplex.js\");\nexports.Transform = __webpack_require__(/*! ./lib/_stream_transform.js */ \"./node_modules/ripemd160/node_modules/readable-stream/lib/_stream_transform.js\");\nexports.PassThrough = __webpack_require__(/*! ./lib/_stream_passthrough.js */ \"./node_modules/ripemd160/node_modules/readable-stream/lib/_stream_passthrough.js\");\nexports.finished = __webpack_require__(/*! ./lib/internal/streams/end-of-stream.js */ \"./node_modules/ripemd160/node_modules/readable-stream/lib/internal/streams/end-of-stream.js\");\nexports.pipeline = __webpack_require__(/*! ./lib/internal/streams/pipeline.js */ \"./node_modules/ripemd160/node_modules/readable-stream/lib/internal/streams/pipeline.js\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcmlwZW1kMTYwL25vZGVfbW9kdWxlcy9yZWFkYWJsZS1zdHJlYW0vcmVhZGFibGUtYnJvd3Nlci5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBQSxVQUFVLHNKQUFxRDtBQUMvRCxjQUFjO0FBQ2QsZ0JBQWdCO0FBQ2hCLHdKQUF1RDtBQUN2RCxrSkFBbUQ7QUFDbkQsMkpBQXlEO0FBQ3pELGlLQUE2RDtBQUM3RCxvTEFBcUU7QUFDckUsMEtBQWdFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9yaXBlbWQxNjAvbm9kZV9tb2R1bGVzL3JlYWRhYmxlLXN0cmVhbS9yZWFkYWJsZS1icm93c2VyLmpzP2M5OTgiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9saWIvX3N0cmVhbV9yZWFkYWJsZS5qcycpO1xuZXhwb3J0cy5TdHJlYW0gPSBleHBvcnRzO1xuZXhwb3J0cy5SZWFkYWJsZSA9IGV4cG9ydHM7XG5leHBvcnRzLldyaXRhYmxlID0gcmVxdWlyZSgnLi9saWIvX3N0cmVhbV93cml0YWJsZS5qcycpO1xuZXhwb3J0cy5EdXBsZXggPSByZXF1aXJlKCcuL2xpYi9fc3RyZWFtX2R1cGxleC5qcycpO1xuZXhwb3J0cy5UcmFuc2Zvcm0gPSByZXF1aXJlKCcuL2xpYi9fc3RyZWFtX3RyYW5zZm9ybS5qcycpO1xuZXhwb3J0cy5QYXNzVGhyb3VnaCA9IHJlcXVpcmUoJy4vbGliL19zdHJlYW1fcGFzc3Rocm91Z2guanMnKTtcbmV4cG9ydHMuZmluaXNoZWQgPSByZXF1aXJlKCcuL2xpYi9pbnRlcm5hbC9zdHJlYW1zL2VuZC1vZi1zdHJlYW0uanMnKTtcbmV4cG9ydHMucGlwZWxpbmUgPSByZXF1aXJlKCcuL2xpYi9pbnRlcm5hbC9zdHJlYW1zL3BpcGVsaW5lLmpzJyk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/ripemd160/node_modules/readable-stream/readable-browser.js\n");

/***/ }),

/***/ "./node_modules/rlp/dist.browser/index.js":
/*!************************************************!*\
  !*** ./node_modules/rlp/dist.browser/index.js ***!
  \************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"./node_modules/buffer/index.js\")[\"Buffer\"];\n\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.getLength = exports.decode = exports.encode = void 0;\nvar bn_js_1 = __importDefault(__webpack_require__(/*! bn.js */ \"./node_modules/rlp/node_modules/bn.js/lib/bn.js\"));\n/**\n * RLP Encoding based on: https://github.com/ethereum/wiki/wiki/%5BEnglish%5D-RLP\n * This function takes in a data, convert it to buffer if not, and a length for recursion\n * @param input - will be converted to buffer\n * @returns returns buffer of encoded data\n **/\nfunction encode(input) {\n    if (Array.isArray(input)) {\n        var output = [];\n        for (var i = 0; i < input.length; i++) {\n            output.push(encode(input[i]));\n        }\n        var buf = Buffer.concat(output);\n        return Buffer.concat([encodeLength(buf.length, 192), buf]);\n    }\n    else {\n        var inputBuf = toBuffer(input);\n        return inputBuf.length === 1 && inputBuf[0] < 128\n            ? inputBuf\n            : Buffer.concat([encodeLength(inputBuf.length, 128), inputBuf]);\n    }\n}\nexports.encode = encode;\n/**\n * Parse integers. Check if there is no leading zeros\n * @param v The value to parse\n * @param base The base to parse the integer into\n */\nfunction safeParseInt(v, base) {\n    if (v[0] === '0' && v[1] === '0') {\n        throw new Error('invalid RLP: extra zeros');\n    }\n    return parseInt(v, base);\n}\nfunction encodeLength(len, offset) {\n    if (len < 56) {\n        return Buffer.from([len + offset]);\n    }\n    else {\n        var hexLength = intToHex(len);\n        var lLength = hexLength.length / 2;\n        var firstByte = intToHex(offset + 55 + lLength);\n        return Buffer.from(firstByte + hexLength, 'hex');\n    }\n}\nfunction decode(input, stream) {\n    if (stream === void 0) { stream = false; }\n    if (!input || input.length === 0) {\n        return Buffer.from([]);\n    }\n    var inputBuffer = toBuffer(input);\n    var decoded = _decode(inputBuffer);\n    if (stream) {\n        return decoded;\n    }\n    if (decoded.remainder.length !== 0) {\n        throw new Error('invalid remainder');\n    }\n    return decoded.data;\n}\nexports.decode = decode;\n/**\n * Get the length of the RLP input\n * @param input\n * @returns The length of the input or an empty Buffer if no input\n */\nfunction getLength(input) {\n    if (!input || input.length === 0) {\n        return Buffer.from([]);\n    }\n    var inputBuffer = toBuffer(input);\n    var firstByte = inputBuffer[0];\n    if (firstByte <= 0x7f) {\n        return inputBuffer.length;\n    }\n    else if (firstByte <= 0xb7) {\n        return firstByte - 0x7f;\n    }\n    else if (firstByte <= 0xbf) {\n        return firstByte - 0xb6;\n    }\n    else if (firstByte <= 0xf7) {\n        // a list between  0-55 bytes long\n        return firstByte - 0xbf;\n    }\n    else {\n        // a list  over 55 bytes long\n        var llength = firstByte - 0xf6;\n        var length_1 = safeParseInt(inputBuffer.slice(1, llength).toString('hex'), 16);\n        return llength + length_1;\n    }\n}\nexports.getLength = getLength;\n/** Decode an input with RLP */\nfunction _decode(input) {\n    var length, llength, data, innerRemainder, d;\n    var decoded = [];\n    var firstByte = input[0];\n    if (firstByte <= 0x7f) {\n        // a single byte whose value is in the [0x00, 0x7f] range, that byte is its own RLP encoding.\n        return {\n            data: input.slice(0, 1),\n            remainder: input.slice(1),\n        };\n    }\n    else if (firstByte <= 0xb7) {\n        // string is 0-55 bytes long. A single byte with value 0x80 plus the length of the string followed by the string\n        // The range of the first byte is [0x80, 0xb7]\n        length = firstByte - 0x7f;\n        // set 0x80 null to 0\n        if (firstByte === 0x80) {\n            data = Buffer.from([]);\n        }\n        else {\n            data = input.slice(1, length);\n        }\n        if (length === 2 && data[0] < 0x80) {\n            throw new Error('invalid rlp encoding: byte must be less 0x80');\n        }\n        return {\n            data: data,\n            remainder: input.slice(length),\n        };\n    }\n    else if (firstByte <= 0xbf) {\n        // string is greater than 55 bytes long. A single byte with the value (0xb7 plus the length of the length),\n        // followed by the length, followed by the string\n        llength = firstByte - 0xb6;\n        if (input.length - 1 < llength) {\n            throw new Error('invalid RLP: not enough bytes for string length');\n        }\n        length = safeParseInt(input.slice(1, llength).toString('hex'), 16);\n        if (length <= 55) {\n            throw new Error('invalid RLP: expected string length to be greater than 55');\n        }\n        data = input.slice(llength, length + llength);\n        if (data.length < length) {\n            throw new Error('invalid RLP: not enough bytes for string');\n        }\n        return {\n            data: data,\n            remainder: input.slice(length + llength),\n        };\n    }\n    else if (firstByte <= 0xf7) {\n        // a list between  0-55 bytes long\n        length = firstByte - 0xbf;\n        innerRemainder = input.slice(1, length);\n        while (innerRemainder.length) {\n            d = _decode(innerRemainder);\n            decoded.push(d.data);\n            innerRemainder = d.remainder;\n        }\n        return {\n            data: decoded,\n            remainder: input.slice(length),\n        };\n    }\n    else {\n        // a list  over 55 bytes long\n        llength = firstByte - 0xf6;\n        length = safeParseInt(input.slice(1, llength).toString('hex'), 16);\n        var totalLength = llength + length;\n        if (totalLength > input.length) {\n            throw new Error('invalid rlp: total length is larger than the data');\n        }\n        innerRemainder = input.slice(llength, totalLength);\n        if (innerRemainder.length === 0) {\n            throw new Error('invalid rlp, List has a invalid length');\n        }\n        while (innerRemainder.length) {\n            d = _decode(innerRemainder);\n            decoded.push(d.data);\n            innerRemainder = d.remainder;\n        }\n        return {\n            data: decoded,\n            remainder: input.slice(totalLength),\n        };\n    }\n}\n/** Check if a string is prefixed by 0x */\nfunction isHexPrefixed(str) {\n    return str.slice(0, 2) === '0x';\n}\n/** Removes 0x from a given String */\nfunction stripHexPrefix(str) {\n    if (typeof str !== 'string') {\n        return str;\n    }\n    return isHexPrefixed(str) ? str.slice(2) : str;\n}\n/** Transform an integer into its hexadecimal value */\nfunction intToHex(integer) {\n    if (integer < 0) {\n        throw new Error('Invalid integer as argument, must be unsigned!');\n    }\n    var hex = integer.toString(16);\n    return hex.length % 2 ? \"0\" + hex : hex;\n}\n/** Pad a string to be even */\nfunction padToEven(a) {\n    return a.length % 2 ? \"0\" + a : a;\n}\n/** Transform an integer into a Buffer */\nfunction intToBuffer(integer) {\n    var hex = intToHex(integer);\n    return Buffer.from(hex, 'hex');\n}\n/** Transform anything into a Buffer */\nfunction toBuffer(v) {\n    if (!Buffer.isBuffer(v)) {\n        if (typeof v === 'string') {\n            if (isHexPrefixed(v)) {\n                return Buffer.from(padToEven(stripHexPrefix(v)), 'hex');\n            }\n            else {\n                return Buffer.from(v);\n            }\n        }\n        else if (typeof v === 'number' || typeof v === 'bigint') {\n            if (!v) {\n                return Buffer.from([]);\n            }\n            else {\n                return intToBuffer(v);\n            }\n        }\n        else if (v === null || v === undefined) {\n            return Buffer.from([]);\n        }\n        else if (v instanceof Uint8Array) {\n            return Buffer.from(v);\n        }\n        else if (bn_js_1.default.isBN(v)) {\n            // converts a BN to a Buffer\n            return Buffer.from(v.toArray());\n        }\n        else {\n            throw new Error('invalid type');\n        }\n    }\n    return v;\n}\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/rlp/dist.browser/index.js\n");

/***/ }),

/***/ "./node_modules/rlp/node_modules/bn.js/lib/bn.js":
/*!*******************************************************!*\
  !*** ./node_modules/rlp/node_modules/bn.js/lib/bn.js ***!
  \*******************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("/* module decorator */ module = __webpack_require__.nmd(module);\n(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = (__webpack_require__(/*! buffer */ \"?ce10\").Buffer);\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [number & 0x3ffffff];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [0];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this._strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // '0' - '9'\n    if (c >= 48 && c <= 57) {\n      return c - 48;\n    // 'A' - 'F'\n    } else if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    } else {\n      assert(false, 'Invalid character in ' + string);\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this._strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var b = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        b = c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        b = c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        b = c;\n      }\n      assert(c >= 0 && b < mul, 'Invalid character');\n      r += b;\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [0];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this._strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  function move (dest, src) {\n    dest.words = src.words;\n    dest.length = src.length;\n    dest.negative = src.negative;\n    dest.red = src.red;\n  }\n\n  BN.prototype._move = function _move (dest) {\n    move(dest, this);\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype._strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  // Check Symbol.for because not everywhere where Symbol defined\n  // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol#Browser_compatibility\n  if (typeof Symbol !== 'undefined' && typeof Symbol.for === 'function') {\n    try {\n      BN.prototype[Symbol.for('nodejs.util.inspect.custom')] = inspect;\n    } catch (e) {\n      BN.prototype.inspect = inspect;\n    }\n  } else {\n    BN.prototype.inspect = inspect;\n  }\n\n  function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  }\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modrn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16, 2);\n  };\n\n  if (Buffer) {\n    BN.prototype.toBuffer = function toBuffer (endian, length) {\n      return this.toArrayLike(Buffer, endian, length);\n    };\n  }\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  var allocate = function allocate (ArrayType, size) {\n    if (ArrayType.allocUnsafe) {\n      return ArrayType.allocUnsafe(size);\n    }\n    return new ArrayType(size);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    this._strip();\n\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    var res = allocate(ArrayType, reqLength);\n    var postfix = endian === 'le' ? 'LE' : 'BE';\n    this['_toArrayLike' + postfix](res, byteLength);\n    return res;\n  };\n\n  BN.prototype._toArrayLikeLE = function _toArrayLikeLE (res, byteLength) {\n    var position = 0;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position++] = word & 0xff;\n      if (position < res.length) {\n        res[position++] = (word >> 8) & 0xff;\n      }\n      if (position < res.length) {\n        res[position++] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position < res.length) {\n          res[position++] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position < res.length) {\n      res[position++] = carry;\n\n      while (position < res.length) {\n        res[position++] = 0;\n      }\n    }\n  };\n\n  BN.prototype._toArrayLikeBE = function _toArrayLikeBE (res, byteLength) {\n    var position = res.length - 1;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position--] = word & 0xff;\n      if (position >= 0) {\n        res[position--] = (word >> 8) & 0xff;\n      }\n      if (position >= 0) {\n        res[position--] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position >= 0) {\n          res[position--] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position >= 0) {\n      res[position--] = carry;\n\n      while (position >= 0) {\n        res[position--] = 0;\n      }\n    }\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] >>> wbit) & 0x01;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this._strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this._strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this._strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    // Temporary disable, see https://github.com/indutny/bn.js/issues/211\n    // var fftm = new FFTM();\n    // return fftm.mulp(self, num, out);\n    return bigMulTo(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out._strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this._strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) <= num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this._strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this._strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q._strip();\n    }\n    a._strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modrn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modrn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || (r2 === 1 && cmp === 0)) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modrn = function modrn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return isNegNum ? -acc : acc;\n  };\n\n  // WARNING: DEPRECATED\n  BN.prototype.modn = function modn (num) {\n    return this.modrn(num);\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    this._strip();\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this._strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is a BN v4 instance\n        r.strip();\n      } else {\n        // r is a BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n\n    move(a, a.umod(this.m)._forceRed(this));\n    return a;\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})( false || module, this);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/rlp/node_modules/bn.js/lib/bn.js\n");

/***/ }),

/***/ "./node_modules/secp256k1/elliptic.js":
/*!********************************************!*\
  !*** ./node_modules/secp256k1/elliptic.js ***!
  \********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("module.exports = __webpack_require__(/*! ./lib */ \"./node_modules/secp256k1/lib/index.js\")(__webpack_require__(/*! ./lib/elliptic */ \"./node_modules/secp256k1/lib/elliptic.js\"))\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc2VjcDI1NmsxL2VsbGlwdGljLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBLGlCQUFpQixtQkFBTyxDQUFDLG9EQUFPLEVBQUUsbUJBQU8sQ0FBQyxnRUFBZ0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3NlY3AyNTZrMS9lbGxpcHRpYy5qcz80NGE5Il0sInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9saWInKShyZXF1aXJlKCcuL2xpYi9lbGxpcHRpYycpKVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/secp256k1/elliptic.js\n");

/***/ }),

/***/ "./node_modules/secp256k1/lib/elliptic.js":
/*!************************************************!*\
  !*** ./node_modules/secp256k1/lib/elliptic.js ***!
  \************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("const EC = (__webpack_require__(/*! elliptic */ \"./node_modules/elliptic/lib/elliptic.js\").ec)\n\nconst ec = new EC('secp256k1')\nconst ecparams = ec.curve\n\n// Hack, we can not use bn.js@5, while elliptic uses bn.js@4\n// See https://github.com/indutny/elliptic/issues/191#issuecomment-569888758\nconst BN = ecparams.n.constructor\n\nfunction loadCompressedPublicKey (first, xbuf) {\n  let x = new BN(xbuf)\n\n  // overflow\n  if (x.cmp(ecparams.p) >= 0) return null\n  x = x.toRed(ecparams.red)\n\n  // compute corresponding Y\n  let y = x.redSqr().redIMul(x).redIAdd(ecparams.b).redSqrt()\n  if ((first === 0x03) !== y.isOdd()) y = y.redNeg()\n\n  return ec.keyPair({ pub: { x: x, y: y } })\n}\n\nfunction loadUncompressedPublicKey (first, xbuf, ybuf) {\n  let x = new BN(xbuf)\n  let y = new BN(ybuf)\n\n  // overflow\n  if (x.cmp(ecparams.p) >= 0 || y.cmp(ecparams.p) >= 0) return null\n\n  x = x.toRed(ecparams.red)\n  y = y.toRed(ecparams.red)\n\n  // is odd flag\n  if ((first === 0x06 || first === 0x07) && y.isOdd() !== (first === 0x07)) return null\n\n  // x*x*x + b = y*y\n  const x3 = x.redSqr().redIMul(x)\n  if (!y.redSqr().redISub(x3.redIAdd(ecparams.b)).isZero()) return null\n\n  return ec.keyPair({ pub: { x: x, y: y } })\n}\n\nfunction loadPublicKey (pubkey) {\n  // length should be validated in interface\n  const first = pubkey[0]\n  switch (first) {\n    case 0x02:\n    case 0x03:\n      if (pubkey.length !== 33) return null\n      return loadCompressedPublicKey(first, pubkey.subarray(1, 33))\n    case 0x04:\n    case 0x06:\n    case 0x07:\n      if (pubkey.length !== 65) return null\n      return loadUncompressedPublicKey(first, pubkey.subarray(1, 33), pubkey.subarray(33, 65))\n    default:\n      return null\n  }\n}\n\nfunction savePublicKey (output, point) {\n  const pubkey = point.encode(null, output.length === 33)\n  // Loop should be faster because we do not need create extra Uint8Array\n  // output.set(new Uint8Array(pubkey))\n  for (let i = 0; i < output.length; ++i) output[i] = pubkey[i]\n}\n\nmodule.exports = {\n  contextRandomize () {\n    return 0\n  },\n\n  privateKeyVerify (seckey) {\n    const bn = new BN(seckey)\n    return bn.cmp(ecparams.n) < 0 && !bn.isZero() ? 0 : 1\n  },\n\n  privateKeyNegate (seckey) {\n    const bn = new BN(seckey)\n    const negate = ecparams.n.sub(bn).umod(ecparams.n).toArrayLike(Uint8Array, 'be', 32)\n    seckey.set(negate)\n    return 0\n  },\n\n  privateKeyTweakAdd (seckey, tweak) {\n    const bn = new BN(tweak)\n    if (bn.cmp(ecparams.n) >= 0) return 1\n\n    bn.iadd(new BN(seckey))\n    if (bn.cmp(ecparams.n) >= 0) bn.isub(ecparams.n)\n    if (bn.isZero()) return 1\n\n    const tweaked = bn.toArrayLike(Uint8Array, 'be', 32)\n    seckey.set(tweaked)\n\n    return 0\n  },\n\n  privateKeyTweakMul (seckey, tweak) {\n    let bn = new BN(tweak)\n    if (bn.cmp(ecparams.n) >= 0 || bn.isZero()) return 1\n\n    bn.imul(new BN(seckey))\n    if (bn.cmp(ecparams.n) >= 0) bn = bn.umod(ecparams.n)\n\n    const tweaked = bn.toArrayLike(Uint8Array, 'be', 32)\n    seckey.set(tweaked)\n\n    return 0\n  },\n\n  publicKeyVerify (pubkey) {\n    const pair = loadPublicKey(pubkey)\n    return pair === null ? 1 : 0\n  },\n\n  publicKeyCreate (output, seckey) {\n    const bn = new BN(seckey)\n    if (bn.cmp(ecparams.n) >= 0 || bn.isZero()) return 1\n\n    const point = ec.keyFromPrivate(seckey).getPublic()\n    savePublicKey(output, point)\n\n    return 0\n  },\n\n  publicKeyConvert (output, pubkey) {\n    const pair = loadPublicKey(pubkey)\n    if (pair === null) return 1\n\n    const point = pair.getPublic()\n    savePublicKey(output, point)\n\n    return 0\n  },\n\n  publicKeyNegate (output, pubkey) {\n    const pair = loadPublicKey(pubkey)\n    if (pair === null) return 1\n\n    const point = pair.getPublic()\n    point.y = point.y.redNeg()\n    savePublicKey(output, point)\n\n    return 0\n  },\n\n  publicKeyCombine (output, pubkeys) {\n    const pairs = new Array(pubkeys.length)\n    for (let i = 0; i < pubkeys.length; ++i) {\n      pairs[i] = loadPublicKey(pubkeys[i])\n      if (pairs[i] === null) return 1\n    }\n\n    let point = pairs[0].getPublic()\n    for (let i = 1; i < pairs.length; ++i) point = point.add(pairs[i].pub)\n    if (point.isInfinity()) return 2\n\n    savePublicKey(output, point)\n\n    return 0\n  },\n\n  publicKeyTweakAdd (output, pubkey, tweak) {\n    const pair = loadPublicKey(pubkey)\n    if (pair === null) return 1\n\n    tweak = new BN(tweak)\n    if (tweak.cmp(ecparams.n) >= 0) return 2\n\n    const point = pair.getPublic().add(ecparams.g.mul(tweak))\n    if (point.isInfinity()) return 2\n\n    savePublicKey(output, point)\n\n    return 0\n  },\n\n  publicKeyTweakMul (output, pubkey, tweak) {\n    const pair = loadPublicKey(pubkey)\n    if (pair === null) return 1\n\n    tweak = new BN(tweak)\n    if (tweak.cmp(ecparams.n) >= 0 || tweak.isZero()) return 2\n\n    const point = pair.getPublic().mul(tweak)\n    savePublicKey(output, point)\n\n    return 0\n  },\n\n  signatureNormalize (sig) {\n    const r = new BN(sig.subarray(0, 32))\n    const s = new BN(sig.subarray(32, 64))\n    if (r.cmp(ecparams.n) >= 0 || s.cmp(ecparams.n) >= 0) return 1\n\n    if (s.cmp(ec.nh) === 1) {\n      sig.set(ecparams.n.sub(s).toArrayLike(Uint8Array, 'be', 32), 32)\n    }\n\n    return 0\n  },\n\n  // Copied 1-to-1 from https://github.com/bitcoinjs/bip66/blob/master/index.js\n  // Adapted for Uint8Array instead Buffer\n  signatureExport (obj, sig) {\n    const sigR = sig.subarray(0, 32)\n    const sigS = sig.subarray(32, 64)\n    if (new BN(sigR).cmp(ecparams.n) >= 0) return 1\n    if (new BN(sigS).cmp(ecparams.n) >= 0) return 1\n\n    const { output } = obj\n\n    // Prepare R\n    let r = output.subarray(4, 4 + 33)\n    r[0] = 0x00\n    r.set(sigR, 1)\n\n    let lenR = 33\n    let posR = 0\n    for (; lenR > 1 && r[posR] === 0x00 && !(r[posR + 1] & 0x80); --lenR, ++posR);\n\n    r = r.subarray(posR)\n    if (r[0] & 0x80) return 1\n    if (lenR > 1 && (r[0] === 0x00) && !(r[1] & 0x80)) return 1\n\n    // Prepare S\n    let s = output.subarray(6 + 33, 6 + 33 + 33)\n    s[0] = 0x00\n    s.set(sigS, 1)\n\n    let lenS = 33\n    let posS = 0\n    for (; lenS > 1 && s[posS] === 0x00 && !(s[posS + 1] & 0x80); --lenS, ++posS);\n\n    s = s.subarray(posS)\n    if (s[0] & 0x80) return 1\n    if (lenS > 1 && (s[0] === 0x00) && !(s[1] & 0x80)) return 1\n\n    // Set output length for return\n    obj.outputlen = 6 + lenR + lenS\n\n    // Output in specified format\n    // 0x30 [total-length] 0x02 [R-length] [R] 0x02 [S-length] [S]\n    output[0] = 0x30\n    output[1] = obj.outputlen - 2\n    output[2] = 0x02\n    output[3] = r.length\n    output.set(r, 4)\n    output[4 + lenR] = 0x02\n    output[5 + lenR] = s.length\n    output.set(s, 6 + lenR)\n\n    return 0\n  },\n\n  // Copied 1-to-1 from https://github.com/bitcoinjs/bip66/blob/master/index.js\n  // Adapted for Uint8Array instead Buffer\n  signatureImport (output, sig) {\n    if (sig.length < 8) return 1\n    if (sig.length > 72) return 1\n    if (sig[0] !== 0x30) return 1\n    if (sig[1] !== sig.length - 2) return 1\n    if (sig[2] !== 0x02) return 1\n\n    const lenR = sig[3]\n    if (lenR === 0) return 1\n    if (5 + lenR >= sig.length) return 1\n    if (sig[4 + lenR] !== 0x02) return 1\n\n    const lenS = sig[5 + lenR]\n    if (lenS === 0) return 1\n    if ((6 + lenR + lenS) !== sig.length) return 1\n\n    if (sig[4] & 0x80) return 1\n    if (lenR > 1 && (sig[4] === 0x00) && !(sig[5] & 0x80)) return 1\n\n    if (sig[lenR + 6] & 0x80) return 1\n    if (lenS > 1 && (sig[lenR + 6] === 0x00) && !(sig[lenR + 7] & 0x80)) return 1\n\n    let sigR = sig.subarray(4, 4 + lenR)\n    if (sigR.length === 33 && sigR[0] === 0x00) sigR = sigR.subarray(1)\n    if (sigR.length > 32) return 1\n\n    let sigS = sig.subarray(6 + lenR)\n    if (sigS.length === 33 && sigS[0] === 0x00) sigS = sigS.slice(1)\n    if (sigS.length > 32) throw new Error('S length is too long')\n\n    let r = new BN(sigR)\n    if (r.cmp(ecparams.n) >= 0) r = new BN(0)\n\n    let s = new BN(sig.subarray(6 + lenR))\n    if (s.cmp(ecparams.n) >= 0) s = new BN(0)\n\n    output.set(r.toArrayLike(Uint8Array, 'be', 32), 0)\n    output.set(s.toArrayLike(Uint8Array, 'be', 32), 32)\n\n    return 0\n  },\n\n  ecdsaSign (obj, message, seckey, data, noncefn) {\n    if (noncefn) {\n      const _noncefn = noncefn\n      noncefn = (counter) => {\n        const nonce = _noncefn(message, seckey, null, data, counter)\n\n        const isValid = nonce instanceof Uint8Array && nonce.length === 32\n        if (!isValid) throw new Error('This is the way')\n\n        return new BN(nonce)\n      }\n    }\n\n    const d = new BN(seckey)\n    if (d.cmp(ecparams.n) >= 0 || d.isZero()) return 1\n\n    let sig\n    try {\n      sig = ec.sign(message, seckey, { canonical: true, k: noncefn, pers: data })\n    } catch (err) {\n      return 1\n    }\n\n    obj.signature.set(sig.r.toArrayLike(Uint8Array, 'be', 32), 0)\n    obj.signature.set(sig.s.toArrayLike(Uint8Array, 'be', 32), 32)\n    obj.recid = sig.recoveryParam\n\n    return 0\n  },\n\n  ecdsaVerify (sig, msg32, pubkey) {\n    const sigObj = { r: sig.subarray(0, 32), s: sig.subarray(32, 64) }\n\n    const sigr = new BN(sigObj.r)\n    const sigs = new BN(sigObj.s)\n    if (sigr.cmp(ecparams.n) >= 0 || sigs.cmp(ecparams.n) >= 0) return 1\n    if (sigs.cmp(ec.nh) === 1 || sigr.isZero() || sigs.isZero()) return 3\n\n    const pair = loadPublicKey(pubkey)\n    if (pair === null) return 2\n\n    const point = pair.getPublic()\n    const isValid = ec.verify(msg32, sigObj, point)\n    return isValid ? 0 : 3\n  },\n\n  ecdsaRecover (output, sig, recid, msg32) {\n    const sigObj = { r: sig.slice(0, 32), s: sig.slice(32, 64) }\n\n    const sigr = new BN(sigObj.r)\n    const sigs = new BN(sigObj.s)\n    if (sigr.cmp(ecparams.n) >= 0 || sigs.cmp(ecparams.n) >= 0) return 1\n\n    if (sigr.isZero() || sigs.isZero()) return 2\n\n    // Can throw `throw new Error('Unable to find sencond key candinate');`\n    let point\n    try {\n      point = ec.recoverPubKey(msg32, sigObj, recid)\n    } catch (err) {\n      return 2\n    }\n\n    savePublicKey(output, point)\n\n    return 0\n  },\n\n  ecdh (output, pubkey, seckey, data, hashfn, xbuf, ybuf) {\n    const pair = loadPublicKey(pubkey)\n    if (pair === null) return 1\n\n    const scalar = new BN(seckey)\n    if (scalar.cmp(ecparams.n) >= 0 || scalar.isZero()) return 2\n\n    const point = pair.getPublic().mul(scalar)\n\n    if (hashfn === undefined) {\n      const data = point.encode(null, true)\n      const sha256 = ec.hash().update(data).digest()\n      for (let i = 0; i < 32; ++i) output[i] = sha256[i]\n    } else {\n      if (!xbuf) xbuf = new Uint8Array(32)\n      const x = point.getX().toArray('be', 32)\n      for (let i = 0; i < 32; ++i) xbuf[i] = x[i]\n\n      if (!ybuf) ybuf = new Uint8Array(32)\n      const y = point.getY().toArray('be', 32)\n      for (let i = 0; i < 32; ++i) ybuf[i] = y[i]\n\n      const hash = hashfn(xbuf, ybuf, data)\n\n      const isValid = hash instanceof Uint8Array && hash.length === output.length\n      if (!isValid) return 2\n\n      output.set(hash)\n    }\n\n    return 0\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc2VjcDI1NmsxL2xpYi9lbGxpcHRpYy5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBQSxXQUFXLG1GQUFzQjs7QUFFakM7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBLHNCQUFzQixPQUFPLGNBQWM7QUFDM0M7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQSxzQkFBc0IsT0FBTyxjQUFjO0FBQzNDOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0IsbUJBQW1CO0FBQ3JDOztBQUVBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0Esb0JBQW9CLG9CQUFvQjtBQUN4QztBQUNBO0FBQ0E7O0FBRUE7QUFDQSxvQkFBb0Isa0JBQWtCO0FBQ3RDOztBQUVBOztBQUVBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBOztBQUVBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLFlBQVksU0FBUzs7QUFFckI7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLFdBQVcsdURBQXVEOztBQUVsRTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLFdBQVcsdURBQXVEOztBQUVsRTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsdUNBQXVDLHlDQUF5QztBQUNoRixNQUFNO0FBQ047QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxHQUFHOztBQUVIO0FBQ0EscUJBQXFCOztBQUVyQjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQSxxQkFBcUI7O0FBRXJCO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQSwwRUFBMEU7QUFDMUU7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQixRQUFRO0FBQzlCLE1BQU07QUFDTjtBQUNBO0FBQ0Esc0JBQXNCLFFBQVE7O0FBRTlCO0FBQ0E7QUFDQSxzQkFBc0IsUUFBUTs7QUFFOUI7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvc2VjcDI1NmsxL2xpYi9lbGxpcHRpYy5qcz83NDQxIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IEVDID0gcmVxdWlyZSgnZWxsaXB0aWMnKS5lY1xuXG5jb25zdCBlYyA9IG5ldyBFQygnc2VjcDI1NmsxJylcbmNvbnN0IGVjcGFyYW1zID0gZWMuY3VydmVcblxuLy8gSGFjaywgd2UgY2FuIG5vdCB1c2UgYm4uanNANSwgd2hpbGUgZWxsaXB0aWMgdXNlcyBibi5qc0A0XG4vLyBTZWUgaHR0cHM6Ly9naXRodWIuY29tL2luZHV0bnkvZWxsaXB0aWMvaXNzdWVzLzE5MSNpc3N1ZWNvbW1lbnQtNTY5ODg4NzU4XG5jb25zdCBCTiA9IGVjcGFyYW1zLm4uY29uc3RydWN0b3JcblxuZnVuY3Rpb24gbG9hZENvbXByZXNzZWRQdWJsaWNLZXkgKGZpcnN0LCB4YnVmKSB7XG4gIGxldCB4ID0gbmV3IEJOKHhidWYpXG5cbiAgLy8gb3ZlcmZsb3dcbiAgaWYgKHguY21wKGVjcGFyYW1zLnApID49IDApIHJldHVybiBudWxsXG4gIHggPSB4LnRvUmVkKGVjcGFyYW1zLnJlZClcblxuICAvLyBjb21wdXRlIGNvcnJlc3BvbmRpbmcgWVxuICBsZXQgeSA9IHgucmVkU3FyKCkucmVkSU11bCh4KS5yZWRJQWRkKGVjcGFyYW1zLmIpLnJlZFNxcnQoKVxuICBpZiAoKGZpcnN0ID09PSAweDAzKSAhPT0geS5pc09kZCgpKSB5ID0geS5yZWROZWcoKVxuXG4gIHJldHVybiBlYy5rZXlQYWlyKHsgcHViOiB7IHg6IHgsIHk6IHkgfSB9KVxufVxuXG5mdW5jdGlvbiBsb2FkVW5jb21wcmVzc2VkUHVibGljS2V5IChmaXJzdCwgeGJ1ZiwgeWJ1Zikge1xuICBsZXQgeCA9IG5ldyBCTih4YnVmKVxuICBsZXQgeSA9IG5ldyBCTih5YnVmKVxuXG4gIC8vIG92ZXJmbG93XG4gIGlmICh4LmNtcChlY3BhcmFtcy5wKSA+PSAwIHx8IHkuY21wKGVjcGFyYW1zLnApID49IDApIHJldHVybiBudWxsXG5cbiAgeCA9IHgudG9SZWQoZWNwYXJhbXMucmVkKVxuICB5ID0geS50b1JlZChlY3BhcmFtcy5yZWQpXG5cbiAgLy8gaXMgb2RkIGZsYWdcbiAgaWYgKChmaXJzdCA9PT0gMHgwNiB8fCBmaXJzdCA9PT0gMHgwNykgJiYgeS5pc09kZCgpICE9PSAoZmlyc3QgPT09IDB4MDcpKSByZXR1cm4gbnVsbFxuXG4gIC8vIHgqeCp4ICsgYiA9IHkqeVxuICBjb25zdCB4MyA9IHgucmVkU3FyKCkucmVkSU11bCh4KVxuICBpZiAoIXkucmVkU3FyKCkucmVkSVN1Yih4My5yZWRJQWRkKGVjcGFyYW1zLmIpKS5pc1plcm8oKSkgcmV0dXJuIG51bGxcblxuICByZXR1cm4gZWMua2V5UGFpcih7IHB1YjogeyB4OiB4LCB5OiB5IH0gfSlcbn1cblxuZnVuY3Rpb24gbG9hZFB1YmxpY0tleSAocHVia2V5KSB7XG4gIC8vIGxlbmd0aCBzaG91bGQgYmUgdmFsaWRhdGVkIGluIGludGVyZmFjZVxuICBjb25zdCBmaXJzdCA9IHB1YmtleVswXVxuICBzd2l0Y2ggKGZpcnN0KSB7XG4gICAgY2FzZSAweDAyOlxuICAgIGNhc2UgMHgwMzpcbiAgICAgIGlmIChwdWJrZXkubGVuZ3RoICE9PSAzMykgcmV0dXJuIG51bGxcbiAgICAgIHJldHVybiBsb2FkQ29tcHJlc3NlZFB1YmxpY0tleShmaXJzdCwgcHVia2V5LnN1YmFycmF5KDEsIDMzKSlcbiAgICBjYXNlIDB4MDQ6XG4gICAgY2FzZSAweDA2OlxuICAgIGNhc2UgMHgwNzpcbiAgICAgIGlmIChwdWJrZXkubGVuZ3RoICE9PSA2NSkgcmV0dXJuIG51bGxcbiAgICAgIHJldHVybiBsb2FkVW5jb21wcmVzc2VkUHVibGljS2V5KGZpcnN0LCBwdWJrZXkuc3ViYXJyYXkoMSwgMzMpLCBwdWJrZXkuc3ViYXJyYXkoMzMsIDY1KSlcbiAgICBkZWZhdWx0OlxuICAgICAgcmV0dXJuIG51bGxcbiAgfVxufVxuXG5mdW5jdGlvbiBzYXZlUHVibGljS2V5IChvdXRwdXQsIHBvaW50KSB7XG4gIGNvbnN0IHB1YmtleSA9IHBvaW50LmVuY29kZShudWxsLCBvdXRwdXQubGVuZ3RoID09PSAzMylcbiAgLy8gTG9vcCBzaG91bGQgYmUgZmFzdGVyIGJlY2F1c2Ugd2UgZG8gbm90IG5lZWQgY3JlYXRlIGV4dHJhIFVpbnQ4QXJyYXlcbiAgLy8gb3V0cHV0LnNldChuZXcgVWludDhBcnJheShwdWJrZXkpKVxuICBmb3IgKGxldCBpID0gMDsgaSA8IG91dHB1dC5sZW5ndGg7ICsraSkgb3V0cHV0W2ldID0gcHVia2V5W2ldXG59XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICBjb250ZXh0UmFuZG9taXplICgpIHtcbiAgICByZXR1cm4gMFxuICB9LFxuXG4gIHByaXZhdGVLZXlWZXJpZnkgKHNlY2tleSkge1xuICAgIGNvbnN0IGJuID0gbmV3IEJOKHNlY2tleSlcbiAgICByZXR1cm4gYm4uY21wKGVjcGFyYW1zLm4pIDwgMCAmJiAhYm4uaXNaZXJvKCkgPyAwIDogMVxuICB9LFxuXG4gIHByaXZhdGVLZXlOZWdhdGUgKHNlY2tleSkge1xuICAgIGNvbnN0IGJuID0gbmV3IEJOKHNlY2tleSlcbiAgICBjb25zdCBuZWdhdGUgPSBlY3BhcmFtcy5uLnN1YihibikudW1vZChlY3BhcmFtcy5uKS50b0FycmF5TGlrZShVaW50OEFycmF5LCAnYmUnLCAzMilcbiAgICBzZWNrZXkuc2V0KG5lZ2F0ZSlcbiAgICByZXR1cm4gMFxuICB9LFxuXG4gIHByaXZhdGVLZXlUd2Vha0FkZCAoc2Vja2V5LCB0d2Vhaykge1xuICAgIGNvbnN0IGJuID0gbmV3IEJOKHR3ZWFrKVxuICAgIGlmIChibi5jbXAoZWNwYXJhbXMubikgPj0gMCkgcmV0dXJuIDFcblxuICAgIGJuLmlhZGQobmV3IEJOKHNlY2tleSkpXG4gICAgaWYgKGJuLmNtcChlY3BhcmFtcy5uKSA+PSAwKSBibi5pc3ViKGVjcGFyYW1zLm4pXG4gICAgaWYgKGJuLmlzWmVybygpKSByZXR1cm4gMVxuXG4gICAgY29uc3QgdHdlYWtlZCA9IGJuLnRvQXJyYXlMaWtlKFVpbnQ4QXJyYXksICdiZScsIDMyKVxuICAgIHNlY2tleS5zZXQodHdlYWtlZClcblxuICAgIHJldHVybiAwXG4gIH0sXG5cbiAgcHJpdmF0ZUtleVR3ZWFrTXVsIChzZWNrZXksIHR3ZWFrKSB7XG4gICAgbGV0IGJuID0gbmV3IEJOKHR3ZWFrKVxuICAgIGlmIChibi5jbXAoZWNwYXJhbXMubikgPj0gMCB8fCBibi5pc1plcm8oKSkgcmV0dXJuIDFcblxuICAgIGJuLmltdWwobmV3IEJOKHNlY2tleSkpXG4gICAgaWYgKGJuLmNtcChlY3BhcmFtcy5uKSA+PSAwKSBibiA9IGJuLnVtb2QoZWNwYXJhbXMubilcblxuICAgIGNvbnN0IHR3ZWFrZWQgPSBibi50b0FycmF5TGlrZShVaW50OEFycmF5LCAnYmUnLCAzMilcbiAgICBzZWNrZXkuc2V0KHR3ZWFrZWQpXG5cbiAgICByZXR1cm4gMFxuICB9LFxuXG4gIHB1YmxpY0tleVZlcmlmeSAocHVia2V5KSB7XG4gICAgY29uc3QgcGFpciA9IGxvYWRQdWJsaWNLZXkocHVia2V5KVxuICAgIHJldHVybiBwYWlyID09PSBudWxsID8gMSA6IDBcbiAgfSxcblxuICBwdWJsaWNLZXlDcmVhdGUgKG91dHB1dCwgc2Vja2V5KSB7XG4gICAgY29uc3QgYm4gPSBuZXcgQk4oc2Vja2V5KVxuICAgIGlmIChibi5jbXAoZWNwYXJhbXMubikgPj0gMCB8fCBibi5pc1plcm8oKSkgcmV0dXJuIDFcblxuICAgIGNvbnN0IHBvaW50ID0gZWMua2V5RnJvbVByaXZhdGUoc2Vja2V5KS5nZXRQdWJsaWMoKVxuICAgIHNhdmVQdWJsaWNLZXkob3V0cHV0LCBwb2ludClcblxuICAgIHJldHVybiAwXG4gIH0sXG5cbiAgcHVibGljS2V5Q29udmVydCAob3V0cHV0LCBwdWJrZXkpIHtcbiAgICBjb25zdCBwYWlyID0gbG9hZFB1YmxpY0tleShwdWJrZXkpXG4gICAgaWYgKHBhaXIgPT09IG51bGwpIHJldHVybiAxXG5cbiAgICBjb25zdCBwb2ludCA9IHBhaXIuZ2V0UHVibGljKClcbiAgICBzYXZlUHVibGljS2V5KG91dHB1dCwgcG9pbnQpXG5cbiAgICByZXR1cm4gMFxuICB9LFxuXG4gIHB1YmxpY0tleU5lZ2F0ZSAob3V0cHV0LCBwdWJrZXkpIHtcbiAgICBjb25zdCBwYWlyID0gbG9hZFB1YmxpY0tleShwdWJrZXkpXG4gICAgaWYgKHBhaXIgPT09IG51bGwpIHJldHVybiAxXG5cbiAgICBjb25zdCBwb2ludCA9IHBhaXIuZ2V0UHVibGljKClcbiAgICBwb2ludC55ID0gcG9pbnQueS5yZWROZWcoKVxuICAgIHNhdmVQdWJsaWNLZXkob3V0cHV0LCBwb2ludClcblxuICAgIHJldHVybiAwXG4gIH0sXG5cbiAgcHVibGljS2V5Q29tYmluZSAob3V0cHV0LCBwdWJrZXlzKSB7XG4gICAgY29uc3QgcGFpcnMgPSBuZXcgQXJyYXkocHVia2V5cy5sZW5ndGgpXG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBwdWJrZXlzLmxlbmd0aDsgKytpKSB7XG4gICAgICBwYWlyc1tpXSA9IGxvYWRQdWJsaWNLZXkocHVia2V5c1tpXSlcbiAgICAgIGlmIChwYWlyc1tpXSA9PT0gbnVsbCkgcmV0dXJuIDFcbiAgICB9XG5cbiAgICBsZXQgcG9pbnQgPSBwYWlyc1swXS5nZXRQdWJsaWMoKVxuICAgIGZvciAobGV0IGkgPSAxOyBpIDwgcGFpcnMubGVuZ3RoOyArK2kpIHBvaW50ID0gcG9pbnQuYWRkKHBhaXJzW2ldLnB1YilcbiAgICBpZiAocG9pbnQuaXNJbmZpbml0eSgpKSByZXR1cm4gMlxuXG4gICAgc2F2ZVB1YmxpY0tleShvdXRwdXQsIHBvaW50KVxuXG4gICAgcmV0dXJuIDBcbiAgfSxcblxuICBwdWJsaWNLZXlUd2Vha0FkZCAob3V0cHV0LCBwdWJrZXksIHR3ZWFrKSB7XG4gICAgY29uc3QgcGFpciA9IGxvYWRQdWJsaWNLZXkocHVia2V5KVxuICAgIGlmIChwYWlyID09PSBudWxsKSByZXR1cm4gMVxuXG4gICAgdHdlYWsgPSBuZXcgQk4odHdlYWspXG4gICAgaWYgKHR3ZWFrLmNtcChlY3BhcmFtcy5uKSA+PSAwKSByZXR1cm4gMlxuXG4gICAgY29uc3QgcG9pbnQgPSBwYWlyLmdldFB1YmxpYygpLmFkZChlY3BhcmFtcy5nLm11bCh0d2VhaykpXG4gICAgaWYgKHBvaW50LmlzSW5maW5pdHkoKSkgcmV0dXJuIDJcblxuICAgIHNhdmVQdWJsaWNLZXkob3V0cHV0LCBwb2ludClcblxuICAgIHJldHVybiAwXG4gIH0sXG5cbiAgcHVibGljS2V5VHdlYWtNdWwgKG91dHB1dCwgcHVia2V5LCB0d2Vhaykge1xuICAgIGNvbnN0IHBhaXIgPSBsb2FkUHVibGljS2V5KHB1YmtleSlcbiAgICBpZiAocGFpciA9PT0gbnVsbCkgcmV0dXJuIDFcblxuICAgIHR3ZWFrID0gbmV3IEJOKHR3ZWFrKVxuICAgIGlmICh0d2Vhay5jbXAoZWNwYXJhbXMubikgPj0gMCB8fCB0d2Vhay5pc1plcm8oKSkgcmV0dXJuIDJcblxuICAgIGNvbnN0IHBvaW50ID0gcGFpci5nZXRQdWJsaWMoKS5tdWwodHdlYWspXG4gICAgc2F2ZVB1YmxpY0tleShvdXRwdXQsIHBvaW50KVxuXG4gICAgcmV0dXJuIDBcbiAgfSxcblxuICBzaWduYXR1cmVOb3JtYWxpemUgKHNpZykge1xuICAgIGNvbnN0IHIgPSBuZXcgQk4oc2lnLnN1YmFycmF5KDAsIDMyKSlcbiAgICBjb25zdCBzID0gbmV3IEJOKHNpZy5zdWJhcnJheSgzMiwgNjQpKVxuICAgIGlmIChyLmNtcChlY3BhcmFtcy5uKSA+PSAwIHx8IHMuY21wKGVjcGFyYW1zLm4pID49IDApIHJldHVybiAxXG5cbiAgICBpZiAocy5jbXAoZWMubmgpID09PSAxKSB7XG4gICAgICBzaWcuc2V0KGVjcGFyYW1zLm4uc3ViKHMpLnRvQXJyYXlMaWtlKFVpbnQ4QXJyYXksICdiZScsIDMyKSwgMzIpXG4gICAgfVxuXG4gICAgcmV0dXJuIDBcbiAgfSxcblxuICAvLyBDb3BpZWQgMS10by0xIGZyb20gaHR0cHM6Ly9naXRodWIuY29tL2JpdGNvaW5qcy9iaXA2Ni9ibG9iL21hc3Rlci9pbmRleC5qc1xuICAvLyBBZGFwdGVkIGZvciBVaW50OEFycmF5IGluc3RlYWQgQnVmZmVyXG4gIHNpZ25hdHVyZUV4cG9ydCAob2JqLCBzaWcpIHtcbiAgICBjb25zdCBzaWdSID0gc2lnLnN1YmFycmF5KDAsIDMyKVxuICAgIGNvbnN0IHNpZ1MgPSBzaWcuc3ViYXJyYXkoMzIsIDY0KVxuICAgIGlmIChuZXcgQk4oc2lnUikuY21wKGVjcGFyYW1zLm4pID49IDApIHJldHVybiAxXG4gICAgaWYgKG5ldyBCTihzaWdTKS5jbXAoZWNwYXJhbXMubikgPj0gMCkgcmV0dXJuIDFcblxuICAgIGNvbnN0IHsgb3V0cHV0IH0gPSBvYmpcblxuICAgIC8vIFByZXBhcmUgUlxuICAgIGxldCByID0gb3V0cHV0LnN1YmFycmF5KDQsIDQgKyAzMylcbiAgICByWzBdID0gMHgwMFxuICAgIHIuc2V0KHNpZ1IsIDEpXG5cbiAgICBsZXQgbGVuUiA9IDMzXG4gICAgbGV0IHBvc1IgPSAwXG4gICAgZm9yICg7IGxlblIgPiAxICYmIHJbcG9zUl0gPT09IDB4MDAgJiYgIShyW3Bvc1IgKyAxXSAmIDB4ODApOyAtLWxlblIsICsrcG9zUik7XG5cbiAgICByID0gci5zdWJhcnJheShwb3NSKVxuICAgIGlmIChyWzBdICYgMHg4MCkgcmV0dXJuIDFcbiAgICBpZiAobGVuUiA+IDEgJiYgKHJbMF0gPT09IDB4MDApICYmICEoclsxXSAmIDB4ODApKSByZXR1cm4gMVxuXG4gICAgLy8gUHJlcGFyZSBTXG4gICAgbGV0IHMgPSBvdXRwdXQuc3ViYXJyYXkoNiArIDMzLCA2ICsgMzMgKyAzMylcbiAgICBzWzBdID0gMHgwMFxuICAgIHMuc2V0KHNpZ1MsIDEpXG5cbiAgICBsZXQgbGVuUyA9IDMzXG4gICAgbGV0IHBvc1MgPSAwXG4gICAgZm9yICg7IGxlblMgPiAxICYmIHNbcG9zU10gPT09IDB4MDAgJiYgIShzW3Bvc1MgKyAxXSAmIDB4ODApOyAtLWxlblMsICsrcG9zUyk7XG5cbiAgICBzID0gcy5zdWJhcnJheShwb3NTKVxuICAgIGlmIChzWzBdICYgMHg4MCkgcmV0dXJuIDFcbiAgICBpZiAobGVuUyA+IDEgJiYgKHNbMF0gPT09IDB4MDApICYmICEoc1sxXSAmIDB4ODApKSByZXR1cm4gMVxuXG4gICAgLy8gU2V0IG91dHB1dCBsZW5ndGggZm9yIHJldHVyblxuICAgIG9iai5vdXRwdXRsZW4gPSA2ICsgbGVuUiArIGxlblNcblxuICAgIC8vIE91dHB1dCBpbiBzcGVjaWZpZWQgZm9ybWF0XG4gICAgLy8gMHgzMCBbdG90YWwtbGVuZ3RoXSAweDAyIFtSLWxlbmd0aF0gW1JdIDB4MDIgW1MtbGVuZ3RoXSBbU11cbiAgICBvdXRwdXRbMF0gPSAweDMwXG4gICAgb3V0cHV0WzFdID0gb2JqLm91dHB1dGxlbiAtIDJcbiAgICBvdXRwdXRbMl0gPSAweDAyXG4gICAgb3V0cHV0WzNdID0gci5sZW5ndGhcbiAgICBvdXRwdXQuc2V0KHIsIDQpXG4gICAgb3V0cHV0WzQgKyBsZW5SXSA9IDB4MDJcbiAgICBvdXRwdXRbNSArIGxlblJdID0gcy5sZW5ndGhcbiAgICBvdXRwdXQuc2V0KHMsIDYgKyBsZW5SKVxuXG4gICAgcmV0dXJuIDBcbiAgfSxcblxuICAvLyBDb3BpZWQgMS10by0xIGZyb20gaHR0cHM6Ly9naXRodWIuY29tL2JpdGNvaW5qcy9iaXA2Ni9ibG9iL21hc3Rlci9pbmRleC5qc1xuICAvLyBBZGFwdGVkIGZvciBVaW50OEFycmF5IGluc3RlYWQgQnVmZmVyXG4gIHNpZ25hdHVyZUltcG9ydCAob3V0cHV0LCBzaWcpIHtcbiAgICBpZiAoc2lnLmxlbmd0aCA8IDgpIHJldHVybiAxXG4gICAgaWYgKHNpZy5sZW5ndGggPiA3MikgcmV0dXJuIDFcbiAgICBpZiAoc2lnWzBdICE9PSAweDMwKSByZXR1cm4gMVxuICAgIGlmIChzaWdbMV0gIT09IHNpZy5sZW5ndGggLSAyKSByZXR1cm4gMVxuICAgIGlmIChzaWdbMl0gIT09IDB4MDIpIHJldHVybiAxXG5cbiAgICBjb25zdCBsZW5SID0gc2lnWzNdXG4gICAgaWYgKGxlblIgPT09IDApIHJldHVybiAxXG4gICAgaWYgKDUgKyBsZW5SID49IHNpZy5sZW5ndGgpIHJldHVybiAxXG4gICAgaWYgKHNpZ1s0ICsgbGVuUl0gIT09IDB4MDIpIHJldHVybiAxXG5cbiAgICBjb25zdCBsZW5TID0gc2lnWzUgKyBsZW5SXVxuICAgIGlmIChsZW5TID09PSAwKSByZXR1cm4gMVxuICAgIGlmICgoNiArIGxlblIgKyBsZW5TKSAhPT0gc2lnLmxlbmd0aCkgcmV0dXJuIDFcblxuICAgIGlmIChzaWdbNF0gJiAweDgwKSByZXR1cm4gMVxuICAgIGlmIChsZW5SID4gMSAmJiAoc2lnWzRdID09PSAweDAwKSAmJiAhKHNpZ1s1XSAmIDB4ODApKSByZXR1cm4gMVxuXG4gICAgaWYgKHNpZ1tsZW5SICsgNl0gJiAweDgwKSByZXR1cm4gMVxuICAgIGlmIChsZW5TID4gMSAmJiAoc2lnW2xlblIgKyA2XSA9PT0gMHgwMCkgJiYgIShzaWdbbGVuUiArIDddICYgMHg4MCkpIHJldHVybiAxXG5cbiAgICBsZXQgc2lnUiA9IHNpZy5zdWJhcnJheSg0LCA0ICsgbGVuUilcbiAgICBpZiAoc2lnUi5sZW5ndGggPT09IDMzICYmIHNpZ1JbMF0gPT09IDB4MDApIHNpZ1IgPSBzaWdSLnN1YmFycmF5KDEpXG4gICAgaWYgKHNpZ1IubGVuZ3RoID4gMzIpIHJldHVybiAxXG5cbiAgICBsZXQgc2lnUyA9IHNpZy5zdWJhcnJheSg2ICsgbGVuUilcbiAgICBpZiAoc2lnUy5sZW5ndGggPT09IDMzICYmIHNpZ1NbMF0gPT09IDB4MDApIHNpZ1MgPSBzaWdTLnNsaWNlKDEpXG4gICAgaWYgKHNpZ1MubGVuZ3RoID4gMzIpIHRocm93IG5ldyBFcnJvcignUyBsZW5ndGggaXMgdG9vIGxvbmcnKVxuXG4gICAgbGV0IHIgPSBuZXcgQk4oc2lnUilcbiAgICBpZiAoci5jbXAoZWNwYXJhbXMubikgPj0gMCkgciA9IG5ldyBCTigwKVxuXG4gICAgbGV0IHMgPSBuZXcgQk4oc2lnLnN1YmFycmF5KDYgKyBsZW5SKSlcbiAgICBpZiAocy5jbXAoZWNwYXJhbXMubikgPj0gMCkgcyA9IG5ldyBCTigwKVxuXG4gICAgb3V0cHV0LnNldChyLnRvQXJyYXlMaWtlKFVpbnQ4QXJyYXksICdiZScsIDMyKSwgMClcbiAgICBvdXRwdXQuc2V0KHMudG9BcnJheUxpa2UoVWludDhBcnJheSwgJ2JlJywgMzIpLCAzMilcblxuICAgIHJldHVybiAwXG4gIH0sXG5cbiAgZWNkc2FTaWduIChvYmosIG1lc3NhZ2UsIHNlY2tleSwgZGF0YSwgbm9uY2Vmbikge1xuICAgIGlmIChub25jZWZuKSB7XG4gICAgICBjb25zdCBfbm9uY2VmbiA9IG5vbmNlZm5cbiAgICAgIG5vbmNlZm4gPSAoY291bnRlcikgPT4ge1xuICAgICAgICBjb25zdCBub25jZSA9IF9ub25jZWZuKG1lc3NhZ2UsIHNlY2tleSwgbnVsbCwgZGF0YSwgY291bnRlcilcblxuICAgICAgICBjb25zdCBpc1ZhbGlkID0gbm9uY2UgaW5zdGFuY2VvZiBVaW50OEFycmF5ICYmIG5vbmNlLmxlbmd0aCA9PT0gMzJcbiAgICAgICAgaWYgKCFpc1ZhbGlkKSB0aHJvdyBuZXcgRXJyb3IoJ1RoaXMgaXMgdGhlIHdheScpXG5cbiAgICAgICAgcmV0dXJuIG5ldyBCTihub25jZSlcbiAgICAgIH1cbiAgICB9XG5cbiAgICBjb25zdCBkID0gbmV3IEJOKHNlY2tleSlcbiAgICBpZiAoZC5jbXAoZWNwYXJhbXMubikgPj0gMCB8fCBkLmlzWmVybygpKSByZXR1cm4gMVxuXG4gICAgbGV0IHNpZ1xuICAgIHRyeSB7XG4gICAgICBzaWcgPSBlYy5zaWduKG1lc3NhZ2UsIHNlY2tleSwgeyBjYW5vbmljYWw6IHRydWUsIGs6IG5vbmNlZm4sIHBlcnM6IGRhdGEgfSlcbiAgICB9IGNhdGNoIChlcnIpIHtcbiAgICAgIHJldHVybiAxXG4gICAgfVxuXG4gICAgb2JqLnNpZ25hdHVyZS5zZXQoc2lnLnIudG9BcnJheUxpa2UoVWludDhBcnJheSwgJ2JlJywgMzIpLCAwKVxuICAgIG9iai5zaWduYXR1cmUuc2V0KHNpZy5zLnRvQXJyYXlMaWtlKFVpbnQ4QXJyYXksICdiZScsIDMyKSwgMzIpXG4gICAgb2JqLnJlY2lkID0gc2lnLnJlY292ZXJ5UGFyYW1cblxuICAgIHJldHVybiAwXG4gIH0sXG5cbiAgZWNkc2FWZXJpZnkgKHNpZywgbXNnMzIsIHB1YmtleSkge1xuICAgIGNvbnN0IHNpZ09iaiA9IHsgcjogc2lnLnN1YmFycmF5KDAsIDMyKSwgczogc2lnLnN1YmFycmF5KDMyLCA2NCkgfVxuXG4gICAgY29uc3Qgc2lnciA9IG5ldyBCTihzaWdPYmoucilcbiAgICBjb25zdCBzaWdzID0gbmV3IEJOKHNpZ09iai5zKVxuICAgIGlmIChzaWdyLmNtcChlY3BhcmFtcy5uKSA+PSAwIHx8IHNpZ3MuY21wKGVjcGFyYW1zLm4pID49IDApIHJldHVybiAxXG4gICAgaWYgKHNpZ3MuY21wKGVjLm5oKSA9PT0gMSB8fCBzaWdyLmlzWmVybygpIHx8IHNpZ3MuaXNaZXJvKCkpIHJldHVybiAzXG5cbiAgICBjb25zdCBwYWlyID0gbG9hZFB1YmxpY0tleShwdWJrZXkpXG4gICAgaWYgKHBhaXIgPT09IG51bGwpIHJldHVybiAyXG5cbiAgICBjb25zdCBwb2ludCA9IHBhaXIuZ2V0UHVibGljKClcbiAgICBjb25zdCBpc1ZhbGlkID0gZWMudmVyaWZ5KG1zZzMyLCBzaWdPYmosIHBvaW50KVxuICAgIHJldHVybiBpc1ZhbGlkID8gMCA6IDNcbiAgfSxcblxuICBlY2RzYVJlY292ZXIgKG91dHB1dCwgc2lnLCByZWNpZCwgbXNnMzIpIHtcbiAgICBjb25zdCBzaWdPYmogPSB7IHI6IHNpZy5zbGljZSgwLCAzMiksIHM6IHNpZy5zbGljZSgzMiwgNjQpIH1cblxuICAgIGNvbnN0IHNpZ3IgPSBuZXcgQk4oc2lnT2JqLnIpXG4gICAgY29uc3Qgc2lncyA9IG5ldyBCTihzaWdPYmoucylcbiAgICBpZiAoc2lnci5jbXAoZWNwYXJhbXMubikgPj0gMCB8fCBzaWdzLmNtcChlY3BhcmFtcy5uKSA+PSAwKSByZXR1cm4gMVxuXG4gICAgaWYgKHNpZ3IuaXNaZXJvKCkgfHwgc2lncy5pc1plcm8oKSkgcmV0dXJuIDJcblxuICAgIC8vIENhbiB0aHJvdyBgdGhyb3cgbmV3IEVycm9yKCdVbmFibGUgdG8gZmluZCBzZW5jb25kIGtleSBjYW5kaW5hdGUnKTtgXG4gICAgbGV0IHBvaW50XG4gICAgdHJ5IHtcbiAgICAgIHBvaW50ID0gZWMucmVjb3ZlclB1YktleShtc2czMiwgc2lnT2JqLCByZWNpZClcbiAgICB9IGNhdGNoIChlcnIpIHtcbiAgICAgIHJldHVybiAyXG4gICAgfVxuXG4gICAgc2F2ZVB1YmxpY0tleShvdXRwdXQsIHBvaW50KVxuXG4gICAgcmV0dXJuIDBcbiAgfSxcblxuICBlY2RoIChvdXRwdXQsIHB1YmtleSwgc2Vja2V5LCBkYXRhLCBoYXNoZm4sIHhidWYsIHlidWYpIHtcbiAgICBjb25zdCBwYWlyID0gbG9hZFB1YmxpY0tleShwdWJrZXkpXG4gICAgaWYgKHBhaXIgPT09IG51bGwpIHJldHVybiAxXG5cbiAgICBjb25zdCBzY2FsYXIgPSBuZXcgQk4oc2Vja2V5KVxuICAgIGlmIChzY2FsYXIuY21wKGVjcGFyYW1zLm4pID49IDAgfHwgc2NhbGFyLmlzWmVybygpKSByZXR1cm4gMlxuXG4gICAgY29uc3QgcG9pbnQgPSBwYWlyLmdldFB1YmxpYygpLm11bChzY2FsYXIpXG5cbiAgICBpZiAoaGFzaGZuID09PSB1bmRlZmluZWQpIHtcbiAgICAgIGNvbnN0IGRhdGEgPSBwb2ludC5lbmNvZGUobnVsbCwgdHJ1ZSlcbiAgICAgIGNvbnN0IHNoYTI1NiA9IGVjLmhhc2goKS51cGRhdGUoZGF0YSkuZGlnZXN0KClcbiAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgMzI7ICsraSkgb3V0cHV0W2ldID0gc2hhMjU2W2ldXG4gICAgfSBlbHNlIHtcbiAgICAgIGlmICgheGJ1ZikgeGJ1ZiA9IG5ldyBVaW50OEFycmF5KDMyKVxuICAgICAgY29uc3QgeCA9IHBvaW50LmdldFgoKS50b0FycmF5KCdiZScsIDMyKVxuICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCAzMjsgKytpKSB4YnVmW2ldID0geFtpXVxuXG4gICAgICBpZiAoIXlidWYpIHlidWYgPSBuZXcgVWludDhBcnJheSgzMilcbiAgICAgIGNvbnN0IHkgPSBwb2ludC5nZXRZKCkudG9BcnJheSgnYmUnLCAzMilcbiAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgMzI7ICsraSkgeWJ1ZltpXSA9IHlbaV1cblxuICAgICAgY29uc3QgaGFzaCA9IGhhc2hmbih4YnVmLCB5YnVmLCBkYXRhKVxuXG4gICAgICBjb25zdCBpc1ZhbGlkID0gaGFzaCBpbnN0YW5jZW9mIFVpbnQ4QXJyYXkgJiYgaGFzaC5sZW5ndGggPT09IG91dHB1dC5sZW5ndGhcbiAgICAgIGlmICghaXNWYWxpZCkgcmV0dXJuIDJcblxuICAgICAgb3V0cHV0LnNldChoYXNoKVxuICAgIH1cblxuICAgIHJldHVybiAwXG4gIH1cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/secp256k1/lib/elliptic.js\n");

/***/ }),

/***/ "./node_modules/secp256k1/lib/index.js":
/*!*********************************************!*\
  !*** ./node_modules/secp256k1/lib/index.js ***!
  \*********************************************/
/***/ (function(module) {

eval("const errors = {\n  IMPOSSIBLE_CASE: 'Impossible case. Please create issue.',\n  TWEAK_ADD:\n    'The tweak was out of range or the resulted private key is invalid',\n  TWEAK_MUL: 'The tweak was out of range or equal to zero',\n  CONTEXT_RANDOMIZE_UNKNOW: 'Unknow error on context randomization',\n  SECKEY_INVALID: 'Private Key is invalid',\n  PUBKEY_PARSE: 'Public Key could not be parsed',\n  PUBKEY_SERIALIZE: 'Public Key serialization error',\n  PUBKEY_COMBINE: 'The sum of the public keys is not valid',\n  SIG_PARSE: 'Signature could not be parsed',\n  SIGN: 'The nonce generation function failed, or the private key was invalid',\n  RECOVER: 'Public key could not be recover',\n  ECDH: 'Scalar was invalid (zero or overflow)'\n}\n\nfunction assert (cond, msg) {\n  if (!cond) throw new Error(msg)\n}\n\nfunction isUint8Array (name, value, length) {\n  assert(value instanceof Uint8Array, `Expected ${name} to be an Uint8Array`)\n\n  if (length !== undefined) {\n    if (Array.isArray(length)) {\n      const numbers = length.join(', ')\n      const msg = `Expected ${name} to be an Uint8Array with length [${numbers}]`\n      assert(length.includes(value.length), msg)\n    } else {\n      const msg = `Expected ${name} to be an Uint8Array with length ${length}`\n      assert(value.length === length, msg)\n    }\n  }\n}\n\nfunction isCompressed (value) {\n  assert(toTypeString(value) === 'Boolean', 'Expected compressed to be a Boolean')\n}\n\nfunction getAssertedOutput (output = (len) => new Uint8Array(len), length) {\n  if (typeof output === 'function') output = output(length)\n  isUint8Array('output', output, length)\n  return output\n}\n\nfunction toTypeString (value) {\n  return Object.prototype.toString.call(value).slice(8, -1)\n}\n\nmodule.exports = (secp256k1) => {\n  return {\n    contextRandomize (seed) {\n      assert(\n        seed === null || seed instanceof Uint8Array,\n        'Expected seed to be an Uint8Array or null'\n      )\n      if (seed !== null) isUint8Array('seed', seed, 32)\n\n      switch (secp256k1.contextRandomize(seed)) {\n        case 1:\n          throw new Error(errors.CONTEXT_RANDOMIZE_UNKNOW)\n      }\n    },\n\n    privateKeyVerify (seckey) {\n      isUint8Array('private key', seckey, 32)\n\n      return secp256k1.privateKeyVerify(seckey) === 0\n    },\n\n    privateKeyNegate (seckey) {\n      isUint8Array('private key', seckey, 32)\n\n      switch (secp256k1.privateKeyNegate(seckey)) {\n        case 0:\n          return seckey\n        case 1:\n          throw new Error(errors.IMPOSSIBLE_CASE)\n      }\n    },\n\n    privateKeyTweakAdd (seckey, tweak) {\n      isUint8Array('private key', seckey, 32)\n      isUint8Array('tweak', tweak, 32)\n\n      switch (secp256k1.privateKeyTweakAdd(seckey, tweak)) {\n        case 0:\n          return seckey\n        case 1:\n          throw new Error(errors.TWEAK_ADD)\n      }\n    },\n\n    privateKeyTweakMul (seckey, tweak) {\n      isUint8Array('private key', seckey, 32)\n      isUint8Array('tweak', tweak, 32)\n\n      switch (secp256k1.privateKeyTweakMul(seckey, tweak)) {\n        case 0:\n          return seckey\n        case 1:\n          throw new Error(errors.TWEAK_MUL)\n      }\n    },\n\n    publicKeyVerify (pubkey) {\n      isUint8Array('public key', pubkey, [33, 65])\n\n      return secp256k1.publicKeyVerify(pubkey) === 0\n    },\n\n    publicKeyCreate (seckey, compressed = true, output) {\n      isUint8Array('private key', seckey, 32)\n      isCompressed(compressed)\n      output = getAssertedOutput(output, compressed ? 33 : 65)\n\n      switch (secp256k1.publicKeyCreate(output, seckey)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.SECKEY_INVALID)\n        case 2:\n          throw new Error(errors.PUBKEY_SERIALIZE)\n      }\n    },\n\n    publicKeyConvert (pubkey, compressed = true, output) {\n      isUint8Array('public key', pubkey, [33, 65])\n      isCompressed(compressed)\n      output = getAssertedOutput(output, compressed ? 33 : 65)\n\n      switch (secp256k1.publicKeyConvert(output, pubkey)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.PUBKEY_PARSE)\n        case 2:\n          throw new Error(errors.PUBKEY_SERIALIZE)\n      }\n    },\n\n    publicKeyNegate (pubkey, compressed = true, output) {\n      isUint8Array('public key', pubkey, [33, 65])\n      isCompressed(compressed)\n      output = getAssertedOutput(output, compressed ? 33 : 65)\n\n      switch (secp256k1.publicKeyNegate(output, pubkey)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.PUBKEY_PARSE)\n        case 2:\n          throw new Error(errors.IMPOSSIBLE_CASE)\n        case 3:\n          throw new Error(errors.PUBKEY_SERIALIZE)\n      }\n    },\n\n    publicKeyCombine (pubkeys, compressed = true, output) {\n      assert(Array.isArray(pubkeys), 'Expected public keys to be an Array')\n      assert(pubkeys.length > 0, 'Expected public keys array will have more than zero items')\n      for (const pubkey of pubkeys) {\n        isUint8Array('public key', pubkey, [33, 65])\n      }\n      isCompressed(compressed)\n      output = getAssertedOutput(output, compressed ? 33 : 65)\n\n      switch (secp256k1.publicKeyCombine(output, pubkeys)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.PUBKEY_PARSE)\n        case 2:\n          throw new Error(errors.PUBKEY_COMBINE)\n        case 3:\n          throw new Error(errors.PUBKEY_SERIALIZE)\n      }\n    },\n\n    publicKeyTweakAdd (pubkey, tweak, compressed = true, output) {\n      isUint8Array('public key', pubkey, [33, 65])\n      isUint8Array('tweak', tweak, 32)\n      isCompressed(compressed)\n      output = getAssertedOutput(output, compressed ? 33 : 65)\n\n      switch (secp256k1.publicKeyTweakAdd(output, pubkey, tweak)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.PUBKEY_PARSE)\n        case 2:\n          throw new Error(errors.TWEAK_ADD)\n      }\n    },\n\n    publicKeyTweakMul (pubkey, tweak, compressed = true, output) {\n      isUint8Array('public key', pubkey, [33, 65])\n      isUint8Array('tweak', tweak, 32)\n      isCompressed(compressed)\n      output = getAssertedOutput(output, compressed ? 33 : 65)\n\n      switch (secp256k1.publicKeyTweakMul(output, pubkey, tweak)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.PUBKEY_PARSE)\n        case 2:\n          throw new Error(errors.TWEAK_MUL)\n      }\n    },\n\n    signatureNormalize (sig) {\n      isUint8Array('signature', sig, 64)\n\n      switch (secp256k1.signatureNormalize(sig)) {\n        case 0:\n          return sig\n        case 1:\n          throw new Error(errors.SIG_PARSE)\n      }\n    },\n\n    signatureExport (sig, output) {\n      isUint8Array('signature', sig, 64)\n      output = getAssertedOutput(output, 72)\n\n      const obj = { output, outputlen: 72 }\n      switch (secp256k1.signatureExport(obj, sig)) {\n        case 0:\n          return output.slice(0, obj.outputlen)\n        case 1:\n          throw new Error(errors.SIG_PARSE)\n        case 2:\n          throw new Error(errors.IMPOSSIBLE_CASE)\n      }\n    },\n\n    signatureImport (sig, output) {\n      isUint8Array('signature', sig)\n      output = getAssertedOutput(output, 64)\n\n      switch (secp256k1.signatureImport(output, sig)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.SIG_PARSE)\n        case 2:\n          throw new Error(errors.IMPOSSIBLE_CASE)\n      }\n    },\n\n    ecdsaSign (msg32, seckey, options = {}, output) {\n      isUint8Array('message', msg32, 32)\n      isUint8Array('private key', seckey, 32)\n      assert(toTypeString(options) === 'Object', 'Expected options to be an Object')\n      if (options.data !== undefined) isUint8Array('options.data', options.data)\n      if (options.noncefn !== undefined) assert(toTypeString(options.noncefn) === 'Function', 'Expected options.noncefn to be a Function')\n      output = getAssertedOutput(output, 64)\n\n      const obj = { signature: output, recid: null }\n      switch (secp256k1.ecdsaSign(obj, msg32, seckey, options.data, options.noncefn)) {\n        case 0:\n          return obj\n        case 1:\n          throw new Error(errors.SIGN)\n        case 2:\n          throw new Error(errors.IMPOSSIBLE_CASE)\n      }\n    },\n\n    ecdsaVerify (sig, msg32, pubkey) {\n      isUint8Array('signature', sig, 64)\n      isUint8Array('message', msg32, 32)\n      isUint8Array('public key', pubkey, [33, 65])\n\n      switch (secp256k1.ecdsaVerify(sig, msg32, pubkey)) {\n        case 0:\n          return true\n        case 3:\n          return false\n        case 1:\n          throw new Error(errors.SIG_PARSE)\n        case 2:\n          throw new Error(errors.PUBKEY_PARSE)\n      }\n    },\n\n    ecdsaRecover (sig, recid, msg32, compressed = true, output) {\n      isUint8Array('signature', sig, 64)\n      assert(\n        toTypeString(recid) === 'Number' &&\n          recid >= 0 &&\n          recid <= 3,\n        'Expected recovery id to be a Number within interval [0, 3]'\n      )\n      isUint8Array('message', msg32, 32)\n      isCompressed(compressed)\n      output = getAssertedOutput(output, compressed ? 33 : 65)\n\n      switch (secp256k1.ecdsaRecover(output, sig, recid, msg32)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.SIG_PARSE)\n        case 2:\n          throw new Error(errors.RECOVER)\n        case 3:\n          throw new Error(errors.IMPOSSIBLE_CASE)\n      }\n    },\n\n    ecdh (pubkey, seckey, options = {}, output) {\n      isUint8Array('public key', pubkey, [33, 65])\n      isUint8Array('private key', seckey, 32)\n      assert(toTypeString(options) === 'Object', 'Expected options to be an Object')\n      if (options.data !== undefined) isUint8Array('options.data', options.data)\n      if (options.hashfn !== undefined) {\n        assert(toTypeString(options.hashfn) === 'Function', 'Expected options.hashfn to be a Function')\n        if (options.xbuf !== undefined) isUint8Array('options.xbuf', options.xbuf, 32)\n        if (options.ybuf !== undefined) isUint8Array('options.ybuf', options.ybuf, 32)\n        isUint8Array('output', output)\n      } else {\n        output = getAssertedOutput(output, 32)\n      }\n\n      switch (secp256k1.ecdh(output, pubkey, seckey, options.data, options.hashfn, options.xbuf, options.ybuf)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.PUBKEY_PARSE)\n        case 2:\n          throw new Error(errors.ECDH)\n      }\n    }\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/secp256k1/lib/index.js\n");

/***/ }),

/***/ "./node_modules/sha.js/hash.js":
/*!*************************************!*\
  !*** ./node_modules/sha.js/hash.js ***!
  \*************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("var Buffer = (__webpack_require__(/*! safe-buffer */ \"./node_modules/safe-buffer/index.js\").Buffer)\n\n// prototype class for hash functions\nfunction Hash (blockSize, finalSize) {\n  this._block = Buffer.alloc(blockSize)\n  this._finalSize = finalSize\n  this._blockSize = blockSize\n  this._len = 0\n}\n\nHash.prototype.update = function (data, enc) {\n  if (typeof data === 'string') {\n    enc = enc || 'utf8'\n    data = Buffer.from(data, enc)\n  }\n\n  var block = this._block\n  var blockSize = this._blockSize\n  var length = data.length\n  var accum = this._len\n\n  for (var offset = 0; offset < length;) {\n    var assigned = accum % blockSize\n    var remainder = Math.min(length - offset, blockSize - assigned)\n\n    for (var i = 0; i < remainder; i++) {\n      block[assigned + i] = data[offset + i]\n    }\n\n    accum += remainder\n    offset += remainder\n\n    if ((accum % blockSize) === 0) {\n      this._update(block)\n    }\n  }\n\n  this._len += length\n  return this\n}\n\nHash.prototype.digest = function (enc) {\n  var rem = this._len % this._blockSize\n\n  this._block[rem] = 0x80\n\n  // zero (rem + 1) trailing bits, where (rem + 1) is the smallest\n  // non-negative solution to the equation (length + 1 + (rem + 1)) === finalSize mod blockSize\n  this._block.fill(0, rem + 1)\n\n  if (rem >= this._finalSize) {\n    this._update(this._block)\n    this._block.fill(0)\n  }\n\n  var bits = this._len * 8\n\n  // uint32\n  if (bits <= 0xffffffff) {\n    this._block.writeUInt32BE(bits, this._blockSize - 4)\n\n  // uint64\n  } else {\n    var lowBits = (bits & 0xffffffff) >>> 0\n    var highBits = (bits - lowBits) / 0x100000000\n\n    this._block.writeUInt32BE(highBits, this._blockSize - 8)\n    this._block.writeUInt32BE(lowBits, this._blockSize - 4)\n  }\n\n  this._update(this._block)\n  var hash = this._hash()\n\n  return enc ? hash.toString(enc) : hash\n}\n\nHash.prototype._update = function () {\n  throw new Error('_update must be implemented by subclass')\n}\n\nmodule.exports = Hash\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc2hhLmpzL2hhc2guanMuanMiLCJtYXBwaW5ncyI6IkFBQUEsYUFBYSxzRkFBNkI7O0FBRTFDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsdUJBQXVCLGdCQUFnQjtBQUN2QztBQUNBOztBQUVBLG9CQUFvQixlQUFlO0FBQ25DO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3NoYS5qcy9oYXNoLmpzPzQ1NGQiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIEJ1ZmZlciA9IHJlcXVpcmUoJ3NhZmUtYnVmZmVyJykuQnVmZmVyXG5cbi8vIHByb3RvdHlwZSBjbGFzcyBmb3IgaGFzaCBmdW5jdGlvbnNcbmZ1bmN0aW9uIEhhc2ggKGJsb2NrU2l6ZSwgZmluYWxTaXplKSB7XG4gIHRoaXMuX2Jsb2NrID0gQnVmZmVyLmFsbG9jKGJsb2NrU2l6ZSlcbiAgdGhpcy5fZmluYWxTaXplID0gZmluYWxTaXplXG4gIHRoaXMuX2Jsb2NrU2l6ZSA9IGJsb2NrU2l6ZVxuICB0aGlzLl9sZW4gPSAwXG59XG5cbkhhc2gucHJvdG90eXBlLnVwZGF0ZSA9IGZ1bmN0aW9uIChkYXRhLCBlbmMpIHtcbiAgaWYgKHR5cGVvZiBkYXRhID09PSAnc3RyaW5nJykge1xuICAgIGVuYyA9IGVuYyB8fCAndXRmOCdcbiAgICBkYXRhID0gQnVmZmVyLmZyb20oZGF0YSwgZW5jKVxuICB9XG5cbiAgdmFyIGJsb2NrID0gdGhpcy5fYmxvY2tcbiAgdmFyIGJsb2NrU2l6ZSA9IHRoaXMuX2Jsb2NrU2l6ZVxuICB2YXIgbGVuZ3RoID0gZGF0YS5sZW5ndGhcbiAgdmFyIGFjY3VtID0gdGhpcy5fbGVuXG5cbiAgZm9yICh2YXIgb2Zmc2V0ID0gMDsgb2Zmc2V0IDwgbGVuZ3RoOykge1xuICAgIHZhciBhc3NpZ25lZCA9IGFjY3VtICUgYmxvY2tTaXplXG4gICAgdmFyIHJlbWFpbmRlciA9IE1hdGgubWluKGxlbmd0aCAtIG9mZnNldCwgYmxvY2tTaXplIC0gYXNzaWduZWQpXG5cbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IHJlbWFpbmRlcjsgaSsrKSB7XG4gICAgICBibG9ja1thc3NpZ25lZCArIGldID0gZGF0YVtvZmZzZXQgKyBpXVxuICAgIH1cblxuICAgIGFjY3VtICs9IHJlbWFpbmRlclxuICAgIG9mZnNldCArPSByZW1haW5kZXJcblxuICAgIGlmICgoYWNjdW0gJSBibG9ja1NpemUpID09PSAwKSB7XG4gICAgICB0aGlzLl91cGRhdGUoYmxvY2spXG4gICAgfVxuICB9XG5cbiAgdGhpcy5fbGVuICs9IGxlbmd0aFxuICByZXR1cm4gdGhpc1xufVxuXG5IYXNoLnByb3RvdHlwZS5kaWdlc3QgPSBmdW5jdGlvbiAoZW5jKSB7XG4gIHZhciByZW0gPSB0aGlzLl9sZW4gJSB0aGlzLl9ibG9ja1NpemVcblxuICB0aGlzLl9ibG9ja1tyZW1dID0gMHg4MFxuXG4gIC8vIHplcm8gKHJlbSArIDEpIHRyYWlsaW5nIGJpdHMsIHdoZXJlIChyZW0gKyAxKSBpcyB0aGUgc21hbGxlc3RcbiAgLy8gbm9uLW5lZ2F0aXZlIHNvbHV0aW9uIHRvIHRoZSBlcXVhdGlvbiAobGVuZ3RoICsgMSArIChyZW0gKyAxKSkgPT09IGZpbmFsU2l6ZSBtb2QgYmxvY2tTaXplXG4gIHRoaXMuX2Jsb2NrLmZpbGwoMCwgcmVtICsgMSlcblxuICBpZiAocmVtID49IHRoaXMuX2ZpbmFsU2l6ZSkge1xuICAgIHRoaXMuX3VwZGF0ZSh0aGlzLl9ibG9jaylcbiAgICB0aGlzLl9ibG9jay5maWxsKDApXG4gIH1cblxuICB2YXIgYml0cyA9IHRoaXMuX2xlbiAqIDhcblxuICAvLyB1aW50MzJcbiAgaWYgKGJpdHMgPD0gMHhmZmZmZmZmZikge1xuICAgIHRoaXMuX2Jsb2NrLndyaXRlVUludDMyQkUoYml0cywgdGhpcy5fYmxvY2tTaXplIC0gNClcblxuICAvLyB1aW50NjRcbiAgfSBlbHNlIHtcbiAgICB2YXIgbG93Qml0cyA9IChiaXRzICYgMHhmZmZmZmZmZikgPj4+IDBcbiAgICB2YXIgaGlnaEJpdHMgPSAoYml0cyAtIGxvd0JpdHMpIC8gMHgxMDAwMDAwMDBcblxuICAgIHRoaXMuX2Jsb2NrLndyaXRlVUludDMyQkUoaGlnaEJpdHMsIHRoaXMuX2Jsb2NrU2l6ZSAtIDgpXG4gICAgdGhpcy5fYmxvY2sud3JpdGVVSW50MzJCRShsb3dCaXRzLCB0aGlzLl9ibG9ja1NpemUgLSA0KVxuICB9XG5cbiAgdGhpcy5fdXBkYXRlKHRoaXMuX2Jsb2NrKVxuICB2YXIgaGFzaCA9IHRoaXMuX2hhc2goKVxuXG4gIHJldHVybiBlbmMgPyBoYXNoLnRvU3RyaW5nKGVuYykgOiBoYXNoXG59XG5cbkhhc2gucHJvdG90eXBlLl91cGRhdGUgPSBmdW5jdGlvbiAoKSB7XG4gIHRocm93IG5ldyBFcnJvcignX3VwZGF0ZSBtdXN0IGJlIGltcGxlbWVudGVkIGJ5IHN1YmNsYXNzJylcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBIYXNoXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/sha.js/hash.js\n");

/***/ }),

/***/ "./node_modules/sha.js/index.js":
/*!**************************************!*\
  !*** ./node_modules/sha.js/index.js ***!
  \**************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("var exports = module.exports = function SHA (algorithm) {\n  algorithm = algorithm.toLowerCase()\n\n  var Algorithm = exports[algorithm]\n  if (!Algorithm) throw new Error(algorithm + ' is not supported (we accept pull requests)')\n\n  return new Algorithm()\n}\n\nexports.sha = __webpack_require__(/*! ./sha */ \"./node_modules/sha.js/sha.js\")\nexports.sha1 = __webpack_require__(/*! ./sha1 */ \"./node_modules/sha.js/sha1.js\")\nexports.sha224 = __webpack_require__(/*! ./sha224 */ \"./node_modules/sha.js/sha224.js\")\nexports.sha256 = __webpack_require__(/*! ./sha256 */ \"./node_modules/sha.js/sha256.js\")\nexports.sha384 = __webpack_require__(/*! ./sha384 */ \"./node_modules/sha.js/sha384.js\")\nexports.sha512 = __webpack_require__(/*! ./sha512 */ \"./node_modules/sha.js/sha512.js\")\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc2hhLmpzL2luZGV4LmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBLGNBQWMsbUJBQU8sQ0FBQywyQ0FBTztBQUM3QixlQUFlLG1CQUFPLENBQUMsNkNBQVE7QUFDL0IsaUJBQWlCLG1CQUFPLENBQUMsaURBQVU7QUFDbkMsaUJBQWlCLG1CQUFPLENBQUMsaURBQVU7QUFDbkMsaUJBQWlCLG1CQUFPLENBQUMsaURBQVU7QUFDbkMsaUJBQWlCLG1CQUFPLENBQUMsaURBQVUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3NoYS5qcy9pbmRleC5qcz83NDJhIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBleHBvcnRzID0gbW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBTSEEgKGFsZ29yaXRobSkge1xuICBhbGdvcml0aG0gPSBhbGdvcml0aG0udG9Mb3dlckNhc2UoKVxuXG4gIHZhciBBbGdvcml0aG0gPSBleHBvcnRzW2FsZ29yaXRobV1cbiAgaWYgKCFBbGdvcml0aG0pIHRocm93IG5ldyBFcnJvcihhbGdvcml0aG0gKyAnIGlzIG5vdCBzdXBwb3J0ZWQgKHdlIGFjY2VwdCBwdWxsIHJlcXVlc3RzKScpXG5cbiAgcmV0dXJuIG5ldyBBbGdvcml0aG0oKVxufVxuXG5leHBvcnRzLnNoYSA9IHJlcXVpcmUoJy4vc2hhJylcbmV4cG9ydHMuc2hhMSA9IHJlcXVpcmUoJy4vc2hhMScpXG5leHBvcnRzLnNoYTIyNCA9IHJlcXVpcmUoJy4vc2hhMjI0JylcbmV4cG9ydHMuc2hhMjU2ID0gcmVxdWlyZSgnLi9zaGEyNTYnKVxuZXhwb3J0cy5zaGEzODQgPSByZXF1aXJlKCcuL3NoYTM4NCcpXG5leHBvcnRzLnNoYTUxMiA9IHJlcXVpcmUoJy4vc2hhNTEyJylcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/sha.js/index.js\n");

/***/ }),

/***/ "./node_modules/sha.js/sha.js":
/*!************************************!*\
  !*** ./node_modules/sha.js/sha.js ***!
  \************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("/*\n * A JavaScript implementation of the Secure Hash Algorithm, SHA-0, as defined\n * in FIPS PUB 180-1\n * This source code is derived from sha1.js of the same repository.\n * The difference between SHA-0 and SHA-1 is just a bitwise rotate left\n * operation was added.\n */\n\nvar inherits = __webpack_require__(/*! inherits */ \"./node_modules/inherits/inherits_browser.js\")\nvar Hash = __webpack_require__(/*! ./hash */ \"./node_modules/sha.js/hash.js\")\nvar Buffer = (__webpack_require__(/*! safe-buffer */ \"./node_modules/safe-buffer/index.js\").Buffer)\n\nvar K = [\n  0x5a827999, 0x6ed9eba1, 0x8f1bbcdc | 0, 0xca62c1d6 | 0\n]\n\nvar W = new Array(80)\n\nfunction Sha () {\n  this.init()\n  this._w = W\n\n  Hash.call(this, 64, 56)\n}\n\ninherits(Sha, Hash)\n\nSha.prototype.init = function () {\n  this._a = 0x67452301\n  this._b = 0xefcdab89\n  this._c = 0x98badcfe\n  this._d = 0x10325476\n  this._e = 0xc3d2e1f0\n\n  return this\n}\n\nfunction rotl5 (num) {\n  return (num << 5) | (num >>> 27)\n}\n\nfunction rotl30 (num) {\n  return (num << 30) | (num >>> 2)\n}\n\nfunction ft (s, b, c, d) {\n  if (s === 0) return (b & c) | ((~b) & d)\n  if (s === 2) return (b & c) | (b & d) | (c & d)\n  return b ^ c ^ d\n}\n\nSha.prototype._update = function (M) {\n  var W = this._w\n\n  var a = this._a | 0\n  var b = this._b | 0\n  var c = this._c | 0\n  var d = this._d | 0\n  var e = this._e | 0\n\n  for (var i = 0; i < 16; ++i) W[i] = M.readInt32BE(i * 4)\n  for (; i < 80; ++i) W[i] = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16]\n\n  for (var j = 0; j < 80; ++j) {\n    var s = ~~(j / 20)\n    var t = (rotl5(a) + ft(s, b, c, d) + e + W[j] + K[s]) | 0\n\n    e = d\n    d = c\n    c = rotl30(b)\n    b = a\n    a = t\n  }\n\n  this._a = (a + this._a) | 0\n  this._b = (b + this._b) | 0\n  this._c = (c + this._c) | 0\n  this._d = (d + this._d) | 0\n  this._e = (e + this._e) | 0\n}\n\nSha.prototype._hash = function () {\n  var H = Buffer.allocUnsafe(20)\n\n  H.writeInt32BE(this._a | 0, 0)\n  H.writeInt32BE(this._b | 0, 4)\n  H.writeInt32BE(this._c | 0, 8)\n  H.writeInt32BE(this._d | 0, 12)\n  H.writeInt32BE(this._e | 0, 16)\n\n  return H\n}\n\nmodule.exports = Sha\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc2hhLmpzL3NoYS5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxlQUFlLG1CQUFPLENBQUMsNkRBQVU7QUFDakMsV0FBVyxtQkFBTyxDQUFDLDZDQUFRO0FBQzNCLGFBQWEsc0ZBQTZCOztBQUUxQztBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxrQkFBa0IsUUFBUTtBQUMxQixTQUFTLFFBQVE7O0FBRWpCLGtCQUFrQixRQUFRO0FBQzFCO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvc2hhLmpzL3NoYS5qcz85Njg2Il0sInNvdXJjZXNDb250ZW50IjpbIi8qXG4gKiBBIEphdmFTY3JpcHQgaW1wbGVtZW50YXRpb24gb2YgdGhlIFNlY3VyZSBIYXNoIEFsZ29yaXRobSwgU0hBLTAsIGFzIGRlZmluZWRcbiAqIGluIEZJUFMgUFVCIDE4MC0xXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGRlcml2ZWQgZnJvbSBzaGExLmpzIG9mIHRoZSBzYW1lIHJlcG9zaXRvcnkuXG4gKiBUaGUgZGlmZmVyZW5jZSBiZXR3ZWVuIFNIQS0wIGFuZCBTSEEtMSBpcyBqdXN0IGEgYml0d2lzZSByb3RhdGUgbGVmdFxuICogb3BlcmF0aW9uIHdhcyBhZGRlZC5cbiAqL1xuXG52YXIgaW5oZXJpdHMgPSByZXF1aXJlKCdpbmhlcml0cycpXG52YXIgSGFzaCA9IHJlcXVpcmUoJy4vaGFzaCcpXG52YXIgQnVmZmVyID0gcmVxdWlyZSgnc2FmZS1idWZmZXInKS5CdWZmZXJcblxudmFyIEsgPSBbXG4gIDB4NWE4Mjc5OTksIDB4NmVkOWViYTEsIDB4OGYxYmJjZGMgfCAwLCAweGNhNjJjMWQ2IHwgMFxuXVxuXG52YXIgVyA9IG5ldyBBcnJheSg4MClcblxuZnVuY3Rpb24gU2hhICgpIHtcbiAgdGhpcy5pbml0KClcbiAgdGhpcy5fdyA9IFdcblxuICBIYXNoLmNhbGwodGhpcywgNjQsIDU2KVxufVxuXG5pbmhlcml0cyhTaGEsIEhhc2gpXG5cblNoYS5wcm90b3R5cGUuaW5pdCA9IGZ1bmN0aW9uICgpIHtcbiAgdGhpcy5fYSA9IDB4Njc0NTIzMDFcbiAgdGhpcy5fYiA9IDB4ZWZjZGFiODlcbiAgdGhpcy5fYyA9IDB4OThiYWRjZmVcbiAgdGhpcy5fZCA9IDB4MTAzMjU0NzZcbiAgdGhpcy5fZSA9IDB4YzNkMmUxZjBcblxuICByZXR1cm4gdGhpc1xufVxuXG5mdW5jdGlvbiByb3RsNSAobnVtKSB7XG4gIHJldHVybiAobnVtIDw8IDUpIHwgKG51bSA+Pj4gMjcpXG59XG5cbmZ1bmN0aW9uIHJvdGwzMCAobnVtKSB7XG4gIHJldHVybiAobnVtIDw8IDMwKSB8IChudW0gPj4+IDIpXG59XG5cbmZ1bmN0aW9uIGZ0IChzLCBiLCBjLCBkKSB7XG4gIGlmIChzID09PSAwKSByZXR1cm4gKGIgJiBjKSB8ICgofmIpICYgZClcbiAgaWYgKHMgPT09IDIpIHJldHVybiAoYiAmIGMpIHwgKGIgJiBkKSB8IChjICYgZClcbiAgcmV0dXJuIGIgXiBjIF4gZFxufVxuXG5TaGEucHJvdG90eXBlLl91cGRhdGUgPSBmdW5jdGlvbiAoTSkge1xuICB2YXIgVyA9IHRoaXMuX3dcblxuICB2YXIgYSA9IHRoaXMuX2EgfCAwXG4gIHZhciBiID0gdGhpcy5fYiB8IDBcbiAgdmFyIGMgPSB0aGlzLl9jIHwgMFxuICB2YXIgZCA9IHRoaXMuX2QgfCAwXG4gIHZhciBlID0gdGhpcy5fZSB8IDBcblxuICBmb3IgKHZhciBpID0gMDsgaSA8IDE2OyArK2kpIFdbaV0gPSBNLnJlYWRJbnQzMkJFKGkgKiA0KVxuICBmb3IgKDsgaSA8IDgwOyArK2kpIFdbaV0gPSBXW2kgLSAzXSBeIFdbaSAtIDhdIF4gV1tpIC0gMTRdIF4gV1tpIC0gMTZdXG5cbiAgZm9yICh2YXIgaiA9IDA7IGogPCA4MDsgKytqKSB7XG4gICAgdmFyIHMgPSB+fihqIC8gMjApXG4gICAgdmFyIHQgPSAocm90bDUoYSkgKyBmdChzLCBiLCBjLCBkKSArIGUgKyBXW2pdICsgS1tzXSkgfCAwXG5cbiAgICBlID0gZFxuICAgIGQgPSBjXG4gICAgYyA9IHJvdGwzMChiKVxuICAgIGIgPSBhXG4gICAgYSA9IHRcbiAgfVxuXG4gIHRoaXMuX2EgPSAoYSArIHRoaXMuX2EpIHwgMFxuICB0aGlzLl9iID0gKGIgKyB0aGlzLl9iKSB8IDBcbiAgdGhpcy5fYyA9IChjICsgdGhpcy5fYykgfCAwXG4gIHRoaXMuX2QgPSAoZCArIHRoaXMuX2QpIHwgMFxuICB0aGlzLl9lID0gKGUgKyB0aGlzLl9lKSB8IDBcbn1cblxuU2hhLnByb3RvdHlwZS5faGFzaCA9IGZ1bmN0aW9uICgpIHtcbiAgdmFyIEggPSBCdWZmZXIuYWxsb2NVbnNhZmUoMjApXG5cbiAgSC53cml0ZUludDMyQkUodGhpcy5fYSB8IDAsIDApXG4gIEgud3JpdGVJbnQzMkJFKHRoaXMuX2IgfCAwLCA0KVxuICBILndyaXRlSW50MzJCRSh0aGlzLl9jIHwgMCwgOClcbiAgSC53cml0ZUludDMyQkUodGhpcy5fZCB8IDAsIDEyKVxuICBILndyaXRlSW50MzJCRSh0aGlzLl9lIHwgMCwgMTYpXG5cbiAgcmV0dXJuIEhcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBTaGFcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/sha.js/sha.js\n");

/***/ }),

/***/ "./node_modules/sha.js/sha1.js":
/*!*************************************!*\
  !*** ./node_modules/sha.js/sha1.js ***!
  \*************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("/*\n * A JavaScript implementation of the Secure Hash Algorithm, SHA-1, as defined\n * in FIPS PUB 180-1\n * Version 2.1a Copyright Paul Johnston 2000 - 2002.\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n * Distributed under the BSD License\n * See http://pajhome.org.uk/crypt/md5 for details.\n */\n\nvar inherits = __webpack_require__(/*! inherits */ \"./node_modules/inherits/inherits_browser.js\")\nvar Hash = __webpack_require__(/*! ./hash */ \"./node_modules/sha.js/hash.js\")\nvar Buffer = (__webpack_require__(/*! safe-buffer */ \"./node_modules/safe-buffer/index.js\").Buffer)\n\nvar K = [\n  0x5a827999, 0x6ed9eba1, 0x8f1bbcdc | 0, 0xca62c1d6 | 0\n]\n\nvar W = new Array(80)\n\nfunction Sha1 () {\n  this.init()\n  this._w = W\n\n  Hash.call(this, 64, 56)\n}\n\ninherits(Sha1, Hash)\n\nSha1.prototype.init = function () {\n  this._a = 0x67452301\n  this._b = 0xefcdab89\n  this._c = 0x98badcfe\n  this._d = 0x10325476\n  this._e = 0xc3d2e1f0\n\n  return this\n}\n\nfunction rotl1 (num) {\n  return (num << 1) | (num >>> 31)\n}\n\nfunction rotl5 (num) {\n  return (num << 5) | (num >>> 27)\n}\n\nfunction rotl30 (num) {\n  return (num << 30) | (num >>> 2)\n}\n\nfunction ft (s, b, c, d) {\n  if (s === 0) return (b & c) | ((~b) & d)\n  if (s === 2) return (b & c) | (b & d) | (c & d)\n  return b ^ c ^ d\n}\n\nSha1.prototype._update = function (M) {\n  var W = this._w\n\n  var a = this._a | 0\n  var b = this._b | 0\n  var c = this._c | 0\n  var d = this._d | 0\n  var e = this._e | 0\n\n  for (var i = 0; i < 16; ++i) W[i] = M.readInt32BE(i * 4)\n  for (; i < 80; ++i) W[i] = rotl1(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16])\n\n  for (var j = 0; j < 80; ++j) {\n    var s = ~~(j / 20)\n    var t = (rotl5(a) + ft(s, b, c, d) + e + W[j] + K[s]) | 0\n\n    e = d\n    d = c\n    c = rotl30(b)\n    b = a\n    a = t\n  }\n\n  this._a = (a + this._a) | 0\n  this._b = (b + this._b) | 0\n  this._c = (c + this._c) | 0\n  this._d = (d + this._d) | 0\n  this._e = (e + this._e) | 0\n}\n\nSha1.prototype._hash = function () {\n  var H = Buffer.allocUnsafe(20)\n\n  H.writeInt32BE(this._a | 0, 0)\n  H.writeInt32BE(this._b | 0, 4)\n  H.writeInt32BE(this._c | 0, 8)\n  H.writeInt32BE(this._d | 0, 12)\n  H.writeInt32BE(this._e | 0, 16)\n\n  return H\n}\n\nmodule.exports = Sha1\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc2hhLmpzL3NoYTEuanMuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxlQUFlLG1CQUFPLENBQUMsNkRBQVU7QUFDakMsV0FBVyxtQkFBTyxDQUFDLDZDQUFRO0FBQzNCLGFBQWEsc0ZBQTZCOztBQUUxQztBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsa0JBQWtCLFFBQVE7QUFDMUIsU0FBUyxRQUFROztBQUVqQixrQkFBa0IsUUFBUTtBQUMxQjtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3NoYS5qcy9zaGExLmpzPzRkOWMiXSwic291cmNlc0NvbnRlbnQiOlsiLypcbiAqIEEgSmF2YVNjcmlwdCBpbXBsZW1lbnRhdGlvbiBvZiB0aGUgU2VjdXJlIEhhc2ggQWxnb3JpdGhtLCBTSEEtMSwgYXMgZGVmaW5lZFxuICogaW4gRklQUyBQVUIgMTgwLTFcbiAqIFZlcnNpb24gMi4xYSBDb3B5cmlnaHQgUGF1bCBKb2huc3RvbiAyMDAwIC0gMjAwMi5cbiAqIE90aGVyIGNvbnRyaWJ1dG9yczogR3JlZyBIb2x0LCBBbmRyZXcgS2VwZXJ0LCBZZG5hciwgTG9zdGluZXRcbiAqIERpc3RyaWJ1dGVkIHVuZGVyIHRoZSBCU0QgTGljZW5zZVxuICogU2VlIGh0dHA6Ly9wYWpob21lLm9yZy51ay9jcnlwdC9tZDUgZm9yIGRldGFpbHMuXG4gKi9cblxudmFyIGluaGVyaXRzID0gcmVxdWlyZSgnaW5oZXJpdHMnKVxudmFyIEhhc2ggPSByZXF1aXJlKCcuL2hhc2gnKVxudmFyIEJ1ZmZlciA9IHJlcXVpcmUoJ3NhZmUtYnVmZmVyJykuQnVmZmVyXG5cbnZhciBLID0gW1xuICAweDVhODI3OTk5LCAweDZlZDllYmExLCAweDhmMWJiY2RjIHwgMCwgMHhjYTYyYzFkNiB8IDBcbl1cblxudmFyIFcgPSBuZXcgQXJyYXkoODApXG5cbmZ1bmN0aW9uIFNoYTEgKCkge1xuICB0aGlzLmluaXQoKVxuICB0aGlzLl93ID0gV1xuXG4gIEhhc2guY2FsbCh0aGlzLCA2NCwgNTYpXG59XG5cbmluaGVyaXRzKFNoYTEsIEhhc2gpXG5cblNoYTEucHJvdG90eXBlLmluaXQgPSBmdW5jdGlvbiAoKSB7XG4gIHRoaXMuX2EgPSAweDY3NDUyMzAxXG4gIHRoaXMuX2IgPSAweGVmY2RhYjg5XG4gIHRoaXMuX2MgPSAweDk4YmFkY2ZlXG4gIHRoaXMuX2QgPSAweDEwMzI1NDc2XG4gIHRoaXMuX2UgPSAweGMzZDJlMWYwXG5cbiAgcmV0dXJuIHRoaXNcbn1cblxuZnVuY3Rpb24gcm90bDEgKG51bSkge1xuICByZXR1cm4gKG51bSA8PCAxKSB8IChudW0gPj4+IDMxKVxufVxuXG5mdW5jdGlvbiByb3RsNSAobnVtKSB7XG4gIHJldHVybiAobnVtIDw8IDUpIHwgKG51bSA+Pj4gMjcpXG59XG5cbmZ1bmN0aW9uIHJvdGwzMCAobnVtKSB7XG4gIHJldHVybiAobnVtIDw8IDMwKSB8IChudW0gPj4+IDIpXG59XG5cbmZ1bmN0aW9uIGZ0IChzLCBiLCBjLCBkKSB7XG4gIGlmIChzID09PSAwKSByZXR1cm4gKGIgJiBjKSB8ICgofmIpICYgZClcbiAgaWYgKHMgPT09IDIpIHJldHVybiAoYiAmIGMpIHwgKGIgJiBkKSB8IChjICYgZClcbiAgcmV0dXJuIGIgXiBjIF4gZFxufVxuXG5TaGExLnByb3RvdHlwZS5fdXBkYXRlID0gZnVuY3Rpb24gKE0pIHtcbiAgdmFyIFcgPSB0aGlzLl93XG5cbiAgdmFyIGEgPSB0aGlzLl9hIHwgMFxuICB2YXIgYiA9IHRoaXMuX2IgfCAwXG4gIHZhciBjID0gdGhpcy5fYyB8IDBcbiAgdmFyIGQgPSB0aGlzLl9kIHwgMFxuICB2YXIgZSA9IHRoaXMuX2UgfCAwXG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCAxNjsgKytpKSBXW2ldID0gTS5yZWFkSW50MzJCRShpICogNClcbiAgZm9yICg7IGkgPCA4MDsgKytpKSBXW2ldID0gcm90bDEoV1tpIC0gM10gXiBXW2kgLSA4XSBeIFdbaSAtIDE0XSBeIFdbaSAtIDE2XSlcblxuICBmb3IgKHZhciBqID0gMDsgaiA8IDgwOyArK2opIHtcbiAgICB2YXIgcyA9IH5+KGogLyAyMClcbiAgICB2YXIgdCA9IChyb3RsNShhKSArIGZ0KHMsIGIsIGMsIGQpICsgZSArIFdbal0gKyBLW3NdKSB8IDBcblxuICAgIGUgPSBkXG4gICAgZCA9IGNcbiAgICBjID0gcm90bDMwKGIpXG4gICAgYiA9IGFcbiAgICBhID0gdFxuICB9XG5cbiAgdGhpcy5fYSA9IChhICsgdGhpcy5fYSkgfCAwXG4gIHRoaXMuX2IgPSAoYiArIHRoaXMuX2IpIHwgMFxuICB0aGlzLl9jID0gKGMgKyB0aGlzLl9jKSB8IDBcbiAgdGhpcy5fZCA9IChkICsgdGhpcy5fZCkgfCAwXG4gIHRoaXMuX2UgPSAoZSArIHRoaXMuX2UpIHwgMFxufVxuXG5TaGExLnByb3RvdHlwZS5faGFzaCA9IGZ1bmN0aW9uICgpIHtcbiAgdmFyIEggPSBCdWZmZXIuYWxsb2NVbnNhZmUoMjApXG5cbiAgSC53cml0ZUludDMyQkUodGhpcy5fYSB8IDAsIDApXG4gIEgud3JpdGVJbnQzMkJFKHRoaXMuX2IgfCAwLCA0KVxuICBILndyaXRlSW50MzJCRSh0aGlzLl9jIHwgMCwgOClcbiAgSC53cml0ZUludDMyQkUodGhpcy5fZCB8IDAsIDEyKVxuICBILndyaXRlSW50MzJCRSh0aGlzLl9lIHwgMCwgMTYpXG5cbiAgcmV0dXJuIEhcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBTaGExXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/sha.js/sha1.js\n");

/***/ }),

/***/ "./node_modules/sha.js/sha224.js":
/*!***************************************!*\
  !*** ./node_modules/sha.js/sha224.js ***!
  \***************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("/**\n * A JavaScript implementation of the Secure Hash Algorithm, SHA-256, as defined\n * in FIPS 180-2\n * Version 2.2-beta Copyright Angel Marin, Paul Johnston 2000 - 2009.\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n *\n */\n\nvar inherits = __webpack_require__(/*! inherits */ \"./node_modules/inherits/inherits_browser.js\")\nvar Sha256 = __webpack_require__(/*! ./sha256 */ \"./node_modules/sha.js/sha256.js\")\nvar Hash = __webpack_require__(/*! ./hash */ \"./node_modules/sha.js/hash.js\")\nvar Buffer = (__webpack_require__(/*! safe-buffer */ \"./node_modules/safe-buffer/index.js\").Buffer)\n\nvar W = new Array(64)\n\nfunction Sha224 () {\n  this.init()\n\n  this._w = W // new Array(64)\n\n  Hash.call(this, 64, 56)\n}\n\ninherits(Sha224, Sha256)\n\nSha224.prototype.init = function () {\n  this._a = 0xc1059ed8\n  this._b = 0x367cd507\n  this._c = 0x3070dd17\n  this._d = 0xf70e5939\n  this._e = 0xffc00b31\n  this._f = 0x68581511\n  this._g = 0x64f98fa7\n  this._h = 0xbefa4fa4\n\n  return this\n}\n\nSha224.prototype._hash = function () {\n  var H = Buffer.allocUnsafe(28)\n\n  H.writeInt32BE(this._a, 0)\n  H.writeInt32BE(this._b, 4)\n  H.writeInt32BE(this._c, 8)\n  H.writeInt32BE(this._d, 12)\n  H.writeInt32BE(this._e, 16)\n  H.writeInt32BE(this._f, 20)\n  H.writeInt32BE(this._g, 24)\n\n  return H\n}\n\nmodule.exports = Sha224\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc2hhLmpzL3NoYTIyNC5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxlQUFlLG1CQUFPLENBQUMsNkRBQVU7QUFDakMsYUFBYSxtQkFBTyxDQUFDLGlEQUFVO0FBQy9CLFdBQVcsbUJBQU8sQ0FBQyw2Q0FBUTtBQUMzQixhQUFhLHNGQUE2Qjs7QUFFMUM7O0FBRUE7QUFDQTs7QUFFQTs7QUFFQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvc2hhLmpzL3NoYTIyNC5qcz85YWMyIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQSBKYXZhU2NyaXB0IGltcGxlbWVudGF0aW9uIG9mIHRoZSBTZWN1cmUgSGFzaCBBbGdvcml0aG0sIFNIQS0yNTYsIGFzIGRlZmluZWRcbiAqIGluIEZJUFMgMTgwLTJcbiAqIFZlcnNpb24gMi4yLWJldGEgQ29weXJpZ2h0IEFuZ2VsIE1hcmluLCBQYXVsIEpvaG5zdG9uIDIwMDAgLSAyMDA5LlxuICogT3RoZXIgY29udHJpYnV0b3JzOiBHcmVnIEhvbHQsIEFuZHJldyBLZXBlcnQsIFlkbmFyLCBMb3N0aW5ldFxuICpcbiAqL1xuXG52YXIgaW5oZXJpdHMgPSByZXF1aXJlKCdpbmhlcml0cycpXG52YXIgU2hhMjU2ID0gcmVxdWlyZSgnLi9zaGEyNTYnKVxudmFyIEhhc2ggPSByZXF1aXJlKCcuL2hhc2gnKVxudmFyIEJ1ZmZlciA9IHJlcXVpcmUoJ3NhZmUtYnVmZmVyJykuQnVmZmVyXG5cbnZhciBXID0gbmV3IEFycmF5KDY0KVxuXG5mdW5jdGlvbiBTaGEyMjQgKCkge1xuICB0aGlzLmluaXQoKVxuXG4gIHRoaXMuX3cgPSBXIC8vIG5ldyBBcnJheSg2NClcblxuICBIYXNoLmNhbGwodGhpcywgNjQsIDU2KVxufVxuXG5pbmhlcml0cyhTaGEyMjQsIFNoYTI1NilcblxuU2hhMjI0LnByb3RvdHlwZS5pbml0ID0gZnVuY3Rpb24gKCkge1xuICB0aGlzLl9hID0gMHhjMTA1OWVkOFxuICB0aGlzLl9iID0gMHgzNjdjZDUwN1xuICB0aGlzLl9jID0gMHgzMDcwZGQxN1xuICB0aGlzLl9kID0gMHhmNzBlNTkzOVxuICB0aGlzLl9lID0gMHhmZmMwMGIzMVxuICB0aGlzLl9mID0gMHg2ODU4MTUxMVxuICB0aGlzLl9nID0gMHg2NGY5OGZhN1xuICB0aGlzLl9oID0gMHhiZWZhNGZhNFxuXG4gIHJldHVybiB0aGlzXG59XG5cblNoYTIyNC5wcm90b3R5cGUuX2hhc2ggPSBmdW5jdGlvbiAoKSB7XG4gIHZhciBIID0gQnVmZmVyLmFsbG9jVW5zYWZlKDI4KVxuXG4gIEgud3JpdGVJbnQzMkJFKHRoaXMuX2EsIDApXG4gIEgud3JpdGVJbnQzMkJFKHRoaXMuX2IsIDQpXG4gIEgud3JpdGVJbnQzMkJFKHRoaXMuX2MsIDgpXG4gIEgud3JpdGVJbnQzMkJFKHRoaXMuX2QsIDEyKVxuICBILndyaXRlSW50MzJCRSh0aGlzLl9lLCAxNilcbiAgSC53cml0ZUludDMyQkUodGhpcy5fZiwgMjApXG4gIEgud3JpdGVJbnQzMkJFKHRoaXMuX2csIDI0KVxuXG4gIHJldHVybiBIXG59XG5cbm1vZHVsZS5leHBvcnRzID0gU2hhMjI0XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/sha.js/sha224.js\n");

/***/ }),

/***/ "./node_modules/sha.js/sha256.js":
/*!***************************************!*\
  !*** ./node_modules/sha.js/sha256.js ***!
  \***************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("/**\n * A JavaScript implementation of the Secure Hash Algorithm, SHA-256, as defined\n * in FIPS 180-2\n * Version 2.2-beta Copyright Angel Marin, Paul Johnston 2000 - 2009.\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n *\n */\n\nvar inherits = __webpack_require__(/*! inherits */ \"./node_modules/inherits/inherits_browser.js\")\nvar Hash = __webpack_require__(/*! ./hash */ \"./node_modules/sha.js/hash.js\")\nvar Buffer = (__webpack_require__(/*! safe-buffer */ \"./node_modules/safe-buffer/index.js\").Buffer)\n\nvar K = [\n  0x428A2F98, 0x71374491, 0xB5C0FBCF, 0xE9B5DBA5,\n  0x3956C25B, 0x59F111F1, 0x923F82A4, 0xAB1C5ED5,\n  0xD807AA98, 0x12835B01, 0x243185BE, 0x550C7DC3,\n  0x72BE5D74, 0x80DEB1FE, 0x9BDC06A7, 0xC19BF174,\n  0xE49B69C1, 0xEFBE4786, 0x0FC19DC6, 0x240CA1CC,\n  0x2DE92C6F, 0x4A7484AA, 0x5CB0A9DC, 0x76F988DA,\n  0x983E5152, 0xA831C66D, 0xB00327C8, 0xBF597FC7,\n  0xC6E00BF3, 0xD5A79147, 0x06CA6351, 0x14292967,\n  0x27B70A85, 0x2E1B2138, 0x4D2C6DFC, 0x53380D13,\n  0x650A7354, 0x766A0ABB, 0x81C2C92E, 0x92722C85,\n  0xA2BFE8A1, 0xA81A664B, 0xC24B8B70, 0xC76C51A3,\n  0xD192E819, 0xD6990624, 0xF40E3585, 0x106AA070,\n  0x19A4C116, 0x1E376C08, 0x2748774C, 0x34B0BCB5,\n  0x391C0CB3, 0x4ED8AA4A, 0x5B9CCA4F, 0x682E6FF3,\n  0x748F82EE, 0x78A5636F, 0x84C87814, 0x8CC70208,\n  0x90BEFFFA, 0xA4506CEB, 0xBEF9A3F7, 0xC67178F2\n]\n\nvar W = new Array(64)\n\nfunction Sha256 () {\n  this.init()\n\n  this._w = W // new Array(64)\n\n  Hash.call(this, 64, 56)\n}\n\ninherits(Sha256, Hash)\n\nSha256.prototype.init = function () {\n  this._a = 0x6a09e667\n  this._b = 0xbb67ae85\n  this._c = 0x3c6ef372\n  this._d = 0xa54ff53a\n  this._e = 0x510e527f\n  this._f = 0x9b05688c\n  this._g = 0x1f83d9ab\n  this._h = 0x5be0cd19\n\n  return this\n}\n\nfunction ch (x, y, z) {\n  return z ^ (x & (y ^ z))\n}\n\nfunction maj (x, y, z) {\n  return (x & y) | (z & (x | y))\n}\n\nfunction sigma0 (x) {\n  return (x >>> 2 | x << 30) ^ (x >>> 13 | x << 19) ^ (x >>> 22 | x << 10)\n}\n\nfunction sigma1 (x) {\n  return (x >>> 6 | x << 26) ^ (x >>> 11 | x << 21) ^ (x >>> 25 | x << 7)\n}\n\nfunction gamma0 (x) {\n  return (x >>> 7 | x << 25) ^ (x >>> 18 | x << 14) ^ (x >>> 3)\n}\n\nfunction gamma1 (x) {\n  return (x >>> 17 | x << 15) ^ (x >>> 19 | x << 13) ^ (x >>> 10)\n}\n\nSha256.prototype._update = function (M) {\n  var W = this._w\n\n  var a = this._a | 0\n  var b = this._b | 0\n  var c = this._c | 0\n  var d = this._d | 0\n  var e = this._e | 0\n  var f = this._f | 0\n  var g = this._g | 0\n  var h = this._h | 0\n\n  for (var i = 0; i < 16; ++i) W[i] = M.readInt32BE(i * 4)\n  for (; i < 64; ++i) W[i] = (gamma1(W[i - 2]) + W[i - 7] + gamma0(W[i - 15]) + W[i - 16]) | 0\n\n  for (var j = 0; j < 64; ++j) {\n    var T1 = (h + sigma1(e) + ch(e, f, g) + K[j] + W[j]) | 0\n    var T2 = (sigma0(a) + maj(a, b, c)) | 0\n\n    h = g\n    g = f\n    f = e\n    e = (d + T1) | 0\n    d = c\n    c = b\n    b = a\n    a = (T1 + T2) | 0\n  }\n\n  this._a = (a + this._a) | 0\n  this._b = (b + this._b) | 0\n  this._c = (c + this._c) | 0\n  this._d = (d + this._d) | 0\n  this._e = (e + this._e) | 0\n  this._f = (f + this._f) | 0\n  this._g = (g + this._g) | 0\n  this._h = (h + this._h) | 0\n}\n\nSha256.prototype._hash = function () {\n  var H = Buffer.allocUnsafe(32)\n\n  H.writeInt32BE(this._a, 0)\n  H.writeInt32BE(this._b, 4)\n  H.writeInt32BE(this._c, 8)\n  H.writeInt32BE(this._d, 12)\n  H.writeInt32BE(this._e, 16)\n  H.writeInt32BE(this._f, 20)\n  H.writeInt32BE(this._g, 24)\n  H.writeInt32BE(this._h, 28)\n\n  return H\n}\n\nmodule.exports = Sha256\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc2hhLmpzL3NoYTI1Ni5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxlQUFlLG1CQUFPLENBQUMsNkRBQVU7QUFDakMsV0FBVyxtQkFBTyxDQUFDLDZDQUFRO0FBQzNCLGFBQWEsc0ZBQTZCOztBQUUxQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTs7QUFFQTs7QUFFQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxrQkFBa0IsUUFBUTtBQUMxQixTQUFTLFFBQVE7O0FBRWpCLGtCQUFrQixRQUFRO0FBQzFCO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvc2hhLmpzL3NoYTI1Ni5qcz83ZTdjIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQSBKYXZhU2NyaXB0IGltcGxlbWVudGF0aW9uIG9mIHRoZSBTZWN1cmUgSGFzaCBBbGdvcml0aG0sIFNIQS0yNTYsIGFzIGRlZmluZWRcbiAqIGluIEZJUFMgMTgwLTJcbiAqIFZlcnNpb24gMi4yLWJldGEgQ29weXJpZ2h0IEFuZ2VsIE1hcmluLCBQYXVsIEpvaG5zdG9uIDIwMDAgLSAyMDA5LlxuICogT3RoZXIgY29udHJpYnV0b3JzOiBHcmVnIEhvbHQsIEFuZHJldyBLZXBlcnQsIFlkbmFyLCBMb3N0aW5ldFxuICpcbiAqL1xuXG52YXIgaW5oZXJpdHMgPSByZXF1aXJlKCdpbmhlcml0cycpXG52YXIgSGFzaCA9IHJlcXVpcmUoJy4vaGFzaCcpXG52YXIgQnVmZmVyID0gcmVxdWlyZSgnc2FmZS1idWZmZXInKS5CdWZmZXJcblxudmFyIEsgPSBbXG4gIDB4NDI4QTJGOTgsIDB4NzEzNzQ0OTEsIDB4QjVDMEZCQ0YsIDB4RTlCNURCQTUsXG4gIDB4Mzk1NkMyNUIsIDB4NTlGMTExRjEsIDB4OTIzRjgyQTQsIDB4QUIxQzVFRDUsXG4gIDB4RDgwN0FBOTgsIDB4MTI4MzVCMDEsIDB4MjQzMTg1QkUsIDB4NTUwQzdEQzMsXG4gIDB4NzJCRTVENzQsIDB4ODBERUIxRkUsIDB4OUJEQzA2QTcsIDB4QzE5QkYxNzQsXG4gIDB4RTQ5QjY5QzEsIDB4RUZCRTQ3ODYsIDB4MEZDMTlEQzYsIDB4MjQwQ0ExQ0MsXG4gIDB4MkRFOTJDNkYsIDB4NEE3NDg0QUEsIDB4NUNCMEE5REMsIDB4NzZGOTg4REEsXG4gIDB4OTgzRTUxNTIsIDB4QTgzMUM2NkQsIDB4QjAwMzI3QzgsIDB4QkY1OTdGQzcsXG4gIDB4QzZFMDBCRjMsIDB4RDVBNzkxNDcsIDB4MDZDQTYzNTEsIDB4MTQyOTI5NjcsXG4gIDB4MjdCNzBBODUsIDB4MkUxQjIxMzgsIDB4NEQyQzZERkMsIDB4NTMzODBEMTMsXG4gIDB4NjUwQTczNTQsIDB4NzY2QTBBQkIsIDB4ODFDMkM5MkUsIDB4OTI3MjJDODUsXG4gIDB4QTJCRkU4QTEsIDB4QTgxQTY2NEIsIDB4QzI0QjhCNzAsIDB4Qzc2QzUxQTMsXG4gIDB4RDE5MkU4MTksIDB4RDY5OTA2MjQsIDB4RjQwRTM1ODUsIDB4MTA2QUEwNzAsXG4gIDB4MTlBNEMxMTYsIDB4MUUzNzZDMDgsIDB4Mjc0ODc3NEMsIDB4MzRCMEJDQjUsXG4gIDB4MzkxQzBDQjMsIDB4NEVEOEFBNEEsIDB4NUI5Q0NBNEYsIDB4NjgyRTZGRjMsXG4gIDB4NzQ4RjgyRUUsIDB4NzhBNTYzNkYsIDB4ODRDODc4MTQsIDB4OENDNzAyMDgsXG4gIDB4OTBCRUZGRkEsIDB4QTQ1MDZDRUIsIDB4QkVGOUEzRjcsIDB4QzY3MTc4RjJcbl1cblxudmFyIFcgPSBuZXcgQXJyYXkoNjQpXG5cbmZ1bmN0aW9uIFNoYTI1NiAoKSB7XG4gIHRoaXMuaW5pdCgpXG5cbiAgdGhpcy5fdyA9IFcgLy8gbmV3IEFycmF5KDY0KVxuXG4gIEhhc2guY2FsbCh0aGlzLCA2NCwgNTYpXG59XG5cbmluaGVyaXRzKFNoYTI1NiwgSGFzaClcblxuU2hhMjU2LnByb3RvdHlwZS5pbml0ID0gZnVuY3Rpb24gKCkge1xuICB0aGlzLl9hID0gMHg2YTA5ZTY2N1xuICB0aGlzLl9iID0gMHhiYjY3YWU4NVxuICB0aGlzLl9jID0gMHgzYzZlZjM3MlxuICB0aGlzLl9kID0gMHhhNTRmZjUzYVxuICB0aGlzLl9lID0gMHg1MTBlNTI3ZlxuICB0aGlzLl9mID0gMHg5YjA1Njg4Y1xuICB0aGlzLl9nID0gMHgxZjgzZDlhYlxuICB0aGlzLl9oID0gMHg1YmUwY2QxOVxuXG4gIHJldHVybiB0aGlzXG59XG5cbmZ1bmN0aW9uIGNoICh4LCB5LCB6KSB7XG4gIHJldHVybiB6IF4gKHggJiAoeSBeIHopKVxufVxuXG5mdW5jdGlvbiBtYWogKHgsIHksIHopIHtcbiAgcmV0dXJuICh4ICYgeSkgfCAoeiAmICh4IHwgeSkpXG59XG5cbmZ1bmN0aW9uIHNpZ21hMCAoeCkge1xuICByZXR1cm4gKHggPj4+IDIgfCB4IDw8IDMwKSBeICh4ID4+PiAxMyB8IHggPDwgMTkpIF4gKHggPj4+IDIyIHwgeCA8PCAxMClcbn1cblxuZnVuY3Rpb24gc2lnbWExICh4KSB7XG4gIHJldHVybiAoeCA+Pj4gNiB8IHggPDwgMjYpIF4gKHggPj4+IDExIHwgeCA8PCAyMSkgXiAoeCA+Pj4gMjUgfCB4IDw8IDcpXG59XG5cbmZ1bmN0aW9uIGdhbW1hMCAoeCkge1xuICByZXR1cm4gKHggPj4+IDcgfCB4IDw8IDI1KSBeICh4ID4+PiAxOCB8IHggPDwgMTQpIF4gKHggPj4+IDMpXG59XG5cbmZ1bmN0aW9uIGdhbW1hMSAoeCkge1xuICByZXR1cm4gKHggPj4+IDE3IHwgeCA8PCAxNSkgXiAoeCA+Pj4gMTkgfCB4IDw8IDEzKSBeICh4ID4+PiAxMClcbn1cblxuU2hhMjU2LnByb3RvdHlwZS5fdXBkYXRlID0gZnVuY3Rpb24gKE0pIHtcbiAgdmFyIFcgPSB0aGlzLl93XG5cbiAgdmFyIGEgPSB0aGlzLl9hIHwgMFxuICB2YXIgYiA9IHRoaXMuX2IgfCAwXG4gIHZhciBjID0gdGhpcy5fYyB8IDBcbiAgdmFyIGQgPSB0aGlzLl9kIHwgMFxuICB2YXIgZSA9IHRoaXMuX2UgfCAwXG4gIHZhciBmID0gdGhpcy5fZiB8IDBcbiAgdmFyIGcgPSB0aGlzLl9nIHwgMFxuICB2YXIgaCA9IHRoaXMuX2ggfCAwXG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCAxNjsgKytpKSBXW2ldID0gTS5yZWFkSW50MzJCRShpICogNClcbiAgZm9yICg7IGkgPCA2NDsgKytpKSBXW2ldID0gKGdhbW1hMShXW2kgLSAyXSkgKyBXW2kgLSA3XSArIGdhbW1hMChXW2kgLSAxNV0pICsgV1tpIC0gMTZdKSB8IDBcblxuICBmb3IgKHZhciBqID0gMDsgaiA8IDY0OyArK2opIHtcbiAgICB2YXIgVDEgPSAoaCArIHNpZ21hMShlKSArIGNoKGUsIGYsIGcpICsgS1tqXSArIFdbal0pIHwgMFxuICAgIHZhciBUMiA9IChzaWdtYTAoYSkgKyBtYWooYSwgYiwgYykpIHwgMFxuXG4gICAgaCA9IGdcbiAgICBnID0gZlxuICAgIGYgPSBlXG4gICAgZSA9IChkICsgVDEpIHwgMFxuICAgIGQgPSBjXG4gICAgYyA9IGJcbiAgICBiID0gYVxuICAgIGEgPSAoVDEgKyBUMikgfCAwXG4gIH1cblxuICB0aGlzLl9hID0gKGEgKyB0aGlzLl9hKSB8IDBcbiAgdGhpcy5fYiA9IChiICsgdGhpcy5fYikgfCAwXG4gIHRoaXMuX2MgPSAoYyArIHRoaXMuX2MpIHwgMFxuICB0aGlzLl9kID0gKGQgKyB0aGlzLl9kKSB8IDBcbiAgdGhpcy5fZSA9IChlICsgdGhpcy5fZSkgfCAwXG4gIHRoaXMuX2YgPSAoZiArIHRoaXMuX2YpIHwgMFxuICB0aGlzLl9nID0gKGcgKyB0aGlzLl9nKSB8IDBcbiAgdGhpcy5faCA9IChoICsgdGhpcy5faCkgfCAwXG59XG5cblNoYTI1Ni5wcm90b3R5cGUuX2hhc2ggPSBmdW5jdGlvbiAoKSB7XG4gIHZhciBIID0gQnVmZmVyLmFsbG9jVW5zYWZlKDMyKVxuXG4gIEgud3JpdGVJbnQzMkJFKHRoaXMuX2EsIDApXG4gIEgud3JpdGVJbnQzMkJFKHRoaXMuX2IsIDQpXG4gIEgud3JpdGVJbnQzMkJFKHRoaXMuX2MsIDgpXG4gIEgud3JpdGVJbnQzMkJFKHRoaXMuX2QsIDEyKVxuICBILndyaXRlSW50MzJCRSh0aGlzLl9lLCAxNilcbiAgSC53cml0ZUludDMyQkUodGhpcy5fZiwgMjApXG4gIEgud3JpdGVJbnQzMkJFKHRoaXMuX2csIDI0KVxuICBILndyaXRlSW50MzJCRSh0aGlzLl9oLCAyOClcblxuICByZXR1cm4gSFxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IFNoYTI1NlxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/sha.js/sha256.js\n");

/***/ }),

/***/ "./node_modules/sha.js/sha384.js":
/*!***************************************!*\
  !*** ./node_modules/sha.js/sha384.js ***!
  \***************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("var inherits = __webpack_require__(/*! inherits */ \"./node_modules/inherits/inherits_browser.js\")\nvar SHA512 = __webpack_require__(/*! ./sha512 */ \"./node_modules/sha.js/sha512.js\")\nvar Hash = __webpack_require__(/*! ./hash */ \"./node_modules/sha.js/hash.js\")\nvar Buffer = (__webpack_require__(/*! safe-buffer */ \"./node_modules/safe-buffer/index.js\").Buffer)\n\nvar W = new Array(160)\n\nfunction Sha384 () {\n  this.init()\n  this._w = W\n\n  Hash.call(this, 128, 112)\n}\n\ninherits(Sha384, SHA512)\n\nSha384.prototype.init = function () {\n  this._ah = 0xcbbb9d5d\n  this._bh = 0x629a292a\n  this._ch = 0x9159015a\n  this._dh = 0x152fecd8\n  this._eh = 0x67332667\n  this._fh = 0x8eb44a87\n  this._gh = 0xdb0c2e0d\n  this._hh = 0x47b5481d\n\n  this._al = 0xc1059ed8\n  this._bl = 0x367cd507\n  this._cl = 0x3070dd17\n  this._dl = 0xf70e5939\n  this._el = 0xffc00b31\n  this._fl = 0x68581511\n  this._gl = 0x64f98fa7\n  this._hl = 0xbefa4fa4\n\n  return this\n}\n\nSha384.prototype._hash = function () {\n  var H = Buffer.allocUnsafe(48)\n\n  function writeInt64BE (h, l, offset) {\n    H.writeInt32BE(h, offset)\n    H.writeInt32BE(l, offset + 4)\n  }\n\n  writeInt64BE(this._ah, this._al, 0)\n  writeInt64BE(this._bh, this._bl, 8)\n  writeInt64BE(this._ch, this._cl, 16)\n  writeInt64BE(this._dh, this._dl, 24)\n  writeInt64BE(this._eh, this._el, 32)\n  writeInt64BE(this._fh, this._fl, 40)\n\n  return H\n}\n\nmodule.exports = Sha384\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc2hhLmpzL3NoYTM4NC5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBQSxlQUFlLG1CQUFPLENBQUMsNkRBQVU7QUFDakMsYUFBYSxtQkFBTyxDQUFDLGlEQUFVO0FBQy9CLFdBQVcsbUJBQU8sQ0FBQyw2Q0FBUTtBQUMzQixhQUFhLHNGQUE2Qjs7QUFFMUM7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9zaGEuanMvc2hhMzg0LmpzPzUzM2YiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIGluaGVyaXRzID0gcmVxdWlyZSgnaW5oZXJpdHMnKVxudmFyIFNIQTUxMiA9IHJlcXVpcmUoJy4vc2hhNTEyJylcbnZhciBIYXNoID0gcmVxdWlyZSgnLi9oYXNoJylcbnZhciBCdWZmZXIgPSByZXF1aXJlKCdzYWZlLWJ1ZmZlcicpLkJ1ZmZlclxuXG52YXIgVyA9IG5ldyBBcnJheSgxNjApXG5cbmZ1bmN0aW9uIFNoYTM4NCAoKSB7XG4gIHRoaXMuaW5pdCgpXG4gIHRoaXMuX3cgPSBXXG5cbiAgSGFzaC5jYWxsKHRoaXMsIDEyOCwgMTEyKVxufVxuXG5pbmhlcml0cyhTaGEzODQsIFNIQTUxMilcblxuU2hhMzg0LnByb3RvdHlwZS5pbml0ID0gZnVuY3Rpb24gKCkge1xuICB0aGlzLl9haCA9IDB4Y2JiYjlkNWRcbiAgdGhpcy5fYmggPSAweDYyOWEyOTJhXG4gIHRoaXMuX2NoID0gMHg5MTU5MDE1YVxuICB0aGlzLl9kaCA9IDB4MTUyZmVjZDhcbiAgdGhpcy5fZWggPSAweDY3MzMyNjY3XG4gIHRoaXMuX2ZoID0gMHg4ZWI0NGE4N1xuICB0aGlzLl9naCA9IDB4ZGIwYzJlMGRcbiAgdGhpcy5faGggPSAweDQ3YjU0ODFkXG5cbiAgdGhpcy5fYWwgPSAweGMxMDU5ZWQ4XG4gIHRoaXMuX2JsID0gMHgzNjdjZDUwN1xuICB0aGlzLl9jbCA9IDB4MzA3MGRkMTdcbiAgdGhpcy5fZGwgPSAweGY3MGU1OTM5XG4gIHRoaXMuX2VsID0gMHhmZmMwMGIzMVxuICB0aGlzLl9mbCA9IDB4Njg1ODE1MTFcbiAgdGhpcy5fZ2wgPSAweDY0Zjk4ZmE3XG4gIHRoaXMuX2hsID0gMHhiZWZhNGZhNFxuXG4gIHJldHVybiB0aGlzXG59XG5cblNoYTM4NC5wcm90b3R5cGUuX2hhc2ggPSBmdW5jdGlvbiAoKSB7XG4gIHZhciBIID0gQnVmZmVyLmFsbG9jVW5zYWZlKDQ4KVxuXG4gIGZ1bmN0aW9uIHdyaXRlSW50NjRCRSAoaCwgbCwgb2Zmc2V0KSB7XG4gICAgSC53cml0ZUludDMyQkUoaCwgb2Zmc2V0KVxuICAgIEgud3JpdGVJbnQzMkJFKGwsIG9mZnNldCArIDQpXG4gIH1cblxuICB3cml0ZUludDY0QkUodGhpcy5fYWgsIHRoaXMuX2FsLCAwKVxuICB3cml0ZUludDY0QkUodGhpcy5fYmgsIHRoaXMuX2JsLCA4KVxuICB3cml0ZUludDY0QkUodGhpcy5fY2gsIHRoaXMuX2NsLCAxNilcbiAgd3JpdGVJbnQ2NEJFKHRoaXMuX2RoLCB0aGlzLl9kbCwgMjQpXG4gIHdyaXRlSW50NjRCRSh0aGlzLl9laCwgdGhpcy5fZWwsIDMyKVxuICB3cml0ZUludDY0QkUodGhpcy5fZmgsIHRoaXMuX2ZsLCA0MClcblxuICByZXR1cm4gSFxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IFNoYTM4NFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/sha.js/sha384.js\n");

/***/ }),

/***/ "./node_modules/sha.js/sha512.js":
/*!***************************************!*\
  !*** ./node_modules/sha.js/sha512.js ***!
  \***************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("var inherits = __webpack_require__(/*! inherits */ \"./node_modules/inherits/inherits_browser.js\")\nvar Hash = __webpack_require__(/*! ./hash */ \"./node_modules/sha.js/hash.js\")\nvar Buffer = (__webpack_require__(/*! safe-buffer */ \"./node_modules/safe-buffer/index.js\").Buffer)\n\nvar K = [\n  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,\n  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,\n  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,\n  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,\n  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,\n  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,\n  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,\n  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,\n  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,\n  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,\n  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,\n  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,\n  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,\n  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,\n  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,\n  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,\n  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,\n  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,\n  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,\n  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,\n  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,\n  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,\n  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,\n  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,\n  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,\n  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,\n  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,\n  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,\n  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,\n  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,\n  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,\n  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,\n  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,\n  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,\n  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,\n  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,\n  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,\n  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,\n  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,\n  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817\n]\n\nvar W = new Array(160)\n\nfunction Sha512 () {\n  this.init()\n  this._w = W\n\n  Hash.call(this, 128, 112)\n}\n\ninherits(Sha512, Hash)\n\nSha512.prototype.init = function () {\n  this._ah = 0x6a09e667\n  this._bh = 0xbb67ae85\n  this._ch = 0x3c6ef372\n  this._dh = 0xa54ff53a\n  this._eh = 0x510e527f\n  this._fh = 0x9b05688c\n  this._gh = 0x1f83d9ab\n  this._hh = 0x5be0cd19\n\n  this._al = 0xf3bcc908\n  this._bl = 0x84caa73b\n  this._cl = 0xfe94f82b\n  this._dl = 0x5f1d36f1\n  this._el = 0xade682d1\n  this._fl = 0x2b3e6c1f\n  this._gl = 0xfb41bd6b\n  this._hl = 0x137e2179\n\n  return this\n}\n\nfunction Ch (x, y, z) {\n  return z ^ (x & (y ^ z))\n}\n\nfunction maj (x, y, z) {\n  return (x & y) | (z & (x | y))\n}\n\nfunction sigma0 (x, xl) {\n  return (x >>> 28 | xl << 4) ^ (xl >>> 2 | x << 30) ^ (xl >>> 7 | x << 25)\n}\n\nfunction sigma1 (x, xl) {\n  return (x >>> 14 | xl << 18) ^ (x >>> 18 | xl << 14) ^ (xl >>> 9 | x << 23)\n}\n\nfunction Gamma0 (x, xl) {\n  return (x >>> 1 | xl << 31) ^ (x >>> 8 | xl << 24) ^ (x >>> 7)\n}\n\nfunction Gamma0l (x, xl) {\n  return (x >>> 1 | xl << 31) ^ (x >>> 8 | xl << 24) ^ (x >>> 7 | xl << 25)\n}\n\nfunction Gamma1 (x, xl) {\n  return (x >>> 19 | xl << 13) ^ (xl >>> 29 | x << 3) ^ (x >>> 6)\n}\n\nfunction Gamma1l (x, xl) {\n  return (x >>> 19 | xl << 13) ^ (xl >>> 29 | x << 3) ^ (x >>> 6 | xl << 26)\n}\n\nfunction getCarry (a, b) {\n  return (a >>> 0) < (b >>> 0) ? 1 : 0\n}\n\nSha512.prototype._update = function (M) {\n  var W = this._w\n\n  var ah = this._ah | 0\n  var bh = this._bh | 0\n  var ch = this._ch | 0\n  var dh = this._dh | 0\n  var eh = this._eh | 0\n  var fh = this._fh | 0\n  var gh = this._gh | 0\n  var hh = this._hh | 0\n\n  var al = this._al | 0\n  var bl = this._bl | 0\n  var cl = this._cl | 0\n  var dl = this._dl | 0\n  var el = this._el | 0\n  var fl = this._fl | 0\n  var gl = this._gl | 0\n  var hl = this._hl | 0\n\n  for (var i = 0; i < 32; i += 2) {\n    W[i] = M.readInt32BE(i * 4)\n    W[i + 1] = M.readInt32BE(i * 4 + 4)\n  }\n  for (; i < 160; i += 2) {\n    var xh = W[i - 15 * 2]\n    var xl = W[i - 15 * 2 + 1]\n    var gamma0 = Gamma0(xh, xl)\n    var gamma0l = Gamma0l(xl, xh)\n\n    xh = W[i - 2 * 2]\n    xl = W[i - 2 * 2 + 1]\n    var gamma1 = Gamma1(xh, xl)\n    var gamma1l = Gamma1l(xl, xh)\n\n    // W[i] = gamma0 + W[i - 7] + gamma1 + W[i - 16]\n    var Wi7h = W[i - 7 * 2]\n    var Wi7l = W[i - 7 * 2 + 1]\n\n    var Wi16h = W[i - 16 * 2]\n    var Wi16l = W[i - 16 * 2 + 1]\n\n    var Wil = (gamma0l + Wi7l) | 0\n    var Wih = (gamma0 + Wi7h + getCarry(Wil, gamma0l)) | 0\n    Wil = (Wil + gamma1l) | 0\n    Wih = (Wih + gamma1 + getCarry(Wil, gamma1l)) | 0\n    Wil = (Wil + Wi16l) | 0\n    Wih = (Wih + Wi16h + getCarry(Wil, Wi16l)) | 0\n\n    W[i] = Wih\n    W[i + 1] = Wil\n  }\n\n  for (var j = 0; j < 160; j += 2) {\n    Wih = W[j]\n    Wil = W[j + 1]\n\n    var majh = maj(ah, bh, ch)\n    var majl = maj(al, bl, cl)\n\n    var sigma0h = sigma0(ah, al)\n    var sigma0l = sigma0(al, ah)\n    var sigma1h = sigma1(eh, el)\n    var sigma1l = sigma1(el, eh)\n\n    // t1 = h + sigma1 + ch + K[j] + W[j]\n    var Kih = K[j]\n    var Kil = K[j + 1]\n\n    var chh = Ch(eh, fh, gh)\n    var chl = Ch(el, fl, gl)\n\n    var t1l = (hl + sigma1l) | 0\n    var t1h = (hh + sigma1h + getCarry(t1l, hl)) | 0\n    t1l = (t1l + chl) | 0\n    t1h = (t1h + chh + getCarry(t1l, chl)) | 0\n    t1l = (t1l + Kil) | 0\n    t1h = (t1h + Kih + getCarry(t1l, Kil)) | 0\n    t1l = (t1l + Wil) | 0\n    t1h = (t1h + Wih + getCarry(t1l, Wil)) | 0\n\n    // t2 = sigma0 + maj\n    var t2l = (sigma0l + majl) | 0\n    var t2h = (sigma0h + majh + getCarry(t2l, sigma0l)) | 0\n\n    hh = gh\n    hl = gl\n    gh = fh\n    gl = fl\n    fh = eh\n    fl = el\n    el = (dl + t1l) | 0\n    eh = (dh + t1h + getCarry(el, dl)) | 0\n    dh = ch\n    dl = cl\n    ch = bh\n    cl = bl\n    bh = ah\n    bl = al\n    al = (t1l + t2l) | 0\n    ah = (t1h + t2h + getCarry(al, t1l)) | 0\n  }\n\n  this._al = (this._al + al) | 0\n  this._bl = (this._bl + bl) | 0\n  this._cl = (this._cl + cl) | 0\n  this._dl = (this._dl + dl) | 0\n  this._el = (this._el + el) | 0\n  this._fl = (this._fl + fl) | 0\n  this._gl = (this._gl + gl) | 0\n  this._hl = (this._hl + hl) | 0\n\n  this._ah = (this._ah + ah + getCarry(this._al, al)) | 0\n  this._bh = (this._bh + bh + getCarry(this._bl, bl)) | 0\n  this._ch = (this._ch + ch + getCarry(this._cl, cl)) | 0\n  this._dh = (this._dh + dh + getCarry(this._dl, dl)) | 0\n  this._eh = (this._eh + eh + getCarry(this._el, el)) | 0\n  this._fh = (this._fh + fh + getCarry(this._fl, fl)) | 0\n  this._gh = (this._gh + gh + getCarry(this._gl, gl)) | 0\n  this._hh = (this._hh + hh + getCarry(this._hl, hl)) | 0\n}\n\nSha512.prototype._hash = function () {\n  var H = Buffer.allocUnsafe(64)\n\n  function writeInt64BE (h, l, offset) {\n    H.writeInt32BE(h, offset)\n    H.writeInt32BE(l, offset + 4)\n  }\n\n  writeInt64BE(this._ah, this._al, 0)\n  writeInt64BE(this._bh, this._bl, 8)\n  writeInt64BE(this._ch, this._cl, 16)\n  writeInt64BE(this._dh, this._dl, 24)\n  writeInt64BE(this._eh, this._el, 32)\n  writeInt64BE(this._fh, this._fl, 40)\n  writeInt64BE(this._gh, this._gl, 48)\n  writeInt64BE(this._hh, this._hl, 56)\n\n  return H\n}\n\nmodule.exports = Sha512\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc2hhLmpzL3NoYTUxMi5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBQSxlQUFlLG1CQUFPLENBQUMsNkRBQVU7QUFDakMsV0FBVyxtQkFBTyxDQUFDLDZDQUFRO0FBQzNCLGFBQWEsc0ZBQTZCOztBQUUxQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxrQkFBa0IsUUFBUTtBQUMxQjtBQUNBO0FBQ0E7QUFDQSxTQUFTLFNBQVM7QUFDbEI7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQSxrQkFBa0IsU0FBUztBQUMzQjtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvc2hhLmpzL3NoYTUxMi5qcz9jZGI1Il0sInNvdXJjZXNDb250ZW50IjpbInZhciBpbmhlcml0cyA9IHJlcXVpcmUoJ2luaGVyaXRzJylcbnZhciBIYXNoID0gcmVxdWlyZSgnLi9oYXNoJylcbnZhciBCdWZmZXIgPSByZXF1aXJlKCdzYWZlLWJ1ZmZlcicpLkJ1ZmZlclxuXG52YXIgSyA9IFtcbiAgMHg0MjhhMmY5OCwgMHhkNzI4YWUyMiwgMHg3MTM3NDQ5MSwgMHgyM2VmNjVjZCxcbiAgMHhiNWMwZmJjZiwgMHhlYzRkM2IyZiwgMHhlOWI1ZGJhNSwgMHg4MTg5ZGJiYyxcbiAgMHgzOTU2YzI1YiwgMHhmMzQ4YjUzOCwgMHg1OWYxMTFmMSwgMHhiNjA1ZDAxOSxcbiAgMHg5MjNmODJhNCwgMHhhZjE5NGY5YiwgMHhhYjFjNWVkNSwgMHhkYTZkODExOCxcbiAgMHhkODA3YWE5OCwgMHhhMzAzMDI0MiwgMHgxMjgzNWIwMSwgMHg0NTcwNmZiZSxcbiAgMHgyNDMxODViZSwgMHg0ZWU0YjI4YywgMHg1NTBjN2RjMywgMHhkNWZmYjRlMixcbiAgMHg3MmJlNWQ3NCwgMHhmMjdiODk2ZiwgMHg4MGRlYjFmZSwgMHgzYjE2OTZiMSxcbiAgMHg5YmRjMDZhNywgMHgyNWM3MTIzNSwgMHhjMTliZjE3NCwgMHhjZjY5MjY5NCxcbiAgMHhlNDliNjljMSwgMHg5ZWYxNGFkMiwgMHhlZmJlNDc4NiwgMHgzODRmMjVlMyxcbiAgMHgwZmMxOWRjNiwgMHg4YjhjZDViNSwgMHgyNDBjYTFjYywgMHg3N2FjOWM2NSxcbiAgMHgyZGU5MmM2ZiwgMHg1OTJiMDI3NSwgMHg0YTc0ODRhYSwgMHg2ZWE2ZTQ4MyxcbiAgMHg1Y2IwYTlkYywgMHhiZDQxZmJkNCwgMHg3NmY5ODhkYSwgMHg4MzExNTNiNSxcbiAgMHg5ODNlNTE1MiwgMHhlZTY2ZGZhYiwgMHhhODMxYzY2ZCwgMHgyZGI0MzIxMCxcbiAgMHhiMDAzMjdjOCwgMHg5OGZiMjEzZiwgMHhiZjU5N2ZjNywgMHhiZWVmMGVlNCxcbiAgMHhjNmUwMGJmMywgMHgzZGE4OGZjMiwgMHhkNWE3OTE0NywgMHg5MzBhYTcyNSxcbiAgMHgwNmNhNjM1MSwgMHhlMDAzODI2ZiwgMHgxNDI5Mjk2NywgMHgwYTBlNmU3MCxcbiAgMHgyN2I3MGE4NSwgMHg0NmQyMmZmYywgMHgyZTFiMjEzOCwgMHg1YzI2YzkyNixcbiAgMHg0ZDJjNmRmYywgMHg1YWM0MmFlZCwgMHg1MzM4MGQxMywgMHg5ZDk1YjNkZixcbiAgMHg2NTBhNzM1NCwgMHg4YmFmNjNkZSwgMHg3NjZhMGFiYiwgMHgzYzc3YjJhOCxcbiAgMHg4MWMyYzkyZSwgMHg0N2VkYWVlNiwgMHg5MjcyMmM4NSwgMHgxNDgyMzUzYixcbiAgMHhhMmJmZThhMSwgMHg0Y2YxMDM2NCwgMHhhODFhNjY0YiwgMHhiYzQyMzAwMSxcbiAgMHhjMjRiOGI3MCwgMHhkMGY4OTc5MSwgMHhjNzZjNTFhMywgMHgwNjU0YmUzMCxcbiAgMHhkMTkyZTgxOSwgMHhkNmVmNTIxOCwgMHhkNjk5MDYyNCwgMHg1NTY1YTkxMCxcbiAgMHhmNDBlMzU4NSwgMHg1NzcxMjAyYSwgMHgxMDZhYTA3MCwgMHgzMmJiZDFiOCxcbiAgMHgxOWE0YzExNiwgMHhiOGQyZDBjOCwgMHgxZTM3NmMwOCwgMHg1MTQxYWI1MyxcbiAgMHgyNzQ4Nzc0YywgMHhkZjhlZWI5OSwgMHgzNGIwYmNiNSwgMHhlMTliNDhhOCxcbiAgMHgzOTFjMGNiMywgMHhjNWM5NWE2MywgMHg0ZWQ4YWE0YSwgMHhlMzQxOGFjYixcbiAgMHg1YjljY2E0ZiwgMHg3NzYzZTM3MywgMHg2ODJlNmZmMywgMHhkNmIyYjhhMyxcbiAgMHg3NDhmODJlZSwgMHg1ZGVmYjJmYywgMHg3OGE1NjM2ZiwgMHg0MzE3MmY2MCxcbiAgMHg4NGM4NzgxNCwgMHhhMWYwYWI3MiwgMHg4Y2M3MDIwOCwgMHgxYTY0MzllYyxcbiAgMHg5MGJlZmZmYSwgMHgyMzYzMWUyOCwgMHhhNDUwNmNlYiwgMHhkZTgyYmRlOSxcbiAgMHhiZWY5YTNmNywgMHhiMmM2NzkxNSwgMHhjNjcxNzhmMiwgMHhlMzcyNTMyYixcbiAgMHhjYTI3M2VjZSwgMHhlYTI2NjE5YywgMHhkMTg2YjhjNywgMHgyMWMwYzIwNyxcbiAgMHhlYWRhN2RkNiwgMHhjZGUwZWIxZSwgMHhmNTdkNGY3ZiwgMHhlZTZlZDE3OCxcbiAgMHgwNmYwNjdhYSwgMHg3MjE3NmZiYSwgMHgwYTYzN2RjNSwgMHhhMmM4OThhNixcbiAgMHgxMTNmOTgwNCwgMHhiZWY5MGRhZSwgMHgxYjcxMGIzNSwgMHgxMzFjNDcxYixcbiAgMHgyOGRiNzdmNSwgMHgyMzA0N2Q4NCwgMHgzMmNhYWI3YiwgMHg0MGM3MjQ5MyxcbiAgMHgzYzllYmUwYSwgMHgxNWM5YmViYywgMHg0MzFkNjdjNCwgMHg5YzEwMGQ0YyxcbiAgMHg0Y2M1ZDRiZSwgMHhjYjNlNDJiNiwgMHg1OTdmMjk5YywgMHhmYzY1N2UyYSxcbiAgMHg1ZmNiNmZhYiwgMHgzYWQ2ZmFlYywgMHg2YzQ0MTk4YywgMHg0YTQ3NTgxN1xuXVxuXG52YXIgVyA9IG5ldyBBcnJheSgxNjApXG5cbmZ1bmN0aW9uIFNoYTUxMiAoKSB7XG4gIHRoaXMuaW5pdCgpXG4gIHRoaXMuX3cgPSBXXG5cbiAgSGFzaC5jYWxsKHRoaXMsIDEyOCwgMTEyKVxufVxuXG5pbmhlcml0cyhTaGE1MTIsIEhhc2gpXG5cblNoYTUxMi5wcm90b3R5cGUuaW5pdCA9IGZ1bmN0aW9uICgpIHtcbiAgdGhpcy5fYWggPSAweDZhMDllNjY3XG4gIHRoaXMuX2JoID0gMHhiYjY3YWU4NVxuICB0aGlzLl9jaCA9IDB4M2M2ZWYzNzJcbiAgdGhpcy5fZGggPSAweGE1NGZmNTNhXG4gIHRoaXMuX2VoID0gMHg1MTBlNTI3ZlxuICB0aGlzLl9maCA9IDB4OWIwNTY4OGNcbiAgdGhpcy5fZ2ggPSAweDFmODNkOWFiXG4gIHRoaXMuX2hoID0gMHg1YmUwY2QxOVxuXG4gIHRoaXMuX2FsID0gMHhmM2JjYzkwOFxuICB0aGlzLl9ibCA9IDB4ODRjYWE3M2JcbiAgdGhpcy5fY2wgPSAweGZlOTRmODJiXG4gIHRoaXMuX2RsID0gMHg1ZjFkMzZmMVxuICB0aGlzLl9lbCA9IDB4YWRlNjgyZDFcbiAgdGhpcy5fZmwgPSAweDJiM2U2YzFmXG4gIHRoaXMuX2dsID0gMHhmYjQxYmQ2YlxuICB0aGlzLl9obCA9IDB4MTM3ZTIxNzlcblxuICByZXR1cm4gdGhpc1xufVxuXG5mdW5jdGlvbiBDaCAoeCwgeSwgeikge1xuICByZXR1cm4geiBeICh4ICYgKHkgXiB6KSlcbn1cblxuZnVuY3Rpb24gbWFqICh4LCB5LCB6KSB7XG4gIHJldHVybiAoeCAmIHkpIHwgKHogJiAoeCB8IHkpKVxufVxuXG5mdW5jdGlvbiBzaWdtYTAgKHgsIHhsKSB7XG4gIHJldHVybiAoeCA+Pj4gMjggfCB4bCA8PCA0KSBeICh4bCA+Pj4gMiB8IHggPDwgMzApIF4gKHhsID4+PiA3IHwgeCA8PCAyNSlcbn1cblxuZnVuY3Rpb24gc2lnbWExICh4LCB4bCkge1xuICByZXR1cm4gKHggPj4+IDE0IHwgeGwgPDwgMTgpIF4gKHggPj4+IDE4IHwgeGwgPDwgMTQpIF4gKHhsID4+PiA5IHwgeCA8PCAyMylcbn1cblxuZnVuY3Rpb24gR2FtbWEwICh4LCB4bCkge1xuICByZXR1cm4gKHggPj4+IDEgfCB4bCA8PCAzMSkgXiAoeCA+Pj4gOCB8IHhsIDw8IDI0KSBeICh4ID4+PiA3KVxufVxuXG5mdW5jdGlvbiBHYW1tYTBsICh4LCB4bCkge1xuICByZXR1cm4gKHggPj4+IDEgfCB4bCA8PCAzMSkgXiAoeCA+Pj4gOCB8IHhsIDw8IDI0KSBeICh4ID4+PiA3IHwgeGwgPDwgMjUpXG59XG5cbmZ1bmN0aW9uIEdhbW1hMSAoeCwgeGwpIHtcbiAgcmV0dXJuICh4ID4+PiAxOSB8IHhsIDw8IDEzKSBeICh4bCA+Pj4gMjkgfCB4IDw8IDMpIF4gKHggPj4+IDYpXG59XG5cbmZ1bmN0aW9uIEdhbW1hMWwgKHgsIHhsKSB7XG4gIHJldHVybiAoeCA+Pj4gMTkgfCB4bCA8PCAxMykgXiAoeGwgPj4+IDI5IHwgeCA8PCAzKSBeICh4ID4+PiA2IHwgeGwgPDwgMjYpXG59XG5cbmZ1bmN0aW9uIGdldENhcnJ5IChhLCBiKSB7XG4gIHJldHVybiAoYSA+Pj4gMCkgPCAoYiA+Pj4gMCkgPyAxIDogMFxufVxuXG5TaGE1MTIucHJvdG90eXBlLl91cGRhdGUgPSBmdW5jdGlvbiAoTSkge1xuICB2YXIgVyA9IHRoaXMuX3dcblxuICB2YXIgYWggPSB0aGlzLl9haCB8IDBcbiAgdmFyIGJoID0gdGhpcy5fYmggfCAwXG4gIHZhciBjaCA9IHRoaXMuX2NoIHwgMFxuICB2YXIgZGggPSB0aGlzLl9kaCB8IDBcbiAgdmFyIGVoID0gdGhpcy5fZWggfCAwXG4gIHZhciBmaCA9IHRoaXMuX2ZoIHwgMFxuICB2YXIgZ2ggPSB0aGlzLl9naCB8IDBcbiAgdmFyIGhoID0gdGhpcy5faGggfCAwXG5cbiAgdmFyIGFsID0gdGhpcy5fYWwgfCAwXG4gIHZhciBibCA9IHRoaXMuX2JsIHwgMFxuICB2YXIgY2wgPSB0aGlzLl9jbCB8IDBcbiAgdmFyIGRsID0gdGhpcy5fZGwgfCAwXG4gIHZhciBlbCA9IHRoaXMuX2VsIHwgMFxuICB2YXIgZmwgPSB0aGlzLl9mbCB8IDBcbiAgdmFyIGdsID0gdGhpcy5fZ2wgfCAwXG4gIHZhciBobCA9IHRoaXMuX2hsIHwgMFxuXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgMzI7IGkgKz0gMikge1xuICAgIFdbaV0gPSBNLnJlYWRJbnQzMkJFKGkgKiA0KVxuICAgIFdbaSArIDFdID0gTS5yZWFkSW50MzJCRShpICogNCArIDQpXG4gIH1cbiAgZm9yICg7IGkgPCAxNjA7IGkgKz0gMikge1xuICAgIHZhciB4aCA9IFdbaSAtIDE1ICogMl1cbiAgICB2YXIgeGwgPSBXW2kgLSAxNSAqIDIgKyAxXVxuICAgIHZhciBnYW1tYTAgPSBHYW1tYTAoeGgsIHhsKVxuICAgIHZhciBnYW1tYTBsID0gR2FtbWEwbCh4bCwgeGgpXG5cbiAgICB4aCA9IFdbaSAtIDIgKiAyXVxuICAgIHhsID0gV1tpIC0gMiAqIDIgKyAxXVxuICAgIHZhciBnYW1tYTEgPSBHYW1tYTEoeGgsIHhsKVxuICAgIHZhciBnYW1tYTFsID0gR2FtbWExbCh4bCwgeGgpXG5cbiAgICAvLyBXW2ldID0gZ2FtbWEwICsgV1tpIC0gN10gKyBnYW1tYTEgKyBXW2kgLSAxNl1cbiAgICB2YXIgV2k3aCA9IFdbaSAtIDcgKiAyXVxuICAgIHZhciBXaTdsID0gV1tpIC0gNyAqIDIgKyAxXVxuXG4gICAgdmFyIFdpMTZoID0gV1tpIC0gMTYgKiAyXVxuICAgIHZhciBXaTE2bCA9IFdbaSAtIDE2ICogMiArIDFdXG5cbiAgICB2YXIgV2lsID0gKGdhbW1hMGwgKyBXaTdsKSB8IDBcbiAgICB2YXIgV2loID0gKGdhbW1hMCArIFdpN2ggKyBnZXRDYXJyeShXaWwsIGdhbW1hMGwpKSB8IDBcbiAgICBXaWwgPSAoV2lsICsgZ2FtbWExbCkgfCAwXG4gICAgV2loID0gKFdpaCArIGdhbW1hMSArIGdldENhcnJ5KFdpbCwgZ2FtbWExbCkpIHwgMFxuICAgIFdpbCA9IChXaWwgKyBXaTE2bCkgfCAwXG4gICAgV2loID0gKFdpaCArIFdpMTZoICsgZ2V0Q2FycnkoV2lsLCBXaTE2bCkpIHwgMFxuXG4gICAgV1tpXSA9IFdpaFxuICAgIFdbaSArIDFdID0gV2lsXG4gIH1cblxuICBmb3IgKHZhciBqID0gMDsgaiA8IDE2MDsgaiArPSAyKSB7XG4gICAgV2loID0gV1tqXVxuICAgIFdpbCA9IFdbaiArIDFdXG5cbiAgICB2YXIgbWFqaCA9IG1haihhaCwgYmgsIGNoKVxuICAgIHZhciBtYWpsID0gbWFqKGFsLCBibCwgY2wpXG5cbiAgICB2YXIgc2lnbWEwaCA9IHNpZ21hMChhaCwgYWwpXG4gICAgdmFyIHNpZ21hMGwgPSBzaWdtYTAoYWwsIGFoKVxuICAgIHZhciBzaWdtYTFoID0gc2lnbWExKGVoLCBlbClcbiAgICB2YXIgc2lnbWExbCA9IHNpZ21hMShlbCwgZWgpXG5cbiAgICAvLyB0MSA9IGggKyBzaWdtYTEgKyBjaCArIEtbal0gKyBXW2pdXG4gICAgdmFyIEtpaCA9IEtbal1cbiAgICB2YXIgS2lsID0gS1tqICsgMV1cblxuICAgIHZhciBjaGggPSBDaChlaCwgZmgsIGdoKVxuICAgIHZhciBjaGwgPSBDaChlbCwgZmwsIGdsKVxuXG4gICAgdmFyIHQxbCA9IChobCArIHNpZ21hMWwpIHwgMFxuICAgIHZhciB0MWggPSAoaGggKyBzaWdtYTFoICsgZ2V0Q2FycnkodDFsLCBobCkpIHwgMFxuICAgIHQxbCA9ICh0MWwgKyBjaGwpIHwgMFxuICAgIHQxaCA9ICh0MWggKyBjaGggKyBnZXRDYXJyeSh0MWwsIGNobCkpIHwgMFxuICAgIHQxbCA9ICh0MWwgKyBLaWwpIHwgMFxuICAgIHQxaCA9ICh0MWggKyBLaWggKyBnZXRDYXJyeSh0MWwsIEtpbCkpIHwgMFxuICAgIHQxbCA9ICh0MWwgKyBXaWwpIHwgMFxuICAgIHQxaCA9ICh0MWggKyBXaWggKyBnZXRDYXJyeSh0MWwsIFdpbCkpIHwgMFxuXG4gICAgLy8gdDIgPSBzaWdtYTAgKyBtYWpcbiAgICB2YXIgdDJsID0gKHNpZ21hMGwgKyBtYWpsKSB8IDBcbiAgICB2YXIgdDJoID0gKHNpZ21hMGggKyBtYWpoICsgZ2V0Q2FycnkodDJsLCBzaWdtYTBsKSkgfCAwXG5cbiAgICBoaCA9IGdoXG4gICAgaGwgPSBnbFxuICAgIGdoID0gZmhcbiAgICBnbCA9IGZsXG4gICAgZmggPSBlaFxuICAgIGZsID0gZWxcbiAgICBlbCA9IChkbCArIHQxbCkgfCAwXG4gICAgZWggPSAoZGggKyB0MWggKyBnZXRDYXJyeShlbCwgZGwpKSB8IDBcbiAgICBkaCA9IGNoXG4gICAgZGwgPSBjbFxuICAgIGNoID0gYmhcbiAgICBjbCA9IGJsXG4gICAgYmggPSBhaFxuICAgIGJsID0gYWxcbiAgICBhbCA9ICh0MWwgKyB0MmwpIHwgMFxuICAgIGFoID0gKHQxaCArIHQyaCArIGdldENhcnJ5KGFsLCB0MWwpKSB8IDBcbiAgfVxuXG4gIHRoaXMuX2FsID0gKHRoaXMuX2FsICsgYWwpIHwgMFxuICB0aGlzLl9ibCA9ICh0aGlzLl9ibCArIGJsKSB8IDBcbiAgdGhpcy5fY2wgPSAodGhpcy5fY2wgKyBjbCkgfCAwXG4gIHRoaXMuX2RsID0gKHRoaXMuX2RsICsgZGwpIHwgMFxuICB0aGlzLl9lbCA9ICh0aGlzLl9lbCArIGVsKSB8IDBcbiAgdGhpcy5fZmwgPSAodGhpcy5fZmwgKyBmbCkgfCAwXG4gIHRoaXMuX2dsID0gKHRoaXMuX2dsICsgZ2wpIHwgMFxuICB0aGlzLl9obCA9ICh0aGlzLl9obCArIGhsKSB8IDBcblxuICB0aGlzLl9haCA9ICh0aGlzLl9haCArIGFoICsgZ2V0Q2FycnkodGhpcy5fYWwsIGFsKSkgfCAwXG4gIHRoaXMuX2JoID0gKHRoaXMuX2JoICsgYmggKyBnZXRDYXJyeSh0aGlzLl9ibCwgYmwpKSB8IDBcbiAgdGhpcy5fY2ggPSAodGhpcy5fY2ggKyBjaCArIGdldENhcnJ5KHRoaXMuX2NsLCBjbCkpIHwgMFxuICB0aGlzLl9kaCA9ICh0aGlzLl9kaCArIGRoICsgZ2V0Q2FycnkodGhpcy5fZGwsIGRsKSkgfCAwXG4gIHRoaXMuX2VoID0gKHRoaXMuX2VoICsgZWggKyBnZXRDYXJyeSh0aGlzLl9lbCwgZWwpKSB8IDBcbiAgdGhpcy5fZmggPSAodGhpcy5fZmggKyBmaCArIGdldENhcnJ5KHRoaXMuX2ZsLCBmbCkpIHwgMFxuICB0aGlzLl9naCA9ICh0aGlzLl9naCArIGdoICsgZ2V0Q2FycnkodGhpcy5fZ2wsIGdsKSkgfCAwXG4gIHRoaXMuX2hoID0gKHRoaXMuX2hoICsgaGggKyBnZXRDYXJyeSh0aGlzLl9obCwgaGwpKSB8IDBcbn1cblxuU2hhNTEyLnByb3RvdHlwZS5faGFzaCA9IGZ1bmN0aW9uICgpIHtcbiAgdmFyIEggPSBCdWZmZXIuYWxsb2NVbnNhZmUoNjQpXG5cbiAgZnVuY3Rpb24gd3JpdGVJbnQ2NEJFIChoLCBsLCBvZmZzZXQpIHtcbiAgICBILndyaXRlSW50MzJCRShoLCBvZmZzZXQpXG4gICAgSC53cml0ZUludDMyQkUobCwgb2Zmc2V0ICsgNClcbiAgfVxuXG4gIHdyaXRlSW50NjRCRSh0aGlzLl9haCwgdGhpcy5fYWwsIDApXG4gIHdyaXRlSW50NjRCRSh0aGlzLl9iaCwgdGhpcy5fYmwsIDgpXG4gIHdyaXRlSW50NjRCRSh0aGlzLl9jaCwgdGhpcy5fY2wsIDE2KVxuICB3cml0ZUludDY0QkUodGhpcy5fZGgsIHRoaXMuX2RsLCAyNClcbiAgd3JpdGVJbnQ2NEJFKHRoaXMuX2VoLCB0aGlzLl9lbCwgMzIpXG4gIHdyaXRlSW50NjRCRSh0aGlzLl9maCwgdGhpcy5fZmwsIDQwKVxuICB3cml0ZUludDY0QkUodGhpcy5fZ2gsIHRoaXMuX2dsLCA0OClcbiAgd3JpdGVJbnQ2NEJFKHRoaXMuX2hoLCB0aGlzLl9obCwgNTYpXG5cbiAgcmV0dXJuIEhcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBTaGE1MTJcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/sha.js/sha512.js\n");

/***/ }),

/***/ "./node_modules/strip-hex-prefix/src/index.js":
/*!****************************************************!*\
  !*** ./node_modules/strip-hex-prefix/src/index.js ***!
  \****************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("var isHexPrefixed = __webpack_require__(/*! is-hex-prefixed */ \"./node_modules/is-hex-prefixed/src/index.js\");\n\n/**\n * Removes '0x' from a given `String` is present\n * @param {String} str the string value\n * @return {String|Optional} a string by pass if necessary\n */\nmodule.exports = function stripHexPrefix(str) {\n  if (typeof str !== 'string') {\n    return str;\n  }\n\n  return isHexPrefixed(str) ? str.slice(2) : str;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc3RyaXAtaGV4LXByZWZpeC9zcmMvaW5kZXguanMuanMiLCJtYXBwaW5ncyI6IkFBQUEsb0JBQW9CLG1CQUFPLENBQUMsb0VBQWlCOztBQUU3QztBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CLFlBQVksaUJBQWlCO0FBQzdCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvc3RyaXAtaGV4LXByZWZpeC9zcmMvaW5kZXguanM/NDRmMSJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgaXNIZXhQcmVmaXhlZCA9IHJlcXVpcmUoJ2lzLWhleC1wcmVmaXhlZCcpO1xuXG4vKipcbiAqIFJlbW92ZXMgJzB4JyBmcm9tIGEgZ2l2ZW4gYFN0cmluZ2AgaXMgcHJlc2VudFxuICogQHBhcmFtIHtTdHJpbmd9IHN0ciB0aGUgc3RyaW5nIHZhbHVlXG4gKiBAcmV0dXJuIHtTdHJpbmd8T3B0aW9uYWx9IGEgc3RyaW5nIGJ5IHBhc3MgaWYgbmVjZXNzYXJ5XG4gKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gc3RyaXBIZXhQcmVmaXgoc3RyKSB7XG4gIGlmICh0eXBlb2Ygc3RyICE9PSAnc3RyaW5nJykge1xuICAgIHJldHVybiBzdHI7XG4gIH1cblxuICByZXR1cm4gaXNIZXhQcmVmaXhlZChzdHIpID8gc3RyLnNsaWNlKDIpIDogc3RyO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/strip-hex-prefix/src/index.js\n");

/***/ }),

/***/ "./node_modules/tweetnacl-util/nacl-util.js":
/*!**************************************************!*\
  !*** ./node_modules/tweetnacl-util/nacl-util.js ***!
  \**************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"?da34\")[\"Buffer\"];\n// Written in 2014-2016 by Dmitry Chestnykh and Devi Mandiri.\n// Public domain.\n(function(root, f) {\n  'use strict';\n  if ( true && module.exports) module.exports = f();\n  else if (root.nacl) root.nacl.util = f();\n  else {\n    root.nacl = {};\n    root.nacl.util = f();\n  }\n}(this, function() {\n  'use strict';\n\n  var util = {};\n\n  function validateBase64(s) {\n    if (!(/^(?:[A-Za-z0-9+\\/]{2}[A-Za-z0-9+\\/]{2})*(?:[A-Za-z0-9+\\/]{2}==|[A-Za-z0-9+\\/]{3}=)?$/.test(s))) {\n      throw new TypeError('invalid encoding');\n    }\n  }\n\n  util.decodeUTF8 = function(s) {\n    if (typeof s !== 'string') throw new TypeError('expected string');\n    var i, d = unescape(encodeURIComponent(s)), b = new Uint8Array(d.length);\n    for (i = 0; i < d.length; i++) b[i] = d.charCodeAt(i);\n    return b;\n  };\n\n  util.encodeUTF8 = function(arr) {\n    var i, s = [];\n    for (i = 0; i < arr.length; i++) s.push(String.fromCharCode(arr[i]));\n    return decodeURIComponent(escape(s.join('')));\n  };\n\n  if (typeof atob === 'undefined') {\n    // Node.js\n\n    if (typeof Buffer.from !== 'undefined') {\n       // Node v6 and later\n      util.encodeBase64 = function (arr) { // v6 and later\n          return Buffer.from(arr).toString('base64');\n      };\n\n      util.decodeBase64 = function (s) {\n        validateBase64(s);\n        return new Uint8Array(Array.prototype.slice.call(Buffer.from(s, 'base64'), 0));\n      };\n\n    } else {\n      // Node earlier than v6\n      util.encodeBase64 = function (arr) { // v6 and later\n        return (new Buffer(arr)).toString('base64');\n      };\n\n      util.decodeBase64 = function(s) {\n        validateBase64(s);\n        return new Uint8Array(Array.prototype.slice.call(new Buffer(s, 'base64'), 0));\n      };\n    }\n\n  } else {\n    // Browsers\n\n    util.encodeBase64 = function(arr) {\n      var i, s = [], len = arr.length;\n      for (i = 0; i < len; i++) s.push(String.fromCharCode(arr[i]));\n      return btoa(s.join(''));\n    };\n\n    util.decodeBase64 = function(s) {\n      validateBase64(s);\n      var i, d = atob(s), b = new Uint8Array(d.length);\n      for (i = 0; i < d.length; i++) b[i] = d.charCodeAt(i);\n      return b;\n    };\n\n  }\n\n  return util;\n\n}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdHdlZXRuYWNsLXV0aWwvbmFjbC11dGlsLmpzLmpzIiwibWFwcGluZ3MiOiI7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU0sS0FBNkI7QUFDbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRDs7QUFFQTs7QUFFQTtBQUNBLDhCQUE4QixFQUFFLGVBQWUsRUFBRSxvQkFBb0IsRUFBRSxrQkFBa0IsRUFBRTtBQUMzRjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLGNBQWM7QUFDOUI7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsZ0JBQWdCLGdCQUFnQjtBQUNoQztBQUNBOztBQUVBO0FBQ0E7O0FBRUEsZUFBZSxNQUFNO0FBQ3JCO0FBQ0EsMkNBQTJDO0FBQzNDLGlCQUFpQixNQUFNO0FBQ3ZCOztBQUVBO0FBQ0E7QUFDQSx5REFBeUQsTUFBTTtBQUMvRDs7QUFFQSxNQUFNO0FBQ047QUFDQSwyQ0FBMkM7QUFDM0Msb0JBQW9CLE1BQU07QUFDMUI7O0FBRUE7QUFDQTtBQUNBLDZEQUE2RCxNQUFNO0FBQ25FO0FBQ0E7O0FBRUEsSUFBSTtBQUNKOztBQUVBO0FBQ0E7QUFDQSxrQkFBa0IsU0FBUztBQUMzQjtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQixjQUFjO0FBQ2hDO0FBQ0E7O0FBRUE7O0FBRUE7O0FBRUEsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvdHdlZXRuYWNsLXV0aWwvbmFjbC11dGlsLmpzPzk0MTUiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gV3JpdHRlbiBpbiAyMDE0LTIwMTYgYnkgRG1pdHJ5IENoZXN0bnlraCBhbmQgRGV2aSBNYW5kaXJpLlxuLy8gUHVibGljIGRvbWFpbi5cbihmdW5jdGlvbihyb290LCBmKSB7XG4gICd1c2Ugc3RyaWN0JztcbiAgaWYgKHR5cGVvZiBtb2R1bGUgIT09ICd1bmRlZmluZWQnICYmIG1vZHVsZS5leHBvcnRzKSBtb2R1bGUuZXhwb3J0cyA9IGYoKTtcbiAgZWxzZSBpZiAocm9vdC5uYWNsKSByb290Lm5hY2wudXRpbCA9IGYoKTtcbiAgZWxzZSB7XG4gICAgcm9vdC5uYWNsID0ge307XG4gICAgcm9vdC5uYWNsLnV0aWwgPSBmKCk7XG4gIH1cbn0odGhpcywgZnVuY3Rpb24oKSB7XG4gICd1c2Ugc3RyaWN0JztcblxuICB2YXIgdXRpbCA9IHt9O1xuXG4gIGZ1bmN0aW9uIHZhbGlkYXRlQmFzZTY0KHMpIHtcbiAgICBpZiAoISgvXig/OltBLVphLXowLTkrXFwvXXsyfVtBLVphLXowLTkrXFwvXXsyfSkqKD86W0EtWmEtejAtOStcXC9dezJ9PT18W0EtWmEtejAtOStcXC9dezN9PSk/JC8udGVzdChzKSkpIHtcbiAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ2ludmFsaWQgZW5jb2RpbmcnKTtcbiAgICB9XG4gIH1cblxuICB1dGlsLmRlY29kZVVURjggPSBmdW5jdGlvbihzKSB7XG4gICAgaWYgKHR5cGVvZiBzICE9PSAnc3RyaW5nJykgdGhyb3cgbmV3IFR5cGVFcnJvcignZXhwZWN0ZWQgc3RyaW5nJyk7XG4gICAgdmFyIGksIGQgPSB1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQocykpLCBiID0gbmV3IFVpbnQ4QXJyYXkoZC5sZW5ndGgpO1xuICAgIGZvciAoaSA9IDA7IGkgPCBkLmxlbmd0aDsgaSsrKSBiW2ldID0gZC5jaGFyQ29kZUF0KGkpO1xuICAgIHJldHVybiBiO1xuICB9O1xuXG4gIHV0aWwuZW5jb2RlVVRGOCA9IGZ1bmN0aW9uKGFycikge1xuICAgIHZhciBpLCBzID0gW107XG4gICAgZm9yIChpID0gMDsgaSA8IGFyci5sZW5ndGg7IGkrKykgcy5wdXNoKFN0cmluZy5mcm9tQ2hhckNvZGUoYXJyW2ldKSk7XG4gICAgcmV0dXJuIGRlY29kZVVSSUNvbXBvbmVudChlc2NhcGUocy5qb2luKCcnKSkpO1xuICB9O1xuXG4gIGlmICh0eXBlb2YgYXRvYiA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAvLyBOb2RlLmpzXG5cbiAgICBpZiAodHlwZW9mIEJ1ZmZlci5mcm9tICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgIC8vIE5vZGUgdjYgYW5kIGxhdGVyXG4gICAgICB1dGlsLmVuY29kZUJhc2U2NCA9IGZ1bmN0aW9uIChhcnIpIHsgLy8gdjYgYW5kIGxhdGVyXG4gICAgICAgICAgcmV0dXJuIEJ1ZmZlci5mcm9tKGFycikudG9TdHJpbmcoJ2Jhc2U2NCcpO1xuICAgICAgfTtcblxuICAgICAgdXRpbC5kZWNvZGVCYXNlNjQgPSBmdW5jdGlvbiAocykge1xuICAgICAgICB2YWxpZGF0ZUJhc2U2NChzKTtcbiAgICAgICAgcmV0dXJuIG5ldyBVaW50OEFycmF5KEFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKEJ1ZmZlci5mcm9tKHMsICdiYXNlNjQnKSwgMCkpO1xuICAgICAgfTtcblxuICAgIH0gZWxzZSB7XG4gICAgICAvLyBOb2RlIGVhcmxpZXIgdGhhbiB2NlxuICAgICAgdXRpbC5lbmNvZGVCYXNlNjQgPSBmdW5jdGlvbiAoYXJyKSB7IC8vIHY2IGFuZCBsYXRlclxuICAgICAgICByZXR1cm4gKG5ldyBCdWZmZXIoYXJyKSkudG9TdHJpbmcoJ2Jhc2U2NCcpO1xuICAgICAgfTtcblxuICAgICAgdXRpbC5kZWNvZGVCYXNlNjQgPSBmdW5jdGlvbihzKSB7XG4gICAgICAgIHZhbGlkYXRlQmFzZTY0KHMpO1xuICAgICAgICByZXR1cm4gbmV3IFVpbnQ4QXJyYXkoQXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwobmV3IEJ1ZmZlcihzLCAnYmFzZTY0JyksIDApKTtcbiAgICAgIH07XG4gICAgfVxuXG4gIH0gZWxzZSB7XG4gICAgLy8gQnJvd3NlcnNcblxuICAgIHV0aWwuZW5jb2RlQmFzZTY0ID0gZnVuY3Rpb24oYXJyKSB7XG4gICAgICB2YXIgaSwgcyA9IFtdLCBsZW4gPSBhcnIubGVuZ3RoO1xuICAgICAgZm9yIChpID0gMDsgaSA8IGxlbjsgaSsrKSBzLnB1c2goU3RyaW5nLmZyb21DaGFyQ29kZShhcnJbaV0pKTtcbiAgICAgIHJldHVybiBidG9hKHMuam9pbignJykpO1xuICAgIH07XG5cbiAgICB1dGlsLmRlY29kZUJhc2U2NCA9IGZ1bmN0aW9uKHMpIHtcbiAgICAgIHZhbGlkYXRlQmFzZTY0KHMpO1xuICAgICAgdmFyIGksIGQgPSBhdG9iKHMpLCBiID0gbmV3IFVpbnQ4QXJyYXkoZC5sZW5ndGgpO1xuICAgICAgZm9yIChpID0gMDsgaSA8IGQubGVuZ3RoOyBpKyspIGJbaV0gPSBkLmNoYXJDb2RlQXQoaSk7XG4gICAgICByZXR1cm4gYjtcbiAgICB9O1xuXG4gIH1cblxuICByZXR1cm4gdXRpbDtcblxufSkpO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/tweetnacl-util/nacl-util.js\n");

/***/ }),

/***/ "?d71a":
/*!************************!*\
  !*** buffer (ignored) ***!
  \************************/
/***/ (function() {

/* (ignored) */

/***/ }),

/***/ "?94fa":
/*!************************!*\
  !*** crypto (ignored) ***!
  \************************/
/***/ (function() {

/* (ignored) */

/***/ }),

/***/ "?c948":
/*!************************!*\
  !*** buffer (ignored) ***!
  \************************/
/***/ (function() {

/* (ignored) */

/***/ }),

/***/ "?924a":
/*!**********************!*\
  !*** util (ignored) ***!
  \**********************/
/***/ (function() {

/* (ignored) */

/***/ }),

/***/ "?a844":
/*!**********************!*\
  !*** util (ignored) ***!
  \**********************/
/***/ (function() {

/* (ignored) */

/***/ }),

/***/ "?db9e":
/*!**********************!*\
  !*** util (ignored) ***!
  \**********************/
/***/ (function() {

/* (ignored) */

/***/ }),

/***/ "?a137":
/*!**********************!*\
  !*** util (ignored) ***!
  \**********************/
/***/ (function() {

/* (ignored) */

/***/ }),

/***/ "?ce10":
/*!************************!*\
  !*** buffer (ignored) ***!
  \************************/
/***/ (function() {

/* (ignored) */

/***/ }),

/***/ "?da34":
/*!************************!*\
  !*** buffer (ignored) ***!
  \************************/
/***/ (function() {

/* (ignored) */

/***/ }),

/***/ "./node_modules/@ethereumjs/common/dist.browser/chains/goerli.json":
/*!*************************************************************************!*\
  !*** ./node_modules/@ethereumjs/common/dist.browser/chains/goerli.json ***!
  \*************************************************************************/
/***/ (function(module) {

"use strict";
module.exports = JSON.parse('{"name":"goerli","chainId":5,"networkId":5,"defaultHardfork":"istanbul","consensus":{"type":"poa","algorithm":"clique","clique":{"period":15,"epoch":30000}},"comment":"Cross-client PoA test network","url":"https://github.com/goerli/testnet","genesis":{"hash":"0xbf7e331f7f7c1dd2e05159666b3bf8bc7a8a3a9eb1d518969eab529dd9b88c1a","timestamp":"0x5c51a607","gasLimit":10485760,"difficulty":1,"nonce":"0x0000000000000000","extraData":"0x22466c6578692069732061207468696e6722202d204166726900000000000000e0a2bd4258d2768837baa26a28fe71dc079f84c70000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","stateRoot":"0x5d6cded585e73c4e322c30c2f782a336316f17dd85a4863b9d838d2d4b8b3008"},"hardforks":[{"name":"chainstart","block":0,"forkHash":"0xa3f5ab08"},{"name":"homestead","block":0,"forkHash":"0xa3f5ab08"},{"name":"tangerineWhistle","block":0,"forkHash":"0xa3f5ab08"},{"name":"spuriousDragon","block":0,"forkHash":"0xa3f5ab08"},{"name":"byzantium","block":0,"forkHash":"0xa3f5ab08"},{"name":"constantinople","block":0,"forkHash":"0xa3f5ab08"},{"name":"petersburg","block":0,"forkHash":"0xa3f5ab08"},{"name":"istanbul","block":1561651,"forkHash":"0xc25efa5c"},{"name":"berlin","block":4460644,"forkHash":"0x757a1c47"},{"name":"london","block":5062605,"forkHash":"0xb8c6299d"},{"name":"merge","block":null,"forkHash":null},{"name":"shanghai","block":null,"forkHash":null}],"bootstrapNodes":[{"ip":"51.141.78.53","port":30303,"id":"011f758e6552d105183b1761c5e2dea0111bc20fd5f6422bc7f91e0fabbec9a6595caf6239b37feb773dddd3f87240d99d859431891e4a642cf2a0a9e6cbb98a","location":"","comment":"Upstream bootnode 1"},{"ip":"13.93.54.137","port":30303,"id":"176b9417f511d05b6b2cf3e34b756cf0a7096b3094572a8f6ef4cdcb9d1f9d00683bf0f83347eebdf3b81c3521c2332086d9592802230bf528eaf606a1d9677b","location":"","comment":"Upstream bootnode 2"},{"ip":"94.237.54.114","port":30313,"id":"46add44b9f13965f7b9875ac6b85f016f341012d84f975377573800a863526f4da19ae2c620ec73d11591fa9510e992ecc03ad0751f53cc02f7c7ed6d55c7291","location":"","comment":"Upstream bootnode 3"},{"ip":"18.218.250.66","port":30313,"id":"b5948a2d3e9d486c4d75bf32713221c2bd6cf86463302339299bd227dc2e276cd5a1c7ca4f43a0e9122fe9af884efed563bd2a1fd28661f3b5f5ad7bf1de5949","location":"","comment":"Upstream bootnode 4"},{"ip":"3.11.147.67","port":30303,"id":"a61215641fb8714a373c80edbfa0ea8878243193f57c96eeb44d0bc019ef295abd4e044fd619bfc4c59731a73fb79afe84e9ab6da0c743ceb479cbb6d263fa91","location":"","comment":"Ethereum Foundation bootnode"},{"ip":"51.15.116.226","port":30303,"id":"a869b02cec167211fb4815a82941db2e7ed2936fd90e78619c53eb17753fcf0207463e3419c264e2a1dd8786de0df7e68cf99571ab8aeb7c4e51367ef186b1dd","location":"","comment":"Goerli Initiative bootnode"},{"ip":"51.15.119.157","port":30303,"id":"807b37ee4816ecf407e9112224494b74dd5933625f655962d892f2f0f02d7fbbb3e2a94cf87a96609526f30c998fd71e93e2f53015c558ffc8b03eceaf30ee33","location":"","comment":"Goerli Initiative bootnode"},{"ip":"51.15.119.157","port":40303,"id":"a59e33ccd2b3e52d578f1fbd70c6f9babda2650f0760d6ff3b37742fdcdfdb3defba5d56d315b40c46b70198c7621e63ffa3f987389c7118634b0fefbbdfa7fd","location":"","comment":"Goerli Initiative bootnode"}],"dnsNetworks":["enrtree://AKA3AM6LPBYEUDMVNU3BSVQJ5AD45Y7YPOHJLEF6W26QOE4VTUDPE@all.goerli.ethdisco.net"]}');

/***/ }),

/***/ "./node_modules/@ethereumjs/common/dist.browser/chains/kovan.json":
/*!************************************************************************!*\
  !*** ./node_modules/@ethereumjs/common/dist.browser/chains/kovan.json ***!
  \************************************************************************/
/***/ (function(module) {

"use strict";
module.exports = JSON.parse('{"name":"kovan","chainId":42,"networkId":42,"defaultHardfork":"istanbul","consensus":{"type":"poa","algorithm":"aura","aura":{}},"comment":"Parity PoA test network","url":"https://kovan-testnet.github.io/website/","genesis":{"hash":"0xa3c565fc15c7478862d50ccd6561e3c06b24cc509bf388941c25ea985ce32cb9","timestamp":null,"gasLimit":6000000,"difficulty":131072,"nonce":"0x0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","extraData":"0x","stateRoot":"0x2480155b48a1cea17d67dbfdfaafe821c1d19cdd478c5358e8ec56dec24502b2"},"hardforks":[{"name":"chainstart","block":0,"forkHash":"0x010ffe56"},{"name":"homestead","block":0,"forkHash":"0x010ffe56"},{"name":"tangerineWhistle","block":0,"forkHash":"0x010ffe56"},{"name":"spuriousDragon","block":0,"forkHash":"0x010ffe56"},{"name":"byzantium","block":5067000,"forkHash":"0x7f83c620"},{"name":"constantinople","block":9200000,"forkHash":"0xa94e3dc4"},{"name":"petersburg","block":10255201,"forkHash":"0x186874aa"},{"name":"istanbul","block":14111141,"forkHash":"0x7f6599a6"},{"name":"berlin","block":24770900,"forkHash":"0x1a0f10d9"},{"name":"london","block":26741100,"forkHash":"0x1ed20b71"},{"name":"merge","block":null,"forkHash":null},{"name":"shanghai","block":null,"forkHash":null}],"bootstrapNodes":[{"ip":"116.203.116.241","port":30303,"id":"16898006ba2cd4fa8bf9a3dfe32684c178fa861df144bfc21fe800dc4838a03e342056951fa9fd533dcb0be1219e306106442ff2cf1f7e9f8faa5f2fc1a3aa45","location":"","comment":"1"},{"ip":"3.217.96.11","port":30303,"id":"2909846f78c37510cc0e306f185323b83bb2209e5ff4fdd279d93c60e3f365e3c6e62ad1d2133ff11f9fd6d23ad9c3dad73bb974d53a22f7d1ac5b7dea79d0b0","location":"","comment":"2"},{"ip":"108.61.170.124","port":30303,"id":"740e1c8ea64e71762c71a463a04e2046070a0c9394fcab5891d41301dc473c0cff00ebab5a9bc87fbcb610ab98ac18225ff897bc8b7b38def5975d5ceb0a7d7c","location":"","comment":"3"},{"ip":"157.230.31.163","port":30303,"id":"2909846f78c37510cc0e306f185323b83bb2209e5ff4fdd279d93c60e3f365e3c6e62ad1d2133ff11f9fd6d23ad9c3dad73bb974d53a22f7d1ac5b7dea79d0b0","location":"","comment":"4"}]}');

/***/ }),

/***/ "./node_modules/@ethereumjs/common/dist.browser/chains/mainnet.json":
/*!**************************************************************************!*\
  !*** ./node_modules/@ethereumjs/common/dist.browser/chains/mainnet.json ***!
  \**************************************************************************/
/***/ (function(module) {

"use strict";
module.exports = JSON.parse('{"name":"mainnet","chainId":1,"networkId":1,"defaultHardfork":"istanbul","consensus":{"type":"pow","algorithm":"ethash","ethash":{}},"comment":"The Ethereum main chain","url":"https://ethstats.net/","genesis":{"hash":"0xd4e56740f876aef8c010b86a40d5f56745a118d0906a34e69aec8c0db1cb8fa3","timestamp":null,"gasLimit":5000,"difficulty":17179869184,"nonce":"0x0000000000000042","extraData":"0x11bbe8db4e347b4e8c937c1c8370e4b5ed33adb3db69cbdb7a38e1e50b1b82fa","stateRoot":"0xd7f8974fb5ac78d9ac099b9ad5018bedc2ce0a72dad1827a1709da30580f0544"},"hardforks":[{"name":"chainstart","block":0,"forkHash":"0xfc64ec04"},{"name":"homestead","block":1150000,"forkHash":"0x97c2c34c"},{"name":"dao","block":1920000,"forkHash":"0x91d1f948"},{"name":"tangerineWhistle","block":2463000,"forkHash":"0x7a64da13"},{"name":"spuriousDragon","block":2675000,"forkHash":"0x3edd5b10"},{"name":"byzantium","block":4370000,"forkHash":"0xa00bc324"},{"name":"constantinople","block":7280000,"forkHash":"0x668db0af"},{"name":"petersburg","block":7280000,"forkHash":"0x668db0af"},{"name":"istanbul","block":9069000,"forkHash":"0x879d6e30"},{"name":"muirGlacier","block":9200000,"forkHash":"0xe029e991"},{"name":"berlin","block":12244000,"forkHash":"0x0eb440f6"},{"name":"london","block":12965000,"forkHash":"0xb715077d"},{"name":"arrowGlacier","block":13773000,"forkHash":"0x20c327fc"},{"name":"grayGlacier","block":15050000,"forkHash":"0xf0afd0e3"},{"name":"mergeForkIdTransition","block":null,"forkHash":null},{"name":"merge","block":null,"forkHash":null},{"name":"shanghai","block":null,"forkHash":null}],"bootstrapNodes":[{"ip":"18.138.108.67","port":30303,"id":"d860a01f9722d78051619d1e2351aba3f43f943f6f00718d1b9baa4101932a1f5011f16bb2b1bb35db20d6fe28fa0bf09636d26a87d31de9ec6203eeedb1f666","location":"ap-southeast-1-001","comment":"bootnode-aws-ap-southeast-1-001"},{"ip":"3.209.45.79","port":30303,"id":"22a8232c3abc76a16ae9d6c3b164f98775fe226f0917b0ca871128a74a8e9630b458460865bab457221f1d448dd9791d24c4e5d88786180ac185df813a68d4de","location":"us-east-1-001","comment":"bootnode-aws-us-east-1-001"},{"ip":"34.255.23.113","port":30303,"id":"ca6de62fce278f96aea6ec5a2daadb877e51651247cb96ee310a318def462913b653963c155a0ef6c7d50048bba6e6cea881130857413d9f50a621546b590758","location":"eu-west-1-001","comment":"bootnode-aws-eu-west-1-001"},{"ip":"35.158.244.151","port":30303,"id":"279944d8dcd428dffaa7436f25ca0ca43ae19e7bcf94a8fb7d1641651f92d121e972ac2e8f381414b80cc8e5555811c2ec6e1a99bb009b3f53c4c69923e11bd8","location":"eu-central-1-001","comment":"bootnode-aws-eu-central-1-001"},{"ip":"52.187.207.27","port":30303,"id":"8499da03c47d637b20eee24eec3c356c9a2e6148d6fe25ca195c7949ab8ec2c03e3556126b0d7ed644675e78c4318b08691b7b57de10e5f0d40d05b09238fa0a","location":"australiaeast-001","comment":"bootnode-azure-australiaeast-001"},{"ip":"191.234.162.198","port":30303,"id":"103858bdb88756c71f15e9b5e09b56dc1be52f0a5021d46301dbbfb7e130029cc9d0d6f73f693bc29b665770fff7da4d34f3c6379fe12721b5d7a0bcb5ca1fc1","location":"brazilsouth-001","comment":"bootnode-azure-brazilsouth-001"},{"ip":"52.231.165.108","port":30303,"id":"715171f50508aba88aecd1250af392a45a330af91d7b90701c436b618c86aaa1589c9184561907bebbb56439b8f8787bc01f49a7c77276c58c1b09822d75e8e8","location":"koreasouth-001","comment":"bootnode-azure-koreasouth-001"},{"ip":"104.42.217.25","port":30303,"id":"5d6d7cd20d6da4bb83a1d28cadb5d409b64edf314c0335df658c1a54e32c7c4a7ab7823d57c39b6a757556e68ff1df17c748b698544a55cb488b52479a92b60f","location":"westus-001","comment":"bootnode-azure-westus-001"}],"dnsNetworks":["enrtree://AKA3AM6LPBYEUDMVNU3BSVQJ5AD45Y7YPOHJLEF6W26QOE4VTUDPE@all.mainnet.ethdisco.net"]}');

/***/ }),

/***/ "./node_modules/@ethereumjs/common/dist.browser/chains/rinkeby.json":
/*!**************************************************************************!*\
  !*** ./node_modules/@ethereumjs/common/dist.browser/chains/rinkeby.json ***!
  \**************************************************************************/
/***/ (function(module) {

"use strict";
module.exports = JSON.parse('{"name":"rinkeby","chainId":4,"networkId":4,"defaultHardfork":"istanbul","consensus":{"type":"poa","algorithm":"clique","clique":{"period":15,"epoch":30000}},"comment":"PoA test network","url":"https://www.rinkeby.io","genesis":{"hash":"0x6341fd3daf94b748c72ced5a5b26028f2474f5f00d824504e4fa37a75767e177","timestamp":"0x58ee40ba","gasLimit":4700000,"difficulty":1,"nonce":"0x0000000000000000","extraData":"0x52657370656374206d7920617574686f7269746168207e452e436172746d616e42eb768f2244c8811c63729a21a3569731535f067ffc57839b00206d1ad20c69a1981b489f772031b279182d99e65703f0076e4812653aab85fca0f00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","stateRoot":"0x53580584816f617295ea26c0e17641e0120cab2f0a8ffb53a866fd53aa8e8c2d"},"hardforks":[{"name":"chainstart","block":0,"forkHash":"0x3b8e0691"},{"name":"homestead","block":1,"forkHash":"0x60949295"},{"name":"tangerineWhistle","block":2,"forkHash":"0x8bde40dd"},{"name":"spuriousDragon","block":3,"forkHash":"0xcb3a64bb"},{"name":"byzantium","block":1035301,"forkHash":"0x8d748b57"},{"name":"constantinople","block":3660663,"forkHash":"0xe49cab14"},{"name":"petersburg","block":4321234,"forkHash":"0xafec6b27"},{"name":"istanbul","block":5435345,"forkHash":"0xcbdb8838"},{"name":"berlin","block":8290928,"forkHash":"0x6910c8bd"},{"name":"london","block":8897988,"forkHash":"0x8e29f2f3"},{"name":"merge","block":null,"forkHash":null},{"name":"shanghai","block":null,"forkHash":null}],"bootstrapNodes":[{"ip":"52.169.42.101","port":30303,"id":"a24ac7c5484ef4ed0c5eb2d36620ba4e4aa13b8c84684e1b4aab0cebea2ae45cb4d375b77eab56516d34bfbd3c1a833fc51296ff084b770b94fb9028c4d25ccf","location":"","comment":"IE"},{"ip":"52.3.158.184","port":30303,"id":"343149e4feefa15d882d9fe4ac7d88f885bd05ebb735e547f12e12080a9fa07c8014ca6fd7f373123488102fe5e34111f8509cf0b7de3f5b44339c9f25e87cb8","location":"","comment":"INFURA"},{"ip":"159.89.28.211","port":30303,"id":"b6b28890b006743680c52e64e0d16db57f28124885595fa03a562be1d2bf0f3a1da297d56b13da25fb992888fd556d4c1a27b1f39d531bde7de1921c90061cc6","location":"","comment":"AKASHA"}],"dnsNetworks":["enrtree://AKA3AM6LPBYEUDMVNU3BSVQJ5AD45Y7YPOHJLEF6W26QOE4VTUDPE@all.rinkeby.ethdisco.net"]}');

/***/ }),

/***/ "./node_modules/@ethereumjs/common/dist.browser/chains/ropsten.json":
/*!**************************************************************************!*\
  !*** ./node_modules/@ethereumjs/common/dist.browser/chains/ropsten.json ***!
  \**************************************************************************/
/***/ (function(module) {

"use strict";
module.exports = JSON.parse('{"name":"ropsten","chainId":3,"networkId":3,"defaultHardfork":"istanbul","consensus":{"type":"pow","algorithm":"ethash","ethash":{}},"comment":"PoW test network","url":"https://github.com/ethereum/ropsten","genesis":{"hash":"0x41941023680923e0fe4d74a34bdac8141f2540e3ae90623718e47d66d1ca4a2d","timestamp":null,"gasLimit":16777216,"difficulty":1048576,"nonce":"0x0000000000000042","extraData":"0x3535353535353535353535353535353535353535353535353535353535353535","stateRoot":"0x217b0bbcfb72e2d57e28f33cb361b9983513177755dc3f33ce3e7022ed62b77b"},"hardforks":[{"name":"chainstart","block":0,"forkHash":"0x30c7ddbc"},{"name":"homestead","block":0,"forkHash":"0x30c7ddbc"},{"name":"tangerineWhistle","block":0,"forkHash":"0x30c7ddbc"},{"name":"spuriousDragon","block":10,"forkHash":"0x63760190"},{"name":"byzantium","block":1700000,"forkHash":"0x3ea159c7"},{"name":"constantinople","block":4230000,"forkHash":"0x97b544f3"},{"name":"petersburg","block":4939394,"forkHash":"0xd6e2149b"},{"name":"istanbul","block":6485846,"forkHash":"0x4bc66396"},{"name":"muirGlacier","block":7117117,"forkHash":"0x6727ef90"},{"name":"berlin","block":9812189,"forkHash":"0xa157d377"},{"name":"london","block":10499401,"forkHash":"0x7119b6b3"},{"name":"merge","block":null,"forkHash":null},{"name":"shanghai","block":null,"forkHash":null}],"bootstrapNodes":[{"ip":"52.176.7.10","port":30303,"id":"30b7ab30a01c124a6cceca36863ece12c4f5fa68e3ba9b0b51407ccc002eeed3b3102d20a88f1c1d3c3154e2449317b8ef95090e77b312d5cc39354f86d5d606","location":"","comment":"US-Azure geth"},{"ip":"52.176.100.77","port":30303,"id":"865a63255b3bb68023b6bffd5095118fcc13e79dcf014fe4e47e065c350c7cc72af2e53eff895f11ba1bbb6a2b33271c1116ee870f266618eadfc2e78aa7349c","location":"","comment":"US-Azure parity"},{"ip":"52.232.243.152","port":30303,"id":"6332792c4a00e3e4ee0926ed89e0d27ef985424d97b6a45bf0f23e51f0dcb5e66b875777506458aea7af6f9e4ffb69f43f3778ee73c81ed9d34c51c4b16b0b0f","location":"","comment":"Parity"},{"ip":"192.81.208.223","port":30303,"id":"94c15d1b9e2fe7ce56e458b9a3b672ef11894ddedd0c6f247e0f1d3487f52b66208fb4aeb8179fce6e3a749ea93ed147c37976d67af557508d199d9594c35f09","location":"","comment":"@gpip"}],"dnsNetworks":["enrtree://AKA3AM6LPBYEUDMVNU3BSVQJ5AD45Y7YPOHJLEF6W26QOE4VTUDPE@all.ropsten.ethdisco.net"]}');

/***/ }),

/***/ "./node_modules/@ethereumjs/common/dist.browser/chains/sepolia.json":
/*!**************************************************************************!*\
  !*** ./node_modules/@ethereumjs/common/dist.browser/chains/sepolia.json ***!
  \**************************************************************************/
/***/ (function(module) {

"use strict";
module.exports = JSON.parse('{"name":"sepolia","chainId":11155111,"networkId":11155111,"defaultHardfork":"istanbul","consensus":{"type":"pow","algorithm":"ethash","ethash":{}},"comment":"PoW test network to replace Ropsten","url":"https://github.com/ethereum/go-ethereum/pull/23730","genesis":{"hash":"0x25a5cc106eea7138acab33231d7160d69cb777ee0c2c553fcddf5138993e6dd9","timestamp":"0x6159af19","gasLimit":30000000,"difficulty":131072,"nonce":"0x0000000000000000","extraData":"0x5365706f6c69612c20417468656e732c204174746963612c2047726565636521","stateRoot":"0x5eb6e371a698b8d68f665192350ffcecbbbf322916f4b51bd79bb6887da3f494"},"hardforks":[{"name":"chainstart","block":0,"forkHash":"0xfe3366e7"},{"name":"homestead","block":0,"forkHash":"0xfe3366e7"},{"name":"tangerineWhistle","block":0,"forkHash":"0xfe3366e7"},{"name":"spuriousDragon","block":0,"forkHash":"0xfe3366e7"},{"name":"byzantium","block":0,"forkHash":"0xfe3366e7"},{"name":"constantinople","block":0,"forkHash":"0xfe3366e7"},{"name":"petersburg","block":0,"forkHash":"0xfe3366e7"},{"name":"istanbul","block":0,"forkHash":"0xfe3366e7"},{"name":"muirGlacier","block":0,"forkHash":"0xfe3366e7"},{"name":"berlin","block":0,"forkHash":"0xfe3366e7"},{"name":"london","block":0,"forkHash":"0xfe3366e7"},{"name":"merge","block":null,"forkHash":null},{"name":"shanghai","block":null,"forkHash":null}],"bootstrapNodes":[{"ip":"18.168.182.86","port":30303,"id":"9246d00bc8fd1742e5ad2428b80fc4dc45d786283e05ef6edbd9002cbc335d40998444732fbe921cb88e1d2c73d1b1de53bae6a2237996e9bfe14f871baf7066","location":"","comment":"geth"},{"ip":"52.14.151.177","port":30303,"id":"ec66ddcf1a974950bd4c782789a7e04f8aa7110a72569b6e65fcd51e937e74eed303b1ea734e4d19cfaec9fbff9b6ee65bf31dcb50ba79acce9dd63a6aca61c7","location":"","comment":"besu"}],"dnsNetworks":[]}');

/***/ }),

/***/ "./node_modules/@ethereumjs/common/dist.browser/eips/1153.json":
/*!*********************************************************************!*\
  !*** ./node_modules/@ethereumjs/common/dist.browser/eips/1153.json ***!
  \*********************************************************************/
/***/ (function(module) {

"use strict";
module.exports = JSON.parse('{"name":"EIP-1153","number":1153,"comment":"Transient Storage","url":"https://eips.ethereum.org/EIPS/eip-1153","status":"Review","minimumHardfork":"chainstart","requiredEIPs":[],"gasConfig":{},"gasPrices":{"tstore":{"v":100,"d":"Base fee of the TSTORE opcode"},"tload":{"v":100,"d":"Base fee of the TLOAD opcode"}},"vm":{},"pow":{}}');

/***/ }),

/***/ "./node_modules/@ethereumjs/common/dist.browser/eips/1559.json":
/*!*********************************************************************!*\
  !*** ./node_modules/@ethereumjs/common/dist.browser/eips/1559.json ***!
  \*********************************************************************/
/***/ (function(module) {

"use strict";
module.exports = JSON.parse('{"name":"EIP-1559","number":1559,"comment":"Fee market change for ETH 1.0 chain","url":"https://eips.ethereum.org/EIPS/eip-1559","status":"Final","minimumHardfork":"berlin","requiredEIPs":[2930],"gasConfig":{"baseFeeMaxChangeDenominator":{"v":8,"d":"Maximum base fee change denominator"},"elasticityMultiplier":{"v":2,"d":"Maximum block gas target elasticity"},"initialBaseFee":{"v":1000000000,"d":"Initial base fee on first EIP1559 block"}},"gasPrices":{},"vm":{},"pow":{}}');

/***/ }),

/***/ "./node_modules/@ethereumjs/common/dist.browser/eips/2315.json":
/*!*********************************************************************!*\
  !*** ./node_modules/@ethereumjs/common/dist.browser/eips/2315.json ***!
  \*********************************************************************/
/***/ (function(module) {

"use strict";
module.exports = JSON.parse('{"name":"EIP-2315","number":2315,"comment":"Simple subroutines for the EVM","url":"https://eips.ethereum.org/EIPS/eip-2315","status":"Draft","minimumHardfork":"istanbul","gasConfig":{},"gasPrices":{"beginsub":{"v":2,"d":"Base fee of the BEGINSUB opcode"},"returnsub":{"v":5,"d":"Base fee of the RETURNSUB opcode"},"jumpsub":{"v":10,"d":"Base fee of the JUMPSUB opcode"}},"vm":{},"pow":{}}');

/***/ }),

/***/ "./node_modules/@ethereumjs/common/dist.browser/eips/2537.json":
/*!*********************************************************************!*\
  !*** ./node_modules/@ethereumjs/common/dist.browser/eips/2537.json ***!
  \*********************************************************************/
/***/ (function(module) {

"use strict";
module.exports = JSON.parse('{"name":"EIP-2537","number":2537,"comment":"BLS12-381 precompiles","url":"https://eips.ethereum.org/EIPS/eip-2537","status":"Draft","minimumHardfork":"chainstart","gasConfig":{},"gasPrices":{"Bls12381G1AddGas":{"v":600,"d":"Gas cost of a single BLS12-381 G1 addition precompile-call"},"Bls12381G1MulGas":{"v":12000,"d":"Gas cost of a single BLS12-381 G1 multiplication precompile-call"},"Bls12381G2AddGas":{"v":4500,"d":"Gas cost of a single BLS12-381 G2 addition precompile-call"},"Bls12381G2MulGas":{"v":55000,"d":"Gas cost of a single BLS12-381 G2 multiplication precompile-call"},"Bls12381PairingBaseGas":{"v":115000,"d":"Base gas cost of BLS12-381 pairing check"},"Bls12381PairingPerPairGas":{"v":23000,"d":"Per-pair gas cost of BLS12-381 pairing check"},"Bls12381MapG1Gas":{"v":5500,"d":"Gas cost of BLS12-381 map field element to G1"},"Bls12381MapG2Gas":{"v":110000,"d":"Gas cost of BLS12-381 map field element to G2"},"Bls12381MultiExpGasDiscount":{"v":[[1,1200],[2,888],[3,764],[4,641],[5,594],[6,547],[7,500],[8,453],[9,438],[10,423],[11,408],[12,394],[13,379],[14,364],[15,349],[16,334],[17,330],[18,326],[19,322],[20,318],[21,314],[22,310],[23,306],[24,302],[25,298],[26,294],[27,289],[28,285],[29,281],[30,277],[31,273],[32,269],[33,268],[34,266],[35,265],[36,263],[37,262],[38,260],[39,259],[40,257],[41,256],[42,254],[43,253],[44,251],[45,250],[46,248],[47,247],[48,245],[49,244],[50,242],[51,241],[52,239],[53,238],[54,236],[55,235],[56,233],[57,232],[58,231],[59,229],[60,228],[61,226],[62,225],[63,223],[64,222],[65,221],[66,220],[67,219],[68,219],[69,218],[70,217],[71,216],[72,216],[73,215],[74,214],[75,213],[76,213],[77,212],[78,211],[79,211],[80,210],[81,209],[82,208],[83,208],[84,207],[85,206],[86,205],[87,205],[88,204],[89,203],[90,202],[91,202],[92,201],[93,200],[94,199],[95,199],[96,198],[97,197],[98,196],[99,196],[100,195],[101,194],[102,193],[103,193],[104,192],[105,191],[106,191],[107,190],[108,189],[109,188],[110,188],[111,187],[112,186],[113,185],[114,185],[115,184],[116,183],[117,182],[118,182],[119,181],[120,180],[121,179],[122,179],[123,178],[124,177],[125,176],[126,176],[127,175],[128,174]],"d":"Discount gas costs of calls to the MultiExp precompiles with `k` (point, scalar) pair"}},"vm":{},"pow":{}}');

/***/ }),

/***/ "./node_modules/@ethereumjs/common/dist.browser/eips/2565.json":
/*!*********************************************************************!*\
  !*** ./node_modules/@ethereumjs/common/dist.browser/eips/2565.json ***!
  \*********************************************************************/
/***/ (function(module) {

"use strict";
module.exports = JSON.parse('{"name":"EIP-2565","number":2565,"comment":"ModExp gas cost","url":"https://eips.ethereum.org/EIPS/eip-2565","status":"Final","minimumHardfork":"byzantium","gasConfig":{},"gasPrices":{"modexpGquaddivisor":{"v":3,"d":"Gquaddivisor from modexp precompile for gas calculation"}},"vm":{},"pow":{}}');

/***/ }),

/***/ "./node_modules/@ethereumjs/common/dist.browser/eips/2718.json":
/*!*********************************************************************!*\
  !*** ./node_modules/@ethereumjs/common/dist.browser/eips/2718.json ***!
  \*********************************************************************/
/***/ (function(module) {

"use strict";
module.exports = JSON.parse('{"name":"EIP-2718","comment":"Typed Transaction Envelope","url":"https://eips.ethereum.org/EIPS/eip-2718","status":"Final","minimumHardfork":"chainstart","gasConfig":{},"gasPrices":{},"vm":{},"pow":{}}');

/***/ }),

/***/ "./node_modules/@ethereumjs/common/dist.browser/eips/2929.json":
/*!*********************************************************************!*\
  !*** ./node_modules/@ethereumjs/common/dist.browser/eips/2929.json ***!
  \*********************************************************************/
/***/ (function(module) {

"use strict";
module.exports = JSON.parse('{"name":"EIP-2929","comment":"Gas cost increases for state access opcodes","url":"https://eips.ethereum.org/EIPS/eip-2929","status":"Final","minimumHardfork":"chainstart","gasConfig":{},"gasPrices":{"coldsload":{"v":2100,"d":"Gas cost of the first read of storage from a given location (per transaction)"},"coldaccountaccess":{"v":2600,"d":"Gas cost of the first read of a given address (per transaction)"},"warmstorageread":{"v":100,"d":"Gas cost of reading storage locations which have already loaded \'cold\'"},"sstoreCleanGasEIP2200":{"v":2900,"d":"Once per SSTORE operation from clean non-zero to something else"},"sstoreNoopGasEIP2200":{"v":100,"d":"Once per SSTORE operation if the value doesn\'t change"},"sstoreDirtyGasEIP2200":{"v":100,"d":"Once per SSTORE operation if a dirty value is changed"},"sstoreInitRefundEIP2200":{"v":19900,"d":"Once per SSTORE operation for resetting to the original zero value"},"sstoreCleanRefundEIP2200":{"v":4900,"d":"Once per SSTORE operation for resetting to the original non-zero value"},"call":{"v":0,"d":"Base fee of the CALL opcode"},"callcode":{"v":0,"d":"Base fee of the CALLCODE opcode"},"delegatecall":{"v":0,"d":"Base fee of the DELEGATECALL opcode"},"staticcall":{"v":0,"d":"Base fee of the STATICCALL opcode"},"balance":{"v":0,"d":"Base fee of the BALANCE opcode"},"extcodesize":{"v":0,"d":"Base fee of the EXTCODESIZE opcode"},"extcodecopy":{"v":0,"d":"Base fee of the EXTCODECOPY opcode"},"extcodehash":{"v":0,"d":"Base fee of the EXTCODEHASH opcode"},"sload":{"v":0,"d":"Base fee of the SLOAD opcode"},"sstore":{"v":0,"d":"Base fee of the SSTORE opcode"}},"vm":{},"pow":{}}');

/***/ }),

/***/ "./node_modules/@ethereumjs/common/dist.browser/eips/2930.json":
/*!*********************************************************************!*\
  !*** ./node_modules/@ethereumjs/common/dist.browser/eips/2930.json ***!
  \*********************************************************************/
/***/ (function(module) {

"use strict";
module.exports = JSON.parse('{"name":"EIP-2930","comment":"Optional access lists","url":"https://eips.ethereum.org/EIPS/eip-2930","status":"Final","minimumHardfork":"istanbul","requiredEIPs":[2718,2929],"gasConfig":{},"gasPrices":{"accessListStorageKeyCost":{"v":1900,"d":"Gas cost per storage key in an Access List transaction"},"accessListAddressCost":{"v":2400,"d":"Gas cost per storage key in an Access List transaction"}},"vm":{},"pow":{}}');

/***/ }),

/***/ "./node_modules/@ethereumjs/common/dist.browser/eips/3198.json":
/*!*********************************************************************!*\
  !*** ./node_modules/@ethereumjs/common/dist.browser/eips/3198.json ***!
  \*********************************************************************/
/***/ (function(module) {

"use strict";
module.exports = JSON.parse('{"name":"EIP-3198","number":3198,"comment":"BASEFEE opcode","url":"https://eips.ethereum.org/EIPS/eip-3198","status":"Final","minimumHardfork":"london","gasConfig":{},"gasPrices":{"basefee":{"v":2,"d":"Gas cost of the BASEFEE opcode"}},"vm":{},"pow":{}}');

/***/ }),

/***/ "./node_modules/@ethereumjs/common/dist.browser/eips/3529.json":
/*!*********************************************************************!*\
  !*** ./node_modules/@ethereumjs/common/dist.browser/eips/3529.json ***!
  \*********************************************************************/
/***/ (function(module) {

"use strict";
module.exports = JSON.parse('{"name":"EIP-3529","comment":"Reduction in refunds","url":"https://eips.ethereum.org/EIPS/eip-3529","status":"Final","minimumHardfork":"berlin","requiredEIPs":[2929],"gasConfig":{"maxRefundQuotient":{"v":5,"d":"Maximum refund quotient; max tx refund is min(tx.gasUsed/maxRefundQuotient, tx.gasRefund)"}},"gasPrices":{"selfdestructRefund":{"v":0,"d":"Refunded following a selfdestruct operation"},"sstoreClearRefundEIP2200":{"v":4800,"d":"Once per SSTORE operation for clearing an originally existing storage slot"}},"vm":{},"pow":{}}');

/***/ }),

/***/ "./node_modules/@ethereumjs/common/dist.browser/eips/3540.json":
/*!*********************************************************************!*\
  !*** ./node_modules/@ethereumjs/common/dist.browser/eips/3540.json ***!
  \*********************************************************************/
/***/ (function(module) {

"use strict";
module.exports = JSON.parse('{"name":"EIP-3540","number":3540,"comment":"EVM Object Format (EOF) v1","url":"https://eips.ethereum.org/EIPS/eip-3540","status":"Review","minimumHardfork":"london","requiredEIPs":[3541],"gasConfig":{},"gasPrices":{},"vm":{},"pow":{}}');

/***/ }),

/***/ "./node_modules/@ethereumjs/common/dist.browser/eips/3541.json":
/*!*********************************************************************!*\
  !*** ./node_modules/@ethereumjs/common/dist.browser/eips/3541.json ***!
  \*********************************************************************/
/***/ (function(module) {

"use strict";
module.exports = JSON.parse('{"name":"EIP-3541","comment":"Reject new contracts starting with the 0xEF byte","url":"https://eips.ethereum.org/EIPS/eip-3541","status":"Final","minimumHardfork":"berlin","requiredEIPs":[],"gasConfig":{},"gasPrices":{},"vm":{},"pow":{}}');

/***/ }),

/***/ "./node_modules/@ethereumjs/common/dist.browser/eips/3554.json":
/*!*********************************************************************!*\
  !*** ./node_modules/@ethereumjs/common/dist.browser/eips/3554.json ***!
  \*********************************************************************/
/***/ (function(module) {

"use strict";
module.exports = JSON.parse('{"name":"EIP-3554","comment":"Reduction in refunds","url":"Difficulty Bomb Delay to December 1st 2021","status":"Final","minimumHardfork":"muirGlacier","requiredEIPs":[],"gasConfig":{},"gasPrices":{},"vm":{},"pow":{"difficultyBombDelay":{"v":9500000,"d":"the amount of blocks to delay the difficulty bomb with"}}}');

/***/ }),

/***/ "./node_modules/@ethereumjs/common/dist.browser/eips/3607.json":
/*!*********************************************************************!*\
  !*** ./node_modules/@ethereumjs/common/dist.browser/eips/3607.json ***!
  \*********************************************************************/
/***/ (function(module) {

"use strict";
module.exports = JSON.parse('{"name":"EIP-3607","number":3607,"comment":"Reject transactions from senders with deployed code","url":"https://eips.ethereum.org/EIPS/eip-3607","status":"Final","minimumHardfork":"chainstart","requiredEIPs":[],"gasConfig":{},"gasPrices":{},"vm":{},"pow":{}}');

/***/ }),

/***/ "./node_modules/@ethereumjs/common/dist.browser/eips/3651.json":
/*!*********************************************************************!*\
  !*** ./node_modules/@ethereumjs/common/dist.browser/eips/3651.json ***!
  \*********************************************************************/
/***/ (function(module) {

"use strict";
module.exports = JSON.parse('{"name":"EIP-3651","number":3198,"comment":"Warm COINBASE","url":"https://eips.ethereum.org/EIPS/eip-3651","status":"Review","minimumHardfork":"london","requiredEIPs":[2929],"gasConfig":{},"gasPrices":{},"vm":{},"pow":{}}');

/***/ }),

/***/ "./node_modules/@ethereumjs/common/dist.browser/eips/3670.json":
/*!*********************************************************************!*\
  !*** ./node_modules/@ethereumjs/common/dist.browser/eips/3670.json ***!
  \*********************************************************************/
/***/ (function(module) {

"use strict";
module.exports = JSON.parse('{"name":"EIP-3670","number":3670,"comment":"EOF - Code Validation","url":"https://eips.ethereum.org/EIPS/eip-3670","status":"Review","minimumHardfork":"london","requiredEIPs":[3540],"gasConfig":{},"gasPrices":{},"vm":{},"pow":{}}');

/***/ }),

/***/ "./node_modules/@ethereumjs/common/dist.browser/eips/3675.json":
/*!*********************************************************************!*\
  !*** ./node_modules/@ethereumjs/common/dist.browser/eips/3675.json ***!
  \*********************************************************************/
/***/ (function(module) {

"use strict";
module.exports = JSON.parse('{"name":"EIP-3675","number":3675,"comment":"Upgrade consensus to Proof-of-Stake","url":"https://eips.ethereum.org/EIPS/eip-3675","status":"Review","minimumHardfork":"london","requiredEIPs":[],"gasConfig":{},"gasPrices":{},"vm":{},"pow":{}}');

/***/ }),

/***/ "./node_modules/@ethereumjs/common/dist.browser/eips/3855.json":
/*!*********************************************************************!*\
  !*** ./node_modules/@ethereumjs/common/dist.browser/eips/3855.json ***!
  \*********************************************************************/
/***/ (function(module) {

"use strict";
module.exports = JSON.parse('{"name":"EIP-3855","number":3855,"comment":"PUSH0 instruction","url":"https://eips.ethereum.org/EIPS/eip-3855","status":"Review","minimumHardfork":"chainstart","requiredEIPs":[],"gasConfig":{},"gasPrices":{"push0":{"v":2,"d":"Base fee of the PUSH0 opcode"}},"vm":{},"pow":{}}');

/***/ }),

/***/ "./node_modules/@ethereumjs/common/dist.browser/eips/3860.json":
/*!*********************************************************************!*\
  !*** ./node_modules/@ethereumjs/common/dist.browser/eips/3860.json ***!
  \*********************************************************************/
/***/ (function(module) {

"use strict";
module.exports = JSON.parse('{"name":"EIP-3860","number":3860,"comment":"Limit and meter initcode","url":"https://eips.ethereum.org/EIPS/eip-3860","status":"Review","minimumHardfork":"spuriousDragon","requiredEIPs":[],"gasConfig":{},"gasPrices":{"initCodeWordCost":{"v":2,"d":"Gas to pay for each word (32 bytes) of initcode when creating a contract"}},"vm":{"maxInitCodeSize":{"v":49152,"d":"Maximum length of initialization code when creating a contract"}},"pow":{}}');

/***/ }),

/***/ "./node_modules/@ethereumjs/common/dist.browser/eips/4345.json":
/*!*********************************************************************!*\
  !*** ./node_modules/@ethereumjs/common/dist.browser/eips/4345.json ***!
  \*********************************************************************/
/***/ (function(module) {

"use strict";
module.exports = JSON.parse('{"name":"EIP-4345","number":4345,"comment":"Difficulty Bomb Delay to June 2022","url":"https://eips.ethereum.org/EIPS/eip-4345","status":"Final","minimumHardfork":"london","gasConfig":{},"gasPrices":{},"vm":{},"pow":{"difficultyBombDelay":{"v":10700000,"d":"the amount of blocks to delay the difficulty bomb with"}}}');

/***/ }),

/***/ "./node_modules/@ethereumjs/common/dist.browser/eips/4399.json":
/*!*********************************************************************!*\
  !*** ./node_modules/@ethereumjs/common/dist.browser/eips/4399.json ***!
  \*********************************************************************/
/***/ (function(module) {

"use strict";
module.exports = JSON.parse('{"name":"EIP-4399","number":4399,"comment":"Supplant DIFFICULTY opcode with PREVRANDAO","url":"https://eips.ethereum.org/EIPS/eip-4399","status":"Review","minimumHardfork":"london","requiredEIPs":[],"gasConfig":{},"gasPrices":{},"vm":{},"pow":{}}');

/***/ }),

/***/ "./node_modules/@ethereumjs/common/dist.browser/eips/5133.json":
/*!*********************************************************************!*\
  !*** ./node_modules/@ethereumjs/common/dist.browser/eips/5133.json ***!
  \*********************************************************************/
/***/ (function(module) {

"use strict";
module.exports = JSON.parse('{"name":"EIP-5133","number":5133,"comment":"Delaying Difficulty Bomb to mid-September 2022","url":"https://eips.ethereum.org/EIPS/eip-5133","status":"Draft","minimumHardfork":"grayGlacier","gasConfig":{},"gasPrices":{},"vm":{},"pow":{"difficultyBombDelay":{"v":11400000,"d":"the amount of blocks to delay the difficulty bomb with"}}}');

/***/ }),

/***/ "./node_modules/@ethereumjs/common/dist.browser/genesisStates/goerli.json":
/*!********************************************************************************!*\
  !*** ./node_modules/@ethereumjs/common/dist.browser/genesisStates/goerli.json ***!
  \********************************************************************************/
/***/ (function(module) {

"use strict";
module.exports = JSON.parse('{"0x0000000000000000000000000000000000000000":"0x1","0x0000000000000000000000000000000000000001":"0x1","0x0000000000000000000000000000000000000002":"0x1","0x0000000000000000000000000000000000000003":"0x1","0x0000000000000000000000000000000000000004":"0x1","0x0000000000000000000000000000000000000005":"0x1","0x0000000000000000000000000000000000000006":"0x1","0x0000000000000000000000000000000000000007":"0x1","0x0000000000000000000000000000000000000008":"0x1","0x0000000000000000000000000000000000000009":"0x1","0x000000000000000000000000000000000000000a":"0x1","0x000000000000000000000000000000000000000b":"0x1","0x000000000000000000000000000000000000000c":"0x1","0x000000000000000000000000000000000000000d":"0x1","0x000000000000000000000000000000000000000e":"0x1","0x000000000000000000000000000000000000000f":"0x1","0x0000000000000000000000000000000000000010":"0x1","0x0000000000000000000000000000000000000011":"0x1","0x0000000000000000000000000000000000000012":"0x1","0x0000000000000000000000000000000000000013":"0x1","0x0000000000000000000000000000000000000014":"0x1","0x0000000000000000000000000000000000000015":"0x1","0x0000000000000000000000000000000000000016":"0x1","0x0000000000000000000000000000000000000017":"0x1","0x0000000000000000000000000000000000000018":"0x1","0x0000000000000000000000000000000000000019":"0x1","0x000000000000000000000000000000000000001a":"0x1","0x000000000000000000000000000000000000001b":"0x1","0x000000000000000000000000000000000000001c":"0x1","0x000000000000000000000000000000000000001d":"0x1","0x000000000000000000000000000000000000001e":"0x1","0x000000000000000000000000000000000000001f":"0x1","0x0000000000000000000000000000000000000020":"0x1","0x0000000000000000000000000000000000000021":"0x1","0x0000000000000000000000000000000000000022":"0x1","0x0000000000000000000000000000000000000023":"0x1","0x0000000000000000000000000000000000000024":"0x1","0x0000000000000000000000000000000000000025":"0x1","0x0000000000000000000000000000000000000026":"0x1","0x0000000000000000000000000000000000000027":"0x1","0x0000000000000000000000000000000000000028":"0x1","0x0000000000000000000000000000000000000029":"0x1","0x000000000000000000000000000000000000002a":"0x1","0x000000000000000000000000000000000000002b":"0x1","0x000000000000000000000000000000000000002c":"0x1","0x000000000000000000000000000000000000002d":"0x1","0x000000000000000000000000000000000000002e":"0x1","0x000000000000000000000000000000000000002f":"0x1","0x0000000000000000000000000000000000000030":"0x1","0x0000000000000000000000000000000000000031":"0x1","0x0000000000000000000000000000000000000032":"0x1","0x0000000000000000000000000000000000000033":"0x1","0x0000000000000000000000000000000000000034":"0x1","0x0000000000000000000000000000000000000035":"0x1","0x0000000000000000000000000000000000000036":"0x1","0x0000000000000000000000000000000000000037":"0x1","0x0000000000000000000000000000000000000038":"0x1","0x0000000000000000000000000000000000000039":"0x1","0x000000000000000000000000000000000000003a":"0x1","0x000000000000000000000000000000000000003b":"0x1","0x000000000000000000000000000000000000003c":"0x1","0x000000000000000000000000000000000000003d":"0x1","0x000000000000000000000000000000000000003e":"0x1","0x000000000000000000000000000000000000003f":"0x1","0x0000000000000000000000000000000000000040":"0x1","0x0000000000000000000000000000000000000041":"0x1","0x0000000000000000000000000000000000000042":"0x1","0x0000000000000000000000000000000000000043":"0x1","0x0000000000000000000000000000000000000044":"0x1","0x0000000000000000000000000000000000000045":"0x1","0x0000000000000000000000000000000000000046":"0x1","0x0000000000000000000000000000000000000047":"0x1","0x0000000000000000000000000000000000000048":"0x1","0x0000000000000000000000000000000000000049":"0x1","0x000000000000000000000000000000000000004a":"0x1","0x000000000000000000000000000000000000004b":"0x1","0x000000000000000000000000000000000000004c":"0x1","0x000000000000000000000000000000000000004d":"0x1","0x000000000000000000000000000000000000004e":"0x1","0x000000000000000000000000000000000000004f":"0x1","0x0000000000000000000000000000000000000050":"0x1","0x0000000000000000000000000000000000000051":"0x1","0x0000000000000000000000000000000000000052":"0x1","0x0000000000000000000000000000000000000053":"0x1","0x0000000000000000000000000000000000000054":"0x1","0x0000000000000000000000000000000000000055":"0x1","0x0000000000000000000000000000000000000056":"0x1","0x0000000000000000000000000000000000000057":"0x1","0x0000000000000000000000000000000000000058":"0x1","0x0000000000000000000000000000000000000059":"0x1","0x000000000000000000000000000000000000005a":"0x1","0x000000000000000000000000000000000000005b":"0x1","0x000000000000000000000000000000000000005c":"0x1","0x000000000000000000000000000000000000005d":"0x1","0x000000000000000000000000000000000000005e":"0x1","0x000000000000000000000000000000000000005f":"0x1","0x0000000000000000000000000000000000000060":"0x1","0x0000000000000000000000000000000000000061":"0x1","0x0000000000000000000000000000000000000062":"0x1","0x0000000000000000000000000000000000000063":"0x1","0x0000000000000000000000000000000000000064":"0x1","0x0000000000000000000000000000000000000065":"0x1","0x0000000000000000000000000000000000000066":"0x1","0x0000000000000000000000000000000000000067":"0x1","0x0000000000000000000000000000000000000068":"0x1","0x0000000000000000000000000000000000000069":"0x1","0x000000000000000000000000000000000000006a":"0x1","0x000000000000000000000000000000000000006b":"0x1","0x000000000000000000000000000000000000006c":"0x1","0x000000000000000000000000000000000000006d":"0x1","0x000000000000000000000000000000000000006e":"0x1","0x000000000000000000000000000000000000006f":"0x1","0x0000000000000000000000000000000000000070":"0x1","0x0000000000000000000000000000000000000071":"0x1","0x0000000000000000000000000000000000000072":"0x1","0x0000000000000000000000000000000000000073":"0x1","0x0000000000000000000000000000000000000074":"0x1","0x0000000000000000000000000000000000000075":"0x1","0x0000000000000000000000000000000000000076":"0x1","0x0000000000000000000000000000000000000077":"0x1","0x0000000000000000000000000000000000000078":"0x1","0x0000000000000000000000000000000000000079":"0x1","0x000000000000000000000000000000000000007a":"0x1","0x000000000000000000000000000000000000007b":"0x1","0x000000000000000000000000000000000000007c":"0x1","0x000000000000000000000000000000000000007d":"0x1","0x000000000000000000000000000000000000007e":"0x1","0x000000000000000000000000000000000000007f":"0x1","0x0000000000000000000000000000000000000080":"0x1","0x0000000000000000000000000000000000000081":"0x1","0x0000000000000000000000000000000000000082":"0x1","0x0000000000000000000000000000000000000083":"0x1","0x0000000000000000000000000000000000000084":"0x1","0x0000000000000000000000000000000000000085":"0x1","0x0000000000000000000000000000000000000086":"0x1","0x0000000000000000000000000000000000000087":"0x1","0x0000000000000000000000000000000000000088":"0x1","0x0000000000000000000000000000000000000089":"0x1","0x000000000000000000000000000000000000008a":"0x1","0x000000000000000000000000000000000000008b":"0x1","0x000000000000000000000000000000000000008c":"0x1","0x000000000000000000000000000000000000008d":"0x1","0x000000000000000000000000000000000000008e":"0x1","0x000000000000000000000000000000000000008f":"0x1","0x0000000000000000000000000000000000000090":"0x1","0x0000000000000000000000000000000000000091":"0x1","0x0000000000000000000000000000000000000092":"0x1","0x0000000000000000000000000000000000000093":"0x1","0x0000000000000000000000000000000000000094":"0x1","0x0000000000000000000000000000000000000095":"0x1","0x0000000000000000000000000000000000000096":"0x1","0x0000000000000000000000000000000000000097":"0x1","0x0000000000000000000000000000000000000098":"0x1","0x0000000000000000000000000000000000000099":"0x1","0x000000000000000000000000000000000000009a":"0x1","0x000000000000000000000000000000000000009b":"0x1","0x000000000000000000000000000000000000009c":"0x1","0x000000000000000000000000000000000000009d":"0x1","0x000000000000000000000000000000000000009e":"0x1","0x000000000000000000000000000000000000009f":"0x1","0x00000000000000000000000000000000000000a0":"0x1","0x00000000000000000000000000000000000000a1":"0x1","0x00000000000000000000000000000000000000a2":"0x1","0x00000000000000000000000000000000000000a3":"0x1","0x00000000000000000000000000000000000000a4":"0x1","0x00000000000000000000000000000000000000a5":"0x1","0x00000000000000000000000000000000000000a6":"0x1","0x00000000000000000000000000000000000000a7":"0x1","0x00000000000000000000000000000000000000a8":"0x1","0x00000000000000000000000000000000000000a9":"0x1","0x00000000000000000000000000000000000000aa":"0x1","0x00000000000000000000000000000000000000ab":"0x1","0x00000000000000000000000000000000000000ac":"0x1","0x00000000000000000000000000000000000000ad":"0x1","0x00000000000000000000000000000000000000ae":"0x1","0x00000000000000000000000000000000000000af":"0x1","0x00000000000000000000000000000000000000b0":"0x1","0x00000000000000000000000000000000000000b1":"0x1","0x00000000000000000000000000000000000000b2":"0x1","0x00000000000000000000000000000000000000b3":"0x1","0x00000000000000000000000000000000000000b4":"0x1","0x00000000000000000000000000000000000000b5":"0x1","0x00000000000000000000000000000000000000b6":"0x1","0x00000000000000000000000000000000000000b7":"0x1","0x00000000000000000000000000000000000000b8":"0x1","0x00000000000000000000000000000000000000b9":"0x1","0x00000000000000000000000000000000000000ba":"0x1","0x00000000000000000000000000000000000000bb":"0x1","0x00000000000000000000000000000000000000bc":"0x1","0x00000000000000000000000000000000000000bd":"0x1","0x00000000000000000000000000000000000000be":"0x1","0x00000000000000000000000000000000000000bf":"0x1","0x00000000000000000000000000000000000000c0":"0x1","0x00000000000000000000000000000000000000c1":"0x1","0x00000000000000000000000000000000000000c2":"0x1","0x00000000000000000000000000000000000000c3":"0x1","0x00000000000000000000000000000000000000c4":"0x1","0x00000000000000000000000000000000000000c5":"0x1","0x00000000000000000000000000000000000000c6":"0x1","0x00000000000000000000000000000000000000c7":"0x1","0x00000000000000000000000000000000000000c8":"0x1","0x00000000000000000000000000000000000000c9":"0x1","0x00000000000000000000000000000000000000ca":"0x1","0x00000000000000000000000000000000000000cb":"0x1","0x00000000000000000000000000000000000000cc":"0x1","0x00000000000000000000000000000000000000cd":"0x1","0x00000000000000000000000000000000000000ce":"0x1","0x00000000000000000000000000000000000000cf":"0x1","0x00000000000000000000000000000000000000d0":"0x1","0x00000000000000000000000000000000000000d1":"0x1","0x00000000000000000000000000000000000000d2":"0x1","0x00000000000000000000000000000000000000d3":"0x1","0x00000000000000000000000000000000000000d4":"0x1","0x00000000000000000000000000000000000000d5":"0x1","0x00000000000000000000000000000000000000d6":"0x1","0x00000000000000000000000000000000000000d7":"0x1","0x00000000000000000000000000000000000000d8":"0x1","0x00000000000000000000000000000000000000d9":"0x1","0x00000000000000000000000000000000000000da":"0x1","0x00000000000000000000000000000000000000db":"0x1","0x00000000000000000000000000000000000000dc":"0x1","0x00000000000000000000000000000000000000dd":"0x1","0x00000000000000000000000000000000000000de":"0x1","0x00000000000000000000000000000000000000df":"0x1","0x00000000000000000000000000000000000000e0":"0x1","0x00000000000000000000000000000000000000e1":"0x1","0x00000000000000000000000000000000000000e2":"0x1","0x00000000000000000000000000000000000000e3":"0x1","0x00000000000000000000000000000000000000e4":"0x1","0x00000000000000000000000000000000000000e5":"0x1","0x00000000000000000000000000000000000000e6":"0x1","0x00000000000000000000000000000000000000e7":"0x1","0x00000000000000000000000000000000000000e8":"0x1","0x00000000000000000000000000000000000000e9":"0x1","0x00000000000000000000000000000000000000ea":"0x1","0x00000000000000000000000000000000000000eb":"0x1","0x00000000000000000000000000000000000000ec":"0x1","0x00000000000000000000000000000000000000ed":"0x1","0x00000000000000000000000000000000000000ee":"0x1","0x00000000000000000000000000000000000000ef":"0x1","0x00000000000000000000000000000000000000f0":"0x1","0x00000000000000000000000000000000000000f1":"0x1","0x00000000000000000000000000000000000000f2":"0x1","0x00000000000000000000000000000000000000f3":"0x1","0x00000000000000000000000000000000000000f4":"0x1","0x00000000000000000000000000000000000000f5":"0x1","0x00000000000000000000000000000000000000f6":"0x1","0x00000000000000000000000000000000000000f7":"0x1","0x00000000000000000000000000000000000000f8":"0x1","0x00000000000000000000000000000000000000f9":"0x1","0x00000000000000000000000000000000000000fa":"0x1","0x00000000000000000000000000000000000000fb":"0x1","0x00000000000000000000000000000000000000fc":"0x1","0x00000000000000000000000000000000000000fd":"0x1","0x00000000000000000000000000000000000000fe":"0x1","0x00000000000000000000000000000000000000ff":"0x1","0x4c2ae482593505f0163cdefc073e81c63cda4107":"0x152d02c7e14af6800000","0xa8e8f14732658e4b51e8711931053a8a69baf2b1":"0x152d02c7e14af6800000","0xd9a5179f091d85051d3c982785efd1455cec8699":"0x84595161401484a000000","0xe0a2bd4258d2768837baa26a28fe71dc079f84c7":"0x4a47e3c12448f4ad000000"}');

/***/ }),

/***/ "./node_modules/@ethereumjs/common/dist.browser/genesisStates/kovan.json":
/*!*******************************************************************************!*\
  !*** ./node_modules/@ethereumjs/common/dist.browser/genesisStates/kovan.json ***!
  \*******************************************************************************/
/***/ (function(module) {

"use strict";
module.exports = JSON.parse('{"0x0000000000000000000000000000000000000001":"0x1","0x0000000000000000000000000000000000000002":"0x1","0x0000000000000000000000000000000000000003":"0x1","0x0000000000000000000000000000000000000004":"0x1","0x00521965e7bd230323c423d96c657db5b79d099f":"0x100000000000000000000000000000000000000000000000000"}');

/***/ }),

/***/ "./node_modules/@ethereumjs/common/dist.browser/genesisStates/mainnet.json":
/*!*********************************************************************************!*\
  !*** ./node_modules/@ethereumjs/common/dist.browser/genesisStates/mainnet.json ***!
  \*********************************************************************************/
/***/ (function(module) {

"use strict";
module.exports = JSON.parse('{"0x000d836201318ec6899a67540690382780743280":"0xad78ebc5ac6200000","0x001762430ea9c3a26e5749afdb70da5f78ddbb8c":"0xad78ebc5ac6200000","0x001d14804b399c6ef80e64576f657660804fec0b":"0xe3aeb5737240a00000","0x0032403587947b9f15622a68d104d54d33dbd1cd":"0x433874f632cc60000","0x00497e92cdc0e0b963d752b2296acb87da828b24":"0xa8f649fe7c6180000","0x004bfbe1546bc6c65b5c7eaa55304b38bbfec6d3":"0x6c6b935b8bbd400000","0x005a9c03f69d17d66cbb8ad721008a9ebbb836fb":"0x6c6b935b8bbd400000","0x005d0ee8155ec0a6ff6808552ca5f16bb5be323a":"0xaadec983fcff40000","0x007622d84a234bb8b078230fcf84b67ae9a8acae":"0x25e1cc519952f80000","0x007b9fc31905b4994b04c9e2cfdc5e2770503f42":"0x6c5db2a4d815dc0000","0x007f4a23ca00cd043d25c2888c1aa5688f81a344":"0x29f0a95bfbf7290000","0x008639dabbe3aeac887b5dc0e43e13bcd287d76c":"0x10d0e3c87d6e2c0000","0x0089508679abf8c71bf6781687120e3e6a84584d":"0x6194049f30f7200000","0x008fc7cbadffbd0d7fe44f8dfd60a79d721a1c9c":"0x3635c9adc5dea00000","0x009560a3de627868f91fa8bfe1c1b7afaf08186b":"0x1c67f5f7baa0b00000","0x00969747f7a5b30645fe00e44901435ace24cc37":"0x5c283d410394100000","0x009a6d7db326679b77c90391a7476d238f3ba33e":"0xada55474b81340000","0x009eef0a0886056e3f69211853b9b7457f3782e4":"0xa2a878069b28e00000","0x009fdbf44e1f4a6362b769c39a475f95a96c2bc7":"0x1e931283ccc8500000","0x00a5797f52c9d58f189f36b1d45d1bf6041f2f6b":"0x127d1b3461acd1a0000","0x00aa5381b2138ebeffc191d5d8c391753b7098d2":"0x35abb09ffedeb68000","0x00aada25ea2286709abb422d41923fd380cd04c7":"0x233df3299f61720000","0x00acbfb2f25a5485c739ef70a44eeeeb7c65a66f":"0x56bc75e2d63100000","0x00acc6f082a442828764d11f58d6894ae408f073":"0xcb49b44ba602d800000","0x00b277b099a8e866ca0ec65bcb87284fd142a582":"0x6acb3df27e1f880000","0x00bdd4013aa31c04616c2bc9785f2788f915679b":"0xb9f65d00f63c0000","0x00c27d63fde24b92ee8a1e7ed5d26d8dc5c83b03":"0x6c6b935b8bbd400000","0x00c40fe2095423509b9fd9b754323158af2310f3":"0x0","0x00d75ed60c774f8b3a5a5173fb1833ad7105a2d9":"0x6cb7e74867d5e60000","0x00d78d89b35f472716eceafebf600527d3a1f969":"0x5e0549c9632e1d80000","0x00dae27b350bae20c5652124af5d8b5cba001ec1":"0x22b1c8c1227a00000","0x00dc01cbf44978a42e8de8e436edf94205cfb6ec":"0x4f0febbcda8cb40000","0x00e681bc2d10db62de85848324492250348e90bf":"0x43c33c1937564800000","0x00f463e137dcf625fbf3bca39eca98d2b968cf7f":"0x14061b9d77a5e980000","0x010007394b8b7565a1658af88ce463499135d6b7":"0x56bc75e2d63100000","0x010df1df4bed23760d2d1c03781586ddf7918e54":"0x340aad21b3b700000","0x010f4a98dfa1d9799bf5c796fb550efbe7ecd877":"0x1b2f292236292c70000","0x01155057002f6b0d18acb9388d3bc8129f8f7a20":"0x48a43c54602f700000","0x01226e0ad8d62277b162621c62c928e96e0b9a8c":"0x6c6b935b8bbd400000","0x0126e12ebc17035f35c0e9d11dd148393c405d7a":"0x6c660645aa47180000","0x012f396a2b5eb83559bac515e5210df2c8c362ba":"0xad78ebc5ac6200000","0x0134ff38155fabae94fd35c4ffe1d79de7ef9c59":"0x35659ef93f0fc40000","0x0136a5af6c3299c6b5f005fdaddb148c070b299b":"0x11aa9ac15f1280000","0x01488ad3da603c4cdd6cb0b7a1e30d2a30c8fc38":"0xad78ebc5ac6200000","0x014974a1f46bf204944a853111e52f1602617def":"0x6c6b935b8bbd400000","0x014b7f67b14f5d983d87014f570c8b993b9872b5":"0xad78ebc5ac6200000","0x0151fa5d17a2dce2d7f1eb39ef7fe2ad213d5d89":"0xd8d726b7177a800000","0x01577afd4e50890247c9b10d44af73229aec884f":"0x24dce54d34a1a00000","0x015f097d9acddcddafaf2a107eb93a40fc94b04c":"0x43c33c1937564800000","0x0169c1c210eae845e56840412e1f65993ea90fb4":"0x6c6b935b8bbd400000","0x016b60bb6d67928c29fd0313c666da8f1698d9c5":"0x6c6b935b8bbd400000","0x016c85e1613b900fa357b8283b120e65aefcdd08":"0x2b5d9784a97cd50000","0x018492488ba1a292342247b31855a55905fef269":"0x796e3ea3f8ab00000","0x018f20a27b27ec441af723fd9099f2cbb79d6263":"0x75792a8abdef7c0000","0x0191eb547e7bf6976b9b1b577546761de65622e2":"0x6c6b4c4da6ddbe0000","0x019d709579ff4bc09fdcdde431dc1447d2c260bc":"0x1158e460913d00000","0x01a25a5f5af0169b30864c3be4d7563ccd44f09e":"0x4d853c8f8908980000","0x01a7d9fa7d0eb1185c67e54da83c2e75db69e39f":"0x19d4addd0d8bc960000","0x01a818135a414210c37c62b625aca1a54611ac36":"0xe18398e7601900000","0x01b1cae91a3b9559afb33cdc6d689442fdbfe037":"0xad78ebc5ac6200000","0x01b5b5bc5a117fa08b34ed1db9440608597ac548":"0xad78ebc5ac6200000","0x01bbc14f67af0639aab1441e6a08d4ce7162090f":"0x46fcf68ff8be060000","0x01d03815c61f416b71a2610a2daba59ff6a6de5b":"0x205dfe50b81c82e0000","0x01d599ee0d5f8c38ab2d392e2c65b74c3ce31820":"0x1ba5abf9e779380000","0x01e40521122530d9ac91113c06a0190b6d63850b":"0x487a9a304539440000","0x01e6415d587b065490f1ed7f21d6e0f386ee6747":"0x6c6b935b8bbd400000","0x01e864d354741b423e6f42851724468c74f5aa9c":"0x43c33c1937564800000","0x01ed5fba8d2eab673aec042d30e4e8a611d8c55a":"0x6c6b935b8bbd400000","0x01fb8ec12425a04f813e46c54c05748ca6b29aa9":"0xe15730385467c0000","0x01ff1eb1dead50a7f2f9638fdee6eccf3a7b2ac8":"0x2086ac351052600000","0x020362c3ade878ca90d6b2d889a4cc5510eed5f3":"0x3888e8b311adb38000","0x0203ae01d4c41cae1865e04b1f5b53cdfaecae31":"0x3689cdceb28cd70000","0x02089361a3fe7451fb1f87f01a2d866653dc0b07":"0x22ac74832b5040000","0x021f69043de88c4917ca10f1842897eec0589c7c":"0x6b44cfb81487f40000","0x02290fb5f9a517f82845acdeca0fc846039be233":"0x6c6b935b8bbd400000","0x0239b4f21f8e05cd01512b2be7a0e18a6d974607":"0x3635c9adc5dea00000","0x02477212ffdd75e5155651b76506b1646671a1eb":"0x5f68e8131ecf800000","0x024a098ae702bef5406c9c22b78bd4eb2cc7a293":"0xd8d726b7177a800000","0x024bdd2c7bfd500ee7404f7fb3e9fb31dd20fbd1":"0x9c2007651b2500000","0x025367960304beee34591118e9ac2d1358d8021a":"0x6c6b935b8bbd400000","0x0256149f5b5063bea14e15661ffb58f9b459a957":"0x2629f66e0c53000000","0x02603d7a3bb297c67c877e5d34fbd5b913d4c63a":"0x1158e460913d00000","0x0261ad3a172abf1315f0ffec3270986a8409cb25":"0xb08213bcf8ffe0000","0x026432af37dc5113f1f46d480a4de0b28052237e":"0x1349b786e40bfc0000","0x0266ab1c6b0216230b9395443d5fa75e684568c6":"0x3635c9adc5dea00000","0x02751dc68cb5bd737027abf7ddb77390cd77c16b":"0x1158e460913d00000","0x02778e390fa17510a3428af2870c4273547d386c":"0x36c3c66170c0d720000","0x02ade5db22f8b758ee1443626c64ec2f32aa0a15":"0x43c33c1937564800000","0x02af2459a93d0b3f4d062636236cd4b29e3bcecf":"0x678a932062e4180000","0x02b1af72339b2a2256389fd64607de24f0de600a":"0x6c6b935b8bbd400000","0x02b643d6fabd437a851accbe79abb7fde126dccf":"0x18650127cc3dc800000","0x02b6d65cb00b7b36e1fb5ed3632c4cb20a894130":"0x43c33c1937564800000","0x02b7b1d6b34ce053a40eb65cd4a4f7dddd0e9f30":"0x252248deb6e6940000","0x02c9f7940a7b8b7a410bf83dc9c22333d4275dd3":"0x10f0cf064dd59200000","0x02d4a30968a39e2b3498c3a6a4ed45c1c6646822":"0x6c6b935b8bbd400000","0x02dfcb17a1b87441036374b762a5d3418b1cb4d4":"0x48b02ba9d1ba460000","0x02e4cb22be46258a40e16d4338d802fffd00c151":"0x149696eaceba810000","0x02e816afc1b5c0f39852131959d946eb3b07b5ad":"0x3635c9adc5dea00000","0x02f7f67209b16a17550c694c72583819c80b54ad":"0x5559306a78a700000","0x030973807b2f426914ad00181270acd27b8ff61f":"0x121ea68c114e5100000","0x03097923ba155e16d82f3ad3f6b815540884b92c":"0x62a992e53a0af00000","0x030fb3401f72bd3418b7d1da75bf8c519dd707dc":"0xa2a15d09519be00000","0x031e25db516b0f099faebfd94f890cf96660836b":"0x6c6b935b8bbd400000","0x0328510c09dbcd85194a98d67c33ac49f2f94d60":"0x2544faa778090e00000","0x0329188f080657ab3a2afa522467178279832085":"0xbbf510ddfcb260000","0x03317826d1f70aa4bddfa09be0c4105552d2358b":"0x21a754a6dc5280000","0x03337012ae1d7ff3ee7f697c403e7780188bf0ef":"0xad78ebc5ac6200000","0x03377c0e556b640103289a6189e1aeae63493467":"0x43c33c1937564800000","0x0349634dc2a9e80c3f7721ee2b5046aeaaedfbb5":"0xd8d726b7177a800000","0x0355bcacbd21441e95adeedc30c17218c8a408ce":"0x15af1d78b58c400000","0x036eeff5ba90a6879a14dff4c5043b18ca0460c9":"0x56bc75e2d63100000","0x03714b41d2a6f751008ef8dd4d2b29aecab8f36e":"0x14542ba12a337c00000","0x0372e852582e0934344a0fed2178304df25d4628":"0x43c33c1937564800000","0x0372ee5508bf8163ed284e5eef94ce4d7367e522":"0x56bc75e2d63100000","0x037dd056e7fdbd641db5b6bea2a8780a83fae180":"0x796e3ea3f8ab00000","0x038323b184cff7a82ae2e1bda7793fe4319ca0bf":"0x43c33c1937564800000","0x038779ca2dbe663e63db3fe75683ea0ec62e2383":"0x5a87e7d7f5f6580000","0x038e45eadd3d88b87fe4dab066680522f0dfc8f9":"0x21e19e0c9bab2400000","0x0392549a727f81655429cb928b529f25df4d1385":"0x16c43a0eea0740000","0x0394b90fadb8604f86f43fc1e35d3124b32a5989":"0x296aa140278e700000","0x039e7a4ebc284e2ccd42b1bdd60bd6511c0f7706":"0xf015f25736420000","0x039ef1ce52fe7963f166d5a275c4b1069fe3a832":"0x15af39e4aab2740000","0x03a26cfc4c18316f70d59e9e1a79ee3e8b962f4c":"0x6c6b935b8bbd400000","0x03aa622881236dd0f4940c24c324ff8b7b7e2186":"0xad78ebc5ac62000000","0x03af7ad9d5223cf7c8c13f20df67ebe5ffc5bb41":"0xad78ebc5ac6200000","0x03b0f17cd4469ddccfb7da697e82a91a5f9e7774":"0x1158e460913d00000","0x03b41b51f41df20dd279bae18c12775f77ad771c":"0x3635c9adc5dea00000","0x03be5b4629aefbbcab9de26d39576cb7f691d764":"0xadf30ba70c8970000","0x03c647a9f929b0781fe9ae01caa3e183e876777e":"0x182ab7c20ce5240000","0x03c91d92943603e752203e05340e566013b90045":"0x2b7cc2e9c3225c0000","0x03cb4c4f4516c4ff79a1b6244fbf572e1c7fea79":"0x9489237adb9a500000","0x03cb98d7acd817de9d886d22fab3f1b57d92a608":"0x56bc75e2d631000000","0x03cc9d2d21f86b84ac8ceaf971dba78a90e62570":"0x57473d05dabae80000","0x03d1724fd00e54aabcd2de2a91e8462b1049dd3a":"0x8f1d5c1cae37400000","0x03dedfcd0b3c2e17c705da248790ef98a6bd5751":"0x487a9a304539440000","0x03e8b084537557e709eae2e1e1a5a6bce1ef8314":"0x1158e460913d00000","0x03ea6d26d080e57aee3926b18e8ed73a4e5b2826":"0xad78ebc5ac6200000","0x03eb3cb860f6028da554d344a2bb5a500ae8b86f":"0x6c6b935b8bbd400000","0x03ebc63fda6660a465045e235fbe6e5cf195735f":"0x7b06ce87fdd680000","0x03ef6ad20ff7bd4f002bac58d47544cf879ae728":"0x175c758d0b96e5c0000","0x03f7b92008813ae0a676eb212814afab35221069":"0x6c6b935b8bbd400000","0x041170f581de80e58b2a045c8f7c1493b001b7cb":"0x303c74a1a336940000","0x0413d0cf78c001898a378b918cd6e498ea773c4d":"0xf2dc7d47f15600000","0x04241b41ecbd0bfdf1295e9d4fa59ea09e6c6186":"0x655f769450bc780000","0x043707071e2ae21eed977891dc79cd5d8ee1c2da":"0x6c6b935b8bbd400000","0x044e853144e3364495e7a69fa1d46abea3ac0964":"0x2ab2254b1dc9a8000","0x0455dcec8a7fc4461bfd7f37456fce3f4c3caac7":"0x15af1d78b58c400000","0x045ed7f6d9ee9f252e073268db022c6326adfc5b":"0x56bc75e2d63100000","0x046377f864b0143f282174a892a73d3ec8ec6132":"0xa5aa85009e39c0000","0x0469e8c440450b0e512626fe817e6754a8152830":"0x6c6b935b8bbd400000","0x046d274b1af615fb505a764ad8dda770b1db2f3d":"0x6c6b935b8bbd400000","0x047d5a26d7ad8f8e70600f70a398ddaa1c2db26f":"0x14542ba12a337c00000","0x047e87c8f7d1fce3b01353a85862a948ac049f3e":"0x50c5e761a444080000","0x047f9bf1529daf87d407175e6f171b5e59e9ff3e":"0x233c8fe42703e80000","0x04852732b4c652f6c2e58eb36587e60a62da14db":"0x43c33c1937564800000","0x048a8970ea4145c64d5517b8de5b46d0595aad06":"0x43c33c1937564800000","0x049c5d4bc6f25d4e456c697b52a07811ccd19fb1":"0x104400a2470e680000","0x04a1cada1cc751082ff8da928e3cfa000820a9e9":"0x22b1c8c1227a00000","0x04a80afad53ef1f84165cfd852b0fdf1b1c24ba8":"0x324e964b3eca80000","0x04aafc8ae5ce6f4903c89d7fac9cb19512224777":"0x1b1ae4d6e2ef500000","0x04ba4bb87140022c214a6fac42db5a16dd954045":"0x3635c9adc5dea00000","0x04ba8a3f03f08b895095994dda619edaacee3e7a":"0x6c6b935b8bbd400000","0x04c2c64bb54c3eccd05585e10ec6f99a0cdb01a3":"0x56bc75e2d63100000","0x04ce45f600db18a9d0851b29d9393ebdaafe3dc5":"0x1158e460913d00000","0x04d6b8d4da867407bb997749debbcdc0b358538a":"0x3635c9adc5dea00000","0x04d73896cf6593a691972a13a6e4871ff2c42b13":"0x6c6b935b8bbd400000","0x04d82af9e01a936d97f8f85940b970f9d4db9936":"0xad78ebc5ac6200000","0x04e5f5bc7c923fd1e31735e72ef968fd67110c6e":"0x57551dbc8e624c0000","0x04eca501630abce35218b174956b891ba25efb23":"0x36369ed7747d260000","0x0505a08e22a109015a22f685305354662a5531d5":"0x8cf23f909c0fa00000","0x0514954c3c2fb657f9a06f510ea22748f027cdd3":"0x15af1d78b58c400000","0x051633080d07a557adde319261b074997f14692d":"0x13a6b2b564871a00000","0x0517448dada761cc5ba4033ee881c83037036400":"0x6c4fd1ee246e780000","0x051d424276b21239665186133d653bb8b1862f89":"0x3635c9adc5dea00000","0x0521bc3a9f8711fecb10f50797d71083e341eb9d":"0x1158e460913d00000","0x05236d4c90d065f9e3938358aaffd777b86aec49":"0x1b1ae4d6e2ef500000","0x052a58e035f1fe9cdd169bcf20970345d12b9c51":"0x50c5e761a444080000","0x052eab1f61b6d45517283f41d1441824878749d0":"0xd8d726b7177a800000","0x05336e9a722728d963e7a1cf2759fd0274530fca":"0x31a2443f888a798000","0x053471cd9a41925b3904a5a8ffca3659e034be23":"0xad201a6794ff80000","0x05361d8eb6941d4e90fb7e1418a95a32d5257732":"0x1158e460913d00000","0x05423a54c8d0f9707e704173d923b946edc8e700":"0x6ea03c2bf8ba58000","0x05440c5b073b529b4829209dff88090e07c4f6f5":"0x45d29737e22f200000","0x055ab658c6f0ed4f875ed6742e4bc7292d1abbf0":"0x486cb9799191e0000","0x055bd02caf19d6202bbcdc836d187bd1c01cf261":"0x56bc75e2d63100000","0x055eac4f1ad3f58f0bd024d68ea60dbe01c6afb3":"0x56bc75e2d63100000","0x05665155cc49cbf6aabdd5ae92cbfaad82b8c0c1":"0x15af1d78b58c400000","0x056686078fb6bcf9ba0a8a8dc63a906f5feac0ea":"0x1b181e4bf2343c0000","0x05696b73916bd3033e05521e3211dfec026e98e4":"0x6c6b935b8bbd400000","0x056b1546894f9a85e203fb336db569b16c25e04f":"0x92edb09ff08d88000","0x057949e1ca0570469e4ce3c690ae613a6b01c559":"0xad78ebc5ac6200000","0x057dd29f2d19aa3da42327ea50bce86ff5c911d9":"0xd8d726b7177a800000","0x057f7f81cd7a406fc45994408b5049912c566463":"0x5c283d410394100000","0x05915d4e225a668162aee7d6c25fcfc6ed18db03":"0x398c37279259e0000","0x0596a27dc3ee115fce2f94b481bc207a9e261525":"0x3635c9adc5dea00000","0x05a830724302bc0f6ebdaa1ebeeeb46e6ce00b39":"0x556f64c1fe7fa0000","0x05ae7fd4bbcc80ca11a90a1ec7a301f7cccc83db":"0x3154c9729d05780000","0x05bb64a916be66f460f5e3b64332110d209e19ae":"0xe3aeb5737240a00000","0x05bf4fcfe772e45b826443852e6c351350ce72a2":"0x1b1ae4d6e2ef5000000","0x05c64004a9a826e94e5e4ee267fa2a7632dd4e6f":"0x36dc42ebff90b7f8000","0x05c736d365aa37b5c0be9c12c8ad5cd903c32cf9":"0x1455e7b800a86880000","0x05cb6c3b0072d3116761b532b218443b53e8f6c5":"0x1e02c3d7fca9b6280000","0x05d0f4d728ebe82e84bf597515ad41b60bf28b39":"0xe3aeb5737240a00000","0x05d68dad61d3bbdfb3f779265c49474aff3fcd30":"0x222c55dc1519d8000","0x05e671de55afec964b074de574d5158d5d21b0a3":"0xd5967be4fc3f100000","0x05e97b09492cd68f63b12b892ed1d11d152c0eca":"0x3708baed3d68900000","0x05f3631f5664bdad5d0132c8388d36d7d8920918":"0x1158e460913d00000","0x0609d83a6ce1ffc9b690f3e9a81e983e8bdc4d9d":"0xed2b525841adfc00000","0x061ea4877cd08944eb64c2966e9db8dedcfec06b":"0x3635c9adc5dea00000","0x0625d06056968b002206ff91980140242bfaa499":"0x3635c9adc5dea00000","0x0628bfbe5535782fb588406bc96660a49b011af5":"0x52663ccab1e1c00000","0x0631d18bbbbd30d9e1732bf36edae2ce8901ab80":"0xa3f98855ec39900000","0x0631dc40d74e5095e3729eddf49544ecd4396f67":"0x8ac7230489e800000","0x063759dd1c4e362eb19398951ff9f8fad1d31068":"0x21e19e0c9bab2400000","0x065ff575fd9c16d3cb6fd68ffc8f483fc32ec835":"0xad78ebc5ac6200000","0x06618e9d5762df62028601a81d4487d6a0ecb80e":"0x487a9a304539440000","0x066647cfc85d23d37605573d208ca154b244d76c":"0x21e19e0c9bab2400000","0x0678654ac6761db904a2f7e8595ec1eaac734308":"0x2f98b29c2818f80000","0x06860a93525955ff624940fadcffb8e149fd599c":"0x6c68ccd09b022c0000","0x068ce8bd6e902a45cb83b51541b40f39c4469712":"0x11c0f9bad4a46e00000","0x068e29b3f191c812a6393918f71ab933ae6847f2":"0x6c6acc67d7b1d40000","0x068e655766b944fb263619658740b850c94afa31":"0x1e87f85809dc00000","0x06964e2d17e9189f88a8203936b40ac96e533c06":"0xfc936392801c0000","0x06994cd83aa2640a97b2600b41339d1e0d3ede6c":"0xd8d726b7177a80000","0x069ed0ab7aa77de571f16106051d92afe195f2d0":"0xad78ebc5ac6200000","0x06ac26ad92cb859bd5905ddce4266aa0ec50a9c5":"0x2a034919dfbfbc0000","0x06b0c1e37f5a5ec4bbf50840548f9d3ac0288897":"0xd8d882e1928e7d0000","0x06b0ff834073cce1cbc9ea557ea87b605963e8b4":"0x1043561a8829300000","0x06b106649aa8c421ddcd1b8c32cd0418cf30da1f":"0x878678326eac9000000","0x06b5ede6fdf1d6e9a34721379aeaa17c713dd82a":"0x6c6b935b8bbd400000","0x06cbfa08cdd4fba737bac407be8224f4eef35828":"0x202be5e8382e8b8000","0x06d6cb308481c336a6e1a225a912f6e6355940a1":"0x5f68e8131ecf800000","0x06dc7f18cee7edab5b795337b1df6a9e8bd8ae59":"0x15af1d78b58c400000","0x06f68de3d739db41121eacf779aada3de8762107":"0x18493fba64ef00000","0x06f7dc8d1b9462cef6feb13368a7e3974b097f9f":"0x6c6b935b8bbd400000","0x0701f9f147ec486856f5e1b71de9f117e99e2105":"0x965da717fd5b80000","0x070d5d364cb7bbf822fc2ca91a35bdd441b215d5":"0x6c6b935b8bbd400000","0x071dd90d14d41f4ff7c413c24238d3359cd61a07":"0x7b53f79e888dac00000","0x0726c42e00f45404836eb1e280d073e7059687f5":"0x58003e3fb947a38000","0x0727be0a2a00212048b5520fbefb953ebc9d54a0":"0x21e19e0c9bab2400000","0x0729a8a4a5ba23f579d0025b1ad0f8a0d35cdfd2":"0x20dd68aaf3289100000","0x0729b4b47c09eb16158464c8aa7fd9690b438839":"0x6c68ccd09b022c0000","0x0734a0a81c9562f4d9e9e10a8503da15db46d76e":"0xfc936392801c0000","0x073c67e09b5c713c5221c8a0c7f3f74466c347b0":"0x41bad155e6512200000","0x073f1ed1c9c3e9c52a9b0249a5c1caa0571fdf05":"0x3d0ff0b013b800000","0x0748713145ef83c3f0ef4d31d823786f7e9cc689":"0xf3f20b8dfa69d00000","0x075d15e2d33d8b4fa7dba8b9e607f04a261e340b":"0x678a932062e4180000","0x076561a856455d7ef86e63f87c73dbb628a55f45":"0x30ca024f987b900000","0x076ee99d3548623a03b5f99859d2d785a1778d48":"0xad78ebc5ac6200000","0x0770b43dbae4b1f35a927b4fa8124d3866caf97b":"0x37193ea7ef5b470000","0x0770c61be78772230cb5a3bb2429a72614a0b336":"0x16ee0a299b713418000","0x07723e3c30e8b731ee456a291ee0e798b0204a77":"0x6c6b935b8bbd400000","0x0773eeacc050f74720b4a1bd57895b1cceeb495d":"0x21e19e0c9bab2400000","0x07800d2f8068e448c79a4f69b1f15ef682aae5f6":"0x41bad155e6512200000","0x07a8dadec142571a7d53a4297051786d072cba55":"0x13b6da1139bda8000","0x07af938c1237a27c9030094dcf240750246e3d2c":"0x1b1ae4d6e2ef500000","0x07b1a306cb4312df66482c2cae72d1e061400fcd":"0x43c33c1937564800000","0x07b7a57033f8f11330e4665e185d234e83ec140b":"0xea7ee92a0c9a0b8000","0x07bc2cc8eedc01970700efc9c4fb36735e98cd71":"0xd8d726b7177a800000","0x07d41217badca5e0e60327d845a3464f0f27f84a":"0xd8d726b7177a800000","0x07d4334ec385e8aa54eedaeadb30022f0cdfa4ab":"0x8e91d520f2eb790000","0x07dae622630d1136381933d2ad6b22b839d82102":"0xad78ebc5ac6200000","0x07dc2bf83bc6af19a842ffea661af5b41b67fda1":"0x5150ae84a8cdf00000","0x07dc8c8b927adbedfa8f5d639b4352351f2f36d2":"0x110aed3b5530db0000","0x07ddd0422c86ef65bf0c7fc3452862b1228b08b8":"0x6ff5d2aa8f9fcf0000","0x07e1162ceae3cf21a3f62d105990302e307f4e3b":"0x52f103edb66ba80000","0x07e2b4cdeed9d087b12e556d9e770c13c099615f":"0x243d4d18229ca20000","0x07feef54c136850829badc4b49c3f2a73c89fb9e":"0x6685ac1bfe32c0000","0x080546508a3d2682c8b9884f13637b8847b44db3":"0x6c6b935b8bbd400000","0x08090876baadfee65c3d363ba55312748cfa873d":"0x5c2a99371cffe10000","0x08166f02313feae18bb044e7877c808b55b5bf58":"0x6acb3df27e1f880000","0x0829d0f7bb7c446cfbb0deadb2394d9db7249a87":"0x22ca3587cf4eb0000","0x08306de51981e7aca1856859b7c778696a6b69f9":"0xad78ebc5ac62000000","0x0837539b5f6a522a482cdcd3a9bb7043af39bdd2":"0x14542ba12a337c00000","0x0838a7768d9c2aca8ba279adfee4b1f491e326f1":"0xad78ebc5ac6200000","0x08411652c871713609af0062a8a1281bf1bbcfd9":"0x4be4e7267b6ae00000","0x084d103254759b343cb2b9c2d8ff9e1ac5f14596":"0x19bff2ff57968c00000","0x08504f05643fab5919f5eea55925d7a3ed7d807a":"0x1158e460913d00000","0x085b4ab75d8362d914435cedee1daa2b1ee1a23b":"0xd255d112e103a00000","0x085ba65febe23eefc2c802666ab1262382cfc494":"0x15af1d78b58c400000","0x087498c0464668f31150f4d3c4bcdda5221ba102":"0x1158e460913d00000","0x0877eeaeab78d5c00e83c32b2d98fa79ad51482f":"0x17d22d71da62260000","0x08936a37df85b3a158cafd9de021f58137681347":"0xfc936392801c0000","0x08a9a44e1f41de3dbba7a363a3ab412c124cd15e":"0xad78ebc5ac6200000","0x08b7bdcf944d5570838be70460243a8694485858":"0x6c6b935b8bbd400000","0x08b84536b74c8c01543da88b84d78bb95747d822":"0xad78ebc5ac6200000","0x08c2f236ac4adcd3fda9fbc6e4532253f9da3bec":"0x1158e460913d00000","0x08c802f87758349fa03e6bc2e2fd0791197eea9a":"0x6c6b935b8bbd400000","0x08c9f1bfb689fdf804d769f82123360215aff93b":"0x6acb3df27e1f880000","0x08cac8952641d8fc526ec1ab4f2df826a5e7710f":"0x1043561a8829300000","0x08ccda50e4b26a0ffc0ef92e9205310706bec2c7":"0x149756c3857c6000000","0x08d0864dc32f9acb36bf4ea447e8dd6726906a15":"0x6c6e59e67c78540000","0x08d4267feb15da9700f7ccc3c84a8918bf17cfde":"0x61093d7c2c6d380000","0x08d4311c9c1bbaf87fabe1a1d01463828d5d98ce":"0x130ee8e7179044400000","0x08d54e83ad486a934cfaeae283a33efd227c0e99":"0x38530583245edc0000","0x08d97eadfcb7b064e1ccd9c8979fbee5e77a9719":"0xe6c5da8d67ac18000","0x08da3a7a0f452161cfbcec311bb68ebfdee17e88":"0x6c6b935b8bbd400000","0x08e38ee0ce48c9ca645c1019f73b5355581c56e6":"0x56bc75e2d631000000","0x08ef3fa4c43ccdc57b22a4b9b2331a82e53818f2":"0xd8d726b7177a800000","0x0909648c18a3ce5bae7a047ec2f868d24cdda81d":"0xcf152640c5c8300000","0x090cd67b60e81d54e7b5f6078f3e021ba65b9a1e":"0x3635c9adc5dea00000","0x090cebef292c3eb081a05fd8aaf7d39bf07b89d4":"0xd8d726b7177a800000","0x090fa9367bda57d0d3253a0a8ff76ce0b8e19a73":"0x3635c9adc5dea00000","0x09146ea3885176f07782e1fe30dce3ce24c49e1f":"0x1158e460913d00000","0x0921605f99164e3bcc28f31caece78973182561d":"0x2b07692a9065a80000","0x09261f9acb451c3788844f0c1451a35bad5098e3":"0x1d5ad27502920600000","0x0927220492194b2eda9fc4bbe38f25d681dfd36c":"0x14542ba12a337c00000","0x092acb624b08c05510189bbbe21e6524d644ccad":"0xfc936392801c0000","0x092e815558402d67f90d6bfe6da0b2fffa91455a":"0x340aad21b3b700000","0x095030e4b82692dcf8b8d0912494b9b378ec9328":"0x48a43c54602f700000","0x095270cc42141dd998ad2862dbd1fe9b44e7e650":"0x410d586a20a4c00000","0x095457f8ef8e2bdc362196b9a9125da09c67e3ab":"0xad78ebc5ac6200000","0x0954a8cb5d321fc3351a7523a617d0f58da676a7":"0x87d9bc7aa498e80000","0x095b0ea2b218d82e0aea7c2889238a39c9bf9077":"0x43c33c1937564800000","0x095b949de3333a377d5019d893754a5e4656ff97":"0x126e72a69a50d00000","0x095e0174829f34c3781be1a5e38d1541ea439b7f":"0x14542ba12a337c00000","0x095f5a51d06f6340d80b6d29ea2e88118ad730fe":"0x6c6e59e67c78540000","0x0968ee5a378f8cadb3bafdbed1d19aaacf936711":"0x3635c9adc5dea00000","0x0977bfba038a44fb49b03970d8d8cf2cb61f8b25":"0x16c4abbebea0100000","0x097da12cfc1f7c1a2464def08c29bed5e2f851e9":"0x1158e460913d00000","0x097ecda22567c2d91cb03f8c5215c22e9dcda949":"0x11651ac3e7a758000","0x0989c200440b878991b69d6095dfe69e33a22e70":"0x678a932062e4180000","0x0990e81cd785599ea236bd1966cf526302c35b9c":"0x3635c9adc5dea00000","0x0998d8273115b56af43c505e087aff0676ed3659":"0xd8d6eddf2d2e180000","0x09a025316f967fa8b9a1d60700063f5a68001caa":"0x21221a99b93ec0000","0x09a928d528ec1b3e25ffc83e218c1e0afe8928c7":"0xfc936392801c0000","0x09ae49e37f121df5dc158cfde806f173a06b0c7f":"0xd8309e26aba1d00000","0x09afa73bc047ef46b977fd9763f87286a6be68c6":"0x1b2fb5e8f06a660000","0x09b4668696f86a080f8bebb91db8e6f87015915a":"0x238ff7b34f60010000","0x09b59b8698a7fbd3d2f8c73a008988de3e406b2b":"0x878678326eac9000000","0x09b7a988d13ff89186736f03fdf46175b53d16e0":"0x14542ba12a337c00000","0x09c177f1ae442411ddacf187d46db956148360e7":"0x1e52e336cde22180000","0x09c88f917e4d6ad473fa12e98ea3c4472a5ed6da":"0x21e19e0c9bab2400000","0x09d0b8cd077c69d9f32d9cca43b3c208a21ed48b":"0x821d221b5291f8000","0x09d6cefd75b0c4b3f8f1d687a522c96123f1f539":"0x14542ba12a337c00000","0x09e437d448861228a232b62ee8d37965a904ed9c":"0x498cf401df8842e8000","0x09ee12b1b42b05af9cf207d5fcac255b2ec411f2":"0x331cddd47e0fe8000","0x09f3f601f605441140586ce0656fa24aa5b1d9ae":"0x5373776fe8c4540000","0x09f9575be57d004793c7a4eb84b71587f97cbb6a":"0xad78ebc5ac6200000","0x0a0650861f785ed8e4bf1005c450bbd06eb48fb6":"0xa6413b79144e7e0000","0x0a06fad7dcd7a492cbc053eeabde6934b39d8637":"0x1158e460913d00000","0x0a077db13ffeb09484c217709d5886b8bf9c5a8b":"0xd8d726b7177a800000","0x0a0ecda6636f7716ef1973614687fd89a820a706":"0x155bd9307f9fe80000","0x0a29a8a4d5fd950075ffb34d77afeb2d823bd689":"0xad78ebc5ac6200000","0x0a2ade95b2e8c66d8ae6f0ba64ca57d783be6d44":"0xd8d726b7177a800000","0x0a2b4fc5d81ace67dc4bba03f7b455413d46fe3d":"0xaadec983fcff40000","0x0a2dcb7a671701dbb8f495728088265873356c8e":"0x83f16ce08a06c0000","0x0a3de155d5ecd8e81c1ff9bbf0378301f8d4c623":"0xd8d726b7177a800000","0x0a47ad9059a249fc936b2662353da6905f75c2b9":"0x6c6b935b8bbd400000","0x0a48296f7631708c95d2b74975bc4ab88ac1392a":"0x10f0cf064dd59200000","0x0a4a011995c681bc999fdd79754e9a324ae3b379":"0x8c19ab06eb89af60000","0x0a58fddd71898de773a74fdae45e7bd84ef43646":"0x1158e460913d00000","0x0a5b79d8f23b6483dbe2bdaa62b1064cc76366ae":"0x6ac882100952c78000","0x0a652e2a8b77bd97a790d0e91361c98890dbb04e":"0x3635c9adc5dea00000","0x0a6ebe723b6ed1f9a86a69ddda68dc47465c2b1b":"0x403d2db599d5e40000","0x0a77e7f72b437b574f00128b21f2ac265133528c":"0x6c6b935b8bbd400000","0x0a917f3b5cb0b883047fd9b6593dbcd557f453b9":"0x3635c9adc5dea00000","0x0a931b449ea8f12cdbd5e2c8cc76bad2c27c0639":"0x13f9e8c79fe058000","0x0a9804137803ba6868d93a55f9985fcd540451e4":"0xb98bc829a6f90000","0x0a9ab2638b1cfd654d25dab018a0aebddf85fd55":"0x12e8cb5fe4c4a8000","0x0ab366e6e7d5abbce6b44a438d69a1cabb90d133":"0x1158e460913d000000","0x0ab4281ebb318590abb89a81df07fa3af904258a":"0x1b1ae4d6e2ef500000","0x0ab59d390702c9c059db148eb4f3fcfa7d04c7e7":"0xfc936392801c0000","0x0abfb39b11486d79572866195ba26c630b6784db":"0x19ba8737f96928f00000","0x0aca9a5626913b08cfc9a66d40508dce52b60f87":"0x678a932062e4180000","0x0ad3e44d3c001fa290b393617030544108ac6eb9":"0x6abda0bc30b2df8000","0x0aec2e426ed6cc0cf3c249c1897eac47a7faa9bd":"0xad78ebc5ac6200000","0x0af65f14784e55a6f95667fd73252a1c94072d2a":"0xa763b8e02d44f8000","0x0af6c8d539c96d50259e1ba6719e9c8060f388c2":"0x3635c9adc5dea00000","0x0b06390f2437b20ec4a3d3431b3279c6583e5ed7":"0xa844a7424d9c80000","0x0b0b3862112aeec3a03492b1b05f440eca54256e":"0xd8d726b7177a800000","0x0b0e055b28cbd03dc5ff44aa64f3dce04f5e63fb":"0x6c6b935b8bbd400000","0x0b119df99c6b8de58a1e2c3f297a6744bf552277":"0x6c6b935b8bbd400000","0x0b14891999a65c9ef73308efe3100ca1b20e8192":"0x2b5e3af16b18800000","0x0b2113504534642a1daf102eee10b9ebde76e261":"0x942cdd7c95f2bd8000","0x0b288a5a8b75f3dc4191eb0457e1c83dbd204d25":"0x10714e77bb43ab40000","0x0b369e002e1b4c7913fcf00f2d5e19c58165478f":"0x37f6516288c340000","0x0b43bd2391025581d8956ce42a072579cbbfcb14":"0x104e70464b1580000","0x0b507cf553568daaf65504ae4eaa17a8ea3cdbf5":"0x6c6b935b8bbd400000","0x0b5d66b13c87b392e94d91d5f76c0d450a552843":"0x6c6b935b8bbd400000","0x0b5e2011ebc25a007f21362960498afb8af280fb":"0x6c6b935b8bbd400000","0x0b649da3b96a102cdc6db652a0c07d65b1e443e6":"0x6c6b935b8bbd400000","0x0b6920a64b363b8d5d90802494cf564b547c430d":"0x410d586a20a4c00000","0x0b701101a4109f9cb360dc57b77442673d5e5983":"0x6c6b935b8bbd400000","0x0b71f554122469ef978e2f1fefd7cbb410982772":"0xd255d112e103a00000","0x0b7bb342f01bc9888e6a9af4a887cbf4c2dd2caf":"0x3635c9adc5dea000000","0x0b7d339371e5be6727e6e331b5821fa24bdb9d5a":"0x2e7f81868262010000","0x0b7fc9ddf70576f6330669eaaa71b6a831e99528":"0x796e3ea3f8ab00000","0x0b80fc70282cbdd5fde35bf78984db3bdb120188":"0x3638021cecdab00000","0x0b924df007e9c0878417cfe63b976ea1a382a897":"0x22b1c8c1227a00000","0x0b93fca4a4f09cac20db60e065edcccc11e0a5b6":"0xad78ebc5ac6200000","0x0b9df80fbe232009dacf0aa8cac59376e2476203":"0x6c6b935b8bbd400000","0x0ba6e46af25a13f57169255a34a4dac7ce12be04":"0x1b1ae4d6e2ef500000","0x0ba8705bf55cf219c0956b5e3fc01c4474a6cdc1":"0x525e0595d4d6b8000","0x0baf6ecdb91acb3606a8357c0bc4f45cfd2d7e6f":"0x3635c9adc5dea00000","0x0bb05f7224bb5804856556c07eeadbed87ba8f7c":"0x15be6174e1912e0000","0x0bb0c12682a2f15c9b5741b2385cbe41f034068e":"0x5150ae84a8cdf00000","0x0bb25ca7d188e71e4d693d7b170717d6f8f0a70a":"0x124302a82fadd70000","0x0bb2650ea01aca755bc0c017b64b1ab5a66d82e3":"0x487a9a304539440000","0x0bb54c72fd6610bfa4363397e020384b022b0c49":"0x487a9a304539440000","0x0bb7160aba293762f8734f3e0326ffc9a4cac190":"0x3635c9adc5dea00000","0x0bc95cb32dbb574c832fa8174a81356d38bc92ac":"0x6c6b935b8bbd400000","0x0bd67dbde07a856ebd893b5edc4f3a5be4202616":"0x6c6b935b8bbd400000","0x0bdbc54cc8bdbbb402a08911e2232a5460ce866b":"0xa2a15d09519be00000","0x0bdd58b96e7c916dd2fb30356f2aebfaaf1d8630":"0x6c6b935b8bbd400000","0x0be1bcb90343fae5303173f461bd914a4839056c":"0x14542ba12a337c00000","0x0be1fdf626ee6189102d70d13b31012c95cd1cd6":"0x6c6b935b8bbd400000","0x0be2b94ad950a2a62640c35bfccd6c67dae450f6":"0x692ae8897081d00000","0x0be6a09e4307fe48d412b8d1a1a8284dce486261":"0x40fbff85c0138300000","0x0befb54707f61b2c9fb04715ab026e1bb72042bd":"0xd8d726b7177a800000","0x0bf064428f83626722a7b5b26a9ab20421a7723e":"0x73f75d1a085ba0000","0x0bfbb6925dc75e52cf2684224bbe0550fea685d3":"0x6acb3df27e1f880000","0x0c088006c64b30c4ddafbc36cb5f05469eb62834":"0x6c6b935b8bbd400000","0x0c2073ba44d3ddbdb639c04e191039a71716237f":"0x4d853c8f8908980000","0x0c222c7c41c9b048efcce0a232434362e12d673b":"0x21e8359697677380000","0x0c2808b951ed9e872d7b32790fcc5994ae41ffdc":"0x15996e5b3cd6b3c00000","0x0c28847e4f09dfce5f9b25af7c4e530f59c880fe":"0x3635c9adc5dea00000","0x0c2d5c920538e953caaf24f0737f554cc6927742":"0x3635c9adc5dea00000","0x0c30cacc3f72269f8b4f04cf073d2b05a83d9ad1":"0x6c7974123f64a40000","0x0c3239e2e841242db989a61518c22247e8c55208":"0xe4af6471734640000","0x0c480de9f7461002908b49f60fc61e2b62d3140b":"0x21e19e0c9bab2400000","0x0c48ae62d1539788eba013d75ea60b64eeba4e80":"0x77fbdc43e030998000","0x0c5589a7a89b9ad15b02751930415948a875fbef":"0x6d499ec6c63380000","0x0c67033dd8ee7f0c8ae534d42a51f7d9d4f7978f":"0xad78ebc5ac6200000","0x0c6845bf41d5ee273c3ee6b5b0d69f6fd5eabbf7":"0xa2a1b9682e58090000","0x0c7f869f8e90d53fdc03e8b2819b016b9d18eb26":"0x43c33c1937564800000","0x0c8692eeff2a53d6d1688ed56a9ddbbd68dabba1":"0x6c6b935b8bbd400000","0x0c8f66c6017bce5b20347204b602b743bad78d60":"0x6c6b935b8bbd400000","0x0c8fd7775e54a6d9c9a3bf890e761f6577693ff0":"0x215f835bc769da80000","0x0c925ad5eb352c8ef76d0c222d115b0791b962a1":"0xac635d7fa34e300000","0x0c967e3061b87a753e84507eb60986782c8f3013":"0x56bc75e2d63100000","0x0ca12ab0b9666cf0cec6671a15292f2653476ab2":"0x2c7827c42d22d07c0000","0x0ca670eb2c8b96cba379217f5929c2b892f39ef6":"0x6c6b935b8bbd400000","0x0cae108e6db99b9e637876b064c6303eda8a65c8":"0xa2a15d09519be00000","0x0cbd921dbe121563b98a6871fecb14f1cc7e88d7":"0xad78ebc5ac6200000","0x0cbf8770f0d1082e5c20c5aead34e5fca9ae7ae2":"0x3635c9adc5dea00000","0x0cc67f8273e1bae0867fd42e8b8193d72679dbf8":"0x1b1ae4d6e2ef500000","0x0cd6a141918d126b106d9f2ebf69e102de4d3277":"0x1158e460913d00000","0x0cda12bf72d461bbc479eb92e6491d057e6b5ad1":"0x21e19e0c9bab2400000","0x0cdc960b998c141998160dc179b36c15d28470ed":"0x1b1b6bd7af64c70000","0x0cfb172335b16c87d519cd1475530d20577f5e0e":"0x152d02c7e14af6800000","0x0d1f2a57713ebc6e94de29846e8844d376665763":"0x10f0cf064dd59200000","0x0d3265d3e7bdb93d5e8e8b1ca47f210a793ecc8e":"0xad78ebc5ac6200000","0x0d35408f226566116fb8acdaa9e2c9d59b76683f":"0x32f51edbaaa3300000","0x0d551ec1a2133c981d5fc6a8c8173f9e7c4f47af":"0x6c6b935b8bbd400000","0x0d5d98565c647ca5f177a2adb9d3022fac287f21":"0xad78ebc5ac6200000","0x0d658014a199061cf6b39433140303c20ffd4e5a":"0x1bc85dc2a89bb200000","0x0d678706d037187f3e22e6f69b99a592d11ebc59":"0x55a6e79ccd1d300000","0x0d69100c395ce6c5eaadf95d05d872837ededd21":"0x15af1d78b58c400000","0x0d747ee5969bf79d57381d6fe3a2406cd0d8ce27":"0x152d02c7e14af6800000","0x0d8023929d917234ae40512b1aabb5e8a4512771":"0x805e99fdcc5d00000","0x0d8aab8f74ea862cdf766805009d3f3e42d8d00b":"0x13b80b99c5185700000","0x0d8c40a79e18994ff99ec251ee10d088c3912e80":"0x63664fcd2bbc40000","0x0d8ed7d0d15638330ed7e4eaccab8a458d75737e":"0x6c6b935b8bbd400000","0x0d92582fdba05eabc3e51538c56db8813785b328":"0xa5aa85009e39c0000","0x0d9443a79468a5bbf7c13c6e225d1de91aee07df":"0x3cb71f51fc5580000","0x0d9a825ff2bcd397cbad5b711d9dcc95f1cc112d":"0x2b5e3af16b188000000","0x0d9d3f9bc4a4c6efbd59679b69826bc1f63d9916":"0x2086ac351052600000","0x0da532c910e3ac0dfb14db61cd739a93353fd05f":"0x4878be1ffaf95d0000","0x0da7401262384e2e8b4b26dd154799b55145efa0":"0x1043561a8829300000","0x0dae3ee5b915b36487f9161f19846d101433318a":"0x678a932062e4180000","0x0dbd417c372b8b0d01bcd944706bd32e60ae28d1":"0x126e72a69a50d00000","0x0dc100b107011c7fc0a1339612a16ccec3285208":"0x6c6b935b8bbd400000","0x0dcf9d8c9804459f647c14138ed50fad563b4154":"0x960db77681e940000","0x0dcfe837ea1cf28c65fccec3bef1f84e59d150c0":"0xad78ebc5ac6200000","0x0dd4e674bbadb1b0dc824498713dce3b5156da29":"0x93739534d28680000","0x0dfbd4817050d91d9d625c02053cf61a3ee28572":"0x126e72a69a50d00000","0x0e024e7f029c6aaf3a8b910f5e080873b85795aa":"0x3635c9adc5dea00000","0x0e09646c99af438e99fa274cb2f9c856cb65f736":"0x678a932062e4180000","0x0e0c9d005ea016c295cd795cc9213e87febc33eb":"0xabbcd4ef377580000","0x0e0d6633db1e0c7f234a6df163a10e0ab39c200f":"0xad78ebc5ac6200000","0x0e11d77a8977fac30d268445e531149b31541a24":"0x6c6b935b8bbd400000","0x0e123d7da6d1e6fac2dcadd27029240bb39052fe":"0x3635c9adc5dea00000","0x0e1801e70b6262861b1134ccbc391f568afc92f7":"0xd8d726b7177a800000","0x0e2094ac1654a46ba1c4d3a40bb8c17da7f39688":"0x13683f7f3c15d80000","0x0e21af1b8dbf27fcf63f37e047b87a825cbe7c27":"0xa2a15d09519be00000","0x0e2e504a2d1122b5a9feee5cb1451bf4c2ace87b":"0xd5967be4fc3f100000","0x0e2f8e28a681f77c583bd0ecde16634bdd7e00cd":"0x52738f659bca20000","0x0e320219838e859b2f9f18b72e3d4073ca50b37d":"0x6c6b935b8bbd400000","0x0e33fcbbc003510be35785b52a9c5d216bc005f4":"0x65ea3db75546600000","0x0e3696cf1f4217b163d1bc12a5ea730f1c32a14a":"0xd8d726b7177a800000","0x0e390f44053ddfcef0d608b35e4d9c2cbe9871bb":"0x6acb3df27e1f880000","0x0e3a28c1dfafb0505bdce19fe025f506a6d01ceb":"0x6c6b935b8bbd400000","0x0e3dd7d4e429fe3930a6414035f52bdc599d784d":"0x22ca3587cf4eb0000","0x0e4765790352656bc656682c24fc5ef3e76a23c7":"0x286d7fc0cb4f50000","0x0e498800447177b8c8afc3fdfa7f69f4051bb629":"0x7405b69b8de5610000","0x0e6baaa3deb989f289620076668618e9ac332865":"0xad78ebc5ac6200000","0x0e6cd664ad9c1ed64bf98749f40644b626e3792c":"0xcb49b44ba602d800000","0x0e6dfd553b2e873d2aec15bd5fbb3f8472d8d394":"0x28a857425466f800000","0x0e6ec313376271dff55423ab5422cc3a8b06b22b":"0xd8d726b7177a800000","0x0e6ece99111cad1961c748ed3df51edd69d2a3b1":"0x152d02c7e14af6800000","0x0e83b850481ab44d49e0a229a2e464902c69539b":"0x56bc75e2d63100000","0x0e89eddd3fa0d71d8ab0ff8da5580686e3d4f74f":"0x6c6b935b8bbd400000","0x0e9096d343c060db581a120112b278607ec6e52b":"0x1158e460913d00000","0x0e9c511864a177f49be78202773f60489fe04e52":"0x14542ba12a337c00000","0x0ea2a210312b3e867ee0d1cc682ce1d666f18ed5":"0x21e19e0c9bab2400000","0x0eb189ef2c2d5762a963d6b7bdf9698ea8e7b48a":"0x487a9a304539440000","0x0eb5b662a1c718608fd52f0c25f9378830178519":"0x14a37281a612e740000","0x0ec46696ffac1f58005fa8439824f08eed1df89b":"0x21e19e0c9bab2400000","0x0ec50aa823f465b9464b0bc0c4a57724a555f5d6":"0xc83d1426ac7b1f00000","0x0ec5308b31282e218fc9e759d4fec5db3708cec4":"0x3643aa647986040000","0x0eccf617844fd61fba62cb0e445b7ac68bcc1fbe":"0x14fe4fe63565c60000","0x0ed3bb3a4eb554cfca97947d575507cdfd6d21d8":"0x1db3205fcc23d58000","0x0ed76c2c3b5d50ff8fb50b3eeacd681590be1c2d":"0x56bc75e2d63100000","0x0eda80f4ed074aea697aeddf283b63dbca3dc4da":"0x6c6b935b8bbd400000","0x0edd4b580ff10fe06c4a03116239ef96622bae35":"0xaadec983fcff40000","0x0ee391f03c765b11d69026fd1ab35395dc3802a0":"0xad78ebc5ac6200000","0x0ee414940487fd24e390378285c5d7b9334d8b65":"0x914878a8c05ee00000","0x0ef54ac7264d2254abbb5f8b41adde875157db7c":"0x22b1c8c1227a00000","0x0ef85b49d08a75198692914eddb4b22cf5fa4450":"0x6cae30621d47200000","0x0efd1789eb1244a3dede0f5de582d8963cb1f39f":"0x5150ae84a8cdf00000","0x0f042c9c2fb18766f836bb59f735f27dc329fe3c":"0x21e19e0c9bab2400000","0x0f049a8bdfd761de8ec02cee2829c4005b23c06b":"0xda933d8d8c6700000","0x0f05f120c89e9fbc93d4ab0c5e2b4a0df092b424":"0x65a4da25d3016c00000","0x0f127bbf8e311caea2ba502a33feced3f730ba42":"0xa31062beeed700000","0x0f1c249cd962b00fd114a9349f6a6cc778d76c4d":"0x6c6b935b8bbd400000","0x0f206e1a1da7207ea518b112418baa8b06260328":"0x2086ac351052600000","0x0f24105abbdaa03fa6309ef6c188e51f714a6e59":"0xad78ebc5ac6200000","0x0f26480a150961b8e30750713a94ee6f2e47fc00":"0x3635c9adc5dea00000","0x0f2d8daf04b5414a0261f549ff6477b80f2f1d07":"0x2a5a058fc295ed000000","0x0f2fb884c8aaff6f543ac6228bd08e4f60b0a5fd":"0xaa7da485136b840000","0x0f32d9cb4d0fdaa0150656bb608dcc43ed7d9301":"0x28df8bf440db790000","0x0f3665d48e9f1419cd984fc7fa92788710c8f2e4":"0x6c6b935b8bbd400000","0x0f3a1023cac04dbf44f5a5fa6a9cf8508cd4fddf":"0x62a992e53a0af00000","0x0f4073c1b99df60a1549d69789c7318d9403a814":"0x43c33c1937564800000","0x0f46c81db780c1674ac73d314f06539ee56ebc83":"0x215f835bc769da80000","0x0f4f94b9191bb7bb556aaad7c74ddb288417a50b":"0x4be4e7267b6ae00000","0x0f6000de1578619320aba5e392706b131fb1de6f":"0x1b1ab319f5ec750000","0x0f6e840a3f2a24647d8e43e09d45c7c335df4248":"0x878678326eac900000","0x0f7515ff0e808f695e0c20485ff96ed2f7b79310":"0x3638221660a5aa8000","0x0f789e30397c53bf256fc364e6ef39f853504114":"0xc55325ca7415e00000","0x0f7b61c59b016322e8226cafaee9d9e76d50a1b3":"0xd8d726b7177a800000","0x0f7bea4ef3f73ae0233df1e100718cbe29310bb0":"0x6c6b935b8bbd400000","0x0f7bf6373f771a4601762c4dae5fbbf4fedd9cc9":"0x6c6b935b8bbd400000","0x0f832a93df9d7f74cd0fb8546b7198bf5377d925":"0x7c0860e5a80dc0000","0x0f83461ba224bb1e8fdd9dae535172b735acb4e0":"0xad78ebc5ac6200000","0x0f85e42b1df321a4b3e835b50c00b06173968436":"0x35659ef93f0fc40000","0x0f88aac9346cb0e7347fba70905475ba8b3e5ece":"0x21e19e0c9bab2400000","0x0f929cf895db017af79f3ead2216b1bd69c37dc7":"0x6c6b935b8bbd400000","0x0fa010ce0c731d3b628e36b91f571300e49dbeab":"0x36330322d5238c0000","0x0fa5d8c5b3f294efd495ab69d768f81872508548":"0x6c6b935b8bbd400000","0x0fa6c7b0973d0bae2940540e247d3627e37ca347":"0x3635c9adc5dea00000","0x0fad05507cdc8f24b2be4cb7fa5d927ddb911b88":"0xa2df13f441f0098000","0x0fb5d2c673bfb1ddca141b9894fd6d3f05da6720":"0x56bc75e2d63100000","0x0fc9a0e34145fbfdd2c9d2a499b617d7a02969b9":"0x9c2007651b2500000","0x0fcfc4065008cfd323305f6286b57a4dd7eee23b":"0x43c33c1937564800000","0x0fdd65402395df9bd19fee4507ef5345f745104c":"0x10f0cf064dd59200000","0x0fec4ee0d7ca180290b6bd20f9992342f60ff68d":"0x12207f0edce9718000","0x0fee81ac331efd8f81161c57382bb4507bb9ebec":"0x15af880d8cdb830000","0x0ffea06d7113fb6aec2869f4a9dfb09007facef4":"0xc384681b1e1740000","0x10097198b4e7ee91ff82cc2f3bd95fed73c540c0":"0x6c6b935b8bbd400000","0x100b4d0977fcbad4debd5e64a0497aeae5168fab":"0x110c9073b5245a0000","0x101a0a64f9afcc448a8a130d4dfcbee89537d854":"0x337fe5feaf2d1800000","0x102c477d69aadba9a0b0f62b7459e17fbb1c1561":"0x6c6b935b8bbd400000","0x1031e0ecb54985ae21af1793950dc811888fde7c":"0x1158e460913d00000","0x10346414bec6d3dcc44e50e54d54c2b8c3734e3e":"0xd8d726b7177a800000","0x10389858b800e8c0ec32f51ed61a355946cc409b":"0xad78ebc5ac6200000","0x1059cbc63e36c43e88f30008aca7ce058eeaa096":"0x152d02c7e14af6800000","0x106ed5c719b5261477890425ae7551dc59bd255c":"0x2896a58c95be5880000","0x10711c3dda32317885f0a2fd8ae92e82069b0d0b":"0xd8d726b7177a800000","0x107379d4c467464f235bc18e55938aad3e688ad7":"0x2b5e3af16b1880000","0x1076212d4f758c8ec7121c1c7d74254926459284":"0x7695b59b5c17b4c0000","0x1078d7f61b0e56c74ee6635b2e1819ef1e3d8785":"0x3635c9adc5dea00000","0x107a03cf0842dbdeb0618fb587ca69189ec92ff5":"0x6acb3df27e1f880000","0x1080c1d8358a15bc84dac8253c6883319020df2c":"0x90f534608a72880000","0x108a2b7c336f784779d8b54d02a8d31d9a139c0a":"0x21e19e0c9bab2400000","0x108ba7c2895c50e072dc6f964932d50c282d3034":"0x1b1ae4d6e2ef500000","0x108fe8ee2a13da487b22c6ab6d582ea71064d98c":"0x15ac56edc4d12c0000","0x1091176be19b9964a8f72e0ece6bf8e3cfad6e9c":"0x21f2f6f0fc3c6100000","0x1098c774c20ca1daac5ddb620365316d353f109c":"0x56bc75e2d63100000","0x1098cc20ef84bad5146639c4cd1ca6c3996cb99b":"0xfc936392801c0000","0x10a1c42dc1ba746986b985a522a73c93eae64c63":"0x3635c9adc5dea00000","0x10a93457496f1108cd98e140a1ecdbae5e6de171":"0x15a99062d416180000","0x10b5b34d1248fcf017f8c8ffc408ce899ceef92f":"0xe7eeba3410b740000","0x10cf560964ff83c1c9674c783c0f73fcd89943fc":"0x878678326eac9000000","0x10d32416722ca4e648630548ead91edd79c06aff":"0x56bc75e2d63100000","0x10d945334ecde47beb9ca3816c173dfbbd0b5333":"0x4be4e7267b6ae00000","0x10df681506e34930ac7a5c67a54c3e89ce92b981":"0x74c1fab8adb4540000","0x10e1e3377885c42d7df218522ee7766887c05e6a":"0x1043c43cde1d398000","0x10e390ad2ba33d82b37388d09c4544c6b0225de5":"0xad78ebc5ac6200000","0x10f4bff0caa5027c0a6a2dcfc952824de2940909":"0x6c6b935b8bbd400000","0x11001b89ed873e3aaec1155634b4681643986323":"0x3635c9adc5dea00000","0x110237cf9117e767922fc4a1b78d7964da82df20":"0xd5967be4fc3f100000","0x1111e5dbf45e6f906d62866f1708101788ddd571":"0x467be6533ec2e40000","0x11172b278ddd44eea2fdf4cb1d16962391c453d9":"0xc62f3d9bfd4895f00000","0x112634b4ec30ff786e024159f796a57939ea144e":"0x6c6acc67d7b1d40000","0x11306c7d57588637780fc9fde8e98ecb008f0164":"0x6c6acc67d7b1d40000","0x113612bc3ba0ee4898b49dd20233905f2f458f62":"0x2f6f10780d22cc00000","0x11415fab61e0dfd4b90676141a557a869ba0bde9":"0x6f05b59d3b20000000","0x114cbbbf6fb52ac414be7ec61f7bb71495ce1dfa":"0xa2a15d09519be00000","0x114cfefe50170dd97ae08f0a44544978c599548d":"0x2ec887e7a14a1c0000","0x116108c12084612eeda7a93ddcf8d2602e279e5c":"0x6c6b935b8bbd400000","0x1164caaa8cc5977afe1fad8a7d6028ce2d57299b":"0x15af1d78b58c400000","0x11675a25554607a3b6c92a9ee8f36f75edd3e336":"0x8a9aba557e36c0000","0x116a09df66cb150e97578e297fb06e13040c893c":"0x6c6b935b8bbd400000","0x116fef5e601642c918cb89160fc2293ba71da936":"0x2b7cc2e9c3225c0000","0x1178501ff94add1c5881fe886136f6dfdbe61a94":"0x890b0c2e14fb80000","0x1179c60dbd068b150b074da4be23033b20c68558":"0x24dce54d34a1a00000","0x117d9aa3c4d13bee12c7500f09f5dd1c66c46504":"0xb2ad30490b2780000","0x117db836377fe15455e02c2ebda40b1ceb551b19":"0x14542ba12a337c00000","0x118c18b2dce170e8f445753ba5d7513cb7636d2d":"0x1dd0c885f9a0d800000","0x118fbd753b9792395aef7a4d78d263cdcaabd4f7":"0x36330322d5238c0000","0x11928378d27d55c520ceedf24ceb1e822d890df0":"0x1b1ae4d6e2ef5000000","0x119aa64d5b7d181dae9d3cb449955c89c1f963fa":"0x25f273933db5700000","0x11c0358aa6479de21866fe21071924b65e70f8b9":"0x7b53f79e888dac00000","0x11d2247a221e70c2d66d17ee138d38c55ffb8640":"0x21e19e0c9bab2400000","0x11d7844a471ef89a8d877555583ceebd1439ea26":"0x22369e6ba80c6880000","0x11dd6185d9a8d73ddfdaa71e9b7774431c4dfec2":"0x3635c9adc5dea00000","0x11e7997edd904503d77da6038ab0a4c834bbd563":"0x150894e849b3900000","0x11ec00f849b6319cf51aa8dd8f66b35529c0be77":"0x6c6b935b8bbd400000","0x11efb8a20451161b644a8ccebbc1d343a3bbcb52":"0xad78ebc5ac62000000","0x11fefb5dc1a4598aa712640c517775dfa1d91f8c":"0x21e19e0c9bab2400000","0x120f9de6e0af7ec02a07c609ca8447f157e6344c":"0xe7eeba3410b740000","0x1210f80bdb826c175462ab0716e69e46c24ad076":"0x56bc75e2d63100000","0x12134e7f6b017bf48e855a399ca58e2e892fa5c8":"0x3635c9adc5dea00000","0x12173074980153aeaa4b0dcbc7132eadcec21b64":"0xd02ab486cedc00000","0x121f855b70149ac83473b9706fb44d47828b983b":"0x4be4e7267b6ae00000","0x1227e10a4dbf9caca31b1780239f557615fc35c1":"0xad78ebc5ac6200000","0x122dcfd81addb97d1a0e4925c4b549806e9f3beb":"0x522035cc6e01210000","0x122f56122549d168a5c5e267f52662e5c5cce5c8":"0xa076407d3f7440000","0x12316fc7f178eac22eb2b25aedeadf3d75d00177":"0x43c33be05f6bfb98000","0x123759f333e13e3069e2034b4f05398918119d36":"0x43c33c1937564800000","0x125cc5e4d56b2bcc2ee1c709fb9e68fb177440bd":"0x6c6b935b8bbd400000","0x12632388b2765ee4452b50161d1fffd91ab81f4a":"0x281d901f4fdd100000","0x126897a311a14ad43b78e0920100c4426bfd6bdd":"0x34c726893f2d948000","0x126d91f7ad86debb0557c612ca276eb7f96d00a1":"0x56bc75e2d63100000","0x127d3fc5003bf63c0d83e93957836515fd279045":"0x610c9222e6e750000","0x127db1cadf1b771cbd7475e1b272690f558c8565":"0x2f6f10780d22cc00000","0x1284f0cee9d2ff2989b65574d06ffd9ab0f7b805":"0x15af1d78b58c400000","0x128b908fe743a434203de294c441c7e20a86ea67":"0x26ab14e0c0e13c0000","0x1293c78c7d6a443b9d74b0ba5ee7bb47fd418588":"0x16a6502f15a1e540000","0x1296acded1e063af39fe8ba0b4b63df789f70517":"0x56bf91b1a65eb0000","0x12aa7d86ddfbad301692feac8a08f841cb215c37":"0x76d41c62494840000","0x12afbcba1427a6a39e7ba4849f7ab1c4358ac31b":"0x43c33c1937564800000","0x12b5e28945bb2969f9c64c63cc05b6f1f8d6f4d5":"0x1a29e86913b74050000","0x12cf8b0e465213211a5b53dfb0dd271a282c12c9":"0xd2f13f7789f00000","0x12d20790b7d3dbd88c81a279b812039e8a603bd0":"0x56f985d38644b80000","0x12d60d65b7d9fc48840be5f891c745ce76ee501e":"0x485e5388d0c76840000","0x12d91a92d74fc861a729646db192a125b79f5374":"0xfc936392801c0000","0x12e9a4ad2ad57484dd700565bddb46423bd9bd31":"0x43c30fb0884a96c0000","0x12f32c0a1f2daab676fe69abd9e018352d4ccd45":"0x2b5e3af16b1880000","0x12f460ae646cd2780fd35c50a6af4b9accfa85c6":"0x3635c9adc5dea00000","0x12ffc1128605cb0c13709a7290506f2690977193":"0xb50fcfafebecb00000","0x13032446e7d610aa00ec8c56c9b574d36ca1c016":"0x6c6b935b8bbd400000","0x131c792c197d18bd045d7024937c1f84b60f4438":"0xd8d726b7177a800000","0x131df8d330eb7cc7147d0a55576f05de8d26a8b7":"0xa31062beeed700000","0x131faed12561bb7aee04e5185af802b1c3438d9b":"0xbdf3c4bb0328c0000","0x1321b605026f4ffb296a3e0edcb390c9c85608b7":"0x6c6b935b8bbd400000","0x1321ccf29739b974e5a516f18f3a843671e39642":"0xd8d726b7177a800000","0x1327d759d56e0ab87af37ecf63fe01f310be100a":"0x23bc3cdb68a1800000","0x1329dd19cd4baa9fc64310efeceab22117251f12":"0xad78ebc5ac6200000","0x13371f92a56ea8381e43059a95128bdc4d43c5a6":"0x3635c9adc5dea00000","0x133c490fa5bf7f372888e607d958fab7f955bae1":"0x55a6e79ccd1d300000","0x133e4f15e1e39c53435930aaedf3e0fe56fde843":"0x1158e460913d00000","0x134163be9fbbe1c5696ee255e90b13254395c318":"0xad78ebc5ac6200000","0x135cecd955e5798370769230159303d9b1839f66":"0x10f0cf064dd59200000","0x135d1719bf03e3f866312479fe338118cd387e70":"0x6c6b935b8bbd400000","0x135eb8c0e9e101deedec11f2ecdb66ae1aae8867":"0x43c33c1937564800000","0x1360e87df24c69ee6d51c76e73767ffe19a2131c":"0x4fcc1a89027f00000","0x136c834bf111326d207395295b2e583ea7f33572":"0x56bc75e2d63100000","0x136d4b662bbd1080cfe4445b0fa213864435b7f1":"0xd8d726b7177a800000","0x136f4907cab41e27084b9845069ff2fd0c9ade79":"0xd8d726b7177a800000","0x1374facd7b3f8d68649d60d4550ee69ff0484133":"0xe9ed6e11172da0000","0x137cf341e8516c815814ebcd73e6569af14cf7bc":"0x3635c9adc5dea00000","0x13848b46ea75beb7eaa85f59d866d77fd24cf21a":"0xa968163f0a57b400000","0x139d3531c9922ad56269f6309aa789fb2485f98c":"0xd8d726b7177a800000","0x139e479764b499d666208c4a8a047a97043163dd":"0x2077212aff6df00000","0x13a5eecb38305df94971ef2d9e179ae6cebab337":"0x11e3ab8395c6e80000","0x13acada8980affc7504921be84eb4944c8fbb2bd":"0x56d2aa3a5c09a00000","0x13b9b10715714c09cfd610cf9c9846051cb1d513":"0x6acb3df27e1f880000","0x13ce332dff65a6ab933897588aa23e000980fa82":"0xe020536f028f00000","0x13d67a7e25f2b12cdb85585009f8acc49b967301":"0x6c6acc67d7b1d40000","0x13dee03e3799952d0738843d4be8fc0a803fb20e":"0x6c6b935b8bbd400000","0x13e02fb448d6c84ae17db310ad286d056160da95":"0x6c6b935b8bbd400000","0x13e321728c9c57628058e93fc866a032dd0bda90":"0x26bcca23fe2ea20000","0x13ec812284026e409bc066dfebf9d5a4a2bf801e":"0x57473d05dabae80000","0x140129eaa766b5a29f5b3af2574e4409f8f6d3f1":"0x15af1d78b58c4000000","0x140518a3194bad1350b8949e650565debe6db315":"0x6c6b935b8bbd400000","0x1406854d149e081ac09cb4ca560da463f3123059":"0x487a9a304539440000","0x140ca28ff33b9f66d7f1fc0078f8c1eef69a1bc0":"0x56bc75e2d631000000","0x140fba58dbc04803d84c2130f01978f9e0c73129":"0x15af1d78b58c400000","0x141a5e39ee2f680a600fbf6fa297de90f3225cdd":"0x21e19e0c9bab2400000","0x14254ea126b52d0142da0a7e188ce255d8c47178":"0x2a034919dfbfbc0000","0x142b87c5043ffb5a91df18c2e109ced6fe4a71db":"0xad78ebc5ac6200000","0x143c639752caeecf6a997d39709fc8f19878c7e8":"0x6acb3df27e1f880000","0x143d536b8b1cb84f56a39e0bc81fd5442bcacce1":"0x56bc75e2d63100000","0x143f5f1658d9e578f4f3d95f80c0b1bd3933cbda":"0x50c5e761a444080000","0x14410fb310711be074a80883c635d0ef6afb2539":"0x6c6b935b8bbd400000","0x144b19f1f66cbe318347e48d84b14039466c5909":"0x6c6b935b8bbd400000","0x145250b06e4fa7cb2749422eb817bdda8b54de5f":"0xbdf3c4bb0328c0000","0x145e0600e2a927b2dd8d379356b45a2e7d51d3ae":"0x8a02ab400bb2cb8000","0x145e1de0147911ccd880875fbbea61f6a142d11d":"0xd8d726b7177a800000","0x1463a873555bc0397e575c2471cf77fa9db146e0":"0x21e19e0c9bab2400000","0x1479a9ec7480b74b5db8fc499be352da7f84ee9c":"0x3635c9adc5dea00000","0x147af46ae9ccd18bb35ca01b353b51990e49dce1":"0xd8d726b7177a800000","0x147f4210ab5804940a0b7db8c14c28396b62a6bf":"0x6c6b935b8bbd400000","0x14830704e99aaad5c55e1f502b27b22c12c91933":"0x219c3a7b1966300000","0x149b6dbde632c19f5af47cb493114bebd9b03c1f":"0x28a857425466f800000","0x149ba10f0da2725dc704733e87f5a524ca88515e":"0x1ab2cf7c9f87e200000","0x14a7352066364404db50f0d0d78d754a22198ef4":"0x65ea3db75546600000","0x14ab164b3b524c82d6abfbc0de831126ae8d1375":"0x6c6b935b8bbd400000","0x14b1603ec62b20022033eec4d6d6655ac24a015a":"0x2b5e3af16b1880000","0x14c63ba2dcb1dd4df33ddab11c4f0007fa96a62d":"0x34841b6057afab00000","0x14cdddbc8b09e6675a9e9e05091cb92238c39e1e":"0x11478b7c30abc300000","0x14d00aad39a0a7d19ca05350f7b03727f08dd82e":"0x1b1ae4d6e2ef500000","0x14eec09bf03e352bd6ff1b1e876be664ceffd0cf":"0x116dc3a8994b30000","0x14f221159518783bc4a706676fc4f3c5ee405829":"0xad78ebc5ac6200000","0x14fcd1391e7d732f41766cdacd84fa1deb9ffdd2":"0x6c6b935b8bbd400000","0x150e3dbcbcfc84ccf89b73427763a565c23e60d0":"0x22b1c8c1227a00000","0x1518627b88351fede796d3f3083364fbd4887b0c":"0x3635c9adc5dea000000","0x15224ad1c0face46f9f556e4774a3025ad06bd52":"0xb98bc829a6f90000","0x152f2bd229ddf3cb0fdaf455c183209c0e1e39a2":"0x6c6b935b8bbd400000","0x152f4e860ef3ee806a502777a1b8dbc91a907668":"0x2086ac351052600000","0x153c08aa8b96a611ef63c0253e2a4334829e579d":"0x155bd9307f9fe80000","0x153cf2842cb9de876c276fa64767d1a8ecf573bb":"0x6c6b935b8bbd400000","0x153ef58a1e2e7a3eb6b459a80ab2a547c94182a2":"0x14542ba12a337c000000","0x154459fa2f21318e3434449789d826cdc1570ce5":"0x6c6b935b8bbd400000","0x1547b9bf7ad66274f3413827231ba405ee8c88c1":"0x3a9d5baa4abf1d00000","0x1548b770a5118ede87dba2f690337f616de683ab":"0x1c995685e0bf870000","0x15528350e0d9670a2ea27f7b4a33b9c0f9621d21":"0xd8d8583fa2d52f0000","0x155b3779bb6d56342e2fda817b5b2d81c7f41327":"0x2b8aa3a076c9c0000","0x1565af837ef3b0bd4e2b23568d5023cd34b16498":"0x1551e9724ac4ba0000","0x15669180dee29598869b08a721c7d24c4c0ee63f":"0x3635c9adc5dea00000","0x1572cdfab72a01ce968e78f5b5448da29853fbdd":"0x112626c49060fa60000","0x157559adc55764cc6df79323092534e3d6645a66":"0x14542ba12a337c00000","0x1578bdbc371b4d243845330556fff2d5ef4dff67":"0x56bc75e2d63100000","0x157eb3d3113bd3b597714d3a954edd018982a5cb":"0x6c6b935b8bbd400000","0x1584a2c066b7a455dbd6ae2807a7334e83c35fa5":"0x70c1cc73b00c80000","0x15874686b6733d10d703c9f9bec6c52eb8628d67":"0x6c6b935b8bbd400000","0x158a0d619253bf4432b5cd02c7b862f7c2b75636":"0x75bac7c5b12188000","0x1598127982f2f8ad3b6b8fc3cf27bf617801ba2b":"0x960db77681e940000","0x159adce27aa10b47236429a34a5ac42cad5b6416":"0x6bf90a96edbfa718000","0x15a0aec37ff9ff3d5409f2a4f0c1212aaccb0296":"0x3635c9adc5dea00000","0x15aa530dc36958b4edb38eee6dd9e3c77d4c9145":"0x6c6b935b8bbd400000","0x15acb61568ec4af7ea2819386181b116a6c5ee70":"0x690836c0af5f5600000","0x15b96f30c23b8664e7490651066b00c4391fbf84":"0x1642e9df4876290000","0x15c7edb8118ee27b342285eb5926b47a855bc7a5":"0x1158e460913d00000","0x15d99468507aa0413fb60dca2adc7f569cb36b54":"0x6c6b935b8bbd400000","0x15dbb48c98309764f99ced3692dcca35ee306bac":"0x1fc3842bd1f071c00000","0x15dcafcc2bace7b55b54c01a1c514626bf61ebd8":"0x1fd933494aa5fe00000","0x15e3b584056b62c973cf5eb096f1733e54c15c91":"0x32c75a0223ddf30000","0x15ebd1c7cad2aff19275c657c4d808d010efa0f5":"0xadf30ba70c8970000","0x15ee0fc63ebf1b1fc49d7bb38f8863823a2e17d2":"0x678a932062e4180000","0x15f1b352110d68901d8f67aac46a6cfafe031477":"0xad78ebc5ac6200000","0x15f2b7b16432ee50a5f55b41232f6334ed58bdc0":"0x15af1d78b58c400000","0x16019a4dafab43f4d9bf4163fae0847d848afca2":"0x15bc70139f74a0000","0x160226efe7b53a8af462d117a0108089bdecc2d1":"0xadf30ba70c8970000","0x160ceb6f980e04315f53c4fc988b2bf69e284d7d":"0x10910d4cdc9f60000","0x161caf5a972ace8379a6d0a04ae6e163fe21df2b":"0x152d02c7e14af6800000","0x161d26ef6759ba5b9f20fdcd66f16132c352415e":"0x6c6b935b8bbd400000","0x162110f29eac5f7d02b543d8dcd5bb59a5e33b73":"0x6c6b935b8bbd400000","0x162ba503276214b509f97586bd842110d103d517":"0x1e7ffd8895c22680000","0x162d76c2e6514a3afb6fe3d3cb93a35c5ae783f1":"0x6c6b935b8bbd400000","0x163bad4a122b457d64e8150a413eae4d07023e6b":"0x104e70464b1580000","0x163cc8be227646cb09719159f28ed09c5dc0dce0":"0x487a9a304539440000","0x163dca73d7d6ea3f3e6062322a8734180c0b78ef":"0x9f742003cb7dfc0000","0x164d7aac3eecbaeca1ad5191b753f173fe12ec33":"0x285652b8a468690000","0x16526c9edf943efa4f6d0f0bae81e18b31c54079":"0x35659ef93f0fc40000","0x165305b787322e25dc6ad0cefe6c6f334678d569":"0x6c6b935b8bbd400000","0x1665ab1739d71119ee6132abbd926a279fe67948":"0x56bc75e2d63100000","0x166bf6dab22d841b486c38e7ba6ab33a1487ed8c":"0x43c33c1937564800000","0x167699f48a78c615512515739958993312574f07":"0x21d3bd55e803c0000","0x1678c5f2a522393225196361894f53cc752fe2f3":"0x68f365aea1e4400000","0x167ce7de65e84708595a525497a3eb5e5a665073":"0x1f314773666fc40000","0x167e3e3ae2003348459392f7dfce44af7c21ad59":"0x1b1ae4d6e2ef500000","0x1680cec5021ee93050f8ae127251839e74c1f1fd":"0x2c61461e5d743d68000","0x16816aac0ede0d2d3cd442da79e063880f0f1d67":"0x6c6b935b8bbd400000","0x168b5019b818691644835fe69bf229e17112d52c":"0x5ede20f01a459800000","0x168bdec818eafc6d2992e5ef54aa0e1601e3c561":"0x3637507a30abeb0000","0x168d30e53fa681092b52e9bae15a0dcb41a8c9bb":"0x56bc75e2d63100000","0x169bbefc41cfd7d7cbb8dfc63020e9fb06d49546":"0x6c6b935b8bbd400000","0x16a58e985dccd707a594d193e7cca78b5d027849":"0x49b9ca9a6943400000","0x16a9e9b73ae98b864d1728798b8766dbc6ea8d12":"0x33e7b44b0db5040000","0x16aa52cb0b554723e7060f21f327b0a68315fea3":"0xd8d726b7177a80000","0x16abb8b021a710bdc78ea53494b20614ff4eafe8":"0x890b0c2e14fb80000","0x16afa787fc9f94bdff6976b1a42f430a8bf6fb0f":"0x6c6b935b8bbd400000","0x16bae5d24eff91778cd98b4d3a1cc3162f44aa77":"0x15be6174e1912e0000","0x16bc40215abbd9ae5d280b95b8010b4514ff1292":"0xad78ebc5ac6200000","0x16be75e98a995a395222d00bd79ff4b6e638e191":"0x79f905c6fd34e800000","0x16c1bf5b7dc9c83c179efacbcf2eb174e3561cb3":"0x3635c9adc5dea00000","0x16c7b31e8c376282ac2271728c31c95e35d952c3":"0x6c6b935b8bbd400000","0x16f313cf8ad000914a0a176dc6a4342b79ec2538":"0x6c6b935b8bbd400000","0x16ffac84032940f0121a09668b858a7e79ffa3bb":"0xd24ada6e1087110000","0x1703b4b292b8a9deddede81bb25d89179f6446b6":"0x42b65a455e8b1680000","0x17049311101d817efb1d65910f663662a699c98c":"0x6c68ccd09b022c0000","0x1704cefcfb1331ec7a78388b29393e85c1af7916":"0x15af1d78b58c400000","0x170a88a8997f92d238370f1affdee6347050b013":"0xa2ac77351488300000","0x17108dab2c50f99de110e1b3b3b4cd82f5df28e7":"0x35203b67bccad00000","0x17125b59ac51cee029e4bd78d7f5947d1ea49bb2":"0x4a89f54ef0121c00000","0x171ad9a04bedc8b861e8ed4bddf5717813b1bb48":"0x15af1d78b58c400000","0x171ca02a8b6d62bf4ca47e906914079861972cb2":"0xad78ebc5ac6200000","0x1722c4cbe70a94b6559d425084caeed4d6e66e21":"0xd8d726b7177a800000","0x17580b766f7453525ca4c6a88b01b50570ea088c":"0x56bc75e2d63100000","0x17589a6c006a54cad70103123aae0a82135fdeb4":"0xd8d726b7177a800000","0x175a183a3a235ffbb03ba835675267229417a091":"0x3635c9adc5dea000000","0x175feeea2aa4e0efda12e1588d2f483290ede81a":"0xad78ebc5ac6200000","0x1765361c2ec2f83616ce8363aae21025f2566f40":"0x10f0cf064dd59200000","0x1767525c5f5a22ed80e9d4d7710f0362d29efa33":"0x15af1d78b58c400000","0x17762560e82a93b3f522e0e524adb8612c3a7470":"0x3635c9adc5dea00000","0x177dae78bc0113d8d39c4402f2a641ae2a105ab8":"0x6292425620b4480000","0x1784948bf99848c89e445638504dd698271b5924":"0x1474c410d87baee0000","0x1788da9b57fd05edc4ff99e7fef301519c8a0a1e":"0x6c6b935b8bbd400000","0x178eaf6b8554c45dfde16b78ce0c157f2ee31351":"0x1158e460913d000000","0x17961d633bcf20a7b029a7d94b7df4da2ec5427f":"0xc6ff070f1938b8000","0x1796bcc97b8abc717f4b4a7c6b1036ea2182639f":"0x1341f91cd8e3510000","0x17993d312aa1106957868f6a55a5e8f12f77c843":"0x1865e814f4142e8000","0x179a825e0f1f6e985309668465cffed436f6aea9":"0x1158e460913d00000","0x17b2d6cf65c6f4a347ddc6572655354d8a412b29":"0x6c6b935b8bbd400000","0x17b807afa3ddd647e723542e7b52fee39527f306":"0x15af40ffa7fc010000","0x17c0478657e1d3d17aaa331dd429cecf91f8ae5d":"0x3634fb9f1489a70000","0x17c0fef6986cfb2e4041f9979d9940b69dff3de2":"0xd8d726b7177a800000","0x17d4918dfac15d77c47f9ed400a850190d64f151":"0x6c6b935b8bbd400000","0x17d521a8d9779023f7164d233c3b6420ffd223ed":"0x1158e460913d00000","0x17d931d4c56294dcbe77c8655be4695f006d4a3c":"0x6c6b935b8bbd400000","0x17df49518d73b129f0da36b1c9b40cb66420fdc7":"0x21e19e0c9bab2400000","0x17e4a0e52bac3ee44efe0954e753d4b85d644e05":"0x6c6b935b8bbd400000","0x17e584e810e567702c61d55d434b34cdb5ee30f6":"0x10f0cf064dd59200000","0x17e82e7078dc4fd9e879fb8a50667f53a5c54591":"0xad78ebc5ac6200000","0x17e86f3b5b30c0ba59f2b2e858425ba89f0a10b0":"0x6c6b935b8bbd400000","0x17ee9f54d4ddc84d670eff11e54a659fd72f4455":"0x3635c9adc5dea000000","0x17ef4acc1bf147e326749d10e677dcffd76f9e06":"0x87751f4e0e1b5300000","0x17f14632a7e2820be6e8f6df823558283dadab2d":"0x6c6b935b8bbd400000","0x17f523f117bc9fe978aa481eb4f5561711371bc8":"0x6c69f73e29134e0000","0x17fd9b551a98cb61c2e07fbf41d3e8c9a530cba5":"0x1768c308193048000","0x180478a655d78d0f3b0c4f202b61485bc4002fd5":"0x6c6b935b8bbd400000","0x18136c9df167aa17b6f18e22a702c88f4bc28245":"0xd8d726b7177a800000","0x1815279dff9952da3be8f77249dbe22243377be7":"0x1017cb76e7b26640000","0x181fbba852a7f50178b1c7f03ed9e58d54162929":"0x241a9b4f617a280000","0x1827039f09570294088fddf047165c33e696a492":"0x205b4dfa1ee74780000","0x182db85293f606e88988c3704cb3f0c0bbbfca5a":"0x73f75d1a085ba0000","0x1848003c25bfd4aa90e7fcb5d7b16bcd0cffc0d8":"0x3635c9adc5dea00000","0x184a4f0beb71ffd558a6b6e8f228b78796c4cf3e":"0x28a857425466f800000","0x184d86f3466ae6683b19729982e7a7e1a48347b2":"0x21e19e0c9bab2400000","0x1851a063ccdb30549077f1d139e72de7971197d5":"0x6c6b935b8bbd400000","0x185546e8768d506873818ac9751c1f12116a3bef":"0xad78ebc5ac6200000","0x1858cf11aea79f5398ad2bb22267b5a3c952ea74":"0x215f835bc769da80000","0x185a7fc4ace368d233e620b2a45935661292bdf2":"0x43c33c1937564800000","0x1864a3c7b48155448c54c88c708f166709736d31":"0x73f75d1a085ba0000","0x186afdc085f2a3dce4615edffbadf71a11780f50":"0xad78ebc5ac6200000","0x186b95f8e5effddcc94f1a315bf0295d3b1ea588":"0x6c6acc67d7b1d40000","0x187d9f0c07f8eb74faaad15ebc7b80447417f782":"0x1158e460913d00000","0x1895a0eb4a4372722fcbc5afe6936f289c88a419":"0x3154c9729d05780000","0x1899f69f653b05a5a6e81f480711d09bbf97588c":"0x69fb133df750ac0000","0x18a6d2fc52be73084023c91802f05bc24a4be09f":"0x6c6b935b8bbd400000","0x18b0407cdad4ce52600623bd5e1f6a81ab61f026":"0x1151ccf0c654c68000","0x18b8bcf98321da61fb4e3eacc1ec5417272dc27e":"0x2fb474098f67c00000","0x18c6723a6753299cb914477d04a3bd218df8c775":"0x3635c9adc5dea00000","0x18e113d8177c691a61be785852fa5bb47aeebdaf":"0x487a9a304539440000","0x18e4ce47483b53040adbab35172c01ef64506e0c":"0x1e7e4171bf4d3a00000","0x18e53243981aabc8767da10c73449f1391560eaa":"0x14542ba12a337c00000","0x18fa8625c9dc843c78c7ab259ff87c9599e07f10":"0x3635c9adc5dea00000","0x18fb09188f27f1038e654031924f628a2106703d":"0x6c6b935b8bbd400000","0x18fccf62d2c3395453b7587b9e26f5cff9eb7482":"0x3635c9adc5dea00000","0x191313525238a21c767457a91374f02200c55448":"0x64f5fdf494f780000","0x1914f1eb95d1277e93b6e61b668b7d77f13a11a1":"0x34957444b840e80000","0x1923cfc68b13ea7e2055803645c1e320156bd88d":"0x487a9a304539440000","0x19336a236ded755872411f2e0491d83e3e00159e":"0x32f51edbaaa3300000","0x1933e334c40f3acbad0c0b851158206924beca3a":"0x1995eaf01b896188000","0x1937c5c515057553ccbd46d5866455ce66290284":"0xd3c21bcecceda1000000","0x193ac65183651800e23580f8f0ead3bb597eb8a4":"0x2b62abcfb910a0000","0x193d37ed347d1c2f4e35350d9a444bc57ca4db43":"0x340aad21b3b700000","0x1940dc9364a852165f47414e27f5002445a4f143":"0x24c2dff6a3c7c480000","0x1945fe377fe6d4b71e3e791f6f17db243c9b8b0f":"0x7679e7beb988360000","0x194a6bb302b8aba7a5b579df93e0df1574967625":"0x1b1ae4d6e2ef500000","0x194cebb4929882bf3b4bf9864c2b1b0f62c283f9":"0x1ef861531f74aa0000","0x194ff44aefc17bd20efd7a204c47d1620c86db5d":"0xa29909687f6aa40000","0x194ffe78bbf5d20dd18a1f01da552e00b7b11db1":"0x17b7883c06916600000","0x1953313e2ad746239cb2270f48af34d8bb9c4465":"0x6c6b935b8bbd400000","0x19571a2b8f81c6bcf66ab3a10083295617150003":"0x1ab2cf7c9f87e20000","0x19687daa39c368139b6e7be60dc1753a9f0cbea3":"0x1b1ae4d6e2ef5000000","0x196c02210a450ab0b36370655f717aa87bd1c004":"0xe10ace157dbc00000","0x196e85df7e732b4a8f0ed03623f4db9db0b8fa31":"0x125b92f5cef248000","0x19732bf973055dbd91a4533adaa2149a91d38380":"0x6c6b935b8bbd400000","0x197672fd39d6f246ce66a790d13aa922d70ea109":"0x3635c9adc5dea00000","0x19798cbda715ea9a9b9d6aab942c55121e98bf91":"0x410d586a20a4c00000","0x198bfcf1b07ae308fa2c02069ac9dafe7135fb47":"0x1158e460913d00000","0x198ef1ec325a96cc354c7266a038be8b5c558f67":"0x80d1e4373e7f21da0000","0x19918aa09e7d494e98ffa5db50350892f7156ac6":"0x21e19e0c9bab2400000","0x19b36b0c87ea664ed80318dc77b688dde87d95a5":"0x699f499802303d0000","0x19df9445a81c1b3d804aeaeb6f6e204e4236663f":"0x206d94e6a49878000","0x19e5dea3370a2c746aae34a37c531f41da264e83":"0xad78ebc5ac6200000","0x19e7f3eb7bf67f3599209ebe08b62ad3327f8cde":"0x6c6b935b8bbd400000","0x19e94e620050aad766b9e1bad931238312d4bf49":"0x81e32df972abf00000","0x19ecf2abf40c9e857b252fe1dbfd3d4c5d8f816e":"0x6c6b935b8bbd400000","0x19f5caf4c40e6908813c0745b0aea9586d9dd931":"0x23fed9e1fa2b600000","0x19f643e1a8fa04ae16006028138333a59a96de87":"0x1158e460913d00000","0x19f99f2c0b46ce8906875dc9f90ae104dae35594":"0xf4575a5d4d162a0000","0x19ff244fcfe3d4fa2f4fd99f87e55bb315b81eb6":"0xad78ebc5ac6200000","0x1a04cec420ad432215246d77fe178d339ed0b595":"0x11216185c29f700000","0x1a04d5389eb006f9ce880c30d15353f8d11c4b31":"0x39d84b2186dc9100000","0x1a0841b92a7f7075569dc4627e6b76cab05ade91":"0x52663ccab1e1c00000","0x1a085d43ec92414ea27b914fe767b6d46b1eef44":"0x641e8a13563d8f80000","0x1a09fdc2c7a20e23574b97c69e93deba67d37220":"0x6c4fd1ee246e780000","0x1a0a1ddfb031e5c8cc1d46cf05842d50fddc7130":"0x3635c9adc5dea00000","0x1a1c9a26e0e02418a5cf687da75a275c622c9440":"0x10f0cf064dd59200000","0x1a201b4327cea7f399046246a3c87e6e03a3cda8":"0x3635c9adc5dea00000","0x1a2434cc774422d48d53d59c5d562cce8407c94b":"0x1a055690d9db80000","0x1a25e1c5bc7e5f50ec16f8885f210ea1b938800e":"0xd8d726b7177a800000","0x1a2694ec07cf5e4d68ba40f3e7a14c53f3038c6e":"0x3636cd06e2db3a8000","0x1a3520453582c718a21c42375bc50773255253e1":"0x2ad373ce668e980000","0x1a376e1b2d2f590769bb858d4575320d4e149970":"0x106712576391d180000","0x1a3a330e4fcb69dbef5e6901783bf50fd1c15342":"0xe3aeb5737240a00000","0x1a4ec6a0ae7f5a9427d23db9724c0d0cffb2ab2f":"0x9b41fbf9e0aec0000","0x1a505e62a74e87e577473e4f3afa16bedd3cfa52":"0x1b1ae4d6e2ef500000","0x1a5ee533acbfb3a2d76d5b685277b796c56a052b":"0x6c6b935b8bbd400000","0x1a644a50cbc2aee823bd2bf243e825be4d47df02":"0x56be03ca3e47d8000","0x1a7044e2383f8708305b495bd1176b92e7ef043a":"0xad78ebc5ac6200000","0x1a79c7f4039c67a39d7513884cdc0e2c34222490":"0x1158e460913d00000","0x1a89899cbebdbb64bb26a195a63c08491fcd9eee":"0x6c6b935b8bbd400000","0x1a8a5ce414de9cd172937e37f2d59cff71ce57a0":"0x21e19e0c9bab2400000","0x1a95a8a8082e4652e4170df9271cb4bb4305f0b2":"0x2b5e3af16b1880000","0x1a95c9b7546b5d1786c3858fb1236446bc0ca4ce":"0x6acb3df27e1f880000","0x1a987e3f83de75a42f1bde7c997c19217b4a5f24":"0x6c6b935b8bbd400000","0x1a9e702f385dcd105e8b9fa428eea21c57ff528a":"0x4be4e7267b6ae00000","0x1aa1021f550af158c747668dd13b463160f95a40":"0x4fb0591b9b30380000","0x1aa27699cada8dc3a76f7933aa66c71919040e88":"0x15af1d78b58c400000","0x1aa40270d21e5cde86b6316d1ac3c533494b79ed":"0x1158e460913d00000","0x1ab53a11bcc63ddfaa40a02b9e186496cdbb8aff":"0x6c3f2aac800c000000","0x1abc4e253b080aeb437984ab05bca0979aa43e1c":"0x3635c9adc5dea00000","0x1ac089c3bc4d82f06a20051a9d732dc0e734cb61":"0x25f69d63a6ce0e0000","0x1ad4563ea5786be1159935abb0f1d5879c3e7372":"0x14542ba12a337c00000","0x1ad72d20a76e7fcc6b764058f48d417d496fa6cd":"0x6c6b935b8bbd400000","0x1adaf4abfa867db17f99af6abebf707a3cf55df6":"0x14542ba12a337c00000","0x1af60343360e0b2d75255210375720df21db5c7d":"0x3635c9adc5dea00000","0x1afcc585896cd0ede129ee2de5c19ea811540b64":"0xaf2aba0c8e5bef8000","0x1b05ea6a6ac8af7cb6a8b911a8cce8fe1a2acfc8":"0x6c6b935b8bbd400000","0x1b0b31afff4b6df3653a94d7c87978ae35f34aae":"0x133910453fa9840000","0x1b0d076817e8d68ee2df4e1da1c1142d198c4435":"0x54069233bf7f780000","0x1b130d6fa51d5c48ec8d1d52dc8a227be8735c8a":"0x6c6b935b8bbd400000","0x1b23cb8663554871fbbe0d9e60397efb6faedc3e":"0xad78ebc5ac6200000","0x1b2639588b55c344b023e8de5fd4087b1f040361":"0x5150ae84a8cdf00000","0x1b3920d001c43e72b24e7ca46f0fd6e0c20a5ff2":"0x6c6b935b8bbd400000","0x1b3cb81e51011b549d78bf720b0d924ac763a7c2":"0x7695a92c20d6fe000000","0x1b43232ccd4880d6f46fa751a96cd82473315841":"0x4563918244f400000","0x1b4bbcb18165211b265b280716cb3f1f212176e8":"0x199ad37d03d0608000","0x1b4d07acd38183a61bb2783d2b7b178dd502ac8d":"0xad78ebc5ac6200000","0x1b636b7a496f044d7359596e353a104616436f6b":"0x1388ea95c33f1d0000","0x1b6495891240e64e594493c2662171db5e30ce13":"0x95887d695ed580000","0x1b6610fb68bad6ed1cfaa0bbe33a24eb2e96fafb":"0x83d6c7aab63600000","0x1b799033ef6dc7127822f74542bb22dbfc09a308":"0x56bc75e2d63100000","0x1b7ed974b6e234ce81247498429a5bd4a0a2d139":"0x6c6b935b8bbd400000","0x1b826fb3c012b0d159e294ba5b8a499ff3c0e03c":"0x6c6b935b8bbd400000","0x1b8aa0160cd79f005f88510a714913d70ad3be33":"0xaeffb83079ad00000","0x1b8bd6d2eca20185a78e7d98e8e185678dac4830":"0x3894f0e6f9b9f700000","0x1b9b2dc2960e4cb9408f7405827c9b59071612fd":"0x3635c9adc5dea00000","0x1ba9228d388727f389150ea03b73c82de8eb2e09":"0x18974fbe177c9280000","0x1ba9f7997e5387b6b2aa0135ac2452fe36b4c20d":"0x2e141ea081ca080000","0x1bba03ff6b4ad5bf18184acb21b188a399e9eb4a":"0x61093d7c2c6d380000","0x1bbc199e586790be87afedc849c04726745c5d7b":"0xd8d726b7177a800000","0x1bbc60bcc80e5cdc35c5416a1f0a40a83dae867b":"0x6c6b935b8bbd400000","0x1bc44c8761231ba1f11f5faa40fa669a013e12ce":"0xb0952c45aeaad0000","0x1bcf3441a866bdbe963009ce33c81cbb0261b02c":"0x9ddc1e3b901180000","0x1bd28cd5c78aee51357c95c1ef9235e7c18bc854":"0x6c6b935b8bbd400000","0x1bd8ebaa7674bb18e19198db244f570313075f43":"0x821ab0d4414980000","0x1bd909ac0d4a1102ec98dcf2cca96a0adcd7a951":"0x11651ac3e7a758000","0x1be3542c3613687465f15a70aeeb81662b65cca8":"0x6c6b935b8bbd400000","0x1bea4df5122fafdeb3607eddda1ea4ffdb9abf2a":"0x12c1b6eed03d280000","0x1bec4d02ce85fc48feb62489841d85b170586a9b":"0x821ab0d44149800000","0x1bf974d9904f45ce81a845e11ef4cbcf27af719e":"0x56bc75e2d63100000","0x1c045649cd53dc23541f8ed4d341812808d5dd9c":"0x17b7883c06916600000","0x1c128bd6cda5fca27575e4b43b3253c8c4172afe":"0x6c6b935b8bbd400000","0x1c13d38637b9a47ce79d37a86f50fb409c060728":"0x487a9a304539440000","0x1c2010bd662df417f2a271879afb13ef4c88a3ae":"0xd8d726b7177a800000","0x1c257ad4a55105ea3b58ed374b198da266c85f63":"0x21e19e0c9bab2400000","0x1c2e3607e127caca0fbd5c5948adad7dd830b285":"0x42bf06b78ed3b500000","0x1c356cfdb95febb714633b28d5c132dd84a9b436":"0x15af1d78b58c40000","0x1c35aab688a0cd8ef82e76541ba7ac39527f743b":"0x1b1ae4d6e2ef500000","0x1c3ef05dae9dcbd489f3024408669de244c52a02":"0x43c33c1937564800000","0x1c4af0e863d2656c8635bc6ffec8dd9928908cb5":"0x6c6b935b8bbd400000","0x1c601993789207f965bb865cbb4cd657cce76fc0":"0x5541a7037503f0000","0x1c63fa9e2cbbf23c49fcdef1cbabfe6e0d1e14c1":"0x3635c9adc5dea00000","0x1c6702b3b05a5114bdbcaeca25531aeeb34835f4":"0x58556bead45dcae0000","0x1c68a66138783a63c98cc675a9ec77af4598d35e":"0x2b746f48f0f120000","0x1c73d00b6e25d8eb9c1ff4ad827b6b9e9cf6d20c":"0xad78ebc5ac6200000","0x1c751e7f24df9d94a637a5dedeffc58277b5db19":"0xae8e7a0bb575d00000","0x1c7cb2fe6bf3e09cbcdc187af38fa8f5053a70b6":"0x21c84f742d0cead8000","0x1c89060f987c518fa079ec2c0a5ebfa30f5d20f7":"0x80bfbefcb5f0bc00000","0x1c94d636e684eb155895ce6db4a2588fba1d001b":"0x6c6b935b8bbd400000","0x1c99fe9bb6c6d1066d912099547fd1f4809eacd9":"0x6c6b935b8bbd400000","0x1cb450920078aab2317c7db3b38af7dd298b2d41":"0x126e72a69a50d00000","0x1cb5f33b4d488936d13e3161da33a1da7df70d1b":"0xad78ebc5ac6200000","0x1cb6b2d7cfc559b7f41e6f56ab95c7c958cd0e4c":"0x487a9a304539440000","0x1cc1d3c14f0fb8640e36724dc43229d2ea7a1e48":"0x5c283d410394100000","0x1cc90876004109cd79a3dea866cb840ac364ba1b":"0x6c6b935b8bbd400000","0x1cd1f0a314cbb200de0a0cb1ef97e920709d97c2":"0x6c6b935b8bbd400000","0x1cda411bd5163baeca1e558563601ce720e24ee1":"0xfc936392801c0000","0x1ce81d31a7923022e125bf48a3e03693b98dc9dd":"0x6c6b935b8bbd400000","0x1cebf0985d7f680aaa915c44cc62edb49eab269e":"0x3635c9adc5dea00000","0x1ced6715f862b1ff86058201fcce5082b36e62b2":"0x16a5e60bee273b10000","0x1cf04cb14380059efd3f238b65d5beb86afa14d8":"0x1158e460913d00000","0x1cf105ab23023b554c583e86d7921179ee83169f":"0x6acb3df27e1f880000","0x1cf2eb7a8ccac2adeaef0ee87347d535d3b94058":"0x6c6b935b8bbd400000","0x1cfcf7517f0c08459720942b647ad192aa9c8828":"0x2b5e3af16b18800000","0x1d09ad2412691cc581c1ab36b6f9434cd4f08b54":"0x17b7883c06916600000","0x1d157c5876c5cad553c912caf6ce2d5277e05c73":"0x6c6b935b8bbd400000","0x1d2615f8b6ca5012b663bdd094b0c5137c778ddf":"0x21e19e0c9bab2400000","0x1d29c7aab42b2048d2b25225d498dba67a03fbb2":"0xad78ebc5ac6200000","0x1d341fa5a3a1bd051f7db807b6db2fc7ba4f9b45":"0xfc936392801c0000","0x1d344e962567cb27e44db9f2fac7b68df1c1e6f7":"0x692ae8897081d00000","0x1d36683063b7e9eb99462dabd569bddce71686f2":"0x3635c9adc5dea00000","0x1d37616b793f94911838ac8e19ee9449df921ec4":"0x5150ae84a8cdf00000","0x1d395b30adda1cf21f091a4f4a7b753371189441":"0x152d02c7e14af6800000","0x1d45586eb803ca2190650bf748a2b174312bb507":"0x4be4e7267b6ae00000","0x1d572edd2d87ca271a6714c15a3b37761dcca005":"0x6ebd52a8ddd390000","0x1d633097a85225a1ff4321b12988fdd55c2b3844":"0xd8d726b7177a800000","0x1d69c83d28ff0474ceebeacb3ad227a144ece7a3":"0x128cc03920a62d28000","0x1d96bcd58457bbf1d3c2a46ffaf16dbf7d836859":"0x9497209d8467e8000","0x1d9e6aaf8019a05f230e5def05af5d889bd4d0f2":"0x73f75d1a085ba0000","0x1dab172effa6fbee534c94b17e794edac54f55f8":"0x6acb3df27e1f880000","0x1db9ac9a9eaeec0a523757050c71f47278c72d50":"0x487a9a304539440000","0x1dbe8e1c2b8a009f85f1ad3ce80d2e05350ee39c":"0x7570d6e9ebbe40000","0x1dc7f7dad85df53f1271152403f4e1e4fdb3afa0":"0xad78ebc5ac6200000","0x1dcebcb7656df5dcaa3368a055d22f9ed6cdd940":"0x1b181e4bf2343c0000","0x1dd77441844afe9cc18f15d8c77bccfb655ee034":"0x106eb45579944880000","0x1ddefefd35ab8f658b2471e54790bc17af98dea4":"0x3635c9adc5dea00000","0x1deec01abe5c0d952de9106c3dc30639d85005d6":"0x6c6b935b8bbd400000","0x1df6911672679bb0ef3509038c0c27e394fdfe30":"0x1d460162f516f00000","0x1dfaee077212f1beaf0e6f2f1840537ae154ad86":"0x3635c9adc5dea00000","0x1e060dc6c5f1cb8cc7e1452e02ee167508b56542":"0x2b14f02c864c77e0000","0x1e13ec51142cebb7a26083412c3ce35144ba56a1":"0x10f0cf064dd59200000","0x1e1a4828119be309bd88236e4d482b504dc55711":"0xa030dcebbd2f4c0000","0x1e1aed85b86c6562cb8fa1eb6f8f3bc9dcae6e79":"0xf4d2dd84259b240000","0x1e1c6351776ac31091397ecf16002d979a1b2d51":"0x4be4e7267b6ae00000","0x1e1d7a5f2468b94ea826982dbf2125793c6e4a5a":"0x3634f48417401a0000","0x1e210e7047886daa52aaf70f4b991dac68e3025e":"0xad78ebc5ac6200000","0x1e2bf4ba8e5ef18d37de6d6ad636c4cae489d0cc":"0x6c6b935b8bbd400000","0x1e2fe4e4a77d141ff49a0c7fbc95b0a2b283eeeb":"0x6c6b935b8bbd400000","0x1e33d1c2fb5e084f2f1d54bc5267727fec3f985d":"0x1b1ae4d6e2ef500000","0x1e381adcf801a3bf9fd7bfac9ccc2b8482ad5e66":"0x208972c0010d740000","0x1e3badb1b6e1380e27039c576ae6222e963a5b53":"0x43c33c1937564800000","0x1e484d0621f0f5331b35d5408d9aae4eb1acf21e":"0x1158e460913d00000","0x1e5800227d4dcf75e30f5595c5bed3f72e341e3b":"0xd75dace73417e0000","0x1e596a81b357c6f24970cc313df6dbdaabd0d09e":"0x6c6b935b8bbd400000","0x1e6915ebd9a19c81b692ad99b1218a592c1ac7b1":"0xd8d726b7177a800000","0x1e6e0153fc161bc05e656bbb144c7187bf4fe84d":"0x6c6b935b8bbd400000","0x1e706655e284dcf0bb37fe075d613a18dc12ff4a":"0xed43bf1eee82ac0000","0x1e783e522ab7df0acaac9eeed3593039e5ac7579":"0x2b1446dd6aefe41c0000","0x1e7b5e4d1f572becf2c00fc90cb4767b4a6e33d4":"0x61fc6107593e10000","0x1e8e689b02917cdc29245d0c9c68b094b41a9ed6":"0x6c6b935b8bbd400000","0x1ea334b5750807ea74aac5ab8694ec5f28aa77cf":"0x1ab2cf7c9f87e20000","0x1ea4715504c6af107b0194f4f7b1cb6fcccd6f4b":"0x20043197e0b0270000","0x1ea492bce1ad107e337f4bd4a7ac9a7babcccdab":"0x56bc75e2d63100000","0x1ea6bf2f15ae9c1dbc64daa7f8ea4d0d81aad3eb":"0xe3aeb5737240a00000","0x1eb4bf73156a82a0a6822080c6edf49c469af8b9":"0x678a932062e4180000","0x1ebacb7844fdc322f805904fbf1962802db1537c":"0x21e19e0c9bab2400000","0x1ec4ec4b77bf19d091a868e6f49154180541f90e":"0x6c6b935b8bbd400000","0x1ed06ee51662a86c634588fb62dc43c8f27e7c17":"0xad78ebc5ac6200000","0x1ed8bb3f06778b039e9961d81cb71a73e6787c8e":"0x6c6b935b8bbd400000","0x1eda084e796500ba14c5121c0d90846f66e4be62":"0x1cfdd7468216e80000","0x1eee6cbee4fe96ad615a9cf5857a647940df8c78":"0x10d3aa536e2940000","0x1ef2dcbfe0a500411d956eb8c8939c3d6cfe669d":"0x2a1129d09367200000","0x1ef5c9c73650cfbbde5c885531d427c7c3fe5544":"0x14542ba12a337c00000","0x1f0412bfedcd964e837d092c71a5fcbaf30126e2":"0x1158e460913d00000","0x1f174f40a0447234e66653914d75bc003e5690dc":"0x8ac7230489e800000","0x1f2186ded23e0cf9521694e4e164593e690a9685":"0x1043561a8829300000","0x1f2afc0aed11bfc71e77a907657b36ea76e3fb99":"0xd8d726b7177a800000","0x1f3959fc291110e88232c36b7667fc78a379613f":"0xfc936392801c0000","0x1f3da68fe87eaf43a829ab6d7ec5a6e009b204fb":"0x1e1601758c2c7e0000","0x1f49b86d0d3945590698a6aaf1673c37755ca80d":"0x25f273933db5700000","0x1f5f3b34bd134b2781afe5a0424ac5846cdefd11":"0x55de6a779bbac0000","0x1f6f0030349752061c96072bc3d6eb3549208d6b":"0x14b8de1eb88db8000","0x1f7d8e86d6eeb02545aad90e91327bd369d7d2f3":"0x1158e460913d00000","0x1f8116bd0af5570eaf0c56c49c7ab5e37a580458":"0x6c6b935b8bbd400000","0x1f88f8a1338fc7c10976abcd3fb8d38554b5ec9c":"0xb9f65d00f63c0000","0x1f9c3268458da301a2be5ab08257f77bb5a98aa4":"0xad78ebc5ac6200000","0x1fa2319fed8c2d462adf2e17feec6a6f30516e95":"0x6cae30621d4720000","0x1fb463a0389983df7d593f7bdd6d78497fed8879":"0x1158e460913d00000","0x1fb7bd310d95f2a6d9baaf8a8a430a9a04453a8b":"0xa2a15d09519be00000","0x1fcc7ce6a8485895a3199e16481f72e1f762defe":"0x3635c9adc5dea00000","0x1fcfd1d57f872290560cb62d600e1defbefccc1c":"0x50c5e761a444080000","0x1fd296be03ad737c92f9c6869e8d80a71c5714aa":"0xb98bc829a6f90000","0x1fddd85fc98be9c4045961f40f93805ecc4549e5":"0x8e3f50b173c100000","0x2001bef77b66f51e1599b02fb110194a0099b78d":"0x6c6b935b8bbd400000","0x200264a09f8c68e3e6629795280f56254f8640d0":"0x1158e460913d00000","0x2003717907a72560f4307f1beecc5436f43d21e7":"0x1b1ae4d6e2ef500000","0x200dfc0b71e359b2b465440a36a6cdc352773007":"0x5150ae84a8cdf00000","0x20134cbff88bfadc466b52eceaa79857891d831e":"0x3635c9adc5dea00000","0x2014261f01089f53795630ba9dd24f9a34c2d942":"0x487a9a304539440000","0x2016895df32c8ed5478269468423aea7b7fbce50":"0x1158e460913d00000","0x20181c4b41f6f972b66958215f19f570c15ddff1":"0x56bc75e2d631000000","0x201864a8f784c2277b0b7c9ee734f7b377eab648":"0xf2281400d1d5ec0000","0x2020b81ae53926ace9f7d7415a050c031d585f20":"0x127f19e83eb3480000","0x203c6283f20df7bc86542fdfb4e763ecdbbbeef5":"0x54b40b1f852bda00000","0x204ac98867a7c9c7ed711cb82f28a878caf69b48":"0x14542ba12a337c00000","0x205237c4be146fba99478f3a7dad17b09138da95":"0x6c6b935b8bbd400000","0x2053ac97548a0c4e8b80bc72590cd6a098fe7516":"0xa2325753b460c0000","0x205f5166f12440d85762c967d3ae86184f8f4d98":"0x177224aa844c720000","0x205fc843e19a4913d1881eb69b69c0fa3be5c50b":"0x20dd68aaf3289100000","0x206482ee6f138a778fe1ad62b180ce856fbb23e6":"0x6c6b935b8bbd400000","0x2066774d822793ff25f1760909479cf62491bf88":"0xbae3ac685cb72e00000","0x206d55d5792a514ec108e090599f2a065e501185":"0xadf30ba70c8970000","0x20707e425d2a11d2c89f391b2b809f556c592421":"0x6c6b935b8bbd400000","0x207ef80b5d60b6fbffc51f3a64b8c72036a5abbd":"0x16a6502f15a1e540000","0x20824ba1dbebbef9846ef3d0f6c1b017e6912ec4":"0x184b26e4daf1d350000","0x2084fce505d97bebf1ad8c5ff6826fc645371fb2":"0x1a055690d9db80000","0x208c45732c0a378f17ac8324926d459ba8b658b4":"0xa030dcebbd2f4c0000","0x209377b6ad3fe101c9685b3576545c6b1684e73c":"0x62a992e53a0af00000","0x209e8e29d33beae8fb6baa783d133e1d9ec1bc0b":"0x2d43f3ebfafb2c0000","0x20a15256d50ce058bf0eac43aa533aa16ec9b380":"0x1158e460913d00000","0x20a29c5079e26b3f18318bb2e50e8e8b346e5be8":"0x1b1ab319f5ec750000","0x20a81680e465f88790f0074f60b4f35f5d1e6aa5":"0x456180278f0c778000","0x20b9a9e6bd8880d9994ae00dd0b9282a0beab816":"0x1b1ae4d6e2ef500000","0x20c284ba10a20830fc3d699ec97d2dfa27e1b95e":"0x6c6b935b8bbd400000","0x20d1417f99c569e3beb095856530fe12d0fceaaa":"0x4015f94b1183698000","0x20dd8fcbb46ea46fe381a68b8ca0ea5be21fe9a5":"0x6c6b935b8bbd400000","0x20ff3ede8cadb5c37b48cb14580fb65e23090a7b":"0x8e4d316827686400000","0x2100381d60a5b54adc09d19683a8f6d5bb4bfbcb":"0x21e19e0c9bab2400000","0x2118c116ab0cdf6fd11d54a4309307b477c3fc0f":"0x21e19e0c9bab2400000","0x211b29cefc79ae976744fdebcebd3cbb32c51303":"0x2f6f10780d22cc00000","0x21206ce22ea480e85940d31314e0d64f4e4d3a04":"0x3635c9adc5dea00000","0x2132c0516a2e17174ac547c43b7b0020d1eb4c59":"0x35659ef93f0fc40000","0x21408b4d7a2c0e6eca4143f2cacdbbccba121bd8":"0x43c33c1937564800000","0x214b743955a512de6e0d886a8cbd0282bee6d2a2":"0x6c6b935b8bbd400000","0x214c89c5bd8e7d22bc574bb35e48950211c6f776":"0x10654f258fd358000","0x21546914dfd3af2add41b0ff3e83ffda7414e1e0":"0x14395e7385a502e0000","0x21582e99e502cbf3d3c23bdffb76e901ac6d56b2":"0x56bc75e2d63100000","0x2159240813a73095a7ebf7c3b3743e8028ae5f09":"0x6c6b935b8bbd400000","0x2160b4c02cac0a81de9108de434590a8bfe68735":"0x6acb3df27e1f880000","0x216e41864ef98f060da08ecae19ad1166a17d036":"0x1369fb96128ac480000","0x21846f2fdf5a41ed8df36e5ed8544df75988ece3":"0x6c6acc67d7b1d40000","0x21a6db6527467bc6dad54bc16e9fe2953b6794ed":"0x2f6f10780d22cc00000","0x21a6feb6ab11c766fdd977f8df4121155f47a1c0":"0x319cf38f100580000","0x21b182f2da2b384493cf5f35f83d9d1ee14f2a21":"0x6c6b935b8bbd400000","0x21bfe1b45cacde6274fd8608d9a178bf3eeb6edc":"0x6cee06ddbe15ec0000","0x21c07380484f6cbc8724ad32bc864c3b5ad500b7":"0x3635c9adc5dea00000","0x21c3a8bba267c8cca27b1a9afabad86f607af708":"0x1e4a36c49d998300000","0x21ce6d5b9018cec04ad6967944bea39e8030b6b8":"0x1158e460913d00000","0x21d02705f3f64905d80ed9147913ea8c7307d695":"0x49edb1c09887360000","0x21d13f0c4024e967d9470791b50f22de3afecf1b":"0xf15ad35e2e31e50000","0x21dbdb817a0d8404c6bdd61504374e9c43c9210e":"0x21e18b9e9ab45e48000","0x21df1ec24b4e4bfe79b0c095cebae198f291fbd1":"0x43c33c1937564800000","0x21df2dcdaf74b2bf803404dd4de6a35eabec1bbd":"0x177224aa844c7200000","0x21e219c89ca8ac14ae4cba6130eeb77d9e6d3962":"0x2acd9faaa038ee0000","0x21e5d2bae995ccfd08a5c16bb524e1f630448f82":"0x97c9ce4cf6d5c00000","0x21e5d77320304c201c1e53b261a123d0a1063e81":"0x4b6fa9d33dd460000","0x21eae6feffa9fbf4cd874f4739ace530ccbe5937":"0x10f0cf064dd59200000","0x21ecb2dfa65779c7592d041cd2105a81f4fd4e46":"0x3635c9adc5dea00000","0x21efbca09b3580b98e73f5b2f7f4dc0bf02c529c":"0x6c6b935b8bbd400000","0x21fd0bade5f4ef7474d058b7f3d854cb1300524e":"0x1158e460913d00000","0x21fd47c5256012198fa5abf131c06d6aa1965f75":"0x1ab2cf7c9f87e200000","0x21fd6c5d97f9c600b76821ddd4e776350fce2be0":"0x6c6ad382d4fb610000","0x220dc68df019b6b0ccbffb784b5a5ab4b15d4060":"0xd5967be4fc3f100000","0x220e2b92c0f6c902b513d9f1e6fab6a8b0def3d7":"0x2b5e3af16b18800000","0x22561c5931143536309c17e832587b625c390b9a":"0xd8d726b7177a800000","0x2257fca16a6e5c2a647c3c29f36ce229ab93b17e":"0xd8d726b7177a800000","0x225d35faedb391c7bc2db7fa9071160405996d00":"0x91854fc1862630000","0x225f9eb3fb6ff3e9e3c8447e14a66e8d4f3779f6":"0x6c6b935b8bbd400000","0x2272186ef27dcbe2f5fc373050fdae7f2ace2316":"0x368c8623a8b4d100000","0x2273bad7bc4e487622d175ef7a66988b6a93c4ee":"0x1158e460913d00000","0x2276264bec8526c0c0f270677abaf4f0e441e167":"0x3635c9adc5dea00000","0x228242f8336eecd8242e1f000f41937e71dffbbf":"0x10f0cf064dd59200000","0x22842ab830da509913f81dd1f04f10af9edd1c55":"0x6c6b935b8bbd400000","0x22944fbca9b57963084eb84df7c85fb9bcdfb856":"0xfc118fef90ba388000","0x229cc4711b62755ea296445ac3b77fc633821cf2":"0x223e8b05219328000","0x229e430de2b74f442651ddcdb70176bc054cad54":"0xbbf981bc4aaa8000","0x229f4f1a2a4f540774505b4707a81de44410255b":"0x6c6b935b8bbd400000","0x229ff80bf5708009a9f739e0f8b560914016d5a6":"0x1211ecb56d13488000","0x22a25812ab56dcc423175ed1d8adacce33cd1810":"0x6449e84e47a8a80000","0x22b96ab2cad55db100b53001f9e4db378104c807":"0x21e19e0c9bab2400000","0x22bdffc240a88ff7431af3bff50e14da37d5183e":"0x3635c9adc5dea00000","0x22ce349159eeb144ef06ff2636588aef79f62832":"0xa31062beeed700000","0x22db559f2c3c1475a2e6ffe83a5979599196a7fa":"0x3635c9adc5dea00000","0x22e15158b5ee3e86eb0332e3e6a9ac6cd9b55ecd":"0x8ac7230489e800000","0x22e2488e2da26a49ae84c01bd54b21f2947891c6":"0x5dc892aa1131c80000","0x22e512149a18d369b73c71efa43e86c9edabaf1d":"0x4ee02e6714615c0000","0x22eb7db0ba56b0f8b816ccb206e615d929185b0d":"0x45d29737e22f20000","0x22eed327f8eb1d1338a3cb7b0f8a4baa5907cd95":"0x1455d5f4877088000","0x22f004df8de9e6ebf523ccace457accb26f97281":"0x21e19e0c9bab2400000","0x22f2dcff5ad78c3eb6850b5cb951127b659522e6":"0xbe202d6a0eda0000","0x22f3c779dd79023ea92a78b65c1a1780f62d5c4a":"0x6acb3df27e1f880000","0x22fe884d9037291b4d52e6285ae68dea0be9ffb5":"0x6c6b935b8bbd400000","0x2306df931a940d58c01665fa4d0800802c02edfe":"0x3635c9adc5dea00000","0x2309d34091445b3232590bd70f4f10025b2c9509":"0x21e19e0c9bab2400000","0x23120046f6832102a752a76656691c863e17e59c":"0x11e0e4f8a50bd40000","0x231a15acc199c89fa9cb22441cc70330bdcce617":"0x1b1ae4d6e2ef500000","0x231d94155dbcfe2a93a319b6171f63b20bd2b6fa":"0xcf147bb906e2f80000","0x232832cd5977e00a4c30d0163f2e24f088a6cb09":"0xa2a15d09519be00000","0x232c6d03b5b6e6711efff190e49c28eef36c82b0":"0x487a9a304539440000","0x232cb1cd49993c144a3f88b3611e233569a86bd6":"0x34c606c42d0ac600000","0x232ce782506225fd9860a2edc14a7a3047736da2":"0x1158e460913d00000","0x232f525d55859b7d4e608d20487faadb00293135":"0xd8d726b7177a800000","0x2334c590c7a48769103045c5b6534c8a3469f44a":"0x3b199073df72dc00000","0x23376ecabf746ce53321cf42c86649b92b67b2ff":"0x6c6b935b8bbd400000","0x23378f42926d0184b793b0c827a6dd3e3d334fcd":"0x30927f74c9de00000","0x233842b1d0692fd11140cf5acda4bf9630bae5f8":"0x6c6b935b8bbd400000","0x2339e9492870afea2537f389ac2f838302a33c06":"0x6c6b935b8bbd400000","0x233bdddd5da94852f4ade8d212885682d9076bc6":"0xd8d726b7177a800000","0x234f46bab73fe45d31bf87f0a1e0466199f2ebac":"0x1a4aba225c20740000","0x23551f56975fe92b31fa469c49ea66ee6662f41e":"0x678a932062e4180000","0x23569542c97d566018c907acfcf391d14067e87e":"0x6c6b935b8bbd400000","0x235fa66c025ef5540070ebcf0d372d8177c467ab":"0x7129e1cdf373ee00000","0x2372c4c1c9939f7aaf6cfac04090f00474840a09":"0x21e19e0c9bab2400000","0x23730c357a91026e44b1d0e2fc2a51d071d8d77b":"0xd8d726b7177a800000","0x2376ada90333b1d181084c97e645e810aa5b76f1":"0x28a857425466f80000","0x2378fd4382511e968ed192106737d324f454b535":"0x3635c9adc5dea00000","0x2382a9d48ec83ea3652890fd0ee79c907b5b2dc1":"0x73f75d1a085ba0000","0x2383c222e67e969190d3219ef14da37850e26c55":"0x6c6b935b8bbd400000","0x238a6b7635252f5244486c0af0a73a207385e039":"0x4a4491bd6dcd280000","0x239a733e6b855ac592d663156186a8a174d2449e":"0x58be3758b241f60000","0x23ab09e73f87aa0f3be0139df0c8eb6be5634f95":"0x1b1ae4d6e2ef5000000","0x23abd9e93e7957e5b636be6579051c15e5ce0b0e":"0x3a3c8f7cbf42c380000","0x23b1c4917fbd93ee3d48389306957384a5496cbf":"0xd8d8583fa2d52f0000","0x23ba3864da583dab56f420873c37679690e02f00":"0x21342520d5fec200000","0x23c55aeb5739876f0ac8d7ebea13be729685f000":"0x487a9a304539440000","0x23c99ba087448e19c9701df66e0cab52368331fa":"0x6c6b935b8bbd400000","0x23ccc3c6acd85c2e460c4ffdd82bc75dc849ea14":"0xd8d726b7177a800000","0x23cd2598a20e149ead2ad69379576ecedb60e38e":"0x6c6b935b8bbd400000","0x23df8f48ee009256ea797e1fa369beebcf6bc663":"0x7cd3fac26d19818000","0x23e2c6a8be8e0acfa5c4df5e36058bb7cbac5a81":"0x6c6b935b8bbd400000","0x23ea669e3564819a83b0c26c00a16d9e826f6c46":"0x4d8d6ca968ca130000","0x23eb6fd85671a9063ab7678ebe265a20f61a02b3":"0x6c6b935b8bbd400000","0x23f9ecf3e5dddca38815d3e59ed34b5b90b4a353":"0xb1781a3f0bb200000","0x23fa7eb51a48229598f97e762be0869652dffc66":"0x3635c9adc5dea00000","0x240305727313d01e73542c775ff59d11cd35f819":"0x141885666807f5c8000","0x24046b91da9b61b629cb8b8ec0c351a07e0703e4":"0x6c6b935b8bbd400000","0x240e559e274aaef0c258998c979f671d1173b88b":"0xd8d726b7177a800000","0x241361559feef80ef137302153bd9ed2f25db3ef":"0x43c33c1937564800000","0x243b3bca6a299359e886ce33a30341fafe4d573d":"0x43c33c1937564800000","0x243c84d12420570cc4ef3baba1c959c283249520":"0x7f1f6993a853040000","0x24434a3e32e54ecf272fe3470b5f6f512f675520":"0x14061b9d77a5e980000","0x2448596f91c09baa30bc96106a2d37b5705e5d28":"0x6c6b935b8bbd400000","0x24586ec5451735eeaaeb470dc8736aae752f82e5":"0xf43fc2c04ee00000","0x2458d6555ff98a129cce4037953d00206eff4287":"0xaadec983fcff40000","0x246291165b59332df5f18ce5c98856fae95897d6":"0x5c283d410394100000","0x2467c6a5c696ede9a1e542bf1ad06bcc4b06aca0":"0x100bd33fb98ba0000","0x2476b2bb751ce748e1a4c4ff7b230be0c15d2245":"0xd8d726b7177a800000","0x247a0a11c57f0383b949de540b66dee68604b0a1":"0x39fbae8d042dd00000","0x2487c3c4be86a2723d917c06b458550170c3edba":"0x3635c9adc5dea00000","0x2489ac126934d4d6a94df08743da7b7691e9798e":"0x3635c9adc5dea00000","0x249db29dbc19d1235da7298a04081c315742e9ac":"0x61acff81a78ad40000","0x24a4eb36a7e498c36f99975c1a8d729fd6b305d7":"0xdfc78210eb2c80000","0x24a750eae5874711116dd7d47b7186ce990d3103":"0xad78ebc5ac6200000","0x24aa1151bb765fa3a89ca50eb6e1b1c706417fd4":"0xa80d24677efef00000","0x24aca08d5be85ebb9f3132dfc1b620824edfedf9":"0xfc936392801c0000","0x24b2be118b16d8b2174769d17b4cf84f07ca946d":"0x6c6b935b8bbd400000","0x24b8b446debd1947955dd084f2c544933346d3ad":"0xea696d904039bd8000","0x24b95ebef79500baa0eda72e77f877415df75c33":"0x3154c9729d05780000","0x24b9e6644f6ba4cde126270d81f6ab60f286dff4":"0x73f75d1a085ba0000","0x24bd5904059091d2f9e12d6a26a010ca22ab14e8":"0x65ea3db75546600000","0x24c0c88b54a3544709828ab4ab06840559f6c5e2":"0x90f534608a72880000","0x24c117d1d2b3a97ab11a4679c99a774a9eade8d1":"0x3635c9adc5dea00000","0x24cff0e9336a9f80f9b1cb968caf6b1d1c4932a4":"0xada55474b81340000","0x24daaaddf7b06bbcea9b80590085a88567682b4e":"0x114b2015d2bbd00000","0x24dcc24bd9c7210ceacfb30da98ae04a4d7b8ab9":"0x3635c9adc5dea00000","0x24f7450ddbf18b020feb1a2032d9d54b633edf37":"0x2b5e3af16b1880000","0x24fc73d20793098e09ddab5798506224fa1e1850":"0xad78ebc5ac6200000","0x24fd9a6c874c2fab3ff36e9afbf8ce0d32c7de92":"0x487a9a304539440000","0x250a40cef3202397f240469548beb5626af4f23c":"0x503b203e9fba20000","0x250a69430776f6347703f9529783955a6197b682":"0x692ae8897081d00000","0x250eb7c66f869ddf49da85f3393e980c029aa434":"0xd8d726b7177a800000","0x25106ab6755df86d6b63a187703b0cfea0e594a0":"0x17c405ad41db40000","0x25185f325acf2d64500698f65c769ddf68301602":"0x10f0cf064dd59200000","0x251c12722c6879227992a304eb3576cd18434ea5":"0x6c6b935b8bbd400000","0x251e6838f7cec5b383c1d90146341274daf8e502":"0x7ff1ccb7561df0000","0x25259d975a21d83ae30e33f800f53f37dfa01938":"0x1158e460913d00000","0x25287b815f5c82380a73b0b13fbaf982be24c4d3":"0x22b1c8c1227a00000","0x252b6555afdc80f2d96d972d17db84ea5ad521ac":"0x1ab2cf7c9f87e200000","0x2538532936813c91e653284f017c80c3b8f8a36f":"0x6c8754c8f30c080000","0x253e32b74ea4490ab92606fda0aa257bf23dcb8b":"0x21e19e0c9bab2400000","0x253f1e742a2cec86b0d7b306e5eacb6ccb2f8554":"0x43e5ede1f878c200000","0x2541314a0b408e95a694444977712a50713591ab":"0x589e1a5df4d7b50000","0x254c1ecc630c2877de8095f0a8dba1e8bf1f550c":"0x5c283d410394100000","0x255abc8d08a096a88f3d6ab55fbc7352bddcb9ce":"0x4743682313ede8000","0x255bdd6474cc8262f26a22c38f45940e1ceea69b":"0xd8d726b7177a800000","0x2560b09b89a4ae6849ed5a3c9958426631714466":"0x5c283d410394100000","0x2561a138dcf83bd813e0e7f108642be3de3d6f05":"0x3634f48417401a0000","0x2561ec0f379218fe5ed4e028a3f744aa41754c72":"0xb98bc829a6f90000","0x256292a191bdda34c4da6b6bd69147bf75e2a9ab":"0xc2ff2e0dfb038000","0x25697ef20cccaa70d32d376f8272d9c1070c3d78":"0xad78ebc5ac6200000","0x256fa150cc87b5056a07d004efc84524739e62b5":"0xad78ebc5ac6200000","0x25721c87b0dc21377c7200e524b14a22f0af69fb":"0xd8d726b7177a800000","0x258939bbf00c9de9af5338f5d714abf6d0c1c671":"0x54069233bf7f780000","0x2590126870e0bde8a663ab040a72a5573d8d41c2":"0x10f0cf064dd59200000","0x259ec4d265f3ab536b7c70fa97aca142692c13fc":"0x11b1b5bea89f80000","0x25a500eeec7a662a841552b5168b707b0de21e9e":"0x21f2f6f0fc3c6100000","0x25a5a44d38a2f44c6a9db9cdbc6b1e2e97abb509":"0x39992648a23c8a00000","0x25a74c2ac75dc8baa8b31a9c7cb4b7829b2456da":"0x6c6b935b8bbd400000","0x25adb8f96f39492c9bb47c5edc88624e46075697":"0x5a9940bc56879500000","0x25aee68d09afb71d8817f3f184ec562f7897b734":"0x6c6b935b8bbd400000","0x25b0533b81d02a617b9229c7ec5d6f2f672e5b5a":"0x3635c9adc5dea00000","0x25b78c9fad85b43343f0bfcd0fac11c9949ca5eb":"0x6c6b935b8bbd400000","0x25bc49ef288cd165e525c661a812cf84fbec8f33":"0x125921aebda9d00000","0x25bdfa3ee26f3849617b230062588a97e3cae701":"0x3635e619bb04d40000","0x25c1a37ee5f08265a1e10d3d90d5472955f97806":"0x62a992e53a0af00000","0x25c6e74ff1d928df98137af4df8430df24f07cd7":"0x15245655b102580000","0x25cfc4e25c35c13b69f7e77dbfb08baf58756b8d":"0x878678326eac9000000","0x25dad495a11a86b9eeece1eeec805e57f157faff":"0x3635c9adc5dea000000","0x25e037f00a18270ba5ec3420229ddb0a2ce38fa2":"0x21e19e0c9bab2400000","0x25e661c939863acc044e6f17b5698cce379ec3cc":"0x4a4491bd6dcd280000","0x26048fe84d9b010a62e731627e49bc2eb73f408f":"0xd8d726b7177a800000","0x2606c3b3b4ca1b091498602cb1978bf3b95221c0":"0x15af1d78b58c400000","0x260a230e4465077e0b14ee4442a482d5b0c914bf":"0x5af606a06b5b118000","0x260df8943a8c9a5dba7945327fd7e0837c11ad07":"0xad78ebc5ac6200000","0x2614f42d5da844377578e6b448dc24305bef2b03":"0x6c6b935b8bbd400000","0x2615100ea7e25bba9bca746058afbbb4ffbe4244":"0x1b1ae4d6e2ef500000","0x261575e9cf59c8226fa7aaf91de86fb70f5ac3ae":"0x1043a4436a523f0000","0x261e0fa64c51137465eecf5b90f197f7937fdb05":"0x3cfc82e37e9a7400000","0x262a8bfd7d9dc5dd3ad78161b6bb560824373655":"0x3f6a8384072b760000","0x262aed4bc0f4a4b2c6fb35793e835a49189cdfec":"0x21e19e0c9bab2400000","0x262dc1364ccf6df85c43268ee182554dae692e29":"0x10b202fec74ced80000","0x263814309de4e635cf585e0d365477fc40e66cf7":"0x7ea28327577080000","0x2639eee9873ceec26fcc9454b548b9e7c54aa65c":"0x3635c9adc5dea00000","0x263e57dacbe0149f82fe65a2664898866ff5b463":"0x80bfbefcb5f0bc00000","0x26475419c06d5f147aa597248eb46cf7befa64a5":"0x58e7926ee858a00000","0x264cc8086a8710f91b21720905912cd7964ae868":"0x1731790534df20000","0x265383d68b52d034161bfab01ae1b047942fbc32":"0x47271dee20d745c0000","0x2659facb1e83436553b5b42989adb8075f9953ed":"0x1976576771a5e0000","0x266f2da7f0085ef3f3fa09baee232b93c744db2e":"0xcb49b44ba602d800000","0x267148fd72c54f620a592fb92799319cc4532b5c":"0x1639e49bba16280000","0x26784ade91c8a83a8e39658c8d8277413ccc9954":"0x14542ba12a337c00000","0x267a7e6e82e1b91d51deddb644f0e96dbb1f7f7e":"0x1158e460913d00000","0x2680713d40808e2a50ed013150a2a694b96a7f1d":"0x61093d7c2c6d380000","0x2697b339813b0c2d964b2471eb1c606f4ecb9616":"0x3e8ef795d890c80000","0x26a68eab905a8b3dce00e317308225dab1b9f6b8":"0x6b56051582a9700000","0x26b11d066588ce74a572a85a6328739212aa8b40":"0x6c6b935b8bbd400000","0x26babf42b267fdcf3861fdd4236a5e474848b358":"0x3635c9adc5dea00000","0x26c0054b700d3a7c2dcbe275689d4f4cad16a335":"0x6c6b935b8bbd400000","0x26c2ffc30efdc5273e76183a16c2698d6e531286":"0x2a1129d09367200000","0x26c99f8849c9802b83c861217fd07a9e84cdb79d":"0x1043561a8829300000","0x26cfffd052152bb3f957b478d5f98b233a7c2b92":"0xd8d726b7177a800000","0x26d4a16891f52922789217fcd886f7fce296d400":"0x6c6b935b8bbd400000","0x26d4ec17d5ceb2c894bdc59d0a6a695dad2b43cc":"0x9f1f78761d341a0000","0x26e801b62c827191dd68d31a011990947fd0ebe0":"0x1158e460913d00000","0x26e9e2ad729702626417ef25de0dc800f7a779b3":"0x3635c9adc5dea00000","0x26f9f7cefd7e394b9d3924412bf2c2831faf1f85":"0xd8d726b7177a800000","0x26fe174cbf526650e0cd009bd6126502ce8e684d":"0x277017338a30ae00000","0x26ff0a51e7cece8400276978dbd6236ef162c0e6":"0x152e185627540a500000","0x27101a0f56d39a88c5a84f9b324cdde33e5cb68c":"0x6c6b935b8bbd400000","0x27144ca9a7771a836ad50f803f64d869b2ae2b20":"0xd8d726b7177a800000","0x27146913563aa745e2588430d9348e86ea7c3510":"0x15af1d78b58c400000","0x271d3d481cb88e7671ad216949b6365e06303de0":"0xd8d726b7177a800000","0x2720f9ca426ef2f2cbd2fecd39920c4f1a89e16d":"0x6c6b935b8bbd400000","0x272a131a5a656a7a3aca35c8bd202222a7592258":"0x90f534608a72880000","0x2744ff67464121e35afc2922177164fa2fcb0267":"0x56bc75e2d63100000","0x274a3d771a3d709796fbc4d5f48fce2fe38c79d6":"0x1158e460913d00000","0x274d69170fe7141401882b886ac4618c6ae40edb":"0x33c5499031720c0000","0x27521deb3b6ef1416ea4c781a2e5d7b36ee81c61":"0x6c6b935b8bbd400000","0x275875ff4fbb0cf3a430213127487f7608d04cba":"0x1b1c010e766d580000","0x276a006e3028ecd44cdb62ba0a77ce94ebd9f10f":"0x6194049f30f7200000","0x276b0521b0e68b277df0bb32f3fd48326350bfb2":"0x2b5e3af16b1880000","0x276fd7d24f8f883f5a7a28295bf17151c7a84b03":"0x6c6b935b8bbd400000","0x2770f14efb165ddeba79c10bb0af31c31e59334c":"0xa2a15d09519be00000","0x277677aba1e52c3b53bfa2071d4e859a0af7e8e1":"0x3635c9adc5dea00000","0x27824666d278d70423f03dfe1dc7a3f02f43e2b5":"0x3636c25e66ece70000","0x27830c5f6023afaaf79745676c204a0faccda0ba":"0xd02ab486cedc00000","0x2784903f1d7c1b5cd901f8875d14a79b3cbe2a56":"0x4bda7e9d74ad5500000","0x278c0bde630ec393b1e7267fc9d7d97019e4145b":"0x6c6b935b8bbd400000","0x27987110221a880826adb2e7ab5eca78c6e31aec":"0xd8d726b7177a800000","0x27ac073be79ce657a93aa693ee43bf0fa41fef04":"0xa968163f0a57b400000","0x27b1694eafa165ebd7cc7bc99e74814a951419dc":"0x2b5e3af16b18800000","0x27b62816e1e3b8d19b79d1513d5dfa855b0c3a2a":"0x56af5c1fd69508000","0x27bf943c1633fe32f8bcccdb6302b407a5724e44":"0x32f84c6df408c08000","0x27bf9f44ba7d05c33540c3a53bb02cbbffe7c3c6":"0x6c6b935b8bbd400000","0x27c2d7ca504daa3d9066dc09137dc42f3aaab452":"0x2086ac351052600000","0x27d158ac3d3e1109ab6e570e90e85d3892cd7680":"0x56bc75e2d63100000","0x27e63989ca1e903bc620cf1b9c3f67b9e2ae6581":"0x487a9a304539440000","0x27f03cf1abc5e1b51dbc444b289e542c9ddfb0e6":"0x10f0cf064dd59200000","0x27fc85a49cff90dbcfdadc9ddd40d6b9a2210a6c":"0x56bc75e2d63100000","0x2805415e1d7fdec6dedfb89e521d10592d743c10":"0x56bc75e2d63100000","0x28073efc17d05cab3195c2db332b61984777a612":"0x3635c9adc5dea00000","0x281250a29121270a4ee5d78d24feafe82c70ba3a":"0x3635c9adc5dea00000","0x2813d263fc5ff2479e970595d6b6b560f8d6d6d1":"0x6c6b935b8bbd400000","0x282e80a554875a56799fa0a97f5510e795974c4e":"0x3635c9adc5dea00000","0x283396ce3cac398bcbe7227f323e78ff96d08767":"0x15af1d78b58c400000","0x28349f7ef974ea55fe36a1583b34cec3c45065f0":"0xcb633d49e65590000","0x2836123046b284e5ef102bfd22b1765e508116ad":"0x1653fbb5c427e40000","0x283c2314283c92d4b064f0aef9bb5246a7007f39":"0xad78ebc5ac6200000","0x283e11203749b1fa4f32febb71e49d135919382a":"0x3635c9adc5dea00000","0x283e6252b4efcf4654391acb75f903c59b78c5fb":"0x28a857425466f800000","0x28510e6eff1fc829b6576f4328bc3938ec7a6580":"0x21e19e0c9bab2400000","0x2858acacaf21ea81cab7598fdbd86b452e9e8e15":"0x241a9b4f617a280000","0x285ae51b9500c58d541365d97569f14bb2a3709b":"0x6c6b935b8bbd400000","0x2866b81decb02ee70ae250cee5cdc77b59d7b679":"0x6c6b935b8bbd400000","0x286906b6bd4972e3c71655e04baf36260c7cb153":"0x126e72a69a50d00000","0x286b186d61ea1fd78d9930fe12b06537b05c3d51":"0x3635c9adc5dea00000","0x2874f3e2985d5f7b406627e17baa772b01abcc9e":"0x146050410765f380000","0x287cf9d0902ef819a7a5f149445bf1775ee8c47c":"0x3635c9adc5dea000000","0x28818e18b610001321b31df6fe7d2815cdadc9f5":"0x3635c9adc5dea00000","0x28868324337e11ba106cb481da962f3a8453808d":"0x6c6b935b8bbd400000","0x28904bb7c4302943b709b14d7970e42b8324e1a1":"0x21f97846a072d7e0000","0x2895e80999d406ad592e2b262737d35f7db4b699":"0x692ae8897081d00000","0x28967280214e218a120c5dda37041b111ea36d74":"0xad78ebc5ac6200000","0x28a3da09a8194819ae199f2e6d9d1304817e28a5":"0x6c6b935b8bbd400000","0x28ab165ffb69eda0c549ae38e9826f5f7f92f853":"0x464df6d7c844590000","0x28b77585cb3d55a199ab291d3a18c68fe89a848a":"0x6a4076cf7995a00000","0x28d4ebf41e3d3c451e943bdd7e1f175fae932a3d":"0x14542ba12a337c00000","0x28d7e5866f1d85fd1ceb32bfbe1dfc36db434566":"0x1864231c610351c0000","0x28d8c35fb7eea622582135e3ad47a227c9a663bd":"0xfc936392801c0000","0x28e4af30cd93f686a122ad7bb19f8a8785eee342":"0x71e53b706cc7b40000","0x28eaea78cd4d95faecfb68836eafe83520f3bbb7":"0xad78ebc5ac6200000","0x28efae6356509edface89fc61a7fdcdb39eea8e5":"0x121ea68c114e5100000","0x28fa2580f9ebe420f3e5eefdd371638e3b7af499":"0x14542ba12a337c00000","0x2901f8077f34190bb47a8e227fa29b30ce113b31":"0x56bc75e2d63100000","0x2905b192e83ce659aa355b9d0c204e3e95f9bb9a":"0x75235c1d00393e8000","0x290a56d41f6e9efbdcea0342e0b7929a8cdfcb05":"0x12a5f58168ee600000","0x2915624bcb679137b8dae9ab57d11b4905eaee4b":"0x1158e460913d00000","0x291efe0081dce8c14799f7b2a43619c0c3b3fc1f":"0x410d586a20a4c00000","0x291f929ca59b54f8443e3d4d75d95dee243cef78":"0x1b1a089237073d0000","0x29298ccbdff689f87fe41aa6e98fdfb53deaf37a":"0x4315c32d71a9e600000","0x292f228b0a94748c8eec612d246f989363e08f08":"0xa076407d3f7440000","0x293384c42b6f8f2905ce52b7205c2274376c612b":"0x4be4e7267b6ae00000","0x2934c0df7bbc172b6c186b0b72547ace8bf75454":"0x340aad21b3b700000","0x293c2306df3604ae4fda0d207aba736f67de0792":"0xad78ebc5ac6200000","0x2949fd1def5c76a286b3872424809a07db3966f3":"0x11bd906daa0c9438000","0x294f494b3f2e143c2ffc9738cbfd9501850b874e":"0x796e3ea3f8ab000000","0x2955c357fd8f75d5159a3dfa69c5b87a359dea8c":"0x6c6b935b8bbd400000","0x2961fb391c61957cb5c9e407dda29338d3b92c80":"0x3634fb9f1489a70000","0x29681d9912ddd07eaabb88d05d90f766e862417d":"0x3635c9adc5dea00000","0x296b71c0015819c242a7861e6ff7eded8a5f71e3":"0x6c68ccd09b022c0000","0x296d66b521571a4e4103a7f562c511e6aa732d81":"0x243d4d18229ca20000","0x296f00de1dc3bb01d47a8ccd1e5d1dd9a1eb7791":"0x3635c9adc5dea00000","0x297385e88634465685c231a314a0d5dcd146af01":"0x54069233bf7f780000","0x29763dd6da9a7c161173888321eba6b63c8fb845":"0x11c7ea162e78200000","0x2979741174a8c1ea0b7f9edf658177859417f512":"0x1901966c8496838000","0x297a88921b5fca10e5bb9ded60025437ae221694":"0xad78ebc5ac6200000","0x297d5dbe222f2fb52531acbd0b013dc446ac7368":"0x43c33c1937564800000","0x29824e94cc4348bc963279dcdf47391715324cd3":"0x692ae8897081d00000","0x2982d76a15f847dd41f1922af368fe678d0e681e":"0x56bc75e2d63100000","0x298887bab57c5ba4f0615229d7525fa113b7ea89":"0x22b1c8c1227a00000","0x298ec76b440d8807b3f78b5f90979bee42ed43db":"0x65a4da25d3016c00000","0x299368609042a858d1ecdf1fc0ada5eaceca29cf":"0x6c6b935b8bbd400000","0x299e0bca55e069de8504e89aca6eca21d38a9a5d":"0x302379bf2ca2e0000","0x29ac2b458454a36c7e96c73a8667222a12242c71":"0xd8d726b7177a800000","0x29adcf83b6b20ac6a434abb1993cbd05c60ea2e4":"0x21e19e0c9bab2400000","0x29aef48de8c9fbad4b9e4ca970797a5533eb722d":"0x21e19e0c9bab2400000","0x29b3f561ee7a6e25941e98a5325b78adc79785f3":"0x56bc75e2d63100000","0x29bdc4f28de0180f433c2694eb74f5504ce94337":"0x6c6b935b8bbd400000","0x29cc804d922be91f5909f348b0aaa5d21b607830":"0xd8d726b7177a800000","0x29da3e35b23bb1f72f8e2258cf7f553359d24bac":"0x43c33c1937564800000","0x29e67990e1b6d52e1055ffe049c53195a81542cf":"0x43c33c1937564800000","0x29eaae82761762f4d2db53a9c68b0f6b0b6d4e66":"0x6c6b935b8bbd400000","0x29eb7eefdae9feb449c63ff5f279d67510eb1422":"0x10d3aa536e2940000","0x29f0edc60338e7112085a1d114da8c42ce8f55d6":"0xa05a7f0fd825780000","0x29f8fba4c30772b057edbbe62ae7420c390572e1":"0x3635c9adc5dea00000","0x29f9286c0e738d1721a691c6b95ab3d9a797ede8":"0x2a5a058fc295ed000000","0x2a085e25b64862f5e68d768e2b0f7a8529858eee":"0x6b883acd5766cd0000","0x2a2ab6b74c7af1d9476bb5bcb4524797bedc3552":"0x3635c9adc5dea00000","0x2a39190a4fde83dfb3ddcb4c5fbb83ac6c49755c":"0x3635c9adc5dea00000","0x2a400dff8594de7228b4fd15c32322b75bb87da8":"0x531a17f607a2d0000","0x2a44a7218fe44d65a1b4b7a7d9b1c2c52c8c3e34":"0xd2d06c305a1eb578000","0x2a46d353777176ff8e83ffa8001f4f70f9733aa5":"0x5bf0ba6634f680000","0x2a595f16eee4cb0c17d9a2d939b3c10f6c677243":"0x3ba1910bf341b00000","0x2a59e47ea5d8f0e7c028a3e8e093a49c1b50b9a3":"0x6c6b935b8bbd400000","0x2a5ba9e34cd58da54c9a2712663a3be274c8e47b":"0xaadec983fcff40000","0x2a5e3a40d2cd0325766de73a3d671896b362c73b":"0x152d02c7e14af6800000","0x2a63590efe9986c3fee09b0a0a338b15bed91f21":"0x15e1c4e05ee26d00000","0x2a67660a1368efcd626ef36b2b1b601980941c05":"0x73f75d1a085ba0000","0x2a742b8910941e0932830a1d9692cfd28494cf40":"0x1b1ab319f5ec750000","0x2a746cd44027af3ebd37c378c85ef7f754ab5f28":"0x155bd9307f9fe80000","0x2a81d27cb6d4770ff4f3c4a3ba18e5e57f07517c":"0x6c6b935b8bbd400000","0x2a91a9fed41b7d0e5cd2d83158d3e8a41a9a2d71":"0x692ae8897081d00000","0x2a9c57fe7b6b138a920d676f3c76b6c2a0eef699":"0x1fd933494aa5fe00000","0x2a9c96c19151ffcbe29a4616d0c52b3933b4659f":"0x3c1379b8765e18000","0x2aa192777ca5b978b6b2c2ff800ac1860f753f47":"0x12290f15180bdc0000","0x2aaa35274d742546670b7426264521032af4f4c3":"0x21e19e0c9bab2400000","0x2aaea1f1046f30f109faec1c63ef5c7594eb08da":"0xd8d726b7177a800000","0x2ab97e8d59eee648ab6caf8696f89937143864d6":"0xcf152640c5c8300000","0x2abce1808940cd4ef5b5e05285f82df7a9ab5e03":"0x21342520d5fec200000","0x2abdf1a637ef6c42a7e2fe217773d677e804ebdd":"0x10f0cf064dd59200000","0x2ac1f8d7bf721f3cfe74d20fea9b87a28aaa982c":"0x8ba52e6fc45e40000","0x2acc9c1a32240b4d5b2f777a2ea052b42fc1271c":"0x8d807ee14d836100000","0x2ad6c9d10c261819a1a0ca2c48d8c7b2a71728df":"0x3635c9adc5dea00000","0x2ae53866fc2d14d572ab73b4a065a1188267f527":"0x1b1ae4d6e2ef5000000","0x2ae73a79aea0278533accf21070922b1613f8f32":"0xa7e94bbeae701a8000","0x2ae82dab92a66389eea1abb901d1d57f5a7cca0b":"0x6c6b935b8bbd400000","0x2aec809df9325b9f483996e99f7331097f08aa0e":"0xd8d726b7177a800000","0x2aed2ce531c056b0097efc3c6de10c4762004ed9":"0x2356953ab7ddc380000","0x2afb058c3d31032b353bf24f09ae20d54de57dbe":"0x3ba1910bf341b00000","0x2b0362633614bfcb583569438ecc4ea57b1d337e":"0x43c33c1937564800000","0x2b101e822cd962962a06800a2c08d3b15d82b735":"0x83d6c7aab63600000","0x2b129c26b75dde127f8320bd0f63410c92a9f876":"0x77432217e683600000","0x2b241f037337eb4acc61849bd272ac133f7cdf4b":"0x500b6bca962ab8400000","0x2b3a68db6b0cae8a7c7a476bdfcfbd6205e10687":"0x821ab0d44149800000","0x2b3cf97311ff30f460945a9d8099f4a88e26d456":"0x6c6b935b8bbd400000","0x2b49fba29830360fcdb6da23bbfea5c0bbac5281":"0x1158e460913d00000","0x2b4f4507bb6b9817942ce433781b708fbcd166fd":"0xfc936392801c0000","0x2b5016e2457387956562587115aa8759d8695fdf":"0x2a5a058fc295ed000000","0x2b5c60e84535eeb4d580de127a12eb2677ccb392":"0x43c33c1937564800000","0x2b5ced9987c0765f900e49cf9da2d9f9c1138855":"0x15af1d78b58c400000","0x2b5f4b3f1e11707a227aa5e69fa49dded33fb321":"0x14542ba12a337c00000","0x2b68306ba7f8daaf73f4c644ef7d2743c0f26856":"0x2ee182ca17ddd00000","0x2b6ed29a95753c3ad948348e3e7b1a251080ffb9":"0x34f086f3b33b68400000","0x2b701d16c0d3cc1e4cd85445e6ad02eea4ac012d":"0x2086ac351052600000","0x2b717cd432a323a4659039848d3b87de26fc9546":"0x69e10de76676d0800000","0x2b74c373d04bfb0fd60a18a01a88fbe84770e58c":"0x22b1c8c1227a00000","0x2b77a4d88c0d56a3dbe3bae04a05f4fcd1b757e1":"0x1043561a8829300000","0x2b8488bd2d3c197a3d26151815b5a798d27168dc":"0x16a1f9f5fd7d9600000","0x2b8a0dee5cb0e1e97e15cfca6e19ad21f995efad":"0x1b55438d9a249b0000","0x2b8fe4166e23d11963c0932b8ade8e0145ea0770":"0x92896529baddc880000","0x2b99b42e4f42619ee36baa7e4af2d65eacfcba35":"0x878678326eac9000000","0x2bab0fbe28d58420b52036770a12f9952aea6911":"0xcf152640c5c8300000","0x2bade91d154517620fd4b439ac97157a4102a9f7":"0xd8d726b7177a800000","0x2baf8d6e221174124820ee492b9459ec4fadafbb":"0x6c6b935b8bbd400000","0x2bafbf9e9ed2c219f7f2791374e7d05cb06777e7":"0xbed1d0263d9f00000","0x2bb366b9edcb0da680f0e10b3b6e28748190d6c3":"0x13a62d7b57640640000","0x2bb6f578adfbe7b2a116b3554facf9969813c319":"0x19127a1391ea2a00000","0x2bbe62eac80ca7f4d6fdee7e7d8e28b63acf770e":"0x81e32df972abf00000","0x2bbe672a1857508f630f2a5edb563d9e9de92815":"0x6c6b935b8bbd400000","0x2bc429d618a66a4cf82dbb2d824e9356effa126a":"0x6c6acc67d7b1d40000","0x2bd252e0d732ff1d7c78f0a02e6cb25423cf1b1a":"0x90f534608a72880000","0x2bdd03bebbee273b6ca1059b34999a5bbd61bb79":"0x1158e460913d00000","0x2c04115c3e52961b0dc0b0bf31fba4546f5966fd":"0xad78ebc5ac6200000","0x2c06dd922b61514aafedd84488c0c28e6dcf0e99":"0x152d02c7e14af6800000","0x2c0cc3f951482cc8a2925815684eb9f94e060200":"0x14542ba12a337c00000","0x2c0ee134d8b36145b47beee7af8d2738dbda08e8":"0xae56f730e6d840000","0x2c0f5b9df43625798e7e03c1a5fd6a6d091af82b":"0x1b0fcaab200300000","0x2c128c95d957215101f043dd8fc582456d41016d":"0x2d43f3ebfafb2c0000","0x2c1800f35fa02d3eb6ff5b25285f5e4add13b38d":"0x3122d3adafde100000","0x2c1c19114e3d6de27851484b8d2715e50f8a1065":"0x56bc75e2d63100000","0x2c1cc6e18c152488ba11c2cc1bcefa2df306abd1":"0x5a87e7d7f5f6580000","0x2c1df8a76f48f6b54bcf9caf56f0ee1cf57ab33d":"0x2247f750089da580000","0x2c2147947ae33fb098b489a5c16bfff9abcd4e2a":"0xad78ebc5ac6200000","0x2c234f505ca8dcc77d9b7e01d257c318cc19396d":"0x56bc75e2d63100000","0x2c2428e4a66974edc822d5dbfb241b2728075158":"0x6c6b935b8bbd400000","0x2c2d15ff39561c1b72eda1cc027ffef23743a144":"0xd480ed9ef32b400000","0x2c2db28c3309375eea3c6d72cd6d0eec145afcc0":"0x6c6b935b8bbd400000","0x2c424ee47f583cdce07ae318b6fad462381d4d2b":"0xd8d726b7177a800000","0x2c4b470307a059854055d91ec3794d80b53d0f4a":"0x43c33c1937564800000","0x2c52c984102ee0cd3e31821b84d408930efa1ac7":"0x6c6b935b8bbd400000","0x2c5a2d0abda03bbe215781b4ff296c8c61bdbaf6":"0x1a8e56f48c0228000","0x2c5b7d7b195a371bf9abddb42fe04f2f1d9a9910":"0xad78ebc5ac6200000","0x2c5df866666a194b26cebb407e4a1fd73e208d5e":"0x3635c9adc5dea00000","0x2c603ff0fe93616c43573ef279bfea40888d6ae7":"0x100f4b6d66757900000","0x2c6846a1aa999a2246a287056000ba4dcba8e63d":"0x21f2f6f0fc3c6100000","0x2c6afcd4037c1ed14fa74ff6758e0945a185a8e8":"0xf43fc2c04ee00000","0x2c6b699d9ead349f067f45711a074a641db6a897":"0x1158e460913d00000","0x2c6f5c124cc789f8bb398e3f889751bc4b602d9e":"0x159f20bed00f00000","0x2c83aeb02fcf067d65a47082fd977833ab1cec91":"0x8273823258ac00000","0x2c89f5fdca3d155409b638b98a742e55eb4652b7":"0x14dbb2195ca228900000","0x2c964849b1f69cc7cea4442538ed87fdf16cfc8f":"0x6c6b935b8bbd400000","0x2c9fa72c95f37d08e9a36009e7a4b07f29bad41a":"0xdf6eb0b2d3ca0000","0x2caf6bf4ec7d5a19c5e0897a5eeb011dcece4210":"0x7934835a031160000","0x2cb4c3c16bb1c55e7c6b7a19b127a1ac9390cc09":"0xb82794a9244f0c8000","0x2cb5495a505336c2465410d1cae095b8e1ba5cdd":"0x43c33c1937564800000","0x2cb615073a40dcdb99faa848572e987b3b056efb":"0x2b58addb89a2580000","0x2cba6d5d0dc204ea8a25ada2e26f5675bd5f2fdc":"0x4823ef7ddb9af38000","0x2cbb0c73df91b91740b6693b774a7d05177e8e58":"0x6449e84e47a8a80000","0x2ccb66494d0af689abf9483d365d782444e7dead":"0x3635c9adc5dea00000","0x2ccc1f1cb5f4a8002e186b20885d9dbc030c0894":"0x6c6b935b8bbd400000","0x2ccf80e21898125eb4e807cd82e09b9d28592f6e":"0x6c6b935b8bbd400000","0x2cd19694d1926a0fa9189edebafc671cf1b2caa5":"0x3635c9adc5dea00000","0x2cd39334ac7eac797257abe3736195f5b4b5ce0f":"0x56b47785e37260000","0x2cd79eb52027b12c18828e3eaab2969bfcd287e9":"0x1158e460913d00000","0x2cd87866568dd81ad47d9d3ad0846e5a65507373":"0x15af1d78b58c400000","0x2cdb3944650616e47cb182e060322fa1487978ce":"0x62a992e53a0af00000","0x2ce11a92fad024ff2b3e87e3b542e6c60dcbd996":"0xd8d726b7177a800000","0x2d0326b23f0409c0c0e9236863a133075a94ba18":"0xb679be75be6ae0000","0x2d0dec51a6e87330a6a8fa2a0f65d88d4abcdf73":"0xa076407d3f7440000","0x2d23766b6f6b05737dad80a419c40eda4d77103e":"0xcf152640c5c8300000","0x2d2b032359b363964fc11a518263bfd05431e867":"0x81c1df7629e700000","0x2d3480bf0865074a72c7759ee5137b4d70c51ce9":"0xad78ebc5ac6200000","0x2d35a9df62757f7ffad1049afb06ca4afc464c51":"0x1158e460913d00000","0x2d40558b06f90a3923145592123b6774e46e31f4":"0x3635c9adc5dea00000","0x2d426912d059fad9740b2e390a2eeac0546ff01b":"0x4be4e7267b6ae00000","0x2d532df4c63911d1ce91f6d1fcbff7960f78a885":"0x5a85968a5878da8000","0x2d5391e938b34858cf965b840531d5efda410b09":"0x4be4e7267b6ae00000","0x2d5b42fc59ebda0dfd66ae914bc28c1b0a6ef83a":"0x2bc8b59fdcd836638000","0x2d5d7335acb0362b47dfa3a8a4d3f5949544d380":"0xad78ebc5ac6200000","0x2d61bfc56873923c2b00095dc3eaa0f590d8ae0f":"0x46566dff8ce55600000","0x2d6511fd7a3800b26854c7ec39c0dcb5f4c4e8e8":"0x15adddba2f9e770000","0x2d7d5c40ddafc450b04a74a4dabc2bb5d665002e":"0x6c6b935b8bbd400000","0x2d89a8006a4f137a20dc2bec46fe2eb312ea9654":"0xad78ebc5ac6200000","0x2d8c52329f38d2a2fa9cbaf5c583daf1490bb11c":"0x1158e460913d00000","0x2d8e061892a5dcce21966ae1bb0788fd3e8ba059":"0xd8e5ce617f2d50000","0x2d8e5bb8d3521695c77e7c834e0291bfacee7408":"0x6acb3df27e1f880000","0x2d90b415a38e2e19cdd02ff3ad81a97af7cbf672":"0x5f3c7f64131e40000","0x2d9bad6f1ee02a70f1f13def5cccb27a9a274031":"0x61093d7c2c6d380000","0x2d9c5fecd2b44fbb6a1ec732ea059f4f1f9d2b5c":"0x36ca32661d1aa70000","0x2da617695009cc57d26ad490b32a5dfbeb934e5e":"0x43c33c1937564800000","0x2da76b7c39b420e388ba2c1020b0856b0270648a":"0x6c6b935b8bbd400000","0x2dc79d6e7f55bce2e2d0c02ad07ceca8bb529354":"0x55a6e79ccd1d300000","0x2dca0e449ab646dbdfd393a96662960bcab5ae1e":"0x878678326eac9000000","0x2dd325fdffb97b19995284afa5abdb574a1df16a":"0x1b1ae4d6e2ef500000","0x2dd578f7407dfbd548d05e95ccc39c485429626a":"0xe3aeb5737240a00000","0x2dd8eeef87194abc2ce7585da1e35b7cea780cb7":"0x3635c6204739d98000","0x2ddf40905769bcc426cb2c2938ffe077e1e89d98":"0xa2a15d09519be00000","0x2de0964400c282bdd78a919c6bf77c6b5f796179":"0xad78ebc5ac6200000","0x2de31afd189a13a76ff6fe73ead9f74bb5c4a629":"0x14542ba12a337c00000","0x2dec98329d1f96c3a59caa7981755452d4da49d5":"0xad78ebc5ac6200000","0x2dee90a28f192d676a8773232b56f18f239e2fad":"0x3efa7e747b6d1ad0000","0x2e0880a34596230720f05ac8f065af8681dcb6c2":"0x152d02c7e14af6800000","0x2e0c57b47150f95aa6a7e16ab9b1cbf54328979a":"0x56bc75e2d63100000","0x2e10910ba6e0bc17e055556614cb87090f4d7e5b":"0xad78ebc5ac6200000","0x2e24b597873bb141bdb237ea8a5ab747799af02d":"0x43c33c1937564800000","0x2e2810dee44ae4dff3d86342ab126657d653c336":"0xad78ebc5ac6200000","0x2e2cbd7ad82547b4f5ff8b3ab56f942a6445a3b0":"0xad78ebc5ac6200000","0x2e2d7ea66b9f47d8cc52c01c52b6e191bc7d4786":"0xd8d4602c26bf6c0000","0x2e439348df8a4277b22a768457d1158e97c40904":"0x2a1e9ff26fbf410000","0x2e46fcee6a3bb145b594a243a3913fce5dad6fba":"0x21e19e0c9bab2400000","0x2e47f287f498233713850d3126823cc67dcee255":"0xca9d9ea558b40000","0x2e4ee1ae996aa0a1d92428d06652a6bea6d2d15d":"0x6c6b935b8bbd400000","0x2e52912bc10ea39d54e293f7aed6b99a0f4c73be":"0x15af1d78b58c400000","0x2e619f57abc1e987aa936ae3a2264962e7eb2d9a":"0x28fb9b8a8a53500000","0x2e64a8d71111a22f4c5de1e039b336f68d398a7c":"0x6c6b935b8bbd400000","0x2e6933543d4f2cc00b5350bd8068ba9243d6beb0":"0x6c6b935b8bbd400000","0x2e7e05e29edda7e4ae25c5173543efd71f6d3d80":"0x14542ba12a337c00000","0x2e7f465520ec35cc23d68e75651bb6689544a196":"0x38ec5b721a1a268000","0x2e8eb30a716e5fe15c74233e039bfb1106e81d12":"0x56bc75e2d63100000","0x2e9824b5c132111bca24ddfba7e575a5cd7296c1":"0x3a484516e6d7ffe0000","0x2ea5fee63f337a376e4b918ea82148f94d48a626":"0x650f8e0dd293c50000","0x2eaf4e2a46b789ccc288c8d1d9294e3fb0853896":"0x6c6b935b8bbd400000","0x2eaff9f8f8113064d3957ac6d6e11eee42c8195d":"0x6acb3df27e1f880000","0x2eba0c6ee5a1145c1c573984963a605d880a7a20":"0x1b1ae4d6e2ef500000","0x2ec95822eb887bc113b4712a4dfd7f13b097b5e7":"0x3635c9adc5dea00000","0x2eca6a3c5d9f449d0956bd43fa7b4d7be8435958":"0x6c6bda69709cc20000","0x2ecac504b233866eb5a4a99e7bd2901359e43b3d":"0x43c33c1937564800000","0x2eebf59432b52892f9380bd140aa99dcf8ad0c0f":"0x83d6c7aab63600000","0x2eeed50471a1a2bf53ee30b1232e6e9d80ef866d":"0x1158e460913d00000","0x2eef6b1417d7b10ecfc19b123a8a89e73e526c58":"0x2086ac351052600000","0x2ef869f0350b57d53478d701e3fee529bc911c75":"0x2b5e3af16b1880000","0x2ef9e465716acacfb8c8252fa8e7bc7969ebf6e4":"0x959eb1c0e4ae200000","0x2efc4c647dac6acac35577ad221758fef6616faa":"0x1b1ae4d6e2ef5000000","0x2f13657526b177cad547c3908c840eff647b45d9":"0x3f76849cf1ee2c8000","0x2f187d5a704d5a338c5b2876a090dce964284e29":"0xd8d726b7177a800000","0x2f2523cc834f0086052402626296675186a8e582":"0x3635c9adc5dea000000","0x2f282abbb6d4a3c3cd3b5ca812f7643e80305f06":"0x6449e84e47a8a80000","0x2f2bba1b1796821a766fce64b84f28ec68f15aea":"0x1158e460913d00000","0x2f315d9016e8ee5f536681202f9084b032544d4d":"0x383cd12b9e863c0000","0x2f4da753430fc09e73acbccdcde9da647f2b5d37":"0xad78ebc5ac6200000","0x2f5080b83f7e2dc0a1dd11b092ad042bff788f4c":"0xb4f8fb79231d2b8000","0x2f61efa5819d705f2b1e4ee754aeb8a819506a75":"0x4f2591f896a6500000","0x2f66bfbf2262efcc8d2bd0444fc5b0696298ff1e":"0x21ad935f79f76d00000","0x2f6dce1330c59ef921602154572d4d4bacbd048a":"0x3635c9adc5dea00000","0x2f7d3290851be5c6b4b43f7d4574329f61a792c3":"0x56bc75e2d63100000","0x2f853817afd3b8f3b86e9f60ee77b5d97773c0e3":"0x4eaeea44e368b90000","0x2fa491fb5920a6574ebd289f39c1b2430d2d9a6a":"0x6c6b935b8bbd400000","0x2fb566c94bbba4e3cb67cdda7d5fad7131539102":"0x6c6b935b8bbd400000","0x2fbb504a5dc527d3e3eb0085e2fc3c7dd538cb7a":"0x43c2b18aec3c0a8000","0x2fbc85798a583598b522166d6e9dda121d627dbc":"0xad78ebc5ac6200000","0x2fbcef3384d420e4bf61a0669990bc7054f1a5af":"0x6c6b935b8bbd400000","0x2fc82ef076932341264f617a0c80dd571e6ae939":"0x18424f5f0b1b4e00000","0x2fdd9b79df8df530ad63c20e62af431ae99216b8":"0x1236efcbcbb340000","0x2fe0023f5722650f3a8ac01009125e74e3f82e9b":"0xa2a15d09519be00000","0x2fe0cc424b53a31f0916be08ec81c50bf8eab0c1":"0x2086ac351052600000","0x2fe13a8d0785de8758a5e41876c36e916cf75074":"0xd8d726b7177a800000","0x2fea1b2f834f02fc54333f8a809f0438e5870aa9":"0x11854d0f9cee40000","0x2fee36a49ee50ecf716f1047915646779f8ba03f":"0x394222c4da86d70000","0x2fef81478a4b2e8098db5ff387ba2153f4e22b79":"0x3627e8f712373c0000","0x2ff160c44f72a299b5ec2d71e28ce5446d2fcbaf":"0x138400eca364a00000","0x2ff1ca55fd9cec1b1fe9f0a9abb74c513c1e2aaa":"0xa2a15d09519be00000","0x2ff5cab12c0d957fd333f382eeb75107a64cb8e8":"0x21e19e0c9bab2400000","0x2ff830cf55fb00d5a0e03514fecd44314bd6d9f1":"0x21e19e0c9bab2400000","0x2ffe93ec1a5636e9ee34af70dff52682e6ff7079":"0x6c6b935b8bbd400000","0x30037988702671acbe892c03fe5788aa98af287a":"0x97c9ce4cf6d5c00000","0x30248d58e414b20fed3a6c482b59d9d8f5a4b7e2":"0x340aad21b3b700000","0x303139bc596403d5d3931f774c66c4ba467454db":"0x5c25e14aea283f0000","0x30380087786965149e81423b15e313ba32c5c783":"0xfc936392801c0000","0x303a30ac4286ae17cf483dad7b870c6bd64d7b4a":"0x1b1ae4d6e2ef500000","0x303fbaebbe46b35b6e5b74946a5f99bc1585cae7":"0x2f9ac0695f5bba0000","0x3041445a33ba158741160d9c344eb88e5c306f94":"0x340aad21b3b700000","0x30480164bcd84974ebc0d90c9b9afab626cd1c73":"0x2b5e3af16b18800000","0x304ec69a74545721d7316aef4dcfb41ac59ee2f0":"0xad78ebc5ac6200000","0x30511832918d8034a7bee72ef2bfee440ecbbcf6":"0x368c8623a8b4d100000","0x30513fca9f36fd788cfea7a340e86df98294a244":"0x183b5f03b1479c0000","0x3055efd26029e0d11b930df4f53b162c8c3fd2ce":"0x1b1a089237073d0000","0x305d26c10bdc103f6b9c21272eb7cb2d9108c47e":"0x1b1ae4d6e2ef500000","0x305f78d618b990b4295bac8a2dfa262884f804ea":"0xd8d726b7177a800000","0x3064899a963c4779cbf613cd6980846af1e6ec65":"0x17b773ce6e5df0a0000","0x30730466b8eb6dc90d5496aa76a3472d7dbe0bbe":"0x6c68ccd09b022c0000","0x30742ccdf4abbcd005681f8159345c9e79054b1a":"0x243d4d18229ca20000","0x3083ef0ed4c4401196774a95cf4edc83edc1484f":"0x23ffb7ed6565d6400000","0x308dd21cebe755126704b48c0f0dc234c60ba9b1":"0xad78ebc5ac6200000","0x3090f8130ec44466afadb36ed3c926133963677b":"0xd8d726b7177a800000","0x309544b6232c3dd737f945a03193d19b5f3f65b9":"0x3af342f67ef6c80000","0x3096dca34108085bcf04ae72b94574a13e1a3e1d":"0xad78ebc5ac6200000","0x3098b65db93ecacaf7353c48808390a223d57684":"0x186484cf7bb6a48000","0x30a9da72574c51e7ee0904ba1f73a6b7b83b9b9d":"0x11854d0f9cee40000","0x30acd858875fa24eef0d572fc7d62aad0ebddc35":"0x15af1d78b58c400000","0x30b66150f1a63457023fdd45d0cc6cb54e0c0f06":"0x3635c9adc5dea00000","0x30bb4357cd6910c86d2238bf727cbe8156680e62":"0x56bf91b1a65eb0000","0x30bf61b2d877fe10635126326fa189e4b0b1c3b0":"0x37b48985a5d7e60000","0x30c01142907acb1565f70438b9980ae731818738":"0x6c6b935b8bbd400000","0x30c26a8e971baa1855d633ba703f028cc7873140":"0x21e19e0c9bab2400000","0x30db6b9b107e62102f434a9dd0960c2021f5ce4c":"0x2083179b6e42530000","0x30e33358fc21c85006e40f32357dc8895940aaf0":"0x678a932062e4180000","0x30e60900cacc7203f314dc604347255167fc2a0f":"0x6c6b935b8bbd400000","0x30e789b3d2465e946e6210fa5b35de4e8c93085f":"0x6c6b935b8bbd400000","0x30e9698cf1e08a9d048bd8d8048f28be7ed9409f":"0x16a6502f15a1e540000","0x30e9d5a0088f1ddb2fd380e2a049192266c51cbf":"0xaacacd9b9e22b0000","0x30eac740e4f02cb56eef0526e5d300322600d03e":"0x6acb3df27e1f880000","0x30ec9392244a2108c987bc5cdde0ed9f837a817b":"0x549925f6c9c5250000","0x30ed11b77bc17e5e6694c8bc5b6e4798f68d9ca7":"0x1e6fb3421fe0299e0000","0x30f7d025d16f7bee105580486f9f561c7bae3fef":"0x1b1ae4d6e2ef500000","0x30fbe5885f9fcce9ea5edb82ed4a1196dd259aed":"0x119e47f21381f400000","0x31047d703f63b93424fbbd6e2f1f9e74de13e709":"0x9a8166f7e6b2a78000","0x31313ffd635bf2f3324841a88c07ed146144ceeb":"0x6acb3df27e1f880000","0x3159e90c48a915904adfe292b22fa5fd5e72796b":"0x36afe98f2606100000","0x315db7439fa1d5b423afa7dd7198c1cf74c918bc":"0x2086ac351052600000","0x315ef2da620fd330d12ee55de5f329a696e0a968":"0x821ab0d4414980000","0x316e92a91bbda68b9e2f98b3c048934e3cc0b416":"0x6c6b935b8bbd400000","0x316eb4e47df71b42e16d6fe46825b7327baf3124":"0xd8d726b7177a800000","0x3171877e9d820cc618fc0919b29efd333fda4934":"0x3635c9adc5dea00000","0x317cf4a23cb191cdc56312c29d15e210b3b9b784":"0x7ce66c50e28400000","0x318b2ea5f0aaa879c4d5e548ac9d92a0c67487b7":"0xad78ebc5ac6200000","0x318c76ecfd8af68d70555352e1f601e35988042d":"0x1b31192e68c7f00000","0x318f1f8bd220b0558b95fb33100ffdbb640d7ca6":"0xd8d726b7177a800000","0x31aa3b1ebe8c4dbcb6a708b1d74831e60e497660":"0x15af1d78b58c400000","0x31ab088966ecc7229258f6098fce68cf39b38485":"0x3635c9adc5dea00000","0x31ad4d9946ef09d8e988d946b1227f9141901736":"0x4d853c8f89089800000","0x31b43b015d0081643c6cda46a7073a6dfdbca825":"0xa97916520cd18e80000","0x31ccc616b3118268e75d9ab8996c8858ebd7f3c3":"0x15ae0f771ca1520000","0x31d81d526c195e3f10b5c6db52b5e59afbe0a995":"0xe4fbc69449f200000","0x31e9c00f0c206a4e4e7e0522170dc81e88f3eb70":"0x918ddc3a42a3d40000","0x31ea12d49a35a740780ddeeaece84c0835b26270":"0xad78ebc5ac6200000","0x31ea6eab19d00764e9a95e183f2b1b22fc7dc40f":"0x1158e460913d00000","0x31eb123c95c82bf685ace7a75a1881a289efca10":"0x31e009607371bd0000","0x31ed858788bda4d5270992221cc04206ec62610d":"0x3fc0474948f3600000","0x31f006f3494ed6c16eb92aaf9044fa8abb5fd5a3":"0x1b1ae4d6e2ef500000","0x3201259caf734ad7581c561051ba0bca7fd6946b":"0x261dd1ce2f2088800000","0x32034e8581d9484e8af42a28df190132ec29c466":"0xbb9125542263900000","0x322021022678a0166d204b3aaa7ad4ec4b88b7d0":"0x15af1d78b58c400000","0x3225c1ca5f2a9c88156bb7d9cdc44a326653c214":"0x15af1d78b58c400000","0x322788b5e29bf4f5f55ae1ddb32085fda91b8ebe":"0xad78ebc5ac6200000","0x322d6f9a140d213f4c80cd051afe25c620bf4c7d":"0x1158e460913d00000","0x322e5c43b0f524389655a9b3ff24f2d4db3da10f":"0xfc13b69b3e7e680000","0x323486ca64b375474fb2b759a9e7a135859bd9f6":"0x15af1d78b58c400000","0x323749a3b971959e46c8b4822dcafaf7aaf9bd6e":"0x11671a5b245700000","0x323aad41df4b6fc8fece8c93958aa901fa680843":"0x34957444b840e80000","0x323b3cfe3ee62bbde2a261e53cb3ecc05810f2c6":"0x2eb8eb1a172dcb80000","0x323fca5ed77f699f9d9930f5ceeff8e56f59f03c":"0x487a9a304539440000","0x32485c818728c197fea487fbb6e829159eba8370":"0x3921b413bc4ec08000","0x3250e3e858c26adeccadf36a5663c22aa84c4170":"0x10f0cf064dd59200000","0x3259bd2fddfbbc6fbad3b6e874f0bbc02cda18b5":"0x2846056495b0d188000","0x3275496fd4dd8931fd69fb0a0b04c4d1ff879ef5":"0x182d7e4cfda0380000","0x327bb49e754f6fb4f733c6e06f3989b4f65d4bee":"0x1158e460913d00000","0x3282791d6fd713f1e94f4bfd565eaa78b3a0599d":"0x487a9a304539440000","0x3283eb7f9137dd39bed55ffe6b8dc845f3e1a079":"0x3970ae92155780000","0x32860997d730b2d83b73241a25d3667d51c908ef":"0x1b1a089237073d0000","0x3286d1bc657a312c8847d93cb3cb7950f2b0c6e3":"0x43c33c1937564800000","0x32a20d028e2c6218b9d95b445c771524636a22ef":"0x202fefbf2d7c2f00000","0x32a70691255c9fc9791a4f75c8b81f388e0a2503":"0x35659ef93f0fc40000","0x32b7feebc5c59bf65e861c4c0be42a7611a5541a":"0x77e9aaa8525c100000","0x32ba9a7d0423e03a525fe2ebeb661d2085778bd8":"0x43c33c1937564800000","0x32bb2e9693e4e085344d2f0dbd46a283e3a087fd":"0x15af1d78b58c400000","0x32c2fde2b6aabb80e5aea2b949a217f3cb092283":"0x1306160afdf20378000","0x32d950d5e93ea1d5b48db4714f867b0320b31c0f":"0x3708baed3d68900000","0x32dbb6716c54e83165829a4abb36757849b6e47d":"0x3635c9adc5dea00000","0x32eb64be1b5dede408c6bdefbe6e405c16b7ed02":"0x6acb3df27e1f880000","0x32ef5cdc671df5562a901aee5db716b9be76dcf6":"0x6c6b935b8bbd400000","0x32f29e8727a74c6b4301e3ffff0687c1b870dae9":"0x3635c9adc5dea00000","0x32fa0e86cd087dd68d693190f32d93310909ed53":"0xd8d726b7177a800000","0x32fbeed6f626fcdfd51acafb730b9eeff612f564":"0x6c6b935b8bbd400000","0x3300fb149aded65bcba6c04e9cd6b7a03b893bb1":"0xfc936392801c0000","0x3301d9ca2f3bfe026279cd6819f79a293d98156e":"0xa968163f0a57b400000","0x3308b03466c27a17dfe1aafceb81e16d2934566f":"0x39992648a23c8a00000","0x331a1c26cc6994cdd3c14bece276ffff4b9df77c":"0xfa7aeddf4f068000","0x3326b88de806184454c40b27f309d9dd6dcfb978":"0x3ca5c66d9bc44300000","0x3329eb3baf4345d600ced40e6e9975656f113742":"0x10f08eda8e555098000","0x33320dd90f2baa110dd334872a998f148426453c":"0x36356633ebd8ea0000","0x3336c3ef6e8b50ee90e037b164b7a8ea5faac65d":"0xec8a3a71c22540000","0x33380c6fff5acd2651309629db9a71bf3f20c5ba":"0x368c8623a8b4d100000","0x333ad1596401e05aea2d36ca47318ef4cd2cb3df":"0x9dc05cce28c2b80000","0x334340ee4b9cdc81f850a75116d50ee9b69825bf":"0x6c6b935b8bbd400000","0x33481e856ebed48ea708a27426ef28e867f57cd1":"0xad78ebc5ac6200000","0x33565ba9da2c03e778ce12294f081dfe81064d24":"0x3635c9adc5dea000000","0x33581cee233088c0860d944e0cf1ceabb8261c2e":"0xb98bc829a6f90000","0x335858f749f169cabcfe52b796e3c11ec47ea3c2":"0xad78ebc5ac6200000","0x335e22025b7a77c3a074c78b8e3dfe071341946e":"0x227ca730ab3f6ac0000","0x33629bd52f0e107bc071176c64df108f64777d49":"0x1cfdd7468216e8000","0x337b3bdf86d713dbd07b5dbfcc022b7a7b1946ae":"0xd7c198710e66b00000","0x337cfe1157a5c6912010dd561533791769c2b6a6":"0x3635c9adc5dea00000","0x33b336f5ba5edb7b1ccc7eb1a0d984c1231d0edc":"0x6c6b935b8bbd400000","0x33c407133b84b3ca4c3ded1f4658900c38101624":"0x97c9ce4cf6d5c00000","0x33d172ab075c51db1cd40a8ca8dbff0d93b843bb":"0x136780510d12de38000","0x33e9b71823952e1f66958c278fc28b1196a6c5a4":"0x56bc75e2d63100000","0x33ea6b7855e05b07ab80dab1e14de9b649e99b6c":"0x1cd6fbad57dbd00000","0x33f15223310d44de8b6636685f3a4c3d9c5655a5":"0xd9462c6cb4b5a0000","0x33f4a6471eb1bca6a9f85b3b4872e10755c82be1":"0x6c6b935b8bbd400000","0x33fb577a4d214fe010d32cca7c3eeda63f87ceef":"0x3635c9adc5dea00000","0x33fd718f0b91b5cec88a5dc15eecf0ecefa4ef3d":"0x177224aa844c720000","0x341480cc8cb476f8d01ff30812e7c70e05afaf5d":"0x6c6b935b8bbd400000","0x34272d5e7574315dcae9abbd317bac90289d4765":"0x62a992e53a0af00000","0x3430a16381f869f6ea5423915855e800883525a9":"0x3ca5c66d9bc44300000","0x34318625818ec13f11835ae97353ce377d6f590a":"0x52663ccab1e1c00000","0x34393c5d91b9de597203e75bac4309b5fa3d28c3":"0xa844a7424d9c80000","0x3439998b247cb4bf8bc80a6d2b3527f1dfe9a6d2":"0x796e3ea3f8ab00000","0x34437d1465640b136cb5841c3f934f9ba0b7097d":"0x960db77681e940000","0x344a8db086faed4efc37131b3a22b0782dad7095":"0x1b1ae4d6e2ef500000","0x34664d220fa7f37958024a3332d684bcc6d4c8bd":"0x21e19e0c9bab2400000","0x3466f67e39636c01f43b3a21a0e8529325c08624":"0x2db1167650acd80000","0x3485361ee6bf06ef6508ccd23d94641f814d3e2f":"0x6c6b935b8bbd400000","0x3485f621256433b98a4200dad857efe55937ec98":"0x6c6b935b8bbd400000","0x34958a46d30e30b273ecc6e5d358a212e5307e8c":"0x6c6b935b8bbd400000","0x3497dd66fd118071a78c2cb36e40b6651cc82598":"0x5f1016b5076d00000","0x349a816b17ab3d27bbc0ae0051f6a070be1ff29d":"0x21e19e0c9bab2400000","0x349d2c918fd09e2807318e66ce432909176bd50b":"0x3cb71f51fc55800000","0x34a0431fff5ead927f3c69649616dc6e97945f6f":"0x15af1d78b58c400000","0x34a85d6d243fb1dfb7d1d2d44f536e947a4cee9e":"0x43c33c1937564800000","0x34a901a69f036bcf9f7843c0ba01b426e8c3dc2b":"0xd8d726b7177a800000","0x34b454416e9fb4274e6addf853428a0198d62ee1":"0x161042779f1ffc0000","0x34c8e5f1330fcb4b14ca75cb2580a4b93d204e36":"0x6c6b935b8bbd400000","0x34e2849bea583ab0cc37975190f322b395055582":"0x1a5c5e857fdf2b20000","0x34fa7792bad8bbd7ff64056214a33eb6600c1ea8":"0x2b5e3af16b1880000","0x34ff26eb60a8d1a95a489fae136ee91d4e58084c":"0x2086ac351052600000","0x34ff582952ff24458f7b13d51f0b4f987022c1fe":"0x9806de3da6e9780000","0x35106ba94e8563d4b3cb3c5c692c10e604b7ced8":"0x6c6b935b8bbd400000","0x35145f620397c69cb8e00962961f0f4886643989":"0x14542ba12a337c00000","0x35147430c3106500e79fa2f502462e94703c23b1":"0x6c6acc67d7b1d40000","0x351787843505f8e4eff46566cce6a59f4d1c5fe7":"0x1f5718987664b480000","0x351f16e5e0735af56751b0e225b2421171394090":"0x2d4ca05e2b43ca80000","0x3524a000234ebaaf0789a134a2a417383ce5282a":"0x1317955947d8e2c0000","0x3526eece1a6bdc3ee7b400fe935b48463f31bed7":"0x477879b6d14300000","0x352a785f4a921632504ce5d015f83c49aa838d6d":"0xe9e7e0fb35b7780000","0x352d29a26e8a41818181746467f582e6e84012e0":"0x14542ba12a337c00000","0x352e77c861696ef96ad54934f894aa8ea35151dd":"0x3635c9adc5dea00000","0x352f25babf4a690673e35195efa8f79d05848aad":"0xe253c39be6e7dc00000","0x3536453322c1466cb905af5c335ca8db74bff1e6":"0x183b5f03b1479c0000","0x353dbec42f92b50f975129b93c4c997375f09073":"0x6c5db2a4d815dc0000","0x3540c7bd7a8442d5bee21a2180a1c4edff1649e0":"0x432eac4c6f05b98000","0x3549bd40bbbc2b30095cac8be2c07a0588e0aed6":"0x1158e460913d00000","0x3552a496eba67f12be6eedab360cd13661dc7480":"0x1043561a8829300000","0x3554947b7b947b0040da52ca180925c6d3b88ffe":"0x39fbae8d042dd0000","0x355c0c39f5d5700b41d375b3f17851dcd52401f9":"0xd7b3b7ba5abf4c0000","0x355ccfe0e77d557b971be1a558bc02df9eee0594":"0x5f5cb1afc865280000","0x3571cf7ad304ecaee595792f4bbfa484418549d6":"0x13bcd0d892d9e160000","0x3575c770668a9d179f1ef768c293f80166e2aa3d":"0x19b21248a3ef280000","0x357a02c0a9dfe287de447fb67a70ec5b62366647":"0x1731790534df20000","0x35855ec641ab9e081ed0c2a6dcd81354d0244a87":"0x4127abe993a7aa8000","0x3588895ac9fbafec012092dc05c0c302d90740fa":"0xa2a15d09519be00000","0x3599493ce65772cf93e98af1195ec0955dc98002":"0x5151590c67b3280000","0x35a08081799173e001cc5bd46a02406dc95d1787":"0x21e19e0c9bab2400000","0x35a549e8fd6c368d6dcca6d2e7d18e4db95f5284":"0x1b1a089237073d0000","0x35a6885083c899dabbf530ed6c12f4dd3a204cf5":"0xad78ebc5ac6200000","0x35aaa0465d1c260c420fa30e2629869fb6559207":"0x263781e0e087c80000","0x35ac1d3ed7464fa3db14e7729213ceaa378c095e":"0x52663ccab1e1c00000","0x35af040a0cc2337a76af288154c7561e1a233349":"0x3635c9adc5dea00000","0x35b03ea4245736f57b85d2eb79628f036ddcd705":"0xd8d726b7177a800000","0x35bd246865fab490ac087ac1f1d4f2c10d0cda03":"0x15af1d78b58c400000","0x35bf6688522f35467a7f75302314c02ba176800e":"0x3af418202d954e00000","0x35c8adc11125432b3b77acd64625fe58ebee9d66":"0x6c6b935b8bbd400000","0x35d2970f49dcc81ea9ee707e9c8a0ab2a8bb7463":"0x4e1003b28d92800000","0x35e096120deaa5c1ecb1645e2ccb8b4edbd9299a":"0x1b1ae4d6e2ef500000","0x35ea2163a38cdf9a123f82a5ec00258dae0bc767":"0xd8d726b7177a800000","0x35f1da127b83376f1b88c82a3359f67a5e67dd50":"0x678a932062e4180000","0x35f2949cf78bc219bb4f01907cf3b4b3d3865482":"0xfb5c86c92e4340000","0x35f5860149e4bbc04b8ac5b272be55ad1aca58e0":"0xad78ebc5ac6200000","0x3602458da86f6d6a9d9eb03daf97fe5619d442fa":"0x6c6b935b8bbd400000","0x3605372d93a9010988018f9f315d032ed1880fa1":"0x1b1bcf51896a7d0000","0x3616d448985f5d32aefa8b93a993e094bd854986":"0xb227f63be813c0000","0x3616fb46c81578c9c8eb4d3bf880451a88379d7d":"0xad78ebc5ac6200000","0x361c75931696bc3d427d93e76c77fd13b241f6f4":"0x1dc5d8fc266dd60000","0x361d9ed80b5bd27cf9f1226f26753258ee5f9b3f":"0xbf6914ba7d72c20000","0x361f3ba9ed956b770f257d3672fe1ff9f7b0240c":"0x2086ac351052600000","0x36227cdfa0fd3b9d7e6a744685f5be9aa366a7f0":"0xac2730ee9c6c18000","0x362fbcb10662370a068fc2652602a2577937cce6":"0xad78ebc5ac6200000","0x3630c5e565ceaa8a0f0ffe32875eae2a6ce63c19":"0x937722b3774d00000","0x36339f84a5c2b44ce53dfdb6d4f97df78212a7df":"0x116f18b81715a00000","0x36343aeca07b6ed58a0e62fa4ecb498a124fc971":"0x1043561a8829300000","0x366175403481e0ab15bb514615cbb989ebc68f82":"0x6c6b935b8bbd400000","0x36726f3b885a24f92996da81625ec8ad16d8cbe6":"0x53af75d18148578000","0x3673954399f6dfbe671818259bb278e2e92ee315":"0x2a5a058fc295ed000000","0x36758e049cd98bcea12277a676f9297362890023":"0xd8d726b7177a800000","0x367f59cc82795329384e41e1283115e791f26a01":"0x6c6b935b8bbd400000","0x36810ff9d213a271eda2b8aa798be654fa4bbe06":"0x6c6b935b8bbd400000","0x368c5414b56b8455171fbf076220c1cba4b5ca31":"0x1e3ef911e83d720000","0x3690246ba3c80679e22eac4412a1aefce6d7cd82":"0x43c33c1937564800000","0x36928b55bc861509d51c8cf1d546bfec6e3e90af":"0x6acb3df27e1f880000","0x369822f5578b40dd1f4471706b22cd971352da6b":"0x12c1b6eed03d280000","0x369ef761195f3a373e24ece6cd22520fe0b9e86e":"0x1cffafc94db2088000","0x36a08fd6fd1ac17ce15ed57eefb12a2be28188bf":"0x487a9a304539440000","0x36a0e61e1be47fa87e30d32888ee0330901ca991":"0x1158e460913d00000","0x36b2c85e3aeeebb70d63c4a4730ce2e8e88a3624":"0x21e19e0c9bab2400000","0x36bf43ff35df90908824336c9b31ce33067e2f50":"0x49721510c1c1e9480000","0x36bfe1fa3b7b70c172eb042f6819a8972595413e":"0x3635c9adc5dea00000","0x36c510bf8d6e569bf2f37d47265dbcb502ff2bce":"0x65a4da25d3016c00000","0x36d85dc3683156e63bf880a9fab7788cf8143a27":"0x43c33c1937564800000","0x36df8f883c1273ec8a171f7a33cfd649b1fe6075":"0xc52484ac416890000","0x36e156610cd8ff64e780d89d0054385ca76755aa":"0x2f6f10780d22cc00000","0x36fec62c2c425e219b18448ad757009d8c54026f":"0x15af1d78b58c400000","0x3700e3027424d939dbde5d42fb78f6c4dbec1a8f":"0x22b1c8c1227a00000","0x3702e704cc21617439ad4ea27a5714f2fda1e932":"0x3635c9adc5dea00000","0x3703350c4d6fe337342cddc65bf1e2386bf3f9b2":"0x6d8121a194d1100000","0x3708e59de6b4055088782902e0579c7201a8bf50":"0x2a5a058fc295ed000000","0x3712367e5e55a96d5a19168f6eb2bc7e9971f869":"0x3635c9adc5dea00000","0x37195a635dcc62f56a718049d47e8f9f96832891":"0x6acb3df27e1f880000","0x3727341f26c12001e378405ee38b2d8464ec7140":"0x6c6b935b8bbd400000","0x372e453a6b629f27678cc8aeb5e57ce85ec0aef9":"0xad78ebc5ac6200000","0x3734cb187491ede713ae5b3b2d12284af46b8101":"0xa2a15d09519be00000","0x3737216ee91f177732fb58fa4097267207e2cf55":"0x52663ccab1e1c00000","0x373c547e0cb5ce632e1c5ad66155720c01c40995":"0xfe54dcdce6c55a0000","0x376cd7577383e902951b60a2017ba7ea29e33576":"0x6c6b935b8bbd400000","0x378ea1dc8edc19bae82638029ea8752ce98bcfcd":"0x6c6b935b8bbd400000","0x378f37243f3ff0bef5e1dc85eb4308d9340c29f9":"0x6c6e59e67c78540000","0x37959c20b7e9931d72f5a8ae869dafddad3b6d5c":"0xad78ebc5ac6200000","0x379a7f755a81a17edb7daaa28afc665dfa6be63a":"0x15af1d78b58c40000","0x379c7166849bc24a02d6535e2def13daeef8aa8d":"0x56bc75e2d63100000","0x37a05aceb9395c8635a39a7c5d266ae610d10bf2":"0x65a4da25d3016c00000","0x37a10451f36166cf643dd2de6c1cbba8a011cfa3":"0x14998f32ac78700000","0x37a7a6ff4ea3d60ec307ca516a48d3053bb79cbb":"0x6c6b935b8bbd400000","0x37ab66083a4fa23848b886f9e66d79cdc150cc70":"0x12be22ffb5ec00380000","0x37ac29bda93f497bc4aeaab935452c431510341e":"0x35659ef93f0fc40000","0x37b8beac7b1ca38829d61ab552c766f48a10c32f":"0x15af1d78b58c400000","0x37bbc47212d82fcb5ee08f5225ecc2041ad2da7d":"0xb1cf24ddd0b1400000","0x37cb868d2c3f95b257611eb34a4188d58b749802":"0x6c6b935b8bbd400000","0x37d980a12ee3bf23cc5cdb63b4ae45691f74c837":"0x6c6b935b8bbd400000","0x37e169a93808d8035698f815c7235613c1e659f2":"0x3635c9adc5dea00000","0x37eada93c475ded2f7e15e7787d400470fa52062":"0xad78ebc5ac6200000","0x37fac1e6bc122e936dfb84de0c4bef6e0d60c2d7":"0x6c6b935b8bbd400000","0x3807eff43aa97c76910a19752dd715ee0182d94e":"0xd90156f6fc2fb0000","0x3815b0743f94fc8cc8654fd9d597ed7d8b77c57e":"0x2809d429d896750000","0x381db4c8465df446a4ce15bf81d47e2f17c980bf":"0x6c6b935b8bbd4000000","0x38202c5cd7078d4f887673ab07109ad8ada89720":"0x3635c9adc5dea00000","0x3821862493242c0aeb84b90de05d250c1e50c074":"0x11776c58e946dc0000","0x382591e7217b435e8e884cdbf415fe377a6fe29e":"0x1b2df9d219f57980000","0x382ba76db41b75606dd48a48f0137e9174e031b6":"0x1158e460913d00000","0x3831757eae7557cb8a37a4b10644b63e4d3b3c75":"0xad78ebc5ac6200000","0x383304dd7a5720b29c1a10f60342219f48032f80":"0x12f939c99edab800000","0x383a7c899ee18bc214969870bc7482f6d8f3570e":"0x21e19e0c9bab2400000","0x38430e931d93be01b4c3ef0dc535f1e0a9610063":"0x21e19e0c9bab2400000","0x38439aaa24e3636f3a18e020ea1da7e145160d86":"0x8cf23f909c0fa00000","0x38458e0685573cb4d28f53098829904570179266":"0x22b1c8c1227a00000","0x3847667038f33b01c1cc795d8daf5475eff5a0d4":"0x277b9bf4246c410000","0x38643babea6011316cc797d9b093c897a17bdae7":"0x1220bb7445daa00000","0x38695fc7e1367ceb163ebb053751f9f68ddb07a0":"0x6c6b935b8bbd400000","0x3872f48dc5e3f817bc6b2ad2d030fc5e0471193d":"0xd8d726b7177a800000","0x387eeafd6b4009deaf8bd5b85a72983a8dcc3487":"0xd8d726b7177a800000","0x3881defae1c07b3ce04c78abe26b0cdc8d73f010":"0xad78ebc5ac6200000","0x3883becc08b9be68ad3b0836aac3b620dc0017ef":"0x6c6b935b8bbd400000","0x3885fee67107dc3a3c741ee290c98918c9b99397":"0x1158e460913d00000","0x3887192c7f705006b630091276b39ac680448d6b":"0x340aad21b3b700000","0x38898bbb4553e00bbfd0cf268b2fc464d154add5":"0x1158e460913d000000","0x388bdcdae794fc44082e667501344118ea96cd96":"0x5a87e7d7f5f6580000","0x388c85a9b9207d8146033fe38143f6d34b595c47":"0xad78ebc5ac6200000","0x3896ad743579d38e2302454d1fb6e2ab69e01bfd":"0x65ea3db75546600000","0x38a3dccf2fcfe0c91a2624bd0cbf88ee4a076c33":"0x6c6b935b8bbd400000","0x38a744efa6d5c2137defef8ef9187b649eee1c78":"0xd8d726b7177a800000","0x38ac664ee8e0795e4275cb852bcba6a479ad9c8d":"0x1158e460913d00000","0x38b2197106123387a0d4de368431a8bacdda30e2":"0x1158e460913d00000","0x38b3965c21fa893931079beacfffaf153678b6eb":"0x93c6a0a51e2670000","0x38b403fb1fb7c14559a2d6f6564a5552bca39aff":"0x6c6b935b8bbd400000","0x38b50146e71916a5448de12a4d742135dcf39833":"0x6d190c475169a200000","0x38bf2a1f7a69de0e2546adb808b36335645da9ff":"0x6c700439d9b5600000","0x38c10b90c859cbb7815692f99dae520ab5febf5e":"0x2c9e4966fa5cf240000","0x38c7851f5ffd4cee98df30f3b25597af8a6ca263":"0x8ead3a2f7d7e180000","0x38d2e9154964b41c8d50a7487d391e7ee2c3d3c2":"0xbdbc41e0348b300000","0x38da1ba2de9e2c954b092dd9d81204fd016ba016":"0x2268ed01f34b3300000","0x38df0c4abe7ded5fe068eadf154ac691774324a4":"0x61093d7c2c6d380000","0x38e2af73393ea98a1d993a74df5cd754b98d529a":"0x61093d7c2c6d380000","0x38e46de4453c38e941e7930f43304f94bb7b2be8":"0x6cb7e74867d5e60000","0x38e7dba8fd4f1f850dbc2649d8e84f0952e3eb3c":"0x2b5e3af16b1880000","0x38e8a31af2d265e31a9fff2d8f46286d1245a467":"0x1158e460913d00000","0x38ea6f5b5a7b88417551b4123dc127dfe9342da6":"0x15af1d78b58c400000","0x38eec6e217f4d41aa920e424b9525197041cd4c6":"0xf00d25eb922e670000","0x38f387e1a4ed4a73106ef2b462e474e2e3143ad0":"0x14542ba12a337c00000","0x391161b0e43c302066e8a68d2ce7e199ecdb1d57":"0xd8d726b7177a800000","0x3915eab5ab2e5977d075dec47d96b68b4b5cf515":"0xd07018185120f400000","0x391a77405c09a72b5e8436237aaaf95d68da1709":"0x2a9264af3d1b90000","0x391f20176d12360d724d51470a90703675594a4d":"0x56bc75e2d631000000","0x392433d2ce83d3fb4a7602cca3faca4ec140a4b0":"0x2c3c465ca58ec0000","0x393f783b5cdb86221bf0294fb714959c7b45899c":"0x14061b9d77a5e980000","0x393ff4255e5c658f2e7f10ecbd292572671bc2d2":"0x6c6b935b8bbd400000","0x394132600f4155e07f4d45bc3eb8d9fb72dcd784":"0x9f6e92edea07d40000","0x3951e48e3c869e6b72a143b6a45068cdb9d466d0":"0x1158e460913d00000","0x3954bdfe0bf587c695a305d9244c3d5bdddac9bb":"0x410278327f985608000","0x395d6d255520a8db29abc47d83a5db8a1a7df087":"0x56bc75e2d63100000","0x39636b25811b176abfcfeeca64bc87452f1fdff4":"0x15af1d78b58c400000","0x3969b4f71bb8751ede43c016363a7a614f76118e":"0x6c6b935b8bbd400000","0x39782ffe06ac78822a3c3a8afe305e50a56188ce":"0x21e19e0c9bab2400000","0x397a6ef8763a18f00fac217e055c0d3094101011":"0x6c6b935b8bbd400000","0x397cdb8c80c67950b18d654229610e93bfa6ee1a":"0x3f95c8e08215210000","0x39824f8bced176fd3ea22ec6a493d0ccc33fc147":"0xd8d726b7177a800000","0x39936c2719450b9420cc2522cf91db01f227c1c1":"0x1b1ae4d6e2ef500000","0x3995e096b08a5a726800fcd17d9c64c64e088d2b":"0xad78ebc5ac6200000","0x399aa6f5d078cb0970882bc9992006f8fbdf3471":"0x3635c9adc5dea00000","0x39aa05e56d7d32385421cf9336e90d3d15a9f859":"0x168d28e3f00280000","0x39aaf0854db6eb39bc7b2e43846a76171c0445de":"0x6449e84e47a8a80000","0x39b1c471ae94e12164452e811fbbe2b3cd7275ac":"0x6c6b935b8bbd400000","0x39b299327490d72f9a9edff11b83afd0e9d3c450":"0xad78ebc5ac6200000","0x39bac68d947859f59e9226089c96d62e9fbe3cde":"0x22b1c8c1227a00000","0x39bfd978689bec048fc776aa15247f5e1d7c39a2":"0x43c33c1937564800000","0x39c773367c8825d3596c686f42bf0d14319e3f84":"0x73f75d1a085ba0000","0x39d4a931402c0c79c457186f24df8729cf957031":"0xd8d726b7177a800000","0x39d6caca22bccd6a72f87ee7d6b59e0bde21d719":"0x6c8754c8f30c080000","0x39e0db4d60568c800b8c5500026c2594f5768960":"0x3635c9adc5dea00000","0x39ee4fe00fbced647068d4f57c01cb22a80bccd1":"0x14542ba12a337c00000","0x39f198331e4b21c1b760a3155f4ab2fe00a74619":"0x6c6b935b8bbd400000","0x39f44663d92561091b82a70dcf593d754005973a":"0xad78b2edc21598000","0x3a035594c747476d42d1ee966c36224cdd224993":"0x134af74569f9c50000","0x3a04572847d31e81f7765ca5bfc9d557159f3683":"0x7362d0dabeafd8000","0x3a06e3bb1edcfd0c44c3074de0bb606b049894a2":"0x21e19e0c9bab2400000","0x3a10888b7e149cae272c01302c327d0af01a0b24":"0xebec21ee1da40000","0x3a3108c1e680a33b336c21131334409d97e5adec":"0x1158e460913d00000","0x3a368efe4ad786e26395ec9fc6ad698cae29fe01":"0x2245899675f9f40000","0x3a3dd104cd7eb04f21932fd433ea7affd39369f5":"0x13614f23e242260000","0x3a4297da3c555e46c073669d0478fce75f2f790e":"0x6ac5c62d9486070000","0x3a476bd2c9e664c63ab266aa4c6e4a4825f516c3":"0xad78ebc5ac6200000","0x3a48e0a7098b06a905802b87545731118e89f439":"0x6c6b935b8bbd400000","0x3a4da78dce05aeb87de9aead9185726da1926798":"0xad78ebc5ac6200000","0x3a59a08246a8206f8d58f70bb1f0d35c5bcc71bd":"0xa076407d3f7440000","0x3a72d635aadeee4382349db98a1813a4cfeb3df1":"0x2a5a058fc295ed000000","0x3a7db224acae17de7798797d82cdf8253017dfa8":"0x10f0cf064dd59200000","0x3a805fa0f7387f73055b7858ca8519edd93d634f":"0x6449e84e47a8a80000","0x3a84e950ed410e51b7e8801049ab2634b285fea1":"0x3f52fdaa822d2c80000","0x3a86ee94862b743dd34f410969d94e2c5652d4ad":"0xaede69ad30e810000","0x3a9132b7093d3ec42e1e4fb8cb31ecdd43ae773c":"0x6c6b935b8bbd400000","0x3a9960266df6492063538a99f487c950a3a5ec9e":"0x5150ae84a8cdf000000","0x3a9b111029ce1f20c9109c7a74eeeef34f4f2eb2":"0xd8d726b7177a800000","0x3a9e5441d44b243be55b75027a1ceb9eacf50df2":"0x3635c9adc5dea00000","0x3aa07a34a1afc8967d3d1383b96b62cf96d5fa90":"0x43c33c1937564800000","0x3aa42c21b9b31c3e27ccd17e099af679cdf56907":"0x1b1ae4d6e2ef5000000","0x3aa948ea02397755effb2f9dc9392df1058f7e33":"0x2e141ea081ca080000","0x3aadf98b61e5c896e7d100a3391d3250225d61df":"0xcaf67003701680000","0x3aae4872fd9093cbcad1406f1e8078bab50359e2":"0x222c8eb3ff6640000","0x3abb8adfc604f48d5984811d7f1d52fef6758270":"0xf29719b66f110c0000","0x3ac2f0ff1612e4a1c346d53382abf6d8a25baa53":"0x6c6b935b8bbd400000","0x3ac9dc7a436ae98fd01c7a9621aa8e9d0b8b531d":"0x61093d7c2c6d380000","0x3ad06149b21c55ff867cc3fb9740d2bcc7101231":"0x29b76432b94451200000","0x3ad70243d88bf0400f57c8c1fd57811848af162a":"0x2e9ee5c38653f00000","0x3ad915d550b723415620f5a9b5b88a85f382f035":"0x3635c9adc5dea00000","0x3ae160e3cd60ae31b9d6742d68e14e76bd96c517":"0x1a055690d9db80000","0x3ae62bd271a760637fad79c31c94ff62b4cd12f7":"0x6c6b935b8bbd400000","0x3aea4e82d2400248f99871a41ca257060d3a221b":"0x3635c9adc5dea00000","0x3af65b3e28895a4a001153391d1e69c31fb9db39":"0xd5967be4fc3f100000","0x3b07db5a357f5af2484cbc9d77d73b1fd0519fc7":"0x1b1ae4d6e2ef500000","0x3b0accaf4b607cfe61d17334c214b75cdefdbd89":"0x6c6b935b8bbd400000","0x3b13631a1b89cb566548899a1d60915cdcc4205b":"0x6c6b935b8bbd400000","0x3b159099075207c6807663b1f0f7eda54ac8cce3":"0x6ac4e65b69f92d8000","0x3b1937d5e793b89b63fb8eb5f1b1c9ca6ba0fa8e":"0x6c6b935b8bbd400000","0x3b22da2a0271c8efe102532773636a69b1c17e09":"0x1b36a6444a3e180000","0x3b22dea3c25f1b59c7bd27bb91d3a3eaecef3984":"0x56bc75e2d63100000","0x3b2367f8494b5fe18d683c055d89999c9f3d1b34":"0x21e19e0c9bab2400000","0x3b2c45990e21474451cf4f59f01955b331c7d7c9":"0x6c6b935b8bbd400000","0x3b4100e30a73b0c734b18ffa8426d19b19312f1a":"0xbb5d1aa700afd900000","0x3b42a66d979f582834747a8b60428e9b4eeccd23":"0x21a1c790fadc580000","0x3b4768fd71e2db2cbe7fa050483c27b4eb931df3":"0x6c6b935b8bbd400000","0x3b566a8afad19682dc2ce8679a3ce444a5b0fd4f":"0x6c6b935b8bbd400000","0x3b5c251d7fd7893ba209fe541cecd0ce253a990d":"0x65a4da25d3016c00000","0x3b5e8b3c77f792decb7a8985df916efb490aac23":"0x6c6b935b8bbd400000","0x3b6e814f770748a7c3997806347605480a3fd509":"0x6c6b935b8bbd400000","0x3b7b4f53c45655f3dc5f017edc23b16f9bc536fa":"0x56bc75e2d63100000","0x3b7b8e27de33d3ce7961b98d19a52fe79f6c25be":"0x152d02c7e14af6800000","0x3b7c77dbe95dc2602ce3269a9545d04965fefdbd":"0x6c6b935b8bbd400000","0x3b8098533f7d9bdcd307dbb23e1777ca18418936":"0x6c6b935b8bbd400000","0x3b93b16136f11eaf10996c95990d3b2739ccea5f":"0x21e19e0c9bab2400000","0x3bab4b01a7c84ba13feea9b0bb191b77a3aadca3":"0xad78ebc5ac6200000","0x3bb53598cc20e2055dc553b049404ac9b7dd1e83":"0x21571df77c00be0000","0x3bbc13d04accc0707aebdcaef087d0b87e0b5ee3":"0xbed1d0263d9f000000","0x3bc6e3ee7a56ce8f14a37532590f63716b9966e8":"0x6c6b935b8bbd400000","0x3bc85d6c735b9cda4bba5f48b24b13e70630307b":"0x6acb3df27e1f880000","0x3bd624b548cb659736907ed8aa3c0c705e24b575":"0x6c6b935b8bbd400000","0x3bd9a06d1bd36c4edd27fc0d1f5b088ddae3c72a":"0x1b1a7a420ba00d0000","0x3bddbc8134f77d55597fc97c26d26698090604eb":"0xbe202d6a0eda0000","0x3bf86ed8a3153ec933786a02ac090301855e576b":"0x5f4a8c8375d155400000","0x3bfbd3847c17a61cf3f17b52f8eba1b960b3f39f":"0xa2a15d09519be00000","0x3c03bbc023e1e93fa3a3a6e428cf0cd8f95e1ec6":"0x52663ccab1e1c00000","0x3c0c3defac9cea7acc319a96c30b8e1fedab4574":"0x692ae8897081d00000","0x3c15b3511df6f0342e7348cc89af39a168b7730f":"0x3635c9adc5dea00000","0x3c1f91f301f4b565bca24751aa1f761322709ddd":"0x61093d7c2c6d380000","0x3c286cfb30146e5fd790c2c8541552578de334d8":"0x2291b11aa306e8c0000","0x3c322e611fdb820d47c6f8fc64b6fad74ca95f5e":"0xd258ece1b13150000","0x3c5a241459c6abbf630239c98a30d20b8b3ac561":"0x88b23acffd9900000","0x3c79c863c3d372b3ff0c6f452734a7f97042d706":"0x98a7d9b8314c00000","0x3c83c1701db0388b68210d00f5717cd9bd322c6a":"0x65a4da25d3016c00000","0x3c860e2e663f46db53427b29fe3ea5e5bf62bbcc":"0x556f64c1fe7fa0000","0x3c869c09696523ced824a070414605bb76231ff2":"0x3635c9adc5dea00000","0x3c925619c9b33144463f0537d896358706c520b0":"0x6c6b935b8bbd400000","0x3c98594bf68b57351e8814ae9e6dfd2d254aa06f":"0x1043561a8829300000","0x3cadeb3d3eed3f62311d52553e70df4afce56f23":"0xd8d726b7177a800000","0x3caedb5319fe806543c56e5021d372f71be9062e":"0x878678326eac9000000","0x3cafaf5e62505615068af8eb22a13ad8a9e55070":"0x6c660645aa47180000","0x3cb179cb4801a99b95c3b0c324a2bdc101a65360":"0x168d28e3f00280000","0x3cb561ce86424b359891e364ec925ffeff277df7":"0xad78ebc5ac6200000","0x3ccb71aa6880cb0b84012d90e60740ec06acd78f":"0x6c6b935b8bbd400000","0x3ccef88679573947e94997798a1e327e08603a65":"0x2bc916d69f3b020000","0x3cd1d9731bd548c1dd6fcea61beb75d91754f7d3":"0x1161d01b215cae48000","0x3cd3a6e93579c56d494171fc533e7a90e6f59464":"0x6c6b935b8bbd400000","0x3cd6b7593cbee77830a8b19d0801958fcd4bc57a":"0x1b1ae4d6e2ef500000","0x3cd7f7c7c2353780cde081eeec45822b25f2860c":"0xad78ebc5ac6200000","0x3ce1dc97fcd7b7c4d3a18a49d6f2a5c1b1a906d7":"0xad78ebc5ac6200000","0x3cea302a472a940379dd398a24eafdbadf88ad79":"0xa2a15d09519be00000","0x3ceca96bb1cdc214029cbc5e181d398ab94d3d41":"0x10f0cf064dd592000000","0x3cf484524fbdfadae26dc185e32b2b630fd2e726":"0x185452cb2a91c30000","0x3cf9a1d465e78b7039e3694478e2627b36fcd141":"0x4a60532ad51bf00000","0x3cfbf066565970639e130df2a7d16b0e14d6091c":"0x5c283d410394100000","0x3d09688d93ad07f3abe68c722723cd680990435e":"0x65a4ce99f769e6e0000","0x3d31587b5fd5869845788725a663290a49d3678c":"0x1b1ae4d6e2ef500000","0x3d3fad49c9e5d2759c8e8e5a7a4d60a0dd135692":"0x1158e460913d00000","0x3d574fcf00fae1d98cc8bf9ddfa1b3953b9741bc":"0x6acb3df27e1f880000","0x3d5a8b2b80be8b35d8ecf789b5ed7a0775c5076c":"0x1158e460913d00000","0x3d66cd4bd64d5c8c1b5eea281e106d1c5aad2373":"0x69c4f3a8a110a60000","0x3d6ae053fcbc318d6fd0fbc353b8bf542e680d27":"0xc673ce3c40160000","0x3d6ff82c9377059fb30d9215723f60c775c891fe":"0xd8e5ce617f2d50000","0x3d79a853d71be0621b44e29759656ca075fdf409":"0x6c6b935b8bbd400000","0x3d7ea5bf03528100ed8af8aed2653e921b6e6725":"0x3635c9adc5dea00000","0x3d813ff2b6ed57b937dabf2b381d148a411fa085":"0x56bc75e2d63100000","0x3d881433f04a7d0d27f84944e08a512da3555287":"0x410d586a20a4c00000","0x3d89e505cb46e211a53f32f167a877bec87f4b0a":"0x15b3557f1937f8000","0x3d8d0723721e73a6c0d860aa0557abd14c1ee362":"0x10f0cf064dd59200000","0x3d8f39881b9edfe91227c33fa4cdd91e678544b0":"0x4ab07ba43ada98000","0x3d9d6be57ff83e065985664f12564483f2e600b2":"0x6eace43f23bd800000","0x3da39ce3ef4a7a3966b32ee7ea4ebc2335a8f11f":"0x6c6b935b8bbd400000","0x3daa01ceb70eaf9591fa521ba4a27ea9fb8ede4a":"0x5a63d2c9bc76540000","0x3db5fe6a68bd3612ac15a99a61e555928eeceaf3":"0x55a6e79ccd1d300000","0x3db9ed7f024c7e26372feacf2b050803445e3810":"0x45b148b4996a300000","0x3dbf0dbfd77890800533f09dea8301b9f025d2a6":"0x3635c9adc5dea00000","0x3dcef19c868b15d34eda426ec7e04b18b6017002":"0x6c68ccd09b022c0000","0x3dd12e556a603736feba4a6fa8bd4ac45d662a04":"0x23757b9183e078280000","0x3dde8b15b3ccbaa5780112c3d674f313bba68026":"0x601d515a3e4f940000","0x3ddedbe48923fbf9e536bf9ffb0747c9cdd39eef":"0x368c8623a8b4d100000","0x3deae43327913f62808faa1b6276a2bd6368ead9":"0x6c6b935b8bbd400000","0x3df762049eda8ac6927d904c7af42f94e5519601":"0x6c6b935b8bbd400000","0x3e040d40cb80ba0125f3b15fdefcc83f3005da1b":"0x384524cc70b7780000","0x3e0b8ed86ed669e12723af7572fbacfe829b1e16":"0x514de7f9b812dc0000","0x3e0cbe6a6dcb61f110c45ba2aa361d7fcad3da73":"0x1b2df9d219f57980000","0x3e194b4ecef8bb711ea2ff24fec4e87bd032f7d1":"0x8b9dc1bc1a036a8000","0x3e1b2230afbbd310b4926a4c776d5ae7819c661d":"0x65a4da25d3016c00000","0x3e1c53300e4c168912163c7e99b95da268ad280a":"0x3662325cd18fe00000","0x3e1c962063e0d5295941f210dca3ab531eec8809":"0xa2a15d09519be00000","0x3e2ca0d234baf607ad466a1b85f4a6488ef00ae7":"0x4da21a3483d568000","0x3e2f26235e137a7324e4dc154b5df5af46ea1a49":"0x137aad8032db90000","0x3e3161f1ea2fbf126e79da1801da9512b37988c9":"0xa6dd90cae5114480000","0x3e36c17253c11cf38974ed0db1b759160da63783":"0x17b7883c06916600000","0x3e3cd3bec06591d6346f254b621eb41c89008d31":"0x35dfbeda9f37340000","0x3e45bd55db9060eced923bb9cb733cb3573fb531":"0x58e7926ee858a00000","0x3e4d13c55a84e46ed7e9cb90fd355e8ad991e38f":"0x3635c9adc5dea00000","0x3e4e9265223c9738324cf20bd06006d0073edb8c":"0x73f75d1a085ba0000","0x3e4fbd661015f6461ed6735cefef01f31445de3a":"0x36e342998b8b0200000","0x3e53ff2107a8debe3328493a92a586a7e1f49758":"0x4e69c2a71a405ab0000","0x3e5a39fdda70df1126ab0dc49a7378311a537a1f":"0x821ab0d44149800000","0x3e5abd09ce5af7ba8487c359e0f2a93a986b0b18":"0x21e19e0c9bab2400000","0x3e5cb8928c417825c03a3bfcc52183e5c91e42d7":"0xe731d9c52c962f0000","0x3e5e93fb4c9c9d1246f8f247358e22c3c5d17b6a":"0x821ab0d4414980000","0x3e618350fa01657ab0ef3ebac8e37012f8fc2b6f":"0x9806de3da6e9780000","0x3e63ce3b24ca2865b4c5a687b7aea3597ef6e548":"0x6c6b935b8bbd400000","0x3e66b84769566ab67945d5fa81373556bcc3a1fa":"0x83d6c7aab63600000","0x3e76a62db187aa74f63817533b306cead0e8cebe":"0x69b5afac750bb800000","0x3e7a966b5dc357ffb07e9fe067c45791fd8e3049":"0x3342d60dff1960000","0x3e81772175237eb4cbe0fe2dcafdadffeb6a1999":"0x1dd0c885f9a0d800000","0x3e8349b67f5745449f659367d9ad4712db5b895a":"0x62a992e53a0af00000","0x3e83544f0082552572c782bee5d218f1ef064a9d":"0x56cd55fc64dfe0000","0x3e84b35c5b2265507061d30b6f12da033fe6f8b9":"0x61093d7c2c6d380000","0x3e8641d43c42003f0a33c929f711079deb2b9e46":"0x1b1ae4d6e2ef500000","0x3e8745ba322f5fd6cb50124ec46688c7a69a7fae":"0x10afc1ade3b4ed40000","0x3e914e3018ac00449341c49da71d04dfeeed6221":"0xd8d726b7177a800000","0x3e9410d3b9a87ed5e451a6b91bb8923fe90fb2b5":"0xad78ebc5ac6200000","0x3e94df5313fa520570ef232bc3311d5f622ff183":"0x6c6b935b8bbd400000","0x3e9b34a57f3375ae59c0a75e19c4b641228d9700":"0xf8699329677e0000","0x3eada8c92f56067e1bb73ce378da56dc2cdfd365":"0x77cde93aeb0d480000","0x3eaf0879b5b6db159b589f84578b6a74f6c10357":"0x18938b671fa65a28000","0x3eaf316b87615d88f7adc77c58e712ed4d77966b":"0x56dbc4cee24648000","0x3eb8b33b21d23cda86d8288884ab470e164691b5":"0x1b1ae4d6e2ef500000","0x3eb9ef06d0c259040319947e8c7a6812aa0253d8":"0x90d972f32323c0000","0x3ecc8e1668dde995dc570fe414f44211c534a615":"0x6c6b935b8bbd400000","0x3ecdb532e397579662b2a46141e78f8235936a5f":"0x39fbae8d042dd0000","0x3eee6f1e96360b7689b3069adaf9af8eb60ce481":"0x3635c9adc5dea00000","0x3f08d9ad894f813e8e2148c160d24b353a8e74b0":"0xcb49b44ba602d800000","0x3f0c83aac5717962734e5ceaeaecd39b28ad06be":"0x6c6b935b8bbd400000","0x3f10800282d1b7ddc78fa92d8230074e1bf6aeae":"0x10afc1ade3b4ed40000","0x3f1233714f204de9de4ee96d073b368d8197989f":"0x217c41074e6bb0000","0x3f173aa6edf469d185e59bd26ae4236b92b4d8e1":"0x1158e460913d000000","0x3f1bc420c53c002c9e90037c44fe6a8ef4ddc962":"0x960db77681e940000","0x3f236108eec72289bac3a65cd283f95e041d144c":"0x3634bf39ab98788000","0x3f2da093bb16eb064f8bfa9e30b929d15f8e1c4c":"0x6c6b935b8bbd400000","0x3f2dd55db7eab0ebee65b33ed8202c1e992e958b":"0x2c73c937742c500000","0x3f2f381491797cc5c0d48296c14fd0cd00cdfa2d":"0x2b95bdcc39b6100000","0x3f30d3bc9f602232bc724288ca46cd0b0788f715":"0xd8d726b7177a800000","0x3f3c8e61e5604cef0605d436dd22accd862217fc":"0x487a9a304539440000","0x3f3f46b75cabe37bfacc8760281f4341ca7f463d":"0x20ac448235fae88000","0x3f472963197883bbda5a9b7dfcb22db11440ad31":"0x1a19643cb1eff08000","0x3f4cd1399f8a34eddb9a17a471fc922b5870aafc":"0xad78ebc5ac6200000","0x3f551ba93cd54693c183fb9ad60d65e1609673c9":"0x6c6b935b8bbd400000","0x3f627a769e6a950eb87017a7cd9ca20871136831":"0x2eb8eb1a172dcb80000","0x3f6dd3650ee428dcb7759553b017a96a94286ac9":"0x487a9a304539440000","0x3f747237806fed3f828a6852eb0867f79027af89":"0x5150ae84a8cdf00000","0x3f75ae61cc1d8042653b5baec4443e051c5e7abd":"0x52d542804f1ce0000","0x3fb7d197b3ba4fe045efc23d50a14585f558d9b2":"0x1158e460913d00000","0x3fbc1e4518d73400c6d046359439fb68ea1a49f4":"0x3790bb8551376400000","0x3fbed6e7e0ca9c84fbe9ebcf9d4ef9bb49428165":"0x6c6b935b8bbd400000","0x3fd0bb47798cf44cdfbe4d333de637df4a00e45c":"0x56c5579f722140000","0x3fe40fbd919aad2818df01ee4df46c46842ac539":"0x14542ba12a337c00000","0x3fe801e61335c5140dc7eda2ef5204460a501230":"0x6c6b935b8bbd400000","0x3ff836b6f57b901b440c30e4dbd065cf37d3d48c":"0xad78ebc5ac6200000","0x3ffcb870d4023d255d5167d8a507cefc366b68ba":"0x23343c4354d2ac0000","0x401354a297952fa972ad383ca07a0a2811d74a71":"0xc249fdd327780000","0x4030a925706b2c101c8c5cb9bd05fbb4f6759b18":"0xd8d726b7177a800000","0x403145cb4ae7489fcc90cd985c6dc782b3cc4e44":"0x1453ff387b27cac0000","0x403220600a36f73f24e190d1edb2d61be3f41354":"0x107ad8f556c6c00000","0x4039bd50a2bde15ffe37191f410390962a2b8886":"0xad78ebc5ac6200000","0x403c64896a75cad816a9105e18d8aa5bf80f238e":"0x35659ef93f0fc40000","0x403d53cf620f0922b417848dee96c190b5bc8271":"0x215f835bc769da80000","0x404100db4c5d0eec557823b58343758bcc2c8083":"0x1158e460913d00000","0x4041374b0feef4792e4b33691fb86897a4ff560c":"0x13c9647e25a9940000","0x40467d80e74c35407b7db51789234615fea66818":"0x150894e849b3900000","0x40585200683a403901372912a89834aadcb55fdb":"0x6c6b935b8bbd400000","0x4058808816fdaa3a5fc98ed47cfae6c18315422e":"0xad4c8316a0b0c0000","0x405f596b94b947344c033ce2dcbff12e25b79784":"0x6c6b935b8bbd400000","0x40630024bd2c58d248edd8465617b2bf1647da0e":"0x3635c9adc5dea00000","0x40652360d6716dc55cf9aab21f3482f816cc2cbd":"0x21e19e0c9bab2400000","0x407295ebd94b48269c2d569c9b9af9aa05e83e5e":"0x21e19e0c9bab2400000","0x4073fa49b87117cb908cf1ab512da754a932d477":"0x6acb3df27e1f880000","0x408a69a40715e1b313e1354e600800a1e6dc02a5":"0x1e7b891cc92540000","0x409bd75085821c1de70cdc3b11ffc3d923c74010":"0xd8d726b7177a800000","0x409d5a962edeeebea178018c0f38b9cdb213f289":"0x1158e460913d00000","0x40a331195b977325c2aa28fa2f42cb25ec3c253c":"0x6c6b935b8bbd400000","0x40a7f72867a7dc86770b162b7557a434ed50cce9":"0x3635c9adc5dea00000","0x40ab0a3e83d0c8ac9366910520eab1772bac3b1a":"0x34f10c2dc05e7c0000","0x40ab66fe213ea56c3afb12c75be33f8e32fd085d":"0xd8d726b7177a800000","0x40ad74bc0bce2a45e52f36c3debb1b3ada1b7619":"0x170162de109c6580000","0x40cf890591eae4a18f812a2954cb295f633327e6":"0x29bf736fc591a0000","0x40cf90ef5b768c5da585002ccbe6617650d8e837":"0x36330322d5238c0000","0x40d45d9d7625d15156c932b771ca7b0527130958":"0x152d02c7e14af6800000","0x40db1ba585ce34531edec5494849391381e6ccd3":"0x61093d7c2c6d380000","0x40df495ecf3f8b4cef2a6c189957248fe884bc2b":"0x28a857425466f800000","0x40e0dbf3efef9084ea1cd7e503f40b3b4a8443f6":"0xd8d726b7177a800000","0x40e2440ae142c880366a12c6d4102f4b8434b62a":"0x3635c9adc5dea00000","0x40e3c283f7e24de0410c121bee60a5607f3e29a6":"0x3635c9adc5dea00000","0x40ea5044b204b23076b1a5803bf1d30c0f88871a":"0x2f6f10780d22cc00000","0x40eddb448d690ed72e05c225d34fc8350fa1e4c5":"0x17b7883c06916600000","0x40f4f4c06c732cd35b119b893b127e7d9d0771e4":"0x21e19e0c9bab2400000","0x41010fc8baf8437d17a04369809a168a17ca56fb":"0x56bc75e2d63100000","0x4103299671d46763978fa4aa19ee34b1fc952784":"0xad78ebc5ac6200000","0x41033c1b6d05e1ca89b0948fc64453fbe87ab25e":"0x487a9a304539440000","0x41098a81452317c19e3eef0bd123bbe178e9e9ca":"0x97c9ce4cf6d5c00000","0x411610b178d5617dfab934d293f512a93e5c10e1":"0x93739534d28680000","0x411c831cc6f44f1965ec5757ab4e5b3ca4cffd1f":"0x170a0f5040e5040000","0x412a68f6c645559cc977fc4964047a201d1bb0e2":"0xa968163f0a57b400000","0x413f4b02669ccff6806bc826fcb7deca3b0ea9bc":"0x1158e460913d00000","0x414599092e879ae25372a84d735af5c4e510cd6d":"0x15af1d78b58c400000","0x41485612d03446ec4c05e5244e563f1cbae0f197":"0x34957444b840e80000","0x415d096ab06293183f3c033d25f6cf7178ac3bc7":"0x22b1c8c1227a00000","0x4166fc08ca85f766fde831460e9dc93c0e21aa6c":"0x3635c9adc5dea00000","0x416784af609630b070d49a8bcd12235c6428a408":"0x43c33c1937564800000","0x4167cd48e733418e8f99ffd134121c4a4ab278c4":"0xc55325ca7415e00000","0x416c86b72083d1f8907d84efd2d2d783dffa3efb":"0x6c6acc67d7b1d40000","0x4173419d5c9f6329551dc4d3d0ceac1b701b869e":"0x4c53ecdc18a600000","0x4174fa1bc12a3b7183cbabb77a0b59557ba5f1db":"0x6c6b935b8bbd400000","0x41786a10d447f484d33244ccb7facd8b427b5b8c":"0x3635c9adc5dea00000","0x417a3cd19496530a6d4204c3b5a17ce0f207b1a5":"0x1b1ae4d6e2ef5000000","0x417e4e2688b1fd66d821529e46ed4f42f8b3db3d":"0x6c6b935b8bbd400000","0x419a71a36c11d105e0f2aef5a3e598078e85c80b":"0x10f0cf064dd59200000","0x419bde7316cc1ed295c885ace342c79bf7ee33ea":"0x14542ba12a337c00000","0x41a2f2e6ecb86394ec0e338c0fc97e9c5583ded2":"0x6cee06ddbe15ec0000","0x41a8c2830081b102df6e0131657c07ab635b54ce":"0x6c6acc67d7b1d40000","0x41a8e236a30e6d63c1ff644d132aa25c89537e01":"0x1158e460913d00000","0x41a9a404fc9f5bfee48ec265b12523338e29a8bf":"0x150894e849b3900000","0x41ad369f758fef38a19aa3149379832c818ef2a0":"0x36369ed7747d260000","0x41b2d34fde0b1029262b4172c81c1590405b03ae":"0x3635c9adc5dea00000","0x41b2dbd79dda9b864f6a7030275419c39d3efd3b":"0xad78ebc5ac62000000","0x41c3c2367534d13ba2b33f185cdbe6ac43c2fa31":"0xd8d726b7177a800000","0x41cb9896445f70a10a14215296daf614e32cf4d5":"0x678a932062e4180000","0x41ce79950935cff55bf78e4ccec2fe631785db95":"0x6c6b935b8bbd400000","0x41d3b731a326e76858baa5f4bd89b57b36932343":"0x155bd9307f9fe80000","0x41e4a20275e39bdcefeb655c0322744b765140c2":"0x21e19e0c9bab2400000","0x41ed2d8e7081482c919fc23d8f0091b3c82c4685":"0x463a1e765bd78a0000","0x41f27e744bd29de2b0598f02a0bb9f98e681eaa4":"0x1a4aba225c207400000","0x41f489a1ec747bc29c3e5f9d8db97877d4d1b4e9":"0x73f75d1a085ba0000","0x420fb86e7d2b51401fc5e8c72015decb4ef8fc2e":"0x3635c9adc5dea00000","0x421684baa9c0b4b5f55338e6f6e7c8e146d41cb7":"0x5150ae84a8cdf00000","0x42399659aca6a5a863ea2245c933fe9a35b7880e":"0x6ece32c26c82700000","0x423bca47abc00c7057e3ad34fca63e375fbd8b4a":"0x3cfc82e37e9a7400000","0x423c3107f4bace414e499c64390a51f74615ca5e":"0x6c6b935b8bbd400000","0x423cc4594cf4abb6368de59fd2b1230734612143":"0x6c6b935b8bbd400000","0x4244f1331158b9ce26bbe0b9236b9203ca351434":"0x21e19e0c9bab2400000","0x425177eb74ad0a9d9a5752228147ee6d6356a6e6":"0xb98bc829a6f90000","0x425725c0f08f0811f5f006eec91c5c5c126b12ae":"0x821ab0d4414980000","0x4258fd662fc4ce3295f0d4ed8f7bb1449600a0a9":"0x16c452ed6088ad80000","0x425c1816868f7777cc2ba6c6d28c9e1e796c52b3":"0x21e19e0c9bab2400000","0x425c338a1325e3a1578efa299e57d986eb474f81":"0x6c6b935b8bbd400000","0x426259b0a756701a8b663528522156c0288f0f24":"0x218ae196b8d4f300000","0x426d15f407a01135b13a6b72f8f2520b3531e302":"0x1158e460913d00000","0x426f78f70db259ac8534145b2934f4ef1098b5d8":"0x138400eca364a00000","0x42732d8ef49ffda04b19780fd3c18469fb374106":"0x170b00e5e4a9be0000","0x427417bd16b1b3d22dbb902d8f9657016f24a61c":"0x6c6b935b8bbd400000","0x42746aeea14f27beff0c0da64253f1e7971890a0":"0x54069233bf7f780000","0x427b462ab84e5091f48a46eb0cdc92ddcb26e078":"0x6c6b935b8bbd400000","0x427e4751c3babe78cff8830886febc10f9908d74":"0x6acb3df27e1f880000","0x427ec668ac9404e895cc861511d1620a4912be98":"0x878678326eac9000000","0x4280a58f8bb10b9440de94f42b4f592120820191":"0x6c6b935b8bbd400000","0x428a1ee0ed331d7952ccbe1c7974b2852bd1938a":"0x77b74a4e8de5650000","0x429c06b487e8546abdfc958a25a3f0fba53f6f00":"0xbb644af542198000","0x42a98bf16027ce589c4ed2c95831e2724205064e":"0x21e19e0c9bab2400000","0x42c6edc515d35557808d13cd44dcc4400b2504e4":"0xaba14c59ba7320000","0x42cecfd2921079c2d7df3f08b07aa3beee5e219a":"0x3635c9adc5dea00000","0x42d1a6399b3016a8597f8b640927b8afbce4b215":"0xa18bcec34888100000","0x42d34940edd2e7005d46e2188e4cfece8311d74d":"0x890b0c2e14fb80000","0x42d3a5a901f2f6bd9356f112a70180e5a1550b60":"0x3224f42723d4540000","0x42d6b263d9e9f4116c411424fc9955783c763030":"0x6c6b935b8bbd400000","0x42db0b902559e04087dd5c441bc7611934184b89":"0x6d33b17d253a620000","0x42ddd014dc52bfbcc555325a40b516f4866a1dd3":"0x6c6b935b8bbd400000","0x4319263f75402c0b5325f263be4a5080651087f0":"0x354b0f14631bab0000","0x431f2c19e316b044a4b3e61a0c6ff8c104a1a12f":"0x3635c9adc5dea00000","0x43227d65334e691cf231b4a4e1d339b95d598afb":"0x21e19e0c9bab2400000","0x432809a2390f07c665921ff37d547d12f1c9966a":"0x65a4da25d3016c00000","0x4329fc0931cbeb033880fe4c9398ca45b0e2d11a":"0x6c7120716d33680000","0x432d884bd69db1acc0d89c64ade4cb4fc3a88b7a":"0x869a8c10808eec0000","0x4331ab3747d35720a9d8ca25165cd285acd4bda8":"0x6c6b935b8bbd400000","0x433a3b68e56b0df1862b90586bbd39c840ff1936":"0x6c6b935b8bbd400000","0x433e3ba1c51b810fc467d5ba4dea42f7a9885e69":"0x878678326eac9000000","0x433eb94a339086ed12d9bde9cd1d458603c97dd6":"0x152d02c7e14af6800000","0x4349225a62f70aea480a029915a01e5379e64fa5":"0x8cd67e2334c0d80000","0x4354221e62dc09e6406436163a185ef06d114a81":"0x6c6b935b8bbd400000","0x435443b81dfdb9bd8c6787bc2518e2d47e57c15f":"0x1438d9397881ef20000","0x4361d4846fafb377b6c0ee49a596a78ddf3516a3":"0xc2127af858da700000","0x4364309a9fa07095600f79edc65120cdcd23dc64":"0x21e19e0c9bab2400000","0x4367ae4b0ce964f4a54afd4b5c368496db169e9a":"0x6c6b935b8bbd400000","0x43748928e8c3ec4436a1d092fbe43ac749be1251":"0x15af1d78b58c400000","0x43767bf7fd2af95b72e9312da9443cb1688e4343":"0x1043561a8829300000","0x437983388ab59a4ffc215f8e8269461029c3f1c1":"0x43c33c1937564800000","0x43898c49a34d509bfed4f76041ee91caf3aa6aa5":"0x1043561a8829300000","0x438c2f54ff8e629bab36b1442b760b12a88f02ae":"0x6c6b935b8bbd400000","0x4398628ea6632d393e929cbd928464c568aa4a0c":"0x4be4e7267b6ae00000","0x439d2f2f5110a4d58b1757935015408740fec7f8":"0xcfa5c5150f4c888000","0x439dee3f7679ff1030733f9340c096686b49390b":"0x6c6b935b8bbd400000","0x43b079baf0727999e66bf743d5bcbf776c3b0922":"0x6c6b935b8bbd400000","0x43bc2d4ddcd6583be2c7bc094b28fb72e62ba83b":"0x6c6b935b8bbd400000","0x43c7ebc5b3e7af16f47dc5617ab10e0f39b4afbb":"0x678a932062e4180000","0x43cb9652818c6f4d6796b0e89409306c79db6349":"0x6c6b935b8bbd400000","0x43cc08d0732aa58adef7619bed46558ad7774173":"0xf0e7dcb0122a8f0000","0x43d5a71ce8b8f8ae02b2eaf8eaf2ca2840b93fb6":"0x14542ba12a337c00000","0x43db7ff95a086d28ebbfb82fb8fb5f230a5ebccd":"0xdf6eb0b2d3ca0000","0x43e7ec846358d7d0f937ad1c350ba069d7bf72bf":"0x670ae629214680000","0x43f16f1e75c3c06a9478e8c597a40a3cb0bf04cc":"0x9df7dfa8f760480000","0x43f470ed659e2991c375957e5ddec5bd1d382231":"0x56bc75e2d63100000","0x43f7e86e381ec51ec4906d1476cba97a3db584e4":"0x3635c9adc5dea00000","0x43ff38743ed0cd43308c066509cc8e7e72c862aa":"0x692ae8897081d00000","0x43ff8853e98ed8406b95000ada848362d6a0392a":"0x4ae0b1c4d2e84d00000","0x44098866a69b68c0b6bc168229b9603587058967":"0xa31062beeed700000","0x4419ac618d5dea7cdc6077206fb07dbdd71c1702":"0xd8d726b7177a800000","0x441a52001661fac718b2d7b351b7c6fb521a7afd":"0x15af1d78b58c400000","0x441aca82631324acbfa2468bda325bbd78477bbf":"0x14542ba12a337c00000","0x441f37e8a029fd02482f289c49b5d06d00e408a4":"0x1211ecb56d13488000","0x4420aa35465be617ad2498f370de0a3cc4d230af":"0x6c6b935b8bbd400000","0x44232ff66ddad1fd841266380036afd7cf7d7f42":"0xad78ebc5ac6200000","0x44250d476e062484e9080a3967bf3a4a732ad73f":"0x1158e460913d00000","0x4429a29fee198450672c0c1d073162250bec6474":"0x362aaf8202f2500000","0x44355253b27748e3f34fe9cae1fb718c8f249529":"0xad78ebc5ac6200000","0x4438e880cb2766b0c1ceaec9d2418fceb952a044":"0x73fa073903f080000","0x444caf79b71338ee9aa7c733b02acaa7dc025948":"0x22b1c8c1227a00000","0x445cb8de5e3df520b499efc980f52bff40f55c76":"0x6c6b935b8bbd400000","0x446a8039cecf9dce4879cbcaf3493bf545a88610":"0x17b7883c06916600000","0x4474299d0ee090dc90789a1486489c3d0d645e6d":"0x3635c9adc5dea00000","0x448bf410ad9bbc2fecc4508d87a7fc2e4b8561ad":"0xad6eedd17cf3b8000","0x44901e0d0e08ac3d5e95b8ec9d5e0ff5f12e0393":"0x16a1f9f5fd7d960000","0x4493123c021ece3b33b1a452c9268de14007f9d3":"0x16a6502f15a1e540000","0x449ac4fbe383e36738855e364a57f471b2bfa131":"0x29b76432b94451200000","0x44a01fb04ac0db2cce5dbe281e1c46e28b39d878":"0x6c6acc67d7b1d40000","0x44a63d18424587b9b307bfc3c364ae10cd04c713":"0x1158e460913d00000","0x44a8989e32308121f72466978db395d1f76c3a4b":"0x18850299f42b06a0000","0x44c1110b18870ec81178d93d215838c551d48e64":"0xad6f98593bd8f0000","0x44c14765127cde11fab46c5d2cf4d4b2890023fd":"0x6c6b935b8bbd400000","0x44c54eaa8ac940f9e80f1e74e82fc14f1676856a":"0x1ab2cf7c9f87e200000","0x44cd77535a893fa7c4d5eb3a240e79d099a72d2d":"0x2c73c937742c500000","0x44dfba50b829becc5f4f14d1b04aab3320a295e5":"0x3635c9adc5dea00000","0x44e2fdc679e6bee01e93ef4a3ab1bcce012abc7c":"0x163d194900c5458000","0x44f62f2aaabc29ad3a6b04e1ff6f9ce452d1c140":"0x39992648a23c8a00000","0x44fff37be01a3888d3b8b8e18880a7ddefeeead3":"0xe0c5bfc7dae9a8000","0x4506fe19fa4b006baa3984529d8516db2b2b50ab":"0x6c6b935b8bbd400000","0x451b3699475bed5d7905f8905aa3456f1ed788fc":"0x8ac7230489e8000000","0x451b7070259bdba27100e36e23428a53dfe304e9":"0xb98bc829a6f90000","0x45272b8f62e9f9fa8ce04420e1aea3eba9686eac":"0xd8d726b7177a800000","0x452b64db8ef7d6df87c788639c2290be8482d575":"0x1b1ae4d6e2ef5000000","0x453e359a3397944c5a275ab1a2f70a5e5a3f6989":"0xd02ab486cedc00000","0x4549b15979255f7e65e99b0d5604db98dfcac8bf":"0xd8d726b7177a800000","0x454b61b344c0ef965179238155f277c3829d0b38":"0x6c6b935b8bbd400000","0x454f0141d721d33cbdc41018bd01119aa4784818":"0x14542ba12a337c00000","0x45533390e340fe0de3b3cf5fb9fc8ea552e29e62":"0x4f2591f896a6500000","0x455396a4bbd9bae8af9fb7c4d64d471db9c24505":"0x8ba52e6fc45e40000","0x455b9296921a74d1fc41617f43b8303e6f3ed76c":"0xe3aeb5737240a00000","0x455cb8ee39ffbc752331e5aefc588ef0ee593454":"0x3635463a780def8000","0x456ae0aca48ebcfae166060250525f63965e760f":"0x1043561a8829300000","0x456f8d746682b224679349064d1b368c7c05b176":"0xc893d09c8f51500000","0x457029c469c4548d168cec3e65872e4428d42b67":"0x6c6b935b8bbd400000","0x4571de672b9904bad8743692c21c4fdcea4c2e01":"0xd8d726b7177a800000","0x45781bbe7714a1c8f73b1c747921df4f84278b70":"0x6c6b935b8bbd400000","0x457bcef37dd3d60b2dd019e3fe61d46b3f1e7252":"0x1158e460913d00000","0x458e3cc99e947844a18e6a42918fef7e7f5f5eb3":"0x7b53f79e888dac00000","0x459393d63a063ef3721e16bd9fde45ee9dbd77fb":"0x6abad6a3c153050000","0x45a570dcc2090c86a6b3ea29a60863dde41f13b5":"0xc9a95ee2986520000","0x45a820a0672f17dc74a08112bc643fd1167736c3":"0xad6c43b2815ed8000","0x45b47105fe42c4712dce6e2a21c05bffd5ea47a9":"0x6c6b935b8bbd400000","0x45bb829652d8bfb58b8527f0ecb621c29e212ec3":"0x6c6b935b8bbd400000","0x45c0d19f0b8e054f9e893836d5ecae7901af2812":"0x10f0cf064dd59200000","0x45c4ecb4ee891ea984a7c5cefd8dfb00310b2850":"0x6b56051582a9700000","0x45ca8d956608f9e00a2f9974028640888465668f":"0x6c6b935b8bbd400000","0x45ca9862003b4e40a3171fb5cafa9028cac8de19":"0x2eb8eb1a172dcb80000","0x45d1c9eedf7cab41a779057b79395f5428d80528":"0x6c6b935b8bbd400000","0x45d4b54d37a8cf599821235f062fa9d170ede8a4":"0x1190673b5fda900000","0x45db03bccfd6a5f4d0266b82a22a368792c77d83":"0x1b1ae4d6e2ef5000000","0x45e3a93e72144ada860cbc56ff85145ada38c6da":"0x57473d05dabae80000","0x45e68db8dbbaba5fc2cb337c62bcd0d61b059189":"0x6c6b935b8bbd400000","0x45e68db94c7d0ab7ac41857a71d67147870f4e71":"0x54b40b1f852bda000000","0x45f4fc60f08eaca10598f0336329801e3c92cb46":"0xad78ebc5ac6200000","0x460d5355b2ceeb6e62107d81e51270b26bf45620":"0x6cb7e74867d5e60000","0x46224f32f4ece5c8867090d4409d55e50b18432d":"0x14542ba12a337c00000","0x4627c606842671abde8295ee5dd94c7f549534f4":"0xf895fbd8732f40000","0x462b678b51b584f3ed7ada070b5cd99c0bf7b87f":"0x56bc75e2d63100000","0x464d9c89cce484df000277198ed8075fa63572d1":"0x1158e460913d00000","0x46504e6a215ac83bccf956befc82ab5a679371c8":"0x1c212805c2b4a50000","0x4651dc420e08c3293b27d2497890eb50223ae2f4":"0x43c33c1937564800000","0x46531e8b1bde097fdf849d6d119885608a008df7":"0xad78ebc5ac6200000","0x466292f0e80d43a78774277590a9eb45961214f4":"0x34957444b840e80000","0x4662a1765ee921842ddc88898d1dc8627597bd7e":"0x21e19e0c9bab2400000","0x4665e47396c7db97eb2a03d90863d5d4ba319a94":"0x2086ac351052600000","0x466fda6b9b58c5532750306a10a2a8c768103b07":"0xad6eedd17cf3b8000","0x467124ae7f452f26b3d574f6088894fa5d1cfb3b":"0x925e06eec972b00000","0x46722a36a01e841d03f780935e917d85d5a67abd":"0xcec76f0e71520000","0x46779a5656ff00d73eac3ad0c38b6c853094fb40":"0xc8253c96c6af00000","0x4677b04e0343a32131fd6abb39b1b6156bba3d5b":"0xad78ebc5ac6200000","0x467d5988249a68614716659840ed0ae6f6f457bc":"0x1501a48cefdfde0000","0x467e0ed54f3b76ae0636176e07420815a021736e":"0x6c6b935b8bbd400000","0x467ea10445827ef1e502daf76b928a209e0d4032":"0x6c6b935b8bbd400000","0x467fbf41441600757fe15830c8cd5f4ffbbbd560":"0x21e19e0c9bab2400000","0x469358709332c82b887e20bcddd0220f8edba7d0":"0x3a9d5baa4abf1d00000","0x4697baaf9ccb603fd30430689d435445e9c98bf5":"0xad201a6794ff80000","0x46a30b8a808931217445c3f5a93e882c0345b426":"0xd8db5ebd7b2638000","0x46a430a2d4a894a0d8aa3feac615361415c3f81f":"0x6c6b935b8bbd400000","0x46aa501870677e7f0a504876b4e8801a0ad01c46":"0x2b5e3af16b18800000","0x46bfc5b207eb2013e2e60f775fecd71810c5990c":"0x54069233bf7f780000","0x46c1aa2244b9c8a957ca8fac431b0595a3b86824":"0xd8d726b7177a800000","0x46d80631284203f6288ecd4e5758bb9d41d05dbe":"0x6c6b935b8bbd400000","0x470ac5d1f3efe28f3802af925b571e63868b397d":"0x6c6b935b8bbd400000","0x471010da492f4018833b088d9872901e06129174":"0x1b1ae4d6e2ef500000","0x4712540265cbeec3847022c59f1b318d43400a9e":"0xbdbc41e0348b300000","0x4714cfa4f46bd6bd70737d75878197e08f88e631":"0x27f3edfb34e6e400000","0x472048cc609aeb242165eaaa8705850cf3125de0":"0x3635c9adc5dea00000","0x47219229e8cd56659a65c2a943e2dd9a8f4bfd89":"0x52663ccab1e1c00000","0x4737d042dc6ae73ec73ae2517acea2fdd96487c5":"0x3635c9adc5dea00000","0x474158a1a9dc693c133f65e47b5c3ae2f773a86f":"0xada55474b81340000","0x4745ab181a36aa8cbf2289d0c45165bc7ebe2381":"0x222c8eb3ff6640000","0x475066f9ad26655196d5535327bbeb9b7929cb04":"0xa4cc799563c3800000","0x4752218e54de423f86c0501933917aea08c8fed5":"0x43c33c1937564800000","0x475a6193572d4a4e59d7be09cb960ddd8c530e2f":"0x242cf78cdf07ff8000","0x47648bed01f3cd3249084e635d14daa9e7ec3c8a":"0xa844a7424d9c80000","0x47688410ff25d654d72eb2bc06e4ad24f833b094":"0x8b28d61f3d3ac0000","0x476b5599089a3fb6f29c6c72e49b2e4740ea808d":"0x97c9ce4cf6d5c00000","0x47730f5f8ebf89ac72ef80e46c12195038ecdc49":"0xab4dcf399a3a600000","0x477b24eee8839e4fd19d1250bd0b6645794a61ca":"0x1b1ae4d6e2ef5000000","0x4781a10a4df5eebc82f4cfe107ba1d8a7640bd66":"0x61093d7c2c6d380000","0x47885ababedf4d928e1c3c71d7ca40d563ed595f":"0x62a992e53a0af00000","0x478dc09a1311377c093f9cc8ae74111f65f82f39":"0xd8d726b7177a800000","0x478e524ef2a381d70c82588a93ca7a5fa9d51cbf":"0x35fa97226f8899700000","0x479298a9de147e63a1c7d6d2fce089c7e64083bd":"0x21e19dd3c3c0d798000","0x479abf2da4d58716fd973a0d13a75f530150260a":"0x1158e460913d00000","0x47a281dff64167197855bf6e705eb9f2cef632ea":"0x3636c9796436740000","0x47beb20f759100542aa93d41118b3211d664920e":"0x6c6b935b8bbd400000","0x47c247f53b9fbeb17bba0703a00c009fdb0f6eae":"0x43c33c1937564800000","0x47c7e5efb48b3aed4b7c6e824b435f357df4c723":"0xfc936392801c0000","0x47cf9cdaf92fc999cc5efbb7203c61e4f1cdd4c3":"0x71f8a93d01e540000","0x47d20e6ae4cad3f829eac07e5ac97b66fdd56cf5":"0x3635c9adc5dea00000","0x47d792a756779aedf1343e8883a6619c6c281184":"0x6c6b935b8bbd400000","0x47e25df8822538a8596b28c637896b4d143c351d":"0x110be9eb24b881500000","0x47f4696bd462b20da09fb83ed2039818d77625b3":"0x813ca56906d340000","0x47fef58584465248a0810d60463ee93e5a6ee8d3":"0xf58cd3e1269160000","0x47ff6feb43212060bb1503d7a397fc08f4e70352":"0x6c6b935b8bbd400000","0x47fff42c678551d141eb75a6ee398117df3e4a8d":"0x56beae51fd2d10000","0x48010ef3b8e95e3f308f30a8cb7f4eb4bf60d965":"0x6c6b935b8bbd400000","0x480af52076009ca73781b70e43b95916a62203ab":"0x321972f4083d878000","0x480f31b989311e4124c6a7465f5a44094d36f9d0":"0x3790bb855137640000","0x481115296ab7db52492ff7b647d63329fb5cbc6b":"0x368c8623a8b4d100000","0x481e3a91bfdc2f1c8428a0119d03a41601417e1c":"0x3635c9adc5dea00000","0x4828e4cbe34e1510afb72c2beeac8a4513eaebd9":"0xd5967be4fc3f100000","0x482982ac1f1c6d1721feecd9b9c96cd949805055":"0x21e19e0c9bab2400000","0x48302c311ef8e5dc664158dd583c81194d6e0d58":"0xb6676ce0bccb5c0000","0x483ba99034e900e3aedf61499d3b2bce39beb7aa":"0x35659ef93f0fc40000","0x48548b4ba62bcb2f0d34a88dc69a680e539cf046":"0x56cf1cbbb74320000","0x4863849739265a63b0a2bf236a5913e6f959ce15":"0x52663ccab1e1c00000","0x48659d8f8c9a2fd44f68daa55d23a608fbe500dc":"0x6c6b935b8bbd400000","0x48669eb5a801d8b75fb6aa58c3451b7058c243bf":"0x68d42c138dab9f00000","0x486a6c8583a84484e3df43a123837f8c7e2317d0":"0x1187c571ab80450000","0x487adf7d70a6740f8d51cbdd68bb3f91c4a5ce68":"0x39fbae8d042dd0000","0x487e108502b0b189ef9c8c6da4d0db6261eec6c0":"0x678a932062e4180000","0x4888fb25cd50dbb9e048f41ca47d78b78a27c7d9":"0x3a9d5baa4abf1d00000","0x489334c2b695c8ee0794bd864217fb9fd8f8b135":"0xfc936392801c0000","0x48a30de1c919d3fd3180e97d5f2b2a9dbd964d2d":"0x2629f66e0c5300000","0x48bf14d7b1fc84ebf3c96be12f7bce01aa69b03e":"0x68155a43676e00000","0x48c2ee91a50756d8ce9abeeb7589d22c6fee5dfb":"0xae8e7a0bb575d00000","0x48c5c6970b9161bb1c7b7adfed9cdede8a1ba864":"0xd8d726b7177a800000","0x48d2434b7a7dbbff08223b6387b05da2e5093126":"0x3cfc82e37e9a7400000","0x48d4f2468f963fd79a006198bb67895d2d5aa4d3":"0x4be4e7267b6ae00000","0x48e0cbd67f18acdb7a6291e1254db32e0972737f":"0x56be03ca3e47d8000","0x48f60a35484fe7792bcc8a7b6393d0dda1f6b717":"0xc328093e61ee400000","0x48f883e567b436a27bb5a3124dbc84dec775a800":"0x29d76e869dcd800000","0x490145afa8b54522bb21f352f06da5a788fa8f1d":"0x1f46c62901a03fb0000","0x4909b31998ead414b8fb0e846bd5cbde393935be":"0xd8d726b7177a800000","0x4912d902931676ff39fc34fe3c3cc8fb2182fa7a":"0x1158e460913d00000","0x49136fe6e28b7453fcb16b6bbbe9aaacba8337fd":"0x6c6b935b8bbd400000","0x491561db8b6fafb9007e62d050c282e92c4b6bc8":"0x65a4da25d3016c00000","0x49185dd7c23632f46c759473ebae966008cd3598":"0xdc55fdb17647b0000","0x492cb5f861b187f9df21cd4485bed90b50ffe22d":"0x1b19e50b44977c0000","0x492de46aaf8f1d708d59d79af1d03ad2cb60902f":"0x6c6b935b8bbd400000","0x492e70f04d18408cb41e25603730506b35a2876b":"0x222c8eb3ff6640000","0x493a67fe23decc63b10dda75f3287695a81bd5ab":"0x2fb474098f67c00000","0x493d48bda015a9bfcf1603936eab68024ce551e0":"0x138a388a43c000000","0x494256e99b0f9cd6e5ebca3899863252900165c8":"0x2f6f10780d22cc00000","0x494dec4d5ee88a2771a815f1ee7264942fb58b28":"0x6c6b935b8bbd400000","0x495b641b1cdea362c3b4cbbd0f5cc50b1e176b9c":"0x3635c9adc5dea00000","0x4968a2cedb457555a139295aea28776e54003c87":"0x2231aefc9a6628f0000","0x496d365534530a5fc1577c0a5241cb88c4da7072":"0x61093d7c2c6d380000","0x496e319592b341eaccd778dda7c8196d54cac775":"0x1f5718987664b480000","0x496f5843f6d24cd98d255e4c23d1e1f023227545":"0x5f179fd4a6ee098000","0x4970d3acf72b5b1f32a7003cf102c64ee0547941":"0x1da56a4b0835bf800000","0x4977a7939d0939689455ce2639d0ee5a4cd910ed":"0x62a992e53a0af00000","0x4979194ec9e97db9bee8343b7c77d9d7f3f1dc9f":"0x1158e460913d00000","0x49793463e1681083d6abd6e725d5bba745dccde8":"0x1d98e94c4e471f0000","0x4981c5ff66cc4e9680251fc4cd2ff907cb327865":"0x28a857425466f80000","0x49897fe932bbb3154c95d3bce6d93b6d732904dd":"0xd8d726b7177a800000","0x4989e1ab5e7cd00746b3938ef0f0d064a2025ba5":"0x6c6b935b8bbd400000","0x498abdeb14c26b7b7234d70fceaef361a76dff72":"0xa2a15d09519be00000","0x49a645e0667dfd7b32d075cc2467dd8c680907c4":"0x70601958fcb9c0000","0x49b74e169265f01a89ec4c9072c5a4cd72e4e835":"0x368c8623a8b4d100000","0x49bdbc7ba5abebb6389e91a3285220d3451bd253":"0x3635c9adc5dea00000","0x49c941e0e5018726b7290fc473b471d41dae80d1":"0x1b1ae4d6e2ef500000","0x49c9771fca19d5b9d245c891f8158fe49f47a062":"0x21e19e0c9bab2400000","0x49cf1e54be363106b920729d2d0ba46f0867989a":"0xe873f44133cb00000","0x49d2c28ee9bc545eaaf7fd14c27c4073b4bb5f1a":"0x4fe9b806b40daf0000","0x49ddee902e1d0c99d1b11af3cc8a96f78e4dcf1a":"0xacea5e4c18c530000","0x49f028395b5a86c9e07f7778630e4c2e3d373a77":"0x6a74a5038db918000","0x4a192035e2619b24b0709d56590e9183ccf2c1d9":"0x21e19e0c9bab2400000","0x4a4053b31d0ee5dbafb1d06bd7ac7ff3222c47d6":"0x4be4e7267b6ae00000","0x4a430170152de5172633dd8262d107a0afd96a0f":"0xab4dcf399a3a600000","0x4a47fc3e177f567a1e3893e000e36bba23520ab8":"0x6c6b935b8bbd400000","0x4a52bad20357228faa1e996bed790c93674ba7d0":"0x487a9a304539440000","0x4a53dcdb56ce4cdce9f82ec0eb13d67352e7c88b":"0xe3aeb5737240a00000","0x4a5fae3b0372c230c125d6d470140337ab915656":"0x56bc75e2d631000000","0x4a719061f5285495b37b9d7ef8a51b07d6e6acac":"0xad4c8316a0b0c0000","0x4a73389298031b8816cca946421c199e18b343d6":"0x223868b879146f0000","0x4a735d224792376d331367c093d31c8794341582":"0x66ffcbfd5e5a300000","0x4a7494cce44855cc80582842be958a0d1c0072ee":"0x821ab0d44149800000","0x4a75c3d4fa6fccbd5dd5a703c15379a1e783e9b7":"0x62a992e53a0af00000","0x4a81abe4984c7c6bef63d69820e55743c61f201c":"0x36401004e9aa3470000","0x4a82694fa29d9e213202a1a209285df6e745c209":"0xd8d726b7177a800000","0x4a835c25824c47ecbfc79439bf3f5c3481aa75cd":"0x4be4e7267b6ae00000","0x4a918032439159bb315b6725b6830dc83697739f":"0x12a32ef678334c0000","0x4a97e8fcf4635ea7fc5e96ee51752ec388716b60":"0x1d9945ab2b03480000","0x4a9a26fd0a8ba10f977da4f77c31908dab4a8016":"0x61093d7c2c6d380000","0x4aa148c2c33401e66a2b586e6577c4b292d3f240":"0xbb860b285f7740000","0x4aa693b122f314482a47b11cc77c68a497876162":"0x6acb3df27e1f880000","0x4ab2d34f04834fbf7479649cab923d2c4725c553":"0xbed1d0263d9f000000","0x4ac07673e42f64c1a25ec2fa2d86e5aa2b34e039":"0x6c6b935b8bbd400000","0x4ac5acad000b8877214cb1ae00eac9a37d59a0fd":"0xd8d726b7177a800000","0x4ac9905a4cb6ab1cfd62546ee5917300b87c4fde":"0x3708baed3d68900000","0x4acfa9d94eda6625c9dfa5f9f4f5d107c4031fdf":"0x222c8eb3ff6640000","0x4ad047fae67ef162fe68fedbc27d3b65caf10c36":"0x6acb3df27e1f880000","0x4ad95d188d6464709add2555fb4d97fe1ebf311f":"0x12c1b6eed03d280000","0x4adbf4aae0e3ef44f7dd4d8985cfaf096ec48e98":"0x821ab0d4414980000","0x4ae2a04d3909ef454e544ccfd614bfefa71089ae":"0x1801159df1eef80000","0x4ae93082e45187c26160e66792f57fad3551c73a":"0x4961520daff82280000","0x4af0db077bb9ba5e443e21e148e59f379105c592":"0x2086ac351052600000","0x4b0619d9d8aa313a9531ac7dbe04ca0d6a5ad1b6":"0x6c6b935b8bbd400000","0x4b0bd8acfcbc53a6010b40d4d08ddd2d9d69622d":"0x243d4d18229ca20000","0x4b19eb0c354bc1393960eb06063b83926f0d67b2":"0x19274b259f6540000","0x4b29437c97b4a844be71cca3b648d4ca0fdd9ba4":"0x824719834cfac0000","0x4b31bf41abc75c9ae2cd8f7f35163b6e2b745054":"0x14b550a013c7380000","0x4b3a7cc3a7d7b00ed5282221a60259f25bf6538a":"0x3635c9adc5dea00000","0x4b3aab335ebbfaa870cc4d605e7d2e74c668369f":"0xcb49b44ba602d800000","0x4b3c7388cc76da3d62d40067dabccd7ef0433d23":"0x56cd55fc64dfe0000","0x4b3dfbdb454be5279a3b8addfd0ed1cd37a9420d":"0x6c6b935b8bbd400000","0x4b470f7ba030bc7cfcf338d4bf0432a91e2ea5ff":"0x6c6b935b8bbd400000","0x4b53ae59c784b6b5c43616b9a0809558e684e10c":"0x410d586a20a4c00000","0x4b58101f44f7e389e12d471d1635b71614fdd605":"0x8ac7230489e800000","0x4b5cdb1e428c91dd7cb54a6aed4571da054bfe52":"0x4c53ecdc18a600000","0x4b60a3e253bf38c8d5662010bb93a473c965c3e5":"0x50c5e761a444080000","0x4b74f5e58e2edf76daf70151964a0b8f1de0663c":"0x1190ae4944ba120000","0x4b762166dd1118e84369f804c75f9cd657bf730c":"0x1b1ae4d6e2ef500000","0x4b792e29683eb586e394bb33526c6001b397999e":"0x2086ac351052600000","0x4b904e934bd0cc8b20705f879e905b93ea0ccc30":"0x6c6b935b8bbd400000","0x4b9206ba6b549a1a7f969e1d5dba867539d1fa67":"0x1ab2cf7c9f87e200000","0x4b984ef26c576e815a2eaed2f5177f07dbb1c476":"0x54915956c409600000","0x4b9e068fc4680976e61504912985fd5ce94bab0d":"0x243d4d18229ca20000","0x4ba0d9e89601772b496847a2bb4340186787d265":"0x3635c9adc5dea00000","0x4ba53ab549e2016dfa223c9ed5a38fad91288d07":"0x4be4e7267b6ae00000","0x4ba8e0117fc0b6a3e56b24a3a58fe6cef442ff98":"0x131beb925ffd3200000","0x4bac846af4169f1d95431b341d8800b22180af1a":"0x1158e460913d00000","0x4bb6d86b8314c22d8d37ea516d0019f156aae12d":"0x3635c9adc5dea00000","0x4bb9655cfb2a36ea7c637a7b859b4a3154e26ebe":"0x3635c9adc5dea000000","0x4bbcbf38b3c90163a84b1cd2a93b58b2a3348d87":"0x1b1ae4d6e2ef5000000","0x4bd6dd0cff23400e1730ba7b894504577d14e74a":"0x2ba0ccddd0df73b00000","0x4be8628a8154874e048d80c142181022b180bcc1":"0x340aad21b3b700000","0x4be90d412129d5a4d0424361d6649d4e47a62316":"0x3708baed3d68900000","0x4bea288eea42c4955eb9faad2a9faf4783cbddac":"0x618be1663c4af490000","0x4bf4479799ef82eea20943374f56a1bf54001e5e":"0xd5967be4fc3f100000","0x4bf8bf1d35a231315764fc8001809a949294fc49":"0x39fbae8d042dd0000","0x4bf8e26f4c2790da6533a2ac9abac3c69a199433":"0xad78ebc5ac6200000","0x4c0aca508b3caf5ee028bc707dd1e800b838f453":"0xfc936392801c0000","0x4c0b1515dfced7a13e13ee12c0f523ae504f032b":"0xa968163f0a57b400000","0x4c13980c32dcf3920b78a4a7903312907c1b123f":"0x3410015faae0c0000","0x4c1579af3312e4f88ae93c68e9449c2e9a68d9c4":"0x6c6b935b8bbd400000","0x4c23b370fc992bb67cec06e26715b62f0b3a4ac3":"0x21e19e0c9bab2400000","0x4c24b78baf2bafc7fcc69016426be973e20a50b2":"0xa2a15d09519be00000","0x4c2f1afef7c5868c44832fc77cb03b55f89e6d6e":"0x43c33c1937564800000","0x4c377bb03ab52c4cb79befa1dd114982924c4ae9":"0x631603ccd38dd70000","0x4c3e95cc3957d252ce0bf0c87d5b4f2234672e70":"0x878678326eac900000","0x4c423c76930d07f93c47a5cc4f615745c45a9d72":"0x56bc75e2d63100000","0x4c45d4c9a725d11112bfcbca00bf31186ccaadb7":"0x15af1d78b58c400000","0x4c4e6f13fb5e3f70c3760262a03e317982691d10":"0x56bc75e2d63100000","0x4c5afe40f18ffc48d3a1aec41fc29de179f4d297":"0x6c6b935b8bbd400000","0x4c5b3dc0e2b9360f91289b1fe13ce12c0fbda3e1":"0x6c6b935b8bbd400000","0x4c666b86f1c5ee8ca41285f5bde4f79052081406":"0x1b1ae4d6e2ef500000","0x4c696be99f3a690440c3436a59a7d7e937d6ba0d":"0xbb9125542263900000","0x4c6a248fc97d705def495ca20759169ef0d36471":"0x29331e6558f0e00000","0x4c6a9dc2cab10abb2e7c137006f08fecb5b779e1":"0x1b0d04202f47ec0000","0x4c6b93a3bec16349540cbfcae96c9621d6645010":"0x6c6b935b8bbd400000","0x4c759813ad1386bed27ffae9e4815e3630cca312":"0x6c6b935b8bbd400000","0x4c760cd9e195ee4f2d6bce2500ff96da7c43ee91":"0xcb49b44ba602d800000","0x4c767b65fd91161f4fbdcc6a69e2f6ad711bb918":"0x270801d946c9400000","0x4c7e2e2b77ad0cd6f44acb2861f0fb8b28750ef9":"0x1158e460913d00000","0x4c85ed362f24f6b9f04cdfccd022ae535147cbb9":"0x5150ae84a8cdf00000","0x4c935bb250778b3c4c7f7e07fc251fa630314aab":"0x5150ae84a8cdf00000","0x4c997992036c5b433ac33d25a8ea1dc3d4e4e6d8":"0x1953b3d4ab1680000","0x4c99dae96481e807c1f99f8b7fbde29b7547c5bf":"0x821ab0d4414980000","0x4c9a862ad115d6c8274ed0b944bdd6a5500510a7":"0x56bc75e2d63100000","0x4ca783b556e5bf53aa13c8116613d65782c9b642":"0x5561840b4ad83c00000","0x4ca7b717d9bc8793b04e051a8d23e1640f5ba5e3":"0x43b514549ecf620000","0x4ca8db4a5efefc80f4cd9bbcccb03265931332b6":"0xad78ebc5ac6200000","0x4cac91fb83a147d2f76c3267984b910a79933348":"0x75792a8abdef7c0000","0x4cadf573ce4ceec78b8e1b21b0ed78eb113b2c0e":"0x6c6b935b8bbd400000","0x4cb5c6cd713ca447b848ae2f56b761ca14d7ad57":"0xe7eeba3410b740000","0x4cc22c9bc9ad05d875a397dbe847ed221c920c67":"0x6c6b935b8bbd400000","0x4cd0b0a6436362595ceade052ebc9b929fb6c6c0":"0x6c6b935b8bbd400000","0x4cda41dd533991290794e22ae324143e309b3d3d":"0x821ab0d44149800000","0x4cee901b4ac8b156c5e2f8a6f1bef572a7dceb7e":"0x3635c9adc5dea00000","0x4cefbe2398e47d52e78db4334c8b697675f193ae":"0xd96fce90cfabcc0000","0x4cf5537b85842f89cfee359eae500fc449d2118f":"0x3635c9adc5dea00000","0x4d08471d68007aff2ae279bc5e3fe4156fbbe3de":"0x878678326eac9000000","0x4d200110124008d56f76981256420c946a6ff45c":"0xad6eedd17cf3b8000","0x4d24b7ac47d2f27de90974ba3de5ead203544bcd":"0x56bc75e2d63100000","0x4d29fc523a2c1629532121da9998e9b5ab9d1b45":"0xdb44e049bb2c0000","0x4d38d90f83f4515c03cc78326a154d358bd882b7":"0xa076407d3f7440000","0x4d4cf5807429615e30cdface1e5aae4dad3055e6":"0x2086ac351052600000","0x4d57e716876c0c95ef5eaebd35c8f41b069b6bfe":"0x6c6b935b8bbd400000","0x4d67f2ab8599fef5fc413999aa01fd7fce70b43d":"0x21e19e0c9bab2400000","0x4d6e8fe109ccd2158e4db114132fe75fecc8be5b":"0x15b3557f1937f8000","0x4d71a6eb3d7f327e1834278e280b039eddd31c2f":"0x14542ba12a337c00000","0x4d7cfaa84cb33106800a8c802fb8aa463896c599":"0x61093d7c2c6d380000","0x4d801093c19ca9b8f342e33cc9c77bbd4c8312cf":"0x12b3e7fb95cda48000","0x4d828894752f6f25175daf2177094487954b6f9f":"0x4f212bc2c49c838000","0x4d82d7700c123bb919419bbaf046799c6b0e2c66":"0x43c33c1937564800000","0x4d836d9d3b0e2cbd4de050596faa490cffb60d5d":"0x1043561a8829300000","0x4d8697af0fbf2ca36e8768f4af22133570685a60":"0x1158e460913d00000","0x4d9279962029a8bd45639737e98b511eff074c21":"0x487a9a304539440000","0x4d93696fa24859f5d2939aebfa54b4b51ae1dccc":"0x10910d4cdc9f60000","0x4d9c77d0750c5e6fbc247f2fd79274686cb353d6":"0x1158e460913d00000","0x4da5edc688b0cb62e1403d1700d9dcb99ffe3fd3":"0x6c6b935b8bbd400000","0x4da8030769844bc34186b85cd4c7348849ff49e9":"0x21e19e0c9bab2400000","0x4db1c43a0f834d7d0478b8960767ec1ac44c9aeb":"0x2f5181305627370000","0x4db21284bcd4f787a7556500d6d7d8f36623cf35":"0x6928374f77a3630000","0x4dc3da13b2b4afd44f5d0d3189f444d4ddf91b1b":"0x6c6b935b8bbd400000","0x4dc4bf5e7589c47b28378d7503cf96488061dbbd":"0x5f68e8131ecf800000","0x4dc9d5bb4b19cecd94f19ec25d200ea72f25d7ed":"0x6c6b935b8bbd400000","0x4dcd11815818ae29b85d01367349a8a7fb12d06b":"0x1ac4286100191f00000","0x4dcf62a3de3f061db91498fd61060f1f6398ff73":"0x6c6acc67d7b1d40000","0x4dd131c74a068a37c90aded4f309c2409f6478d3":"0x15af39e4aab2740000","0x4ddda7586b2237b053a7f3289cf460dc57d37a09":"0x21e19e0c9bab2400000","0x4de3fe34a6fbf634c051997f47cc7f48791f5824":"0x6c5db2a4d815dc0000","0x4df140ba796585dd5489315bca4bba680adbb818":"0x90f534608a72880000","0x4e020779b5ddd3df228a00cb48c2fc979da6ae38":"0x6c6b935b8bbd400000","0x4e0bd32473c4c51bf25654def69f797c6b29a232":"0x56c95de8e8ca1d0000","0x4e2225a1bb59bc88a2316674d333b9b0afca6655":"0x8670e9ec6598c0000","0x4e2310191ead8d3bc6489873a5f0c2ec6b87e1be":"0x3635c9adc5dea00000","0x4e232d53b3e6be8f895361d31c34d4762b12c82e":"0x5f68e8131ecf800000","0x4e2bfa4a466f82671b800eee426ad00c071ba170":"0xd8d726b7177a800000","0x4e3edad4864dab64cae4c5417a76774053dc6432":"0x2008fb478cbfa98000","0x4e4318f5e13e824a54edfe30a7ed4f26cd3da504":"0x6c6b935b8bbd400000","0x4e5b77f9066159e615933f2dda7477fa4e47d648":"0xad78ebc5ac6200000","0x4e6600806289454acda330a2a3556010dfacade6":"0x14542ba12a337c00000","0x4e73cf2379f124860f73d6d91bf59acc5cfc845b":"0x22ca3587cf4eb0000","0x4e7aa67e12183ef9d7468ea28ad239c2eef71b76":"0x10afc1ade3b4ed40000","0x4e7b54474d01fefd388dfcd53b9f662624418a05":"0x1b1ae4d6e2ef5000000","0x4e892e8081bf36e488fddb3b2630f3f1e8da30d2":"0x28aba30752451fc0000","0x4e8a6d63489ccc10a57f885f96eb04ecbb546024":"0x3eae3130ecc96900000","0x4e8e47ae3b1ef50c9d54a38e14208c1abd3603c2":"0x7928db1276660c0000","0x4e90ccb13258acaa9f4febc0a34292f95991e230":"0xdb44e049bb2c0000","0x4ea56e1112641c038d0565a9c296c463afefc17e":"0x9ddc1e3b901180000","0x4ea70f04313fae65c3ff224a055c3d2dab28dddf":"0x43c30fb0884a96c0000","0x4eb1454b573805c8aca37edec7149a41f61202f4":"0x1043561a8829300000","0x4eb87ba8788eba0df87e5b9bd50a8e45368091c1":"0x1158e460913d00000","0x4ebc5629f9a6a66b2cf3363ac4895c0348e8bf87":"0x3637096c4bcc690000","0x4ec768295eeabafc42958415e22be216cde77618":"0x33b1dbc39c5480000","0x4ecc19948dd9cd87b4c7201ab48e758f28e7cc76":"0x1b1dab61d3aa640000","0x4ed14d81b60b23fb25054d8925dfa573dcae6168":"0x126e72a69a50d00000","0x4ee13c0d41200b46d19dee5c4bcec71d82bb8e38":"0x1abee13ccbeefaf8000","0x4eead40aad8c73ef08fc84bc0a92c9092f6a36bf":"0x1731790534df20000","0x4eebe80cb6f3ae5904f6f4b28d907f907189fcab":"0x6c6acc67d7b1d40000","0x4eebf1205d0cc20cee6c7f8ff3115f56d48fba26":"0x10d3aa536e2940000","0x4ef1c214633ad9c0703b4e2374a2e33e3e429291":"0x487a9a304539440000","0x4efcd9c79fb4334ca6247b0a33bd9cc33208e272":"0x487a9a304539440000","0x4f06246b8d4bd29661f43e93762201d286935ab1":"0x105394ffc4636110000","0x4f152b2fb8659d43776ebb1e81673aa84169be96":"0x6c6b935b8bbd400000","0x4f177f9d56953ded71a5611f393322c30279895c":"0xd55ef90a2da180000","0x4f1a2da54a4c6da19d142412e56e815741db2325":"0x56bc75e2d63100000","0x4f23b6b817ffa5c664acdad79bb7b726d30af0f9":"0x5f68e8131ecf800000","0x4f26690c992b7a312ab12e1385d94acd58288e7b":"0x2f6f10780d22cc00000","0x4f2b47e2775a1fa7178dad92985a5bbe493ba6d6":"0xad78ebc5ac6200000","0x4f3a4854911145ea01c644044bdb2e5a960a982f":"0xd8d726b7177a800000","0x4f3f2c673069ac97c2023607152981f5cd6063a0":"0x2086ac351052600000","0x4f4a9be10cd5d3fb5de48c17be296f895690645b":"0x878678326eac9000000","0x4f52ad6170d25b2a2e850eadbb52413ff2303e7f":"0xa4cc799563c3800000","0x4f5801b1eb30b712d8a0575a9a71ff965d4f34eb":"0x1043561a8829300000","0x4f5df5b94357de948604c51b7893cddf6076baad":"0xcbd47b6eaa8cc00000","0x4f64a85e8e9a40498c0c75fceb0337fb49083e5e":"0x3635c9adc5dea00000","0x4f67396d2553f998785f704e07a639197dd1948d":"0x104472521ba7380000","0x4f6d4737d7a940382487264886697cf7637f8015":"0x5a87e7d7f5f6580000","0x4f7330096f79ed264ee0127f5d30d2f73c52b3d8":"0x1b1a7a420ba00d0000","0x4f767bc8794aef9a0a38fea5c81f14694ff21a13":"0x1bc433f23f83140000","0x4f85bc1fc5cbc9c001e8f1372e07505370d8c71f":"0x32f51edbaaa3300000","0x4f88dfd01091a45a9e2676021e64286cd36b8d34":"0x3635c9adc5dea00000","0x4f8972838f70c903c9b6c6c46162e99d6216d451":"0xf9e89a0f2c56c80000","0x4f8ae80238e60008557075ab6afe0a7f2e74d729":"0x56bc75e2d63100000","0x4f8e8d274fb22a3fd36a47fe72980471544b3434":"0xad78ebc5ac6200000","0x4f9ce2af9b8c5e42c6808a3870ec576f313545d1":"0x21e19e0c9bab2400000","0x4fa3f32ef4086448b344d5f0a9890d1ce4d617c3":"0x5150ae84a8cdf00000","0x4fa554ab955c249217386a4d3263bbf72895434e":"0x1154e53217ddb0000","0x4fa983bb5e3073a8edb557effeb4f9fb1d60ef86":"0x56b9af57e575ec0000","0x4faf90b76ecfb9631bf9022176032d8b2c207009":"0x36363b5d9a77700000","0x4fc46c396e674869ad9481638f0013630c87caac":"0x3635c9adc5dea00000","0x4fcc19ea9f4c57dcbce893193cfb166aa914edc5":"0x17b8baa7f19546a0000","0x4fce8429ba49caa0369d1e494db57e89eab2ad39":"0x2a5a058fc295ed000000","0x4fdac1aa517007e0089430b3316a1badd12c01c7":"0x1b1ae4d6e2ef500000","0x4fe56ab3bae1b0a44433458333c4b05a248f8241":"0x762d93d1dd6f900000","0x4feb846be43041fd6b34202897943e3f21cb7f04":"0x482fe260cbca90000","0x4fee50c5f988206b09a573469fb1d0b42ebb6dce":"0x6cee06ddbe15ec0000","0x4ff676e27f681a982d8fd9d20e648b3dce05e945":"0x97c9ce4cf6d5c00000","0x4ff67fb87f6efba9279930cfbd1b7a343c79fade":"0x15af1d78b58c400000","0x5006fe4c22173980f00c74342b39cd231c653129":"0x6c6b935b8bbd400000","0x500c16352e901d48ba8d04e2c767121772790b02":"0x1a3a6824973098000","0x500c902958f6421594d1b6ded712490d52ed6c44":"0x6acb3df27e1f880000","0x500e34cde5bd9e2b71bb92d7cf55eee188d5fa0c":"0x121ea68c114e5100000","0x5032e4bcf7932b49fdba377b6f1499636513cfc3":"0x56bc75e2d63100000","0x50378af7ef54043f892ab7ce97d647793511b108":"0x11164759ffb320000","0x503bdbd8bc421c32a443032deb2e3e4cd5ba8b4e":"0x6c6b935b8bbd400000","0x504666ce8931175e11a5ed11c1dcaa06e57f4e66":"0x27f3edfb34e6e400000","0x50584d9206a46ce15c301117ee28f15c30e60e75":"0xb9f65d00f63c0000","0x505a33a18634dd4800693c67f48a1d693d4833f8":"0x18921b79941dcd00000","0x505e4f7c275588c533a20ebd2ac13b409bbdea3c":"0xf43fc2c04ee00000","0x5062e5134c612f12694dbd0e131d4ce197d1b6a4":"0x3635c9adc5dea00000","0x506411fd79003480f6f2b6aac26b7ba792f094b2":"0x1b1ae4d6e2ef500000","0x5067f4549afbfe884c59cbc12b96934923d45db0":"0x3635c9adc5dea00000","0x50763add868fd7361178342fc055eaa2b95f6846":"0x39f9046e0898f0000","0x508cf19119db70aa86454253da764a2cb1b2be1a":"0x3635c9adc5dea00000","0x509982f56237ee458951047e0a2230f804e2e895":"0x3b4ad496106b7f00000","0x509a20bc48e72be1cdaf9569c711e8648d957334":"0x6c6b935b8bbd400000","0x509c8668036d143fb8ae70b11995631f3dfcad87":"0x3635c9adc5dea00000","0x50ad187ab21167c2b6e78be0153f44504a07945e":"0x56cd55fc64dfe0000","0x50b9fef0a1329b02d16506255f5a2db71ec92d1f":"0x47da821564085c0000","0x50bb67c8b8d8bd0f63c4760904f2d333f400aace":"0x6c6b935b8bbd400000","0x50bef2756248f9a7a380f91b051ba3be28a649ed":"0x6c69f73e29134e0000","0x50ca86b5eb1d01874df8e5f34945d49c6c1ab848":"0x3635c9adc5dea00000","0x50cd97e9378b5cf18f173963236c9951ef7438a5":"0x4be4e7267b6ae00000","0x50dcbc27bcad984093a212a9b4178eabe9017561":"0x7e362790b5ca40000","0x50e13023bd9ca96ad4c53fdfd410cb6b1f420bdf":"0xad78ebc5ac6200000","0x50e1c8ec98415bef442618708799437b86e6c205":"0x14542ba12a337c00000","0x50f8fa4bb9e2677c990a4ee8ce70dd1523251e4f":"0x1693d23164f6b0000","0x50fb36c27107ee2ca9a3236e2746cca19ace6b49":"0x6c6b935b8bbd400000","0x50fef296955588caae74c62ec32a23a454e09ab8":"0x411dffabc507380000","0x5102a4a42077e11c58df4773e3ac944623a66d9f":"0x6c7015fd52ed408000","0x51039377eed0c573f986c5e8a95fb99a59e9330f":"0x6acb3df27e1f880000","0x5103bc09933e9921fd53dc536f11f05d0d47107d":"0xd8d726b7177a800000","0x5104ecc0e330dd1f81b58ac9dbb1a9fbf88a3c85":"0x152d02c7e14af6800000","0x510d8159cc945768c7450790ba073ec0d9f89e30":"0x8ac7230489e8000000","0x510eda5601499a0d5e1a006bfffd833672f2e267":"0x6c6b935b8bbd400000","0x51126446ab3d8032557e8eba65597d75fadc815c":"0x1174a5cdf88bc80000","0x5118557d600d05c2fcbf3806ffbd93d02025d730":"0x267d3ab6423f5800000","0x511e0efb04ac4e3ff2e6550e498295bfcd56ffd5":"0x243d4d18229ca20000","0x512116817ba9aaf843d1507c65a5ea640a7b9eec":"0x2b5e3af16b1880000","0x5126460d692c71c9af6f05574d93998368a23799":"0x2d1a51c7e00500000","0x51277fe7c81eebd252a03df69a6b9f326e272207":"0x3402e79cab44c8000","0x51296f5044270d17707646129c86aad1645eadc1":"0x487c72b310d4648000","0x512b91bbfaa9e581ef683fc90d9db22a8f49f48b":"0x41a522386d9b95c00000","0x5135fb8757600cf474546252f74dc0746d06262c":"0x6c6b935b8bbd400000","0x514632efbd642c04de6ca342315d40dd90a2dba6":"0x90f534608a72880000","0x514b7512c9ae5ea63cbf11715b63f21e18d296c1":"0x6c6acc67d7b1d40000","0x5153a0c3c8912881bf1c3501bf64b45649e48222":"0xd8d726b7177a800000","0x515651d6db4faf9ecd103a921bbbbe6ae970fdd4":"0x43c33c1937564800000","0x515f30bc90cdf4577ee47d65d785fbe2e837c6bc":"0x2271b5e018ba0580000","0x5160ed612e1b48e73f3fc15bc4321b8f23b8a24b":"0x1e826b422865d80000","0x5161fd49e847f67455f1c8bb7abb36e985260d03":"0x410d586a20a4c00000","0x516954025fca2608f47da81c215eedfd844a09ff":"0x14b550a013c7380000","0x5169c60aee4ceed1849ab36d664cff97061e8ea8":"0xa2a15d09519be00000","0x517c75430de401c341032686112790f46d4d369e":"0x150894e849b3900000","0x517cd7608e5d0d83a26b717f3603dac2277dc3a4":"0x6c6b935b8bbd400000","0x51865db148881951f51251710e82b9be0d7eadb2":"0x6c6b935b8bbd400000","0x51891b2ccdd2f5a44b2a8bc49a5d9bca6477251c":"0x10ce1d3d8cb3180000","0x518cef27b10582b6d14f69483ddaa0dd3c87bb5c":"0x2086ac351052600000","0x51a6d627f66a8923d88d6094c4715380d3057cb6":"0x3e73d27a35941e0000","0x51a8c2163602a32ee24cf4aa97fd9ea414516941":"0x368f7e6b8672c0000","0x51b4758e9e1450e7af4268c3c7b1e7bd6f5c7550":"0x3635c9adc5dea00000","0x51ca8bd4dc644fac47af675563d5804a0da21eeb":"0x2ab7b260ff3fd00000","0x51d24bc3736f88dd63b7222026886630b6eb878d":"0x6c6b935b8bbd400000","0x51d78b178d707e396e8710965c4f41b1a1d9179d":"0x5fee222041e340000","0x51e32f14f4ca5e287cdac057a7795ea9e0439953":"0x1b1ae4d6e2ef500000","0x51e43fe0d25c782860af81ea89dd793c13f0cbb1":"0x340aad21b3b700000","0x51e7b55c2f9820eed73884361b5066a59b6f45c6":"0x6c6b935b8bbd400000","0x51ea1c0934e3d04022ed9c95a087a150ef705e81":"0x1547081e7224d200000","0x51ee0cca3bcb10cd3e983722ced8493d926c0866":"0x36356633ebd8ea0000","0x51f4663ab44ff79345f427a0f6f8a6c8a53ff234":"0x43c33c1937564800000","0x51f55ef47e6456a418ab32b9221ed27dba6608ee":"0xe3aeb5737240a00000","0x51f9c432a4e59ac86282d6adab4c2eb8919160eb":"0x703b5b89c3a6e7400000","0x520f66a0e2657ff0ac4195f2f064cf2fa4b24250":"0x22b1c8c1227a00000","0x52102354a6aca95d8a2e86d5debda6de69346076":"0x6c6b935b8bbd400000","0x5213f459e078ad3ab95a0920239fcf1633dc04ca":"0x8cf2187c2afb188000","0x5215183b8f80a9bc03d26ce91207832a0d39e620":"0x3635c9adc5dea00000","0x52214378b54004056a7cc08c891327798ac6b248":"0x337fe5feaf2d1800000","0x522323aad71dbc96d85af90f084b99c3f09decb7":"0x14542ba12a337c00000","0x523e140dc811b186dee5d6c88bf68e90b8e096fd":"0x6c6b935b8bbd400000","0x523f6d64690fdacd942853591bb0ff20d3656d95":"0x62a992e53a0af00000","0x524fb210522c5e23bb67dfbf8c26aa616da49955":"0x363562a66d34238000","0x5255dc69155a45b970c604d30047e2f530690e7f":"0x1158e460913d00000","0x5260dc51ee07bddaababb9ee744b393c7f4793a6":"0x1d8665fa5fa4c0000","0x5267f4d41292f370863c90d793296903843625c7":"0x4be4e7267b6ae00000","0x526bb533b76e20c8ee1ebf123f1e9ff4148e40be":"0xaadec983fcff40000","0x526cb09ce3ada3672eec1deb46205be89a4b563e":"0x85ca615bf9c0100000","0x52738c90d860e04cb12f498d96fdb5bf36fc340e":"0x1a055690d9db80000","0x527a8ca1268633a6c939c5de1b929aee92aeac8d":"0x30ca024f987b900000","0x528101ce46b720a2214dcdae6618a53177ffa377":"0x1b9612b9dc01ae0000","0x5281733473e00d87f11e9955e589b59f4ac28e7a":"0x8bd62ff4eec559200000","0x5298ab182a19359ffcecafd7d1b5fa212dede6dd":"0x1158e460913d00000","0x529aa002c6962a3a8545027fd8b05f22b5bf9564":"0x5a87e7d7f5f6580000","0x529e824fa072582b4032683ac7eecc1c04b4cac1":"0x6c6b935b8bbd400000","0x52a5e4de4393eeccf0581ac11b52c683c76ea15d":"0x43c30fb0884a96c0000","0x52b4257cf41b6e28878d50d57b99914ffa89873a":"0xd50dc9aa2c41770000","0x52b8a9592634f7300b7c5c59a3345b835f01b95c":"0x6c6b935b8bbd400000","0x52bdd9af5978850bc24110718b3723759b437e59":"0x5dc892aa1131c80000","0x52cd20403ba7eda6bc307a3d63b5911b817c1263":"0x1158e460913d00000","0x52d380511df19d5ec2807bbcb676581b67fd37a3":"0xb9f65d00f63c0000","0x52e1731350f983cc2c4189842fde0613fad50ce1":"0x277017338a30ae00000","0x52e46783329a769301b175009d346768f4c87ee4":"0x6c6b935b8bbd400000","0x52f058d46147e9006d29bf2c09304ad1cddd6e15":"0x5150ae84a8cdf00000","0x52f15423323c24f19ae2ab673717229d3f747d9b":"0x37a034cbe8e3f38000","0x52f8b509fee1a874ab6f9d87367fbeaf15ac137f":"0x3635c9adc5dea00000","0x52fb46ac5d00c3518b2c3a1c177d442f8165555f":"0x5150ae84a8cdf00000","0x530077c9f7b907ff9cec0c77a41a70e9029add4a":"0x6c6b935b8bbd400000","0x530319db0a8f93e5bb7d4dbf4816314fbed8361b":"0x6c6b935b8bbd400000","0x53047dc8ac9083d90672e8b3473c100ccd278323":"0x22b1c8c1227a00000","0x530b61e42f39426d2408d40852b9e34ab5ebebc5":"0xe7eeba3410b740000","0x530ffac3bc3412e2ec0ea47b7981c770f5bb2f35":"0x73f75d1a085ba0000","0x5317ecb023052ca7f5652be2fa854cfe4563df4d":"0x1b1ab319f5ec750000","0x53194d8afa3e883502767edbc30586af33b114d3":"0x6c6b935b8bbd400000","0x532a7da0a5ad7407468d3be8e07e69c7dd64e861":"0x1b1ae4d6e2ef500000","0x532d32b00f305bcc24dcef56817d622f34fb2c24":"0x6194049f30f7200000","0x533444584082eba654e1ad30e149735c6f7ba922":"0x5dc892aa1131c80000","0x5338ef70eac9dd9af5a0503b5efad1039e67e725":"0x90f534608a72880000","0x53396f4a26c2b4604496306c5442e7fcba272e36":"0x43f2f08d40e5afc0000","0x533a73a4a2228eee05c4ffd718bbf3f9c1b129a7":"0x14542ba12a337c00000","0x533c06928f19d0a956cc28866bf6c8d8f4191a94":"0xfd8c14338e6300000","0x534065361cb854fac42bfb5c9fcde0604ac919da":"0x6c6b935b8bbd400000","0x53437fecf34ab9d435f4deb8ca181519e2592035":"0xa31062beeed700000","0x535201a0a1d73422801f55ded4dfaee4fbaa6e3b":"0x226211f7915428000","0x53608105ce4b9e11f86bf497ffca3b78967b5f96":"0x43c33c1937564800000","0x536e4d8029b73f5579dca33e70b24eba89e11d7e":"0x6acb3df27e1f880000","0x53700d53254d430f22781a4a76a463933b5d6b08":"0x6acb3df27e1f880000","0x537f9d4d31ef70839d84b0d9cdb72b9afedbdf35":"0xed2b525841adfc00000","0x5381448503c0c702542b1de7cc5fb5f6ab1cf6a5":"0x1b1ae4d6e2ef5000000","0x53942e7949d6788bb780a7e8a0792781b1614b84":"0x35deb46684f10c80000","0x5395a4455d95d178b4532aa4725b193ffe512961":"0x3635c9adc5dea00000","0x53989ed330563fd57dfec9bd343c3760b0799390":"0x150894e849b39000000","0x53a244672895480f4a2b1cdf7da5e5a242ec4dbc":"0x3635c9adc5dea00000","0x53a714f99fa00fef758e23a2e746326dad247ca7":"0x50c5e761a444080000","0x53af32c22fef99803f178cf90b802fb571c61cb9":"0xd255d112e103a00000","0x53c0bb7fc88ea422d2ef7e540e2d8f28b1bb8183":"0x1158e460913d00000","0x53c5fe0119e1e848640cee30adea96940f2a5d8b":"0x49ada5fa8c10c880000","0x53c9eca40973f63bb5927be0bc6a8a8be1951f74":"0x6c6b935b8bbd400000","0x53ce88e66c5af2f29bbd8f592a56a3d15f206c32":"0x7a28c31cc36040000","0x53cec6c88092f756efe56f7db11228a2db45b122":"0xd8d726b7177a800000","0x53e35b12231f19c3fd774c88fec8cbeedf1408b2":"0x1bc16d674ec8000000","0x53e4d9696dcb3f4d7b3f70dcaa4eecb71782ff5c":"0xad78ebc5ac6200000","0x53faf165be031ec18330d9fce5bd1281a1af08db":"0x796e3ea3f8ab00000","0x540a1819bd7c35861e791804e5fbb3bc97c9abb1":"0x4ed7dac64230200000","0x540c072802014ef0d561345aec481e8e11cb3570":"0x1b1ae4d6e2ef5000000","0x540cf23dd95c4d558a279d778d2b3735b3164191":"0x21e19e0c9bab2400000","0x541060fc58c750c40512f83369c0a63340c122b6":"0x6acb3df27e1f880000","0x5413c97ffa4a6e2a7bba8961dc9fce8530a787d7":"0x3635c9adc5dea00000","0x541db20a80cf3b17f1621f1b3ff79b882f50def3":"0x3635c9adc5dea00000","0x542e8096bafb88162606002e8c8a3ed19814aeac":"0x6c6b935b8bbd400000","0x54310b3aa88703a725dfa57de6e646935164802c":"0x678a932062e4180000","0x5431b1d18751b98fc9e2888ac7759f1535a2db47":"0x6c6b935b8bbd400000","0x5431ca427e6165a644bae326bd09750a178c650d":"0x6c6b935b8bbd400000","0x5435c6c1793317d32ce13bba4c4ffeb973b78adc":"0xd8e6b1c1285ef0000","0x543629c95cdef428ad37d453ca9538a9f90900ac":"0x92896529baddc880000","0x54391b4d176d476cea164e5fb535c69700cb2535":"0x56cd55fc64dfe0000","0x543a8c0efb8bcd15c543e2a6a4f807597631adef":"0x13f80e7e14f2d440000","0x543f8c674e2462d8d5daa0e80195a8708e11a29e":"0x37758833b3a7a0000","0x544b5b351d1bc82e9297439948cf4861dac9ae11":"0x4a89f54ef0121c00000","0x544dda421dc1eb73bb24e3e56a248013b87c0f44":"0x6acb3df27e1f880000","0x54575c3114751e3c631971da6a2a02fd3ffbfcc8":"0x692ae8897081d00000","0x545bb070e781172eb1608af7fc2895d6cb87197e":"0x79a5c17ec748900000","0x5475d7f174bdb1f789017c7c1705989646079d49":"0x1fd933494aa5fe00000","0x548558d08cfcb101181dac1eb6094b4e1a896fa6":"0x6c6acc67d7b1d40000","0x54939ff08921b467cf2946751d856378296c63ed":"0x3635c9adc5dea00000","0x549b47649cfad993e4064d2636a4baa0623305cc":"0x209d922f5259c50000","0x549d51af29f724c967f59423b85b2681e7b15136":"0xcbd47b6eaa8cc00000","0x54a1370116fe22099e015d07cd2669dd291cc9d1":"0x1158e460913d00000","0x54a62bf9233e146ffec3876e45f20ee8414adeba":"0x21e19e0c9bab2400000","0x54b4429b182f0377be7e626939c5db6440f75d7a":"0x6acb3df27e1f880000","0x54bcb8e7f73cda3d73f4d38b2d0847e600ba0df8":"0x3a70415882df180000","0x54c93e03a9b2e8e4c3672835a9ee76f9615bc14e":"0x10d3aa536e2940000","0x54ce88275956def5f9458e3b95decacd484021a0":"0x6c6b935b8bbd400000","0x54db5e06b4815d31cb56a8719ba33af2d73e7252":"0x24521e2a3017b80000","0x54e01283cc8b384538dd646770b357c960d6cacd":"0x10f0cf064dd59200000","0x54ec7300b81ac84333ed1b033cd5d7a33972e234":"0xad78ebc5ac6200000","0x54febcce20fe7a9098a755bd90988602a48c089e":"0x22b1c8c1227a000000","0x550aadae1221b07afea39fba2ed62e05e5b7b5f9":"0x1158e460913d00000","0x550c306f81ef5d9580c06cb1ab201b95c748a691":"0x2417d4c470bf140000","0x551999ddd205563327b9b530785acff9bc73a4ba":"0x14542ba12a337c00000","0x551e7784778ef8e048e495df49f2614f84a4f1dc":"0x2086ac351052600000","0x5529830a61c1f13c197e550beddfd6bd195c9d02":"0x21e19e0c9bab2400000","0x552987f0651b915b2e1e5328c121960d4bdd6af4":"0x61093d7c2c6d380000","0x553b6b1c57050e88cf0c31067b8d4cd1ff80cb09":"0x15af1d78b58c400000","0x553f37d92466550e9fd775ae74362df030179132":"0x6c6b935b8bbd400000","0x554336ee4ea155f9f24f87bca9ca72e253e12cd2":"0x56bc75e2d63100000","0x5543dd6d169eec8a213bbf7a8af9ffd15d4ff759":"0xfc936392801c0000","0x5547fdb4ae11953e01292b7807fa9223d0e4606a":"0x55d117dcb1d260000","0x5552f4b3ed3e1da79a2f78bb13e8ae5a68a9df3b":"0x3635c9adc5dea00000","0x555ca9f05cc134ab54ae9bea1c3ff87aa85198ca":"0x56bc75e2d63100000","0x555d8d3ce1798aca902754f164b8be2a02329c6c":"0x21e19e0c9bab2400000","0x555df19390c16d01298772bae8bc3a1152199cbd":"0xad78ebc5ac6200000","0x555ebe84daa42ba256ea789105cec4b693f12f18":"0x56bc75e2d63100000","0x557f5e65e0da33998219ad4e99570545b2a9d511":"0x2559cbb985842400000","0x558360206883dd1b6d4a59639e5629d0f0c675d0":"0x6c6b935b8bbd400000","0x5584423050e3c2051f0bbd8f44bd6dbc27ecb62c":"0xa2a15d09519be00000","0x55852943492970f8d629a15366cdda06a94f4513":"0x6c6b935b8bbd400000","0x55866486ec168f79dbe0e1abb18864d98991ae2c":"0xdf6eb0b2d3ca0000","0x558c54649a8a6e94722bd6d21d14714f71780534":"0x6c6b935b8bbd400000","0x559194304f14b1b93afe444f0624e053c23a0009":"0x15af1d78b58c400000","0x5593c9d4b664730fd93ca60151c25c2eaed93c3b":"0xad78ebc5ac6200000","0x559706c332d20779c45f8a6d046a699159b74921":"0x149b442e85a3cf8000","0x5598b3a79a48f32b1f5fc915b87b645d805d1afe":"0x1b1ae4d6e2ef500000","0x55a3df57b7aaec16a162fd5316f35bec082821cf":"0x6acb3df27e1f880000","0x55a4cac0cb8b582d9fef38c5c9fff9bd53093d1f":"0x6acb3df27e1f880000","0x55a61b109480b5b2c4fcfdef92d90584160c0d35":"0x26c564d2b53f60000","0x55aa5d313ebb084da0e7801091e29e92c5dec3aa":"0x6c6b935b8bbd400000","0x55ab99b0e0e55d7bb874b7cfe834de631c97ec23":"0x37e98ce36899e40000","0x55af092f94ba6a79918b0cf939eab3f01b3f51c7":"0x820d5e39576120000","0x55c564664166a1edf3913e0169f1cd451fdb5d0c":"0x8217ea49508e6c0000","0x55ca6abe79ea2497f46fdbb830346010fe469cbe":"0x1369fb96128ac480000","0x55caff4bba04d220c9a5d2018672ec85e31ef83e":"0x6c6b935b8bbd400000","0x55d057bcc04bd0f4af9642513aa5090bb3ff93fe":"0x3bfe452c8edd4c0000","0x55d42eb495bf46a634997b5f2ea362814918e2b0":"0x5c0d265b5b2a80000","0x55da9dcdca61cbfe1f133c7bcefc867b9c8122f9":"0x2fb474098f67c00000","0x55e220876262c218af4f56784798c7e55da09e91":"0x73d99c15645d30000","0x55fd08d18064bd202c0ec3d2cce0ce0b9d169c4d":"0x6acb3df27e1f880000","0x5600730a55f6b20ebd24811faa3de96d1662abab":"0x65ea3db75546600000","0x5603241eb8f08f721e348c9d9ad92f48e390aa24":"0xad78ebc5ac6200000","0x560536794a9e2b0049d10233c41adc5f418a264a":"0x3635c9adc5dea00000","0x5607590059a9fec1881149a44b36949aef85d560":"0x6c6b935b8bbd400000","0x560becdf52b71f3d8827d927610f1a980f33716f":"0x17474d705f56d08000","0x560da37e956d862f81a75fd580a7135c1b246352":"0x21e19e0c9bab2400000","0x560fc08d079f047ed8d7df75551aa53501f57013":"0x19bff2ff57968c00000","0x561be9299b3e6b3e63b79b09169d1a948ae6db01":"0x1b1ae4d6e2ef500000","0x562020e3ed792d2f1835fe5f55417d5111460c6a":"0x43c33c1937564800000","0x5620f46d1451c2353d6243a5d4b427130be2d407":"0x340aad21b3b700000","0x562105e82b099735de49f62692cc87cd38a8edcd":"0x14542ba12a337c00000","0x562a8dcbbeeef7b360685d27303bd69e094accf6":"0x21e19e0c9bab2400000","0x562bced38ab2ab6c080f3b0541b8456e70824b3f":"0x22ca3587cf4eb00000","0x562be95aba17c5371fe2ba828799b1f55d2177d6":"0x816d37e87b9d1e00000","0x562f16d79abfcec3943e34b20f05f97bdfcda605":"0xd8d726b7177a800000","0x56373daab46316fd7e1576c61e6affcb6559ddd7":"0xbac715d146c9e0000","0x56397638bb3cebf1f62062794b5eb942f916171d":"0x6c6b935b8bbd400000","0x563a03ab9c56b600f6d25b660c21e16335517a75":"0x3635c9adc5dea00000","0x563cb8803c1d32a25b27b64114852bd04d9c20cd":"0xb149ead0ad9d80000","0x56586391040c57eec6f5affd8cd4abde10b50acc":"0xd8d726b7177a800000","0x566c10d638e8b88b47d6e6a414497afdd00600d4":"0x56b394263a40c0000","0x566c28e34c3808d9766fe8421ebf4f2b1c4f7d77":"0x6acb3df27e1f880000","0x568df31856699bb5acfc1fe1d680df9960ca4359":"0x4acf5552f3b2498000","0x5691dd2f6745f20e22d2e1d1b955aa2903d65656":"0x6ac5c62d9486070000","0x56a1d60d40f57f308eebf087dee3b37f1e7c2cba":"0x3edcaec82d06f80000","0x56ac20d63bd803595cec036da7ed1dc66e0a9e07":"0x3772a53ccdc658000","0x56b6c23dd2ec90b4728f3bb2e764c3c50c85f144":"0x3635c9adc5dea00000","0x56df05bad46c3f00ae476ecf017bb8c877383ff1":"0xab15daaef70400000","0x56ee197f4bbf9f1b0662e41c2bbd9aa1f799e846":"0x3635c9adc5dea00000","0x56f493a3d108aaa2d18d98922f8efe1662cfb73d":"0x6d8121a194d1100000","0x56fc1a7bad4047237ce116146296238e078f93ad":"0x9a63f08ea63880000","0x56febf9e1003af15b1bd4907ec089a4a1b91d268":"0xad78ebc5ac6200000","0x5717cc9301511d4a81b9f583148beed3d3cc8309":"0x8cf23f909c0fa00000","0x5717f2d8f18ffcc0e5fe247d3a4219037c3a649c":"0xd8bb6549b02bb80000","0x571950ea2c90c1427d939d61b4f2de4cf1cfbfb0":"0x1158e460913d00000","0x5719f49b720da68856f4b9e708f25645bdbc4b41":"0x22b1c8c1227a000000","0x572ac1aba0de23ae41a7cae1dc0842d8abfc103b":"0x678a932062e4180000","0x572dd8cd3fe399d1d0ec281231b7cefc20b9e4bb":"0x233c8fe42703e800000","0x574921838cc77d6c98b17d903a3ae0ee0da95bd0":"0xb5328178ad0f2a00000","0x574ad9355390e4889ef42acd138b2a27e78c00ae":"0x5467b732a913340000","0x574de1b3f38d915846ae3718564a5ada20c2f3ed":"0xd8d726b7177a800000","0x575c00c2818210c28555a0ff29010289d3f82309":"0x21e19e0c9bab2400000","0x5773b6026721a1dd04b7828cd62b591bfb34534c":"0x5b7ac4553de7ae00000","0x5777441c83e03f0be8dd340bde636850847c620b":"0x21e19e0c9bab2400000","0x5778ffdc9b94c5a59e224eb965b6de90f222d170":"0x122d7ff36603fc0000","0x577aeee8d4bc08fc97ab156ed57fb970925366be":"0x120df1147258bf0000","0x577b2d073c590c50306f5b1195a4b2ba9ecda625":"0x1440bdd49515f00000","0x577bfe64e3a1e3800e94db1c6c184d8dc8aafc66":"0x5134ed17417f280000","0x57825aeb09076caa477887fbc9ae37e8b27cc962":"0x56bc75e2d63100000","0x57883010b4ac857fedac03eab2551723a8447ffb":"0x3635c9adc5dea00000","0x5789d01db12c816ac268e9af19dc0dd6d99f15df":"0xad78ebc5ac6200000","0x5792814f59a33a1843faa01baa089eb02ffb5cf1":"0x1b1ab319f5ec750000","0x5793abe6f1533311fd51536891783b3f9625ef1c":"0x2cd8a656f23fda0000","0x5797b60fd2894ab3c2f4aede86daf2e788d745ad":"0x14542ba12a337c00000","0x57a852fdb9b1405bf53ccf9508f83299d3206c52":"0x6c6b935b8bbd400000","0x57b23d6a1adc06c652a779c6a7fb6b95b9fead66":"0xad78ebc5ac6200000","0x57bc20e2d62b3d19663cdb4c309d5b4f2fc2db8f":"0x56bc75e2d63100000","0x57bddf078834009c89d88e6282759dc45335b470":"0x74717cfb6883100000","0x57beea716cbd81700a73d67f9ff039529c2d9025":"0xad78ebc5ac6200000","0x57d032a43d164e71aa2ef3ffd8491b0a4ef1ea5b":"0x6c6b935b8bbd400000","0x57d3df804f2beee6ef53ab94cb3ee9cf524a18d3":"0x1556616b9606670000","0x57d5fd0e3d3049330ffcdcd020456917657ba2da":"0x6bf20195f554d40000","0x57dd9471cbfa262709f5f486bcb774c5f527b8f8":"0xaadec983fcff40000","0x57df23bebdc65eb75feb9cb2fad1c073692b2baf":"0xd8d726b7177a800000","0x5800cd8130839e94495d2d8415a8ea2c90e0c5cb":"0xad78ebc5ac6200000","0x5803e68b34da121aef08b602badbafb4d12481ca":"0x3cfc82e37e9a7400000","0x5816c2687777b6d7d2a2432d59a41fa059e3a406":"0x1c4fe43adb0a5e900000","0x581a3af297efa4436a29af0072929abf9826f58b":"0x6c6b935b8bbd400000","0x581b9fd6eae372f3501f42eb9619eec820b78a84":"0x42be2c00ca53b8d8000","0x581bdf1bb276dbdd86aedcdb397a01efc0e00c5b":"0x3635c9adc5dea00000","0x581f34b523e5b41c09c87c298e299cbc0e29d066":"0x3d5833aafd39758000","0x5824a7e22838277134308c5f4b50dab65e43bb31":"0x14542ba12a337c00000","0x582b70669c97aab7d68148d8d4e90411e2810d56":"0x36356633ebd8ea0000","0x582e7cc46f1d7b4e6e9d95868bfd370573178f4c":"0x6c6b935b8bbd400000","0x583e83ba55e67e13e0e76f8392d873cd21fbf798":"0x1158e460913d00000","0x5869fb867d71f1387f863b698d09fdfb87c49b5c":"0xc6bbf858b316080000","0x587d6849b168f6c3332b7abae7eb6c42c37f48bf":"0x2fb474098f67c00000","0x5887dc6a33dfed5ac1edefe35ef91a216231ac96":"0xd8d726b7177a80000","0x588ed990a2aff44a94105d58c305257735c868ac":"0x368c8623a8b4d100000","0x58ae2ddc5f4c8ada97e06c0086171767c423f5d7":"0x57473d05dabae80000","0x58aed6674affd9f64233272a578dd9386b99c263":"0xb8507a820728200000","0x58b808a65b51e6338969afb95ec70735e451d526":"0x8784bc1b9837a380000","0x58b8ae8f63ef35ed0762f0b6233d4ac14e64b64d":"0x6c6b935b8bbd400000","0x58ba1569650e5bbbb21d35d3e175c0d6b0c651a9":"0x1b1ae4d6e2ef500000","0x58c555bc293cdb16c6362ed97ae9550b92ea180e":"0x1158e460913d00000","0x58c650ced40bb65641b8e8a924a039def46854df":"0x100bd33fb98ba0000","0x58c90754d2f20a1cb1dd330625e04b45fa619d5c":"0x6c6b935b8bbd400000","0x58e2f11223fc8237f69d99c6289c148c0604f742":"0x5150ae84a8cdf000000","0x58e554af3d87629620da61d538c7f5b4b54c4afe":"0x46509d694534728000","0x58e5c9e344c806650dacfc904d33edba5107b0de":"0x10910d4cdc9f60000","0x58e661d0ba73d6cf24099a5562b808f7b3673b68":"0x6c6b935b8bbd400000","0x58f05b262560503ca761c61890a4035f4c737280":"0x1b1ae4d6e2ef5000000","0x58fb947364e7695765361ebb1e801ffb8b95e6d0":"0xad78ebc5ac6200000","0x590181d445007bd0875aaf061c8d51153900836a":"0x6c6b935b8bbd400000","0x5902e44af769a87246a21e079c08bf36b06efeb3":"0x3635c9adc5dea00000","0x590acbda37290c0d3ec84fc2000d7697f9a4b15d":"0x1b1ae4d6e2ef500000","0x590ccb5911cf78f6f622f535c474375f4a12cfcf":"0x43c33c1937564800000","0x5910106debd291a1cd80b0fbbb8d8d9e93a7cc1e":"0x6c6b935b8bbd400000","0x59161749fedcf1c721f2202d13ade2abcf460b3d":"0x6c6b935b8bbd400000","0x591bef3171d1c5957717a4e98d17eb142c214e56":"0x43c33c1937564800000","0x59203cc37599b648312a7cc9e06dacb589a9ae6a":"0x80f7971b6400e8000","0x59268171b833e0aa13c54b52ccc0422e4fa03aeb":"0xa2a15d09519be00000","0x592777261e3bd852c48eca95b3a44c5b7f2d422c":"0x43c33c1937564800000","0x593044670faeff00a55b5ae051eb7be870b11694":"0x73f75d1a085ba0000","0x593b45a1864ac5c7e8f0caaeba0d873cd5d113b2":"0x14542ba12a337c00000","0x593c48935beaff0fde19b04d309cd530a28e52ce":"0xd8d726b7177a800000","0x59473cd300fffae240f5785626c65dfec792b9af":"0x1158e460913d00000","0x5948bc3650ed519bf891a572679fd992f8780c57":"0xaadec983fcff40000","0x594a76f06935388dde5e234696a0668bc20d2ddc":"0x97c9ce4cf6d5c00000","0x59569a21d28fba4bda37753405a081f2063da150":"0xd8d726b7177a800000","0x5956b28ec7890b76fc061a1feb52d82ae81fb635":"0x6c6b935b8bbd400000","0x595e23d788a2d4bb85a15df7136d264a635511b3":"0xd5967be4fc3f100000","0x597038ff91a0900cbbab488af483c790e6ec00a0":"0x21e19e0c9bab2400000","0x5970fb1b144dd751e4ce2eca7caa20e363dc4da3":"0x21e19e0c9bab2400000","0x5975b9528f23af1f0e2ec08ac8ebaa786a2cb8e0":"0x12bf50503ae3038000","0x5975d78d974ee5bb9e4d4ca2ae77c84b9c3b4b82":"0x4a4491bd6dcd280000","0x5985c59a449dfc5da787d8244e746c6d70caa55f":"0x56bc75e2d63100000","0x598aaabae9ed833d7bc222e91fcaa0647b77580b":"0x6194049f30f7200000","0x5992624c54cdec60a5ae938033af8be0c50cbb0a":"0xc454e0f8870f2b0000","0x599728a78618d1a17b9e34e0fed8e857d5c40622":"0x2f6f10780d22cc00000","0x5997ffefb3c1d9d10f1ae2ac8ac3c8e2d2292783":"0x3635c9adc5dea00000","0x59a087b9351ca42f58f36e021927a22988284f38":"0x100bd33fb98ba0000","0x59a12df2e3ef857aceff9306b309f6a500f70134":"0x3635c9adc5dea00000","0x59b96deb8784885d8d3b4a166143cc435d2555a1":"0x487a9a304539440000","0x59b9e733cba4be00429b4bd9dfa64732053a7d55":"0x1158e460913d00000","0x59c5d06b170ee4d26eb0a0eb46cb7d90c1c91019":"0x21e19e0c9bab2400000","0x59c7f785c93160e5807ed34e5e534bc6188647a7":"0x22b1c8c1227a000000","0x59d139e2e40c7b97239d23dfaca33858f602d22b":"0x6c6b935b8bbd400000","0x59f6247b0d582aaa25e5114765e4bf3c774f43c2":"0x2b5e3af16b1880000","0x59fe00696dbd87b7976b29d1156c8842a2e17914":"0x6c6b935b8bbd400000","0x5a0d609aae2332b137ab3b2f26615a808f37e433":"0x21e19e0c9bab24000000","0x5a192b964afd80773e5f5eda6a56f14e25e0c6f3":"0x1b1ae4d6e2ef500000","0x5a1a336962d6e0c63031cc83c6a5c6a6f4478ecb":"0x3635c9adc5dea00000","0x5a1d2d2d1d520304b6208849570437eb3091bb9f":"0x6acb3df27e1f880000","0x5a267331facb262daaecd9dd63a9700c5f5259df":"0x56bc75e2d63100000","0x5a285755391e914e58025faa48cc685f4fd4f5b8":"0x581767ba6189c400000","0x5a2916b8d2e8cc12e207ab464d433e2370d823d9":"0x6c6b935b8bbd400000","0x5a2b1c853aeb28c45539af76a00ac2d8a8242896":"0x15af1d78b58c40000","0x5a2daab25c31a61a92a4c82c9925a1d2ef58585e":"0xc380da9c7950c0000","0x5a30feac37ac9f72d7b4af0f2bc73952c74fd5c3":"0x6c6b935b8bbd400000","0x5a5468fa5ca226c7532ecf06e1bc1c45225d7ec9":"0x678a932062e4180000","0x5a565285374a49eedd504c957d510874d00455bc":"0x56bc75e2d63100000","0x5a5ee8e9bb0e8ab2fecb4b33d29478be50bbd44b":"0x2a1129d09367200000","0x5a5f8508da0ebebb90be9033bd4d9e274105ae00":"0x16a6502f15a1e540000","0x5a6071bcebfcba4ab57f4db96fc7a68bece2ba5b":"0x6c6b935b8bbd400000","0x5a60c924162873fc7ea4da7f972e350167376031":"0x487f277a885798000","0x5a6686b0f17e07edfc59b759c77d5bef164d3879":"0x50c5e761a444080000","0x5a70106f20d63f875265e48e0d35f00e17d02bc9":"0x1158e460913d00000","0x5a74ba62e7c81a3474e27d894fed33dd24ad95fe":"0xfc936392801c0000","0x5a7735007d70b06844da9901cdfadb11a2582c2f":"0x14542ba12a337c00000","0x5a82f96cd4b7e2d93d10f3185dc8f43d4b75aa69":"0x6c633fbab98c040000","0x5a87f034e6f68f4e74ffe60c64819436036cf7d7":"0x1158e460913d00000","0x5a891155f50e42074374c739baadf7df2651153a":"0x102da6fd0f73a3c0000","0x5a9c8b69fc614d69564999b00dcb42db67f97e90":"0xb9e615abad3a778000","0x5aaf1c31254a6e005fba7f5ab0ec79d7fc2b630e":"0x14061b9d77a5e980000","0x5ab1a5615348001c7c775dc75748669b8be4de14":"0x256a72fb29e69c0000","0x5abfec25f74cd88437631a7731906932776356f9":"0x9d83cc0dfa11177ff8000","0x5ac2908b0f398c0df5bac2cb13ca7314fba8fa3d":"0xad4c8316a0b0c0000","0x5ac99ad7816ae9020ff8adf79fa9869b7cea6601":"0x472698b413b43200000","0x5ad12c5ed4fa827e2150cfa0d68c0aa37b1769b8":"0x2b5e3af16b18800000","0x5ad5e420755613886f35aa56ac403eebdfe4b0d0":"0x10f0cf064dd592000000","0x5ade77fd81c25c0af713b10702768c1eb2f975e7":"0x1158e460913d00000","0x5ae64e853ba0a51282cb8db52e41615e7c9f733f":"0x6c6b935b8bbd400000","0x5aed0e6cfe95f9d680c76472a81a2b680a7f93e2":"0xaadec983fcff40000","0x5aef16a226dd68071f2483e1da42598319f69b2c":"0x6c6b935b8bbd400000","0x5af46a25ac09cb73616b53b14fb42ff0a51cddb2":"0xd8d726b7177a800000","0x5af7c072b2c5acd71c76addcce535cf7f8f93585":"0x1158e460913d00000","0x5afda9405c8e9736514574da928de67456010918":"0x145b8b0239a46920000","0x5b06d1e6930c1054692b79e3dbe6ecce53966420":"0xb227f63be813c0000","0x5b25cae86dcafa2a60e7723631fc5fa49c1ad87d":"0x870c58510e85200000","0x5b287c7e734299e727626f93fb1187a60d5057fe":"0x57cd934a914cb0000","0x5b290c01967c812e4dc4c90b174c1b4015bae71e":"0x820eb348d52b90000","0x5b2b64e9c058e382a8b299224eecaa16e09c8d92":"0x8ba52e6fc45e40000","0x5b2e2f1618552eab0db98add55637c2951f1fb19":"0x28a857425466f800000","0x5b30608c678e1ac464a8994c3b33e5cdf3497112":"0x15af1d78b58c400000","0x5b333696e04cca1692e71986579c920d6b2916f9":"0x1b1ae4d6e2ef500000","0x5b430d779696a3653fc60e74fbcbacf6b9c2baf1":"0x2f6f10780d22cc00000","0x5b437365ae3a9a2ff97c68e6f90a7620188c7d19":"0x6c8754c8f30c080000","0x5b49afcd75447838f6e7ceda8d21777d4fc1c3c0":"0xd8d726b7177a800000","0x5b4c0c60f10ed2894bdb42d9dd1d210587810a0d":"0x1b1ae4d6e2ef500000","0x5b4ea16db6809b0352d4b6e81c3913f76a51bb32":"0x15af1d78b58c400000","0x5b5be0d8c67276baabd8edb30d48ea75640b8b29":"0x2cb1f55fb7be100000","0x5b5d517029321562111b43086d0b043591109a70":"0x8cf23f909c0fa00000","0x5b5d8c8eed6c85ac215661de026676823faa0a0c":"0x43c33c1937564800000","0x5b6d55f6712967405c659129f4b1de09acf2cb7b":"0xe7eeba3410b740000","0x5b70c49cc98b3df3fbe2b1597f5c1b6347a388b7":"0x34957444b840e80000","0x5b736eb18353629bde9676dadd165034ce5ecc68":"0x6acb3df27e1f880000","0x5b759fa110a31c88469f54d44ba303d57dd3e10f":"0x5b46dd2f0ea3b80000","0x5b7784caea01799ca30227827667ce207c5cbc76":"0x6c6b935b8bbd400000","0x5b78eca27fbdea6f26befba8972b295e7814364b":"0x6c6b935b8bbd400000","0x5b800bfd1b3ed4a57d875aed26d42f1a7708d72a":"0x15a82d1d5bb88e00000","0x5b85e60e2af0544f2f01c64e2032900ebd38a3c7":"0x6c6b935b8bbd400000","0x5ba2c6c35dfaec296826591904d544464aeabd5e":"0x1158e460913d00000","0x5baf6d749620803e8348af3710e5c4fbf20fc894":"0x10f4002615dfe900000","0x5bc1f95507b1018642e45cd9c0e22733b9b1a326":"0x56bc75e2d63100000","0x5bd23547477f6d09d7b2a005c5ee650c510c56d7":"0x21e19e0c9bab2400000","0x5bd24aac3612b20c609eb46779bf95698407c57c":"0x6acb3df27e1f880000","0x5bd6862d517d4de4559d4eec0a06cad05e2f946e":"0xad78ebc5ac6200000","0x5be045512a026e3f1cebfd5a7ec0cfc36f2dc16b":"0x68155a43676e00000","0x5bf9f2226e5aeacf1d80ae0a59c6e38038bc8db5":"0x14542ba12a337c00000","0x5bfafe97b1dd1d712be86d41df79895345875a87":"0x1b1ae4d6e2ef500000","0x5c0f2e51378f6b0d7bab617331580b6e39ad3ca5":"0x2086ac3510526000000","0x5c29f9e9a523c1f8669448b55c48cbd47c25e610":"0x3446a0dad04cb00000","0x5c308bac4857d33baea074f3956d3621d9fa28e1":"0x10f08eda8e555098000","0x5c312a56c784b122099b764d059c21ece95e84ca":"0x52663ccab1e1c0000","0x5c31996dcac015f9be985b611f468730ef244d90":"0xad78ebc5ac6200000","0x5c323457e187761a8276e359b7b7af3f3b6e3df6":"0x21e19e0c9bab2400000","0x5c3c1c645b917543113b3e6c1c054da1fe742b9a":"0x2b5e3af16b18800000","0x5c3d19441d196cb443662020fcad7fbb79b29e78":"0xc673ce3c40160000","0x5c3f567faff7bad1b5120022e8cbcaa82b4917b3":"0x6c6b935b8bbd400000","0x5c4368918ace6409c79eca80cdaae4391d2b624e":"0xd8d726b7177a800000","0x5c464197791c8a3da3c925436f277ab13bf2faa2":"0x1b1ae4d6e2ef5000000","0x5c4881165cb42bb82e97396c8ef44adbf173fb99":"0x5fee222041e340000","0x5c4892907a0720df6fd3413e63ff767d6b398023":"0x2cb009fd3b5790f8000","0x5c4f24e994ed8f850ea7818f471c8fac3bcf0452":"0x5d80688d9e31c00000","0x5c5419565c3aad4e714e0739328e3521c98f05cc":"0x1c9f78d2893e400000","0x5c6136e218de0a61a137b2b3962d2a6112b809d7":"0xff3dbb65ff4868000","0x5c61ab79b408dd3229f662593705d72f1e147bb8":"0x4d0243d3498cd840000","0x5c6d041da7af4487b9dc48e8e1f60766d0a56dbc":"0x4f070a003e9c740000","0x5c6f36af90ab1a656c6ec8c7d521512762bba3e1":"0x6c68ccd09b022c0000","0x5c7b9ec7a2438d1e3c7698b545b9c3fd77b7cd55":"0x3635c9adc5dea00000","0x5c936f3b9d22c403db5e730ff177d74eef42dbbf":"0x410d586a20a4c0000","0x5cb731160d2e8965670bde925d9de5510935347d":"0x22b1c8c1227a00000","0x5cb953a0e42f5030812226217fffc3ce230457e4":"0x56bc75e2d63100000","0x5cbd8daf27ddf704cdd0d909a789ba36ed4f37b2":"0xb9f65d00f63c0000","0x5cc4cba621f220637742057f6055b80dffd77e13":"0x878477b7d253b660000","0x5cc7d3066d45d27621f78bb4b339473e442a860f":"0x21e1899f0377aea0000","0x5cccf1508bfd35c20530aa642500c10dee65eaed":"0x2e141ea081ca080000","0x5cce72d068c7c3f55b1d2819545e77317cae8240":"0x692ae8897081d00000","0x5cd0e475b54421bdfc0c12ea8e082bd7a5af0a6a":"0x332ca1b67940c0000","0x5cd588a14ec648ccf64729f9167aa7bf8be6eb3d":"0x3635c9adc5dea00000","0x5cd8af60de65f24dc3ce5730ba92653022dc5963":"0x61093d7c2c6d380000","0x5cdc4708f14f40dcc15a795f7dc8cb0b7faa9e6e":"0x1d1c5f3eda20c40000","0x5ce0b6862cce9162e87e0849e387cb5df4f9118c":"0x5a87e7d7f5f6580000","0x5ce2e7ceaaa18af0f8aafa7fbad74cc89e3cd436":"0x43c33c1937564800000","0x5ce44068b8f4a3fe799e6a8311dbfdeda29dee0e":"0x6c6b935b8bbd400000","0x5cebe30b2a95f4aefda665651dc0cf7ef5758199":"0xfc936392801c0000","0x5cf18fa7c8a7c0a2b3d5efd1990f64ddc569242c":"0x3635c9adc5dea00000","0x5cf44e10540d65716423b1bcb542d21ff83a94cd":"0x21e19e0c9bab2400000","0x5cf8c03eb3e872e50f7cfd0c2f8d3b3f2cb5183a":"0xad78ebc5ac6200000","0x5cfa8d568575658ca4c1a593ac4c5d0e44c60745":"0xfc66fae3746ac0000","0x5cfa9877f719c79d9e494a08d1e41cf103fc87c9":"0xad78ebc5ac6200000","0x5d1dc3387b47b8451e55106c0cc67d6dc72b7f0b":"0x6c6b935b8bbd400000","0x5d231a70c1dfeb360abd97f616e2d10d39f3cab5":"0x15af1d78b58c400000","0x5d24bdbc1c47f0eb83d128cae48ac33c4817e91f":"0x3635c9adc5dea00000","0x5d2819e8d57821922ee445650ccaec7d40544a8d":"0xad78ebc5ac6200000","0x5d2f7f0b04ba4be161e19cb6f112ce7a5e7d7fe4":"0x1e87f85809dc00000","0x5d32f6f86e787ff78e63d78b0ef95fe6071852b8":"0x15be6174e1912e0000","0x5d39ef9ea6bdfff15d11fe91f561a6f9e31f5da5":"0x6c6b935b8bbd400000","0x5d3f3b1f7130b0bb21a0fd32396239179a25657f":"0xd3ab8ea5e8fd9e80000","0x5d5751819b4f3d26ed0c1ac571552735271dbefa":"0x3635c9adc5dea00000","0x5d5c2c1099bbeefb267e74b58880b444d94449e0":"0xdbf0bd181e2e70000","0x5d5cdbe25b2a044b7b9be383bcaa5807b06d3c6b":"0x6c6b935b8bbd400000","0x5d5d6e821c6eef96810c83c491468560ef70bfb5":"0x6c6b935b8bbd400000","0x5d68324bcb776d3ffd0bf9fea91d9f037fd6ab0f":"0x6c6b935b8bbd400000","0x5d6ae8cbd6b3393c22d16254100d0238e808147c":"0x2707e56d51a30c0000","0x5d6c5c720d66a6abca8397142e63d26818eaab54":"0x22b1c8c1227a00000","0x5d6ccf806738091042ad97a6e095fe8c36aa79c5":"0xa31062beeed700000","0x5d71799c8df3bccb7ee446df50b8312bc4eb71c5":"0xad78ebc5ac6200000","0x5d822d9b3ef4b502627407da272f67814a6becd4":"0x1158e460913d00000","0x5d83b21bd2712360436b67a597ee3378db3e7ae4":"0x6c6b935b8bbd400000","0x5d872b122e994ef27c71d7deb457bf65429eca6c":"0x1b1aded81d394108000","0x5d8d31faa864e22159cd6f5175ccecc53fa54d72":"0x5b696b70dd567100000","0x5d958a9bd189c2985f86c58a8c69a7a78806e8da":"0x228f16f861578600000","0x5da2a9a4c2c0a4a924cbe0a53ab9d0c627a1cfa0":"0x27bf38c6544df50000","0x5da4ca88935c27f55c311048840e589e04a8a049":"0x4563918244f400000","0x5da54785c9bd30575c89deb59d2041d20a39e17b":"0x6aa209f0b91d658000","0x5db69fe93e6fb6fbd450966b97238b110ad8279a":"0x878678326eac9000000","0x5db7bba1f9573f24115d8c8c62e9ce8895068e9f":"0x2b5aad72c65200000","0x5db84400570069a9573cab04b4e6b69535e202b8":"0x20dd68aaf3289100000","0x5dc36de5359450a1ec09cb0c44cf2bb42b3ae435":"0x3c946d893b33060000","0x5dc6f45fef26b06e3302313f884daf48e2746fb9":"0x1b1ae4d6e2ef500000","0x5dcdb6b87a503c6d8a3c65c2cf9a9aa883479a1e":"0x1f2bba5d84f99c00000","0x5dd112f368c0e6ceff77a9df02a5481651a02fb7":"0x93472c85c6d540000","0x5dd53ae897526b167d39f1744ef7c3da5b37a293":"0x1b1ae4d6e2ef5000000","0x5dded049a6e1f329dc4b971e722c9c1f2ade83f0":"0x3635c9adc5dea00000","0x5de598aba344378cab4431555b4f79992dc290c6":"0x487a9a304539440000","0x5de9e7d5d1b667d095dd34099c85b0421a0bc681":"0x1158e460913d00000","0x5df3277ca85936c7a0d2c0795605ad25095e7159":"0x6c6b935b8bbd400000","0x5dff811dad819ece3ba602c383fb5dc64c0a3a48":"0xa1544be879ea80000","0x5e031b0a724471d476f3bcd2eb078338bf67fbef":"0xfc936392801c0000","0x5e0785532c7723e4c0af9357d5274b73bdddddde":"0x54b41ea9bdb61dc0000","0x5e11ecf69d551d7f4f84df128046b3a13240a328":"0x1158e460913d00000","0x5e1fbd4e58e2312b3c78d7aaaafa10bf9c3189e3":"0x878678326eac9000000","0x5e32c72191b8392c55f510d8e3326e3a60501d62":"0x9513ea9de0243800000","0x5e51b8a3bb09d303ea7c86051582fd600fb3dc1a":"0x1158e460913d00000","0x5e58e255fc19870a04305ff2a04631f2ff294bb1":"0xf43fc2c04ee00000","0x5e5a441974a83d74c687ebdc633fb1a49e7b1ad7":"0xa2a15d09519be00000","0x5e65458be964ae449f71773704979766f8898761":"0x1ca7cc735b6f7c0000","0x5e67df8969101adabd91accd6bb1991274af8df2":"0x1b1ae4d6e2ef500000","0x5e6e9747e162f8b45c656e0f6cae7a84bac80e4e":"0x6c6b935b8bbd400000","0x5e731b55ced452bb3f3fe871ddc3ed7ee6510a8f":"0xa2a15d09519be00000","0x5e74ed80e9655788e1bb269752319667fe754e5a":"0x30927f74c9de00000","0x5e772e27f28800c50dda973bb33e10762e6eea20":"0x61093d7c2c6d380000","0x5e7b8c54dc57b0402062719dee7ef5e37ea35d62":"0x9bf9810fd05c840000","0x5e7f70378775589fc66a81d3f653e954f55560eb":"0x83f289181d84c80000","0x5e806e845730f8073e6cc9018ee90f5c05f909a3":"0x201e96dacceaf200000","0x5e8e4df18cf0af770978a8df8dac90931510a679":"0x6c6b935b8bbd400000","0x5e90c85877198756b0366c0e17b28e52b446505a":"0x144a4a18efeb680000","0x5e95fe5ffcf998f9f9ac0e9a81dab83ead77003d":"0x1d42c20d32797f0000","0x5ead29037a12896478b1296ab714e9cb95428c81":"0x3e043072d406e0000","0x5eb371c407406c427b3b7de271ad3c1e04269579":"0xa2a15d09519be00000","0x5ecdbaeab9106ffe5d7b519696609a05baeb85ad":"0x1158e460913d00000","0x5ed0d6338559ef44dc7a61edeb893fa5d83fa1b5":"0xbed1d0263d9f00000","0x5ed3bbc05240e0d399eb6ddfe60f62de4d9509af":"0x2914c02475f9d6d30000","0x5ed3f1ebe2ae6756b5d8dc19cad02c419aa5778b":"0x0","0x5ed56115bd6505a88273df5c56839470d24a2db7":"0x38e6591ee56668000","0x5ef8c96186b37984cbfe04c598406e3b0ac3171f":"0x1fd933494aa5fe00000","0x5efbdfe5389999633c26605a5bfc2c1bb5959393":"0x3c057c95cd9080000","0x5f13154631466dcb1353c890932a7c97e0878e90":"0x14542ba12a337c00000","0x5f167aa242bc4c189adecb3ac4a7c452cf192fcf":"0x6c6b4c4da6ddbe0000","0x5f1c8a04c90d735b8a152909aeae636fb0ce1665":"0x17b7827618c5a370000","0x5f23ba1f37a96c45bc490259538a54c28ba3b0d5":"0x410d586a20a4c00000","0x5f26cf34599bc36ea67b9e7a9f9b4330c9d542a3":"0x3635c9adc5dea00000","0x5f29c9de765dde25852af07d33f2ce468fd20982":"0x6c6b935b8bbd400000","0x5f2f07d2d697e8c567fcfdfe020f49f360be2139":"0x6c6b935b8bbd400000","0x5f321b3daaa296cadf29439f9dab062a4bffedd6":"0x47025903ea7ae0000","0x5f333a3b2310765a0d1832b9be4c0a03704c1c09":"0x3635c9adc5dea00000","0x5f344b01c7191a32d0762ac188f0ec2dd460911d":"0x3635c9adc5dea00000","0x5f363e0ab747e02d1b3b66abb69ea53c7baf523a":"0x277017338a30ae00000","0x5f375b86600c40cca8b2676b7a1a1d1644c5f52c":"0x44618d74c623f0000","0x5f3e1e6739b0c62200e00a003691d9efb238d89f":"0xa2a15d09519be00000","0x5f483ffb8f680aedf2a38f7833afdcde59b61e4b":"0x6c6b935b8bbd400000","0x5f4ace4c1cc13391e01f00b198e1f20b5f91cbf5":"0x10f0fa8b9d3811a0000","0x5f521282e9b278dc8c034c72af53ee29e5443d78":"0x161732d2f8f3ae00000","0x5f68a24c7eb4117667737b33393fb3c2148a53b6":"0x2cede918d453c0000","0x5f708eaf39d823946c51b3a3e9b7b3c003e26341":"0x62a992e53a0af00000","0x5f742e487e3ab81af2f94afdbe1b9b8f5ccc81bc":"0x75c445d41163e60000","0x5f74ed0e24ff80d9b2c4a44baa9975428cd6b935":"0xa18bcec34888100000","0x5f76f0a306269c78306b3d650dc3e9c37084db61":"0x821ab0d44149800000","0x5f77a107ab1226b3f95f10ee83aefc6c5dff3edc":"0x1b1ae4d6e2ef500000","0x5f7b3bbac16dab831a4a0fc53b0c549dc36c31ca":"0x692ae8897081d00000","0x5f93ff832774db5114c55bb4bf44ccf3b58f903f":"0x28a9c91a263458290000","0x5f9616c47b4a67f406b95a14fe6fc268396f1721":"0xad78ebc5ac6200000","0x5f981039fcf50225e2adf762752112d1cc26b6e3":"0x1b1a416a2153a50000","0x5f99dc8e49e61d57daef606acdd91b4d7007326a":"0xa2a15d09519be00000","0x5fa61f152de6123516c751242979285f796ac791":"0xb0f11972963b00000","0x5fa7bfe043886127d4011d8356a47e947963aca8":"0x62a992e53a0af00000","0x5fa8a54e68176c4fe2c01cf671c515bfbdd528a8":"0x45e155fa0110fa400000","0x5fad960f6b2c84569c9f4d47bf1985fcb2c65da6":"0x36356633ebd8ea0000","0x5fc6c11426b4a1eae7e51dd512ad1090c6f1a85b":"0x93fe5c57d710680000","0x5fcd84546896dd081db1a320bd4d8c1dd1528c4c":"0x1158e460913d00000","0x5fcda847aaf8d7fa8bca08029ca2849166aa15a3":"0x21cab81259a3bf0000","0x5fd1c3e31778276cb42ea740f5eae9c641dbc701":"0xa844a7424d9c80000","0x5fd3d6777ec2620ae83a05528ed425072d3ca8fd":"0x6c6b935b8bbd400000","0x5fd973af366aa5157c54659bcfb27cbfa5ac15d6":"0xd8d726b7177a800000","0x5fe77703808f823e6c399352108bdb2c527cb87c":"0x6a4076cf7995a00000","0x5fec49c665e64ee89dd441ee74056e1f01e92870":"0x1569b9e733474c00000","0x5ff326cd60fd136b245e29e9087a6ad3a6527f0d":"0x65ea3db75546600000","0x5ff93de6ee054cad459b2d5eb0f6870389dfcb74":"0xbed1d0263d9f00000","0x6006e36d929bf45d8f16231b126a011ae283d925":"0x98a7d9b8314c00000","0x6021e85a8814fce1e82a41abd1d3b2dad2faefe0":"0x6c6b935b8bbd400000","0x6038740ae28d66ba93b0be08482b3205a0f7a07b":"0x11216185c29f700000","0x603f2fab7afb6e017b94766069a4b43b38964923":"0x59d2db2414da990000","0x6042276df2983fe2bc4759dc1943e18fdbc34f77":"0x6acb3df27e1f880000","0x6042c644bae2b96f25f94d31f678c90dc96690db":"0x6c6b935b8bbd400000","0x604cdf18628dbfa8329194d478dd5201eecc4be7":"0x13f306a2409fc0000","0x604e9477ebf4727c745bcabbedcb6ccf29994022":"0x36369ed7747d260000","0x60676d1fa21fca052297e24bf96389c5b12a70d7":"0xd177c5a7a68d60000","0x60676e92d18b000509c61de540e6c5ddb676d509":"0x410d586a20a4c00000","0x606f177121f7855c21a5062330c8762264a97b31":"0xd8d726b7177a800000","0x60864236930d04d8402b5dcbeb807f3caf611ea2":"0xd8d726b7177a800000","0x60ab71cd26ea6d6e59a7a0f627ee079c885ebbf6":"0x1731790534df20000","0x60af0ee118443c9b37d2fead77f5e521debe1573":"0x678a932062e4180000","0x60b358cb3dbefa37f47df2d7365840da8e3bc98c":"0x1158e460913d00000","0x60b8d6b73b79534fb08bb8cbcefac7f393c57bfe":"0x5f68e8131ecf800000","0x60be6f953f2a4d25b6256ffd2423ac1438252e4e":"0x821ab0d4414980000","0x60c3714fdddb634659e4a2b1ea42c4728cc7b8ba":"0xb98bc829a6f90000","0x60cc3d445ebdf76a7d7ae571c6971dff68cc8585":"0x3635c9adc5dea00000","0x60d5667140d12614b21c8e5e8a33082e32dfcf23":"0x43c33c1937564800000","0x60de22a1507432a47b01cc68c52a0bf8a2e0d098":"0x10910d4cdc9f60000","0x60e0bdd0a259bb9cb09d3f37e5cd8b9daceabf8a":"0x4a4491bd6dcd280000","0x60e3cc43bcdb026aad759c7066f555bbf2ac66f5":"0x6c6b935b8bbd400000","0x61042b80fd6095d1b87be2f00f109fabafd157a6":"0x56bc75e2d63100000","0x6107d71dd6d0eefb11d4c916404cb98c753e117d":"0x6c6b935b8bbd400000","0x610fd6ee4eebab10a8c55d0b4bd2e7d6ef817156":"0x1159561065d5d0000","0x6114b0eae5576903f80bfb98842d24ed92237f1e":"0x56bc75e2d63100000","0x6121af398a5b2da69f65c6381aec88ce9cc6441f":"0x22b1c8c1227a000000","0x612667f172135b950b2cd1de10afdece6857b873":"0x3635c9adc5dea00000","0x612ced8dc0dc9e899ee46f7962333315f3f55e44":"0x125e35f9cd3d9b0000","0x6134d942f037f2cc3d424a230c603d67abd3edf7":"0x6c6b935b8bbd400000","0x613ac53be565d46536b820715b9b8d3ae68a4b95":"0xcbd47b6eaa8cc00000","0x613fab44b16bbe554d44afd178ab1d02f37aeaa5":"0x6c6b935b8bbd400000","0x614e8bef3dd2c59b59a4145674401018351884ea":"0x1158e460913d00000","0x61518464fdd8b73c1bb6ac6db600654938dbf17a":"0xad78ebc5ac6200000","0x61547d376e5369bcf978fc162c3c56ae453547e8":"0xad78ebc5ac6200000","0x6158e107c5eb54cb7604e0cd8dc1e07500d91c3c":"0x2b5e3af16b1880000","0x615a6f36777f40d6617eb5819896186983fd3731":"0x14061b9d77a5e980000","0x615f82365c5101f071e7d2cb6af14f7aad2c16c6":"0x1158e460913d00000","0x6170dd0687bd55ca88b87adef51cfdc55c4dd458":"0x6cb32f5c34fe440000","0x61733947fab820dbd351efd67855ea0e881373a0":"0x1158e460913d00000","0x6179979907fe7f037e4c38029d60bcbab832b3d6":"0x57473d05dabae80000","0x617f20894fa70e94a86a49cd74e03238f64d3cd9":"0x10f0dbae61009528000","0x617ff2cc803e31c9082233b825d025be3f7b1056":"0x6acb3df27e1f880000","0x6191ddc9b64a8e0890b4323709d7a07c48b92a64":"0x2a034919dfbfbc0000","0x6196c3d3c0908d254366b7bca55745222d9d4db1":"0xd8d726b7177a800000","0x619f171445d42b02e2e07004ad8afe694fa53d6a":"0x1158e460913d00000","0x61adf5929a5e2981684ea243baa01f7d1f5e148a":"0x5fabf6c984f230000","0x61b1b8c012cd4c78f698e470f90256e6a30f48dd":"0xad78ebc5ac6200000","0x61b3df2e9e9fd968131f1e88f0a0eb5bd765464d":"0xd8d726b7177a800000","0x61b902c5a673885826820d1fe14549e4865fbdc2":"0x1224efed2ae1918000","0x61b905de663fc17386523b3a28e2f7d037a655cd":"0x1b1ae4d6e2ef500000","0x61ba87c77e9b596de7ba0e326fddfeec2163ef66":"0xad78ebc5ac6200000","0x61bf84d5ab026f58c873f86ff0dfca82b55733ae":"0x6c6b935b8bbd400000","0x61c4ee7c864c4d6b5e37ea1331c203739e826b2f":"0x1a1353b382a918000","0x61c830f1654718f075ccaba316faacb85b7d120b":"0x15af1d78b58c400000","0x61c8f1fa43bf846999ecf47b2b324dfb6b63fe3a":"0x2b5e3af16b18800000","0x61c9dce8b2981cb40e98b0402bc3eb28348f03ac":"0xaacacd9b9e22b0000","0x61cea71fa464d62a07063f920b0cc917539733d8":"0x5a87e7d7f5f6580000","0x61d101a033ee0e2ebb3100ede766df1ad0244954":"0x1b1ae4d6e2ef500000","0x61ed5596c697207f3d55b2a51aa7d50f07fa09e8":"0x6c6b935b8bbd400000","0x61ff8e67b34d9ee6f78eb36ffea1b9f7c15787af":"0x58e7926ee858a00000","0x6205c2d5647470848a3840f3887e9b015d34755c":"0x6194049f30f7200000","0x6228ade95e8bb17d1ae23bfb0518414d497e0eb8":"0x15af1d78b58c400000","0x6229dcc203b1edccfdf06e87910c452a1f4d7a72":"0x6e1d41a8f9ec3500000","0x622be4b45495fcd93143efc412d699d6cdc23dc5":"0xf015f25736420000","0x62331df2a3cbee3520e911dea9f73e905f892505":"0x6c6b935b8bbd400000","0x625644c95a873ef8c06cdb9e9f6d8d7680043d62":"0x6194049f30f7200000","0x6265b2e7730f36b776b52d0c9d02ada55d8e3cb6":"0x3635c9adc5dea00000","0x62680a15f8ccb8bdc02f7360c25ad8cfb57b8ccd":"0x3635c9adc5dea00000","0x6294eae6e420a3d5600a39c4141f838ff8e7cc48":"0xa030dcebbd2f4c0000","0x62971bf2634cee0be3c9890f51a56099dbb9519b":"0x238fd42c5cf0400000","0x629be7ab126a5398edd6da9f18447e78c692a4fd":"0x6c6b935b8bbd400000","0x62b4a9226e61683c72c183254690daf511b4117a":"0xe18398e7601900000","0x62b9081e7710345e38e02e16449ace1b85bcfc4e":"0x3154c9729d05780000","0x62c37c52b97f4b040b1aa391d6dec152893c4707":"0x3635c9adc5dea00000","0x62c9b271ffd5b770a5eee4edc9787b5cdc709714":"0x6c6b935b8bbd400000","0x62d5cc7117e18500ac2f9e3c26c86b0a94b0de15":"0x5b12aefafa8040000","0x62dc72729024375fc37cbb9c7c2393d10233330f":"0x6c6b935b8bbd400000","0x62e6b2f5eb94fa7a43831fc87e254a3fe3bf8f89":"0xd8d726b7177a80000","0x62f2e5ccecd52cc4b95e0597df27cc079715608c":"0x7c0860e5a80dc0000","0x62fb8bd1f0e66b90533e071e6cbe6111fef0bc63":"0x3ba1910bf341b000000","0x630a913a9031c9492abd4c41dbb15054cfec4416":"0x13458db67af35e00000","0x630c5273126d517ce67101811cab16b8534cf9a8":"0x1feccc62573bbd38000","0x631030a5b27b07288a45696f189e1114f12a81c0":"0x1b1a7a420ba00d0000","0x6310b020fd98044957995092090f17f04e52cdfd":"0x55a6e79ccd1d300000","0x632b9149d70178a7333634275e82d5953f27967b":"0x25f273933db5700000","0x632cecb10cfcf38ec986b43b8770adece9200221":"0x1158e460913d00000","0x6331028cbb5a21485bc51b565142993bdb2582a9":"0x1cfdd7468216e80000","0x63334fcf1745840e4b094a3bb40bb76f9604c04c":"0xd7a5d703a717e80000","0x63340a57716bfa63eb6cd133721202575bf796f0":"0xb61e0a20c12718000","0x634efc24371107b4cbf03f79a93dfd93e431d5fd":"0x423582e08edc5c8000","0x635c00fdf035bca15fa3610df3384e0fb79068b1":"0x1e7e4171bf4d3a00000","0x63612e7862c27b587cfb6daf9912cb051f030a9f":"0x25b19d4bfe8ed0000","0x63666755bd41b5986997783c13043008242b3cb5":"0x1b1ae4d6e2ef500000","0x637be71b3aa815ff453d5642f73074450b64c82a":"0x6c6b935b8bbd400000","0x637d67d87f586f0a5a479e20ee13ea310a10b647":"0xa3a5926afa1e7300000","0x637f5869d6e4695f0eb9e27311c4878aff333380":"0x6ac04e68aaec860000","0x63977cad7d0dcdc52b9ac9f2ffa136e8642882b8":"0x410d586a20a4c0000","0x63a61dc30a8e3b30a763c4213c801cbf98738178":"0x3635c9adc5dea00000","0x63ac545c991243fa18aec41d4f6f598e555015dc":"0x2086ac351052600000","0x63b9754d75d12d384039ec69063c0be210d5e0e3":"0x920b860cc8ecfd8000","0x63bb664f9117037628594da7e3c5089fd618b5b5":"0x1158e460913d00000","0x63c2a3d235e5eeabd0d4a6afdb89d94627396495":"0x434ef05b9d84820000","0x63c8dfde0b8e01dadc2e748c824cc0369df090b3":"0xd255d112e103a00000","0x63d55ad99b9137fd1b20cc2b4f03d42cbaddf334":"0x15af1d78b58c400000","0x63d80048877596e0c28489e650cd4ac180096a49":"0xf2dc7d47f15600000","0x63e414603e80d4e5a0f5c18774204642258208e4":"0x10f0cf064dd59200000","0x63e88e2e539ffb450386b4e46789b223f5476c45":"0x155170a778e25d00000","0x63ef2fbc3daf5edaf4a295629ccf31bcdf4038e5":"0x4f2591f896a6500000","0x63f0e5a752f79f67124eed633ad3fd2705a397d4":"0xd5967be4fc3f100000","0x63f5b53d79bf2e411489526530223845fac6f601":"0x65a4da25d3016c00000","0x63fc93001305adfbc9b85d29d9291a05f8f1410b":"0x3635c9adc5dea00000","0x63fe6bcc4b8a9850abbe75803730c932251f145b":"0xfc936392801c0000","0x6403d062549690c8e8b63eae41d6c109476e2588":"0x6c6b935b8bbd400000","0x64042ba68b12d4c151651ca2813b7352bd56f08e":"0x2086ac351052600000","0x6405dd13e93abcff377e700e3c1a0086eca27d29":"0xfc936392801c0000","0x640aba6de984d94517377803705eaea7095f4a11":"0x21e19e0c9bab2400000","0x640bf87415e0cf407301e5599a68366da09bbac8":"0x1abc9f416098158000","0x6420f8bcc8164a6152a99d6b99693005ccf7e053":"0x36356633ebd8ea0000","0x64241a7844290e0ab855f1d4aa75b55345032224":"0x56bc75e2d631000000","0x64264aedd52dcae918a012fbcd0c030ee6f71821":"0x3635c9adc5dea00000","0x64370e87202645125a35b207af1231fb6072f9a7":"0xad78ebc5ac6200000","0x643d9aeed4b180947ed2b9207cce4c3ddc55e1f7":"0xad78ebc5ac6200000","0x6443b8ae639de91cf73c5ae763eeeed3ddbb9253":"0x6c6b935b8bbd400000","0x64457fa33b0832506c4f7d1180dce48f46f3e0ff":"0x6c6b935b8bbd400000","0x64464a6805b462412a901d2db8174b06c22deea6":"0x19c846a029c7c80000","0x644ba6c61082e989109f5c11d4b40e991660d403":"0xd8d726b7177a800000","0x64628c6fb8ec743adbd87ce5e018d531d9210437":"0x1731790534df20000","0x6463f715d594a1a4ace4bb9c3b288a74decf294d":"0x6acb3df27e1f880000","0x646628a53c2c4193da88359ce718dadd92b7a48d":"0xad8006c2f5ef00000","0x64672da3ab052821a0243d1ce4b6e0a36517b8eb":"0xad78ebc5ac6200000","0x646afba71d849e80c0ed59cac519b278e7f7abe4":"0x3635c9adc5dea00000","0x646e043d0597a664948fbb0dc15475a3a4f3a6ed":"0x1158e460913d00000","0x6470a4f92ec6b0fccd01234fa59023e9ff1f3aac":"0xa2a15d09519be00000","0x647b85044df2cf0b4ed4882e88819fe22ae5f793":"0x36363b5d9a77700000","0x6485470e61db110aebdbafd536769e3c599cc908":"0x2086ac351052600000","0x648f5bd2a2ae8902db37847d1cb0db9390b06248":"0x1a535ecf0760a048000","0x649a2b9879cd8fb736e6703b0c7747849796f10f":"0x18ee22da01ad34f0000","0x649a85b93653075fa6562c409a565d087ba3e1ba":"0x6c6b935b8bbd400000","0x64adcceec53dd9d9dd15c8cc1a9e736de4241d2c":"0x30927f74c9de00000","0x64cf0935bf19d2cebbecd8780d27d2e2b2c34166":"0x6acb3df27e1f880000","0x64d80c3b8ba68282290b75e65d8978a15a87782c":"0x6acb3df27e1f880000","0x64dba2d6615b8bd7571836dc75bc79d314f5ecee":"0x21e19e0c9bab2400000","0x64e0217a5b38aa40583625967fa9883690388b6f":"0xad78ebc5ac6200000","0x64e02abb016cc23a2934f6bcddb681905021d563":"0x3635c9adc5dea00000","0x64e03ef070a54703b7184e48276c5c0077ef4b34":"0x1158e460913d000000","0x64e2de21200b1899c3a0c0653b5040136d0dc842":"0x43c33c1937564800000","0x64ec8a5b743f3479e707dae9ee20ddaa4f40f1d9":"0xad78ebc5ac6200000","0x6503860b191008c15583bfc88158099301762828":"0x3635c9adc5dea00000","0x65053191319e067a25e6361d47f37f6318f83419":"0x155bd9307f9fe80000","0x65093b239bbfba23c7775ca7da5a8648a9f54cf7":"0x15af1d78b58c400000","0x6509eeb1347e842ffb413e37155e2cbc738273fd":"0x6c6b935b8bbd400000","0x650b425555e4e4c51718146836a2c1ee77a5b421":"0x43c33c1937564800000","0x650cf67db060cce17568d5f2a423687c49647609":"0x56bc75e2d63100000","0x6510df42a599bcb0a519cca961b488759a6f6777":"0x6c6b935b8bbd400000","0x653675b842d7d8b461f722b4117cb81dac8e639d":"0x1ae361fc1451c0000","0x654b7e808799a83d7287c67706f2abf49a496404":"0x6acb3df27e1f880000","0x654f524847b3a6acc0d3d5f1f362b603edf65f96":"0x1b1ae4d6e2ef5000000","0x655934da8e744eaa3de34dbbc0894c4eda0b61f2":"0xad78ebc5ac6200000","0x655d5cd7489629e2413c2105b5a172d933c27af8":"0xdb03186cd840a60000","0x656018584130db83ab0591a8128d9381666a8d0e":"0x3779f912019fc0000","0x6560941328ff587cbc56c38c78238a7bb5f442f6":"0x2861906b59c47a0000","0x656579daedd29370d9b737ee3f5cd9d84bc2b342":"0x4d853c8f8908980000","0x657473774f63ac3d6279fd0743d5790c4f161503":"0xad78ebc5ac6200000","0x6580b1bc94390f04b397bd73e95d96ef11eaf3a8":"0x1158e460913d00000","0x65849be1af20100eb8a3ba5a5be4d3ae8db5a70e":"0x15af1d78b58c400000","0x659c0a72c767a3a65ced0e1ca885a4c51fd9b779":"0x6c6b935b8bbd400000","0x65a52141f56bef98991724c6e7053381da8b5925":"0x3429c335d57fe0000","0x65a9dad42e1632ba3e4e49623fab62a17e4d3611":"0x50c4cb2a10c600000","0x65af8d8b5b1d1eedfa77bcbc96c1b133f83306df":"0x55005f0c614480000","0x65af9087e05167715497c9a5a749189489004def":"0x2d43f3ebfafb2c0000","0x65b42faecc1edfb14283ca979af545f63b30e60c":"0xfc936392801c0000","0x65d33eb39cda6453b19e61c1fe4db93170ef9d34":"0xb98bc829a6f90000","0x65d8dd4e251cbc021f05b010f2d5dc520c3872e0":"0x2d43579a36a90e0000","0x65ea26eabbe2f64ccccfe06829c25d4637520225":"0x25f273933db5700000","0x65ea67ad3fb56ad5fb94387dd38eb383001d7c68":"0x56bc75e2d63100000","0x65ebaed27edb9dcc1957aee5f452ac2105a65c0e":"0x937dfadae25e29b8000","0x65ee20b06d9ad589a7e7ce04b9f5f795f402aece":"0x6c6b935b8bbd400000","0x65f534346d2ffb787fa9cf185d745ba42986bd6e":"0x1b1ae4d6e2ef500000","0x65f5870f26bce089677dfc23b5001ee492483428":"0x112b1f155aa32a30000","0x65fd02d704a12a4dace9471b0645f962a89671c8":"0x18d1ce6e427cd8000","0x65ff874fafce4da318d6c93d57e2c38a0d73e820":"0x3638021cecdab00000","0x660557bb43f4be3a1b8b85e7df7b3c5bcd548057":"0x14542ba12a337c00000","0x66082c75a8de31a53913bbd44de3a0374f7faa41":"0x4f2591f896a6500000","0x6611ce59a98b072ae959dc49ad511daaaaa19d6b":"0xad78ebc5ac6200000","0x66201bd227ae6dc6bdfed5fbde811fecfe5e9dd9":"0x203e9e8492788c0000","0x662334814724935b7931ddca6100e00d467727cd":"0x2288269d0783d40000","0x66274fea82cd30b6c29b23350e4f4f3d310a5899":"0x70370550ab82980000","0x662cfa038fab37a01745a364e1b98127c503746d":"0xd5967be4fc3f100000","0x6635b46f711d2da6f0e16370cd8ee43efb2c2d52":"0x6c6b935b8bbd400000","0x663604b0503046e624cd26a8b6fb4742dce02a6f":"0x38b9b797ef68c0000","0x6636d7ac637a48f61d38b14cfd4865d36d142805":"0x1b1ae4d6e2ef500000","0x6640ccf053555c130ae2b656647ea6e31637b9ab":"0x6acb3df27e1f880000","0x66424bd8785b8cb461102a900283c35dfa07ef6a":"0x22e2db26666fc8000","0x664cd67dccc9ac8228b45c55db8d76550b659cdc":"0x155bd9307f9fe80000","0x664e43119870af107a448db1278b044838ffcdaf":"0x15af1d78b58c400000","0x6651736fb59b91fee9c93aa0bd6ea2f7b2506180":"0x1b1ae4d6e2ef500000","0x665b000f0b772750cc3c217a5ef429a92bf1ccbb":"0xd8d726b7177a800000","0x66662006015c1f8e3ccfcaebc8ee6807ee196303":"0x1b1b3a1ac261ec0000","0x666746fb93d1935c5a3c684e725010c4fad0b1d8":"0x1158e460913d00000","0x666b4f37d55d63b7d056b615bb74c96b3b01991a":"0xd8d726b7177a800000","0x66719c0682b2ac7f9e27abebec7edf8decf0ae0d":"0x1158e460913d00000","0x6671b182c9f741a0cd3c356c73c23126d4f9e6f4":"0xad78ebc5ac6200000","0x6679aeecd87a57a73f3356811d2cf49d0c4d96dc":"0x2086ac351052600000","0x667b61c03bb937a9f5d0fc5a09f1ea3363c77035":"0xe664992288f2280000","0x6685fd2e2544702c360b8bb9ee78f130dad16da5":"0x6c6b935b8bbd400000","0x668b6ba8ab08eace39c502ef672bd5ccb6a67a20":"0x697d95d4201333c0000","0x66925de3e43f4b41bf9dadde27d5488ef569ea0d":"0x222c8eb3ff6640000","0x66b0c100c49149935d14c0dc202cce907cea1a3d":"0x6acb3df27e1f880000","0x66b1a63da4dcd9f81fe54f5e3fcb4055ef7ec54f":"0xaeb272adf9cfa0000","0x66b39837cb3cac8a802afe3f12a258bbca62dacd":"0x15af1d78b58c400000","0x66c8331efe7198e98b2d32b938688e3241d0e24f":"0x2098051970e39d00000","0x66cc8ab23c00d1b82acd7d73f38c99e0d05a4fa6":"0x56bc75e2d63100000","0x66dcc5fb4ee7fee046e141819aa968799d644491":"0x487a9a304539440000","0x66e09427c1e63deed7e12b8c55a6a19320ef4b6a":"0x93739534d28680000","0x66ec16ee9caab411c55a6629e318de6ee216491d":"0x2ee449550898e40000","0x66f50406eb1b11a946cab45927cca37470e5a208":"0x6c6b935b8bbd400000","0x66fdc9fee351fa1538eb0d87d819fcf09e7c106a":"0x14627b5d93781b20000","0x67048f3a12a4dd1f626c64264cb1d7971de2ca38":"0x9c2007651b2500000","0x6704f169e0d0b36b57bbc39f3c45437b5ee3d28d":"0x155bd9307f9fe80000","0x671015b97670b10d5e583f3d62a61c1c79c5143f":"0x15af1d78b58c400000","0x6710c2c03c65992b2e774be52d3ab4a6ba217ef7":"0x274d656ac90e3400000","0x671110d96aaff11523cc546bf9940eedffb2faf7":"0xd8d726b7177a800000","0x6715c14035fb57bb3d667f7b707498c41074b855":"0x25f273933db5700000","0x671bbca099ff899bab07ea1cf86965c3054c8960":"0x2b5e3af16b1880000","0x6727daf5b9d68efcab489fedec96d7f7325dd423":"0x6c6b935b8bbd400000","0x672cbca8440a8577097b19aff593a2ad9d28a756":"0x4563918244f400000","0x672ec42faa8cd69aaa71b32cc7b404881d52ff91":"0x21e19e0c9bab2400000","0x672fa0a019088db3166f6119438d07a99f8ba224":"0x2d4ca05e2b43ca80000","0x673144f0ec142e770f4834fee0ee311832f3087b":"0x1b1b6bd7af64c70000","0x67350b5331926f5e28f3c1e986f96443809c8b8c":"0x1314fb370629800000","0x673706b1b0e4dc7a949a7a796258a5b83bb5aa83":"0x368c8623a8b4d100000","0x6742a2cfce8d79a2c4a51b77747498912245cd6a":"0xdfd5b80b7e4680000","0x674adb21df4c98c7a347ac4c3c24266757dd7039":"0x6c6b935b8bbd400000","0x67518e5d02b205180f0463a32004471f753c523e":"0x6b918aac494b168000","0x675d5caa609bf70a18aca580465d8fb7310d1bbb":"0x43c33c1937564800000","0x67632046dcb25a54936928a96f423f3320cbed92":"0x6c6b935b8bbd400000","0x6765df25280e8e4f38d4b1cf446fc5d7eb659e34":"0x56bc75e2d63100000","0x6776e133d9dc354c12a951087b639650f539a433":"0x68155a43676e00000","0x6785513cf732e47e87670770b5419be10cd1fc74":"0x6c6b935b8bbd400000","0x679437eacf437878dc293d48a39c87b7421a216c":"0x37f81821db2680000","0x679b9a109930517e8999099ccf2a914c4c8dd934":"0x340aad21b3b700000","0x67a80e0190721f94390d6802729dd12c31a895ad":"0x6c6b1375bc91560000","0x67b8a6e90fdf0a1cac441793301e8750a9fa7957":"0x30849ebe16369c0000","0x67bc85e87dc34c4e80aafa066ba8d29dbb8e438e":"0x15d1cf4176aeba0000","0x67c926093e9b8927933810d98222d62e2b8206bb":"0x678a932062e4180000","0x67cfda6e70bf7657d39059b59790e5145afdbe61":"0x23050d095866580000","0x67d682a282ef73fb8d6e9071e2614f47ab1d0f5e":"0x3635c9adc5dea00000","0x67d6a8aa1bf8d6eaf7384e993dfdf10f0af68a61":"0xabcbb5718974b8000","0x67da922effa472a6b124e84ea8f86b24e0f515aa":"0x1158e460913d00000","0x67df242d240dd4b8071d72f8fcf35bb3809d71e8":"0xd8d726b7177a800000","0x67ee406ea4a7ae6a3a381eb4edd2f09f174b4928":"0x3829635f0968b00000","0x67f2bb78b8d3e11f7c458a10b5c8e0a1d374467d":"0x61093d7c2c6d380000","0x67fc527dce1785f0fb8bc7e518b1c669f7ecdfb5":"0xd02ab486cedc00000","0x68027d19558ed7339a08aee8de3559be063ec2ea":"0x6c6b935b8bbd400000","0x680640838bd07a447b168d6d923b90cf6c43cdca":"0x5dc892aa1131c80000","0x6807ddc88db489b033e6b2f9a81553571ab3c805":"0x19f8e7559924c0000","0x680d5911ed8dd9eec45c060c223f89a7f620bbd5":"0x43c33c1937564800000","0x6811b54cd19663b11b94da1de2448285cd9f68d9":"0x3ba1910bf341b00000","0x68190ca885da4231874c1cfb42b1580a21737f38":"0xcf152640c5c8300000","0x682897bc4f8e89029120fcffb787c01a93e64184":"0x21e19e0c9bab2400000","0x68295e8ea5afd9093fc0a465d157922b5d2ae234":"0x1154e53217ddb0000","0x682e96276f518d31d7e56e30dfb009c1218201bd":"0x1158e460913d00000","0x6835c8e8b74a2ca2ae3f4a8d0f6b954a3e2a8392":"0x3429c335d57fe0000","0x683633010a88686bea5a98ea53e87997cbf73e69":"0x56b394263a40c0000","0x683dba36f7e94f40ea6aea0d79b8f521de55076e":"0x796e3ea3f8ab00000","0x68419c6dd2d3ce6fcbb3c73e2fa079f06051bde6":"0x6acb3df27e1f880000","0x68473b7a7d965904bedba556dfbc17136cd5d434":"0x56bc75e2d63100000","0x6847825bdee8240e28042c83cad642f286a3bddc":"0x5150ae84a8cdf00000","0x684a44c069339d08e19a75668bdba303be855332":"0xed2b525841adfc00000","0x68531f4dda808f5320767a03113428ca0ce2f389":"0x10d3aa536e2940000","0x687927e3048bb5162ae7c15cf76bd124f9497b9e":"0x6c6b935b8bbd400000","0x68809af5d532a11c1a4d6e32aac75c4c52b08ead":"0x21e19e0c9bab2400000","0x6886ada7bbb0617bda842191c68c922ea3a8ac82":"0x3ee23bde0e7d200000","0x68883e152e5660fee59626e7e3b4f05110e6222f":"0xb94633be975a62a0000","0x688a569e965524eb1d0ac3d3733eab909fb3d61e":"0x478eae0e571ba00000","0x688eb3853bbcc50ecfee0fa87f0ab693cabdef02":"0x6b10a18400647c00000","0x68a7425fe09eb28cf86eb1793e41b211e57bd68d":"0x243d4d18229ca20000","0x68a86c402388fddc59028fec7021e98cbf830eac":"0x10910d4cdc9f60000","0x68acdaa9fb17d3c309911a77b05f5391fa034ee9":"0x1e52e336cde22180000","0x68addf019d6b9cab70acb13f0b3117999f062e12":"0x2b51212e6b7c88000","0x68b31836a30a016ada157b638ac15da73f18cfde":"0x168d28e3f00280000","0x68b6854788a7c6496cdbf5f84b9ec5ef392b78bb":"0x42bf06b78ed3b500000","0x68c08490c89bf0d6b6f320b1aca95c8312c00608":"0xd8d726b7177a800000","0x68c7d1711b011a33f16f1f55b5c902cce970bdd7":"0x83d6c7aab63600000","0x68c8791dc342c373769ea61fb7b510f251d32088":"0x3635c9adc5dea00000","0x68df947c495bebaeb8e889b3f953d533874bf106":"0x1d9945ab2b03480000","0x68e8022740f4af29eb48db32bcecddfd148d3de3":"0x3635c9adc5dea00000","0x68ec79d5be7155716c40941c79d78d17de9ef803":"0x1b233877b5208c0000","0x68eec1e288ac31b6eaba7e1fbd4f04ad579a6b5d":"0x6c6b935b8bbd400000","0x68f525921dc11c329b754fbf3e529fc723c834cd":"0x57473d05dabae80000","0x68f719ae342bd7fef18a05cbb02f705ad38ed5b2":"0x38ebad5cdc90280000","0x68f7573cd457e14c03fea43e302d30347c10705c":"0x10f0cf064dd59200000","0x68f8f45155e98c5029a4ebc5b527a92e9fa83120":"0xf07b44b40793208000","0x68fe1357218d095849cd579842c4aa02ff888d93":"0x6c6b935b8bbd400000","0x690228e4bb12a8d4b5e0a797b0c5cf2a7509131e":"0x65ea3db75546600000","0x690594d306613cd3e2fd24bca9994ad98a3d73f8":"0x6c6b935b8bbd400000","0x69073269729e6414b26ec8dc0fd935c73b579f1e":"0x65a4da25d3016c00000","0x6919dd5e5dfb1afa404703b9faea8cee35d00d70":"0x14061b9d77a5e980000","0x693492a5c51396a482881669ccf6d8d779f00951":"0x12bf50503ae3038000","0x693d83be09459ef8390b2e30d7f7c28de4b4284e":"0x6c6b935b8bbd400000","0x69517083e303d4fbb6c2114514215d69bc46a299":"0x56bc75e2d63100000","0x695550656cbf90b75d92ad9122d90d23ca68ca4d":"0x3635c9adc5dea00000","0x6958f83bb2fdfb27ce0409cd03f9c5edbf4cbedd":"0x43c33c1937564800000","0x695b0f5242753701b264a67071a2dc880836b8db":"0xe398811bec680000","0x695b4cce085856d9e1f9ff3e79942023359e5fbc":"0x10f0cf064dd59200000","0x6966063aa5de1db5c671f3dd699d5abe213ee902":"0x1b1ae4d6e2ef5000000","0x6974c8a414ceaefd3c2e4dfdbef430568d9a960b":"0x121ea68c114e510000","0x6978696d5150a9a263513f8f74c696f8b1397cab":"0x167f482d3c5b1c00000","0x69797bfb12c9bed682b91fbc593591d5e4023728":"0x21e19e0c9bab2400000","0x697f55536bf85ada51841f0287623a9f0ed09a17":"0x21e19e0c9bab2400000","0x6982fe8a867e93eb4a0bd051589399f2ec9a5292":"0x6c6b935b8bbd400000","0x698a8a6f01f9ab682f637c7969be885f6c5302bf":"0x10d3aa536e2940000","0x698ab9a2f33381e07c0c47433d0d21d6f336b127":"0x1158e460913d00000","0x6994fb3231d7e41d491a9d68d1fa4cae2cc15960":"0xd8d726b7177a800000","0x699c9ee47195511f35f862ca4c22fd35ae8ffbf4":"0x4563918244f400000","0x699fc6d68a4775573c1dcdaec830fefd50397c4e":"0x340aad21b3b700000","0x69af28b0746cac0da17084b9398c5e36bb3a0df2":"0x3677036edf0af60000","0x69b80ed90f84834afa3ff82eb964703b560977d6":"0x1731790534df20000","0x69b81d5981141ec7a7141060dfcf8f3599ffc63e":"0x10f0cf064dd59200000","0x69bcfc1d43b4ba19de7b274bdffb35139412d3d7":"0x35659ef93f0fc40000","0x69bd25ade1a3346c59c4e930db2a9d715ef0a27a":"0xd8d726b7177a800000","0x69c08d744754de709ce96e15ae0d1d395b3a2263":"0x3635c9adc5dea00000","0x69c2d835f13ee90580408e6a3283c8cca6a434a2":"0x238fd42c5cf0400000","0x69c94e07c4a9be3384d95dfa3cb9290051873b7b":"0x3cb71f51fc5580000","0x69cb3e2153998d86e5ee20c1fcd1a6baeeb2863f":"0xd8d726b7177a800000","0x69d39d510889e552a396135bfcdb06e37e387633":"0xd8d726b7177a800000","0x69d98f38a3ba3dbc01fa5c2c1427d862832f2f70":"0x152d02c7e14af6800000","0x69e2e2e704307ccc5b5ca3f164fece2ea7b2e512":"0x17b7883c06916600000","0x69ff429074cb9b6c63bc914284bce5f0c8fbf7d0":"0x1b1ae4d6e2ef500000","0x69ff8901b541763f817c5f2998f02dcfc1df2997":"0x22b1c8c1227a00000","0x6a023af57d584d845e698736f130db9db40dfa9a":"0x55b201c8900980000","0x6a04f5d53fc0f515be942b8f12a9cb7ab0f39778":"0xa9aab3459be1940000","0x6a05b21c4f17f9d73f5fb2b0cb89ff5356a6cc7e":"0x5150ae84a8cdf00000","0x6a0f056066c2d56628850273d7ecb7f8e6e9129e":"0x10f0d293cc7a5880000","0x6a13d5e32c1fd26d7e91ff6e053160a89b2c8aad":"0x2e62f20a69be40000","0x6a2e86469a5bf37cee82e88b4c3863895d28fcaf":"0x1c229266385bbc0000","0x6a3694424c7cc6b8bcd9bccaba540cc1f5df18d7":"0x6c6b935b8bbd400000","0x6a42ca971c6578d5ade295c3e7f4ad331dd3424e":"0x14542ba12a337c00000","0x6a44af96b3f032ae641beb67f4b6c83342d37c5d":"0x19274b259f6540000","0x6a4c8907b600248057b1e46354b19bdc859c991a":"0x1158e460913d00000","0x6a514e6242f6b68c137e97fea1e78eb555a7e5f7":"0x1158e460913d00000","0x6a53d41ae4a752b21abed5374649953a513de5e5":"0x6c6b935b8bbd400000","0x6a6159074ab573e0ee581f0f3df2d6a594629b74":"0x10ce1d3d8cb3180000","0x6a6337833f8f6a6bf10ca7ec21aa810ed444f4cb":"0x37bd24345ce8a40000","0x6a6353b971589f18f2955cba28abe8acce6a5761":"0xa2a15d09519be00000","0x6a63fc89abc7f36e282d80787b7b04afd6553e71":"0x8ac7230489e800000","0x6a679e378fdce6bfd97fe62f043c6f6405d79e99":"0xd8d726b7177a800000","0x6a686bf220b593deb9b7324615fb9144ded3f39d":"0x4f2591f896a6500000","0x6a6b18a45a76467e2e5d5a2ef911c3e12929857b":"0x115d3a99a9614f400000","0x6a74844d8e9cb5581c45079a2e94462a6cee8821":"0x3ab53a552dd4c90000","0x6a7b2e0d88867ff15d207c222bebf94fa6ce8397":"0xcb49b44ba602d800000","0x6a7c252042e7468a3ff773d6450bba85efa26391":"0x1b1ae4d6e2ef500000","0x6a8a4317c45faa0554ccdb482548183e295a24b9":"0x3635c9adc5dea00000","0x6a8cea2de84a8df997fd3f84e3083d93de57cda9":"0x56be03ca3e47d8000","0x6a9758743b603eea3aa0524b42889723c4153948":"0x22385a827e815500000","0x6aa5732f3b86fb8c81efbe6b5b47b563730b06c8":"0x3635c9adc5dea00000","0x6ab323ae5056ed0a453072c5abe2e42fcf5d7139":"0x2fb474098f67c00000","0x6ab5b4c41cddb829690c2fda7f20c85e629dd5d5":"0x64d4af714c32900000","0x6ac40f532dfee5118117d2ad352da77d4f6da2c8":"0x15af1d78b58c400000","0x6ac4d4be2db0d99da3faaaf7525af282051d6a90":"0x458ca58a962b28000","0x6acddca3cd2b4990e25cd65c24149d0912099e79":"0xa2a1e07c9f6c908000","0x6ad90be252d9cd464d998125fab693060ba8e429":"0xd8d726b7177a800000","0x6add932193cd38494aa3f03aeccc4b7ab7fabca2":"0x4db73254763000000","0x6ae57f27917c562a132a4d1bf7ec0ac785832926":"0x14542ba12a337c00000","0x6aeb9f74742ea491813dbbf0d6fcde1a131d4db3":"0x17e554308aa0300000","0x6af235d2bbe050e6291615b71ca5829658810142":"0xa2a15d09519be00000","0x6af6c7ee99df271ba15bf384c0b764adcb4da182":"0x36356633ebd8ea0000","0x6af8e55969682c715f48ad4fc0fbb67eb59795a3":"0x6c6b935b8bbd400000","0x6af940f63ec9b8d876272aca96fef65cdacecdea":"0xa2a15d09519be00000","0x6af9f0dfeeaebb5f64bf91ab771669bf05295553":"0x15af1d78b58c400000","0x6aff1466c2623675e3cb0e75e423d37a25e442eb":"0x5dc892aa1131c80000","0x6b0da25af267d7836c226bcae8d872d2ce52c941":"0x14542ba12a337c00000","0x6b10f8f8b3e3b60de90aa12d155f9ff5ffb22c50":"0x6c6b935b8bbd400000","0x6b17598a8ef54f797ae515ccb6517d1859bf8011":"0x56bc75e2d63100000","0x6b20c080606a79c73bd8e75b11717a4e8db3f1c3":"0x103f735803f0140000","0x6b2284440221ce16a8382de5ff0229472269deec":"0x3635c9adc5dea00000","0x6b30f1823910b86d3acb5a6afc9defb6f3a30bf8":"0xe3aeb5737240a00000","0x6b38de841fad7f53fe02da115bd86aaf662466bd":"0x5dc892aa1131c80000","0x6b4b99cb3fa9f7b74ce3a48317b1cd13090a1a7a":"0x31b327e695de20000","0x6b5ae7bf78ec75e90cb503c778ccd3b24b4f1aaf":"0x2b5e3af16b18800000","0x6b63a2dfb2bcd0caec0022b88be30c1451ea56aa":"0x2bdb6bf91f7f4c8000","0x6b6577f3909a4d6de0f411522d4570386400345c":"0x65ea3db75546600000","0x6b72a8f061cfe6996ad447d3c72c28c0c08ab3a7":"0xe78c6ac79912620000","0x6b760d4877e6a627c1c967bee451a8507ddddbab":"0x3154c9729d05780000","0x6b83bae7b565244558555bcf4ba8da2011891c17":"0x6c6b935b8bbd400000","0x6b925dd5d8ed6132ab6d0860b82c44e1a51f1fee":"0x503b203e9fba200000","0x6b94615db750656ac38c7e1cf29a9d13677f4e15":"0x28a857425466f800000","0x6b951a43274eeafc8a0903b0af2ec92bf1efc839":"0x56bc75e2d63100000","0x6b992521ec852370848ad697cc2df64e63cc06ff":"0x3635c9adc5dea00000","0x6ba8f7e25fc2d871618e24e40184199137f9f6aa":"0x15af64869a6bc20000","0x6ba9b21b35106be159d1c1c2657ac56cd29ffd44":"0xf2dc7d47f156000000","0x6baf7a2a02ae78801e8904ad7ac05108fc56cff6":"0x3635c9adc5dea00000","0x6bb2aca23fa1626d18efd6777fb97db02d8e0ae4":"0x878678326eac9000000","0x6bb4a661a33a71d424d49bb5df28622ed4dffcf4":"0x222c8eb3ff66400000","0x6bb50813146a9add42ee22038c9f1f7469d47f47":"0xada55474b81340000","0x6bbc3f358a668dd1a11f0380f3f73108426abd4a":"0xd8d726b7177a800000","0x6bbd1e719390e6b91043f8b6b9df898ea8001b34":"0x6c6c4fa6c3da588000","0x6bc85acd5928722ef5095331ee88f484b8cf8357":"0x9c2007651b2500000","0x6bd3e59f239fafe4776bb9bddd6bee83ba5d9d9f":"0x3635c9adc5dea00000","0x6bd457ade051795df3f2465c3839aed3c5dee978":"0x3634bf39ab98788000","0x6be16313643ebc91ff9bb1a2e116b854ea933a45":"0x1b1ae4d6e2ef500000","0x6be7595ea0f068489a2701ec4649158ddc43e178":"0x6c6b935b8bbd400000","0x6be9030ee6e2fbc491aca3de4022d301772b7b7d":"0x1731790534df20000","0x6bec311ad05008b4af353c958c40bd06739a3ff3":"0x377f62a0f0a62700000","0x6bf7b3c065f2c1e7c6eb092ba0d15066f393d1b8":"0x15af1d78b58c400000","0x6bf86f1e2f2b8032a95c4d7738a109d3d0ed8104":"0x62a992e53a0af00000","0x6c05e34e5ef2f42ed09deff1026cd66bcb6960bb":"0x6c6b935b8bbd400000","0x6c08a6dc0173c7342955d1d3f2c065d62f83aec7":"0x1158e460913d00000","0x6c0ae9f043c834d44271f13406593dfe094f389f":"0x52442ae133b62a8000","0x6c0cc917cbee7d7c099763f14e64df7d34e2bf09":"0xd8d726b7177a80000","0x6c0e712f405c59725fe829e9774bf4df7f4dd965":"0xc2868889ca68a440000","0x6c101205b323d77544d6dc52af37aca3cec6f7f1":"0x21e19e0c9bab2400000","0x6c15ec3520bf8ebbc820bd0ff19778375494cf9d":"0x6cb7e74867d5e60000","0x6c1ddd33c81966dc8621776071a4129482f2c65f":"0x878678326eac9000000","0x6c25327f8dcbb2f45e561e86e35d8850e53ab059":"0x3bcdf9bafef2f00000","0x6c2e9be6d4ab450fd12531f33f028c614674f197":"0xc2127af858da700000","0x6c359e58a13d4578a9338e335c67e7639f5fb4d7":"0xbd15b94fc8b280000","0x6c3d18704126aa99ee3342ce60f5d4c85f1867cd":"0x2b5e3af16b1880000","0x6c474bc66a54780066aa4f512eefa773abf919c7":"0x5188315f776b80000","0x6c4e426e8dc005dfa3516cb8a680b02eea95ae8e":"0x487a9a304539440000","0x6c52cf0895bb35e656161e4dc46ae0e96dd3e62c":"0xd8d8583fa2d52f0000","0x6c5422fb4b14e6d98b6091fdec71f1f08640419d":"0x15af1d78b58c400000","0x6c5c3a54cda7c2f118edba434ed81e6ebb11dd7a":"0xad78ebc5ac6200000","0x6c63f84556d290bfcd99e434ee9997bfd779577a":"0x6c6b935b8bbd400000","0x6c63fc85029a2654d79b2bea4de349e4524577c5":"0x23c757072b8dd00000","0x6c6564e5c9c24eaaa744c9c7c968c9e2c9f1fbae":"0x499b42a21139640000","0x6c67d6db1d03516c128b8ff234bf3d49b26d2941":"0x152d02c7e14af6800000","0x6c67e0d7b62e2a08506945a5dfe38263339f1f22":"0x6acb3df27e1f880000","0x6c6aa0d30b64721990b9504a863fa0bfb5e57da7":"0x925e06eec972b00000","0x6c714a58fff6e97d14b8a5e305eb244065688bbd":"0xd8d726b7177a800000","0x6c800d4b49ba07250460f993b8cbe00b266a2553":"0x1ab2cf7c9f87e20000","0x6c808cabb8ff5fbb6312d9c8e84af8cf12ef0875":"0xd8d8583fa2d52f0000","0x6c822029218ac8e98a260c1e064029348839875b":"0x10f97b787e1e3080000","0x6c84cba77c6db4f7f90ef13d5ee21e8cfc7f8314":"0x6c6b935b8bbd400000","0x6c8687e3417710bb8a93559021a1469e6a86bc77":"0x25b2da278d96b7b8000","0x6c882c27732cef5c7c13a686f0a2ea77555ac289":"0x152d02c7e14af6800000","0x6ca5de00817de0cedce5fd000128dede12648b3c":"0x1158e460913d00000","0x6ca6a132ce1cd288bee30ec7cfeffb85c1f50a54":"0x6c6b935b8bbd400000","0x6cb11ecb32d3ce829601310636f5a10cf7cf9b5f":"0x43fe8949c3801f50000","0x6cc1c878fa6cde8a9a0b8311247e741e4642fe6d":"0x35659ef93f0fc40000","0x6ccb03acf7f53ce87aadcc21a9932de915f89804":"0x1b1ae4d6e2ef5000000","0x6cd212aee04e013f3d2abad2a023606bfb5c6ac7":"0x6c6acc67d7b1d40000","0x6cd228dc712169307fe27ceb7477b48cfc8272e5":"0x434ea94db8a500000","0x6ce1b0f6adc47051e8ab38b39edb4186b03babcc":"0x41799794cd24cc0000","0x6ceae3733d8fa43d6cd80c1a96e8eb93109c83b7":"0x102794ad20da680000","0x6d0569e5558fc7df2766f2ba15dc8aeffc5beb75":"0xd8e6001e6c302b0000","0x6d120f0caae44fd94bcafe55e2e279ef96ba5c7a":"0xd8d726b7177a800000","0x6d1456fff0104ee844a3314737843338d24cd66c":"0x7b06ce87fdd680000","0x6d20ef9704670a500bb269b5832e859802049f01":"0x70c1cc73b00c80000","0x6d2f976734b9d0070d1883cf7acab8b3e4920fc1":"0x21e19e0c9bab2400000","0x6d39a9e98f81f769d73aad2cead276ac1387babe":"0x155bd9307f9fe80000","0x6d3b7836a2b9d899721a4d237b522385dce8dfcd":"0x3636c25e66ece70000","0x6d3f2ba856ccbb0237fa7661156b14b013f21240":"0x3635c9adc5dea00000","0x6d4008b4a888a826f248ee6a0b0dfde9f93210b9":"0x127fcb8afae20d00000","0x6d40ca27826d97731b3e86effcd7b92a4161fe89":"0x6c6b935b8bbd400000","0x6d44974a31d187eda16ddd47b9c7ec5002d61fbe":"0x32f51edbaaa3300000","0x6d4b5c05d06a20957e1748ab6df206f343f92f01":"0x21f360699bf825f8000","0x6d4cbf3d8284833ae99344303e08b4d614bfda3b":"0x28a857425466f800000","0x6d59b21cd0e2748804d9abe064eac2bef0c95f27":"0x6c6b935b8bbd400000","0x6d63d38ee8b90e0e6ed8f192eda051b2d6a58bfd":"0x1a055690d9db80000","0x6d6634b5b8a40195d949027af4828802092ceeb6":"0xa2a15d09519be00000","0x6d7d1c949511f88303808c60c5ea0640fcc02683":"0x21e19e0c9bab2400000","0x6d846dc12657e91af25008519c3e857f51707dd6":"0xf8d30bc92342f80000","0x6d9193996b194617211106d1635eb26cc4b66c6c":"0x15aa1e7e9dd51c0000","0x6d9997509882027ea947231424bedede2965d0ba":"0x6c81c7b31195e00000","0x6da0ed8f1d69339f059f2a0e02471cb44fb8c3bb":"0x32bc38bb63a8160000","0x6db72bfd43fef465ca5632b45aab7261404e13bf":"0x6c6b935b8bbd400000","0x6dbe8abfa1742806263981371bf3d35590806b6e":"0x43c33c1937564800000","0x6dc3f92baa1d21dab7382b893261a0356fa7c187":"0x5dc892aa1131c80000","0x6dc7053a718616cfc78bee6382ee51add0c70330":"0x6c6b935b8bbd400000","0x6dcc7e64fcafcbc2dc6c0e5e662cb347bffcd702":"0x43c33c1937564800000","0x6dda5f788a6c688ddf921fa3852eb6d6c6c62966":"0x22b1c8c1227a00000","0x6ddb6092779d5842ead378e21e8120fd4c6bc132":"0x6c6b935b8bbd400000","0x6ddfef639155daab0a5cb4953aa8c5afaa880453":"0x62a992e53a0af00000","0x6de02f2dd67efdb7393402fa9eaacbcf589d2e56":"0x40138b917edfb80000","0x6de4b581385cf7fc9fe8c77d131fe2ee7724c76a":"0x7d2997733dcce40000","0x6de4d15219182faf3aa2c5d4d2595ff23091a727":"0x55a6e79ccd1d300000","0x6dedf62e743f4d2c2a4b87a787f5424a7aeb393c":"0x9c2007651b2500000","0x6df24f6685a62f791ba337bf3ff67e91f3d4bc3a":"0x756b49d40a48180000","0x6df5c84f7b909aab3e61fe0ecb1b3bf260222ad2":"0xd8d726b7177a800000","0x6dff90e6dc359d2590882b1483edbcf887c0e423":"0x3635c9adc5dea00000","0x6e01e4ad569c95d007ada30d5e2db12888492294":"0xd8d726b7177a800000","0x6e073b66d1b8c66744d88096a8dd99ec7e0228da":"0xd8d726b7177a800000","0x6e0ee70612c976287d499ddfa6c0dcc12c06deea":"0x70bd5b95621460000","0x6e12b51e225b4a4372e59ad7a2a1a13ea3d3a137":"0x30046c8cc775f040000","0x6e1a046caf5b4a57f4fd4bc173622126b4e2fd86":"0x61093d7c2c6d380000","0x6e1ea4b183e252c9bb7767a006d4b43696cb8ae9":"0xff3783c85eed08000","0x6e255b700ae7138a4bacf22888a9e2c00a285eec":"0xd8d726b7177a800000","0x6e270ad529f1f0b8d9cb6d2427ec1b7e2dc64a74":"0xad78ebc5ac6200000","0x6e2eab85dc89fe29dc0aa1853247dab43a523d56":"0x4563918244f400000","0x6e3a51db743d334d2fe88224b5fe7c008e80e624":"0x5bf0ba6634f680000","0x6e4c2ab7db026939dbd3bc68384af660a61816b2":"0x90d972f32323c0000","0x6e4d2e39c8836629e5b487b1918a669aebdd9536":"0x3635c9adc5dea00000","0x6e5c2d9b1c546a86eefd5d0a5120c9e4e730190e":"0xad201a6794ff80000","0x6e60aee1a78f8eda8b424c73e353354ae67c3042":"0xbd35a48d9919e60000","0x6e64e6129f224e378c0e6e736a7e7a06c211e9ec":"0x3635c9adc5dea00000","0x6e6d5bbbb9053b89d744a27316c2a7b8c09b547d":"0x3152710a023e6d8000","0x6e72b2a1186a8e2916543b1cb36a68870ea5d197":"0xa1544be879ea80000","0x6e761eaa0f345f777b5441b73a0fa5b56b85f22d":"0x6c6b935b8bbd400000","0x6e79edd4845b076e4cd88d188b6e432dd93f35aa":"0x33c5499031720c0000","0x6e8212b722afd408a7a73ed3e2395ee6454a0330":"0x89e917994f71c0000","0x6e84876dbb95c40b6656e42ba9aea08a993b54dc":"0x3bbc60e3b6cbbe0000","0x6e84c2fd18d8095714a96817189ca21cca62bab1":"0x127b6c702621cd8000","0x6e866d032d405abdd65cf651411d803796c22311":"0x6c6b935b8bbd400000","0x6e899e59a9b41ab7ea41df7517860f2acb59f4fd":"0x43c33c1937564800000","0x6e89c51ea6de13e06cdc748b67c4410fe9bcab03":"0xd8d726b7177a800000","0x6e8a26689f7a2fdefd009cbaaa5310253450daba":"0x6f213717bad8d30000","0x6e96faeda3054302c45f58f161324c99a3eebb62":"0x1158e460913d00000","0x6eb0a5a9ae96d22cf01d8fd6483b9f38f08c2c8b":"0xd8d726b7177a800000","0x6eb3819617404058268f0c3cff3596bfe9148c1c":"0x5a87e7d7f5f6580000","0x6eb5578a6bb7c32153195b0d8020a6914852c059":"0x8bc2abf40221f4800000","0x6ebb5e6957aa821ef659b6018a393a504cae4450":"0x6c6b935b8bbd400000","0x6ebcf9957f5fc5e985add475223b04b8c14a7aed":"0x5dc892aa1131c80000","0x6ec3659571b11f889dd439bcd4d67510a25be57e":"0x6aaf7c8516d0c0000","0x6ec89b39f9f5276a553e8da30e6ec17aa47eefc7":"0x18424f5f0b1b4e0000","0x6ec96d13bdb24dc7a557293f029e02dd74b97a55":"0xd8d726b7177a800000","0x6ecaefa6fc3ee534626db02c6f85a0c395571e77":"0x2086ac351052600000","0x6ed2a12b02f8c688c7b5d3a6ea14d63687dab3b6":"0x6c6b935b8bbd400000","0x6ed884459f809dfa1016e770edaf3e9fef46fa30":"0xb852d6782093f10000","0x6edf7f5283725c953ee64317f66188af1184b033":"0x1b464311d45a6880000","0x6ee8aad7e0a065d8852d7c3b9a6e5fdc4bf50c00":"0x1158e460913d00000","0x6eefdc850e87b715c72791773c0316c3559b58a4":"0xd8d726b7177a800000","0x6ef9e8c9b6217d56769af97dbb1c8e1b8be799d2":"0x9ddc1e3b901180000","0x6efba8fb2ac5b6730729a972ec224426a287c3ad":"0xf5985fbcbe1680000","0x6efd90b535e00bbd889fda7e9c3184f879a151db":"0x22385a827e815500000","0x6f051666cb4f7bd2b1907221b829b555d7a3db74":"0x5f68e8131ecf800000","0x6f0edd23bcd85f6015f9289c28841fe04c83efeb":"0x10910d4cdc9f60000","0x6f137a71a6f197df2cbbf010dcbd3c444ef5c925":"0x6c6b935b8bbd400000","0x6f176065e88e3c6fe626267d18a088aaa4db80bc":"0xbed1d0263d9f000000","0x6f18ec767e320508195f1374500e3f2e125689ff":"0x3635c9adc5dea00000","0x6f1f4907b8f61f0c51568d692806b382f50324f5":"0x6c6b935b8bbd400000","0x6f24c9af2b763480515d1b0951bb77a540f1e3f9":"0x6acb3df27e1f880000","0x6f2576da4de283bbe8e3ee69ddd66e5e711db3f5":"0x44591d67fecc800000","0x6f29bb375be5ed34ed999bb830ee2957dde76d16":"0x6c6b935b8bbd400000","0x6f2a31900e240395b19f159c1d00dfe4d898ebdf":"0x6c660645aa47180000","0x6f2a42e6e033d01061131929f7a6ee1538021e52":"0x6c6b935b8bbd400000","0x6f39cc37caaa2ddc9b610f6131e0619fae772a3c":"0x1b1ae4d6e2ef500000","0x6f44ca09f0c6a8294cbd519cdc594ad42c67579f":"0x2b5e3af16b1880000","0x6f50929777824c291a49c46dc854f379a6bea080":"0x138400eca364a00000","0x6f6cf20649a9e973177ac67dbadee4ebe5c7bdda":"0x11363297d01a8600000","0x6f791d359bc3536a315d6382b88311af8ed6da47":"0x4fcc1a89027f00000","0x6f794dbdf623daa6e0d00774ad6962737c921ea4":"0x6c6b935b8bbd400000","0x6f7ac681d45e418fce8b3a1db5bc3be6f06c9849":"0x6c6b935b8bbd400000","0x6f81f3abb1f933b1df396b8e9cc723a89b7c9806":"0xf2dc7d47f15600000","0x6f8f0d15cc96fb7fe94f1065bc6940f8d12957b2":"0x3635c9adc5dea00000","0x6f92d6e4548c78996509ee684b2ee29ba3c532b4":"0x3635c9adc5dea00000","0x6fa60df818a5446418b1bbd62826e0b9825e1318":"0x2cb92cc8f6714400000","0x6fa6388d402b30afe59934c3b9e13d1186476018":"0x24521e2a3017b80000","0x6fa72015fa78696efd9a86174f7f1f21019286b1":"0x487a9a304539440000","0x6fc25e7e00ca4f60a9fe6f28d1fde3542e2d1079":"0x2aef353bcddd600000","0x6fc53662371dca587b59850de78606e2359df383":"0x9c2007651b2500000","0x6fcc2c732bdd934af6ccd16846fb26ef89b2aa9b":"0x21e2b1d42261d490000","0x6fd4e0f3f32bee6d3767fdbc9d353a6d3aab7899":"0x25b064a875ea940000","0x6fd947d5a73b175008ae6ee8228163da289b167d":"0x65a4da25d3016c00000","0x6fd98e563d12ce0fd60f4f1f850ae396a9823c02":"0x445be3f2ef87940000","0x6fddbd9bca66e28765c2162c8433548c1052ed11":"0x1184429b82a818800000","0x6ff5d361b52ad0b68b1588607ec304ae5665fc98":"0x692ae8897081d00000","0x6ff6cc90d649de4e96cffee1077a5b302a848dcb":"0x18ce79c78802c0000","0x6ffe5cf82cc9ea5e36cad7c2974ce7249f3749e6":"0x692ae8897081d00000","0x7005a772282b1f62afda63f89b5dc6ab64c84cb9":"0x3cfc82e37e9a7400000","0x700711e311bb947355f755b579250ca7fd765a3e":"0x61093d7c2c6d380000","0x7010be2df57bd0ab9ae8196cd50ab0c521aba9f9":"0x6acb3df27e1f880000","0x7023c70956e04a92d70025aad297b539af355869":"0x6c6b935b8bbd400000","0x7025965d2b88da197d4459be3dc9386344cc1f31":"0x6cb7e74867d5e60000","0x702802f36d00250fab53adbcd696f0176f638a49":"0x6c6b935b8bbd400000","0x704819d2e44d6ed1da25bfce84c49fcca25613e5":"0x15af1d78b58c400000","0x704a6eb41ba34f13addde7d2db7df04915c7a221":"0x62a992e53a0af00000","0x704ab1150d5e10f5e3499508f0bf70650f028d4b":"0xd8d726b7177a800000","0x704ae21d762d6e1dde28c235d13104597236db1a":"0x6c6b935b8bbd400000","0x704d243c2978e46c2c86adbecd246e3b295ff633":"0x6d121bebf795f00000","0x704d5de4846d39b53cd21d1c49f096db5c19ba29":"0x83d6c7aab63600000","0x705ddd38355482b8c7d3b515bda1500dd7d7a817":"0x15af1d78b58c400000","0x70616e2892fa269705b2046b8fe3e72fa55816d3":"0x43c33c1937564800000","0x70670fbb05d33014444b8d1e8e7700258b8caa6d":"0x6c6b935b8bbd400000","0x7081fa6baad6cfb7f51b2cca16fb8970991a64ba":"0xcaec005f6c0f68000","0x7085ae7e7e4d932197b5c7858c00a3674626b7a5":"0x14542ba12a337c00000","0x7086b4bde3e35d4aeb24b825f1a215f99d85f745":"0x6c68ccd09b022c0000","0x708a2af425ceb01e87ffc1be54c0f532b20eacd6":"0x745d483b1f5a18000","0x708ea707bae4357f1ebea959c3a250acd6aa21b3":"0x1b1ae4d6e2ef500000","0x708fa11fe33d85ad1befcbae3818acb71f6a7d7e":"0xfc936392801c0000","0x7091303116d5f2389b23238b4d656a8596d984d3":"0x3b4e7e80aa58330000","0x7099d12f6ec656899b049a7657065d62996892c8":"0x15af1d78b58c400000","0x709fe9d2c1f1ce42207c9585044a60899f35942f":"0x6c6b935b8bbd400000","0x70a03549aa6168e97e88a508330a5a0bea74711a":"0x487a9a304539440000","0x70a4067d448cc25dc8e70e651cea7cf84e92109e":"0x98a7d9b8314c00000","0x70ab34bc17b66f9c3b63f151274f2a727c539263":"0x6c6b935b8bbd400000","0x70c213488a020c3cfb39014ef5ba6404724bcaa3":"0x692ae8897081d00000","0x70d25ed2c8ada59c088cf70dd22bf2db93acc18a":"0x39474545e4adbc0000","0x70e5e9da735ff077249dcb9aaf3db2a48d9498c0":"0x3635c9adc5dea00000","0x70fee08b00c6c2c04a3c625c1ff77caf1c32df01":"0xad78ebc5ac6200000","0x7101bd799e411cde14bdfac25b067ac890eab8e8":"0x4e9b8aae48de470000","0x7109dd011d15f3122d9d3a27588c10d77744508b":"0x6c6b935b8bbd400000","0x710b0274d712c77e08a5707d6f3e70c0ce3d92cf":"0x15af1d78b58c4000000","0x710be8fd5e2918468be2aabea80d828435d79612":"0xf43fc2c04ee00000","0x71135d8f05963c905a4a07922909235a896a52ea":"0xa2a15d09519be00000","0x711ecf77d71b3d0ea95ce4758afecdb9c131079d":"0x29331e6558f0e00000","0x71213fca313404204ecba87197741aa9dfe96338":"0x340aad21b3b700000","0x712b76510214dc620f6c3a1dd29aa22bf6d214fb":"0x14542ba12a337c00000","0x712ff7370a13ed360973fedc9ff5d2c93a505e9e":"0xd5967be4fc3f100000","0x7133843a78d939c69d4486e10ebc7b602a349ff7":"0x11d5cacce21f840000","0x7148aef33261d8031fac3f7182ff35928daf54d9":"0xde42ee1544dd900000","0x7163758cbb6c4c525e0414a40a049dcccce919bb":"0xad78ebc5ac6200000","0x7168b3bb8c167321d9bdb023a6e9fd11afc9afd9":"0x61093d7c2c6d380000","0x7169724ee72271c534cad6420fb04ee644cb86fe":"0x163c2b40dba5520000","0x716ad3c33a9b9a0a18967357969b94ee7d2abc10":"0x1a2117fe412a480000","0x716ba01ead2a91270635f95f25bfaf2dd610ca23":"0x979e7012056aa780000","0x716d50cca01e938500e6421cc070c3507c67d387":"0x6c6b935b8bbd400000","0x71762c63678c18d1c6378ce068e666381315147e":"0x6c6b935b8bbd400000","0x71784c105117c1f68935797fe159abc74e43d16a":"0x6c81c7b31195e00000","0x7179726f5c71ae1b6d16a68428174e6b34b23646":"0x18ea250097cbaf60000","0x717cf9beab3638308ded7e195e0c86132d163fed":"0x3326ee6f865f4220000","0x7180b83ee5574317f21c8072b191d895d46153c3":"0x18efc84ad0c7b00000","0x71946b7117fc915ed107385f42d99ddac63249c2":"0x6c6b935b8bbd400000","0x719e891fbcc0a33e19c12dc0f02039ca05b801df":"0x14f5538463a1b540000","0x71c7230a1d35bdd6819ed4b9a88e94a0eb0786dd":"0xeca08b353d24140000","0x71d2cc6d02578c65f73c575e76ce8fbcfadcf356":"0x3ecc078688a480000","0x71d9494e50c5dd59c599dba3810ba1755e6537f0":"0xd8d726b7177a800000","0x71e38ff545f30fe14ca863d4f5297fd48c73a5ce":"0xc2127af858da700000","0x71ea5b11ad8d29b1a4cb67bf58ca6c9f9c338c16":"0x56bc75e2d631000000","0x71ec3aec3f8f9221f9149fede06903a0f9a232f2":"0xad78ebc5ac6200000","0x71f2cdd1b046e2da2fbb5a26723422b8325e25a3":"0x56b394263a40c0000","0x71fa22cc6d33206b7d701a163a0dab31ae4d31d6":"0x57473d05dabae80000","0x7201d1c06920cd397ae8ad869bcda6e47ffb1b5a":"0x1158e460913d00000","0x72072a0ef1cff3d567cdd260e708ddc11cbc9a31":"0x56bc75e2d63100000","0x72094f3951ffc9771dced23ada080bcaf9c7cca7":"0x14542ba12a337c00000","0x720994dbe56a3a95929774e20e1fe525cf3704e4":"0x1b1ae4d6e2ef5000000","0x720e6b22bf430966fa32b6acb9a506eebf662c61":"0x83d6c7aab63600000","0x721158be5762b119cc9b2035e88ee4ee78f29b82":"0x21e19e0c9bab2400000","0x721f9d17e5a0e74205947aeb9bc6a7938961038f":"0x2d041d705a2c60000","0x7222fec7711781d26eaa4e8485f7aa3fac442483":"0x18b84570022a200000","0x72393d37b451effb9e1ff3b8552712e2a970d8c2":"0x35659ef93f0fc40000","0x723d8baa2551d2addc43c21b45e8af4ca2bfb2c2":"0x5f68e8131ecf800000","0x72402300e81d146c2e644e2bbda1da163ca3fb56":"0x17b7883c06916600000","0x72480bede81ad96423f2228b5c61be44fb523100":"0x15af1d78b58c4000000","0x724ce858857ec5481c86bd906e83a04882e5821d":"0xa2a15d09519be00000","0x726a14c90e3f84144c765cffacba3e0df11b48be":"0x21e19e0c9bab2400000","0x7283cd4675da58c496556151dafd80c7f995d318":"0x29331e6558f0e00000","0x7286e89cd9de8f7a8a00c86ffdb53992dd9251d1":"0x692ae8897081d00000","0x728f9ab080157db3073156dbca1a169ef3179407":"0x1b1ae4d6e2ef500000","0x7294c918b1aefb4d25927ef9d799e71f93a28e85":"0xaadec983fcff40000","0x7294ec9da310bc6b4bbdf543b0ef45abfc3e1b4d":"0x4a89f54ef0121c00000","0x729aad4627744e53f5d66309aa74448b3acdf46f":"0x6c6b935b8bbd400000","0x72a2fc8675feb972fa41b50dffdbbae7fa2adfb7":"0x9ab4fc67b528c80000","0x72a8260826294726a75bf39cd9aa9e07a3ea14cd":"0x6c6b935b8bbd400000","0x72b05962fb2ad589d65ad16a22559eba1458f387":"0x73f75d1a085ba0000","0x72b5633fe477fe542e742facfd690c137854f216":"0x5a87e7d7f5f6580000","0x72b7a03dda14ca9c661a1d469fd33736f673c8e8":"0x6c6b935b8bbd400000","0x72b904440e90e720d6ac1c2ad79c321dcc1c1a86":"0x54069233bf7f780000","0x72b90a4dc097239492c5b9777dcd1e52ba2be2c2":"0x14542ba12a337c00000","0x72bb27cb99f3e2c2cf90a98f707d30e4a201a071":"0x58e7926ee858a00000","0x72c083beadbdc227c5fb43881597e32e83c26056":"0x43c33c1937564800000","0x72cd048a110574482983492dfb1bd27942a696ba":"0x6c6b935b8bbd400000","0x72d03d4dfab3500cf89b86866f15d4528e14a195":"0xf34b82fd8e91200000","0x72dabb5b6eed9e99be915888f6568056381608f8":"0xb4c96c52cb4fe8000","0x72fb49c29d23a18950c4b2dc0ddf410f532d6f53":"0x6c6b935b8bbd400000","0x72feaf124579523954645b7fafff0378d1c8242e":"0x3635c9adc5dea00000","0x7301dc4cf26d7186f2a11bf8b08bf229463f64a3":"0x6c6b935b8bbd400000","0x730447f97ce9b25f22ba1afb36df27f9586beb9b":"0x2c73c937742c500000","0x7306de0e288b56cfdf987ef0d3cc29660793f6dd":"0x1b8abfb62ec8f60000","0x730d8763c6a4fd824ab8b859161ef7e3a96a1200":"0x43c33c1937564800000","0x73128173489528012e76b41a5e28c68ba4e3a9d4":"0x3635c9adc5dea00000","0x7313461208455455465445a459b06c3773b0eb30":"0x6c6b935b8bbd400000","0x732fead60f7bfdd6a9dec48125e3735db1b6654f":"0x1158e460913d00000","0x734223d27ff23e5906caed22595701bb34830ca1":"0x6c6b935b8bbd400000","0x73473e72115110d0c3f11708f86e77be2bb0983c":"0x1158e460913d00000","0x7352586d021ad0cf77e0e928404a59f374ff4582":"0xb8507a820728200000","0x73550beb732ba9ddafda7ae406e18f7feb0f8bb2":"0x97c9ce4cf6d5c00000","0x735b97f2fc1bd24b12076efaf3d1288073d20c8c":"0x1158e460913d00000","0x735e328666ed5637142b3306b77ccc5460e72c3d":"0x6ab8f37879c9910000","0x7363cd90fbab5bb8c49ac20fc62c398fe6fb744c":"0x6c6b935b8bbd400000","0x736b44503dd2f6dd5469ff4c5b2db8ea4fec65d0":"0x1104ee759f21e30000","0x736bf1402c83800f893e583192582a134eb532e9":"0x21e19d293c01f260000","0x738ca94db7ce8be1c3056cd6988eb376359f3353":"0x5665b96cf35acf00000","0x73914b22fc2f131584247d82be4fecbf978ad4ba":"0x6c6b935b8bbd400000","0x73932709a97f02c98e51b091312865122385ae8e":"0x4d853c8f8908980000","0x7393cbe7f9ba2165e5a7553500b6e75da3c33abf":"0x56bc75e2d63100000","0x73b4d499de3f38bf35aaf769a6e318bc6d123692":"0x6c6b935b8bbd400000","0x73bedd6fda7ba3272185087b6351fc133d484e37":"0x11226bf9dce59780000","0x73bfe7710f31cab949b7a2604fbf5239cee79015":"0x6c6b935b8bbd400000","0x73cf80ae9688e1580e68e782cd0811f7aa494d2c":"0x1a4aba225c207400000","0x73d7269ff06c9ffd33754ce588f74a966abbbbba":"0x165c96647b38a200000","0x73d8fee3cb864dce22bb26ca9c2f086d5e95e63b":"0x3635c9adc5dea00000","0x73df3c3e7955f4f2d859831be38000b1076b3884":"0x6acb3df27e1f880000","0x73e4a2b60cf48e8baf2b777e175a5b1e4d0c2d8f":"0x56bc75e2d63100000","0x740af1eefd3365d78ba7b12cb1a673e06a077246":"0x42bf06b78ed3b500000","0x740bfd52e01667a3419b029a1b8e45576a86a2db":"0x38ebad5cdc902800000","0x740f641614779dcfa88ed1d425d60db42a060ca6":"0x3622c6760810570000","0x7412c9bc30b4df439f023100e63924066afd53af":"0x1b1ae4d6e2ef500000","0x741693c30376508513082020cc2b63e9fa92131b":"0x410d586a20a4c00000","0x7421ce5be381738ddc83f02621974ff0686c79b8":"0x58788cb94b1d800000","0x74316adf25378c10f576d5b41a6f47fa98fce33d":"0x1238131e5c7ad50000","0x743651b55ef8429df50cf81938c2508de5c8870f":"0x6c6b935b8bbd400000","0x743de50026ca67c94df54f066260e1d14acc11ac":"0x6c6b935b8bbd400000","0x7445202f0c74297a004eb3726aa6a82dd7c02fa1":"0x6c6b935b8bbd400000","0x744b03bba8582ae5498e2dc22d19949467ab53fc":"0x1b1ae4d6e2ef500000","0x744c0c77ba7f236920d1e434de5da33e48ebf02c":"0x6acb3df27e1f880000","0x7450ff7f99eaa9116275deac68e428df5bbcd8b9":"0x6c6b935b8bbd400000","0x7456c5b2c5436e3e571008933f1805ccfe34e9ec":"0x3635c9adc5dea00000","0x745ad3abc6eeeb2471689b539e789ce2b8268306":"0x3d4194bea011928000","0x745aecbaf9bb39b74a67ea1ce623de368481baa6":"0x21e19e0c9bab2400000","0x745ccf2d819edbbddea8117b5c49ed3c2a066e93":"0xd8d726b7177a800000","0x7462c89caa9d8d7891b2545def216f7464d5bb21":"0x5eaed54a28b310000","0x74648caac748dd135cd91ea14c28e1bd4d7ff6ae":"0xa80d24677efef00000","0x7471f72eeb300624eb282eab4d03723c649b1b58":"0x1b1ae4d6e2ef5000000","0x747abc9649056d3926044d28c3ad09ed17b67d70":"0x10f0dbae61009528000","0x747ff7943b71dc4dcdb1668078f83dd7cc4520c2":"0x340aad21b3b700000","0x7480de62254f2ba82b578219c07ba5be430dc3cb":"0x17da3a04c7b3e000000","0x7484d26becc1eea8c6315ec3ee0a450117dc86a0":"0x28a857425466f800000","0x74863acec75d03d53e860e64002f2c165e538377":"0x3635c9adc5dea00000","0x7489cc8abe75cda4ef0d01cef2605e47eda67ab1":"0x73f75d1a085ba0000","0x748c285ef1233fe4d31c8fb1378333721c12e27a":"0x6c6b935b8bbd400000","0x749087ac0f5a97c6fad021538bf1d6cda18e0daa":"0x3635c9adc5dea00000","0x7495ae78c0d90261e2140ef2063104731a60d1ed":"0x1db50718925210000","0x749a4a768b5f237248938a12c623847bd4e688dc":"0x3e733628714200000","0x749ad6f2b5706bbe2f689a44c4b640b58e96b992":"0x56bc75e2d63100000","0x74a17f064b344e84db6365da9591ff1628257643":"0x1158e460913d00000","0x74aeec915de01cc69b2cb5a6356feea14658c6c5":"0xc9a95ee2986520000","0x74afe54902d615782576f8baac13ac970c050f6e":"0x9a1aaa3a9fba70000","0x74b7e0228baed65957aebb4d916d333aae164f0e":"0x6c6b935b8bbd400000","0x74bc4a5e2045f4ff8db184cf3a9b0c065ad807d2":"0x6c6b935b8bbd400000","0x74bce9ec38362d6c94ccac26d5c0e13a8b3b1d40":"0x363526410442f50000","0x74bf7a5ab59293149b5c60cf364263e5ebf1aa0d":"0x6470c3e771e3c0000","0x74c73c90528a157336f1e7ea20620ae53fd24728":"0x1e63a2e538f16e30000","0x74d1a4d0c7524e018d4e06ed3b648092b5b6af2c":"0x2b5e3af16b1880000","0x74d366b07b2f56477d7c7077ac6fe497e0eb6559":"0x10f0cf064dd59200000","0x74d37a51747bf8b771bfbf43943933d100d21483":"0x3635c9adc5dea00000","0x74d671d99cbea1ab57906375b63ff42b50451d17":"0x3635c9adc5dea00000","0x74ebf4425646e6cf81b109ce7bf4a2a63d84815f":"0x22b1c8c1227a00000","0x74ed33acf43f35b98c9230b9e6642ecb5330839e":"0x24f6dffb498d280000","0x74ef2869cbe608856045d8c2041118579f2236ea":"0x33cd64591956e0000","0x74fc5a99c0c5460503a13b0509459da19ce7cd90":"0xad78ebc5ac6200000","0x750bbb8c06bbbf240843cc75782ee02f08a97453":"0x2d43f3ebfafb2c0000","0x7514adbdc63f483f304d8e94b67ff3309f180b82":"0x21c4a06e2d13598000","0x7517f16c28d132bb40e3ba36c6aef131c462da17":"0xfc936392801c0000","0x751a2ca34e7187c163d28e3618db28b13c196d26":"0x1b1ae4d6e2ef500000","0x751abcb6cc033059911815c96fd191360ab0442d":"0x1b1ae4d6e2ef5000000","0x7526e482529f0a14eec98871dddd0e721b0cd9a2":"0x1158e460913d00000","0x7529f3797bb6a20f7ea6492419c84c867641d81c":"0x6c6b935b8bbd400000","0x752a5ee232612cd3005fb26e5b597de19f776be6":"0x127fcb8afae20d00000","0x752c9febf42f66c4787bfa7eb17cf5333bba5070":"0x6a99f2b54fdd580000","0x7539333046deb1ef3c4daf50619993f444e1de68":"0x40138b917edfb80000","0x7553aa23b68aa5f57e135fe39fdc235eaca8c98c":"0x3635c9adc5dea00000","0x755a60bf522fbd8fff9723446b7e343a7068567e":"0x43c33c1937564800000","0x755f587e5efff773a220726a13d0f2130d9f896b":"0x3635c9adc5dea00000","0x75621865b6591365606ed378308c2d1def4f222c":"0xa80d24677efef00000","0x75636cdb109050e43d5d6ec47e359e218e857eca":"0x4d8b2276c8962280000","0x7566496162ba584377be040a4f87777a707acaeb":"0xd8d726b7177a800000","0x756b84eb85fcc1f4fcdcc2b08db6a86e135fbc25":"0xae8e7a0bb575d00000","0x756f45e3fa69347a9a973a725e3c98bc4db0b5a0":"0xad78ebc5ac6200000","0x757b65876dbf29bf911d4f0692a2c9beb1139808":"0xdf93a59337d6dd8000","0x757fa55446c460968bb74b5ebca96c4ef2c709c5":"0x3708baed3d68900000","0x75804aac64b4199083982902994d9c5ed8828f11":"0x1e3d07b0a620e40000","0x7592c69d067b51b6cc639d1164d5578c60d2d244":"0x1158e460913d00000","0x75abe5270f3a78ce007cf37f8fbc045d489b7bb1":"0x6c6acc67d7b1d40000","0x75ac547017134c04ae1e11d60e63ec04d18db4ef":"0x14542ba12a337c00000","0x75b0e9c942a4f0f6f86d3f95ff998022fa67963b":"0x50c5e761a444080000","0x75b95696e8ec4510d56868a7c1a735c68b244890":"0x15af1d78b58c4000000","0x75be8ff65e5788aec6b2a52d5fa7b1e7a03ba675":"0x3abcdc5343d740000","0x75c11d024d12ae486c1095b7a7b9c4af3e8edeb9":"0x1158e460913d00000","0x75c1ad23d23f24b384d0c3149177e86697610d21":"0x15c5bcd6c288bbd0000","0x75c2ffa1bef54919d2097f7a142d2e14f9b04a58":"0x90f358504032a10000","0x75d67ce14e8d29e8c2ffe381917b930b1aff1a87":"0xa2a15d09519be00000","0x75de7e9352e90b13a59a5878ffecc7831cac4d82":"0x9489237adb9a500000","0x75f7539d309e9039989efe2e8b2dbd865a0df088":"0x855b5ba65c84f00000","0x7608f437b31f18bc0b64d381ae86fd978ed7b31f":"0x2b5e3af16b1880000","0x760ff3354e0fde938d0fb5b82cef5ba15c3d2916":"0x21e19e0c9bab2400000","0x761a6e362c97fbbd7c5977acba2da74687365f49":"0x9f74ae1f953d00000","0x761e6caec189c230a162ec006530193e67cf9d19":"0x6c6b935b8bbd400000","0x761f8a3a2af0a8bdbe1da009321fb29764eb62a1":"0x21e19e0c9bab2400000","0x762998e1d75227fced7a70be109a4c0b4ed86414":"0x1158e460913d00000","0x762d6f30dab99135e4eca51d5243d6c8621102d5":"0xf498941e664280000","0x76331e30796ce664b2700e0d4153700edc869777":"0x6c6b935b8bbd400000","0x763886e333c56feff85be3951ab0b889ce262e95":"0x6c6b935b8bbd400000","0x763a7cbab70d7a64d0a7e52980f681472593490c":"0x2086ac351052600000","0x763eece0b08ac89e32bfa4bece769514d8cb5b85":"0xd8d726b7177a800000","0x7640a37f8052981515bce078da93afa4789b5734":"0x6c6b935b8bbd400000","0x7641f7d26a86cddb2be13081810e01c9c83c4b20":"0xb98bc829a6f90000","0x764692cccb33405dd0ab0c3379b49caf8e6221ba":"0x1158e460913d00000","0x764d5212263aff4a2a14f031f04ec749dc883e45":"0x6449e84e47a8a80000","0x764fc46d428b6dbc228a0f5f55c9508c772eab9f":"0x581767ba6189c400000","0x76506eb4a780c951c74a06b03d3b8362f0999d71":"0x1b1ae4d6e2ef500000","0x765be2e12f629e6349b97d21b62a17b7c830edab":"0x14542ba12a337c00000","0x76628150e2995b5b279fc83e0dd5f102a671dd1c":"0x878678326eac9000000","0x766b3759e8794e926dac473d913a8fb61ad0c2c9":"0x4b06dbbb40f4a0000","0x7670b02f2c3cf8fd4f4730f3381a71ea431c33c7":"0xe7eeba3410b740000","0x767a03655af360841e810d83f5e61fb40f4cd113":"0x35659ef93f0fc40000","0x767ac690791c2e23451089fe6c7083fe55deb62b":"0x2c73c937742c500000","0x767fd7797d5169a05f7364321c19843a8c348e1e":"0x104e70464b1580000","0x76846f0de03b5a76971ead298cdd08843a4bc6c6":"0xd71b0fe0a28e0000","0x768498934e37e905f1d0e77b44b574bcf3ec4ae8":"0x43c33c1937564800000","0x768ce0daa029b7ded022e5fc574d11cde3ecb517":"0x1174a5cdf88bc80000","0x7693bdeb6fc82b5bca721355223175d47a084b4d":"0x4a89f54ef0121c00000","0x76aaf8c1ac012f8752d4c09bb46607b6651d5ca8":"0x1158e460913d00000","0x76ab87dd5a05ad839a4e2fc8c85aa6ba05641730":"0x6c6b935b8bbd400000","0x76afc225f4fa307de484552bbe1d9d3f15074c4a":"0xa290b5c7ad39680000","0x76becae4a31d36f3cb577f2a43594fb1abc1bb96":"0x543a9ce0e1332f00000","0x76c27535bcb59ce1fa2d8c919cabeb4a6bba01d1":"0x6c6b935b8bbd400000","0x76ca22bcb8799e5327c4aa2a7d0949a1fcce5f29":"0x52a03f228c5ae20000","0x76cac488111a4fd595f568ae3a858770fc915d5f":"0xad78ebc5ac6200000","0x76cb9c8b69f4387675c48253e234cb7e0d74a426":"0x190f4482eb91dae0000","0x76f83ac3da30f7092628c7339f208bfc142cb1ee":"0x9a18ffe7427d640000","0x76f9ad3d9bbd04ae055c1477c0c35e7592cb2a20":"0x8833f11e3458f200000","0x76ffc157ad6bf8d56d9a1a7fddbc0fea010aabf4":"0x3635c9adc5dea00000","0x77028e409cc43a3bd33d21a9fc53ec606e94910e":"0xd255d112e103a00000","0x770c2fb2c4a81753ac0182ea460ec09c90a516f8":"0x1158e460913d00000","0x770d98d31b4353fceee8560c4ccf803e88c0c4e0":"0x2086ac351052600000","0x7713ab8037411c09ba687f6f9364f0d3239fac28":"0x21e19e0c9bab2400000","0x771507aeee6a255dc2cd9df55154062d0897b297":"0x121ea68c114e510000","0x7719888795ad745924c75760ddb1827dffd8cda8":"0x6c6b4c4da6ddbe0000","0x7727af101f0aaba4d23a1cafe17c6eb5dab1c6dc":"0x6c6b935b8bbd400000","0x772c297f0ad194482ee8c3f036bdeb01c201d5cc":"0xad78ebc5ac6200000","0x77306ffe2e4a8f3ca826c1a249f7212da43aeffd":"0x43c33c1937564800000","0x773141127d8cf318aebf88365add3d5527d85b6a":"0x3636d7af5ec98e0000","0x7746b6c6699c8f34ca2768a820f1ffa4c207fe05":"0xd8d8583fa2d52f0000","0x7751f363a0a7fd0533190809ddaf9340d8d11291":"0x1158e460913d00000","0x7757a4b9cc3d0247ccaaeb9909a0e56e1dd6dcc2":"0x1158e460913d00000","0x775c10c93e0db7205b2643458233c64fc33fd75b":"0x6c6b935b8bbd400000","0x77617ebc4bebc5f5ddeb1b7a70cdeb6ae2ffa024":"0x6acb3df27e1f880000","0x776943ffb2ef5cdd35b83c28bc046bd4f4677098":"0xa2a15d09519be00000","0x77701e2c493da47c1b58f421b5495dee45bea39b":"0x148f649cf6142a58000","0x77798f201257b9c35204957057b54674aefa51df":"0x813ca56906d340000","0x778c43d11afe3b586ff374192d96a7f23d2b9b7f":"0x8bb4fcfa3b7d6b8000","0x778c79f4de1953ebce98fe8006d53a81fb514012":"0x36330322d5238c0000","0x779274bf1803a336e4d3b00ddd93f2d4f5f4a62e":"0x3635c9adc5dea00000","0x77a17122fa31b98f1711d32a99f03ec326f33d08":"0x5c283d410394100000","0x77a34907f305a54c85db09c363fde3c47e6ae21f":"0x35659ef93f0fc40000","0x77a769fafdecf4a638762d5ba3969df63120a41d":"0x6c6b935b8bbd400000","0x77be6b64d7c733a436adec5e14bf9ad7402b1b46":"0x3635c9adc5dea00000","0x77bfe93ccda750847e41a1affee6b2da96e7214e":"0x1043561a8829300000","0x77c4a697e603d42b12056cbba761e7f51d0443f5":"0x24dce54d34a1a00000","0x77cc02f623a9cf98530997ea67d95c3b491859ae":"0x497303c36ea0c20000","0x77d43fa7b481dbf3db530cfbf5fdced0e6571831":"0x6c6b935b8bbd400000","0x77da5e6c72fb36bce1d9798f7bcdf1d18f459c2e":"0x13695bb6cf93e0000","0x77f4e3bdf056883cc87280dbe640a18a0d02a207":"0xa81993a2bfb5b0000","0x77f609ca8720a023262c55c46f2d26fb3930ac69":"0xf015f25736420000","0x77f81b1b26fc84d6de97ef8b9fbd72a33130cc4a":"0x3635c9adc5dea00000","0x7819b0458e314e2b53bfe00c38495fd4b9fdf8d6":"0x1158e460913d00000","0x781b1501647a2e06c0ed43ff197fccec35e1700b":"0xa2a15d09519be00000","0x782f52f0a676c77716d574c81ec4684f9a020a97":"0x2e14e206b730ad8000","0x78355df0a230f83d032c703154414de3eedab557":"0x6c6b935b8bbd400000","0x7836f7ef6bc7bd0ff3acaf449c84dd6b1e2c939f":"0xe08de7a92cd97c0000","0x7837fcb876da00d1eb3b88feb3df3fa4042fac82":"0x5f68e8131ecf800000","0x783eec8aa5dac77b2e6623ed5198a431abbaee07":"0x17da3a04c7b3e00000","0x785c8ea774d73044a734fa790a1b1e743e77ed7c":"0xcf152640c5c830000","0x7860a3de38df382ae4a4dce18c0c07b98bce3dfa":"0x3635c9adc5dea00000","0x78634371e17304cbf339b1452a4ce438dc764cce":"0x21e19e0c9bab2400000","0x7864dc999fe4f8e003c0f43decc39aae1522dc0f":"0x51e102bd8ece00000","0x78746a958dced4c764f876508c414a68342cecb9":"0x2be374fe8e2c40000","0x787d313fd36b053eeeaedbce74b9fb0678333289":"0x5c058b7842719600000","0x78859c5b548b700d9284cee4b6633c2f52e529c2":"0xa030dcebbd2f4c0000","0x788e809741a3b14a22a4b1d937c82cfea489eebe":"0x17b7883c06916600000","0x78a1e254409fb1b55a7cb4dd8eba3b30c8bad9ef":"0x56bc75e2d63100000","0x78a5e89900bd3f81dd71ba869d25fec65261df15":"0xafd812fee03d5700000","0x78b978a9d7e91ee529ea4fc4b76feaf8762f698c":"0x6c6b935b8bbd4000000","0x78ce3e3d474a8a047b92c41542242d0a08c70f99":"0x21e19e0c9bab2400000","0x78cf8336b328db3d87813a472b9e89b75e0cf3bc":"0x3635c9adc5dea00000","0x78d4f8c71c1e68a69a98f52fcb45da8af56ea1a0":"0x6c6b935b8bbd400000","0x78df2681d6d602e22142d54116dea15d454957aa":"0x102794ad20da680000","0x78e08bc533413c26e291b3143ffa7cc9afb97b78":"0xad78ebc5ac6200000","0x78e83f80b3678c7a0a4e3e8c84dccde064426277":"0x61093d7c2c6d380000","0x78f5c74785c5668a838072048bf8b453594ddaab":"0x15af1d78b58c400000","0x790f91bd5d1c5cc4739ae91300db89e1c1303c93":"0x6c6b935b8bbd400000","0x7917e5bd82a9790fd650d043cdd930f7799633db":"0xd8d4602c26bf6c0000","0x7919e7627f9b7d54ea3b14bb4dd4649f4f39dee0":"0x5a87e7d7f5f6580000","0x791f6040b4e3e50dcf3553f182cd97a90630b75d":"0xd8d726b7177a800000","0x7930c2d9cbfa87f510f8f98777ff8a8448ca5629":"0xad6eedd17cf3b8000","0x794529d09d017271359730027075b87ad83dae6e":"0x10ce1d3d8cb3180000","0x794b51c39e53d9e762b0613b829a44b472f4fff3":"0x2435e0647841cc8000","0x79551cede376f747e3716c8d79400d766d2e0195":"0x9cb37afa4ff78680000","0x795ebc2626fc39b0c86294e0e837dcf523553090":"0x3635c9adc5dea00000","0x796ebbf49b3e36d67694ad79f8ff36767ac6fab0":"0x34bc4fdde27c00000","0x796f87ba617a2930b1670be92ed1281fb0b346e1":"0x6f5e86fb528280000","0x797427e3dbf0feae7a2506f12df1dc40326e8505":"0x3635c9adc5dea00000","0x797510e386f56393ced8f477378a444c484f7dad":"0x3635c9adc5dea00000","0x797bb7f157d9feaa17f76da4f704b74dc1038341":"0xb50fcfafebecb00000","0x7988901331e387f713faceb9005cb9b65136eb14":"0x6acb3df27e1f880000","0x7989d09f3826c3e5af8c752a8115723a84d80970":"0x1686f8614cf0ad0000","0x7995bd8ce2e0c67bf1c7a531d477bca1b2b97561":"0x14248d617829ece0000","0x79aeb34566b974c35a5881dec020927da7df5d25":"0x6c6b935b8bbd400000","0x79b120eb8806732321288f675a27a9225f1cd2eb":"0x85a0bf37dec9e40000","0x79b48d2d6137c3854d611c01ea42427a0f597bb7":"0xa5aa85009e39c0000","0x79b8aad879dd30567e8778d2d231c8f37ab8734e":"0x6c6b935b8bbd400000","0x79bf2f7b6e328aaf26e0bb093fa22da29ef2f471":"0x61093d7c2c6d380000","0x79c130c762b8765b19d2abc9a083ab8f3aad7940":"0xd5967be4fc3f100000","0x79c1be19711f73bee4e6316ae7549459aacea2e0":"0x15af1d78b58c400000","0x79c6002f8452ca157f1317e80a2faf24475559b7":"0x1158e460913d00000","0x79cac6494f11ef2798748cb53285bd8e22f97cda":"0x6c6b935b8bbd400000","0x79cfa9780ae6d87b2c31883f09276986c89a6735":"0x3635c9adc5dea00000","0x79dba256472db4e058f2e4cdc3ea4e8a42773833":"0x4f2591f896a6500000","0x79ed10cf1f6db48206b50919b9b697081fbdaaf3":"0x6c6b935b8bbd400000","0x79f08e01ce0988e63c7f8f2908fade43c7f9f5c9":"0xfc936392801c0000","0x79fd6d48315066c204f9651869c1096c14fc9781":"0x6c6b935b8bbd400000","0x79ffb4ac13812a0b78c4a37b8275223e176bfda5":"0xf015f25736420000","0x7a0589b143a8e5e107c9ac66a9f9f8597ab3e7ab":"0x51e932d76e8f7b0000","0x7a0a78a9cc393f91c3d9e39a6b8c069f075e6bf5":"0x487a9a304539440000","0x7a1370a742ec2687e761a19ac5a794329ee67404":"0xa2a1326761e2920000","0x7a2dfc770e24368131b7847795f203f3d50d5b56":"0x269fec7f0361d200000","0x7a33834e8583733e2d52aead589bd1affb1dd256":"0x3635c9adc5dea00000","0x7a36aba5c31ea0ca7e277baa32ec46ce93cf7506":"0x43c33c1937564800000","0x7a381122bada791a7ab1f6037dac80432753baad":"0x21e19e0c9bab2400000","0x7a48d877b63a8f8f9383e9d01e53e80c528e955f":"0x1b1ae4d6e2ef5000000","0x7a4f9b850690c7c94600dbee0ca4b0a411e9c221":"0x678a932062e4180000","0x7a63869fc767a4c6b1cd0e0649f3634cb121d24b":"0x433874f632cc60000","0x7a67dd043a504fc2f2fc7194e9becf484cecb1fb":"0xd8d726b7177a80000","0x7a6b26f438d9a352449155b8876cbd17c9d99b64":"0x14542ba12a337c00000","0x7a6d781c77c4ba1fcadf687341c1e31799e93d27":"0xeda838c4929080000","0x7a7068e1c3375c0e599db1fbe6b2ea23b8f407d2":"0x6c6b935b8bbd400000","0x7a74cee4fa0f6370a7894f116cd00c1147b83e59":"0x2b5e3af16b18800000","0x7a79e30ff057f70a3d0191f7f53f761537af7dff":"0x15af1d78b58c400000","0x7a7a4f807357a4bbe68e1aa806393210c411ccb3":"0x65a4da25d3016c00000","0x7a8563867901206f3f2bf0fa3e1c8109cabccd85":"0x76d41c62494840000","0x7a8797690ab77b5470bf7c0c1bba612508e1ac7d":"0x1e09296c3378de40000","0x7a8c89c014509d56d7b68130668ff6a3ecec7370":"0x1043561a8829300000","0x7a94b19992ceb8ce63bc92ee4b5aded10c4d9725":"0x38d1a8064bb64c80000","0x7aa79ac04316cc8d08f20065baa6d4142897d54e":"0x4be4e7267b6ae00000","0x7aad4dbcd3acf997df93586956f72b64d8ad94ee":"0xd8d726b7177a800000","0x7ab256b204800af20137fabcc916a23258752501":"0x43c33c1937564800000","0x7aba56f63a48bc0817d6b97039039a7ad62fae2e":"0x2086ac351052600000","0x7abb10f5bd9bc33b8ec1a82d64b55b6b18777541":"0x43c33c1937564800000","0x7ac48d40c664cc9a6d89f1c5f5c80a1c70e744e6":"0xa31062beeed7000000","0x7ac58f6ffc4f8107ae6e30378e4e9f99c57fbb24":"0x22b1c8c1227a00000","0x7ad3f307616f19dcb143e6444dab9c3c33611f52":"0x2b5e3af16b1880000","0x7ad82caea1a8b4ed05319b9c9870173c814e06ee":"0x2164b7a04ac8a00000","0x7ade5d66b944bb860c0efdc86276d58f4653f711":"0x6c6b935b8bbd400000","0x7adfedb06d91f3cc7390450b85550270883c7bb7":"0x1178fa40515db40000","0x7ae1c19e53c71cee4c73fae2d7fc73bf9ab5e392":"0x3635c9adc5dea00000","0x7ae659eb3bc46852fa86fac4e21c768d50388945":"0xf810c1cb501b80000","0x7aea25d42b2612286e99c53697c6bc4100e2dbbf":"0x6c6b935b8bbd400000","0x7aef7b551f0b9c46e755c0f38e5b3a73fe1199f5":"0x50c5e761a444080000","0x7b0b31ff6e24745ead8ed9bb85fc0bf2fe1d55d4":"0x2b5e3af16b18800000","0x7b0fea1176d52159333a143c294943da36bbddb4":"0x1fc7da64ea14c100000","0x7b11673cc019626b290cbdce26046f7e6d141e21":"0x1b1ae4d6e2ef500000","0x7b122162c913e7146cad0b7ed37affc92a0bf27f":"0x51af096b2301d18000","0x7b1bf53a9cbe83a7dea434579fe72aac8d2a0cd0":"0xad4c8316a0b0c0000","0x7b1daf14891b8a1e1bd429d8b36b9a4aa1d9afbf":"0x1b1ae4d6e2ef500000","0x7b1fe1ab4dfd0088cdd7f60163ef59ec2aee06f5":"0x6c6b935b8bbd400000","0x7b25bb9ca8e702217e9333225250e53c36804d48":"0x65ea3db75546600000","0x7b27d0d1f3dd3c140294d0488b783ebf4015277d":"0x15af1d78b58c400000","0x7b4007c45e5a573fdbb6f8bd746bf94ad04a3c26":"0x33821f5135d259a0000","0x7b43c7eea8d62355b0a8a81da081c6446b33e9e0":"0xd8d726b7177a800000","0x7b4d2a38269069c18557770d591d24c5121f5e83":"0x25f273933db5700000","0x7b6175ec9befc738249535ddde34688cd36edf25":"0x21e19e0c9bab2400000","0x7b66126879844dfa34fe65c9f288117fefb449ad":"0x14542ba12a337c00000","0x7b6a84718dd86e63338429ac811d7c8a860f21f1":"0x61093d7c2c6d380000","0x7b712c7af11676006a66d2fc5c1ab4c479ce6037":"0x1b1ae4d6e2ef5000000","0x7b73242d75ca9ad558d650290df17692d54cd8b8":"0x6c6e59e67c78540000","0x7b761feb7fcfa7ded1f0eb058f4a600bf3a708cb":"0xf95dd2ec27cce00000","0x7b827cae7ff4740918f2e030ab26cb98c4f46cf5":"0x194684c0b39de100000","0x7b893286427e72db219a21fc4dcd5fbf59283c31":"0x21e19e0c9bab2400000","0x7b9226d46fe751940bc416a798b69ccf0dfab667":"0xe3aeb5737240a00000","0x7b98e23cb96beee80a168069ebba8f20edd55ccf":"0xba0c91587c14a0000","0x7bb0fdf5a663b5fba28d9c902af0c811e252f298":"0xad78ebc5ac6200000","0x7bb9571f394b0b1a8eba5664e9d8b5e840677bea":"0x11164759ffb320000","0x7bb984c6dbb9e279966afafda59c01d02627c804":"0x1b464311d45a6880000","0x7bbbec5e70bdead8bb32b42805988e9648c0aa97":"0x3636d7af5ec98e0000","0x7bca1da6c80a66baa5db5ac98541c4be276b447d":"0x24cf049680fa3c0000","0x7bddb2ee98de19ee4c91f661ee8e67a91d054b97":"0x3635c9adc5dea00000","0x7be2f7680c802da6154c92c0194ae732517a7169":"0xfc936392801c0000","0x7be7f2456971883b9a8dbe4c91dec08ac34e8862":"0xa2a15d09519be00000","0x7be8ccb4f11b66ca6e1d57c0b5396221a31ba53a":"0x1158e460913d00000","0x7beb81fb2f5e91526b2ac9795e76c69bcff04bc0":"0xeb22e794f0a8d600000","0x7c0883054c2d02bc7a852b1f86c42777d0d5c856":"0x1b1ae4d6e2ef500000","0x7c0f5e072043c9ee740242197e78cc4b98cdf960":"0xad78ebc5ac6200000","0x7c1df24a4f7fb2c7b472e0bb006cb27dcd164156":"0x3635c9adc5dea00000","0x7c29d47d57a733f56b9b217063b513dc3b315923":"0xd8d726b7177a800000","0x7c2b9603884a4f2e464eceb97d17938d828bc02c":"0xa2a15d09519be00000","0x7c382c0296612e4e97e440e02d3871273b55f53b":"0xab640391201300000","0x7c3eb713c4c9e0381cd8154c7c9a7db8645cde17":"0xad78ebc5ac6200000","0x7c4401ae98f12ef6de39ae24cf9fc51f80eba16b":"0xad78ebc5ac6200000","0x7c45f0f8442a56dbd39dbf159995415c52ed479b":"0x6c6b935b8bbd400000","0x7c532db9e0c06c26fd40acc56ac55c1ee92d3c3a":"0x3f870857a3e0e3800000","0x7c60a05f7a4a5f8cf2784391362e755a8341ef59":"0x6694f0182a37ae0000","0x7c60e51f0be228e4d56fdd2992c814da7740c6bc":"0xad78ebc5ac6200000","0x7c6924d07c3ef5891966fe0a7856c87bef9d2034":"0x6c6b935b8bbd400000","0x7c8bb65a6fbb49bd413396a9d7e31053bbb37aa9":"0x14542ba12a337c00000","0x7c9a110cb11f2598b2b20e2ca400325e41e9db33":"0x581767ba6189c400000","0x7cbca88fca6a0060b960985c9aa1b02534dc2208":"0x19127a1391ea2a0000","0x7cbeb99932e97e6e02058cfc62d0b26bc7cca52b":"0x6c6b935b8bbd400000","0x7cc24a6a958c20c7d1249660f7586226950b0d9a":"0x6acb3df27e1f880000","0x7cd20eccb518b60cab095b720f571570caaa447e":"0x1b1ae4d6e2ef500000","0x7cd5d81eab37e11e6276a3a1091251607e0d7e38":"0x3684d5ef981f40000","0x7cdf74213945953db39ad0e8a9781add792e4d1d":"0x6c6b935b8bbd400000","0x7ce4686446f1949ebed67215eb0d5a1dd72c11b8":"0x7839d321b81ab80000","0x7cef4d43aa417f9ef8b787f8b99d53f1fea1ee88":"0x678a932062e4180000","0x7d0350e40b338dda736661872be33f1f9752d755":"0x2b4f5a6f191948000","0x7d04d2edc058a1afc761d9c99ae4fc5c85d4c8a6":"0x42a9c4675c9467d00000","0x7d0b255efb57e10f7008aa22d40e9752dfcf0378":"0x19f8e7559924c0000","0x7d13d6705884ab2157dd8dcc7046caf58ee94be4":"0x1d0da07cbb3ee9c00000","0x7d273e637ef1eac481119413b91c989dc5eac122":"0x1b1ae4d6e2ef500000","0x7d2a52a7cf0c8436a8e007976b6c26b7229d1e15":"0x17bf06b32a241c0000","0x7d34803569e00bd6b59fff081dfa5c0ab4197a62":"0x5cd87cb7b9fb860000","0x7d34ff59ae840a7413c6ba4c5bb2ba2c75eab018":"0xa2a15d09519be00000","0x7d392852f3abd92ff4bb5bb26cb60874f2be6795":"0x3636c25e66ece70000","0x7d445267c59ab8d2a2d9e709990e09682580c49f":"0x3635c9adc5dea00000","0x7d551397f79a2988b064afd0efebee802c7721bc":"0x857e0d6f1da76a00000","0x7d5aa33fc14b51841a06906edb2bb49c2a117269":"0x104400a2470e680000","0x7d5d2f73949dadda0856b206989df0078d51a1e5":"0x23c757072b8dd000000","0x7d6e990daa7105de2526339833f77b5c0b85d84f":"0x43c33c1937564800000","0x7d73863038ccca22f96affda10496e51e1e6cd48":"0x1158e460913d00000","0x7d7dd5ee614dbb6fbfbcd26305247a058c41faa1":"0x6c6b935b8bbd400000","0x7d7e7c61779adb7706c94d32409a2bb4e994bf60":"0x2ef20d9fc71a140000","0x7d82e523cc2dc591da3954e8b6bb2caf6461e69c":"0x7d8dc2efffb1a90000","0x7d858493f07415e0912d05793c972113eae8ae88":"0x628dd177d2bc280000","0x7d901b28bf7f88ef73d8f73cca97564913ea8a24":"0x33c5499031720c0000","0x7d980f4b566bb045517e4c14c87750de9346744b":"0x487a9a304539440000","0x7d9c59631e2ba2e8e82891f3979922aaa3b567a1":"0x1b1ae4d6e2ef5000000","0x7d9d221a3df89ddd7b5f61c1468c6787d6b333e6":"0x77b227cd83be80000","0x7da7613445a21299aa74f0ad71431ec43fbb1be9":"0x3afb087b876900000","0x7db4c7d5b797e9296e6382f203693db409449d62":"0x15af1d78b58c400000","0x7db9eacc52e429dc83b461c5f4d86010e5383a28":"0x3635c9adc5dea00000","0x7dd46da677e161825e12e80dc446f58276e1127c":"0x2c73c937742c500000","0x7dd8d7a1a34fa1f8e73ccb005fc2a03a15b8229c":"0xad78ebc5ac6200000","0x7ddd57165c87a2707f025dcfc2508c09834759bc":"0x4be4e7267b6ae00000","0x7de442c82386154d2e993cbd1280bb7ca6b12ada":"0xd8f2e8247ec9480000","0x7de7fe419cc61f91f408d234cc80d5ca3d054d99":"0x1158e460913d00000","0x7dece6998ae1900dd3770cf4b93812bad84f0322":"0x56bc75e2d63100000","0x7dfc342dffcf45dfee74f84c0995397bd1a63172":"0xd8d726b7177a80000","0x7dfd2962b575bcbeee97f49142d63c30ab009f66":"0xd8d726b7177a800000","0x7e1e29721d6cb91057f6c4042d8a0bbc644afe73":"0x8a9aba557e36c0000","0x7e236666b2d06e63ea4e2ab84357e2dfc977e50e":"0x36356633ebd8ea0000","0x7e24d9e22ce1da3ce19f219ccee523376873f367":"0x13fd9079caa60ff0000","0x7e24fbdad290175eb2df6d180a19b9a9f41370be":"0x3635c9adc5dea00000","0x7e268f131ddf687cc325c412f78ba961205e9112":"0x36364ee7d301b3c0000","0x7e29290038493559194e946d4e460b96fc38a156":"0x10c13c527763880000","0x7e2ba86da52e785d8625334f3397ba1c4bf2e8d1":"0xaadec983fcff40000","0x7e3f63e13129a221ba1ab06326342cd98b5126ae":"0x56a02659a523340000","0x7e47637e97c14622882be057bea229386f4052e5":"0x17da3a04c7b3e00000","0x7e4e9409704121d1d77997026ff06ea9b19a8b90":"0x8d16549ed58fa40000","0x7e59dc60be8b2fc19abd0a5782c52c28400bce97":"0x3635c9adc5dea00000","0x7e5b19ae1be94ff4dee635492a1b012d14db0213":"0x56bc75e2d63100000","0x7e5d9993104e4cb545e179a2a3f971f744f98482":"0x6c6b935b8bbd400000","0x7e71171f2949fa0c3ac254254b1f0440e5e6a038":"0x22b1c8c1227a00000","0x7e7c1e9a61a08a83984835c70ec31d34d3eaa87f":"0xa5aa85009e39c0000","0x7e7f18a02eccaa5d61ab8fbf030343c434a25ef7":"0x39fbae8d042dd0000","0x7e81f6449a03374191f3b7cb05d938b72e090dff":"0x56bc75e2d63100000","0x7e8649e690fc8c1bfda1b5e186581f649b50fe33":"0x556f64c1fe7fa0000","0x7e87863ec43a481df04d017762edcb5caa629b5a":"0x222c8eb3ff6640000","0x7e8f96cc29f57b0975120cb593b7dd833d606b53":"0xaadec983fcff40000","0x7e972a8a7c2a44c93b21436c38d21b9252c345fe":"0x61093d7c2c6d380000","0x7e99dfbe989d3ba529d19751b7f4317f8953a3e2":"0x15af1d78b58c400000","0x7ea0f96ee0a573a330b56897761f3d4c0130a8e3":"0x487a9a304539440000","0x7ea791ebab0445a00efdfc4e4a8e9a7e7565136d":"0xfc936392801c0000","0x7eaba035e2af3793fd74674b102540cf190addb9":"0x45026c835b60440000","0x7eb4b0185c92b6439a08e7322168cb353c8a774a":"0x227196ca04983ca0000","0x7ebd95e9c470f7283583dc6e9d2c4dce0bea8f84":"0x2f6f10780d22cc00000","0x7ed0a5a847bef9a9da7cba1d6411f5c316312619":"0x228eb37e8751d0000","0x7edafba8984baf631a820b6b92bbc2c53655f6bd":"0x6c6b935b8bbd400000","0x7edb02c61a227287611ad950696369cc4e647a68":"0xeda838c4929080000","0x7ee5ca805dce23af89c2d444e7e40766c54c7404":"0xd0bd412edbd820000","0x7ee604c7a9dc2909ce321de6b9b24f5767577555":"0x12bf9c7985cf62d8000","0x7ef16fd8d15b378a0fba306b8d03dd98fc92619f":"0x25f273933db5700000","0x7ef98b52bee953bef992f305fda027f8911c5851":"0x1be722206996bc8000","0x7efc90766a00bc52372cac97fabd8a3c831f8ecd":"0x890b0c2e14fb80000","0x7efec0c6253caf397f71287c1c07f6c9582b5b86":"0x1a2cbcb84f30d58000","0x7f01dc7c3747ca608f983dfc8c9b39e755a3b914":"0xb386cad5f7a5a0000","0x7f0662b410298c99f311d3a1454a1eedba2fea76":"0xad78ebc5ac6200000","0x7f06c89d59807fa60bc60136fcf814cbaf2543bd":"0x21e19e0c9bab2400000","0x7f0b90a1fdd48f27b268feb38382e55ddb50ef0f":"0x32f51edbaaa3300000","0x7f0ec3db804692d4d1ea3245365aab0590075bc4":"0xd8d726b7177a800000","0x7f0f04fcf37a53a4e24ede6e93104e78be1d3c9e":"0x6c6b935b8bbd400000","0x7f13d760498d7193ca6859bc95c901386423d76c":"0x10f0cf064dd59200000","0x7f150afb1a77c2b45928c268c1e9bdb4641d47d8":"0x6c6b935b8bbd400000","0x7f1619988f3715e94ff1d253262dc5581db3de1c":"0x30ca024f987b900000","0x7f1c81ee1697fc144b7c0be5493b5615ae7fddca":"0x1b1dab61d3aa640000","0x7f2382ffd8f83956467937f9ba72374623f11b38":"0x2086ac351052600000","0x7f3709391f3fbeba3592d175c740e87a09541d02":"0x1a055690d9db800000","0x7f389c12f3c6164f6446566c77669503c2792527":"0x556f64c1fe7fa0000","0x7f3a1e45f67e92c880e573b43379d71ee089db54":"0x152d02c7e14af6800000","0x7f3d7203c8a447f7bf36d88ae9b6062a5eee78ae":"0x14542ba12a337c00000","0x7f46bb25460dd7dae4211ca7f15ad312fc7dc75c":"0x16a6502f15a1e540000","0x7f49e7a4269882bd8722d4a6f566347629624079":"0x6c6b935b8bbd400000","0x7f49f20726471ac1c7a83ef106e9775ceb662566":"0x14061b9d77a5e980000","0x7f4b5e278578c046cceaf65730a0e068329ed5b6":"0x65ea3db75546600000","0x7f4f593b618c330ba2c3d5f41eceeb92e27e426c":"0x966edc756b7cfc0000","0x7f541491d2ac00d2612f94aa7f0bcb014651fbd4":"0x14620c57dddae00000","0x7f5ae05ae0f8cbe5dfe721f044d7a7bef4c27997":"0x340aad21b3b700000","0x7f603aec1759ea5f07c7f8d41a1428fbbaf9e762":"0x1158e460913d00000","0x7f616c6f008adfa082f34da7d0650460368075fb":"0x3635c9adc5dea00000","0x7f61fa6cf5f898b440dac5abd8600d6d691fdef9":"0xf2dc7d47f15600000","0x7f655c6789eddf455cb4b88099720639389eebac":"0x14542ba12a337c00000","0x7f6b28c88421e4857e459281d78461692489d3fb":"0x6c6b935b8bbd400000","0x7f6efb6f4318876d2ee624e27595f44446f68e93":"0x54069233bf7f780000","0x7f7192c0df1c7db6d9ed65d71184d8e4155a17ba":"0x453728d33942c0000","0x7f7a3a21b3f5a65d81e0fcb7d52dd00a1aa36dba":"0x56bc75e2d63100000","0x7f8dbce180ed9c563635aad2d97b4cbc428906d9":"0x90f534608a72880000","0x7f993ddb7e02c282b898f6155f680ef5b9aff907":"0x43c33c1937564800000","0x7f9f9b56e4289dfb58e70fd5f12a97b56d35c6a5":"0x6acb3df27e1f880000","0x7fa37ed67887751a471f0eb306be44e0dbcd6089":"0x3976747fe11a100000","0x7faa30c31519b584e97250ed2a3cf3385ed5fd50":"0x6c6b935b8bbd400000","0x7fcf5ba6666f966c5448c17bf1cb0bbcd8019b06":"0x56bc3d0aebe498000","0x7fd679e5fb0da2a5d116194dcb508318edc580f3":"0x1639e49bba162800000","0x7fdba031c78f9c096d62d05a369eeab0bccc55e5":"0x97c9ce4cf6d5c00000","0x7fdbc3a844e40d96b2f3a635322e6065f4ca0e84":"0x6c6b935b8bbd400000","0x7fdfc88d78bf1b285ac64f1adb35dc11fcb03951":"0x7c06fda02fb0360000","0x7fea1962e35d62059768c749bedd96cab930d378":"0x6c6b935b8bbd400000","0x7fef8c38779fb307ec6f044bebe47f3cfae796f1":"0x92340f86cf09e8000","0x7ff0c63f70241bece19b737e5341b12b109031d8":"0x12c1b6eed03d280000","0x7ffabfbc390cbe43ce89188f0868b27dcb0f0cad":"0x1595182224b26480000","0x7ffd02ed370c7060b2ae53c078c8012190dfbb75":"0x21e19e0c9bab2400000","0x80022a1207e910911fc92849b069ab0cdad043d3":"0xb98bc829a6f90000","0x8009a7cbd192b3aed4adb983d5284552c16c7451":"0xd8d726b7177a800000","0x800e7d631c6e573a90332f17f71f5fd19b528cb9":"0x83d6c7aab63600000","0x80156d10efa8b230c99410630d37e269d4093cea":"0x6c6b935b8bbd400000","0x801732a481c380e57ed62d6c29de998af3fa3b13":"0x56bc75e2d63100000","0x801d65c518b11d0e3f4f470221417013c8e53ec5":"0xd8d726b7177a800000","0x8026435aac728d497b19b3e7e57c28c563954f2b":"0x5dc892aa1131c80000","0x802dc3c4ff2d7d925ee2859f4a06d7ba60f1308c":"0x550940c8fd34c0000","0x8030b111c6983f0485ddaca76224c6180634789f":"0x4563918244f400000","0x8035bcffaefdeeea35830c497d14289d362023de":"0x1043561a8829300000","0x8035fe4e6b6af27ae492a578515e9d39fa6fa65b":"0xd8d726b7177a800000","0x8043ed22f997e5a2a4c16e364486ae64975692c4":"0x3d4904ffc9112e8000","0x8043fdd0bc4c973d1663d55fc135508ec5d4f4fa":"0x1158e460913d00000","0x804ca94972634f633a51f3560b1d06c0b293b3b1":"0xad78ebc5ac6200000","0x80522ddf944ec52e27d724ed4c93e1f7be6083d6":"0xad78ebc5ac6200000","0x80591a42179f34e64d9df75dcd463b28686f5574":"0x43c33c1937564800000","0x805ce51297a0793b812067f017b3e7b2df9bb1f9":"0x56bc75e2d63100000","0x805d846fb0bc02a7337226d685be9ee773b9198a":"0x43c30fb0884a96c0000","0x8063379a7bf2cb923a84c5093e68dac7f75481c5":"0x1176102e6e32df0000","0x806854588ecce541495f81c28a290373df0274b2":"0x1f8cdf5c6e8d580000","0x806f44bdeb688037015e84ff218049e382332a33":"0x6c5db2a4d815dc0000","0x80744618de396a543197ee4894abd06398dd7c27":"0x6c6b935b8bbd400000","0x8077c3e4c445586e094ce102937fa05b737b568c":"0x56bc75e2d63100000","0x80907f593148b57c46c177e23d25abc4aae18361":"0x56bc75e2d63100000","0x80977316944e5942e79b0e3abad38da746086519":"0x21a754a6dc5280000","0x80a0f6cc186cf6201400736e065a391f52a9df4a":"0x21e19e0c9bab2400000","0x80abec5aa36e5c9d098f1b942881bd5acac6963d":"0x6c6b935b8bbd400000","0x80b23d380b825c46e0393899a85556462da0e18c":"0x6c6b935b8bbd400000","0x80b42de170dbd723f454e88f7716452d92985092":"0x104623c0762dd10000","0x80b79f338390d1ba1b3737a29a0257e5d91e0731":"0x1158e460913d00000","0x80bf995ed8ba92701d10fec49f9e7d014dbee026":"0x1f0437ca1a7e128000","0x80c04efd310f440483c73f744b5b9e64599ce3ec":"0x410d586a20a4c00000","0x80c3a9f695b16db1597286d1b3a8b7696c39fa27":"0x56bc75e2d63100000","0x80c53ee7e3357f94ce0d7868009c208b4a130125":"0x6c6b935b8bbd400000","0x80cc21bd99f39005c58fe4a448909220218f66cb":"0x3636c9796436740000","0x80d5c40c59c7f54ea3a55fcfd175471ea35099b3":"0x3635c9adc5dea00000","0x80da2fdda29a9e27f9e115975e69ae9cfbf3f27e":"0xad78ebc5ac6200000","0x80e7b3205230a566a1f061d922819bb4d4d2a0e1":"0x2f6f10780d22cc00000","0x80ea1acc136eca4b68c842a95adf6b7fee7eb8a2":"0xd8d726b7177a800000","0x80f07ac09e7b2c3c0a3d1e9413a544c73a41becb":"0x1158e460913d00000","0x810db25675f45ea4c7f3177f37ce29e22d67999c":"0xad78ebc5ac6200000","0x81139bfdcca656c430203f72958c543b6580d40c":"0x6c6b935b8bbd400000","0x811461a2b0ca90badac06a9ea16e787b33b196cc":"0x8e3f50b173c100000","0x81164deb10814ae08391f32c08667b6248c27d7a":"0x155bd9307f9fe80000","0x81186931184137d1192ac88cd3e1e5d0fdb86a74":"0x9d3595ab2438d00000","0x812a55c43caedc597218379000ce510d548836fd":"0xfc936392801c0000","0x812ea7a3b2c86eed32ff4f2c73514cc63bacfbce":"0x3635c9adc5dea00000","0x8134dd1c9df0d6c8a5812426bb55c761ca831f08":"0x6a2160bb57ccc0000","0x814135da8f9811075783bf1ab67062af8d3e9f40":"0x1158e460913d00000","0x81498ca07b0f2f17e8bbc7e61a7f4ae7be66b78b":"0x581fbb5b33bb00000","0x81556db27349ab8b27004944ed50a46e941a0f5f":"0xd8bb6549b02bb80000","0x8155fa6c51eb31d808412d748aa086105018122f":"0x65ea3db75546600000","0x8156360bbd370961ceca6b6691d75006ad204cf2":"0x878678326eac9000000","0x8161d940c3760100b9080529f8a60325030f6edc":"0x1043561a8829300000","0x8164e78314ae16b28926cc553d2ccb16f356270d":"0x1ca134e95fb32c80000","0x8165cab0eafb5a328fc41ac64dae715b2eef2c65":"0x3635c9adc5dea00000","0x8168edce7f2961cf295b9fcd5a45c06cdeda6ef5":"0xad78ebc5ac6200000","0x816d9772cf11399116cc1e72c26c6774c9edd739":"0xad78ebc5ac6200000","0x8173c835646a672e0152be10ffe84162dd256e4c":"0x1aabdf2145b4300000","0x817493cd9bc623702a24a56f9f82e3fd48f3cd31":"0x9e4b23f12d4ca00000","0x8179c80970182cc5b7d82a4df06ea94db63a25f3":"0x276f259de66bf40000","0x817ac33bd8f847567372951f4a10d7a91ce3f430":"0xad7c406c66dc18000","0x818ffe271fc3973565c303f213f6d2da89897ebd":"0x136e05342fee1b98000","0x8197948121732e63d9c148194ecad46e30b749c8":"0xd8d726b7177a800000","0x819af9a1c27332b1c369bbda1b3de1c6e933d640":"0x1109e654b98f7a0000","0x819cdaa5303678ef7cec59d48c82163acc60b952":"0x31351545f79816c0000","0x819eb4990b5aba5547093da12b6b3c1093df6d46":"0x3635c9adc5dea00000","0x81a88196fac5f23c3e12a69dec4b880eb7d97310":"0x6c6b935b8bbd400000","0x81bccbff8f44347eb7fca95b27ce7c952492aaad":"0x840c12165dd780000","0x81bd75abd865e0c3f04a0b4fdbcb74d34082fbb7":"0xd8d726b7177a800000","0x81c18c2a238ddc4cba230a072dd7dc101e620273":"0x487a9a304539440000","0x81c9e1aee2d3365d53bcfdcd96c7c538b0fd7eec":"0x62a992e53a0af00000","0x81cfad760913d3c322fcc77b49c2ae3907e74f6e":"0xaadec983fcff40000","0x81d619ff5726f2405f12904c72eb1e24a0aaee4f":"0x43c33c1937564800000","0x81efe296ae76c860d1c5fbd33d47e8ce9996d157":"0x3635c9adc5dea00000","0x81f8de2c283d5fd4afbda85dedf9760eabbbb572":"0xa2a15d09519be00000","0x820c19291196505b65059d9914b7090be1db87de":"0x796e3ea3f8ab00000","0x821cb5cd05c7ef909fe1be60733d8963d760dc41":"0xd8d726b7177a800000","0x821d798af19989c3ae5b84a7a7283cd7fda1fabe":"0x43c33c1937564800000","0x821eb90994a2fbf94bdc3233910296f76f9bf6e7":"0x21e19e0c9bab2400000","0x82249fe70f61c6b16f19a324840fdc020231bb02":"0x20336b08a93635b0000","0x8228ebc087480fd64547ca281f5eace3041453b9":"0x6acb3df27e1f880000","0x8229ceb9f0d70839498d44e6abed93c5ca059f5d":"0x1a1c1b3c989a20100000","0x822edff636563a6106e52e9a2598f7e6d0ef2782":"0x1f4f9693d42d38000","0x823219a25976bb2aa4af8bad41ac3526b493361f":"0x6c6b935b8bbd400000","0x8232d1f9742edf8dd927da353b2ae7b4cbce7592":"0x243d4d18229ca20000","0x8234f463d18485501f8f85ace4972c9b632dbccc":"0x6c6b935b8bbd400000","0x823768746737ce6da312d53e54534e106f967cf3":"0x1158e460913d00000","0x823ba7647238d113bce9964a43d0a098118bfe4d":"0xad78ebc5ac6200000","0x824074312806da4748434266ee002140e3819ac2":"0x51b1d3839261ac0000","0x82438fd2b32a9bdd674b49d8cc5fa2eff9781847":"0x1158e460913d00000","0x82485728d0e281563758c75ab27ed9e882a0002d":"0x7f808e9291e6c0000","0x824b3c3c443e19295d7ef6faa7f374a4798486a8":"0x1158e460913d00000","0x8251358ca4e060ddb559ca58bc0bddbeb4070203":"0x6c6b935b8bbd400000","0x825135b1a7fc1605614c8aa4d0ac6dbad08f480e":"0x4d853c8f8908980000","0x825309a7d45d1812f51e6e8df5a7b96f6c908887":"0x8034f7d9b166d40000","0x825a7f4e10949cb6f8964268f1fa5f57e712b4c4":"0x1158e460913d00000","0x8261fa230c901d43ff579f4780d399f31e6076bc":"0x6c6b935b8bbd400000","0x8262169b615870134eb4ac6c5f471c6bf2f789fc":"0x19127a1391ea2a0000","0x8263ece5d709e0d7ae71cca868ed37cd2fef807b":"0x35ab028ac154b80000","0x826ce5790532e0548c6102a30d3eac836bd6388f":"0x3cfc82e37e9a7400000","0x826eb7cd7319b82dd07a1f3b409071d96e39677f":"0x3635c9adc5dea00000","0x827531a6c5817ae35f82b00b9754fcf74c55e232":"0xc328093e61ee400000","0x8275cd684c3679d5887d03664e338345dc3cdde1":"0xdb44e049bb2c0000","0x8284923b62e68bbf7c2b9f3414d13ef6c812a904":"0xd255d112e103a00000","0x828ba651cb930ed9787156299a3de44cd08b7212":"0x487a9a304539440000","0x82a15cef1d6c8260eaf159ea3f0180d8677dce1c":"0x6c6b935b8bbd400000","0x82a8b96b6c9e13ebec1e9f18ac02a60ea88a48ff":"0x6c6b8c408e73b30000","0x82a8cbbfdff02b2e38ae4bbfca15f1f0e83b1aea":"0x49b991c27ef6d8000","0x82e4461eb9d849f0041c1404219e4272c4900ab4":"0x6c6b935b8bbd400000","0x82e577b515cb2b0860aafe1ce09a59e09fe7d040":"0x2086ac351052600000","0x82ea01e3bf2e83836e71704e22a2719377efd9c3":"0xa4cc799563c3800000","0x82f2e991fd324c5f5d17768e9f61335db6319d6c":"0x1b1ae4d6e2ef500000","0x82f39b2758ae42277b86d69f75e628d958ebcab0":"0x878678326eac9000000","0x82f854c9c2f087dffa985ac8201e626ca5467686":"0x152d02c7e14af6800000","0x82ff716fdf033ec7e942c909d9831867b8b6e2ef":"0x61093d7c2c6d380000","0x8308ed0af7f8a3c1751fafc877b5a42af7d35882":"0x3635c9adc5dea00000","0x831c44b3084047184b2ad218680640903750c45d":"0x6acb3df27e1f880000","0x83210583c16a4e1e1dac84ebd37e3d0f7c57eba4":"0x6c6b935b8bbd400000","0x832c54176bdf43d2c9bcd7b808b89556b89cbf31":"0xad78ebc5ac6200000","0x833316985d47742bfed410604a91953c05fb12b0":"0x6c6b935b8bbd400000","0x8334764b7b397a4e578f50364d60ce44899bff94":"0x503b203e9fba20000","0x833b6a8ec8da408186ac8a7d2a6dd61523e7ce84":"0x3635c9adc5dea000000","0x833d3fae542ad5f8b50ce19bde2bec579180c88c":"0x12c1b6eed03d280000","0x833db42c14163c7be4cab86ac593e06266d699d5":"0x24e40d2b6943ef900000","0x83563bc364ed81a0c6da3b56ff49bbf267827a9c":"0x3ab91d17b20de500000","0x837a645dc95c49549f899c4e8bcf875324b2f57c":"0x208c394af1c8880000","0x838bd565f99fde48053f7917fe333cf84ad548ab":"0xad78ebc5ac6200000","0x83908aa7478a6d1c9b9b0281148f8f9f242b9fdc":"0x6c6b935b8bbd400000","0x8392e53776713578015bff4940cf43849d7dcba1":"0x84df0355d56170000","0x8397a1bc47acd647418159b99cea57e1e6532d6e":"0x1f10fa827b550b40000","0x8398e07ebcb4f75ff2116de77c1c2a99f303a4cf":"0x1b1ae4d6e2ef500000","0x83a3148833d9644984f7c475a7850716efb480ff":"0xb8507a820728200000","0x83a402438e0519773d5448326bfb61f8b20cf52d":"0x52663ccab1e1c00000","0x83a93b5ba41bf88720e415790cdc0b67b4af34c4":"0xad78ebc5ac6200000","0x83c23d8a502124ee150f08d71dc6727410a0f901":"0x7331f3bfe661b180000","0x83c897a84b695eebe46679f7da19d776621c2694":"0x1b1ae4d6e2ef500000","0x83d532d38d6dee3f60adc68b936133c7a2a1b0dd":"0x1b1ae4d6e2ef500000","0x83dbf8a12853b40ac61996f8bf1dc8fdbaddd329":"0x34957444b840e80000","0x83dbfd8eda01d0de8e158b16d0935fc2380a5dc7":"0x2086ac351052600000","0x83e48055327c28b5936fd9f4447e73bdb2dd3376":"0x90f534608a72880000","0x83fe5a1b328bae440711beaf6aad6026eda6d220":"0x43c33c1937564800000","0x84008a72f8036f3feba542e35078c057f32a8825":"0x56bc75e2d63100000","0x840ec83ea93621f034e7bb3762bb8e29ded4c479":"0x878678326eac900000","0x841145b44840c946e21dbc190264b8e0d5029369":"0x3f870857a3e0e3800000","0x84232107932b12e03186583525ce023a703ef8d9":"0x6c6b935b8bbd400000","0x84244fc95a6957ed7c1504e49f30b8c35eca4b79":"0x6c6b935b8bbd400000","0x8431277d7bdd10457dc017408c8dbbbd414a8df3":"0x222c8eb3ff6640000","0x84375afbf59b3a1d61a1be32d075e0e15a4fbca5":"0xad78ebc5ac6200000","0x843bd3502f45f8bc4da370b323bdac3fcf5f19a6":"0x50039d63d11c900000","0x84503334630d77f74147f68b2e086613c8f1ade9":"0x56bc75e2d631000000","0x845203750f7148a9aa262921e86d43bf641974fd":"0x56bc75e2d63100000","0x8461ecc4a6a45eb1a5b947fb86b88069b91fcd6f":"0x6c6b935b8bbd400000","0x84675e9177726d45eaa46b3992a340ba7f710c95":"0x3635c9adc5dea00000","0x84686c7bad762c54b667d59f90943cd14d117a26":"0x1158e460913d00000","0x8489f6ad1d9a94a297789156899db64154f1dbb5":"0x137407c03c8c268000","0x848c994a79003fe7b7c26cc63212e1fc2f9c19eb":"0x6c6b935b8bbd400000","0x848fbd29d67cf4a013cb02a4b176ef244e9ee68d":"0x1172a636bbdc20000","0x84949dba559a63bfc845ded06e9f2d9b7f11ef24":"0x6c6b935b8bbd400000","0x849ab80790b28ff1ffd6ba394efc7463105c36f7":"0x1e02be4ae6c840000","0x849b116f596301c5d8bb62e0e97a8248126e39f3":"0x1043561a8829300000","0x84a74ceecff65cb93b2f949d773ef1ad7fb4a245":"0x50a9b444685c70000","0x84aac7fa197ff85c30e03b7a5382b957f41f3afb":"0x88b23acffd9900000","0x84af1b157342d54368260d17876230a534b54b0e":"0x35659ef93f0fc40000","0x84b0ee6bb837d3a4c4c5011c3a228c0edab4634a":"0x1158e460913d00000","0x84b4b74e6623ba9d1583e0cfbe49643f16384149":"0x1158e460913d00000","0x84b6b6adbe2f5b3e2d682c66af1bc4905340c3ed":"0x2192f8d22215008000","0x84b91e2e2902d05e2b591b41083bd7beb2d52c74":"0x215e5128b4504648000","0x84bcbf22c09607ac84341d2edbc03bfb1739d744":"0x1b1ae4d6e2ef500000","0x84bfcef0491a0ae0694b37ceac024584f2aa0467":"0x6c6acc67d7b1d40000","0x84cb7da0502df45cf561817bbd2362f451be02da":"0x487a9a304539440000","0x84cc7878da605fdb019fab9b4ccfc157709cdda5":"0x48798513af04c90000","0x84db1459bb00812ea67ecb3dc189b72187d9c501":"0x811b8fbda85ab8000","0x84e9949680bece6841b9a7e5250d08acd87d16cd":"0xad78ebc5ac6200000","0x84e9cf8166c36abfa49053b7a1ad4036202681ef":"0x6c6b935b8bbd400000","0x84ec06f24700fe42414cb9897c154c88de2f6132":"0x487a9a304539440000","0x84f522f0520eba52dd18ad21fa4b829f2b89cb97":"0x10c5106d5134f130000","0x850b9db18ff84bf0c7da49ea3781d92090ad7e64":"0x8cf23f909c0fa00000","0x8510ee934f0cbc900e1007eb38a21e2a5101b8b2":"0x5bf0ba6634f680000","0x8516fcaf77c893970fcd1a958ba9a00e49044019":"0xaa3eb1691bce58000","0x851aa91c82f42fad5dd8e8bb5ea69c8f3a5977d1":"0x80e561f2578798000","0x851c0d62be4635d4777e8035e37e4ba8517c6132":"0x1b1ae4d6e2ef500000","0x851dc38adb4593729a76f33a8616dab6f5f59a77":"0x56bc75e2d63100000","0x8532490897bbb4ce8b7f6b837e4cba848fbe9976":"0x56bc75e2d63100000","0x853e6abaf44469c72f151d4e223819aced4e3728":"0x6c6b935b8bbd400000","0x854691ce714f325ced55ce5928ce9ba12facd1b8":"0xed70b5e9c3f2f00000","0x854c0c469c246b83b5d1b3eca443b39af5ee128a":"0x56bc75e2d631000000","0x855d9aef2c39c6230d09c99ef6494989abe68785":"0x8ba52e6fc45e40000","0x8563c49361b625e768771c96151dbfbd1c906976":"0x6c6b935b8bbd400000","0x8566610901aace38b83244f3a9c831306a67b9dc":"0xb08213bcf8ffe00000","0x856aa23c82d7215bec8d57f60ad75ef14fa35f44":"0x43c33c1937564800000","0x856e5ab3f64c9ab56b009393b01664fc0324050e":"0x61093d7c2c6d380000","0x856eb204241a87830fb229031343dc30854f581a":"0x3635c9adc5dea00000","0x85732c065cbd64119941aed430ac59670b6c51c4":"0x27a57362ab0a0e8000","0x8578e10212ca14ff0732a8241e37467db85632a9":"0x14542ba12a337c00000","0x8579dadf1a395a3471e20b6f763d9a0ff19a3f6f":"0xd8d726b7177a800000","0x857f100b1a5930225efc7e9020d78327b41c02cb":"0x6c6b935b8bbd400000","0x85946d56a4d371a93368539690b60ec825107454":"0x5dc892aa1131c80000","0x8599cbd5a6a9dcd4b966be387d69775da5e33c6f":"0xc51f1b1d52622900000","0x859c600cf13d1d0273d5d1da3cd789e495899f27":"0x90f534608a72880000","0x85a2f6ea94d05e8c1d9ae2f4910338a358e98ded":"0x6c6b935b8bbd400000","0x85b16f0b8b34dff3804f69e2168a4f7b24d1042b":"0x112f423c7646d40000","0x85b2998d0c73302cb2ba13f489313301e053be15":"0x21e19e0c9bab2400000","0x85bb51bc3bfe9a1b2a2f6b1cda95bca8b38c8d5e":"0x11712da04ba1ef0000","0x85c8f3cc7a354feac99a5e7bfe7cdfa351cfe355":"0x15af1d78b58c400000","0x85ca1e727e9d1a87991cc2c41840ebb9edf21d1b":"0xb98bc829a6f90000","0x85ca8bc6da2803d0725f5e1a456c89f9bc774e2f":"0x2086ac351052600000","0x85d0d88754ac84b8b21ba93dd2bfec72626faba8":"0x3635c9adc5dea00000","0x85eb256b51c819d60ea61a82d12c9358d59c1cae":"0x18efc84ad0c7b00000","0x85f0e7c1e3aff805a627a2aaf2cff6b4c0dbe9cb":"0x1158e460913d00000","0x86026cad3fe4ea1ce7fca260d3d45eb09ea6a364":"0xad78ebc5ac6200000","0x860f5ffc10de767ded807f71e861d647dfd219b1":"0x21e19e0c9bab2400000","0x86153063a1ae7f02f1a88136d4d69c7c5e3e4327":"0x3635c9adc5dea00000","0x86245f596691093ece3f3d3ca2263eace81941d9":"0xa31062beeed700000","0x862569211e8c6327b5415e3a67e5738b15baaf6e":"0x796e3ea3f8ab00000","0x86297d730fe0f7a9ee24e08fb1087b31adb306a7":"0x6c6b935b8bbd400000","0x8644cc281be332ccced36da483fb2a0746d9ba2e":"0x15af1d78b58c400000","0x86499a1228ff2d7ee307759364506f8e8c8307a5":"0x6acb3df27e1f880000","0x864bec5069f855a4fd5892a6c4491db07c88ff7c":"0x3635c9adc5dea00000","0x86570ab259c9b1c32c9729202f77f590c07dd612":"0xad78ebc5ac6200000","0x8663a241a0a89e70e182c845e2105c8ad7264bcf":"0x323b13d8398f3238000","0x8667fa1155fed732cfb8dca5a0d765ce0d0705ed":"0x46ec965c393b10000","0x8668af868a1e98885f937f2615ded6751804eb2d":"0x1158e460913d00000","0x86740a46648e845a5d96461b18091ff57be8a16f":"0x14c0973485bf39400000","0x867eba56748a5904350d2ca2a5ce9ca00b670a9b":"0x43c33c1937564800000","0x86806474c358047d9406e6a07f40945bc8328e67":"0x1752eb0f7013d100000","0x86883d54cd3915e549095530f9ab1805e8c5432d":"0xd8d726b7177a800000","0x868c23be873466d4c74c220a19b245d1787e807f":"0x4a13bbbd92c88e8000","0x86924fb211aad23cf5ce600e0aae806396444087":"0x21e19e0c9bab2400000","0x8693e9b8be94425eef7969bc69f9d42f7cad671e":"0x3637096c4bcc690000","0x869f1aa30e4455beb1822091de5cadec79a8f946":"0x1b1ae4d6e2ef5000000","0x86a1eadeeb30461345d9ef6bd05216fa247c0d0c":"0x6c6b935b8bbd400000","0x86a5f8259ed5b09e188ce346ee92d34aa5dd93fa":"0xad78ebc5ac6200000","0x86b7bd563ceab686f96244f9ddc02ad7b0b14bc2":"0x21e19e0c9bab2400000","0x86c28b5678af37d727ec05e4447790f15f71f2ea":"0xad78ebc5ac6200000","0x86c4ce06d9ac185bb148d96f7b7abe73f441006d":"0x21e19e0c9bab2400000","0x86c8d0d982b539f48f9830f9891f9d607a942659":"0x2ced37761824fb00000","0x86c934e38e53be3b33f274d0539cfca159a4d0d1":"0x34957444b840e80000","0x86ca0145957e6b0dfe36875fbe7a0dec55e17a28":"0x21e19e0c9bab2400000","0x86caafacf32aa0317c032ac36babed974791dc03":"0x878678326eac9000000","0x86cdb7e51ac44772be3690f61d0e59766e8bfc18":"0xd8d726b7177a800000","0x86df73bd377f2c09de63c45d67f283eaefa0f4ab":"0x3635c9adc5dea00000","0x86e3fe86e93da486b14266eadf056cbfa4d91443":"0x6c6b935b8bbd400000","0x86e8670e27598ea09c3899ab7711d3b9fe901c17":"0xad78ebc5ac6200000","0x86ef6426211949cc37f4c75e7850369d0cf5f479":"0x2d65f32ea045af60000","0x86f05d19063e9369c6004eb3f123943a7cff4eab":"0x6c6acc67d7b1d40000","0x86f23e9c0aafc78b9c404dcd60339a925bffa266":"0x15af1d78b58c400000","0x86f4f40ad984fbb80933ae626e0e42f9333fdd41":"0x3635c9adc5dea00000","0x86f95c5b11a293940e35c0b898d8b75f08aab06d":"0x644e3e875fccf740000","0x86fff220e59305c09f483860d6f94e96fbe32f57":"0x2535b6ab4c0420000","0x870796abc0db84af82da52a0ed68734de7e636f5":"0x1043561a8829300000","0x870f15e5df8b0eabd02569537a8ef93b56785c42":"0x150894e849b3900000","0x87183160d172d2e084d327b86bcb7c1d8e6784ef":"0xd8d8583fa2d52f0000","0x871b8a8b51dea1989a5921f13ec1a955a515ad47":"0x1b1ae4d6e2ef5000000","0x8725e8c753b3acbfdca55f3c62dfe1a59454968a":"0x3637096c4bcc690000","0x8737dae671823a8d5917e0157ace9c43468d946b":"0x6c6acc67d7b1d40000","0x873b7f786d3c99ff012c4a7cae2677270240b9c5":"0x5dc892aa1131c80000","0x873c6f70efb6b1d0f2bbc57eebcd70617c6ce662":"0x36f0d5275d09570000","0x873e49135c3391991060290aa7f6ccb8f85a78db":"0x1158e460913d00000","0x875061ee12e820041a01942cb0e65bb427b00060":"0x97c9ce4cf6d5c00000","0x87584a3f613bd4fac74c1e780b86d6caeb890cb2":"0x5c283d410394100000","0x8764d02722000996ecd475b433298e9f540b05bf":"0xad78ebc5ac6200000","0x876c3f218b4776df3ca9dbfb270de152d94ed252":"0x56bc75e2d63100000","0x8775a610c502b9f1e6ad4cdadb8ce29bff75f6e4":"0x2086ac351052600000","0x87764e3677eef604cbc59aed24abdc566b09fc25":"0xa2a15d09519be00000","0x8787d12677a5ec291e57e31ffbfad105c3324b87":"0x2a24eb53208f3128000","0x8794bf47d54540ece5c72237a1ffb511ddb74762":"0x6c6b935b8bbd400000","0x87a53ea39f59a35bada8352521645594a1a714cb":"0x678a932062e4180000","0x87a7c508ef71582dd9a54372f89cb01f252fb180":"0xad78ebc5ac6200000","0x87af25d3f6f8eea15313d5fe4557e810c524c083":"0x42bf06b78ed3b500000","0x87b10f9c280098179a2b76e9ce90be61fc844d0d":"0x487a9a304539440000","0x87bf7cd5d8a929e1c785f9e5449106ac232463c9":"0x437b11fcc45640000","0x87c498170934b8233d1ad1e769317d5c475f2f40":"0x3708baed3d68900000","0x87cf36ad03c9eae9053abb5242de9117bb0f2a0b":"0x1b1ae4d6e2ef500000","0x87d7ac0653ccc67aa9c3469eef4352193f7dbb86":"0x2a5a058fc295ed000000","0x87e3062b2321e9dfb0875ce3849c9b2e3522d50a":"0x21e19e0c9bab2400000","0x87e6034ecf23f8b5639d5f0ea70a22538a920423":"0x11c7ea162e78200000","0x87ef6d8b6a7cbf9b5c8c97f67ee2adc2a73b3f77":"0xadd1bd23c3c480000","0x87fb26c31e48644d693134205cae43b21f18614b":"0x4a4491bd6dcd280000","0x87fc4635263944ce14a46c75fa4a821f39ce7f72":"0x1158e460913d00000","0x87fcbe7c4193ffcb08143779c9bec83fe7fda9fc":"0x56f985d38644b8000","0x88015d7203c5e0224aeda286ed12f1a51b789333":"0x10f08eda8e555098000","0x88106c27d20b74b4b98ca62b232bd5c97411171f":"0xaadec983fcff40000","0x881230047c211d2d5b00d8de4c5139de5e3227c7":"0x21e19e0c9bab2400000","0x882aa798bf41df179f85520130f15ccdf59b5e58":"0x6c6b935b8bbd400000","0x882bd3a2e9d74110b24961c53777f22f1f46dc5d":"0x2d4ca05e2b43ca80000","0x882c8f81872c79fed521cb5f950d8b032322ea69":"0x878678326eac9000000","0x882f75708386653c80171d0663bfe30b017ed0ad":"0x6c6b935b8bbd400000","0x88344909644c7ad4930fd873ca1c0da2d434c07f":"0x727739fcb004d0000","0x8834b2453471f324fb26be5b25166b5b5726025d":"0x1f0ff8f01daad40000","0x883a78aeabaa50d8ddd8570bcd34265f14b19363":"0xd25522fda379a18000","0x8845e9f90e96336bac3c616be9d88402683e004c":"0x6c6b935b8bbd400000","0x8846928d683289a2d11df8db7a9474988ef01348":"0x21e19e0c9bab2400000","0x884980eb4565c1048317a8f47fdbb461965be481":"0xd8d6119a8146050000","0x884a7a39d0916e05f1c242df55607f37df8c5fda":"0x4f4843c157c8ca00000","0x885493bda36a0432976546c1ddce71c3f4570021":"0xbbf510ddfcb260000","0x88609e0a465b6e99fce907166d57e9da0814f5c8":"0x43c33c1937564800000","0x886d0a9e17c9c095af2ea2358b89ec705212ee94":"0x18493fba64ef00000","0x88797e58675ed5cc4c19980783dbd0c956085153":"0x6c6b935b8bbd400000","0x887cac41cd706f3345f2d34ac34e01752a6e5909":"0x20465cee9da1370000","0x88888a57bd9687cbf950aeeacf9740dcc4d1ef59":"0x62a992e53a0af00000","0x8889448316ccf14ed86df8e2f478dc63c4338340":"0xd2f13f7789f00000","0x888c16144933197cac26504dd76e06fd6600c789":"0x56bc75e2d63100000","0x888e94917083d152202b53163939869d271175b4":"0xd8d726b7177a800000","0x889087f66ff284f8b5efbd29493b706733ab1447":"0x215f835bc769da80000","0x8895eb726226edc3f78cc6a515077b3296fdb95e":"0xd5967be4fc3f100000","0x88975a5f1ef2528c300b83c0c607b8e87dd69315":"0x486cb9799191e0000","0x889da40fb1b60f9ea9bd7a453e584cf7b1b4d9f7":"0x22b1c8c1227a00000","0x889da662eb4a0a2a069d2bc24b05b4ee2e92c41b":"0x5a2c8c5456c9f28000","0x88a122a2382c523931fb51a0ccad3beb5b7259c3":"0x6c6b935b8bbd400000","0x88a2154430c0e41147d3c1fee3b3b006f851edbd":"0x36356633ebd8ea0000","0x88b217ccb786a254cf4dc57f5d9ac3c455a30483":"0x3224f42723d4540000","0x88bc43012edb0ea9f062ac437843250a39b78fbb":"0x43c33c1937564800000","0x88c2516a7cdb09a6276d7297d30f5a4db1e84b86":"0xd8d726b7177a800000","0x88c361640d6b69373b081ce0c433bd590287d5ec":"0xa968163f0a57b400000","0x88d541c840ce43cefbaf6d19af6b9859b573c145":"0x93739534d28680000","0x88de13b09931877c910d593165c364c8a1641bd3":"0xa2a15d09519be00000","0x88dec5bd3f4eba2d18b8aacefa7b721548c319ba":"0x4a4491bd6dcd280000","0x88e6f9b247f988f6c0fc14c56f1de53ec69d43cc":"0x56bc75e2d63100000","0x88ee7f0efc8f778c6b687ec32be9e7d6f020b674":"0x6c6b935b8bbd400000","0x88f1045f19f2d3191816b1df18bb6e1435ad1b38":"0xd02ab486cedc00000","0x89009e3c6488bd5e570d1da34eabe28ed024de1b":"0x43c33c1937564800000","0x89054430dcdc28ac15fa635ef87c105e602bf70c":"0x5dacd13ca9e300000","0x8908760cd39b9c1e8184e6a752ee888e3f0b7045":"0x14542ba12a337c00000","0x890fe11f3c24db8732d6c2e772e2297c7e65f139":"0xd5627137da8b5900000","0x8914a680a5aec5226d4baaec2e5552b44dd7c874":"0x56cd55fc64dfe0000","0x891cb8238c88e93a1bcf61db49bd82b47a7f4f84":"0x914878a8c05ee00000","0x8925da4549e15155e57a628522cea9dddf627d81":"0x3636c25e66ece70000","0x893017ff1adad499aa065401b4236ce6e92b625a":"0x6c6acc67d7b1d40000","0x8933491760c8f0b4df8caac78ed835caee21046d":"0x43c33c1937564800000","0x893608751d68d046e85802926673cdf2f57f7cb8":"0x11164759ffb320000","0x8938d1b4daee55a54d738cf17e4477f6794e46f7":"0xfc936392801c0000","0x893a6c2eb8b40ab096b4f67e74a897b840746e86":"0x5dc892aa1131c80000","0x893cdddf5377f3c751bf2e541120045a47cba101":"0x56bc75e2d63100000","0x895613236f3584216ad75c5d3e07e3fa6863a778":"0x6c6b935b8bbd400000","0x8957727e72cf629020f4e05edf799aa7458062d0":"0x77432217e683600000","0x895d694e880b13ccd0848a86c5ce411f88476bbf":"0xad6eedd17cf3b8000","0x895ec5545644e0b78330fffab8ddeac9e833156c":"0x2086ac351052600000","0x896009526a2c7b0c09a6f63a80bdf29d9c87de9c":"0xbbb86b8223edeb0000","0x8967d7b9bdb7b4aed22e65a15dc803cb7a213f10":"0x15af1d78b58c400000","0x896e335ca47af57962fa0f4dbf3e45e688cba584":"0x4a2fc0ab6052120000","0x8973aefd5efaee96095d9e288f6a046c97374b43":"0x7a4c4a0f332140000","0x898c72dd736558ef9e4be9fdc34fef54d7fc7e08":"0x3635c9adc5dea00000","0x899b3c249f0c4b81df75d212004d3d6d952fd223":"0x6c6b935b8bbd400000","0x89ab13ee266d779c35e8bb04cd8a90cc2103a95b":"0xcb49b44ba602d800000","0x89c433d601fad714da6369308fd26c1dc9942bbf":"0x6c6b935b8bbd400000","0x89d75b8e0831e46f80bc174188184e006fde0eae":"0x3635c9adc5dea00000","0x89e3b59a15864737d493c1d23cc53dbf8dcb1362":"0xd8d726b7177a800000","0x89fc8e4d386b0d0bb4a707edf3bd560df1ad8f4e":"0xa030dcebbd2f4c0000","0x89fee30d1728d96cecc1dab3da2e771afbcfaa41":"0x6c6acc67d7b1d40000","0x8a1cc5ac111c49bfcfd848f37dd768aa65c88802":"0x21e19e0c9bab2400000","0x8a20e5b5cee7cd1f5515bace3bf4f77ffde5cc07":"0x4563918244f400000","0x8a217db38bc35f215fd92906be42436fe7e6ed19":"0x14542ba12a337c00000","0x8a243a0a9fea49b839547745ff2d11af3f4b0522":"0x35659ef93f0fc40000","0x8a247d186510809f71cffc4559471c3910858121":"0x61093d7c2c6d380000","0x8a3470282d5e2a2aefd7a75094c822c4f5aeef8a":"0xd28bc606478a58000","0x8a36869ad478997cbf6d8924d20a3c8018e9855b":"0x1158e460913d00000","0x8a4314fb61cd938fc33e15e816b113f2ac89a7fb":"0x17764e7aed65100000","0x8a4f4a7f52a355ba105fca2072d3065fc8f7944b":"0x1b1ae4d6e2ef500000","0x8a5831282ce14a657a730dc18826f7f9b99db968":"0xeabe8a5b41c1360000","0x8a5fb75793d043f1bcd43885e037bd30a528c927":"0x13536e6d2e9ac20000","0x8a66abbc2d30ce21a833b0db8e561d5105e0a72c":"0x25f1de5c76acdf0000","0x8a746c5d67064711bfca685b95a4fe291a27028e":"0x22b1c8c1227a00000","0x8a780ab87a9145fe10ed60fa476a740af4cab1d2":"0x121b2e5e6464780000","0x8a7a06be199a3a58019d846ac9cbd4d95dd757de":"0xa2a423944256f40000","0x8a810114b2025db9fbb50099a6e0cb9e2efa6bdc":"0x678a932062e4180000","0x8a86e4a51c013b1fb4c76bcf30667c78d52eedef":"0x6c6b935b8bbd400000","0x8a9eca9c5aba8e139f8003edf1163afb70aa3aa9":"0x23c757072b8dd00000","0x8ab839aeaf2ad37cb78bacbbb633bcc5c099dc46":"0x6c6b935b8bbd400000","0x8ac89bd9b8301e6b0677fa25fcf0f58f0cc7b611":"0x1158e460913d00000","0x8adc53ef8c18ed3051785d88e996f3e4b20ecd51":"0x8e4d316827686400000","0x8ae6f80b70e1f23c91fbd5a966b0e499d95df832":"0xaadec983fcff40000","0x8ae9ef8c8a8adfa6ab798ab2cdc405082a1bbb70":"0x6c6b935b8bbd400000","0x8af626a5f327d7506589eeb7010ff9c9446020d2":"0x4be4e7267b6ae00000","0x8b01da34d470c1d115acf4d8113c4dd8a8c338e4":"0x5572dcefab697900000","0x8b07d050754dc9ba230db01c310afdb5395aa1b3":"0x666b06e62a6200000","0x8b20ad3b94656dbdc0dd21a393d8a7d9e02138cb":"0xa2a15d09519be00000","0x8b27392206b958cd375d7ef8af2cf8ef0598c0bc":"0x3635c9adc5dea00000","0x8b30c04098d7a7e6420c357ea7bfa49bac9a8a18":"0x1b1b113f91fb0140000","0x8b338411f26ccf37658cc75521d77629099e467d":"0x6c6b935b8bbd400000","0x8b36224c7356e751f0c066c35e3b44860364bfc2":"0x3627bac7a3d9278000","0x8b3696f3c60de32432a2e4c395ef0303b7e81e75":"0x65a4da25d3016c00000","0x8b393fb0813ee101db1e14ecc7d322c72b8c0473":"0x18b26a313e8ae90000","0x8b48e19d39dd35b66e6e1bb6b9c657cb2cf59d04":"0x3c755ac9c024a018000","0x8b505e2871f7deb7a63895208e8227dcaa1bff05":"0xcf68efc308d79bc0000","0x8b57b2bc83cc8d4de331204e893f2f3b1db1079a":"0x22b1c8c1227a00000","0x8b5c914b128bf1695c088923fa467e7911f351fa":"0x556f64c1fe7fa0000","0x8b5f29cc2faa262cdef30ef554f50eb488146eac":"0x13b68705c9720810000","0x8b7056f6abf3b118d026e944d5c073433ca451d7":"0x3635c6204739d98000","0x8b714522fa2839620470edcf0c4401b713663df1":"0xad78ebc5ac6200000","0x8b74a7cb1bb8c58fce267466a30358adaf527f61":"0x2e257784e25b4500000","0x8b7e9f6f05f7e36476a16e3e7100c9031cf404af":"0x3635c9adc5dea00000","0x8b81156e698639943c01a75272ad3d35851ab282":"0x12b3165f65d3e50000","0x8b9577920053b1a00189304d888010d9ef2cb4bf":"0x1b1ae4d6e2ef500000","0x8b9841862e77fbbe919470935583a93cf027e450":"0x6c6c5334427f1f0000","0x8b997dbc078ad02961355da0a159f2927ed43d64":"0xaadec983fcff40000","0x8b9fda7d981fe9d64287f85c94d83f9074849fcc":"0x2f6f10780d22cc00000","0x8bb0212f3295e029cab1d961b04133a1809e7b91":"0x6c6b935b8bbd400000","0x8bbeacfc29cfe93402db3c41d99ab759662e73ec":"0x6c6b935b8bbd400000","0x8bc1ff8714828bf286ff7e8a7709106548ed1b18":"0x21e19e0c9bab2400000","0x8bd0b65a50ef5cef84fec420be7b89ed1470ceb9":"0x28a77936e92c81c0000","0x8bd6b1c6d74d010d1008dba6ef835d4430b35c32":"0x2b5e3af16b1880000","0x8bd8d4c4e943f6c8073921dc17e3e8d7a0761627":"0x9f04219d8d34950000","0x8bdfda6c215720eda2136f91052321af4e936c1f":"0x3635e619bb04d40000","0x8bea40379347a5c891d59a6363315640f5a7e07a":"0x6c6b76ef96970c0000","0x8bf02bd748690e1fd1c76d270833048b66b25fd3":"0x27fade568eba9600000","0x8bf297f8f453523ed66a1acb7676856337b93bf0":"0xd8d726b7177a800000","0x8bf373d076814cbc57e1c6d16a82c5be13c73d37":"0xad78ebc5ac6200000","0x8c1023fde1574db8bb54f1739670157ca47da652":"0x179cf9ac3a1b1770000","0x8c1fbe5f0aea359c5aa1fa08c8895412ca8e05a6":"0x3635c9adc5dea00000","0x8c22426055b76f11f0a2de1a7f819a619685fe60":"0x6b56051582a9700000","0x8c2b7d8b608d28b77f5caa9cd645242a823e4cd9":"0x62a992e53a0af00000","0x8c2fbeee8eacc5c5d77c16abd462ee9c8145f34b":"0x692ae8897081d00000","0x8c3a9ee71f729f236cba3867b4d79d8ceee25dbc":"0x56bc75e2d63100000","0x8c50aa2a9212bcde56418ae261f0b35e7a9dbb82":"0x15af1d78b58c400000","0x8c54c7f8b9896e75d7d5f5c760258699957142ad":"0x22b1c8c1227a00000","0x8c5d16ed65e3ed7e8b96ca972bc86173e3500b03":"0x6c6b935b8bbd400000","0x8c6aa882ee322ca848578c06cb0fa911d3608305":"0x2086ac351052600000","0x8c6ae7a05a1de57582ae2768204276c0ff47ed03":"0x2c0bb3dd30c4e2000000","0x8c6f9f4e5b7ae276bf58497bd7bf2a7d25245f64":"0x93fe5c57d710680000","0x8c75956e8fed50f5a7dd7cfd27da200f6746aea6":"0x3635c9adc5dea00000","0x8c7cb4e48b25031aa1c4f92925d631a8c3edc761":"0x3635c9adc5dea00000","0x8c7fa5cae82fedb69ab189d3ff27ae209293fb93":"0x15af880d8cdb830000","0x8c81410ea8354cc5c65c41be8bd5de733c0b111d":"0x205b4dfa1ee74780000","0x8c83d424a3cf24d51f01923dd54a18d6b6fede7b":"0xd8d726b7177a800000","0x8c900a8236b08c2b65405d39d75f20062a7561fd":"0x58e7926ee858a00000","0x8c93c3c6db9d37717de165c3a1b4fe51952c08de":"0x15af1d78b58c400000","0x8c999591fd72ef7111efca7a9e97a2356b3b000a":"0xdd64e2aa0a67500000","0x8ca6989746b06e32e2487461b1ce996a273acfd7":"0x1158e460913d00000","0x8cb3aa3fcd212854d7578fcc30fdede6742a312a":"0x1043561a8829300000","0x8cc0d7c016fa7aa950114aa1db094882eda274ea":"0x8a9aba557e36c0000","0x8cc652dd13e7fe14dabbb36d5d320db9ffee8a54":"0x61093d7c2c6d380000","0x8ccabf25077f3aa41545344d53be1b2b9c339000":"0x5be866c562c5440000","0x8ccf3aa21ab742576ad8c422f71bb188591dea8a":"0x3635c9adc5dea00000","0x8cd0cd22e620eda79c0461e896c93c44837e2968":"0x6c6b935b8bbd400000","0x8cde8b732e6023878eb23ed16229124b5f7afbec":"0x73f75d1a085ba0000","0x8ce22f9fa372449a420610b47ae0c8d565481232":"0x6c6b935b8bbd400000","0x8ce4949d8a16542d423c17984e6739fa72ceb177":"0x54b405926f4a63d8000","0x8ce5e3b5f591d5eca38abf228f2e3c35134bdac0":"0x7dc35b84897c380000","0x8cee38d6595788a56e3fb94634b3ffe1fbdb26d6":"0x43c33c1937564800000","0x8ceea15eec3bdad8023f98ecf25b2b8fef27db29":"0x6c6b935b8bbd400000","0x8cf3546fd1cda33d58845fc8fcfecabca7c5642a":"0x1f1e39932cb3278000","0x8cf6da0204dbc4860b46ad973fc111008d9e0c46":"0xad78ebc5ac6200000","0x8cfedef198db0a9143f09129b3fd64dcbb9b4956":"0x6c6b935b8bbd400000","0x8d04a5ebfb5db409db0617c9fa5631c192861f4a":"0x34957444b840e80000","0x8d06e464245cad614939e0af0845e6d730e20374":"0xadc8a28f3d87d8000","0x8d07d42d831c2d7c838aa1872b3ad5d277176823":"0x12ee1f9ddbee680000","0x8d0b9ea53fd263415eac11391f7ce9123c447062":"0x6c6b935b8bbd400000","0x8d1794da509cb297053661a14aa892333231e3c1":"0xad201a6794ff80000","0x8d1abd897dacd4312e18080c88fb9647eab44052":"0xbb59a27953c600000","0x8d2303341e1e1eb5e8189bde03f73a60a2a54861":"0x56bc75e2d63100000","0x8d238e036596987643d73173c37b0ad06055b96c":"0x7148bf0a2af0660000","0x8d2e31b08803b2c5f13d398ecad88528209f6057":"0x21db8bbcad11e840000","0x8d378f0edc0bb0f0686d6a20be6a7692c4fa24b8":"0x56bc75e2d63100000","0x8d4b603c5dd4570c34669515fdcc665890840c77":"0xfc936392801c0000","0x8d51a4cc62011322c696fd725b9fb8f53feaaa07":"0x3635c9adc5dea00000","0x8d544c32c07fd0842c761d53a897d6c950bb7599":"0xad78ebc5ac6200000","0x8d5ef172bf77315ea64e85d0061986c794c6f519":"0xd5967be4fc3f100000","0x8d616b1eee77eef6f176e0698db3c0c141b2fc8f":"0x1b1ae4d6e2ef500000","0x8d6170ff66978e773bb621bf72b1ba7be3a7f87e":"0xad78ebc5ac6200000","0x8d620bde17228f6cbba74df6be87264d985cc179":"0x56bc75e2d63100000","0x8d629c20608135491b5013f1002586a0383130e5":"0x4a4491bd6dcd280000","0x8d6657f59711b1f803c6ebef682f915b62f92dc9":"0x6c6b935b8bbd400000","0x8d667637e29eca05b6bfbef1f96d460eefbf9984":"0xd8d726b7177a800000","0x8d6df209484d7b94702b03a53e56b9fb0660f6f0":"0x6c6b935b8bbd400000","0x8d795c5f4a5689ad62da961671f028065286d554":"0x6f05b59d3b20000000","0x8d7f3e61299c2db9b9c0487cf627519ed00a9123":"0x5e74a8505e80a00000","0x8d89170b92b2be2c08d57c48a7b190a2f146720f":"0x42bf06b78ed3b500000","0x8d93dac785f88f1a84bf927d53652b45a154ccdd":"0x890b0c2e14fb80000","0x8d9952d0bb4ebfa0efd01a3aa9e8e87f0525742e":"0xbb9125542263900000","0x8d9a0c70d2262042df1017d6c303132024772712":"0x6c6b935b8bbd400000","0x8d9ed7f4553058c26f7836a3802d3064eb1b363d":"0x4e1003b28d9280000","0x8da1178f55d97772bb1d24111a404a4f8715b95d":"0x2f9ac3f6de00808000","0x8da1d359ba6cb4bcc57d7a437720d55db2f01c72":"0x4563918244f400000","0x8dab948ae81da301d972e3f617a912e5a753712e":"0x15af1d78b58c400000","0x8daddf52efbd74da95b969a5476f4fbbb563bfd2":"0x2d43f3ebfafb2c0000","0x8db185fe1b70a94a6a080e7e23a8bedc4acbf34b":"0x4be4e7267b6ae00000","0x8db58e406e202df9bc703c480bd8ed248d52a032":"0x6c6b935b8bbd400000","0x8dbc3e6cb433e194f40f82b40faadb1f8b856116":"0x678a932062e4180000","0x8dc1d5111d09af25fdfcac455c7cec283e6d6775":"0x6c6b935b8bbd400000","0x8dd484ff8a307364eb66c525a571aac701c5c318":"0xd8d726b7177a800000","0x8dd6a9bae57f518549ada677466fea8ab04fd9b4":"0xd8d726b7177a800000","0x8dde3cb8118568ef4503fe998ccdf536bf19a098":"0xd8d726b7177a800000","0x8dde60eb08a099d7daa356daaab2470d7b025a6b":"0xaadec983fcff40000","0x8df339214b6ad1b24663ce716034749d6ef838d9":"0x2544faa778090e00000","0x8df53d96191471e059de51c718b983e4a51d2afd":"0x6c6b935b8bbd4000000","0x8dfbafbc0e5b5c86cd1ad697feea04f43188de96":"0x15252b7f5fa0de0000","0x8e073bad25e42218615f4a0e6b2ea8f8de2230c0":"0x823d629d026bfa0000","0x8e0fee38685a94aabcd7ce857b6b1409824f75b8":"0x1b1ae4d6e2ef500000","0x8e23facd12c765c36ab81a6dd34d8aa9e68918ae":"0x911e4868dba9b0000","0x8e2f9034c9254719c38e50c9aa64305ed696df1e":"0x1004e2e45fb7ee00000","0x8e3240b0810e1cf407a500804740cf8d616432a4":"0x22f6655ef0b388000","0x8e486a0442d171c8605be348fee57eb5085eff0d":"0xd8d726b7177a800000","0x8e6156336be2cdbe32140df08a2ba55fd0a58463":"0x4099e1d6357180000","0x8e670815fb67aeaea57b86534edc00cdf564fee5":"0xb2e4b323d9c5100000","0x8e6d7485cbe990acc1ad0ee9e8ccf39c0c93440e":"0x33c5499031720c0000","0x8e74e0d1b77ebc823aca03f119854cb12027f6d7":"0x16b352da5e0ed3000000","0x8e78f351457d016f4ad2755ec7424e5c21ba6d51":"0x7ea28327577080000","0x8e7936d592008fdc7aa04edeeb755ab513dbb89d":"0x1158e460913d00000","0x8e7fd23848f4db07906a7d10c04b21803bb08227":"0x3635c9adc5dea00000","0x8e92aba38e72a098170b92959246537a2e5556c0":"0xe7eeba3410b740000","0x8e98766524b0cf2747c50dd43b9567594d9731de":"0x6c44b7c26182280000","0x8e9b35ad4a0a86f758446fffde34269d940ceacd":"0xd8d726b7177a800000","0x8e9c08f738661f9676236eff82ba6261dd3f4822":"0x56bc75e2d63100000","0x8e9c429266df057efa78dd1d5f77fc40742ad466":"0x10442ed1b56c7c8000","0x8ea656e71ec651bfa17c5a5759d86031cc359977":"0x56bc75e2d63100000","0x8eae29435598ba8f1c93428cdb3e2b4d31078e00":"0x6c6b935b8bbd400000","0x8eb1fbe4e5d3019cd7d30dae9c0d5b4c76fb6331":"0x6c6b935b8bbd400000","0x8eb51774af206b966b8909c45aa6722748802c0c":"0x1b1ae4d6e2ef500000","0x8eb8c71982a00fb84275293253f8044544b66b49":"0x15af1d78b58c400000","0x8ecbcfacbfafe9f00c3922a24e2cf0026756ca20":"0x131beb925ffd3200000","0x8eceb2e124536c5b5ffc640ed14ff15ed9a8cb71":"0x6c6b935b8bbd400000","0x8ed0af11ff2870da0681004afe18b013f7bd3882":"0xd8d726b7177a800000","0x8ed143701f2f72280fd04a7b4164281979ea87c9":"0xc249fdd327780000","0x8ed1528b447ed4297902f639c514d0944a88f8c8":"0xac6e77ab663a80000","0x8ed4284c0f47449c15b8d9b3245de8beb6ce80bf":"0x2b5e3af16b18800000","0x8ede7e3dc50749c6c50e2e28168478c34db81946":"0x43c30fb0884a96c0000","0x8ee584337ddbc80f9e3498df55f0a21eacb57fb1":"0x1158e460913d00000","0x8eebec1a62c08b05a7d1d59180af9ff0d18e3f36":"0x1b1ae4d6e2ef500000","0x8ef4d8a2c23c5279187b64e96f741404085385f3":"0x103dc1e9a9697b0000","0x8ef711e43a13918f1303e81d0ea78c9eefd67eb2":"0xd8d726b7177a800000","0x8efec058cc546157766a632775404a334aaada87":"0x6c5db2a4d815dc0000","0x8f02bda6c36922a6be6a509be51906d393f7b99b":"0x37490dc12ebe7f8000","0x8f0538ed71da1155e0f3bde5667ceb84318a1a87":"0x692ae8897081d00000","0x8f067c7c1bbd57780b7b9eeb9ec0032f90d0dcf9":"0x43c33c1937564800000","0x8f0ab894bd3f4e697dbcfb859d497a9ba195994a":"0x85d638b65472aa20000","0x8f0af37566d152802f1ae8f928b25af9b139b448":"0xad78ebc5ac6200000","0x8f1952eed1c548d9ee9b97d0169a07933be69f63":"0x3635c9adc5dea00000","0x8f1fcc3c51e252b693bc5b0ec3f63529fe69281e":"0x14542ba12a337c00000","0x8f226096c184ebb40105e08dac4d22e1c2d54d30":"0x109e437bd1618c0000","0x8f29a14a845ad458f2d108b568d813166bcdf477":"0x21e19e0c9bab2400000","0x8f31c7005197ec997a87e69bec48649ab94bb2a5":"0xd8d726b7177a800000","0x8f41b1fbf54298f5d0bc2d122f4eb95da4e5cd3d":"0x1333832f5e335c0000","0x8f47328ee03201c9d35ed2b5412b25decc859362":"0x6c6b935b8bbd400000","0x8f473d0ab876ddaa15608621d7013e6ff714b675":"0x19801c83b6c7c00000","0x8f4d1d41693e462cf982fd81d0aa701d3a5374c9":"0xd8d726b7177a800000","0x8f4d1e7e4561284a34fef9673c0d34e12af4aa03":"0x6c6b935b8bbd400000","0x8f4fb1aea7cd0f570ea5e61b40a4f4510b6264e4":"0xd8d726b7177a800000","0x8f561b41b209f248c8a99f858788376250609cf3":"0x5c283d410394100000","0x8f58d8348fc1dc4e0dd8343b6543c857045ee940":"0x2e3038df47303280000","0x8f60895fbebbb5017fcbff3cdda397292bf25ba6":"0x174406ff9f6fd28000","0x8f64b9c1246d857831643107d355b5c75fef5d4f":"0x6c6acc67d7b1d40000","0x8f660f8b2e4c7cc2b4ac9c47ed28508d5f8f8650":"0x43c33c1937564800000","0x8f69eafd0233cadb4059ab779c46edf2a0506e48":"0x60f06620a849450000","0x8f717ec1552f4c440084fba1154a81dc003ebdc0":"0x21e19e0c9bab2400000","0x8f8acb107607388479f64baaabea8ff007ada97d":"0x5c6f3080ad423f40000","0x8f8cd26e82e7c6defd02dfad07979021cbf7150c":"0xa2a15d09519be00000","0x8f8f37d0ad8f335d2a7101b41156b688a81a9cbe":"0x3cb71f51fc5580000","0x8f92844f282a92999ee5b4a8d773d06b694dbd9f":"0x692ae8897081d00000","0x8fac748f784a0fed68dba43319b42a75b4649c6e":"0x3154c9729d05780000","0x8fd9a5c33a7d9edce0997bdf77ab306424a11ea9":"0x6c6b935b8bbd400000","0x8feffadb387a1547fb284da9b8147f3e7c6dc6da":"0x2d627be45305080000","0x8ff46045687723dc33e4d099a06904f1ebb584dc":"0x6c6b935b8bbd400000","0x8ffa062122ac307418821adb9311075a3703bfa3":"0x3635c9adc5dea00000","0x8ffe322997b8e404422d19c54aadb18f5bc8e9b7":"0xd5967be4fc3f100000","0x900194c4b1074305d19de405b0ac78280ecaf967":"0x3635c9adc5dea00000","0x9003d270891ba2df643da8341583193545e3e000":"0xd8d726b7177a800000","0x90057af9aa66307ec9f033b29724d3b2f41eb6f9":"0x19d1d6aadb2c52e80000","0x900f0b8e35b668f81ef252b13855aa5007d012e7":"0x170a0f5040e5040000","0x9018cc1f48d2308e252ab6089fb99a7c1d569410":"0xad78ebc5ac6200000","0x901d99b699e5c6911519cb2076b4c76330c54d22":"0x6c6b935b8bbd400000","0x902d74a157f7d2b9a3378b1f56703730e03a1719":"0xd8d726b7177a800000","0x903413878aea3bc1086309a3fe768b65559e8cab":"0x1b1ae4d6e2ef5000000","0x904966cc2213b5b8cb5bd6089ef9cddbef7edfcc":"0x6c6b935b8bbd400000","0x904caa429c619d940f8e6741826a0db692b19728":"0x3635c9adc5dea00000","0x9052f2e4a3e3c12dd1c71bf78a4ec3043dc88b7e":"0xe7eeba3410b740000","0x905526568ac123afc0e84aa715124febe83dc87c":"0xf8699329677e0000","0x9092918707c621fdbd1d90fb80eb787fd26f7350":"0x855b5ba65c84f00000","0x909b5e763a39dcc795223d73a1dbb7d94ca75ac8":"0x6c6b935b8bbd400000","0x90acced7e48c08c6b934646dfa0adf29dc94074f":"0x30b4b157bbd490000","0x90b1f370f9c1eb0be0fb8e2b8ad96a416371dd8a":"0x30ca024f987b900000","0x90b62f131a5f29b45571513ee7a74a8f0b232202":"0x890b0c2e14fb80000","0x90bd62a050845261fa4a9f7cf241ea630b05efb8":"0x1b1ae4d6e2ef500000","0x90c41eba008e20cbe927f346603fc88698125969":"0x246ddf97976680000","0x90d2809ae1d1ffd8f63eda01de49dd552df3d1bc":"0xd8bb6549b02bb80000","0x90dc09f717fc2a5b69fd60ba08ebf40bf4e8246c":"0xd8d8583fa2d52f0000","0x90e300ac71451e401f887f6e7728851647a80e07":"0x15af1d78b58c400000","0x90e35aabb2deef408bb9b5acef714457dfde6272":"0x56cd55fc64dfe0000","0x90e7070f4d033fe6910c9efe5a278e1fc6234def":"0x571380819b3040000","0x90e93e4dc17121487952333614002be42356498e":"0x678a932062e4180000","0x90e9a9a82edaa814c284d232b6e9ba90701d4952":"0x56be03ca3e47d8000","0x90f774c9147dde90853ddc43f08f16d455178b8c":"0xd8d726b7177a800000","0x90fc537b210658660a83baa9ac4a8402f65746a8":"0x65ea3db75546600000","0x91050a5cffadedb4bb6eaafbc9e5013428e96c80":"0x5c283d410394100000","0x91051764af6b808e4212c77e30a5572eaa317070":"0x3635c9adc5dea00000","0x910b7d577a7e39aa23acf62ad7f1ef342934b968":"0x21e19e0c9bab2400000","0x910e996543344c6815fb97cda7af4b8698765a5b":"0x59af69829cf640000","0x911feea61fe0ed50c5b9e5a0d66071399d28bdc6":"0x340aad21b3b700000","0x911ff233e1a211c0172c92b46cf997030582c83a":"0x6acb3df27e1f880000","0x9120e71173e1ba19ba8f9f4fdbdcaa34e1d6bb78":"0x6c6b935b8bbd400000","0x91211712719f2b084d3b3875a85069f466363141":"0x3635c9adc5dea00000","0x912304118b80473d9e9fe3ee458fbe610ffda2bb":"0xad78ebc5ac6200000","0x91546b79ecf69f936b5a561508b0d7e50cc5992f":"0xe7eeba3410b740000","0x9156d18029350e470408f15f1aa3be9f040a67c6":"0x3635c9adc5dea00000","0x91620f3eb304e813d28b0297556d65dc4e5de5aa":"0xcf152640c5c8300000","0x916bf7e3c545921d3206d900c24f14127cbd5e70":"0x3d0ddbc7df2bb100000","0x916cf17d71412805f4afc3444a0b8dd1d9339d16":"0xc673ce3c40160000","0x917b8f9f3a8d09e9202c52c29e724196b897d35e":"0x8ba52e6fc45e40000","0x918967918cd897dd0005e36dc6c883ef438fc8c7":"0x796e3ea3f8ab00000","0x91898eab8c05c0222883cd4db23b7795e1a24ad7":"0x6c6b935b8bbd400000","0x9191f94698210516cf6321a142070e20597674ed":"0xee9d5be6fc110000","0x91a4149a2c7b1b3a67ea28aff34725e0bf8d7524":"0x692ae8897081d00000","0x91a787bc5196f34857fe0c372f4df376aaa76613":"0x6c6b935b8bbd400000","0x91a8baaed012ea2e63803b593d0d0c2aab4c5b0a":"0x5150ae84a8cdf00000","0x91ac5cfe67c54aa7ebfba448666c461a3b1fe2e1":"0x15c93492bf9dfc0000","0x91bb3f79022bf3c453f4ff256e269b15cf2c9cbd":"0x52585c13fe3a5c0000","0x91c75e3cb4aa89f34619a164e2a47898f5674d9c":"0x6c6b935b8bbd400000","0x91c80caa081b38351d2a0e0e00f80a34e56474c1":"0x3635c9adc5dea00000","0x91cc46aa379f856a6640dccd5a648a7902f849d9":"0xad78ebc5ac6200000","0x91d2a9ee1a6db20f5317cca7fbe2313895db8ef8":"0x1ccc3a52f306e280000","0x91d66ea6288faa4b3d606c2aa45c7b6b8a252739":"0x6c6b935b8bbd400000","0x91dbb6aaad149585be47375c5d6de5ff09191518":"0x43c33c1937564800000","0x91e8810652e8e6161525d63bb7751dc20f676076":"0x274d656ac90e340000","0x91f516146cda20281719978060c6be4149067c88":"0x6c6b935b8bbd400000","0x91f624b24a1fa5a056fe571229e7379db14b9a1e":"0x28a8517c669b3570000","0x91fe8a4c6164df8fa606995d6ba7adcaf1c893ce":"0x39992648a23c8a00000","0x921f5261f4f612760706892625c75e7bce96b708":"0x6c6b935b8bbd400000","0x9221c9ce01232665741096ac07235903ad1fe2fc":"0x6db63335522628000","0x9225983860a1cb4623c72480ac16272b0c95e5f5":"0x6c6b935b8bbd400000","0x9225d46a5a80943924a39e5b84b96da0ac450581":"0x878678326eac9000000","0x922a20c79a1d3a26dd3829677bf1d45c8f672bb6":"0xd8d726b7177a800000","0x92438e5203b6346ff886d7c36288aacccc78ceca":"0x3635c9adc5dea00000","0x9243d7762d77287b12638688b9854e88a769b271":"0x3635c9adc5dea00000","0x924bce7a853c970bb5ec7bb759baeb9c7410857b":"0xbe202d6a0eda0000","0x924efa6db595b79313277e88319625076b580a10":"0x6c6b935b8bbd400000","0x92558226b384626cad48e09d966bf1395ee7ea5d":"0x121ea68c114e510000","0x926082cb7eed4b1993ad245a477267e1c33cd568":"0x144a74badfa4b60000","0x926209b7fda54e8ddb9d9e4d3d19ebdc8e88c29f":"0x6c6b935b8bbd400000","0x9268d62646563611dc3b832a30aa2394c64613e3":"0x6c6b935b8bbd400000","0x92698e345378c62d8eda184d94366a144b0c105b":"0x4be4e7267b6ae00000","0x92793ac5b37268774a7130de2bbd330405661773":"0x22ca3587cf4eb0000","0x9279b2228cec8f7b4dda3f320e9a0466c2f585ca":"0x10f0cf064dd59200000","0x927cb7dc187036b5427bc7e200c5ec450c1d27d4":"0xbb59a27953c600000","0x927cc2bfda0e088d02eff70b38b08aa53cc30941":"0x646f60a1f986360000","0x9284f96ddb47b5186ee558aa31324df5361c0f73":"0x3635c9adc5dea000000","0x929d368eb46a2d1fbdc8ffa0607ede4ba88f59ad":"0x6c6b935b8bbd400000","0x92a7c5a64362e9f842a23deca21035857f889800":"0x6c6acc67d7b1d40000","0x92a898d46f19719c38126a8a3c27867ae2cee596":"0x6c6b935b8bbd400000","0x92a971a739799f8cb48ea8475d72b2d2474172e6":"0xd5967be4fc3f100000","0x92aae59768eddff83cfe60bb512e730a05a161d7":"0x5c9778410c76d18000","0x92ad1b3d75fba67d54663da9fc848a8ade10fa67":"0x6c6b935b8bbd400000","0x92ae5b7c7eb492ff1ffa16dd42ad9cad40b7f8dc":"0x2ee449550898e40000","0x92c0f573eccf62c54810ee6ba8d1f113542b301b":"0xb7726f16ccb1e00000","0x92c13fe0d6ce87fd50e03def9fa6400509bd7073":"0x22b1c8c1227a00000","0x92c94c2820dfcf7156e6f13088ece7958b3676fd":"0x52d542804f1ce0000","0x92cfd60188efdfb2f8c2e7b1698abb9526c1511f":"0x6c6b935b8bbd400000","0x92d8ad9a4d61683b80d4a6672e84c20d62421e80":"0x1158e460913d00000","0x92dca5e102b3b81b60f1a504634947c374a88ccb":"0x6c6b935b8bbd400000","0x92e435340e9d253c00256389f52b067d55974e76":"0xe873f44133cb00000","0x92e4392816e5f2ef5fb65837cec2c2325cc64922":"0x21e19e0c9bab2400000","0x92e6581e1da1f9b846e09347333dc818e2d2ac66":"0xc55325ca7415e00000","0x931df34d1225bcd4224e63680d5c4c09bce735a6":"0x3afb087b876900000","0x931fe712f64207a2fd5022728843548bfb8cbb05":"0x6c6b935b8bbd400000","0x93235f340d2863e18d2f4c52996516138d220267":"0x4002e44fda7d40000","0x93258255b37c7f58f4b10673a932dd3afd90f4f2":"0x3635c9adc5dea00000","0x9328d55ccb3fce531f199382339f0e576ee840a3":"0xd8d726b7177a800000","0x9329ffdc268babde8874b366406c81445b9b2d35":"0x16e62f8c730ca18000","0x932b9c04d40d2ac83083d94298169dae81ab2ed0":"0x6c6b935b8bbd400000","0x933436c8472655f64c3afaaf7c4c621c83a62b38":"0x3635c9adc5dea00000","0x933bf33f8299702b3a902642c33e0bfaea5c1ca3":"0xd2f13f7789f00000","0x9340345ca6a3eabdb77363f2586043f29438ce0b":"0x1cc805da0dfff10000","0x9340b5f678e45ee05eb708bb7abb6ec8f08f1b6b":"0x14542ba12a337c00000","0x934af21b7ebfa467e2ced65aa34edd3a0ec71332":"0x7801f3e80cc0ff00000","0x935069444a6a984de2084e46692ab99f671fc727":"0x1e7e4171bf4d3a00000","0x93507e9e8119cbceda8ab087e7ecb071383d6981":"0x2f6f10780d22cc00000","0x93678a3c57151aeb68efdc43ef4d36cb59a009f3":"0x1a12a92bc3c3e0000","0x936dcf000194e3bff50ac5b4243a3ba014d661d8":"0x21e19e0c9bab2400000","0x936f3813f5f6a13b8e4ffec83fe7f826186a71cd":"0x1c30731cec03200000","0x9374869d4a9911ee1eaf558bc4c2b63ec63acfdd":"0x3635c9adc5dea00000","0x937563d8a80fd5a537b0e66d20a02525d5d88660":"0x878678326eac900000","0x9376dce2af2ec8dcda741b7e7345664681d93668":"0x3635c9adc5dea00000","0x93868ddb2a794d02ebda2fa4807c76e3609858dc":"0x6dee15fc7c24a78000","0x939c4313d2280edf5e071bced846063f0a975d54":"0x1969368974c05b000000","0x93a6b3ab423010f981a7489d4aad25e2625c5741":"0x44680fe6a1ede4e8000","0x93aa8f92ebfff991fc055e906e651ac768d32bc8":"0x32f51edbaaa3300000","0x93b4bf3fdff6de3f4e56ba6d7799dc4b93a6548f":"0x10910d4cdc9f60000","0x93bc7d9a4abd44c8bbb8fe8ba804c61ad8d6576c":"0xd8d6119a8146050000","0x93c2e64e5de5589ed25006e843196ee9b1cf0b3e":"0x5a87e7d7f5f6580000","0x93c88e2d88621e30f58a9586bed4098999eb67dd":"0x69b5afac750bb800000","0x93e0f37ecdfb0086e3e862a97034447b1e4dec1a":"0x1a055690d9db80000","0x93e303411afaf6c107a44101c9ac5b36e9d6538b":"0xdf9ddfecd0365400000","0x93f18cd2526040761488c513174d1e7963768b2c":"0x82ffac9ad593720000","0x940f715140509ffabf974546fab39022a41952d2":"0x4be4e7267b6ae00000","0x942c6b8c955bc0d88812678a236725b32739d947":"0x54069233bf7f780000","0x943d37864a4a537d35c8d99723cd6406ce2562e6":"0x6c6b935b8bbd400000","0x94439ca9cc169a79d4a09cae5e67764a6f871a21":"0xd02ab486cedc00000","0x94449c01b32a7fa55af8104f42cdd844aa8cbc40":"0x38111a1f4f03c100000","0x9445ba5c30e98961b8602461d0385d40fbd80311":"0x21e19e0c9bab2400000","0x944f07b96f90c5f0d7c0c580533149f3f585a078":"0x402f4cfee62e80000","0x9454b3a8bff9709fd0e190877e6cb6c89974dbd6":"0x90f534608a72880000","0x945d96ea573e8df7262bbfa572229b4b16016b0f":"0xb589ef914c1420000","0x945e18769d7ee727c7013f92de24d117967ff317":"0x6c6b935b8bbd400000","0x94612781033b57b146ee74e753c672017f5385e4":"0xc328093e61ee400000","0x94644ad116a41ce2ca7fbec609bdef738a2ac7c7":"0x10f0cf064dd59200000","0x9470cc36594586821821c5c996b6edc83b6d5a32":"0x14d1120d7b1600000","0x9475c510ec9a26979247744c3d8c3b0e0b5f44d3":"0x21e19e0c9bab2400000","0x947e11e5ea290d6fc3b38048979e0cd44ec7c17f":"0x6c6b935b8bbd400000","0x9483d98f14a33fdc118d403955c29935edfc5f70":"0x18ea3b34ef51880000","0x949131f28943925cfc97d41e0cea0b262973a730":"0x97c9ce4cf6d5c00000","0x949f84f0b1d7c4a7cf49ee7f8b2c4a134de32878":"0x252248deb6e6940000","0x949f8c107bc7f0aceaa0f17052aadbd2f9732b2e":"0x6c6b935b8bbd400000","0x94a7cda8f481f9d89d42c303ae1632b3b709db1d":"0x1043561a8829300000","0x94a9a71691317c2064271b51c9353fbded3501a8":"0xb50fcfafebecb00000","0x94ad4bad824bd0eb9ea49c58cebcc0ff5e08346b":"0x692ae8897081d00000","0x94bbc67d13f89ebca594be94bc5170920c30d9f3":"0x458ffa3150a540000","0x94be3ae54f62d663b0d4cc9e1ea8fe9556ea9ebf":"0x143132ca843180000","0x94c055e858357aaa30cf2041fa9059ce164a1f91":"0x43c25e0dcc1bd1c0000","0x94c742fd7a8b7906b3bfe4f8904fc0be5c768033":"0x43c33c1937564800000","0x94ca56de777fd453177f5e0694c478e66aff8a84":"0x1b1ae4d6e2ef500000","0x94d81074db5ae197d2bb1373ab80a87d121c4bd3":"0x1fd933494aa5fe00000","0x94db807873860aac3d5aea1e885e52bff2869954":"0xae8e7a0bb575d00000","0x94e1f5cb9b8abace03a1a6428256553b690c2355":"0x1158e460913d00000","0x94ef8be45077c7d4c5652740de946a62624f713f":"0x56cf5593a18f88000","0x94f13f9f0836a3ee2437a84922d2984dc0f7d53b":"0xa2a0329bc38abe0000","0x94f8f057db7e60e675ad940f155885d1a477348e":"0x15be6174e1912e0000","0x94fcceadfe5c109c5eaeaf462d43873142c88e22":"0x1043561a88293000000","0x95034e1621865137cd4739b346dc17da3a27c34e":"0x55a6e79ccd1d300000","0x950c68a40988154d2393fff8da7ccda99614f72c":"0xf94146fd8dcde58000","0x950fe9c6cad50c18f11a9ed9c45740a6180612d0":"0x1b1ae4d6e2ef5000000","0x952183cfd38e352e579d36decec5b18450f7fba0":"0x6c6b935b8bbd400000","0x95278b08dee7c0f2c8c0f722f9fcbbb9a5241fda":"0x829309f64f0db00000","0x952c57d2fb195107d4cd5ca300774119dfad2f78":"0x6c6b935b8bbd400000","0x953572f0ea6df9b197cae40e4b8ecc056c4371c5":"0x3635c9adc5dea00000","0x953ef652e7b769f53d6e786a58952fa93ee6abe7":"0x9b0a791f1211300000","0x95447046313b2f3a5e19b948fd3b8bedc82c717c":"0x1b1ae4d6e2ef500000","0x955db3b74360b9a268677e73cea821668af6face":"0x65a4da25d3016c00000","0x9560e8ac6718a6a1cdcff189d603c9063e413da6":"0xd8d726b7177a800000","0x9567a0de811de6ff095b7ee64e7f1b83c2615b80":"0xe7eeba3410b740000","0x95681cdae69b2049ce101e325c759892cac3f811":"0x9ae92a9bc94c400000","0x9568b7de755628af359a84543de23504e15e41e6":"0x878678326eac9000000","0x9569c63a9284a805626db3a32e9d236393476151":"0x6acb3df27e1f880000","0x95809e8da3fbe4b7f281f0b8b1715f420f7d7d63":"0x6c6b935b8bbd400000","0x959f57fded6ae37913d900b81e5f48a79322c627":"0xddb26104749118000","0x959ff17f1d51b473b44010052755a7fa8c75bd54":"0x6acb3df27e1f880000","0x95a577dc2eb3ae6cb9dfc77af697d7efdfe89a01":"0x75f610f70ed200000","0x95cb6d8a6379f94aba8b885669562c4d448e56a7":"0x6c6b935b8bbd400000","0x95d550427b5a514c751d73a0f6d29fb65d22ed10":"0x1043561a8829300000","0x95d98d0c1069908f067a52acac2b8b534da37afd":"0x6f59b630a929708000","0x95df4e3445d7662624c48eba74cf9e0a53e9f732":"0xbdbc41e0348b3000000","0x95e6a54b2d5f67a24a4875af75107ca7ea9fd2fa":"0x487a9a304539440000","0x95e6f93dac228bc7585a25735ac2d076cc3a4017":"0x14542ba12a337c00000","0x95e7616424cd0961a71727247437f0069272280e":"0x15af1d78b58c400000","0x95e80a82c20cbe3d2060242cb92d735810d034a2":"0x1c32e463fd4b98000","0x95f62d0243ede61dad9a3165f53905270d54e242":"0x57473d05dabae80000","0x95fb5afb14c1ef9ab7d179c5c300503fd66a5ee2":"0x1daf7a02b0dbe8000","0x9610592202c282ab9bd8a884518b3e0bd4758137":"0xe873f44133cb00000","0x961c59adc74505d1864d1ecfcb8afa0412593c93":"0x878678326eac9000000","0x962c0dec8a3d464bf39b1215eafd26480ae490cd":"0x6c82e3eaa513e80000","0x962cd22a8edf1e4f4e55b4b15ddbfb5d9d541971":"0x6c6b935b8bbd400000","0x96334bfe04fffa590213eab36514f338b864b736":"0x15af1d78b58c400000","0x9637dc12723d9c78588542eab082664f3f038d9d":"0x3635c9adc5dea00000","0x964eab4b276b4cd8983e15ca72b106900fe41fce":"0x1b1ae4d6e2ef500000","0x9662ee021926682b31c5f200ce457abea76c6ce9":"0x24590e8589eb6a0000","0x966c04781cb5e67dde3235d7f8620e1ab663a9a5":"0x100d2050da6351600000","0x967076a877b18ec15a415bb116f06ef32645dba3":"0x6c6b935b8bbd400000","0x967bfaf76243cdb9403c67d2ceefdee90a3feb73":"0x349d87f2a2dc2f0000","0x967d4142af770515dd7062af93498dbfdff29f20":"0x11854d0f9cee40000","0x968b14648f018333687cd213fa640aec04ce6323":"0x3635c9adc5dea00000","0x968dea60df3e09ae3c8d3505e9c080454be0e819":"0x14542ba12a337c00000","0x96924191b7df655b3319dc6d6137f481a73a0ff3":"0xd9ecb4fd208e500000","0x9696052138338c722f1140815cf7749d0d3b3a74":"0x1b1ae4d6e2ef500000","0x96a55f00dff405dc4de5e58c57f6f6f0cac55d2f":"0x6a6616379c87b58000","0x96aa573fed2f233410dbae5180145b23c31a02f0":"0x5dc892aa1131c80000","0x96ad579bbfa8db8ebec9d286a72e4661eed8e356":"0x3a0ba42bec61830000","0x96b434fe0657e42acc8212b6865139dede15979c":"0xd8d726b7177a800000","0x96b906ea729f4655afe3e57d35277c967dfa1577":"0x3635c9adc5dea00000","0x96d62dfd46087f62409d93dd606188e70e381257":"0x6c6b935b8bbd400000","0x96d9cca8f55eea0040ec6eb348a1774b95d93ef4":"0xd8d726b7177a800000","0x96e7c0c9d5bf10821bf140c558a145b7cac21397":"0x393ef1a5127c800000","0x96ea6ac89a2bac95347b51dba63d8bd5ebdedce1":"0x6c6b935b8bbd400000","0x96eafbf2fb6f4db9a436a74c45b5654452e23819":"0x1158e460913d00000","0x96eb523e832f500a017de13ec27f5d366c560eff":"0x10acceba43ee280000","0x96f0462ae6f8b96088f7e9c68c74b9d8ad34b347":"0x61093d7c2c6d380000","0x96f820500b70f4a3e3239d619cff8f222075b135":"0xad78ebc5ac6200000","0x96fe59c3dbb3aa7cc8cb62480c65e56e6204a7e2":"0x43c33c1937564800000","0x96ff6f509968f36cb42cba48db32f21f5676abf8":"0x6acb3df27e1f880000","0x970938522afb5e8f994873c9fbdc26e3b37e314c":"0x3635c9adc5dea00000","0x970abd53a54fca4a6429207c182d4d57bb39d4a0":"0x6c6b935b8bbd400000","0x970d8b8a0016d143054f149fb3b8e550dc0797c7":"0x3635c9adc5dea00000","0x972c2f96aa00cf8a2f205abcf8937c0c75f5d8d9":"0xad78ebc5ac6200000","0x973f4e361fe5decd989d4c8f7d7cc97990385daf":"0x150f8543a387420000","0x974d0541ab4a47ec7f75369c0069b64a1b817710":"0x15af1d78b58c400000","0x974d2f17895f2902049deaaecf09c3046507402d":"0xcc19c29437ab8000","0x9752d14f5e1093f071711c1adbc4e3eb1e5c57f3":"0x6c6b935b8bbd400000","0x9756e176c9ef693ee1eec6b9f8b151d313beb099":"0x410d586a20a4c00000","0x975f3764e97bbccf767cbd3b795ba86d8ba9840e":"0x12c1b6eed03d280000","0x976a18536af41874426308871bcd1512a775c9f8":"0x21e19e0c9bab2400000","0x976e3ceaf3f1af51f8c29aff5d7fa21f0386d8ee":"0xd02ab486cedc00000","0x9777cc61cf756be3b3c20cd4491c69d275e7a120":"0x21e19e0c9bab2400000","0x97810bafc37e84306332aacb35e92ad911d23d24":"0x3635c9adc5dea00000","0x978c430ce4359b06bc2cdf5c2985fc950e50d5c8":"0x1a055690d9db800000","0x9795f64319fc17dd0f8261f9d206fb66b64cd0c9":"0xad78ebc5ac6200000","0x9799ca21dbcf69bfa1b3f72bac51b9e3ca587cf9":"0x5c283d410394100000","0x979cbf21dfec8ace3f1c196d82df962534df394f":"0x9991d478dd4d160000","0x979d681c617da16f21bcaca101ed16ed015ab696":"0x65ea3db75546600000","0x979f30158b574b999aab348107b9eed85b1ff8c1":"0x34957444b840e80000","0x97a86f01ce3f7cfd4441330e1c9b19e1b10606ef":"0x6c6b935b8bbd400000","0x97b91efe7350c2d57e7e406bab18f3617bcde14a":"0x21e1999bbd5d2be0000","0x97d0d9725e3b70e675843173938ed371b62c7fac":"0x93739534d28680000","0x97d9e46a7604d7b5a4ea4ee61a42b3d2350fc3ed":"0x6c6b935b8bbd400000","0x97dc26ec670a31e0221d2a75bc5dc9f90c1f6fd4":"0x2b5e3af16b1880000","0x97de21e421c37fe4b8025f9a51b7b390b5df7804":"0x10f0cf064dd592000000","0x97e28973b860c567402800fbb63ce39a048a3d79":"0x542253a126ce40000","0x97e5cc6127c4f885be02f44b42d1c8b0ac91e493":"0xad78ebc5ac6200000","0x97f1fe4c8083e596212a187728dd5cf80a31bec5":"0x1158e460913d00000","0x97f7760657c1e202759086963eb4211c5f8139b9":"0xa8a097fcb3d17680000","0x97f99b6ba31346cd98a9fe4c308f87c5a58c5151":"0x14542ba12a337c00000","0x980a84b686fc31bdc83c221058546a71b11f838a":"0x2a415548af86818000","0x9810e34a94db6ed156d0389a0e2b80f4fd6b0a8a":"0x6c6b935b8bbd400000","0x981ddf0404e4d22dda556a0726f00b2d98ab9569":"0x36356633ebd8ea0000","0x981f712775c0dad97518ffedcb47b9ad1d6c2762":"0x16a6502f15a1e540000","0x9834682180b982d166badb9d9d1d9bbf016d87ee":"0x6c6b935b8bbd400000","0x9836b4d30473641ab56aeee19242761d72725178":"0x6c6b935b8bbd400000","0x98397342ec5f3d4cb877e54ef5d6f1d366731bd4":"0x14061b9d77a5e980000","0x9846648836a307a057184fd51f628a5f8c12427c":"0x40b69bf43dce8f00000","0x984a7985e3cc7eb5c93691f6f8cc7b8f245d01b2":"0x14542ba12a337c00000","0x985d70d207892bed398590024e2421b1cc119359":"0x43c33c1937564800000","0x986df47e76e4d7a789cdee913cc9831650936c9d":"0x10f0cf064dd59200000","0x9874803fe1f3a0365e7922b14270eaeb032cc1b5":"0x3cf5928824c6c20000","0x9875623495a46cdbf259530ff838a1799ec38991":"0x6c6b935b8bbd400000","0x987618c85656207c7bac1507c0ffefa2fb64b092":"0x37dfe433189e38000","0x987c9bcd6e3f3990a52be3eda4710c27518f4f72":"0x15af1d78b58c400000","0x9882967cee68d2a839fad8ab4a7c3dddf6c0adc8":"0x4878be1ffaf95d0000","0x98855c7dfbee335344904a12c40c731795b13a54":"0x39fbae8d042dd00000","0x989c0ccff654da03aeb11af701054561d6297e1d":"0xd8d726b7177a800000","0x98a0e54c6d9dc8be96276cebf4fec460f6235d85":"0x6ac882100952c78000","0x98b769cc305cecfb629a00c907069d7ef9bc3a12":"0x168d28e3f00280000","0x98ba4e9ca72fddc20c69b4396f76f8183f7a2a4e":"0x2b5e3af16b188000000","0x98be696d51e390ff1c501b8a0f6331b628ddc5ad":"0x6c6b935b8bbd400000","0x98bed3a72eccfbafb923489293e429e703c7e25b":"0x6c6b935b8bbd400000","0x98bf4af3810b842387db70c14d46099626003d10":"0xd8d726b7177a800000","0x98c10ebf2c4f97cba5a1ab3f2aafe1cac423f8cb":"0x1043561a8829300000","0x98c19dba810ba611e68f2f83ee16f6e7744f0c1f":"0xad78ebc5ac6200000","0x98c5494a03ac91a768dffc0ea1dde0acbf889019":"0x2a5a058fc295ed000000","0x98d204f9085f8c8e7de23e589b64c6eff692cc63":"0x6c6b935b8bbd400000","0x98d3731992d1d40e1211c7f735f2189afa0702e0":"0x1b1ae4d6e2ef5000000","0x98e2b6d606fd2d6991c9d6d4077fdf3fdd4585da":"0x30df1a6f8ad6280000","0x98e3e90b28fccaee828779b8d40a5568c4116e21":"0x22b1c8c1227a00000","0x98e6f547db88e75f1f9c8ac2c5cf1627ba580b3e":"0x3635c9adc5dea00000","0x98f4af3af0aede5fafdc42a081ecc1f89e3ccf20":"0x1fd933494aa5fe00000","0x98f6b8e6213dbc9a5581f4cce6655f95252bdb07":"0x115872b0bca4300000","0x9909650dd5b1397b8b8b0eb69499b291b0ad1213":"0xad78ebc5ac6200000","0x991173601947c2084a62d639527e961512579af9":"0x2086ac351052600000","0x99129d5b3c0cde47ea0def4dfc070d1f4a599527":"0x6c6b935b8bbd400000","0x9917d68d4af341d651e7f0075c6de6d7144e7409":"0x132d4476c08e6f00000","0x991ac7ca7097115f26205eee0ef7d41eb4e311ae":"0x1158e460913d00000","0x992365d764c5ce354039ddfc912e023a75b8e168":"0xfc936392801c0000","0x992646ac1acaabf5ddaba8f9429aa6a94e7496a7":"0x3637507a30abeb0000","0x99268327c373332e06c3f6164287d455b9d5fa4b":"0x6c6b935b8bbd400000","0x9928ff715afc3a2b60f8eb4cc4ba4ee8dab6e59d":"0x17da3a04c7b3e00000","0x9932ef1c85b75a9b2a80057d508734c51085becc":"0x2b83fa5301d590000","0x993f146178605e66d517be782ef0b3c61a4e1925":"0x17c1f0535d7a5830000","0x99413704b1a32e70f3bc0d69dd881c38566b54cb":"0x5cc6b694631f7120000","0x994152fc95d5c1ca8b88113abbad4d710e40def6":"0x1b1ae4d6e2ef500000","0x9944fee9d34a4a880023c78932c00b59d5c82a82":"0x28a8a56b3690070000","0x994cc2b5227ec3cf048512467c41b7b7b748909f":"0x6c6b935b8bbd400000","0x9971df60f0ae66dce9e8c84e17149f09f9c52f64":"0xad78ebc5ac6200000","0x9976947eff5f6ae5da08dd541192f378b428ff94":"0x1b1ae4d6e2ef5000000","0x997d6592a31589acc31b9901fbeb3cc3d65b3215":"0x6c6b935b8bbd400000","0x9982a5890ffb5406d3aca8d2bfc1dd70aaa80ae0":"0x6c6b935b8bbd400000","0x99878f9d6e0a7ed9aec78297b73879a80195afe0":"0xd7c198710e66b00000","0x998c1f93bcdb6ff23c10d0dc924728b73be2ff9f":"0x365bf3a433eaf30000","0x9991614c5baa47dd6c96874645f97add2c3d8380":"0x6acb3df27e1f880000","0x99924a9816bb7ddf3fec1844828e9ad7d06bf4e6":"0x5f68e8131ecf800000","0x99997668f7c1a4ff9e31f9977ae3224bcb887a85":"0xfc936392801c00000","0x999c49c174ca13bc836c1e0a92bff48b271543ca":"0xb1cf24ddd0b1400000","0x99a4de19ded79008cfdcd45d014d2e584b8914a8":"0x5150ae84a8cdf00000","0x99a96bf2242ea1b39ece6fcc0d18aed00c0179f3":"0x1043561a8829300000","0x99b018932bcad355b6792b255db6702dec8ce5dd":"0xd8d8583fa2d52f0000","0x99b743d1d9eff90d9a1934b4db21d519d89b4a38":"0x56bc75e2d63100000","0x99b8c824869de9ed24f3bff6854cb6dd45cc3f9f":"0x65ea3db75546600000","0x99c0174cf84e0783c220b4eb6ae18fe703854ad3":"0x7079a2573d0c780000","0x99c1d9f40c6ab7f8a92fce2fdce47a54a586c53f":"0x35659ef93f0fc40000","0x99c236141daec837ece04fdaee1d90cf8bbdc104":"0x766516acac0d200000","0x99c31fe748583787cdd3e525b281b218961739e3":"0x3708baed3d68900000","0x99c475bf02e8b9214ada5fad02fdfd15ba365c0c":"0x2009c5c8bf6fdc0000","0x99c883258546cc7e4e971f522e389918da5ea63a":"0xd8d726b7177a800000","0x99c9f93e45fe3c1418c353e4c5ac3894eef8121e":"0x585baf145050b0000","0x99d1579cd42682b7644e1d4f7128441eeffe339d":"0x43c33c1937564800000","0x99d1b585965f406a42a49a1ca70f769e765a3f98":"0x3894f0e6f9b9f700000","0x99dfd0504c06c743e46534fd7b55f1f9c7ec3329":"0x6c6b935b8bbd400000","0x99f4147ccc6bcb80cc842e69f6d00e30fa4133d9":"0x15af1d78b58c400000","0x99f77f998b20e0bcdcd9fc838641526cf25918ef":"0x61093d7c2c6d380000","0x99fad50038d0d9d4c3fbb4bce05606ecadcd5121":"0x6c6b935b8bbd400000","0x99fe0d201228a753145655d428eb9fd94985d36d":"0x6920bff3515a3a0000","0x9a079c92a629ca15c8cafa2eb28d5bc17af82811":"0x1b1ae4d6e2ef500000","0x9a0d3cee3d9892ea3b3700a27ff84140d9025493":"0x340aad21b3b700000","0x9a24ce8d485cc4c86e49deb39022f92c7430e67e":"0x46791fc84e07d00000","0x9a2ce43b5d89d6936b8e8c354791b8afff962425":"0x6c6b935b8bbd400000","0x9a390162535e398877e416787d6239e0754e937c":"0x3635c9adc5dea00000","0x9a3da65023a13020d22145cfc18bab10bd19ce4e":"0x18bf6ea3464a3a0000","0x9a3e2b1bf346dd070b027357feac44a4b2c97db8":"0x21e19e0c9bab2400000","0x9a4ca8b82117894e43db72b9fa78f0b9b93ace09":"0x2b5e3af16b1880000","0x9a522e52c195bfb7cf5ffaaedb91a3ba7468161d":"0x3635c9adc5dea00000","0x9a5af31c7e06339ac8b4628d7c4db0ce0f45c8a4":"0x1b1ae4d6e2ef500000","0x9a633fcd112cceeb765fe0418170732a9705e79c":"0xfc936392801c0000","0x9a63d185a79129fdab19b58bb631ea36a420544e":"0x246ddf97976680000","0x9a6708ddb8903c289f83fe889c1edcd61f854423":"0x3635c9adc5dea00000","0x9a6ff5f6a7af7b7ae0ed9c20ecec5023d281b786":"0x8a12b9bd6a67ec0000","0x9a82826d3c29481dcc2bd2950047e8b60486c338":"0x43c33c1937564800000","0x9a8eca4189ff4aa8ff7ed4b6b7039f0902219b15":"0x1158e460913d00000","0x9a953b5bcc709379fcb559d7b916afdaa50cadcc":"0x56bc75e2d63100000","0x9a990b8aeb588d7ee7ec2ed8c2e64f7382a9fee2":"0x1d127db69fd8b0000","0x9a9d1dc0baa77d6e20c3d849c78862dd1c054c87":"0x2fb474098f67c00000","0x9aa48c66e4fb4ad099934e32022e827427f277ba":"0x21e19e0c9bab2400000","0x9aa8308f42910e5ade09c1a5e282d6d91710bdbf":"0xad78ebc5ac6200000","0x9aaafa0067647ed999066b7a4ca5b4b3f3feaa6f":"0x3635c9adc5dea00000","0x9ab988b505cfee1dbe9cd18e9b5473b9a2d4f536":"0x1158e460913d000000","0x9ab98d6dbb1eaae16d45a04568541ad3d8fe06cc":"0xec50464fe23f38000","0x9aba2b5e27ff78baaab5cdc988b7be855cebbdce":"0x21e0c0013070adc0000","0x9ac4da51d27822d1e208c96ea64a1e5b55299723":"0x56c5579f722140000","0x9ac85397792a69d78f286b86432a07aeceb60e64":"0xc673ce3c40160000","0x9ac907ee85e6f3e223459992e256a43fa08fa8b2":"0x21e19e0c9bab2400000","0x9ad47fdcf9cd942d28effd5b84115b31a658a13e":"0xb259ec00d53b280000","0x9adbd3bc7b0afc05d1d2eda49ff863939c48db46":"0xad6eedd17cf3b8000","0x9adf458bff3599eee1a26398853c575bc38c6313":"0xf2dc7d47f15600000","0x9ae13bd882f2576575921a94974cbea861ba0d35":"0xab4dcf399a3a600000","0x9ae9476bfecd3591964dd325cf8c2a24faed82c1":"0xd8d726b7177a800000","0x9af100cc3dae83a33402051ce4496b16615483f6":"0x6c6b935b8bbd400000","0x9af11399511c213181bfda3a8b264c05fc81b3ce":"0x2f6f10780d22cc00000","0x9af5c9894c33e42c2c518e3ac670ea9505d1b53e":"0xfc936392801c0000","0x9af9dbe47422d177f945bdead7e6d82930356230":"0xd5967be4fc3f100000","0x9afa536b4c66bc38d875c4b30099d9261fdb38eb":"0xb2a8f842a77bc8000","0x9b06ad841dffbe4ccf46f1039fc386f3c321446e":"0x6c6b935b8bbd400000","0x9b1168de8ab64b47552f3389800a9cc08b4666cf":"0x5dc892aa1131c80000","0x9b1811c3051f46e664ae4bc9c824d18592c4574a":"0xad6eedd17cf3b8000","0x9b18478655a4851cc906e660feac61f7f4c8bffc":"0xe2478d38907d840000","0x9b22a80d5c7b3374a05b446081f97d0a34079e7f":"0xa2a15d09519be00000","0x9b2be7f56754f505e3441a10f7f0e20fd3ddf849":"0x126e72a69a50d00000","0x9b32cf4f5115f4b34a00a64c617de06387354323":"0x5b81ed888207c8000","0x9b43dcb95fde318075a567f1e6b57617055ef9e8":"0xd5967be4fc3f100000","0x9b444fd337e5d75293adcfff70e1ea01db023222":"0x56bc75e2d63100000","0x9b4824ff9fb2abda554dee4fb8cf549165570631":"0x1158e460913d00000","0x9b4c2715780ca4e99e60ebf219f1590c8cad500a":"0x56bc75e2d631000000","0x9b59eb213b1e7565e45047e04ea0374f10762d16":"0x6c6b935b8bbd400000","0x9b5c39f7e0ac168c8ed0ed340477117d1b682ee9":"0x55005f0c614480000","0x9b5ec18e8313887df461d2902e81e67a8f113bb1":"0x56bc75e2d63100000","0x9b64d3cd8d2b73f66841b5c46bb695b88a9ab75d":"0x1203a4f760c168000","0x9b658fb361e046d4fcaa8aef6d02a99111223625":"0x6c6b935b8bbd400000","0x9b6641b13e172fc072ca4b8327a3bc28a15b66a9":"0x68155a43676e00000","0x9b68f67416a63bf4451a31164c92f672a68759e9":"0xcb49b44ba602d800000","0x9b773669e87d76018c090f8255e54409b9dca8b2":"0x1158e460913d00000","0x9b77ebced7e215f0920e8c2b870024f6ecb2ff31":"0x3635c9adc5dea00000","0x9b7c8810cc7cc89e804e6d3e38121850472877fe":"0x6c6b935b8bbd400000","0x9ba53dc8c95e9a472feba2c4e32c1dc4dd7bab46":"0x487a9a304539440000","0x9bacd3d40f3b82ac91a264d9d88d908eac8664b9":"0x43c33c1937564800000","0x9bb760d5c289a3e1db18db095345ca413b9a43c2":"0xaadec983fcff40000","0x9bb76204186af2f63be79168601687fc9bad661f":"0x1043561a8829300000","0x9bb9b02a26bfe1ccc3f0c6219e261c397fc5ca78":"0x487a9a304539440000","0x9bc573bcda23b8b26f9073d90c230e8e71e0270b":"0x362f75a4305d0c0000","0x9bd7c38a4210304a4d653edeff1b3ce45fce7843":"0xf498941e664280000","0x9bd88068e13075f3a8cac464a5f949d6d818c0f6":"0x14542ba12a337c00000","0x9bd905f1719fc7acd0159d4dc1f8db2f21472338":"0x3635c9adc5dea00000","0x9bdbdc9b973431d13c89a3f9757e9b3b6275bfc7":"0x1b1a7dcf8a44d38000","0x9be3c329b62a28b8b0886cbd8b99f8bc930ce3e6":"0x409e52b48369a0000","0x9bf58efbea0784eb068adecfa0bb215084c73a35":"0x13a6b2b564871a00000","0x9bf672d979b36652fc5282547a6a6bc212ae4368":"0x238fd42c5cf0400000","0x9bf703b41c3624e15f4054962390bcba3052f0fd":"0x1483e01533c2e3c0000","0x9bf71f7fb537ac54f4e514947fa7ff6728f16d2f":"0x1cf84a30a0a0c0000","0x9bf9b3b2f23cf461eb591f28340bc719931c8364":"0x3635c9adc5dea00000","0x9bfc659c9c601ea42a6b21b8f17084ec87d70212":"0x21e19e0c9bab2400000","0x9bfff50db36a785555f07652a153b0c42b1b8b76":"0x6c6b935b8bbd400000","0x9c05e9d0f0758e795303717e31da213ca157e686":"0x3635c9adc5dea00000","0x9c1b771f09af882af0643083de2aa79dc097c40e":"0x8670e9ec6598c00000","0x9c28a2c4086091cb5da226a657ce3248e8ea7b6f":"0xf2dc7d47f15600000","0x9c2fd54089af665df5971d73b804616039647375":"0x3635c9adc5dea00000","0x9c344098ba615a398f11d009905b177c44a7b602":"0x3635c9adc5dea00000","0x9c3d0692ceeef80aa4965ceed262ffc7f069f2dc":"0xad78ebc5ac6200000","0x9c405cf697956138065e11c5f7559e67245bd1a5":"0xad78ebc5ac6200000","0x9c45202a25f6ad0011f115a5a72204f2f2198866":"0x10fcf3a62b080980000","0x9c49deff47085fc09704caa2dca8c287a9a137da":"0x1b1ae4d6e2ef5000000","0x9c4bbcd5f1644a6f075824ddfe85c571d6abf69c":"0x6194049f30f7200000","0x9c526a140683edf1431cfaa128a935e2b614d88b":"0x6046f37e5945c0000","0x9c54e4ed479a856829c6bb42da9f0b692a75f728":"0x197a8f6dd5519800000","0x9c581a60b61028d934167929b22d70b313c34fd0":"0xa968163f0a57b400000","0x9c5cc111092c122116f1a85f4ee31408741a7d2f":"0x1ab2cf7c9f87e20000","0x9c6bc9a46b03ae5404f043dfcf21883e4110cc33":"0xad78ebc5ac6200000","0x9c78963fbc263c09bd72e4f8def74a9475f7055c":"0x2eb8eb1a172dcb80000","0x9c78fbb4df769ce2c156920cfedfda033a0e254a":"0x6acb3df27e1f880000","0x9c7b6dc5190fe2912963fcd579683ec7395116b0":"0x2a1129d09367200000","0x9c80bc18e9f8d4968b185da8c79fa6e11ffc3e23":"0xd02ab486cedc00000","0x9c98fdf1fdcd8ba8f4c5b04c3ae8587efdf0f6e6":"0x14542ba12a337c00000","0x9c99a1da91d5920bc14e0cb914fdf62b94cb8358":"0x43c33c1937564800000","0x9c99b62606281b5cefabf36156c8fe62839ef5f3":"0xd8d726b7177a800000","0x9c9a07a8e57c3172a919ef64789474490f0d9f51":"0x21e19e0c9bab2400000","0x9c9de44724a4054da0eaa605abcc802668778bea":"0xad7d5ca3fa5a20000","0x9c9f3b8a811b21f3ff3fe20fe970051ce66a824f":"0x3ec2debc07d4be0000","0x9c9f89a3910f6a2ae8a91047a17ab788bddec170":"0x21e19e0c9bab2400000","0x9ca0429f874f8dcee2e9c062a9020a842a587ab9":"0x6c6b935b8bbd400000","0x9ca42ee7a0b898f6a5cc60b5a5d7b1bfa3c33231":"0x6c6b935b8bbd400000","0x9cb28ac1a20a106f7f373692c5ce4c73f13732a1":"0x3635c9adc5dea00000","0x9ccddcb2cfc2b25b08729a0a98d9e6f0202ea2c1":"0x56bc75e2d63100000","0x9ce27f245e02d1c312c1d500788c9def7690453b":"0xad78ebc5ac6200000","0x9ce5363b13e8238aa4dd15acd0b2e8afe0873247":"0xad78ebc5ac6200000","0x9cf2928beef09a40f9bfc953be06a251116182fb":"0x14542ba12a337c00000","0x9d069197d1de50045a186f5ec744ac40e8af91c6":"0x6c6b935b8bbd400000","0x9d0e7d92fb305853d798263bf15e97c72bf9d7e0":"0x3635c9adc5dea00000","0x9d0f347e826b7dceaad279060a35c0061ecf334b":"0xd8d726b7177a800000","0x9d207517422cc0d60de7c237097a4d4fce20940c":"0x1b1ae4d6e2ef500000","0x9d250ae4f110d71cafc7b0adb52e8d9acb6679b8":"0x2156d6e997213c00000","0x9d2bfc36106f038250c01801685785b16c86c60d":"0x5077d75df1b675800000","0x9d30cb237bc096f17036fc80dd21ca68992ca2d9":"0x66ee7318fdc8f300000","0x9d32962ea99700d93228e9dbdad2cc37bb99f07e":"0xb4632bedd4ded40000","0x9d34dac25bd15828faefaaf28f710753b39e89dc":"0x3b1c56fed02df00000","0x9d369165fb70b81a3a765f188fd60cbe5e7b0968":"0x6c6b935b8bbd400000","0x9d40e012f60425a340d82d03a1c757bfabc706fb":"0x9346f3addc88d8000","0x9d4174aa6af28476e229dadb46180808c67505c1":"0x421afda42ed6970000","0x9d4213339a01551861764c87a93ce8f85f87959a":"0xad78ebc5ac6200000","0x9d460c1b379ddb19a8c85b4c6747050ddf17a875":"0xb50fcfafebecb00000","0x9d47ba5b4c8505ad8da42934280b61a0e1e8b971":"0x56bc75e2d63100000","0x9d4d321177256ebd9afbda304135d517c3dc5693":"0x2164b7a04ac8a00000","0x9d4ff989b7bed9ab109d10c8c7e55f02d76734ad":"0x3635c9adc5dea00000","0x9d511543b3d9dc60d47f09d49d01b6c498d82078":"0x26197b9516fc3940000","0x9d6ecfa03af2c6e144b7c4692a86951e902e9e1f":"0xa2a5aa60ad243f0000","0x9d7655e9f3e5ba5d6e87e412aebe9ee0d49247ee":"0x8e09311c1d80fa0000","0x9d7831e834c20b1baa697af1d8e0c621c5afff9a":"0x4b06dbbb40f4a0000","0x9d78a975b7db5e4d8e28845cfbe7e31401be0dd9":"0x48a43c54602f700000","0x9d799e943e306ba2e5b99c8a6858cbb52c0cf735":"0x1043561a8829300000","0x9d7fda7070bf3ee9bbd9a41f55cad4854ae6c22c":"0x255cba3c46fcf120000","0x9d81aea69aed6ad07089d61445348c17f34bfc5b":"0x1043561a8829300000","0x9d911f3682f32fe0792e9fb6ff3cfc47f589fca5":"0xd8d726b7177a800000","0x9d913b5d339c95d87745562563fea98b23c60cc4":"0x941302c7f4d230000","0x9d93fab6e22845f8f45a07496f11de71530debc7":"0x6c4fd1ee246e780000","0x9d99b189bbd9a48fc2e16e8fcda33bb99a317bbb":"0x3d16e10b6d8bb20000","0x9d9c4efe9f433989e23be94049215329fa55b4cb":"0xde3b28903c6b58000","0x9d9e57fde30e5068c03e49848edce343b7028358":"0x5dc892aa1131c80000","0x9da3302240af0511c6fd1857e6ddb7394f77ab6b":"0xa80d24677efef00000","0x9da4ec407077f4b9707b2d9d2ede5ea5282bf1df":"0xd8d726b7177a800000","0x9da609fa3a7e6cf2cc0e70cdabe78dc4e382e11e":"0x410d586a20a4c00000","0x9da61ccd62bf860656e0325d7157e2f160d93bb5":"0x10f0ca956f8799e0000","0x9da6e075989c7419094cc9f6d2e49393bb199688":"0x259bb71d5adf3f00000","0x9da8e22ca10e67fea44e525e4751eeac36a31194":"0xe18398e7601900000","0x9db2e15ca681f4c66048f6f9b7941ed08b1ff506":"0xd8d726b7177a800000","0x9dc10fa38f9fb06810e11f60173ec3d2fd6a751e":"0x6acb3df27e1f880000","0x9dd2196624a1ddf14a9d375e5f07152baf22afa2":"0x41b05e2463a5438000","0x9dd46b1c6d3f05e29e9c6f037eed9a595af4a9aa":"0x1b1ae4d6e2ef500000","0x9ddd355e634ee9927e4b7f6c97e7bf3a2f1e687a":"0x2b5e3af16b1880000","0x9de20ae76aa08263b205d5142461961e2408d266":"0xda933d8d8c6700000","0x9de20bc37e7f48a80ffd7ad84ffbf1a1abe1738c":"0xad78ebc5ac6200000","0x9de7386dde401ce4c67b71b6553f8aa34ea5a17d":"0x340aad21b3b700000","0x9deb39027af877992b89f2ec4a1f822ecdf12693":"0x6c6b935b8bbd400000","0x9defe56a0ff1a1947dba0923f7dd258d8f12fa45":"0x5b12aefafa804000000","0x9df057cd03a4e27e8e032f857985fd7f01adc8d7":"0x6c6b935b8bbd400000","0x9df32a501c0b781c0281022f42a1293ffd7b892a":"0x1e7e4171bf4d3a00000","0x9e01765aff08bc220550aca5ea2e1ce8e5b09923":"0x3635c9adc5dea00000","0x9e20e5fd361eabcf63891f5b87b09268b8eb3793":"0x56bc75e2d63100000","0x9e232c08c14dc1a6ed0b8a3b2868977ba5c17d10":"0x1158e460913d00000","0x9e23c5e4b782b00a5fadf1aead87dacf5b0367a1":"0x1158e460913d00000","0x9e35399071a4a101e9194daa3f09f04a0b5f9870":"0xd8d726b7177a800000","0x9e3eb509278fe0dcd8e0bbe78a194e06b6803943":"0x32f51edbaaa3300000","0x9e427272516b3e67d4fcbf82f59390d04c8e28e5":"0xd8d726b7177a800000","0x9e4cec353ac3e381835e3c0991f8faa5b7d0a8e6":"0x21e18b9e9ab45e48000","0x9e5811b40be1e2a1e1d28c3b0774acde0a09603d":"0xa2a15d09519be00000","0x9e5a311d9f69898a7c6a9d6360680438e67a7b2f":"0x50c5e761a444080000","0x9e7c2050a227bbfd60937e268cea3e68fea8d1fe":"0x56bc75e2d63100000","0x9e7f65a90e8508867bccc914256a1ea574cf07e3":"0x433874f632cc600000","0x9e8144e08e89647811fe6b72d445d6a5f80ad244":"0x21e19e0c9bab2400000","0x9e8f64ddcde9b8b451bafaa235a9bf511a25ac91":"0x90f534608a72880000","0x9e951f6dc5e352afb8d04299d2478a451259bf56":"0x3e7419881a73a0000","0x9e960dcd03d5ba99cb115d17ff4c09248ad4d0be":"0xad78ebc5ac6200000","0x9eaf6a328a4076024efa6b67b48b21eedcc0f0b8":"0x890b0c2e14fb80000","0x9eb1ff71798f28d6e989fa1ea0588e27ba86cb7d":"0x7a1fe160277000000","0x9eb281c32719c40fdb3e216db0f37fbc73a026b7":"0x1158e460913d00000","0x9eb3a7cb5e6726427a3a361cfa8d6164dbd0ba16":"0x2b95bdcc39b6100000","0x9eb7834e171d41e069a77947fca87622f0ba4e48":"0x56bc75e2d63100000","0x9ec03e02e587b7769def538413e97f7e55be71d8":"0x42bf06b78ed3b500000","0x9ecbabb0b22782b3754429e1757aaba04b81189f":"0x2ca7bb061f5e998000","0x9ece1400800936c7c6485fcdd3626017d09afbf6":"0x10ce1d3d8cb3180000","0x9ed4e63f526542d44fddd34d59cd25388ffd6bda":"0xd29b34a46348940000","0x9ed80eda7f55054db9fb5282451688f26bb374c1":"0x1043561a8829300000","0x9edc90f4be210865214ab5b35e5a8dd77415279d":"0xd8d726b7177a800000","0x9edeac4c026b93054dc5b1d6610c6f3960f2ad73":"0x410d586a20a4c00000","0x9ee93f339e6726ec65eea44f8a4bfe10da3d3282":"0x6c6b935b8bbd400000","0x9ee9760cc273d4706aa08375c3e46fa230aff3d5":"0x1e52e336cde22180000","0x9eeb07bd2b7890195e7d46bdf2071b6617514ddb":"0x6c6b935b8bbd400000","0x9eef442d291a447d74c5d253c49ef324eac1d8f0":"0xb96608c8103bf00000","0x9ef1896b007c32a15114fb89d73dbd47f9122b69":"0xd8d726b7177a800000","0x9f017706b830fb9c30efb0a09f506b9157457534":"0x6c6b935b8bbd400000","0x9f10f2a0463b65ae30b070b3df18cf46f51e89bd":"0x678a932062e4180000","0x9f19fac8a32437d80ac6837a0bb7841729f4972e":"0x233df3299f61720000","0x9f1aa8fcfc89a1a5328cbd6344b71f278a2ca4a0":"0x1b1ae4d6e2ef500000","0x9f21302ca5096bea7402b91b0fd506254f999a3d":"0x4397451a003dd80000","0x9f271d285500d73846b18f733e25dd8b4f5d4a8b":"0x2723c346ae18080000","0x9f3497f5ef5fe63095836c004eb9ce02e9013b4b":"0x2256861bf9cf080000","0x9f3a74fd5e7edcc1162993171381cbb632b7cff0":"0x21e19e0c9bab2400000","0x9f46e7c1e9078cae86305ac7060b01467d6685ee":"0x243d4d18229ca20000","0x9f496cb2069563144d0811677ba0e4713a0a4143":"0x3cd2e0bf63a4480000","0x9f4a7195ac7c151ca258cafda0cab083e049c602":"0x53538c32185cee0000","0x9f4ac9c9e7e24cb2444a0454fa5b9ad9d92d3853":"0x2d43f3ebfafb2c0000","0x9f5f44026b576a4adb41e95961561d41039ca391":"0xd8d726b7177a80000","0x9f607b3f12469f446121cebf3475356b71b4328c":"0xd8d726b7177a800000","0x9f61beb46f5e853d0a8521c7446e68e34c7d0973":"0x1e5b8fa8fe2ac00000","0x9f64a8e8dacf4ade30d10f4d59b0a3d5abfdbf74":"0x36369ed7747d260000","0x9f662e95274121f177566e636d23964cf1fd686f":"0x6c6b935b8bbd400000","0x9f6a322a6d469981426ae844865d7ee0bb15c7b3":"0x2b5ee57929fdb8000","0x9f7986924aeb02687cd64189189fb167ded2dd5c":"0x35659ef93f0fc40000","0x9f7a0392f857732e3004a375e6b1068d49d83031":"0x6c6b935b8bbd400000","0x9f8245c3ab7d173164861cd3991b94f1ba40a93a":"0x9b0a791f1211300000","0x9f83a293c324d4106c18faa8888f64d299054ca0":"0xad78ebc5ac6200000","0x9f86a066edb61fcb5856de93b75c8c791864b97b":"0x6c6b935b8bbd400000","0x9f98eb34d46979b0a6de8b05aa533a89b825dcf1":"0x4b06dbbb40f4a0000","0x9f9fe0c95f10fee87af1af207236c8f3614ef02f":"0x14542ba12a337c00000","0x9faea13c733412dc4b490402bfef27a0397a9bc3":"0x10ce1d3d8cb3180000","0x9fbe066de57236dc830725d32a02aef9246c6c5e":"0x6c6b935b8bbd400000","0x9fd1052a60506bd1a9ef003afd9d033c267d8e99":"0x3635c9adc5dea00000","0x9fd64373f2fbcd9c0faca60547cad62e26d9851f":"0x3635c9adc5dea00000","0x9fe501aa57ead79278937cd6308c5cfa7a5629fe":"0x2b5ee57929fdb8000","0x9ffc5fe06f33f5a480b75aa94eb8556d997a16c0":"0x1158e460913d00000","0x9ffcf5ef46d933a519d1d16c6ba3189b27496224":"0x3635c9adc5dea00000","0x9ffedcc36b7cc312ad2a9ede431a514fccb49ba3":"0x244f579f3f5ca40000","0xa006268446643ec5e81e7acb3f17f1c351ee2ed9":"0xd8d726b7177a800000","0xa008019863c1a77c1499eb39bbd7bf2dd7a31cb9":"0x76d41c62494840000","0xa009bf076f1ba3fa57d2a7217218bed5565a7a7a":"0x3635c9adc5dea00000","0xa01e9476df84431825c836e8803a97e22fa5a0cd":"0x14542ba12a337c00000","0xa01f12d70f44aa7b113b285c22dcdb45873454a7":"0xfc936392801c0000","0xa01fd1906a908506dedae1e208128872b56ee792":"0xa2a15d09519be00000","0xa0228240f99e1de9cb32d82c0f2fa9a3d44b0bf3":"0x56bc75e2d631000000","0xa02bde6461686e19ac650c970d0672e76dcb4fc2":"0x1e09296c3378de40000","0xa02c1e34064f0475f7fa831ccb25014c3aa31ca2":"0x340aad21b3b700000","0xa02dc6aa328b880de99eac546823fccf774047fb":"0x6acb3df27e1f880000","0xa02e3f8f5959a7aab7418612129b701ca1b80010":"0x1158e460913d00000","0xa0347f0a98776390165c166d32963bf74dcd0a2f":"0x3635c9adc5dea00000","0xa035a3652478f82dbd6d115faa8ca946ec9e681d":"0x5f4e42dd4afec0000","0xa03a3dc7c533d1744295be955d61af3f52b51af5":"0x22b1c8c1227a00000","0xa0459ef3693aacd1647cd5d8929839204cef53be":"0x3635c9adc5dea00000","0xa04f2ae02add14c12faf65cb259022d0830a8e26":"0x152d02c7e14af6800000","0xa06cd1f396396c0a64464651d7c205efaf387ca3":"0x6c6acc67d7b1d40000","0xa072691c8dd7cd4237ff72a75c1a9506d0ce5b9e":"0x140ec80fa7ee880000","0xa072cebe62a9e9f61cc3fbf88a9efbfe3e9a8d70":"0x15af1d78b58c400000","0xa07682000b1bcf3002f85c80c0fa2949bd1e82fd":"0xd8d726b7177a800000","0xa07aa16d74aee8a9a3288d52db1551d593883297":"0x2086ac351052600000","0xa08d215b5b6aac4861a281ac7e400b78fef04cbf":"0x1158e460913d00000","0xa0951970dfd0832fb83bda12c23545e79041756c":"0x2086ac351052600000","0xa09f4d5eaa65a2f4cb750a49923401dae59090af":"0x796e3ea3f8ab00000","0xa0a0e65204541fca9b2fb282cd95138fae16f809":"0x21e19e0c9bab2400000","0xa0aa5f0201f04d3bbeb898132f7c11679466d901":"0x1fbed5215bb4c0000","0xa0aadbd9509722705f6d2358a5c79f37970f00f6":"0xad78ebc5ac6200000","0xa0b771951ce1deee363ae2b771b73e07c4b5e800":"0x4be4e7267b6ae00000","0xa0de5c601e696635c698b7ae9ca4539fc7b941ec":"0x12c3cbd704c9770000","0xa0e8ba661b48154cf843d4c2a5c0f792d528ee29":"0x15af1d78b58c400000","0xa0fc7e53c5ebd27a2abdac45261f84ab3b51aefb":"0xa313daec9bc0d90000","0xa0ff5b4cf016027e8323497d4428d3e5a83b8795":"0x16598d3c83ec0420000","0xa106465bbd19e1b6bce50d1b1157dc59095a3630":"0x6c6b935b8bbd400000","0xa106e6923edd53ca8ed650968a9108d6ccfd9670":"0x202fe1505afec898000","0xa109e18bb0a39c9ef82fa19597fc5ed8e9eb6d58":"0x58e7926ee858a00000","0xa11a03c4bb26d21eff677d5d555c80b25453ee7a":"0x3cb2759bc410f8000","0xa11effab6cf0f5972cffe4d56596e98968144a8f":"0x5a87e7d7f5f6580000","0xa1204dad5f560728a35c0d8fc79481057bf77386":"0x3635c9adc5dea00000","0xa12623e629df93096704b16084be2cd89d562da4":"0x1ccc9324511e4500000","0xa12a6c2d985daf0e4f5f207ae851aaf729b332cd":"0x152d02c7e14af6800000","0xa1336dfb96b6bcbe4b3edf3205be5723c90fad52":"0x10f0cf064dd59200000","0xa13b9d82a99b3c9bba5ae72ef2199edc7d3bb36c":"0x6c6acc67d7b1d40000","0xa13cfe826d6d1841dcae443be8c387518136b5e8":"0x1da56a4b0835bf800000","0xa1432ed2c6b7777a88e8d46d388e70477f208ca5":"0x1b1a7e413a196c50000","0xa144f6b60f72d64a21e330dadb62d8990ade2b09":"0x3635c9adc5dea00000","0xa15025f595acdbf3110f77c5bf24477e6548f9e8":"0x6c6b935b8bbd400000","0xa158148a2e0f3e92dc2ce38febc20107e3253c96":"0x6c6b935b8bbd400000","0xa16160851d2b9c349b92e46f829abfb210943595":"0x61093d7c2c6d380000","0xa166f911c644ac3213d29e0e1ae010f794d5ad26":"0x6c6b935b8bbd400000","0xa16d9e3d63986159a800b46837f45e8bb980ee0b":"0x6e1175da7ad1200000","0xa17070c2e9c5a940a4ec0e4954c4d7d643be8f49":"0x6c6b17033b361c8000","0xa17c9e4323069518189d5207a0728dcb92306a3f":"0x3635c9adc5dea00000","0xa18360e985f2062e8f8efe02ad2cbc91ad9a5aad":"0xa2a15d09519be00000","0xa1911405cf6e999ed011f0ddcd2a4ff7c28f2526":"0x22b1c8c1227a00000","0xa192698007cc11aa603d221d5feea076bcf7c30d":"0x6c6b935b8bbd400000","0xa192f06ab052d5fd7f94eea8318e827815fe677a":"0x71f8a93d01e540000","0xa1998144968a5c70a6415554cefec2824690c4a5":"0x1158e460913d00000","0xa1a1f0fa6d20b50a794f02ef52085c9d036aa6ca":"0x3635c9adc5dea00000","0xa1ae8d4540d4db6fdde7146f415b431eb55c7983":"0xaadec983fcff40000","0xa1b47c4d0ed6018842e6cfc8630ac3a3142e5e6b":"0x1158e460913d00000","0xa1c4f45a82e1c478d845082eb18875c4ea6539ab":"0x2a5a058fc295ed000000","0xa1dcd0e5b05a977c9623e5ae2f59b9ada2f33e31":"0x56bc75e2d63100000","0xa1e4380a3b1f749673e270229993ee55f35663b4":"0x6c6b935b8bbd400000","0xa1f193a0592f1feb9fdfc90aa813784eb80471c9":"0x4be4e7267b6ae00000","0xa1f2854050f872658ed82e52b0ad7bbc1cb921f6":"0x6d0317e2b326f70000","0xa1f5b840140d5a9acef402ac3cc3886a68cad248":"0x6c6b935b8bbd400000","0xa1f765c44fe45f790677944844be4f2d42165fbd":"0xc7e9cfde768ec70000","0xa1f7dde1d738d8cd679ea1ee965bee224be7d04d":"0x3d184450e5e93c0000","0xa1f8d8bcf90e777f19b3a649759ad95027abdfc3":"0xad78ebc5ac6200000","0xa202547242806f6e70e74058d6e5292defc8c8d4":"0x6c8754c8f30c080000","0xa20d071b1b003063497d7990e1249dabf36c35f7":"0x3635c9adc5dea00000","0xa20d8ff60caae31d02e0b665fa435d76f77c9442":"0x1a8a909dfcef400000","0xa211da03cc0e31ecce5309998718515528a090df":"0xad78ebc5ac6200000","0xa21442ab05340ade68c915f3c3399b9955f3f7eb":"0x2a034919dfbfbc0000","0xa2222259dd9c3e3ded127084f808e92a1887302c":"0x8c8339dafed480000","0xa22ade0ddb5c6ef8d0cd8de94d82b11082cb2e91":"0x374b57f3cef2700000","0xa24c3ab62181e9a15b78c4621e4c7c588127be26":"0x8cde43a83d3310000","0xa257ad594bd88328a7d90fc0a907df95eecae316":"0x1c3786ff3846930000","0xa25b086437fd2192d0a0f64f6ed044f38ef3da32":"0x12290f15180bdc0000","0xa276b058cb98d88beedb67e543506c9a0d9470d8":"0x90aafc76e02fbe0000","0xa282e969cac9f7a0e1c0cd90f5d0c438ac570da3":"0x2207eb89fc27380000","0xa291e9c7990d552dd1ae16cebc3fca342cbaf1d1":"0x43c33c1937564800000","0xa29319e81069e5d60df00f3de5adee3505ecd5fb":"0x6c6b935b8bbd400000","0xa2968fc1c64bac0b7ae0d68ba949874d6db253f4":"0x43c33c1937564800000","0xa29d5bda74e003474872bd5894b88533ff64c2b5":"0x21e19e0c9bab2400000","0xa29d661a6376f66d0b74e2fe9d8f26c0247ec84c":"0xdf3304079c13d20000","0xa2a435de44a01bd0ecb29e44e47644e46a0cdffb":"0x1b1d445a7affe78000","0xa2ace4c993bb1e5383f8ac74e179066e814f0591":"0x56bc75e2d63100000","0xa2b701f9f5cdd09e4ba62baebae3a88257105885":"0x3635c9adc5dea00000","0xa2c5854ff1599f98892c5725d262be1da98aadac":"0x1109ff333010e78000","0xa2c7eaffdc2c9d937345206c909a52dfb14c478f":"0x7c0860e5a80dc0000","0xa2d2aa626b09d6d4e4b13f7ffc5a88bd7ad36742":"0xfb8078507553830000","0xa2d38de1c73906f6a7ca6efeb97cf6f69cc421be":"0x3635c9adc5dea00000","0xa2dc65ee256b59a5bd7929774f904b358df3ada1":"0x483bce28beb09f80000","0xa2e0683a805de6a05edb2ffbb5e96f0570b637c3":"0x1158e460913d00000","0xa2e1b8aa900e9c139b3fa122354f6156d92a18b1":"0x1b1ae4d6e2ef500000","0xa2e2b5941e0c01944bfe1d5fb4e8a34b922ccfb1":"0xad78ebc5ac6200000","0xa2e460a989cb15565f9ecca7d121a18e4eb405b6":"0x6c6b935b8bbd400000","0xa2ecce2c49f72a0995a0bda57aacf1e9f001e22a":"0xd8d726b7177a800000","0xa2f472fe4f22b77db489219ea4023d11582a9329":"0x878678326eac9000000","0xa2f798e077b07d86124e1407df32890dbb4b6379":"0xad78ebc5ac6200000","0xa2f86bc061884e9eef05640edd51a2f7c0596c69":"0x6c6c44fe47ec050000","0xa2fa17c0fb506ce494008b9557841c3f641b8cae":"0x1158e460913d00000","0xa304588f0d850cd8d38f76e9e83c1bf63e333ede":"0x2285601216c8c0000","0xa3058c51737a4e96c55f2ef6bd7bb358167ec2a7":"0x20db3ae4481ad48000","0xa309df54cabce70c95ec3033149cd6678a6fd4cf":"0xc1f12c75101580000","0xa30a45520e5206d9004070e6af3e7bb2e8dd5313":"0x15af1d78b58c400000","0xa30e0acb534c9b3084e8501da090b4eb16a2c0cd":"0x6c6b935b8bbd400000","0xa3203095edb7028e6871ce0a84f548459f83300a":"0xd8d726b7177a800000","0xa321091d3018064279db399d2b2a88a6f440ae24":"0xad78ebc5ac62000000","0xa3232d068d50064903c9ebc563b515acc8b7b097":"0x6c8754c8f30c080000","0xa3241d890a92baf52908dc4aa049726be426ebd3":"0x43c2da661ca2f540000","0xa3294626ec2984c43b43da4d5d8e4669b11d4b59":"0x36a4cf636319c00000","0xa32cf7dde20c3dd5679ff5e325845c70c5962662":"0x1158e460913d00000","0xa339a3d8ca280e27d2415b26d1fc793228b66043":"0x36f28695b78ff00000","0xa33cb450f95bb46e25afb50fe05feee6fb8cc8ea":"0x2a1129d09367200000","0xa33f70da7275ef057104dfa7db64f472e9f5d553":"0x45946b0f9e9d60000","0xa34076f84bd917f20f8342c98ba79e6fb08ecd31":"0xe3aeb5737240a00000","0xa3430e1f647f321ed34739562323c7d623410b56":"0x3634fb9f1489a70000","0xa34f9d568bf7afd94c2a5b8a5ff55c66c4087999":"0x847d503b220eb00000","0xa35606d51220ee7f2146d411582ee4ee4a45596e":"0xd8aabe080bc9400000","0xa356551bb77d4f45a6d7e09f0a089e79cca249cb":"0x126e72a69a50d00000","0xa35c19132cac1935576abfed6c0495fb07881ba0":"0x6c6b935b8bbd400000","0xa365918bfe3f2627b9f3a86775d8756e0fd8a94b":"0x15af1d78b58c400000","0xa36e0d94b95364a82671b608cb2d373245612909":"0x821d221b5291f8000","0xa375b4bc24a24e1f797593cc302b2f331063fa5c":"0xad78ebc5ac6200000","0xa37622ac9bbdc4d82b75015d745b9f8de65a28ec":"0x9dc05cce28c2b80000","0xa379a5070c503d2fac89b8b3afa080fd45ed4bec":"0x42bf06b78ed3b500000","0xa3802d8a659e89a2c47e905430b2a827978950a7":"0x3635c9adc5dea00000","0xa38306cb70baa8e49186bd68aa70a83d242f2907":"0x6c6b935b8bbd400000","0xa38476691d34942eea6b2f76889223047db4617a":"0x6c6b935b8bbd400000","0xa387ce4e961a7847f560075c64e1596b5641d21c":"0x243d4d18229ca20000","0xa387ecde0ee4c8079499fd8e03473bd88ad7522a":"0x6acb3df27e1f880000","0xa3883a24f7f166205f1a6a9949076c26a76e7178":"0x62a992e53a0af00000","0xa38b5bd81a9db9d2b21d5ec7c60552cd02ed561b":"0x14542ba12a337c00000","0xa390ca122b8501ee3e5e07a8ca4b419f7e4dae15":"0x56bc75e2d63100000","0xa3932a31d6ff75fb3b1271ace7caa7d5e1ff1051":"0x43c33c1937564800000","0xa394ad4fd9e6530e6f5c53faecbede81cb172da1":"0x12f939c99edab800000","0xa3979a92760a135adf69d72f75e167755f1cb8c3":"0x56bc75e2d63100000","0xa39bfee4aec9bd75bd22c6b672898ca9a1e95d32":"0x21e19e0c9bab2400000","0xa3a262afd2936819230892fde84f2d5a594ab283":"0x65ea3db75546600000","0xa3a2e319e7d3a1448b5aa2468953160c2dbcba71":"0x6c6b935b8bbd400000","0xa3a57b0716132804d60aac281197ff2b3d237b01":"0x4be4e7267b6ae00000","0xa3a93ef9dbea2636263d06d8492f6a41de907c22":"0x340aad21b3b700000","0xa3ae1879007d801cb5f352716a4dd8ba2721de3d":"0x2a5a058fc295ed000000","0xa3ba0d3a3617b1e31b4e422ce269e873828d5d69":"0x2e141ea081ca080000","0xa3bc979b7080092fa1f92f6e0fb347e28d995045":"0x97c9ce4cf6d5c00000","0xa3bff1dfa9971668360c0d82828432e27bf54e67":"0xad78ebc5ac6200000","0xa3c14ace28b192cbb062145fcbbd5869c67271f6":"0x1b1ae4d6e2ef5000000","0xa3c33afc8cb4704e23153de2049d35ae71332472":"0x2b58addb89a2580000","0xa3d0b03cffbb269f796ac29d80bfb07dc7c6ad06":"0x6c6b935b8bbd400000","0xa3d583a7b65b23f60b7905f3e4aa62aac87f4227":"0x38befa126d5a9f8000","0xa3db364a332d884ba93b2617ae4d85a1489bea47":"0x5c283d410394100000","0xa3e051fb744aa3410c3b88f899f5d57f168df12d":"0xa030dcebbd2f4c0000","0xa3e3a6ea509573e21bd0239ece0523a7b7d89b2f":"0x6acb3df27e1f880000","0xa3f4ad14e0bb44e2ce2c14359c75b8e732d37054":"0xad78ebc5ac6200000","0xa3facc50195c0b4933c85897fecc5bbd995c34b8":"0x1158e460913d00000","0xa4035ab1e5180821f0f380f1131b7387c8d981cd":"0x1158e460913d00000","0xa40aa2bbce0c72b4d0dfffcc42715b2b54b01bfa":"0x3635c9adc5dea00000","0xa419a984142363267575566089340eea0ea20819":"0x6c6acc67d7b1d40000","0xa421dbb89b3a07419084ad10c3c15dfe9b32d0c2":"0x43c33c1937564800000","0xa422e4bf0bf74147cc895bed8f16d3cef3426154":"0x12ef3f62ee11368000","0xa4259f8345f7e3a8b72b0fec2cf75e321fda4dc2":"0x678a932062e4180000","0xa42908e7fe53980a9abf4044e957a54b70e99cbe":"0x6c6b935b8bbd400000","0xa429fa88731fdd350e8ecd6ea54296b6484fe695":"0x6ac5c62d9486070000","0xa430995ddb185b9865dbe62539ad90d22e4b73c2":"0x21e19e0c9bab2400000","0xa436c75453ccca4a1f1b62e5c4a30d86dde4be68":"0x6c6b935b8bbd400000","0xa437fe6ec103ca8d158f63b334224eccac5b3ea3":"0x1b1ae4d6e2ef5000000","0xa43b6da6cb7aac571dff27f09d39f846f53769b1":"0x14998f32ac78700000","0xa43b81f99356c0af141a03010d77bd042c71c1ee":"0x6c6b935b8bbd400000","0xa43e1947a9242b355561c30a829dfeeca2815af8":"0xd23d99969fd6918000","0xa4489a50ead5d5445a7bee4d2d5536c2a76c41f8":"0xad78ebc5ac6200000","0xa44fe800d96fcad73b7170d0f610cb8c0682d6ce":"0xd8d726b7177a800000","0xa45432a6f2ac9d56577b938a37fabac8cc7c461c":"0x3635c9adc5dea00000","0xa466d770d898d8c9d405e4a0e551efafcde53cf9":"0x1ab2cf7c9f87e20000","0xa4670731175893bbcff4fa85ce97d94fc51c4ba8":"0x1b1ae4d6e2ef5000000","0xa46b4387fb4dcce011e76e4d73547d4481e09be5":"0x487a9a304539440000","0xa46cd237b63eea438c8e3b6585f679e4860832ac":"0x3635c9adc5dea00000","0xa47779d8bc1c7bce0f011ccb39ef68b854f8de8f":"0x6c6b935b8bbd400000","0xa4826b6c3882fad0ed5c8fbb25cc40cc4f33759f":"0x701b43e34433d00000","0xa4875928458ec2005dbb578c5cd33580f0cf1452":"0x3635c9adc5dea00000","0xa49f523aa51364cbc7d995163d34eb590ded2f08":"0x9027421b2a9fbc0000","0xa4a49f0bc8688cc9e6dc04e1e08d521026e65574":"0xad78ebc5ac6200000","0xa4a7d306f510cd58359428c0d2f7c3609d5674d7":"0xb58cb61c3ccf340000","0xa4a83a0738799b971bf2de708c2ebf911ca79eb2":"0x2086ac351052600000","0xa4b09de6e713dc69546e76ef0acf40b94f0241e6":"0x117dc0627ec8700000","0xa4d2b429f1ad5349e31704969edc5f25ee8aca10":"0x21e19e0c9bab2400000","0xa4d6c82eddae5947fbe9cdfbd548ae33d91a7191":"0x1b1ae4d6e2ef5000000","0xa4da34450d22ec0ffcede0004b02f7872ee0b73a":"0x50f616673f0830000","0xa4dd59ab5e517d398e49fa537f899fed4c15e95d":"0x43c33c1937564800000","0xa4e623451e7e94e7e89ba5ed95c8a83a62ffc4ea":"0x1158e460913d00000","0xa4ed11b072d89fb136759fc69b428c48aa5d4ced":"0xe3f1527a03ca80000","0xa4fb14409a67b45688a8593e5cc2cf596ced6f11":"0x61093d7c2c6d380000","0xa514d00edd7108a6be839a638db2415418174196":"0x65a4da25d3016c00000","0xa522de7eb6ae1250522a513133a93bd42849475c":"0x43c33c1937564800000","0xa524a8cccc49518d170a328270a2f88133fbaf5d":"0xff7022dac108a0000","0xa539b4a401b584dfe0f344b1b422c65543167e2e":"0xad78ebc5ac6200000","0xa53ead54f7850af21438cbe07af686279a315b86":"0x21e19e0c9bab2400000","0xa543a066fb32a8668aa0736a0c9cd40d78098727":"0x3635c9adc5dea00000","0xa567770b6ae320bdde50f904d663e746a61dace6":"0x6c6b935b8bbd400000","0xa568db4d57e4d67462d733c69a9e0fe26e218327":"0x3b6bff9266c0ae0000","0xa5698035391e67a49013c0002079593114feb353":"0xd02ab486cedc00000","0xa570223ae3caa851418a9843a1ac55db4824f4fd":"0xad78ebc5ac6200000","0xa57360f002e0d64d2d74457d8ca4857ee00bcddf":"0x1233e232f618aa0000","0xa575f2891dcfcda83c5cf01474af11ee01b72dc2":"0x56cd55fc64dfe0000","0xa5783bf33432ff82ac498985d7d460ae67ec3673":"0x62a992e53a0af00000","0xa5874d754635a762b381a5c4c792483af8f23d1d":"0x2b5e3af16b1880000","0xa5a4227f6cf98825c0d5baff5315752ccc1a1391":"0x21e19e0c9bab2400000","0xa5ab4bd3588f46cb272e56e93deed386ba8b753d":"0x4842f04105872c8000","0xa5bad86509fbe0e0e3c0e93f6d381f1af6e9d481":"0x14542ba12a337c00000","0xa5c336083b04f9471b8c6ed73679b74d66c363ec":"0xa3650a4c9d20e20000","0xa5cd123992194b34c4781314303b03c54948f4b9":"0x6cfcc3d91da5630000","0xa5d5b8b62d002def92413710d13b6ff8d4fc7dd3":"0x15af1d78b58c400000","0xa5d96e697d46358d119af7819dc7087f6ae47fef":"0x317bee8af3315a78000","0xa5de5e434fdcdd688f1c31b6fb512cb196724701":"0x2b5e3af16b18800000","0xa5e0fc3c3affed3db6710947d1d6fb017f3e276d":"0x6c6b935b8bbd400000","0xa5e93b49ea7c509de7c44d6cfeddef5910deaaf2":"0x6c6b935b8bbd400000","0xa5e9cd4b74255d22b7d9b27ae8dd43ed6ed0252b":"0x298db2f54411d98000","0xa5f0077b351f6c505cd515dfa6d2fa7f5c4cd287":"0x878678326eac9000000","0xa5f075fd401335577b6683c281e6d101432dc6e0":"0x914878a8c05ee00000","0xa5fe2ce97f0e8c3856be0de5f4dcb2ce5d389a16":"0x13db0b8b6863e0000","0xa5ff62222d80c013cec1a0e8850ed4d354dac16d":"0xb41075c168b180000","0xa609c26dd350c235e44b2b9c1dddccd0a9d9f837":"0x3635c9adc5dea00000","0xa60c1209754f5d87b181da4f0817a81859ef9fd8":"0x2b5e3af16b1880000","0xa6101c961e8e1c15798ffcd0e3201d7786ec373a":"0x14542ba12a337c00000","0xa613456996408af1c2e93e177788ab55895e2b32":"0x15919ff477c88b80000","0xa61887818f914a20e31077290b83715a6b2d6ef9":"0x65ea3db75546600000","0xa61a54df784a44d71b771b87317509211381f200":"0x3635c9adc5dea00000","0xa61cdbadf04b1e54c883de6005fcdf16beb8eb2f":"0x6c6b935b8bbd400000","0xa639acd96b31ba53b0d08763229e1f06fd105e9d":"0x1b1ae4d6e2ef5000000","0xa642501004c90ea9c9ed1998ba140a4cd62c6f5f":"0xd94fb8b10f8b18000","0xa644ed922cc237a3e5c4979a995477f36e50bc62":"0x1fa73d845d7e960000","0xa646a95c6d6f59f104c6541d7760757ab392b08c":"0xe3aeb5737240a00000","0xa6484cc684c4c91db53eb68a4da45a6a6bda3067":"0x14542ba12a337c00000","0xa64e5ffb704c2c9139d77ef61d8cdfa31d7a88e9":"0x7c0860e5a80dc0000","0xa65426cff378ed23253513b19f496de45fa7e18f":"0x18650127cc3dc800000","0xa66a4963b27f1ee1932b172be5964e0d3ae54b51":"0x960db77681e940000","0xa67f38819565423aa85f3e3ab61bc763cbab89dd":"0x7377b022c6be080000","0xa68c313445c22d919ee46cc2d0cdff043a755825":"0x41374fd21b0d88000","0xa68e0c30cba3bc5a883e540320f999c7cd558e5c":"0x6192333762a58c8000","0xa690f1a4b20ab7ba34628620de9ca040c43c1963":"0xd8d726b7177a800000","0xa69d7cd17d4842fe03f62a90b2fbf8f6af7bb380":"0x56bc75e2d63100000","0xa6a08252c8595177cc2e60fc27593e2379c81fb1":"0x11651ac3e7a758000","0xa6a0de421ae54f6d17281308f5646d2f39f7775d":"0x6c6b935b8bbd400000","0xa6b2d573297360102c07a18fc21df2e7499ff4eb":"0xd96fce90cfabcc0000","0xa6c910ce4d494a919ccdaaa1fc3b82aa74ba06cf":"0x1b1ae4d6e2ef5000000","0xa6e3baa38e104a1e27a4d82869afb1c0ae6eff8d":"0x11140eead8b710000","0xa6eebbe464d39187bf80ca9c13d72027ec5ba8be":"0xa2a15d09519be00000","0xa6f62b8a3d7f11220701ab9ffffcb327959a2785":"0x1b6e291f18dba80000","0xa6f93307f8bce03195fece872043e8a03f7bd11a":"0x9c734bad5111580000","0xa701df79f594901afe1444485e6b20c3bda2b9b3":"0x3635c9adc5dea00000","0xa7024cfd742c1ec13c01fea18d3042e65f1d5dee":"0x263119a28abd0b08000","0xa718aaad59bf395cba2b23e09b02fe0c89816247":"0x36303c97e468780000","0xa7247c53d059eb7c9310f628d7fc6c6a0a773f08":"0x1b1ae4d6e2ef500000","0xa7253763cf4a75df92ca1e766dc4ee8a2745147b":"0x2463770e90a8f500000","0xa72ee666c4b35e82a506808b443cebd5c632c7dd":"0x2b5e3af16b18800000","0xa74444f90fbb54e56f3ac9b6cfccaa4819e4614a":"0x1158e460913d00000","0xa747439ad0d393b5a03861d77296326de8bb9db9":"0x3635c9adc5dea00000","0xa7607b42573bb6f6b4d4f23c7e2a26b3a0f6b6f0":"0x57473d05dabae80000","0xa76929890a7b47fb859196016c6fdd8289ceb755":"0x10f0cf064dd59200000","0xa76b743f981b693072a131b22ba510965c2fefd7":"0xfc936392801c0000","0xa76d3f156251b72c0ccf4b47a3393cbd6f49a9c5":"0x487a9a304539440000","0xa77428bcb2a0db76fc8ef1e20e461a0a32c5ac15":"0x15be6174e1912e0000","0xa7758cecb60e8f614cce96137ef72b4fbd07774a":"0x1b1ae4d6e2ef500000","0xa7775e4af6a23afa201fb78b915e51a515b7a728":"0x68155a43676e00000","0xa77f3ee19e9388bbbb2215c62397b96560132360":"0xad78ebc5ac6200000","0xa7859fc07f756ea7dcebbccd42f05817582d973f":"0x21e19e0c9bab2400000","0xa7966c489f4c748a7ae980aa27a574251767caf9":"0xa2a15d09519be00000","0xa7a3bb6139b0ada00c1f7f1f9f56d994ba4d1fa8":"0x6c6b935b8bbd400000","0xa7a3f153cdc38821c20c5d8c8241b294a3f82b24":"0x1b1ae4d6e2ef500000","0xa7a517d7ad35820b09d497fa7e5540cde9495853":"0x6c6b935b8bbd400000","0xa7c9d388ebd873e66b1713448397d0f37f8bd3a8":"0x10f0cf064dd59200000","0xa7dcbba9b9bf6762c145416c506a71e3b497209c":"0x6c6acc67d7b1d40000","0xa7e74f0bdb278ff0a805a648618ec52b166ff1be":"0x56bc75e2d63100000","0xa7e83772bc200f9006aa2a260dbaa8483dc52b30":"0xb42d5366637e50000","0xa7ef35ce87eda6c28df248785815053ec97a5045":"0x10f0ce949e00f930000","0xa7f9220c8047826bd5d5183f4e676a6d77bfed36":"0x85068976be81c0000","0xa807104f2703d679f8deafc442befe849e42950b":"0x6c6b935b8bbd400000","0xa80cb1738bac08d4f9c08b4deff515545fa8584f":"0x1b1ae4d6e2ef500000","0xa819d2ece122e028c8e8a04a064d02b9029b08b9":"0x3635c9adc5dea00000","0xa825fd5abb7926a67cf36ba246a24bd27be6f6ed":"0xf43fc2c04ee00000","0xa8285539869d88f8a961533755717d7eb65576ae":"0xad78ebc5ac6200000","0xa83382b6e15267974a8550b98f7176c1a353f9be":"0xbffdaf2fc1b1a40000","0xa8446c4781a737ac4328b1e15b8a0b3fbb0fd668":"0x48794d1f246192a0000","0xa8455b411765d6901e311e726403091e42c56683":"0xb73aec3bfe14500000","0xa86613e6c4a4c9c55f5c10bcda32175dcbb4af60":"0x243d6c2e36be6ae0000","0xa86db07d9f812f4796622d40e03d135874a88a74":"0x1158e460913d00000","0xa87f7abd6fa31194289678efb63cf584ee5e2a61":"0xd8d726b7177a800000","0xa880e2a8bf88a1a82648b4013c49c4594c433cc8":"0x1004e2e45fb7ee00000","0xa88577a073fbaf33c4cd202e00ea70ef711b4006":"0x6c6b935b8bbd400000","0xa8914c95b560ec13f140577338c32bcbb77d3a7a":"0x9c2007651b2500000","0xa89ac93b23370472daac337e9afdf642543f3e57":"0x21e19e0c9bab2400000","0xa89df34859edd7c820db887740d8ff9e15157c7b":"0x6c6b935b8bbd400000","0xa8a43c009100616cb4ae4e033f1fc5d7e0b6f152":"0xd588d078b43f4d8000","0xa8a708e84f82db86a35502193b4c6ee9a76ebe8f":"0x3708baed3d68900000","0xa8a7b68adab4e3eadff19ffa58e34a3fcec0d96a":"0x14542ba12a337c00000","0xa8a8dbdd1a85d1beee2569e91ccc4d09ae7f6ea1":"0x13a6b2b564871a00000","0xa8aca748f9d312ec747f8b6578142694c7e9f399":"0x6c6b935b8bbd400000","0xa8b65ba3171a3f77a6350b9daf1f8d55b4d201eb":"0x2862f3b0d222040000","0xa8beb91c2b99c8964aa95b6b4a184b1269fc3483":"0x15af1d78b58c400000","0xa8c0b02faf02cb5519dda884de7bbc8c88a2da81":"0xe7c2518505060000","0xa8c1d6aa41fe3d65f67bd01de2a866ed1ed9ae52":"0x1a055690d9db80000","0xa8cafac32280d021020bf6f2a9782883d7aabe12":"0x56bc75e2d63100000","0xa8db0b9b201453333c757f6ad9bcb555c02da93b":"0x7742b7830f341d0000","0xa8e42a4e33d7526cca19d9a36dcd6e8040d0ea73":"0x3a8c02c5ea2de00000","0xa8e7201ff619faffc332e6ad37ed41e301bf014a":"0x2086ac351052600000","0xa8ee1df5d44b128469e913569ef6ac81eeda4fc8":"0x1b1ae4d6e2ef500000","0xa8ef9ad274436042903e413c3b0c62f5f52ed584":"0x21e19e0c9bab2400000","0xa8f37f0ab3a1d448a9e3ce40965f97a646083a34":"0x11e0e4f8a50bd40000","0xa8f89dd5cc6e64d7b1eeace00702022cd7d2f03d":"0x25f273933db5700000","0xa90476e2efdfee4f387b0f32a50678b0efb573b5":"0x21e19e0c9bab2400000","0xa9145046fa3628cf5fd4c613927be531e6db1fdd":"0x6124fee993bc00000","0xa914cdb571bfd93d64da66a4e108ea134e50d000":"0x4d8738994713798000","0xa91a5a7b341f99c535144e20be9c6b3bb4c28e4d":"0x126753aa224a70b0000","0xa9252551a624ae513719dabe5207fbefb2fd7749":"0x22b1c8c1227a00000","0xa927d48bb6cb814bc609cbcaa9151f5d459a27e1":"0xeb935090064180000","0xa929c8bd71db0c308dac06080a1747f21b1465aa":"0x1b1ae4d6e2ef500000","0xa94bbb8214cf8da0c2f668a2ac73e86248528d4b":"0x340aad21b3b7000000","0xa951b244ff50cfae591d5e1a148df6a938ef2a1a":"0x5e001584dfcf580000","0xa960b1cadd3b5c1a8e6cb3abcaf52ee7c3d9fa88":"0x528bc3545e52680000","0xa961171f5342b173dd70e7bfe5b5ca238b13bcdd":"0xb82794a9244f0c8000","0xa975b077fcb4cc8efcbf838459b6fa243a4159d6":"0x22b1c8c1227a00000","0xa97beb3a48c45f1528284cb6a95f7de453358ec6":"0x690836c0af5f5600000","0xa97e072144499fe5ebbd354acc7e7efb58985d08":"0x90f534608a72880000","0xa986762f7a4f294f2e0b173279ad2c81a2223458":"0x1158e460913d00000","0xa98f109835f5eacd0543647c34a6b269e3802fac":"0x15af1d78b58c400000","0xa997dfc7986a27050848fa1c64d7a7d6e07acca2":"0x7c0860e5a80dc0000","0xa99991cebd98d9c838c25f7a7416d9e244ca250d":"0x3635c9adc5dea00000","0xa9a1cdc33bfd376f1c0d76fb6c84b6b4ac274d68":"0x10f0cf064dd59200000","0xa9a8eca11a23d64689a2aa3e417dbb3d336bb59a":"0xe3453cd3b67ba8000","0xa9acf600081bb55bb6bfbab1815ffc4e17e85a95":"0xad78ebc5ac6200000","0xa9ad1926bc66bdb331588ea8193788534d982c98":"0x65a4da25d3016c00000","0xa9af21acbe482f8131896a228036ba51b19453c3":"0x2b5e021980cc18000","0xa9b2d2e0494eab18e07d37bbb856d80e80f84cd3":"0x21e19e0c9bab2400000","0xa9ba6f413b82fcddf3affbbdd09287dcf50415ca":"0xd8d726b7177a800000","0xa9be88ad1e518b0bbb024ab1d8f0e73f790e0c76":"0x97c9ce4cf6d5c00000","0xa9bfc410dddb20711e45c07387eab30a054e19ac":"0x3e99601edf4e530000","0xa9d4a2bcbe5b9e0869d70f0fe2e1d6aacd45edc5":"0xac6e77ab663a80000","0xa9d64b4f3bb7850722b58b478ba691375e224e42":"0x14542ba12a337c00000","0xa9d6f871ca781a759a20ac3adb972cf12829a208":"0x3224f42723d4540000","0xa9dc0424c6969d798358b393b1933a1f51bee00a":"0x43c33c1937564800000","0xa9e194661aac704ee9dea043974e9692ded84a5d":"0x1a26a51422a0700000","0xa9e28337e6357193d9e2cb236b01be44b81427df":"0x77432217e683600000","0xa9e6e25e656b762558619f147a21985b8874edfe":"0x6c6b935b8bbd400000","0xa9e9dbce7a2cb03694799897bed7c54d155fdaa8":"0xab5ae8fc99d658000","0xa9ed377b7d6ec25971c1a597a3b0f3bead57c98f":"0x15af1d78b58c400000","0xaa0200f1d17e9c54da0647bb96395d57a78538d8":"0x393ef1a5127c800000","0xaa0ca3737337178a0caac3099c584b056c56301c":"0x2fb474098f67c00000","0xaa136b47962bb8b4fb540db4ccf5fdd042ffb8cf":"0x1b1b6bd7af64c70000","0xaa14422d6f0ae5a758194ed15780c838d67f1ee1":"0x60932056c449de80000","0xaa16269aac9c0d803068d82fc79151dadd334b66":"0xd8d726b7177a800000","0xaa167026d39ab7a85635944ed9edb2bfeba11850":"0x1c1d5e21b4fcf680000","0xaa1b3768c16d821f580e76c8e4c8e86d7dc78853":"0x15af1d78b58c400000","0xaa1df92e51dff70b1973e0e924c66287b494a178":"0x1cf84a30a0a0c00000","0xaa2c670096d3f939305325427eb955a8a60db3c5":"0x6c95590699232d0000","0xaa3135cb54f102cbefe09e96103a1a796718ff54":"0x32222d9c331940000","0xaa321fdbd449180db8ddd34f0fe906ec18ee0914":"0x252248deb6e6940000","0xaa3925dc220bb4ae2177b2883078b6dc346ca1b2":"0x1b1ae4d6e2ef5000000","0xaa3f29601a1331745e05c42830a15e71938a6237":"0x5c283d410394100000","0xaa47a4ffc979363232c99b99fada0f2734b0aeee":"0x1b8489df4dbff940000","0xaa493d3f4fb866491cf8f800efb7e2324ed7cfe5":"0x5c283d410394100000","0xaa56a65dc4abb72f11bae32b6fbb07444791d5c9":"0x2894e975bf496c0000","0xaa5afcfd8309c2df9d15be5e6a504e7d706624c5":"0x13cf422e305a1378000","0xaa8eb0823b07b0e6d20aadda0e95cf3835be192e":"0x1bc16d674ec800000","0xaa91237e740d25a92f7fa146faa18ce56dc6e1f3":"0x3224f42723d4540000","0xaa960e10c52391c54e15387cc67af827b5316dcc":"0x6c6b935b8bbd400000","0xaa9bd4589535db27fa2bc903ca17d679dd654806":"0x6c6b935b8bbd400000","0xaaa8defe11e3613f11067fb983625a08995a8dfc":"0xad78ebc5ac6200000","0xaaaae68b321402c8ebc13468f341c63c0cf03fce":"0x52663ccab1e1c00000","0xaaad1baade5af04e2b17439e935987bf8c2bb4b9":"0x6c6b935b8bbd400000","0xaab00abf5828d7ebf26b47ceaccdb8ba03325166":"0x21e19e0c9bab2400000","0xaabdb35c1514984a039213793f3345a168e81ff1":"0x10cac896d239000000","0xaaca60d9d700e78596bbbbb1f1e2f70f4627f9d8":"0x3635bb77cb4b860000","0xaaced8a9563b1bc311dbdffc1ae7f57519c4440c":"0x6c6b935b8bbd400000","0xaad2b7f8106695078e6c138ec81a7486aaca1eb2":"0xad78ebc5ac6200000","0xaae61e43cb0d0c96b30699f77e00d711d0a3979b":"0x3635c9adc5dea00000","0xaae732eda65988c3a00c7f472f351c463b1c968e":"0x6c6b935b8bbd400000","0xaaf023fef290a49bb78bb7abc95d669c50d528b0":"0xad78ebc5ac6200000","0xaaf5b207b88b0de4ac40d747cee06e172df6e745":"0x6a7b71d7f51d0900000","0xaaf9ee4b886c6d1e95496fd274235bf4ecfcb07d":"0x4be4e7267b6ae00000","0xaafb7b013aa1f8541c7e327bf650adbd194c208f":"0x499e092d01f4780000","0xab098633eeee0ccefdf632f9575456f6dd80fc86":"0x2a5a058fc295ed000000","0xab0ced762e1661fae1a92afb1408889413794825":"0x678a932062e4180000","0xab14d221e33d544629198cd096ed63dfa28d9f47":"0x14542ba12a337c00000","0xab209fdca979d0a647010af9a8b52fc7d20d8cd1":"0x1eee2532c7c2d040000","0xab27ba78c8e5e3daef31ad05aef0ff0325721e08":"0x195ece006e02d00000","0xab2871e507c7be3965498e8fb462025a1a1c4264":"0x2a034919dfbfbc0000","0xab3861226ffec1289187fb84a08ec3ed043264e8":"0x3635c9adc5dea00000","0xab3d86bc82927e0cd421d146e07f919327cdf6f9":"0x678a932062e4180000","0xab3e62e77a8b225e411592b1af300752fe412463":"0x215f835bc769da80000","0xab3e78294ba886a0cfd5d3487fb3a3078d338d6e":"0x6acb3df27e1f880000","0xab4004c0403f7eabb0ea586f212156c4203d67f1":"0x6c6acc67d7b1d40000","0xab416fe30d58afe5d9454c7fce7f830bcc750356":"0x6353701c605db8000","0xab4572fbb1d72b575d69ec6ad17333873e8552fc":"0x6c6ac54cda68470000","0xab5a79016176320973e8cd38f6375530022531c0":"0x3635c9adc5dea00000","0xab5dfc1ea21adc42cf8c3f6e361e243fd0da61e5":"0x1043561a8829300000","0xab6b65eab8dfc917ec0251b9db0ecfa0fa032849":"0x1b1ae4d6e2ef500000","0xab7091932e4bc39dbb552380ca934fd7166d1e6e":"0xb50fcfafebecb00000","0xab7416ff32254951cbbc624ec7fb45fc7ecaa872":"0x126e72a69a50d00000","0xab7c42c5e52d641a07ad75099c62928b7f86622f":"0x12361aa21d14ba0000","0xab7d54c7c6570efca5b4b8ce70f52a5773e5d53b":"0xf283abe9d9f380000","0xab7e0b83ed9a424c6d1e6a6f87a4dbf06409c7d6":"0x821ab0d44149800000","0xab84a0f147ad265400002b85029a41fc9ce57f85":"0x3635c9adc5dea00000","0xab93b26ece0a0aa21365afed1fa9aea31cd54468":"0x572b7b98736c200000","0xab948a4ae3795cbca13126e19253bdc21d3a8514":"0xad78ebc5ac6200000","0xab9ad36e5c74ce2e96399f57839431d0e79f96ab":"0x8e3f50b173c100000","0xabb2e6a72a40ba6ed908cdbcec3c5612583132fe":"0x4f2591f896a6500000","0xabc068b4979b0ea64a62d3b7aa897d73810dc533":"0x6acb3df27e1f880000","0xabc45f84db7382dde54c5f7d8938c42f4f3a3bc4":"0xad78ebc5ac6200000","0xabc4caeb474d4627cb6eb456ecba0ecd08ed8ae1":"0xd5967be4fc3f100000","0xabc74706964960dfe0dca3dca79e9216056f1cf4":"0x878678326eac9000000","0xabc9a99e8a2148a55a6d82bd51b98eb5391fdbaf":"0x14542ba12a337c00000","0xabcdbc8f1dd13af578d4a4774a62182bedf9f9be":"0x1fcc27bc459d20000","0xabd154903513b8da4f019f68284b0656a1d0169b":"0x3635c9adc5dea00000","0xabd21eff954fc6a7de26912a7cbb303a6607804e":"0x523c9aa696eb940000","0xabd4d6c1666358c0406fdf3af248f78ece830104":"0x727de34a24f9000000","0xabd9605b3e91acfd777830d16463478ae0fc7720":"0x73f75d1a085ba0000","0xabdc9f1bcf4d19ee96591030e772c334302f7d83":"0x87e5e11a81cb5f80000","0xabde147b2af789eaa586547e66c4fa2664d328a4":"0xd6b6081f34c128000","0xabe07ced6ac5ddf991eff6c3da226a741bd243fe":"0x21e19e0c9bab2400000","0xabf12fa19e82f76c718f01bdca0003674523ef30":"0x6c6b935b8bbd400000","0xabf728cf9312f22128024e7046c251f5dc5901ed":"0x641e8a13563d8f80000","0xabf8ffe0708a99b528cc1ed4e9ce4b0d0630be8c":"0x7ab5c2aeeee6380000","0xabfcf5f25091ce57875fc674dcf104e2a73dd2f2":"0x11164759ffb320000","0xabfe936425dcc7b74b955082bbaaf2a11d78bc05":"0x4be4e7267b6ae00000","0xac024f594f9558f04943618eb0e6b2ee501dc272":"0x6c6b935b8bbd400000","0xac122a03cd058c122e5fe17b872f4877f9df9572":"0x6ac5c62d9486070000","0xac142eda1157b9a9a64390df7e6ae694fac98905":"0xad78ebc5ac6200000","0xac1dfc984b71a19929a81d81f04a7cbb14073703":"0x2086ac351052600000","0xac21c1e5a3d7e0b50681679dd6c792dbca87decb":"0x152d02c7e14af6800000","0xac2889b5966f0c7f9edb42895cb69d1c04f923a2":"0x10f0cf064dd59200000","0xac28b5edea05b76f8c5f97084541277c96696a4c":"0x3635c9adc5dea00000","0xac2c8e09d06493a63858437bd20be01962450365":"0x678a932062e4180000","0xac2e766dac3f648f637ac6713fddb068e4a4f04d":"0xaadec983fcff40000","0xac3900298dd14d7cc96d4abb428da1bae213ffed":"0x53ca12974851c010000","0xac3da526cfce88297302f34c49ca520dc271f9b2":"0x2b5e3af16b18800000","0xac4460a76e6db2b9fcd152d9c7718d9ac6ed8c6f":"0xad78ebc5ac6200000","0xac4acfc36ed6094a27e118ecc911cd473e8fb91f":"0x61913e14403c0c0000","0xac4cc256ae74d624ace80db078b2207f57198f6b":"0x6c7974123f64a40000","0xac4ee9d502e7d2d2e99e59d8ca7d5f00c94b4dd6":"0x3635c9adc5dea00000","0xac52b77e15664814f39e4f271be641308d91d6cc":"0xbed1d0263d9f00000","0xac5999a89d2dd286d5a80c6dee7e86aad40f9e12":"0xd255d112e103a00000","0xac5f627231480d0d95302e6d89fc32cb1d4fe7e3":"0xad78ebc5ac6200000","0xac608e2bac9dd20728d2947effbbbf900a9ce94b":"0x1454b0db37568fc0000","0xac6d02e9a46b379fac4ac9b1d7b5d47bc850ce16":"0x5f68e8131ecf800000","0xac6f68e837cf1961cb14ab47446da168a16dde89":"0x487a9a304539440000","0xac77bdf00fd5985b5db12bbef800380abc2a0677":"0x3635c9adc5dea00000","0xac7e03702723cb16ee27e22dd0b815dc2d5cae9f":"0x3635c9adc5dea000000","0xac8b509aefea1dbfaf2bb33500d6570b6fd96d51":"0x62a992e53a0af00000","0xac8e87ddda5e78fcbcb9fa7fc3ce038f9f7d2e34":"0x6c6b935b8bbd400000","0xac9fff68c61b011efbecf038ed72db97bb9e7281":"0x205b4dfa1ee74780000","0xaca1e6bc64cc3180f620e94dc5b1bcfd8158e45d":"0x6c6b935b8bbd400000","0xaca2a838330b17302da731d30db48a04f0f207c1":"0x487a9a304539440000","0xacaaddcbf286cb0e215dda55598f7ff0f4ada5c6":"0x3635c9adc5dea00000","0xacb94338554bc488cc88ae2d9d94080d6bdf8410":"0x3635c9adc5dea00000","0xacbc2d19e06c3babbb5b6f052b6bf7fc37e07229":"0xad78ebc5ac6200000","0xacbd185589f7a68a67aa4b1bd65077f8c64e4e21":"0xad78ebc5ac6200000","0xacc062702c59615d3444ef6214b8862b009a02ed":"0x514fcb24ff9c500000","0xacc0909fda2ea6b7b7a88db7a0aac868091ddbf6":"0x133765f1e26c78000","0xacc1c78786ab4d2b3b277135b5ba123e0400486b":"0x44591d67fecc80000","0xacc46a2a555c74ded4a2bd094e821b97843b40c0":"0x692ae8897081d00000","0xacc59f3b30ceffc56461cc5b8df48902240e0e7b":"0x6c6b935b8bbd400000","0xacce01e0a70610dc70bb91e9926fa9957f372fba":"0x1d1c5f3eda20c40000","0xacd8dd91f714764c45677c63d852e56eb9eece2e":"0x6c6b935b8bbd400000","0xace2abb63b0604409fbde3e716d2876d44e8e5dd":"0x83d6c7aab63600000","0xacec91ef6941cf630ba9a3e787a012f4a2d91dd4":"0x10f0cf064dd592000000","0xad0a4ae478e9636e88c604f242cf5439c6d45639":"0xbed1d0263d9f000000","0xad1799aad7602b4540cd832f9db5f11150f1687a":"0x6c6b935b8bbd400000","0xad1d68a038fd2586067ef6d135d9628e79c2c924":"0xfe09a5279e2abc0000","0xad2a5c00f923aaf21ab9f3fb066efa0a03de2fb2":"0x3635bb77cb4b860000","0xad3565d52b688added08168b2d3872d17d0a26ae":"0x56bc75e2d63100000","0xad377cd25eb53e83ae091a0a1d2b4516f484afde":"0x692ae8897081d00000","0xad414d29cb7ee973fec54e22a388491786cf5402":"0x2f6f10780d22cc00000","0xad44357e017e244f476931c7b8189efee80a5d0a":"0x1043561a8829300000","0xad57aa9d00d10c439b35efcc0becac2e3955c313":"0xad78ebc5ac6200000","0xad59a78eb9a74a7fbdaefafa82eada8475f07f95":"0x1b1ae4d6e2ef500000","0xad5a8d3c6478b69f657db3837a2575ef8e1df931":"0x20156e104c1b30000","0xad660dec825522a9f62fcec3c5b731980dc286ea":"0xa2a15d09519be00000","0xad6628352ed3390bafa86d923e56014cfcb360f4":"0x6c6b935b8bbd400000","0xad728121873f0456d0518b80ab6580a203706595":"0x1b1ae4d6e2ef500000","0xad732c976593eec4783b4e2ecd793979780bfedb":"0x6c6b935b8bbd400000","0xad7dd053859edff1cb6f9d2acbed6dd5e332426f":"0x6acb3df27e1f880000","0xad80d865b85c34d2e6494b2e7aefea6b9af184db":"0xd8d726b7177a800000","0xad8bfef8c68a4816b3916f35cb7bfcd7d3040976":"0x878678326eac9000000","0xad8e48a377695de014363a523a28b1a40c78f208":"0x3635c9adc5dea00000","0xad910a23d6850613654af786337ad2a70868ac6d":"0x6c68ccd09b022c0000","0xad927e03d1599a78ca2bf0cad2a183dceb71eac0":"0x6acb3df27e1f880000","0xad92ca066edb7c711dfc5b166192d1edf8e77185":"0x79f905c6fd34e800000","0xad94235fc3b3f47a2413af31e884914908ef0c45":"0x1b1b0142d815840000","0xad9e97a0482f353a05c0f792b977b6c7e811fa5f":"0xad78ebc5ac6200000","0xad9f4c890a3b511cee51dfe6cfd7f1093b76412c":"0x1b767cbfeb0ce40000","0xadaa0e548c035affed64ca678a963fabe9a26bfd":"0x3cb71f51fc5580000","0xadb948b1b6fefe207de65e9bbc2de98e605d0b57":"0x6c6b935b8bbd400000","0xadc19ec835afe3e58d87dc93a8a9213c90451326":"0x6adbe5342282000000","0xadc8228ef928e18b2a807d00fb3c6c79cd1d9e96":"0x13c69df334ee80000","0xaddb26317227f45c87a2cb90dc4cfd02fb23caf8":"0x3635c9adc5dea00000","0xade6f8163bf7c7bb4abe8e9893bd0cc112fe8872":"0x11c25d004d01f80000","0xadeb204aa0c38e179e81a94ed8b3e7d53047c26b":"0x20f5b1eaad8d800000","0xadeb52b604e5f77faaac88275b8d6b49e9f9f97f":"0x71426b00956ed20000","0xadf1acfe99bc8c14b304c8d905ba27657b8a7bc4":"0x43c33c1937564800000","0xadf85203c8376a5fde9815384a350c3879c4cb93":"0x3e31fc675815aa0000","0xadff0d1d0b97471e76d789d2e49c8a74f9bd54ff":"0x65ea3db75546600000","0xae062c448618643075de7a0030342dced63dbad7":"0x2cc6cd8cc282b30000","0xae10e27a014f0d306baf266d4897c89aeee2e974":"0x43c33c1937564800000","0xae126b382cf257fad7f0bc7d16297e54cc7267da":"0x1043561a8829300000","0xae13a08511110f32e53be4127845c843a1a57c7b":"0x1b1ae4d6e2ef500000","0xae179a460db66326743d24e67523a57b246daf7f":"0x10007ae7ce5bbe40000","0xae222865799079aaf4f0674a0cdaab02a6d570ff":"0x6c6b935b8bbd400000","0xae239acffd4ebe2e1ba5b4170572dc79cc6533ec":"0x28a857425466f800000","0xae2f9c19ac76136594432393b0471d08902164d3":"0x25df05c6a897e40000","0xae34861d342253194ffc6652dfde51ab44cad3fe":"0x194608686316bd8000","0xae36f7452121913e800e0fcd1a65a5471c23846f":"0x8e3f50b173c100000","0xae3f98a443efe00f3e711d525d9894dc9a61157b":"0x1004e2e45fb7ee0000","0xae47e2609cfafe369d66d415d939de05081a9872":"0x5baecf025f9b6500000","0xae4f122e35c0b1d1e4069291457c83c07f965fa3":"0x3635c9adc5dea00000","0xae5055814cb8be0c117bb8b1c8d2b63b4698b728":"0x1bc932ec573a38000","0xae538c73c5b38d8d584d7ebdadefb15cabe48357":"0x3627e8f712373c0000","0xae57cc129a96a89981dac60d2ffb877d5dc5e432":"0x3c3a2394b396550000","0xae5aa1e6c2b60f6fd3efe721bb4a719cbe3d6f5d":"0x2b24c6b55a5e620000","0xae5c9bdad3c5c8a1220444aea5c229c1839f1d64":"0x19e2a4c818b9060000","0xae5ce3355a7ba9b332760c0950c2bc45a85fa9a0":"0x15af1d78b58c400000","0xae5d221afcd3d29355f508eadfca408ce33ca903":"0x152d02c7e14af6800000","0xae635bf73831119d2d29c0d04ff8f8d8d0a57a46":"0x487a9a304539440000","0xae648155a658370f929be384f7e001047e49dd46":"0x2df24ae32be20440000","0xae6f0c73fdd77c489727512174d9b50296611c4c":"0x14542ba12a337c00000","0xae70e69d2c4a0af818807b1a2705f79fd0b5dbc4":"0x35659ef93f0fc40000","0xae7739124ed153052503fc101410d1ffd8cd13b7":"0x3634fb9f1489a70000","0xae78bb849139a6ba38ae92a09a69601cc4cb62d1":"0x1b1ae4d6e2ef500000","0xae842210f44d14c4a4db91fc9d3b3b50014f7bf7":"0xd8d726b7177a800000","0xae842e81858ecfedf6506c686dc204ac15bf8b24":"0x22b1c8c1227a00000","0xae8954f8d6166de507cf61297d0fc7ca6b9e7128":"0x1043561a8829300000","0xae9ecd6bdd952ef497c0050ae0ab8a82a91898ce":"0x1a055690d9db80000","0xae9f5c3fbbe0c9bcbf1af8ff74ea280b3a5d8b08":"0x5dc892aa1131c80000","0xaead88d689416b1c91f2364421375b7d3c70fb2e":"0x6c6b935b8bbd400000","0xaeadfcd0978edad74a32bd01a0a51d37f246e661":"0xe18398e7601900000","0xaeb916ebf49d0f86c13f7331cef19e129937512d":"0x2085655b8d1b0a0000","0xaebd4f205de799b64b3564b256d42a711d37ef99":"0x3fcf8b4574f84e0000","0xaec27ce2133e82d052520afb5c576d9f7eb93ed2":"0xdd04120ba09cfe60000","0xaec27ff5d7f9ddda91183f46f9d52543b6cd2b2f":"0x18650127cc3dc80000","0xaee49d68adedb081fd43705a5f78c778fb90de48":"0x1158e460913d00000","0xaef5b12258a18dec07d5ec2e316574919d79d6d6":"0x6c6b935b8bbd400000","0xaefcfe88c826ccf131d54eb4ea9eb80e61e1ee25":"0x126e72a69a50d00000","0xaf06f5fa6d1214ec43967d1bd4dde74ab814a938":"0x4c53ecdc18a600000","0xaf1148ef6c8e103d7530efc91679c9ac27000993":"0xad78ebc5ac6200000","0xaf203e229d7e6d419df4378ea98715515f631485":"0x6acb3df27e1f880000","0xaf2058c7282cf67c8c3cf930133c89617ce75d29":"0x177224aa844c7200000","0xaf26f7c6bf453e2078f08953e4b28004a2c1e209":"0x56bc75e2d63100000","0xaf3087e62e04bf900d5a54dc3e946274da92423b":"0x1158e460913d00000","0xaf3614dcb68a36e45a4e911e62796247222d595b":"0x7a81065f1103bc0000","0xaf3615c789d0b1152ad4db25fe5dcf222804cf62":"0x3635c9adc5dea00000","0xaf3cb5965933e7dad883693b9c3e15beb68a4873":"0x6c6b935b8bbd400000","0xaf4493e8521ca89d95f5267c1ab63f9f45411e1b":"0xad78ebc5ac6200000","0xaf4cf41785161f571d0ca69c94f8021f41294eca":"0x215f835bc769da80000","0xaf529bdb459cc185bee5a1c58bf7e8cce25c150d":"0xaadec983fcff40000","0xaf67fd3e127fd9dc36eb3fcd6a80c7be4f7532b2":"0x5a87e7d7f5f6580000","0xaf771039345a343001bc0f8a5923b126b60d509c":"0x35659ef93f0fc40000","0xaf7f79cb415a1fb8dbbd094607ee8d41fb7c5a3b":"0x21e19e0c9bab2400000","0xaf87d2371ef378957fbd05ba2f1d66931b01e2b8":"0x25f273933db5700000","0xaf880fc7567d5595cacce15c3fc14c8742c26c9e":"0x73f75d1a085ba0000","0xaf8e1dcb314c950d3687434d309858e1a8739cd4":"0xe7eeba3410b740000","0xaf992dd669c0883e5515d3f3112a13f617a4c367":"0x6c6b935b8bbd400000","0xafa1d5ad38fed44759c05b8993c1aa0dace19f40":"0x4563918244f400000","0xafa539586e4719174a3b46b9b3e663a7d1b5b987":"0x10f0cf064dd59200000","0xafa6946effd5ff53154f82010253df47ae280ccc":"0x6acb3df27e1f880000","0xafc8ebe8988bd4105acc4c018e546a1e8f9c7888":"0x1b1ae4d6e2ef500000","0xafcc7dbb8356d842d43ae7e23c8422b022a30803":"0x66ffcbfd5e5a3000000","0xafd019ff36a09155346b69974815a1c912c90aa4":"0x6c6b935b8bbd400000","0xafdac5c1cb56e245bf70330066a817eaafac4cd1":"0x1158e460913d00000","0xafdd1b786162b8317e20f0e979f4b2ce486d765d":"0x1158e460913d00000","0xaff1045adf27a1aa329461b24de1bae9948a698b":"0x1cf84a30a0a0c0000","0xaff107960b7ec34ed690b665024d60838c190f70":"0x1b1ae4d6e2ef500000","0xaff11ccf699304d5f5862af86083451c26e79ae5":"0x6c5db2a4d815dc0000","0xaff161740a6d909fe99c59a9b77945c91cc91448":"0x340aad21b3b700000","0xaffc99d5ebb4a84fe7788d97dce274b038240438":"0x10f0cf064dd59200000","0xaffea0473722cb7f0e0e86b9e11883bf428d8d54":"0x692ae8897081d00000","0xb00996b0566ecb3e7243b8227988dcb352c21899":"0x28a857425466f800000","0xb01e389b28a31d8e4995bdd7d7c81beeab1e4119":"0x3635c9adc5dea00000","0xb02d062873334545cea29218e4057760590f7423":"0xacb6a1c7d93a880000","0xb02fa29387ec12e37f6922ac4ce98c5b09e0b00f":"0x6c6b935b8bbd400000","0xb036916bdacf94b69e5a8a65602975eb026104dd":"0x1158e460913d00000","0xb041310fe9eed6864cedd4bee58df88eb4ed3cac":"0x21e19e0c9bab2400000","0xb055af4cadfcfdb425cf65ba6431078f07ecd5ab":"0x56bc75e2d63100000","0xb0571153db1c4ed7acaefe13ecdfdb72e7e4f06a":"0x110cff796ac195200000","0xb06eab09a610c6a53d56a946b2c43487ac1d5b2d":"0x3635c9adc5dea00000","0xb07249e055044a9155359a402937bbd954fe48b6":"0x56bc75e2d63100000","0xb07618328a901307a1b7a0d058fcd5786e9e72fe":"0x667495d4a4330ce0000","0xb079bb4d9866143a6da72ae7ac0022062981315c":"0x29331e6558f0e00000","0xb07bcc085ab3f729f24400416837b69936ba8873":"0x6c6d84bccdd9ce0000","0xb07bcf1cc5d4462e5124c965ecf0d70dc27aca75":"0x56bc75e2d631000000","0xb07cb9c12405b711807543c4934465f87f98bd2d":"0x6c6b935b8bbd400000","0xb07fdeaff91d4460fe6cd0e8a1b0bd8d22a62e87":"0x11d2529f3535ab00000","0xb09fe6d4349b99bc37938054022d54fca366f7af":"0x2a5a058fc295ed000000","0xb0aa00950c0e81fa3210173e729aaf163a27cd71":"0x878678326eac9000000","0xb0ac4eff6680ee14169cdadbffdb30804f6d25f5":"0x6c6b935b8bbd400000","0xb0b36af9aeeedf97b6b02280f114f13984ea3260":"0x35659ef93f0fc40000","0xb0b779b94bfa3c2e1f587bcc9c7e21789222378f":"0x54069233bf7f780000","0xb0baeb30e313776c4c6d247402ba4167afcda1cc":"0x6acb3df27e1f880000","0xb0bb29a861ea1d424d45acd4bfc492fb8ed809b7":"0x4563918244f400000","0xb0c1b177a220e41f7c74d07cde8569c21c75c2f9":"0x12f939c99edab800000","0xb0c7ce4c0dc3c2bbb99cc1857b8a455f611711ce":"0xd8d726b7177a800000","0xb0cef8e8fb8984a6019f01c679f272bbe68f5c77":"0x83d6c7aab63600000","0xb0d32bd7e4e695b7b01aa3d0416f80557dba9903":"0x3739ff0f6e613300000","0xb0d3c9872b85056ea0c0e6d1ecf7a77e3ce6ab85":"0x10f08eda8e555098000","0xb0e469c886593815b3495638595daef0665fae62":"0x692ae8897081d00000","0xb0e760bb07c081777345e0578e8bc898226d4e3b":"0x6c6b935b8bbd400000","0xb1043004ec1941a8cf4f2b00b15700ddac6ff17e":"0x3635c9adc5dea00000","0xb105dd3d987cffd813e9c8500a80a1ad257d56c6":"0x6c6acc67d7b1d40000","0xb10fd2a647102f881f74c9fbc37da632949f2375":"0x22b1c8c1227a00000","0xb115ee3ab7641e1aa6d000e41bfc1ec7210c2f32":"0x2c0bb3dd30c4e200000","0xb1178ad47383c31c8134a1941cbcd474d06244e2":"0x3635c9adc5dea00000","0xb1179589e19db9d41557bbec1cb24ccc2dec1c7f":"0x152d02c7e14af6800000","0xb119e79aa9b916526581cbf521ef474ae84dcff4":"0x4fba1001e5befe0000","0xb11fa7fb270abcdf5a2eab95aa30c4b53636efbf":"0x2b5e3af16b18800000","0xb124bcb6ffa430fcae2e86b45f27e3f21e81ee08":"0x6c6b935b8bbd400000","0xb129a5cb7105fe810bd895dc7206a991a4545488":"0x1a055690d9db80000","0xb12ed07b8a38ad5506363fc07a0b6d799936bdaf":"0x21e19e0c9bab2400000","0xb134c004391ab4992878337a51ec242f42285742":"0x6c6b935b8bbd400000","0xb13f93af30e8d7667381b2b95bc1a699d5e3e129":"0x16c4abbebea0100000","0xb1459285863ea2db3759e546ceb3fb3761f5909c":"0x3cd72a894087e08000","0xb146a0b925553cf06fcaf54a1b4dfea621290757":"0x6c6e59e67c78540000","0xb14a7aaa8f49f2fb9a8102d6bbe4c48ae7c06fb2":"0x1b1ae4d6e2ef5000000","0xb14bbeff70720975dc6191b2a44ff49f2672873c":"0x7c0860e5a80dc0000","0xb14cc8de33d6338236539a489020ce4655a32bc6":"0x1b1ae4d6e2ef5000000","0xb14ddb0386fb606398b8cc47565afae00ff1d66a":"0xa12aff083e66f00000","0xb153f828dd076d4a7c1c2574bb2dee1a44a318a8":"0x15af1d78b58c400000","0xb1540e94cff3465cc3d187e7c8e3bdaf984659e2":"0xa215e44390e3330000","0xb158db43fa62d30e65f3d09bf781c7b67372ebaa":"0x6c5db2a4d815dc0000","0xb161725fdcedd17952d57b23ef285b7e4b1169e8":"0x2b6dfed3664958000","0xb16479ba8e7df8f63e1b95d149cd8529d735c2da":"0x2de33a6aac32548000","0xb166e37d2e501ae73c84142b5ffb5aa655dd5a99":"0x6c5db2a4d815dc0000","0xb183ebee4fcb42c220e47774f59d6c54d5e32ab1":"0x56f7a9c33c04d10000","0xb188078444027e386798a8ae68698919d5cc230d":"0xe7eeba3410b740000","0xb1896a37e5d8825a2d01765ae5de629977de8352":"0xad78ebc5ac6200000","0xb18e67a5050a1dc9fb190919a33da838ef445014":"0x1158e460913d00000","0xb1a2b43a7433dd150bb82227ed519cd6b142d382":"0x946d620d744b880000","0xb1c0d08b36e184f9952a4037e3e53a667d070a4e":"0x3635c9adc5dea00000","0xb1c328fb98f2f19ab6646f0a7c8c566fda5a8540":"0x878678326eac900000","0xb1c751786939bba0d671a677a158c6abe7265e46":"0x21e19e0c9bab2400000","0xb1cd4bdfd104489a026ec99d597307a04279f173":"0x43c33c1937564800000","0xb1cf94f8091505055f010ab4bac696e0ca0f67a1":"0x55a6e79ccd1d300000","0xb1d6b01b94d854fe8b374aa65e895cf22aa2560e":"0x32f51edbaaa3300000","0xb1dba5250ba9625755246e067967f2ad2f0791de":"0x10f0cf064dd592000000","0xb1e2dd95e39ae9775c55aeb13f12c2fa233053ba":"0x6c6b935b8bbd400000","0xb1e6e810c24ab0488de9e01e574837829f7c77d0":"0x15af1d78b58c400000","0xb1e9c5f1d21e61757a6b2ee75913fc5a1a4101c3":"0x6c6b935b8bbd400000","0xb203d29e6c56b92699c4b92d1f6f84648dc4cfbc":"0x15af1d78b58c400000","0xb216dc59e27c3d7279f5cd5bb2becfb2606e14d9":"0x15af1d78b58c400000","0xb21b7979bf7c5ca01fa82dd640b41c39e6c6bc75":"0x6c6acc67d7b1d40000","0xb223bf1fbf80485ca2b5567d98db7bc3534dd669":"0xd8d726b7177a800000","0xb22d5055d9623135961e6abd273c90deea16a3e7":"0x4be4e7267b6ae00000","0xb22dadd7e1e05232a93237baed98e0df92b1869e":"0x6c6b935b8bbd400000","0xb234035f7544463ce1e22bc553064684c513cd51":"0xd89fa3dc48dcf0000","0xb247cf9c72ec482af3eaa759658f793d670a570c":"0x31708ae00454400000","0xb2676841ee9f2d31c172e82303b0fe9bbf9f1e09":"0xad78ebc5ac6200000","0xb279c7d355c2880392aad1aa21ee867c3b3507df":"0x445be3f2ef87940000","0xb27c1a24204c1e118d75149dd109311e07c073ab":"0xa80d24677efef00000","0xb28181a458a440f1c6bb1de8400281a3148f4c35":"0x14620c57dddae00000","0xb28245037cb192f75785cb86cbfe7c930da258b0":"0x3635c9adc5dea000000","0xb287f7f8d8c3872c1b586bcd7d0aedbf7e732732":"0x1158e460913d00000","0xb28bb39f3466517cd46f979cf59653ee7d8f152e":"0x18650127cc3dc80000","0xb28dbfc6499894f73a71faa00abe0f4bc9d19f2a":"0x56bc75e2d63100000","0xb2968f7d35f208871631c6687b3f3daeabc6616c":"0x875c47f289f760000","0xb29f5b7c1930d9f97a115e067066f0b54db44b3b":"0x3635c9adc5dea00000","0xb2a144b1ea67b9510f2267f9da39d3f93de26642":"0x6c6b935b8bbd400000","0xb2a2c2111612fb8bbb8e7dd9378d67f1a384f050":"0x1158e460913d00000","0xb2a498f03bd7178bd8a789a00f5237af79a3e3f8":"0x41bad155e6512200000","0xb2aa2f1f8e93e79713d92cea9ffce9a40af9c82d":"0x6c6b935b8bbd400000","0xb2b516fdd19e7f3864b6d2cf1b252a4156f1b03b":"0x2e983c76115fc0000","0xb2b7cdb4ff4b61d5b7ce0b2270bbb5269743ec04":"0x6c6b935b8bbd400000","0xb2bdbedf95908476d7148a370cc693743628057f":"0xd8d726b7177a800000","0xb2bfaa58b5196c5cb7f89de15f479d1838de713d":"0x1236efcbcbb340000","0xb2c53efa33fe4a3a1a80205c73ec3b1dbcad0602":"0x6801dab35918938000","0xb2d0360515f17daba90fcbac8205d569b915d6ac":"0x14542ba12a337c00000","0xb2d1e99af91231858e7065dd1918330dc4c747d5":"0x3894f0e6f9b9f700000","0xb2d9ab9664bcf6df203c346fc692fd9cbab9205e":"0x17be78976065180000","0xb2ddb786d3794e270187d0451ad6c8b79e0e8745":"0x15af1d78b58c400000","0xb2e085fddd1468ba07415b274e734e11237fb2a9":"0x56bc75e2d63100000","0xb2e9d76bf50fc36bf7d3944b63e9ca889b699968":"0x9032ea62b74b100000","0xb2f9c972c1e9737755b3ff1b3088738396395b26":"0x43c33c1937564800000","0xb2fc84a3e50a50af02f94da0383ed59f71ff01d7":"0x65a4da25d3016c00000","0xb3050beff9de33c80e1fa15225e28f2c413ae313":"0x25f273933db5700000","0xb31196714a48dff726ea9433cd2912f1a414b3b3":"0x914878a8c05ee00000","0xb3145b74506d1a8d047cdcdc55392a7b5350799a":"0x1b6229741c0d3d5d8000","0xb320834836d1dbfda9e7a3184d1ad1fd4320ccc0":"0x3635c9adc5dea00000","0xb323dcbf2eddc5382ee4bbbb201ca3931be8b438":"0x6c6b935b8bbd400000","0xb32400fd13c5500917cb037b29fe22e7d5228f2d":"0x878678326eac9000000","0xb325674c01e3f7290d5226339fbeac67d221279f":"0x97c9ce4cf6d5c00000","0xb32825d5f3db249ef4e85cc4f33153958976e8bc":"0x1b2df9d219f5798000","0xb32af3d3e8d075344926546f2e32887bf93b16bd":"0xad78ebc5ac6200000","0xb32f1c2689a5ce79f1bc970b31584f1bcf2283e7":"0x1158e460913d00000","0xb33c0323fbf9c26c1d8ac44ef74391d0804696da":"0x1158e460913d00000","0xb34f04b8db65bba9c26efc4ce6efc50481f3d65d":"0x43c33c1937564800000","0xb3557d39b5411b84445f5f54f38f62d2714d0087":"0x2086ac351052600000","0xb358e97c70b605b1d7d729dfb640b43c5eafd1e7":"0x43c33c1937564800000","0xb35e8a1c0dac7e0e66dbac736a592abd44012561":"0xcfce55aa12b30000","0xb3667894b7863c068ad344873fcff4b5671e0689":"0x43c33c1937564800000","0xb3717731dad65132da792d876030e46ac227bb8a":"0x3635c9adc5dea00000","0xb3731b046c8ac695a127fd79d0a5d5fa6ae6d12e":"0x6c4fd1ee246e780000","0xb37c2b9f50637bece0ca959208aefee6463ba720":"0x15af1d78b58c400000","0xb388b5dfecd2c5e4b596577c642556dbfe277855":"0x1158e460913d00000","0xb38c4e537b5df930d65a74d043831d6b485bbde4":"0x15af1d78b58c400000","0xb39139576194a0866195151f33f2140ad1cc86cf":"0x152d02c7e14af6800000","0xb39f4c00b2630cab7db7295ef43d47d501e17fd7":"0xd8d726b7177a800000","0xb3a64b1176724f5409e1414a3523661baee74b4a":"0x16368ff4ff9c10000","0xb3a6bd41f9d9c3201e050b87198fbda399342210":"0xc461e1dd1029b58000","0xb3a8c2cb7d358e5739941d945ba9045a023a8bbb":"0x3635c9adc5dea00000","0xb3ae54fba09d3ee1d6bdd1e957923919024c35fa":"0x38d2cee65b22a8000","0xb3b7f493b44a2c8d80ec78b1cdc75a652b73b06c":"0x6c6b935b8bbd400000","0xb3c228731d186d2ded5b5fbe004c666c8e469b86":"0x19274b259f6540000","0xb3c260609b9df4095e6c5dff398eeb5e2df49985":"0xdc55fdb17647b0000","0xb3c65b845aba6cd816fbaae983e0e46c82aa8622":"0x3635c9adc5dea00000","0xb3c94811e7175b148b281c1a845bfc9bb6fbc115":"0xad78ebc5ac6200000","0xb3e20eb4de18bd060221689894bee5aeb25351ee":"0x3fc80cce516598000","0xb3e3c439069880156600c2892e448d4136c92d9b":"0x2e141ea081ca080000","0xb3f82a87e59a39d0d2808f0751eb72c2329cdcc5":"0x10f0cf064dd59200000","0xb3fc1d6881abfcb8becc0bb021b8b73b7233dd91":"0x2b5e3af16b1880000","0xb40594c4f3664ef849cca6227b8a25aa690925ee":"0xd8d726b7177a800000","0xb41eaf5d51a5ba1ba39bb418dbb54fab750efb1f":"0x3635c9adc5dea00000","0xb424d68d9d0d00cec1938c854e15ffb880ba0170":"0xad78ebc5ac6200000","0xb4256273962bf631d014555cc1da0dcc31616b49":"0x6c6b935b8bbd400000","0xb43067fe70d9b55973ba58dc64dd7f311e554259":"0xad78ebc5ac6200000","0xb43657a50eecbc3077e005d8f8d94f377876bad4":"0x1ec1b3a1ff75a0000","0xb43c27f7a0a122084b98f483922541c8836cee2c":"0x26c29e47c4844c0000","0xb4413576869c08f9512ad311fe925988a52d3414":"0x21e19e0c9bab2400000","0xb44605552471a6eee4daab71ff3bb41326d473e0":"0x2d7e3d51ba53d00000","0xb447571dacbb3ecbb6d1cf0b0c8f3838e52324e2":"0x1a318667fb4058000","0xb44783c8e57b480793cbd69a45d90c7b4f0c48ac":"0x1158e460913d00000","0xb44815a0f28e569d0e921a4ade8fb2642526497a":"0x302379bf2ca2e0000","0xb4496ddb27799a222457d73979116728e8a1845b":"0x8d819ea65fa62f8000","0xb4524c95a7860e21840296a616244019421c4aba":"0x1b1ae4d6e2ef5000000","0xb45cca0d36826662683cf7d0b2fdac687f02d0c4":"0x3635c9adc5dea00000","0xb46440c797a556e04c7d9104660491f96bb076bf":"0xcec76f0e71520000","0xb46ace865e2c50ea4698d216ab455dff5a11cd72":"0x3635c9adc5dea00000","0xb46d1182e5aacaff0d26b2fcf72f3c9ffbcdd97d":"0xaa2a603cdd7f2c0000","0xb48921c9687d5510744584936e8886bdbf2df69b":"0x3635c9adc5dea00000","0xb498bb0f520005b6216a4425b75aa9adc52d622b":"0xd8d726b7177a800000","0xb4b11d109f608fa8edd3fea9f8c315649aeb3d11":"0x10f0cf064dd59200000","0xb4b14bf45455d0ab0803358b7524a72be1a2045b":"0x1b1ae4d6e2ef500000","0xb4b185d943ee2b58631e33dff5af6854c17993ac":"0x3635c9adc5dea00000","0xb4bf24cb83686bc469869fefb044b909716993e2":"0x6c6b935b8bbd400000","0xb4c20040ccd9a1a3283da4d4a2f365820843d7e2":"0x3635c9adc5dea00000","0xb4c8170f7b2ab536d1d9a25bdd203ae1288dc3d5":"0xad78ebc5ac6200000","0xb4d82f2e69943f7de0f5f7743879406fac2e9cec":"0x22b1c8c1227a00000","0xb4dd460cd016725a64b22ea4f8e06e06674e033e":"0x1231bb8748547a80000","0xb4dd5499daeb2507fb2de12297731d4c72b16bb0":"0x1158e460913d00000","0xb5046cb3dc1dedbd364514a2848e44c1de4ed147":"0x37b7d9bb820405e0000","0xb508f987b2de34ae4cf193de85bff61389621f88":"0x14542ba12a337c00000","0xb50955aa6e341571986608bdc891c2139f540cdf":"0x6acb3df27e1f880000","0xb50c149a1906fad2786ffb135aab501737e9e56f":"0x150894e849b3900000","0xb50c9f5789ae44e2dce017c714caf00c830084c2":"0x155bd9307f9fe80000","0xb514882c979bb642a80dd38754d5b8c8296d9a07":"0x33c5499031720c0000","0xb51ddcb4dd4e8ae6be336dd9654971d9fec86b41":"0x16d464f83de2948000","0xb51e558eb5512fbcfa81f8d0bd938c79ebb5242b":"0x26c29e47c4844c0000","0xb523fff9749871b35388438837f7e6e0dea9cb6b":"0x6c6b935b8bbd400000","0xb52dfb45de5d74e3df208332bc571c809b8dcf32":"0x14542ba12a337c00000","0xb535f8db879fc67fec58824a5cbe6e5498aba692":"0x678a932062e4180000","0xb537d36a70eeb8d3e5c80de815225c1158cb92c4":"0x5150ae84a8cdf00000","0xb53bcb174c2518348b818aece020364596466ba3":"0x6c6b935b8bbd400000","0xb5493ef173724445cf345c035d279ba759f28d51":"0x1158e460913d00000","0xb553d25d6b5421e81c2ad05e0b8ba751f8f010e3":"0x6c6b935b8bbd400000","0xb55474ba58f0f2f40e6cbabed4ea176e011fcad6":"0x6acb3df27e1f880000","0xb555d00f9190cc3677aef314acd73fdc39399259":"0x6c6b935b8bbd400000","0xb557ab9439ef50d237b553f02508364a466a5c03":"0xad78ebc5ac6200000","0xb56a780028039c81caf37b6775c620e786954764":"0x6c6b935b8bbd400000","0xb56ad2aec6c8c3f19e1515bbb7dd91285256b639":"0x3635c9adc5dea00000","0xb57413060af3f14eb479065f1e9d19b3757ae8cc":"0x22b1c8c1227a00000","0xb57549bfbc9bdd18f736b22650e48a73601fa65c":"0x182d7e4cfda0380000","0xb577b6befa054e9c040461855094b002d7f57bd7":"0x1823f3cf621d23400000","0xb57b04fa23d1203fae061eac4542cb60f3a57637":"0xa5aa85009e39c0000","0xb5870ce342d43343333673038b4764a46e925f3e":"0x3635c9adc5dea00000","0xb587b44a2ca79e4bc1dd8bfdd43a207150f2e7e0":"0x222c8eb3ff66400000","0xb589676d15a04448344230d4ff27c95edf122c49":"0x3635c9adc5dea00000","0xb58b52865ea55d8036f2fab26098b352ca837e18":"0xfc936392801c0000","0xb5906b0ae9a28158e8ac550e39da086ee3157623":"0xad78ebc5ac6200000","0xb5a4679685fa14196c2e9230c8c4e33bffbc10e2":"0x4be4e7267b6ae00000","0xb5a589dd9f4071dbb6fba89b3f5d5dae7d96c163":"0x6c6b935b8bbd400000","0xb5a606f4ddcbb9471ec67f658caf2b00ee73025e":"0xea756ea92afc740000","0xb5ad5157dda921e6bafacd9086ae73ae1f611d3f":"0x6c6b935b8bbd400000","0xb5add1e7809f7d03069bfe883b0a932210be8712":"0x3635c9adc5dea00000","0xb5ba29917c78a1d9e5c5c713666c1e411d7f693a":"0xa80d24677efef00000","0xb5c816a8283ca4df68a1a73d63bd80260488df08":"0xad78ebc5ac6200000","0xb5cac5ed03477d390bb267d4ebd46101fbc2c3da":"0xaadec983fcff40000","0xb5cdbc4115406f52e5aa85d0fea170d2979cc7ba":"0x487a9a304539440000","0xb5d9934d7b292bcf603b2880741eb760288383a0":"0xe7c2518505060000","0xb5dd50a15da34968890a53b4f13fe1af081baaaa":"0xd8d726b7177a800000","0xb5fa8184e43ed3e0b8ab91216461b3528d84fd09":"0x914878a8c05ee00000","0xb5fb7ea2ddc1598b667a9d57dd39e85a38f35d56":"0x1b1ae4d6e2ef500000","0xb600429752f399c80d0734744bae0a022eca67c6":"0x1158e460913d00000","0xb600feab4aa96c537504d96057223141692c193a":"0x15af1d78b58c400000","0xb6047cdf932db3e4045f4976122341537ed5961e":"0x1158e460913d00000","0xb615e940143eb57f875893bc98a61b3d618c1e8c":"0x1158e460913d00000","0xb61c34fcacda701a5aa8702459deb0e4ae838df8":"0x7695a92c20d6fe00000","0xb63064bd3355e6e07e2d377024125a33776c4afa":"0x8375a2abcca24400000","0xb635a4bc71fb28fdd5d2c322983a56c284426e69":"0x93739534d28680000","0xb646df98b49442746b61525c81a3b04ba3106250":"0x6acb3df27e1f880000","0xb65941d44c50d24666670d364766e991c02e11c2":"0x2086ac351052600000","0xb65bd780c7434115162027565223f44e5498ff8c":"0x43c30fb0884a96c0000","0xb66411e3a02dedb726fa79107dc90bc1cae64d48":"0x6c6b935b8bbd400000","0xb66675142e3111a1c2ea1eb2419cfa42aaf7a234":"0x3635c9adc5dea00000","0xb66f92124b5e63035859e390628869dbdea9485e":"0x215f835bc769da80000","0xb672734afcc224e2e609fc51d4f059732744c948":"0x1004e2e45fb7ee0000","0xb6771b0bf3427f9ae7a93e7c2e61ee63941fdb08":"0x3fb26692954bfc00000","0xb67a80f170197d96cdcc4ab6cba627b4afa6e12c":"0x821ab0d44149800000","0xb68899e7610d4c93a23535bcc448945ba1666f1c":"0xad78ebc5ac6200000","0xb6a82933c9eadabd981e5d6d60a6818ff806e36b":"0x15af1d78b58c400000","0xb6aacb8cb30bab2ae4a2424626e6e12b02d04605":"0x1b1ae4d6e2ef5000000","0xb6b34a263f10c3d2eceb0acc559a7b2ab85ce565":"0xd8d726b7177a800000","0xb6bfe1c3ef94e1846fb9e3acfe9b50c3e9069233":"0x6c6acc67d7b1d40000","0xb6cd7432d5161be79768ad45de3e447a07982063":"0xd8d726b7177a800000","0xb6ce4dc560fc73dc69fb7a62e388db7e72ea764f":"0x345df169e9a3580000","0xb6decf82969819ba02de29b9b593f21b64eeda0f":"0x281d901f4fdd100000","0xb6e6c3222b6b6f9be2875d2a89f127fb64100fe2":"0x1b21d5323cc30200000","0xb6e8afd93dfa9af27f39b4df06076710bee3dfab":"0x15af1d78b58c40000","0xb6f78da4f4d041b3bc14bc5ba519a5ba0c32f128":"0x247dd32c3fe195048000","0xb6fb39786250081426a342c70d47ee521e5bc563":"0x32d26d12e980b600000","0xb70dba9391682b4a364e77fe99256301a6c0bf1f":"0xad78ebc5ac6200000","0xb71623f35107cf7431a83fb3d204b29ee0b1a7f4":"0x11164759ffb320000","0xb71a13ba8e95167b80331b52d69e37054fe7a826":"0xad78ebc5ac6200000","0xb71b62f4b448c02b1201cb5e394ae627b0a560ee":"0x1b1ae4d6e2ef500000","0xb72220ade364d0369f2d2da783ca474d7b9b34ce":"0x1b1ab319f5ec750000","0xb7230d1d1ff2aca366963914a79df9f7c5ea2c98":"0x1b1ae4d6e2ef5000000","0xb7240af2af90b33c08ae9764103e35dce3638428":"0x1cadd2fe9686e638000","0xb727a9fc82e1cffc5c175fa1485a9befa2cdbdd1":"0x3627e8f712373c0000","0xb72c2a011c0df50fbb6e28b20ae1aad217886790":"0xd8d726b7177a800000","0xb7382d37db0398ac72410cf9813de9f8e1ec8dad":"0x3636c25e66ece70000","0xb73b4ff99eb88fd89b0b6d57a9bc338e886fa06a":"0x1bc16d674ec800000","0xb73d6a77559c86cf6574242903394bacf96e3570":"0x4f1a77ccd3ba00000","0xb74372dbfa181dc9242f39bf1d3731dffe2bdacf":"0x6c6b935b8bbd400000","0xb7479dab5022c4d5dbaaf8de171b4e951dd1a457":"0x4563918244f400000","0xb749b54e04d5b19bdcedfb84da7701ab478c27ae":"0x914878a8c05ee00000","0xb74ed2666001c16333cf7af59e4a3d4860363b9c":"0xa7ebd5e4363a00000","0xb75149e185f6e3927057739073a1822ae1cf0df2":"0xd8d8583fa2d52f0000","0xb753a75f9ed10b21643a0a3dc0517ac96b1a4068":"0x15c8185b2c1ff40000","0xb756ad52f3bf74a7d24c67471e0887436936504c":"0x43c33c1937564800000","0xb7576e9d314df41ec5506494293afb1bd5d3f65d":"0x1158e460913d00000","0xb758896f1baa864f17ebed16d953886fee68aae6":"0x3635c9adc5dea00000","0xb768b5234eba3a9968b34d6ddb481c8419b3655d":"0xcfce55aa12b30000","0xb782bfd1e2de70f467646f9bc09ea5b1fcf450af":"0xe7eeba3410b740000","0xb7a2c103728b7305b5ae6e961c94ee99c9fe8e2b":"0xa968163f0a57b400000","0xb7a31a7c38f3db09322eae11d2272141ea229902":"0x6c6b935b8bbd400000","0xb7a6791c16eb4e2162f14b6537a02b3d63bfc602":"0x2a526391ac93760000","0xb7a7f77c348f92a9f1100c6bd829a8ac6d7fcf91":"0x62a992e53a0af00000","0xb7c077946674ba9341fb4c747a5d50f5d2da6415":"0x3635c9adc5dea00000","0xb7c0d0cc0b4d342d4062bac624ccc3c70cc6da3f":"0xd8d726b7177a800000","0xb7c9f12b038e73436d17e1c12ffe1aeccdb3f58c":"0x1d460162f516f00000","0xb7cc6b1acc32d8b295df68ed9d5e60b8f64cb67b":"0x1043561a8829300000","0xb7ce684b09abda53389a875369f71958aeac3bdd":"0x6c6b935b8bbd400000","0xb7d12e84a2e4c4a6345af1dd1da9f2504a2a996e":"0xad78ebc5ac6200000","0xb7d252ee9402b0eef144295f0e69f0db586c0871":"0x23c757072b8dd00000","0xb7d581fe0af1ec383f3b3c416783f385146a7612":"0x43c33c1937564800000","0xb7f67314cb832e32e63b15a40ce0d7ffbdb26985":"0x398279264a818d0000","0xb8040536958d5998ce4bec0cfc9c2204989848e9":"0x52ea70d498fd50a0000","0xb8310a16cc6abc465007694b930f978ece1930bd":"0x281d901f4fdd100000","0xb834acf3015322c58382eeb2b79638906e88b6de":"0x5150ae84a8cdf000000","0xb84b53d0bb125656cddc52eb852ab71d7259f3d5":"0x3635c9adc5dea000000","0xb84c8b9fd33ece00af9199f3cf5fe0cce28cd14a":"0xcf152640c5c8300000","0xb85218f342f8012eda9f274e63ce2152b2dcfdab":"0xa80d24677efef00000","0xb8555010776e3c5cb311a5adeefe9e92bb9a64b9":"0xd8d726b7177a800000","0xb85f26dd0e72d9c29ebaf697a8af77472c2b58b5":"0x28519acc7190c700000","0xb85ff03e7b5fc422981fae5e9941dacbdaba7584":"0x487a9a304539440000","0xb86607021b62d340cf2652f3f95fd2dc67698bdf":"0x10f0cf064dd59200000","0xb87de1bcd29269d521b8761cc39cfb4319d2ead5":"0x3635c9adc5dea00000","0xb87f5376c2de0b6cc3c179c06087aa473d6b4674":"0x487a9a304539440000","0xb884add88d83dc564ab8e0e02cbdb63919aea844":"0x6c6b935b8bbd400000","0xb88a37c27f78a617d5c091b7d5b73a3761e65f2a":"0x6c6b935b8bbd400000","0xb8947822d5ace7a6ad8326e95496221e0be6b73d":"0x1158e460913d00000","0xb89c036ed7c492879921be41e10ca1698198a74c":"0x62a992e53a0af00000","0xb89f4632df5909e58b2a9964f74feb9a3b01e0c5":"0x48875bcc6e7cbeb8000","0xb8a79c84945e47a9c3438683d6b5842cff7684b1":"0x6c6b935b8bbd400000","0xb8a979352759ba09e35aa5935df175bff678a108":"0x1158e460913d00000","0xb8ab39805bd821184f6cbd3d2473347b12bf175c":"0x6685ac1bfe32c0000","0xb8ac117d9f0dba80901445823c4c9d4fa3fedc6e":"0x3564c4427a8fc7d8000","0xb8bc9bca7f71b4ed12e620438d620f53c114342f":"0x1b1ae4d6e2ef500000","0xb8bedd576a4b4c2027da735a5bc3f533252a1808":"0x6c6b935b8bbd400000","0xb8c2703d8c3f2f44c584bc10e7c0a6b64c1c097e":"0x12cddb8ead6f9f80000","0xb8cc0f060aad92d4eb8b36b3b95ce9e90eb383d7":"0x1fc3842bd1f071c00000","0xb8d2ddc66f308c0158ae3ccb7b869f7d199d7b32":"0x2dcbf4840eca000000","0xb8d389e624a3a7aebce4d3e5dbdf6cdc29932aed":"0xad78ebc5ac6200000","0xb8d531a964bcea13829620c0ced72422dadb4cca":"0x93715cc5ab8a70000","0xb8d5c324a8209d7c8049d0d4aede02ba80ab578b":"0x393928629fff75e8000","0xb8f20005b61352ffa7699a1b52f01f5ab39167f1":"0x21e19e0c9bab2400000","0xb8f30758faa808dbc919aa7b425ec922b93b8129":"0x3636d7af5ec98e0000","0xb9013c51bd078a098fae05bf2ace0849c6be17a5":"0x4563918244f400000","0xb9144b677c2dc614ceefdf50985f1183208ea64c":"0x6c6b935b8bbd400000","0xb916b1a01cdc4e56e7657715ea37e2a0f087d106":"0x826e3181e027068000","0xb91d9e916cd40d193db60e79202778a0087716fc":"0x15f1ba7f4716200000","0xb9231eb26e5f9e4b4d288f03906704fab96c87d6":"0x42bf06b78ed3b500000","0xb92427ad7578b4bfe20a9f63a7c5506d5ca12dc8":"0x6c6b935b8bbd400000","0xb927abd2d28aaaa24db31778d27419df8e1b04bb":"0x17e11c2a26f478000","0xb94d47b3c052a5e50e4261ae06a20f45d8eee297":"0x6c6b935b8bbd400000","0xb95396daaa490df2569324fcc6623be052f132ca":"0x6c6b935b8bbd400000","0xb959dce02e91d9db02b1bd8b7d17a9c41a97af09":"0x1b1ae4d6e2ef5000000","0xb95c9b10aa981cf4a67a71cc52c504dee8cf58bd":"0xd8d726b7177a800000","0xb95cfda8465ba9c2661b249fc3ab661bdfa35ff0":"0x114a4e79a2c2108000","0xb96841cabbc7dbd69ef0cf8f81dff3c8a5e21570":"0x28a857425466f800000","0xb97a6733cd5fe99864b3b33460d1672434d5cafd":"0x6c65bbaa46c2cf8000","0xb981ad5e6b7793a23fc6c1e8692eb2965d18d0da":"0x21e18d2c821c7520000","0xb98ca31785ef06be49a1e47e864f60d076ca472e":"0xd8d726b7177a800000","0xb9920fd0e2c735c256463caa240fb7ac86a93dfa":"0x5f68e8131ecf800000","0xb992a967308c02b98af91ee760fd3b6b4824ab0e":"0x6c6b935b8bbd400000","0xb9a985501ee950829b17fae1c9cf348c3156542c":"0xff17517ca9a620000","0xb9b0a3219a3288d9b35b091b14650b8fe23dce2b":"0x2f6f10780d22cc00000","0xb9cf71b226583e3a921103a5316f855a65779d1b":"0x5150ae84a8cdf000000","0xb9e90c1192b3d5d3e3ab0700f1bf655f5dd4347a":"0x1b19e50b44977c0000","0xb9fd3833e88e7cf1fa9879bdf55af4b99cd5ce3f":"0x3635c9adc5dea00000","0xba0249e01d945bef93ee5ec61925e03c5ca509fd":"0xd8d726b7177a800000","0xba0f39023bdb29eb1862a9f9059cab5d306e662f":"0x6c6b935b8bbd400000","0xba10f2764290f875434372f79dbf713801caac01":"0x33c5499031720c0000","0xba1531fb9e791896bcf3a80558a359f6e7c144bd":"0xd5967be4fc3f100000","0xba176dbe3249e345cd4fa967c0ed13b24c47e586":"0x15aef9f1c31c7f0000","0xba1f0e03cb9aa021f4dcebfa94e5c889c9c7bc9e":"0x6d190c475169a200000","0xba1fcaf223937ef89e85675503bdb7ca6a928b78":"0x22b1c8c1227a000000","0xba24fc436753a739db2c8d40e6d4d04c528e86fa":"0x2c0bb3dd30c4e200000","0xba42f9aace4c184504abf5425762aca26f71fbdc":"0x207077dd8a79c0000","0xba469aa5c386b19295d4a1b5473b540353390c85":"0x6c6b935b8bbd400000","0xba6440aeb3737b8ef0f1af9b0c15f4c214ffc7cf":"0x3635c9adc5dea00000","0xba6d31b9a261d640b5dea51ef2162c3109f1eba8":"0x10f0cf064dd59200000","0xba70e8b4759c0c3c82cc00ac4e9a94dd5bafb2b8":"0x3043fa33c412d70000","0xba8a63f3f40de4a88388bc50212fea8e064fbb86":"0x6c6b935b8bbd400000","0xba8e46d69d2e2343d86c60d82cf42c2041a0c1c2":"0x56bc75e2d63100000","0xbaa4b64c2b15b79f5f204246fd70bcbd86e4a92a":"0x1b1ae4d6e2ef500000","0xbac8922c4acc7d2cb6fd59a14eb45cf3e702214b":"0x2b5e3af16b18800000","0xbad235d5085dc7b068a67c412677b03e1836884c":"0x6c6b935b8bbd400000","0xbad4425e171c3e72975eb46ac0a015db315a5d8f":"0x6c6b935b8bbd400000","0xbadc2aef9f5951a8d78a6b35c3d0b3a4e6e2e739":"0x14542ba12a337c00000","0xbade43599e02f84f4c3014571c976b13a36c65ab":"0xd8d726b7177a800000","0xbae9b82f7299631408659dd74e891cb8f3860fe5":"0x6acb3df27e1f880000","0xbb0366a7cfbd3445a70db7fe5ae34885754fd468":"0x14def2c42ebd6400000","0xbb076aac92208069ea318a31ff8eeb14b7e996e3":"0x813ca56906d340000","0xbb0857f1c911b24b86c8a70681473fe6aaa1cce2":"0x56bc75e2d63100000","0xbb19bf91cbad74cceb5f811db27e411bc2ea0656":"0xf43fc2c04ee00000","0xbb27c6a7f91075475ab229619040f804c8ec7a6a":"0x21e19e0c9bab2400000","0xbb371c72c9f0316cea2bd9c6fbb4079e775429ef":"0x5f68e8131ecf800000","0xbb3b010b18e6e2be1135871026b7ba15ea0fde24":"0x2207c80309b77700000","0xbb3b9005f46fd2ca3b30162599928c77d9f6b601":"0x1b1ae7f2b1bf7db0000","0xbb3fc0a29c034d710812dcc775c8cab9d28d6975":"0x39d4e844d1cf5f0000","0xbb48eaf516ce2dec3e41feb4c679e4957641164f":"0xcf152640c5c8300000","0xbb4b4a4b548070ff41432c9e08a0ca6fa7bc9f76":"0x2e141ea081ca080000","0xbb56a404723cff20d0685488b05a02cdc35aacaa":"0x1158e460913d00000","0xbb618e25221ad9a740b299ed1406bc3934b0b16d":"0x3635c9adc5dea00000","0xbb61a04bffd57c10470d45c39103f64650347616":"0x3635c9adc5dea00000","0xbb6823a1bd819f13515538264a2de052b4442208":"0x16368ff4ff9c10000","0xbb6c284aac8a69b75cddb00f28e145583b56bece":"0x6c6b935b8bbd400000","0xbb75cb5051a0b0944b4673ca752a97037f7c8c15":"0xad78ebc5ac6200000","0xbb993b96ee925ada7d99d786573d3f89180ce3aa":"0x6c6b935b8bbd400000","0xbba3c68004248e489573abb2743677066b24c8a7":"0x6c6b935b8bbd400000","0xbba4fac3c42039d828e742cde0efffe774941b39":"0x6c6ad382d4fb610000","0xbba8ab22d2fedbcfc63f684c08afdf1c175090b5":"0x55f29f37e4e3b8000","0xbba976f1a1215f7512871892d45f7048acd356c8":"0x6c6b935b8bbd400000","0xbbab000b0408ed015a37c04747bc461ab14e151b":"0x14542ba12a337c00000","0xbbabf6643beb4bd01c120bd0598a0987d82967d1":"0xb5328178ad0f2a0000","0xbbb4ee1d82f2e156442cc93338a2fc286fa28864":"0x4a4491bd6dcd280000","0xbbb5a0f4802c8648009e8a6998af352cde87544f":"0x52d542804f1ce0000","0xbbb643d2187b364afc10a6fd368d7d55f50d1a3c":"0x3635c9adc5dea00000","0xbbb8ffe43f98de8eae184623ae5264e424d0b8d7":"0x5d53ffde928080000","0xbbbd6ecbb5752891b4ceb3cce73a8f477059376f":"0x1f399b1438a100000","0xbbbf39b1b67995a42241504f9703d2a14a515696":"0x55a6e79ccd1d300000","0xbbc8eaff637e94fcc58d913c7770c88f9b479277":"0xad78ebc5ac6200000","0xbbc9d8112e5beb02dd29a2257b1fe69b3536a945":"0x6c6b935b8bbd400000","0xbbca65b3266ea2fb73a03f921635f912c7bede00":"0x6acb3df27e1f880000","0xbbf84292d954acd9e4072fb860b1504106e077ae":"0x5150ae84a8cdf00000","0xbbf85aaaa683738f073baef44ac9dc34c4c779ea":"0x6c6b935b8bbd400000","0xbbf8616d97724af3def165d0e28cda89b800009a":"0x62ef12e2b17618000","0xbbfe0a830cace87b7293993a7e9496ce64f8e394":"0x14542ba12a337c00000","0xbc0ca4f217e052753614d6b019948824d0d8688b":"0x15af1d78b58c400000","0xbc0e8745c3a549445c2be900f52300804ab56289":"0x7029bf5dd4c53b28000","0xbc0f98598f88056a26339620923b8f1eb074a9fd":"0xad78ebc5ac6200000","0xbc1609d685b76b48ec909aa099219022f89b2ccd":"0x40138b917edfb80000","0xbc171e53d17ac9b61241ae436deec7af452e7496":"0x121ea68c114e5100000","0xbc1b021a78fde42d9b5226d6ec26e06aa3670090":"0x4563918244f400000","0xbc1e80c181616342ebb3fb3992072f1b28b802c6":"0xd8d726b7177a800000","0xbc237148d30c13836ffa2cad520ee4d2e5c4eeff":"0x6acb3df27e1f880000","0xbc46d537cf2edd403565bde733b2e34b215001bd":"0x43c33c1937564800000","0xbc4e471560c99c8a2a4b1b1ad0c36aa6502b7c4b":"0x28a857425466f800000","0xbc62b3096a91e7dc11a1592a293dd2542150d751":"0x3635c9adc5dea00000","0xbc69a0d2a31c3dbf7a9122116901b2bdfe9802a0":"0xa2a15d09519be00000","0xbc6b58364bf7f1951c309e0cba0595201cd73f9a":"0x62401a457e45f80000","0xbc73f7b1ca3b773b34249ada2e2c8a9274cc17c2":"0x6c6b935b8bbd400000","0xbc7afc8477412274fc265df13c054473427d43c6":"0x70c95920ce3250000","0xbc967fe4418c18b99858966d870678dca2b88879":"0x1d9cbdd8d7ed2100000","0xbc999e385c5aebcac8d6f3f0d60d5aa725336d0d":"0x6c6b935b8bbd400000","0xbc9c95dfab97a574cea2aa803b5caa197cef0cff":"0x16c4abbebea0100000","0xbc9e0ec6788f7df4c7fc210aacd220c27e45c910":"0x1b1ae4d6e2ef500000","0xbca3ffd4683fba0ad3bbc90734b611da9cfb457e":"0xad78ebc5ac6200000","0xbcaed0acb6a76f113f7c613555a2c3b0f5bf34a5":"0xa7ebd5e4363a00000","0xbcaf347918efb2d63dde03e39275bbe97d26df50":"0x56bc75e2d63100000","0xbcb422dc4dd2aae94abae95ea45dd1731bb6b0ba":"0x18424f5f0b1b4e0000","0xbcbd31252ec288f91e298cd812c92160e738331a":"0x6b1bc2cac09a590000","0xbcbf6ba166e2340db052ea23d28029b0de6aa380":"0xd255d112e103a00000","0xbcc84597b91e73d5c5b4d69c80ecf146860f779a":"0xed70b5e9c3f2f00000","0xbcc9593b2da6df6a34d71b1aa38dacf876f95b88":"0x1158e460913d00000","0xbcd95ef962462b6edfa10fda87d72242fe3edb5c":"0x121d06e12fff988000","0xbcd99edc2160f210a05e3a1fa0b0434ced00439b":"0x6c6b935b8bbd400000","0xbcdfacb9d9023c3417182e9100e8ea1d373393a3":"0x3342d60dff1960000","0xbce13e22322acfb355cd21fd0df60cf93add26c6":"0xad78ebc5ac6200000","0xbce40475d345b0712dee703d87cd7657fc7f3b62":"0x1a420db02bd7d580000","0xbcedc4267ccb89b31bb764d7211171008d94d44d":"0xad78ebc5ac6200000","0xbcfc98e5c82b6adb180a3fcb120b9a7690c86a3f":"0x6acb3df27e1f880000","0xbd043b67c63e60f841ccca15b129cdfe6590c8e3":"0xad78ebc5ac6200000","0xbd047ff1e69cc6b29ad26497a9a6f27a903fc4dd":"0x2ee449550898e40000","0xbd08e0cddec097db7901ea819a3d1fd9de8951a2":"0x1158e460913d00000","0xbd09126c891c4a83068059fe0e15796c4661a9f4":"0x2b5e3af16b18800000","0xbd0c5cd799ebc48642ef97d74e8e429064fee492":"0x11ac28a8c729580000","0xbd17eed82b9a2592019a1b1b3c0fbad45c408d22":"0xd8d726b7177a80000","0xbd1803370bddb129d239fd16ea8526a6188ae58e":"0x1b1ae4d6e2ef500000","0xbd2b70fecc37640f69514fc7f3404946aad86b11":"0x410d586a20a4c00000","0xbd3097a79b3c0d2ebff0e6e86ab0edadbed47096":"0x5a87e7d7f5f6580000","0xbd325d4029e0d8729f6d399c478224ae9e7ae41e":"0xd255d112e103a00000","0xbd432a3916249b4724293af9146e49b8280a7f2a":"0xd8d726b7177a800000","0xbd47f5f76e3b930fd9485209efa0d4763da07568":"0x3635c9adc5dea00000","0xbd4b60faec740a21e3071391f96aa534f7c1f44e":"0x9ddc1e3b901180000","0xbd4bd5b122d8ef7b7c8f0667450320db2116142e":"0x2086ac351052600000","0xbd51ee2ea143d7b1d6b77e7e44bdd7da12f485ac":"0x477e06ccb2b9280000","0xbd59094e074f8d79142ab1489f148e32151f2089":"0x1158e460913d00000","0xbd5a8c94bd8be6470644f70c8f8a33a8a55c6341":"0xad78ebc5ac6200000","0xbd5e473abce8f97a6932f77c2facaf9cc0a00514":"0x3c9258a106a6b70000","0xbd5f46caab2c3d4b289396bbb07f203c4da82530":"0x4563918244f400000","0xbd66ffedb530ea0b2e856dd12ac2296c31fe29e0":"0xad78ebc5ac6200000","0xbd67d2e2f82da8861341bc96a2c0791fddf39e40":"0xad7c07947c8fb0000","0xbd6a474d66345bcdd707594adb63b30c7822af54":"0xd8d726b7177a800000","0xbd723b289a7367b6ece2455ed61edb49670ab9c4":"0x10f0cdea164213f8000","0xbd73c3cbc26a175062ea0320dd84b253bce64358":"0x155bd9307f9fe80000","0xbd7419dc2a090a46e2873d7de6eaaad59e19c479":"0x170bcb671759f080000","0xbd8765f41299c7f479923c4fd18f126d7229047d":"0xd8d726b7177a800000","0xbd93e550403e2a06113ed4c3fba1a8913b19407e":"0x6c6b935b8bbd400000","0xbd9e56e902f4be1fc8768d8038bac63e2acbbf8e":"0x36356633ebd8ea0000","0xbda4be317e7e4bed84c0495eee32d607ec38ca52":"0x7d32277978ef4e8000","0xbdb60b823a1173d45a0792245fb496f1fd3301cf":"0x6c6b935b8bbd400000","0xbdbaf6434d40d6355b1e80e40cc4ab9c68d96116":"0x56bc75e2d63100000","0xbdc02cd4330c93d6fbda4f6db2a85df22f43c233":"0x6c6b935b8bbd400000","0xbdc461462b6322b462bdb33f22799e8108e2417d":"0x243d4d18229ca20000","0xbdc739a699700b2e8e2c4a4c7b058a0e513ddebe":"0x6c6b935b8bbd400000","0xbdc74873af922b9df474853b0fa7ff0bf8c82695":"0xd8c9460063d31c0000","0xbdca2a0ff34588af625fa8e28fc3015ab5a3aa00":"0x7ed73f773552fc0000","0xbdd3254e1b3a6dc6cc2c697d45711aca21d516b2":"0x6c6b935b8bbd400000","0xbddfa34d0ebf1b04af53b99b82494a9e3d8aa100":"0x28a857425466f800000","0xbde4c73f969b89e9ceae66a2b51844480e038e9a":"0x3635c9adc5dea00000","0xbde9786a84e75b48f18e726dd78d70e4af3ed802":"0x1369fb96128ac480000","0xbded11612fb5c6da99d1e30e320bc0995466141e":"0x15af1d78b58c400000","0xbded7e07d0711e684de65ac8b2ab57c55c1a8645":"0x2009c5c8bf6fdc0000","0xbdf693f833c3fe471753184788eb4bfe4adc3f96":"0x6acb3df27e1f880000","0xbdf6e68c0cd7584080e847d72cbb23aad46aeb1d":"0x6acb3df27e1f880000","0xbe0a2f385f09dbfce96732e12bb40ac349871ba8":"0x574c115e02b8be0000","0xbe0c2a80b9de084b172894a76cf4737a4f529e1a":"0x6c6acc67d7b1d40000","0xbe1cd7f4c472070968f3bde268366b21eeea8321":"0xe91a7cd19fa3b00000","0xbe2346a27ff9b702044f500deff2e7ffe6824541":"0x1158e460913d00000","0xbe2471a67f6047918772d0e36839255ed9d691ae":"0xd8d726b7177a800000","0xbe2b2280523768ea8ac35cd9e888d60a719300d4":"0x6c6b935b8bbd400000","0xbe2b326e78ed10e550fee8efa8f8070396522f5a":"0x857e0d6f1da76a00000","0xbe305a796e33bbf7f9aeae6512959066efda1010":"0x24dce54d34a1a000000","0xbe478e8e3dde6bd403bb2d1c657c4310ee192723":"0x1ab2cf7c9f87e20000","0xbe4e7d983f2e2a636b1102ec7039efebc842e98d":"0x393ef1a5127c80000","0xbe4fd073617022b67f5c13499b827f763639e4e3":"0x6c6b935b8bbd400000","0xbe525a33ea916177f17283fca29e8b350b7f530b":"0x8f019aaf46e8780000","0xbe53322f43fbb58494d7cce19dda272b2450e827":"0xad7ceaf425c150000","0xbe538246dd4e6f0c20bf5ad1373c3b463a131e86":"0xad78ebc5ac6200000","0xbe5a60689998639ad75bc105a371743eef0f7940":"0x1b327c73e1257a0000","0xbe5cba8d37427986e8ca2600e858bb03c359520f":"0xa030dcebbd2f4c0000","0xbe60037e90714a4b917e61f193d834906703b13a":"0x5c283d410394100000","0xbe633a3737f68439bac7c90a52142058ee8e8a6f":"0x340aad21b3b7000000","0xbe659d85e7c34f8833ea7f488de1fbb5d4149bef":"0x1ebd23ad9d5bb720000","0xbe73274d8c5aa44a3cbefc8263c37ba121b20ad3":"0x1b1ae4d6e2ef500000","0xbe86d0b0438419ceb1a038319237ba5206d72e46":"0x3634fb9f1489a70000","0xbe8d7f18adfe5d6cc775394989e1930c979d007d":"0x3635c9adc5dea00000","0xbe9186c34a52514abb9107860f674f97b821bd5b":"0x1ba01ee40603100000","0xbe935793f45b70d8045d2654d8dd3ad24b5b6137":"0x2fb474098f67c00000","0xbe98a77fd41097b34f59d7589baad021659ff712":"0x30ca024f987b900000","0xbe9b8c34b78ee947ff81472eda7af9d204bc8466":"0x821ab0d4414980000","0xbea00df17067a43a82bc1daecafb6c14300e89e6":"0x62a992e53a0af00000","0xbea0afc93aae2108a3fac059623bf86fa582a75e":"0x5c283d410394100000","0xbeb3358c50cf9f75ffc76d443c2c7f55075a0589":"0x90f534608a72880000","0xbeb4fd315559436045dcb99d49dcec03f40c42dc":"0x6c6b935b8bbd400000","0xbec2e6de39c07c2bae556acfbee2c4728b9982e3":"0x1f0ff8f01daad40000","0xbec6640f4909b58cbf1e806342961d607595096c":"0x6c6acc67d7b1d40000","0xbec8caf7ee49468fee552eff3ac5234eb9b17d42":"0x6c6b935b8bbd400000","0xbecef61c1c442bef7ce04b73adb249a8ba047e00":"0x363b56c3a754c80000","0xbed4649df646e2819229032d8868556fe1e053d3":"0xfc936392801c0000","0xbed4c8f006a27c1e5f7ce205de75f516bfb9f764":"0x3635c9adc5dea000000","0xbee8d0b008421954f92d000d390fb8f8e658eaee":"0x3635c9adc5dea00000","0xbeecd6af900c8b064afcc6073f2d85d59af11956":"0x6c6b935b8bbd400000","0xbeef94213879e02622142bea61290978939a60d7":"0x136857b32ad86048000","0xbef07d97c3481f9d6aee1c98f9d91a180a32442b":"0x152d02c7e14af6800000","0xbefb448c0c5f683fb67ee570baf0db5686599751":"0x6acb3df27e1f880000","0xbf05070c2c34219311c4548b2614a438810ded6d":"0x6c6b935b8bbd400000","0xbf05ff5ecf0df2df887759fb8274d93238ac267d":"0x2b5e3af16b18800000","0xbf09d77048e270b662330e9486b38b43cd781495":"0x5c539b7bf4ff28800000","0xbf17f397f8f46f1bae45d187148c06eeb959fa4d":"0x3649c59624bb300000","0xbf183641edb886ce60b8190261e14f42d93cce01":"0x15b3557f1937f8000","0xbf2aea5a1dcf6ed3b5e8323944e983fedfd1acfb":"0x55a6e79ccd1d300000","0xbf4096bc547dbfc4e74809a31c039e7b389d5e17":"0xd5967be4fc3f100000","0xbf49c14898316567d8b709c2e50594b366c6d38c":"0x27bf38c6544df50000","0xbf4c73a7ede7b164fe072114843654e4d8781dde":"0x6c6b935b8bbd400000","0xbf50ce2e264b9fe2b06830617aedf502b2351b45":"0x3635c9adc5dea00000","0xbf59aee281fa43fe97194351a9857e01a3b897b2":"0x2086ac351052600000","0xbf68d28aaf1eeefef646b65e8cc8d190f6c6da9c":"0x6c6b935b8bbd400000","0xbf6925c00751008440a6739a02bf2b6cdaab5e3a":"0x3635c9adc5dea00000","0xbf7701fc6225d5a17815438a8941d21ebc5d059d":"0x65ea3db75546600000","0xbf8b8005d636a49664f74275ef42438acd65ac91":"0xad78ebc5ac6200000","0xbf92418a0c6c31244d220260cb3e867dd7b4ef49":"0x56900d33ca7fc0000","0xbf9acd4445d9c9554689cabbbab18800ff1741c2":"0x3635c9adc5dea00000","0xbf9f271f7a7e12e36dd2fe9facebf385fe6142bd":"0x366f84f7bb7840000","0xbfa8c858df102cb12421008b0a31c4c7190ad560":"0xad78ebc5ac6200000","0xbfaeb91067617dcf8b44172b02af615674835dba":"0x8b59e884813088000","0xbfb0ea02feb61dec9e22a5070959330299c43072":"0x43c33c1937564800000","0xbfbca418d3529cb393081062032a6e1183c6b2dc":"0x1b1ae4d6e2ef5000000","0xbfbe05e88c9cbbcc0e92a405fac1d85de248ee24":"0x56bc75e2d63100000","0xbfbfbcb656c2992be8fcde8219fbc54aadd59f29":"0x21e18d2c821c7520000","0xbfc57aa666fae28e9f107a49cb5089a4e22151dd":"0x3635c9adc5dea00000","0xbfcb9730246304700da90b4153e71141622e1c41":"0x3635c9adc5dea00000","0xbfd93c90c29c07bc5fb5fc49aeea55a40e134f35":"0x5ede20f01a459800000","0xbfe3a1fc6e24c8f7b3250560991f93cba2cf8047":"0x10f0cf064dd592000000","0xbfe6bcb0f0c07852643324aa5df5fd6225abc3ca":"0x409e52b48369a0000","0xbff5df769934b8943ca9137d0efef2fe6ebbb34e":"0x56bc75e2d63100000","0xbffb6929241f788693273e7022e60e3eab1fe84f":"0x6c6b935b8bbd400000","0xc0064f1d9474ab915d56906c9fb320a2c7098c9b":"0x13683f7f3c15d80000","0xc007f0bdb6e7009202b7af3ea90902697c721413":"0xa2a0e43e7fb9830000","0xc00ab080b643e1c2bae363e0d195de2efffc1c44":"0x1b1ae4d6e2ef500000","0xc02077449a134a7ad1ef7e4d927affeceeadb5ae":"0xfc936392801c0000","0xc02471e3fc2ea0532615a7571d493289c13c36ef":"0x1158e460913d00000","0xc02d6eadeacf1b78b3ca85035c637bb1ce01f490":"0xd8d726b7177a800000","0xc033b1325a0af45472c25527853b1f1c21fa35de":"0x6c6b935b8bbd400000","0xc033be10cb48613bd5ebcb33ed4902f38b583003":"0xa2a15d09519be00000","0xc0345b33f49ce27fe82cf7c84d141c68f590ce76":"0x3635c9adc5dea00000","0xc03de42a109b657a64e92224c08dc1275e80d9b2":"0x1158e460913d00000","0xc04069dfb18b096c7867f8bee77a6dc7477ad062":"0x90f534608a72880000","0xc0413f5a7c2d9a4b8108289ef6ecd271781524f4":"0xa968163f0a57b400000","0xc043f2452dcb9602ef62bd360e033dd23971fe84":"0x6c6b935b8bbd400000","0xc04f4bd4049f044685b883b62959ae631d667e35":"0x13b80b99c5185700000","0xc056d4bd6bf3cbacac65f8f5a0e3980b852740ae":"0x56bc75e2d63100000","0xc05b740620f173f16e52471dc38b9c514a0b1526":"0x796e3ea3f8ab00000","0xc069ef0eb34299abd2e32dabc47944b272334824":"0x68155a43676e00000","0xc06cebbbf7f5149a66f7eb976b3e47d56516da2f":"0x6c6b935b8bbd400000","0xc0725ec2bdc33a1d826071dea29d62d4385a8c25":"0x8a08513463aa6100000","0xc07e3867ada096807a051a6c9c34cc3b3f4ad34a":"0x60f06620a849450000","0xc0895efd056d9a3a81c3da578ada311bfb9356cf":"0xad78ebc5ac6200000","0xc090fe23dcd86b358c32e48d2af91024259f6566":"0xad78ebc5ac6200000","0xc09a66172aea370d9a63da04ff71ffbbfcff7f94":"0x6c6b935b8bbd400000","0xc09e3cfc19f605ff3ec9c9c70e2540d7ee974366":"0x1b1ae4d6e2ef500000","0xc0a02ab94ebe56d045b41b629b98462e3a024a93":"0x56bc75e2d63100000","0xc0a39308a80e9e84aaaf16ac01e3b01d74bd6b2d":"0x7664ddd4c1c0b8000","0xc0a6cbad77692a3d88d141ef769a99bb9e3c9951":"0x56bc75e2d63100000","0xc0a7e8435dff14c25577739db55c24d5bf57a3d9":"0xa6dd90cae5114480000","0xc0ae14d724832e2fce2778de7f7b8daf7b12a93e":"0x1158e460913d00000","0xc0afb7d8b79370cfd663c68cc6b9702a37cd9eff":"0x3635c9adc5dea00000","0xc0b0b7a8a6e1acdd05e47f94c09688aa16c7ad8d":"0x37b6d02ac76710000","0xc0b3f244bca7b7de5b48a53edb9cbeab0b6d88c0":"0x13b80b99c5185700000","0xc0c04d0106810e3ec0e54a19f2ab8597e69a573d":"0x2b5e3af16b1880000","0xc0ca3277942e7445874be31ceb902972714f1823":"0xd8d726b7177a80000","0xc0cbad3ccdf654da22cbcf5c786597ca1955c115":"0x6c6b935b8bbd400000","0xc0cbf6032fa39e7c46ff778a94f7d445fe22cf30":"0x10ce1d3d8cb3180000","0xc0e0b903088e0c63f53dd069575452aff52410c3":"0xa2a15d09519be00000","0xc0e457bd56ec36a1246bfa3230fff38e5926ef22":"0x692ae8897081d00000","0xc0ed0d4ad10de03435b153a0fc25de3b93f45204":"0xab4dcf399a3a600000","0xc0f29ed0076611b5e55e130547e68a48e26df5e4":"0xa2a15d09519be00000","0xc1132878235c5ddba5d9f3228b5236e47020dc6f":"0x3635c9adc5dea00000","0xc1170dbaadb3dee6198ea544baec93251860fda5":"0x410d586a20a4c00000","0xc126573d87b0175a5295f1dd07c575cf8cfa15f2":"0x21e19e0c9bab2400000","0xc127aab59065a28644a56ba3f15e2eac13da2995":"0x2086ac351052600000","0xc12b7f40df9a2f7bf983661422ab84c9c1f50858":"0x1b1ae4d6e2ef5000000","0xc12cfb7b3df70fceca0ede263500e27873f8ed16":"0x3635c9adc5dea00000","0xc12f881fa112b8199ecbc73ec4185790e614a20f":"0x6c6b935b8bbd400000","0xc1384c6e717ebe4b23014e51f31c9df7e4e25b31":"0x1b1ae4d6e2ef500000","0xc1438c99dd51ef1ca8386af0a317e9b041457888":"0xc1daf81d8a3ce0000","0xc1631228efbf2a2e3a4092ee8900c639ed34fbc8":"0x33c5499031720c0000","0xc175be3194e669422d15fee81eb9f2c56c67d9c9":"0xad78ebc5ac6200000","0xc1827686c0169485ec15b3a7c8c01517a2874de1":"0x22b1c8c1227a00000","0xc18ab467feb5a0aadfff91230ff056464d78d800":"0x6c6b935b8bbd400000","0xc1950543554d8a713003f662bb612c10ad4cdf21":"0xfc936392801c0000","0xc1a41a5a27199226e4c7eb198b031b59196f9842":"0xa5aa85009e39c0000","0xc1b2a0fb9cad45cd699192cd27540b88d3384279":"0x1b1ae4d6e2ef500000","0xc1b2aa8cb2bf62cdc13a47ecc4657facaa995f98":"0x363793fa96e6a68000","0xc1b500011cfba95d7cd636e95e6cbf6167464b25":"0xad78ebc5ac6200000","0xc1b9a5704d351cfe983f79abeec3dbbbae3bb629":"0x1158e460913d00000","0xc1cbd2e2332a524cf219b10d871ccc20af1fb0fa":"0x3635c9adc5dea00000","0xc1cdc601f89c0428b31302d187e0dc08ad7d1c57":"0x14542ba12a337c00000","0xc1d4af38e9ba799040894849b8a8219375f1ac78":"0x43c33c1937564800000","0xc1e1409ca52c25435134d006c2a6a8542dfb7273":"0x1dd1e4bd8d1ee0000","0xc1eba5684aa1b24cba63150263b7a9131aeec28d":"0x1158e460913d00000","0xc1ec81dd123d4b7c2dd9b4d438a7072c11dc874c":"0x6c6b935b8bbd400000","0xc1f39bd35dd9cec337b96f47c677818160df37b7":"0x1158e460913d00000","0xc1ffad07db96138c4b2a530ec1c7de29b8a0592c":"0xf43fc2c04ee00000","0xc21fa6643a1f14c02996ad7144b75926e87ecb4b":"0x43c33c1937564800000","0xc2340a4ca94c9678b7494c3c852528ede5ee529f":"0x2a36b05a3fd7c8000","0xc239abdfae3e9af5457f52ed2b91fd0ab4d9c700":"0x6c6b935b8bbd400000","0xc23b2f921ce4a37a259ee4ad8b2158d15d664f59":"0x1608995e8bd3f8000","0xc24399b4bf86f7338fbf645e3b22b0e0b7973912":"0x6c6b935b8bbd400000","0xc24ccebc2344cce56417fb684cf81613f0f4b9bd":"0x54069233bf7f780000","0xc25266c7676632f13ef29be455ed948add567792":"0x487a9a304539440000","0xc25cf826550c8eaf10af2234fef904ddb95213be":"0x3635c9adc5dea00000","0xc2663f8145dbfec6c646fc5c49961345de1c9f11":"0x2567ac70392b880000","0xc270456885342b640b4cfc1b520e1a544ee0d571":"0x62a992e53a0af00000","0xc27376f45d21e15ede3b26f2655fcee02ccc0f2a":"0x1158e460913d00000","0xc2779771f0536d79a8708f6931abc44b3035e999":"0x43c4f8300dcb3480000","0xc27f4e08099d8cf39ee11601838ef9fc06d7fc41":"0x61093d7c2c6d380000","0xc282e6993fbe7a912ea047153ffd9274270e285b":"0x7960b331247638000","0xc2836188d9a29253e0cbda6571b058c289a0bb32":"0x6c6b935b8bbd400000","0xc2aa74847e86edfdd3f3db22f8a2152feee5b7f7":"0x6f118886b784a20000","0xc2b2cbe65bc6c2ee7a3c75b2e47c189c062e8d8b":"0x43c33c1937564800000","0xc2bae4a233c2d85724f0dabebda0249d833e37d3":"0x10f0cf064dd59200000","0xc2c13e72d268e7150dc799e7c6cf03c88954ced7":"0x25f273933db5700000","0xc2cb1ada5da9a0423873814793f16144ef36b2f3":"0x48557e3b7017df0000","0xc2d1778ef6ee5fe488c145f3586b6ebbe3fbb445":"0x3e1ff1e03b55a80000","0xc2d9eedbc9019263d9d16cc5ae072d1d3dd9db03":"0x43c33c1937564800000","0xc2e0584a71348cc314b73b2029b6230b92dbb116":"0x6c6b935b8bbd400000","0xc2e2d498f70dcd0859e50b023a710a6d4b2133bd":"0x383911f00cbce10000","0xc2ed5ffdd1add855a2692fe062b5d618742360d4":"0x410d586a20a4c00000","0xc2ee91d3ef58c9d1a589844ea1ae3125d6c5ba69":"0x34957444b840e80000","0xc2fafdd30acb6d6706e9293cb02641f9edbe07b5":"0x5100860b430f480000","0xc2fd0bf7c725ef3e047e5ae1c29fe18f12a7299c":"0x487a9a304539440000","0xc2fe7d75731f636dcd09dbda0671393ba0c82a7d":"0x77432217e683600000","0xc3107a9af3322d5238df0132419131629539577d":"0x1ab4e464d414310000","0xc3110be01dc9734cfc6e1ce07f87d77d1345b7e1":"0x10f0ce949e00f930000","0xc32038ca52aee19745be5c31fcdc54148bb2c4d0":"0x2b5aad72c65200000","0xc325c352801ba883b3226c5feb0df9eae2d6e653":"0xd5967be4fc3f100000","0xc32ec7e42ad16ce3e2555ad4c54306eda0b26758":"0x6c6b935b8bbd400000","0xc332df50b13c013490a5d7c75dbfa366da87b6d6":"0xd8d726b7177a800000","0xc33acdb3ba1aab27507b86b15d67faf91ecf6293":"0x6c6b935b8bbd400000","0xc33ece935a8f4ef938ea7e1bac87cb925d8490ca":"0x7038c16781f78480000","0xc340f9b91c26728c31d121d5d6fc3bb56d3d8624":"0x6c6b935b8bbd400000","0xc346cb1fbce2ab285d8e5401f42dd7234d37e86d":"0x486cb9799191e0000","0xc3483d6e88ac1f4ae73cc4408d6c03abe0e49dca":"0x39992648a23c8a00000","0xc348fc5a461323b57be303cb89361b991913df28":"0x152d02c7e14af6800000","0xc34e3ba1322ed0571183a24f94204ee49c186641":"0x327afefa4a7bc0000","0xc35b95a2a3737cb8f0f596b34524872bd30da234":"0x198be85235e2d500000","0xc3631c7698b6c5111989bf452727b3f9395a6dea":"0x243275896641dbe0000","0xc36c0b63bfd75c2f8efb060883d868cccd6cbdb4":"0xa2a15d09519be00000","0xc3756bcdcc7eec74ed896adfc335275930266e08":"0x14542ba12a337c00000","0xc384ac6ee27c39e2f278c220bdfa5baed626d9d3":"0x2086ac351052600000","0xc3a046e3d2b2bf681488826e32d9c061518cfe8c":"0x8cf23f909c0fa00000","0xc3a9226ae275df2cab312b911040634a9c9c9ef6":"0xd8d726b7177a800000","0xc3b928a76fad6578f04f0555e63952cd21d1520a":"0x6c6b935b8bbd400000","0xc3c2297329a6fd99117e54fc6af379b4d556547e":"0x14542ba12a337c00000","0xc3c3c2510d678020485a63735d1307ec4ca6302b":"0x3635c9adc5dea00000","0xc3cb6b36af443f2c6e258b4a39553a818747811f":"0x57473d05dabae80000","0xc3db5657bb72f10d58f231fddf11980aff678693":"0x14061b9d77a5e980000","0xc3db9fb6f46c480af34465d79753b4e2b74a67ce":"0x43c33c1937564800000","0xc3dd58903886303b928625257ae1a013d71ae216":"0x6c6b935b8bbd400000","0xc3e0471c64ff35fa5232cc3121d1d38d1a0fb7de":"0x6c6b935b8bbd400000","0xc3e20c96df8d4e38f50b265a98a906d61bc51a71":"0x6c6b935b8bbd400000","0xc3e387b03ce95ccfd7fa51dd840183bc43532809":"0x6c6b935b8bbd400000","0xc3f8f67295a5cd049364d05d23502623a3e52e84":"0x14542ba12a337c00000","0xc401c427cccff10decb864202f36f5808322a0a8":"0xb47b51a69cd4020000","0xc4088c025f3e85013f5439fb3440a17301e544fe":"0x7e09db4d9f3f340000","0xc41461a3cfbd32c9865555a4813137c076312360":"0x3635c6204739d98000","0xc420388fbee84ad656dd68cdc1fbaa9392780b34":"0xa2dca63aaf4c58000","0xc42250b0fe42e6b7dcd5c890a6f0c88f5f5fb574":"0x81ee4825359840000","0xc42d6aeb710e3a50bfb44d6c31092969a11aa7f3":"0x82263cafd8cea0000","0xc440c7ca2f964b6972ef664a2261dde892619d9c":"0x43c33c1937564800000","0xc44bdec8c36c5c68baa2ddf1d431693229726c43":"0x152d02c7e14af6800000","0xc44f4ab5bc60397c737eb0683391b633f83c48fa":"0x3635c9adc5dea00000","0xc452e0e4b3d6ae06b836f032ca09db409ddfe0fb":"0x2b5e3af16b18800000","0xc45a1ca1036b95004187cdac44a36e33a94ab5c3":"0xdd00f720301880000","0xc45d47ab0c9aa98a5bd62d16223ea2471b121ca4":"0x202e68f2c2aee40000","0xc4681e73bb0e32f6b726204831ff69baa4877e32":"0x62a992e53a0af00000","0xc46bbdef76d4ca60d316c07f5d1a780e3b165f7e":"0x6c6b935b8bbd400000","0xc47d610b399250f70ecf1389bab6292c91264f23":"0xfa7e7b5df3cd00000","0xc4803bb407c762f90b7596e6fde194931e769590":"0xd8d726b7177a800000","0xc48651c1d9c16bff4c9554886c3f3f26431f6f68":"0x23ab9599c43f080000","0xc489c83ffbb0252ac0dbe3521217630e0f491f14":"0xd8d726b7177a800000","0xc48b693cacefdbd6cb5d7895a42e3196327e261c":"0x3635c9adc5dea00000","0xc493489e56c3bdd829007dc2f956412906f76bfa":"0x2a791488e71540000","0xc496cbb0459a6a01600fc589a55a32b454217f9d":"0xeda838c4929080000","0xc49cfaa967f3afbf55031061fc4cef88f85da584":"0x6c6b935b8bbd400000","0xc4b6e5f09cc1b90df07803ce3d4d13766a9c46f4":"0x14542ba12a337c00000","0xc4bec96308a20f90cab18399c493fd3d065abf45":"0x2f6f10780d22cc00000","0xc4c01afc3e0f045221da1284d7878574442fb9ac":"0x1923c688b73ab040000","0xc4c15318d370c73318cc18bdd466dbaa4c6603bf":"0x11164759ffb320000","0xc4c6cb723dd7afa7eb535615e53f3cef14f18118":"0x6c6b8fce0d18798000","0xc4cc45a2b63c27c0b4429e58cd42da59be739bd6":"0x3635c9adc5dea00000","0xc4cf930e5d116ab8d13b9f9a7ec4ab5003a6abde":"0x1158e460913d000000","0xc4d916574e68c49f7ef9d3d82d1638b2b7ee0985":"0x55a6e79ccd1d300000","0xc4dac5a8a0264fbc1055391c509cc3ee21a6e04c":"0x1606b7fa039ce740000","0xc4dd048bfb840e2bc85cb53fcb75abc443c7e90f":"0xc971dc07c9c7900000","0xc4f2913b265c430fa1ab8adf26c333fc1d9b66f2":"0x1158e460913d00000","0xc4f7b13ac6d4eb4db3d4e6a252af8a07bd5957da":"0xad78ebc5ac6200000","0xc4f7d2e2e22084c44f70feaab6c32105f3da376f":"0x6acb3df27e1f880000","0xc4ff6fbb1f09bd9e102ba033d636ac1c4c0f5304":"0x3635c9adc5dea00000","0xc4ffadaaf2823fbea7bff702021bffc4853eb5c9":"0x24a19c1bd6f128000","0xc500b720734ed22938d78c5e48b2ba9367a575ba":"0x7129e1cdf373ee00000","0xc50fe415a641b0856c4e75bf960515441afa358d":"0x6c6b935b8bbd400000","0xc5134cfbb1df7a20b0ed7057622eeed280947dad":"0xcdff97fabcb4600000","0xc517d0315c878813c717e18cafa1eab2654e01da":"0x21e19e0c9bab2400000","0xc518799a5925576213e21896e0539abb85b05ae3":"0x3635c9adc5dea00000","0xc522e20fbf04ed7f6b05a37b4718d6fce0142e1a":"0xd8d726b7177a800000","0xc524086d46c8112b128b2faf6f7c7d8160a8386c":"0x15af1d78b58c400000","0xc52d1a0c73c2a1be84915185f8b34faa0adf1de3":"0x4be4eab3fa0fa68000","0xc53594c7cfb2a08f284cc9d7a63bbdfc0b319732":"0xa6b2328ff3a62c00000","0xc5374928cdf193705443b14cc20da423473cd9cf":"0x77d10509bb3af8000","0xc538a0ff282aaa5f4b75cfb62c70037ee67d4fb5":"0x6c6b935b8bbd400000","0xc53b50fd3b2b72bc6c430baf194a515585d3986d":"0x1158e460913d00000","0xc53d79f7cb9b70952fd30fce58d54b9f0b59f647":"0x113e2d6744345f80000","0xc549df83c6f65eec0f1dc9a0934a5c5f3a50fd88":"0x9dc05cce28c2b80000","0xc55005a6c37e8ca7e543ce259973a3cace961a4a":"0x6c6b935b8bbd400000","0xc555b93156f09101233c6f7cf6eb3c4f196d3346":"0xa2a15d09519be00000","0xc55a6b4761fd11e8c85f15174d74767cd8bd9a68":"0x73f75d1a085ba0000","0xc56e6b62ba6e40e52aab167d21df025d0055754b":"0x6c6b935b8bbd400000","0xc573e841fa08174a208b060ccb7b4c0d7697127f":"0x243d4d18229ca20000","0xc57612de91110c482e6f505bcd23f3c5047d1d61":"0xc2127af858da700000","0xc5843399d150066bf7979c34ba294620368ad7c0":"0xad78ebc5ac6200000","0xc58b9cc61dedbb98c33f224d271f0e228b583433":"0xd255d112e103a00000","0xc58f62fee9711e6a05dc0910b618420aa127f288":"0xd7c198710e66b00000","0xc593b546b7698710a205ad468b2c13152219a342":"0x54069233bf7f780000","0xc593d6e37d14b566643ac4135f243caa0787c182":"0x28a857425466f800000","0xc5a3b98e4593fea0b38c4f455a5065f051a2f815":"0x44cf468af25bf770000","0xc5a48a8500f9b4e22f0eb16c6f4649687674267d":"0x2c0ec50385043e8000","0xc5a629a3962552cb8eded889636aafbd0c18ce65":"0x21e19e0c9bab2400000","0xc5ae86b0c6c7e3900f1368105c56537faf8d743e":"0xa31062beeed700000","0xc5b009baeaf788a276bd35813ad65b400b849f3b":"0x3635c9adc5dea00000","0xc5b56cd234267c28e89c6f6b2266b086a12f970c":"0xd8d726b7177a800000","0xc5c6a4998a33feb764437a8be929a73ba34a0764":"0xa968163f0a57b400000","0xc5c73d61cce7c8fe4c8fce29f39092cd193e0fff":"0x1b1ae4d6e2ef5000000","0xc5c7590b5621ecf8358588de9b6890f2626143f1":"0xa2a15d09519be00000","0xc5cdcee0e85d117dabbf536a3f4069bf443f54e7":"0x6ac5c62d9486070000","0xc5d48ca2db2f85d8c555cb0e9cfe826936783f9e":"0xad78ebc5ac6200000","0xc5de1203d3cc2cea31c82ee2de5916880799eafd":"0x10f0cf064dd59200000","0xc5e488cf2b5677933971f64cb8202dd05752a2c0":"0x3635c9adc5dea00000","0xc5e812f76f15f2e1f2f9bc4823483c8804636f67":"0x3f514193abb840000","0xc5e9939334f1252ed2ba26814487dfd2982b3128":"0x3cb71f51fc5580000","0xc5eb42295e9cadeaf2af12dede8a8d53c579c469":"0xcf152640c5c8300000","0xc5edbbd2ca0357654ad0ea4793f8c5cecd30e254":"0x14542ba12a337c00000","0xc5f64babb7033142f20e46d7aa6201ed86f67103":"0x6c6b935b8bbd400000","0xc5f687717246da8a200d20e5e9bcac60b67f3861":"0x18d993f34aef10000","0xc6045b3c350b4ce9ca0c6b754fb41a69b97e9900":"0x3224f42723d4540000","0xc60b04654e003b4683041f1cbd6bc38fda7cdbd6":"0x6c6b935b8bbd400000","0xc61446b754c24e3b1642d9e51765b4d3e46b34b6":"0x6c6b935b8bbd400000","0xc618521321abaf5b26513a4a9528086f220adc6f":"0x176b344f2a78c0000","0xc6234657a807384126f8968ca1708bb07baa493c":"0x1158e460913d00000","0xc625f8c98d27a09a1bcabd5128b1c2a94856af30":"0xad78ebc5ac6200000","0xc6355ec4768c70a49af69513cd83a5bca7e3b9cd":"0x14542ba12a337c00000","0xc63ac417992e9f9b60386ed953e6d7dff2b090e8":"0xd8d8583fa2d52f0000","0xc63cd7882118b8a91e074d4c8f4ba91851303b9a":"0xe18398e7601900000","0xc652871d192422c6bc235fa063b44a7e1d43e385":"0x8670e9ec6598c0000","0xc667441e7f29799aba616451d53b3f489f9e0f48":"0x2f29ace68addd800000","0xc66ae4cee87fb3353219f77f1d6486c580280332":"0x19a16b06ff8cb0000","0xc674f28c8afd073f8b799691b2f0584df942e844":"0x6c6b935b8bbd400000","0xc697b70477cab42e2b8b266681f4ae7375bb2541":"0x12e5732baba5c980000","0xc69b855539ce1b04714728eec25a37f367951de7":"0x6c6b935b8bbd400000","0xc69be440134d6280980144a9f64d84748a37f349":"0x26c29e47c4844c0000","0xc69d663c8d60908391c8d236191533fdf7775613":"0x1a4aba225c20740000","0xc6a286e065c85f3af74812ed8bd3a8ce5d25e21d":"0xfc936392801c0000","0xc6a30ef5bb3320f40dc5e981230d52ae3ac19322":"0x9ddc1e3b901180000","0xc6ae287ddbe1149ba16ddcca4fe06aa2eaa988a9":"0x15af1d78b58c400000","0xc6c7c191379897dd9c9d9a33839c4a5f62c0890d":"0xd8d854b22430688000","0xc6cd68ec35362c5ad84c82ad4edc232125912d99":"0x5e0549c9632e1d80000","0xc6d8954e8f3fc533d2d230ff025cb4dce14f3426":"0x15af1d78b58c400000","0xc6dbdb9efd5ec1b3786e0671eb2279b253f215ed":"0x3635c9adc5dea00000","0xc6df2075ebd240d44869c2be6bdf82e63d4ef1f5":"0x1158e460913d00000","0xc6e2f5af979a03fd723a1b6efa728318cf9c1800":"0x243d4d18229ca20000","0xc6e324beeb5b36765ecd464260f7f26006c5c62e":"0x6c6b935b8bbd400000","0xc6e4cc0c7283fc1c85bc4813effaaf72b49823c0":"0xf031ec9c87dd30000","0xc6ee35934229693529dc41d9bb71a2496658b88e":"0x42bf06b78ed3b500000","0xc6fb1ee37417d080a0d048923bdabab095d077c6":"0xad78ebc5ac6200000","0xc70527d444c490e9fc3f5cc44e66eb4f306b380f":"0xd8d726b7177a800000","0xc70d856d621ec145303c0a6400cd17bbd6f5eaf7":"0x1158e460913d00000","0xc70fa45576bf9c865f983893002c414926f61029":"0x15b4aa8e9702680000","0xc71145e529c7a714e67903ee6206e4c3042b6727":"0x4d853c8f8908980000","0xc71b2a3d7135d2a85fb5a571dcbe695e13fc43cd":"0x3635c9adc5dea00000","0xc71f1d75873f33dcb2dd4b3987a12d0791a5ce27":"0x3708baed3d68900000","0xc71f92a3a54a7b8c2f5ea44305fccb84eee23148":"0x2b59ca131d2060000","0xc721b2a7aa44c21298e85039d00e2e460e670b9c":"0x7a1fe160277000000","0xc72cb301258e91bc08998a805dd192f25c2f9a35":"0x2009c5c8bf6fdc0000","0xc7368b9709a5c1b51c0adf187a65df14e12b7dba":"0x2026fc77f03e5ae8000","0xc739259e7f85f2659bef5f609ed86b3d596c201e":"0xad78ebc5ac6200000","0xc73e2112282215dc0762f32b7e807dcd1a7aae3e":"0x1760cbc623bb3500000","0xc749668042e71123a648975e08ed6382f83e05e2":"0x2f6f10780d22cc00000","0xc74a3995f807de1db01a2eb9c62e97d0548f696f":"0x3635c9adc5dea00000","0xc7506c1019121ff08a2c8c1591a65eb4bdfb4a3f":"0x2086ac351052600000","0xc75c37ce2da06bbc40081159c6ba0f976e3993b1":"0x3a7923151ecf580000","0xc75d2259306aec7df022768c69899a652185dbc4":"0xd8d726b7177a800000","0xc760971bbc181c6a7cf77441f24247d19ce9b4cf":"0x6c6b935b8bbd400000","0xc76130c73cb9210238025c9df95d0be54ac67fbe":"0x5150ae84a8cdf00000","0xc765e00476810947816af142d46d2ee7bca8cc4f":"0x1b1ae4d6e2ef500000","0xc7675e5647b9d8daf4d3dff1e552f6b07154ac38":"0x9c2007651b2500000","0xc77b01a6e911fa988d01a3ab33646beef9c138f3":"0x271b6fa5dbe6cc0000","0xc7837ad0a0bf14186937ace06c5546a36aa54f46":"0xd8d726b7177a800000","0xc79806032bc7d828f19ac6a640c68e3d820fa442":"0x1158e460913d00000","0xc799e34e88ff88be7de28e15e4f2a63d0b33c4cb":"0xad78ebc5ac6200000","0xc79d5062c796dd7761f1f13e558d73a59f82f38b":"0x1b1ae4d6e2ef5000000","0xc7a018f0968a51d1f6603c5c49dc545bcb0ff293":"0xd8d726b7177a800000","0xc7aff91929797489555a2ff1d14d5c695a108355":"0x3635c9adc5dea00000","0xc7b1c83e63203f9547263ef6282e7da33b6ed659":"0xfc936392801c0000","0xc7b39b060451000ca1049ba154bcfa00ff8af262":"0x152d02c7e14af6800000","0xc7bf17c4c11f98941f507e77084fffbd2dbd3db5":"0x3635c9adc5dea00000","0xc7bf2ed1ed312940ee6aded1516e268e4a604856":"0x14542ba12a337c00000","0xc7d44fe32c7f8cd5f1a97427b6cd3afc9e45023e":"0x55a6e79ccd1d300000","0xc7d5c7054081e918ec687b5ab36e973d18132935":"0x9ddc1e3b901180000","0xc7de5e8eafb5f62b1a0af2195cf793c7894c9268":"0x3635c9adc5dea00000","0xc7e330cd0c890ac99fe771fcc7e7b009b7413d8a":"0xd8d726b7177a800000","0xc7eac31abce6d5f1dea42202b6a674153db47a29":"0x2009c5c8bf6fdc0000","0xc7ec62b804b1f69b1e3070b5d362c62fb309b070":"0x2c46bf5416066110000","0xc7f72bb758016b374714d4899bce22b4aec70a31":"0x3a26c9478f5e2d0000","0xc80b36d1beafba5fcc644d60ac6e46ed2927e7dc":"0xb98bc829a6f90000","0xc811c2e9aa1ac3462eba5e88fcb5120e9f6e2ca2":"0x4be6d887bd876e0000","0xc817df1b91faf30fe3251571727c9711b45d8f06":"0x6c6acc67d7b1d40000","0xc81fb7d20fd2800192f0aac198d6d6a37d3fcb7d":"0xe1149331c2dde0000","0xc820c711f07705273807aaaa6de44d0e4b48be2e":"0x8670e9ec6598c0000","0xc8231ba5a411a13e222b29bfc1083f763158f226":"0x3637096c4bcc690000","0xc836e24a6fcf29943b3608e662290a215f6529ea":"0xfd45064eaee100000","0xc83ba6dd9549be1d3287a5a654d106c34c6b5da2":"0x17b7883c06916600000","0xc83e9d6a58253beebeb793e6f28b054a58491b74":"0xf46c2b6f5a9140000","0xc841884fa4785fb773b28e9715fae99a5134305d":"0x6c6b935b8bbd400000","0xc84d9bea0a7b9f140220fd8b9097cfbfd5edf564":"0x6ab9ec291ad7d8000","0xc852428d2b586497acd30c56aa13fb5582f84402":"0x3342d60dff19600000","0xc853215b9b9f2d2cd0741e585e987b5fb80c212e":"0x54069233bf7f780000","0xc85325eab2a59b3ed863c86a5f2906a04229ffa9":"0x193d7f7d253de00000","0xc85ef27d820403805fc9ed259fff64acb8d6346a":"0x6c6b935b8bbd400000","0xc8616b4ec09128cdff39d6e4b9ac86eec471d5f2":"0x10d3aa536e2940000","0xc86190904b8d079ec010e462cbffc90834ffaa5c":"0x22385a827e815500000","0xc8710d7e8b5a3bd69a42fe0fa8b87c357fddcdc8":"0xd8d726b7177a800000","0xc87352dba582ee2066b9c002a962e003134f78b1":"0x1b1ae4d6e2ef500000","0xc87c77e3c24adecdcd1038a38b56e18dead3b702":"0x1dd0c885f9a0d800000","0xc87d3ae3d88704d9ab0009dcc1a0067131f8ba3c":"0x6ac5c62d9486070000","0xc8814e34523e38e1f927a7dce8466a447a093603":"0x21e19e0c9bab2400000","0xc88255eddcf521c6f81d97f5a42181c9073d4ef1":"0xfc39044d00a2a8000","0xc885a18aabf4541b7b7b7ecd30f6fae6869d9569":"0x6c6b935b8bbd400000","0xc88ca1e6e5f4d558d13780f488f10d4ad3130d34":"0x54069233bf7f780000","0xc88eec54d305c928cc2848c2fee23531acb96d49":"0x6c6ad382d4fb610000","0xc89cf504b9f3f835181fd8424f5ccbc8e1bddf7d":"0x21e19e0c9bab2400000","0xc8a2c4e59e1c7fc54805580438aed3e44afdf00e":"0x2629f66e0c5300000","0xc8aa49e3809f0899f28ab57e6743709d58419033":"0x2fb474098f67c00000","0xc8ab1a3cf46cb8b064df2e222d39607394203277":"0x6c6b935b8bbd400000","0xc8b1850525d946f2ae84f317b15188c536a5dc86":"0x918ddc3a42a3d40000","0xc8d4e1599d03b79809e0130a8dc38408f05e8cd3":"0x9fad06241279160000","0xc8dd27f16bf22450f5771b9fe4ed4ffcb30936f4":"0xaadec983fcff40000","0xc8de7a564c7f4012a6f6d10fd08f47890fbf07d4":"0x1043561a8829300000","0xc8e2adeb545e499d982c0c117363ceb489c5b11f":"0x35659ef93f0fc40000","0xc8e558a3c5697e6fb23a2594c880b7a1b68f9860":"0x21e19e0c9bab2400000","0xc8f2b320e6dfd70906c597bad2f9501312c78259":"0x51934b8b3a57d00000","0xc90300cb1d4077e6a6d7e169a460468cf4a492d7":"0x6c6b935b8bbd400000","0xc90c3765156bca8e4897ab802419153cbe5225a9":"0xad78ebc5ac6200000","0xc910a970556c9716ea53af66ddef93143124913d":"0x55a6e79ccd1d300000","0xc9127b7f6629ee13fc3f60bc2f4467a20745a762":"0x37c9aa4e7ce421d8000","0xc91bb562e42bd46130e2d3ae4652b6a4eb86bc0f":"0x1d460162f516f00000","0xc9308879056dfe138ef8208f79a915c6bc7e70a8":"0x21e19e0c9bab2400000","0xc934becaf71f225f8b4a4bf7b197f4ac9630345c":"0x43c33c1937564800000","0xc93fbde8d46d2bcc0fa9b33bd8ba7f8042125565":"0x4be4e7267b6ae00000","0xc94089553ae4c22ca09fbc98f57075cf2ec59504":"0xd8d726b7177a800000","0xc94110e71afe578aa218e4fc286403b0330ace8d":"0x6c6b935b8bbd400000","0xc946d5acc1346eba0a7279a0ac1d465c996d827e":"0x3783d545fdf0aa40000","0xc94a28fb3230a9ddfa964e770f2ce3c253a7be4f":"0xad78ebc5ac6200000","0xc94a585203da7bbafd93e15884e660d4b1ead854":"0x17b7883c06916600000","0xc94f7c35c027d47df8ef4f9df85a9248a17dd23b":"0x19f8e7559924c0000","0xc951900c341abbb3bafbf7ee2029377071dbc36a":"0x11c25d004d01f80000","0xc953f934c0eb2d0f144bdab00483fd8194865ce7":"0x6c6b935b8bbd400000","0xc96626728aaa4c4fb3d31c26df3af310081710d1":"0xb50fcfafebecb00000","0xc96751656c0a8ef4357b7344322134b983504aca":"0x6c6b935b8bbd400000","0xc98048687f2bfcc9bd90ed18736c57edd352b65d":"0x3635c9adc5dea00000","0xc981d312d287d558871edd973abb76b979e5c35e":"0x6acb3df27e1f880000","0xc982586d63b0d74c201b1af8418372e30c7616be":"0x56bc75e2d63100000","0xc989434f825aaf9c552f685eba7c11db4a5fc73a":"0x1b28c58d9696b40000","0xc989eec307e8839b9d7237cfda08822962abe487":"0x15af1d78b58c400000","0xc992be59c6721caf4e028f9e8f05c25c55515bd4":"0x1158e460913d00000","0xc9957ba94c1b29e5277ec36622704904c63dc023":"0x683efc6782642c0000","0xc99a9cd6c9c1be3534eecd92ecc22f5c38e9515b":"0x105593b3a169d770000","0xc9ac01c3fb0929033f0ccc7e1acfeaaba7945d47":"0x2a36a9e9ca4d2038000","0xc9b698e898d20d4d4f408e4e4d061922aa856307":"0x22b1c8c1227a00000","0xc9b6b686111691ee6aa197c7231a88dc60bd295d":"0x1b1ae4d6e2ef500000","0xc9c7ac0bdd9342b5ead4360923f68c72a6ba633a":"0x1b1ae4d6e2ef500000","0xc9c80dc12e7bab86e949d01e4c3ed35f2b9bba5f":"0x6c6b935b8bbd400000","0xc9d76446d5aadff80b68b91b08cd9bc8f5551ac1":"0x26b4bd9110dce80000","0xc9dcbb056f4db7d9da39936202c5bd8230b3b477":"0x43c33c1937564800000","0xc9e02608066828848aeb28c73672a12925181f4d":"0x1b1b6bd7af64c70000","0xca0432cb157b5179f02ebba5c9d1b54fec4d88ca":"0x3635c9adc5dea00000","0xca122cf0f2948896b74843f49afed0ba1618eed7":"0x1e5b8fa8fe2ac00000","0xca22cda3606da5cad013b8074706d7e9e721a50c":"0x17181c6fa3981940000","0xca23f62dff0d6460036c62e840aec5577e0befd2":"0x7a1fe160277000000","0xca25ff34934c1942e22a4e7bd56f14021a1af088":"0xaadec983fcff40000","0xca373fe3c906b8c6559ee49ccd07f37cd4fb5266":"0x61093d7c2c6d380000","0xca41ccac30172052d522cd2f2f957d248153409f":"0x6acb3df27e1f880000","0xca4288014eddc5632f5facb5e38517a8f8bc5d98":"0x126e72a69a50d00000","0xca428863a5ca30369892d612183ef9fb1a04bcea":"0x52663ccab1e1c00000","0xca49a5f58adbefae23ee59eea241cf0482622eaa":"0x4d853c8f8908980000","0xca4ca9e4779d530ecbacd47e6a8058cfde65d98f":"0x2b5e3af16b18800000","0xca657ec06fe5bc09cf23e52af7f80cc3689e6ede":"0x30ca024f987b900000","0xca66b2280fa282c5b67631ce552b62ee55ad8474":"0x6ac422f53492880000","0xca6c818befd251361e02744068be99d8aa60b84a":"0x14542ba12a337c00000","0xca70f4ddbf069d2143bd6bbc7f696b52789b32e7":"0xa2a15d09519be00000","0xca747576446a4c8f30b08340fee198de63ec92cf":"0x17c8e1206722a300000","0xca7ba3ff536c7e5f0e153800bd383db8312998e0":"0x931ac3d6bb2400000","0xca8276c477b4a07b80107b843594189607b53bec":"0x14542ba12a337c00000","0xca8409083e01b397cf12928a05b68455ce6201df":"0x56bc75e2d631000000","0xca98c7988efa08e925ef9c9945520326e9f43b99":"0xd8d726b7177a800000","0xca9a042a6a806ffc92179500d24429e8ab528117":"0x3ba1910bf341b00000","0xca9dec02841adf5cc920576a5187edd2bd434a18":"0x1b1ae4d6e2ef500000","0xca9faa17542fafbb388eab21bc4c94e8a7b34788":"0x6c6b8fce0d18798000","0xcaaa68ee6cdf0d34454a769b0da148a1faaa1865":"0x1872e1de7fe52c00000","0xcaad9dc20d589ce428d8fda3a9d53a607b7988b5":"0xd8d726b7177a800000","0xcab0d32cf3767fa6b3537c84328baa9f50458136":"0x1e5b8fa8fe2ac000000","0xcab9a301e6bd46e940355028eccd40ce4d5a1ac3":"0x15af1d78b58c400000","0xcab9a97ada065c87816e6860a8f1426fe6b3d775":"0x3635c9adc5dea00000","0xcabab6274ed15089737e287be878b757934864e2":"0x43c33c1937564800000","0xcabdaf354f4720a466a764a528d60e3a482a393c":"0x3635c9adc5dea00000","0xcacb675e0996235404efafbb2ecb8152271b55e0":"0x25f273933db5700000","0xcad14f9ebba76680eb836b079c7f7baaf481ed6d":"0xcef3d7bd7d0340000","0xcae3a253bcb2cf4e13ba80c298ab0402da7c2aa0":"0x124bc0ddd92e5600000","0xcaef027b1ab504c73f41f2a10979b474f97e309f":"0xad78ebc5ac6200000","0xcaf4481d9db78dc4f25f7b4ac8bd3b1ca0106b31":"0x10f0cf064dd59200000","0xcafde855864c2598da3cafc05ad98df2898e8048":"0x300a8ed96ff4a940000","0xcb0dd7cf4e5d8661f6028943a4b9b75c914436a7":"0x1969368974c05b000000","0xcb1bb6f1da5eb10d4899f7e61d06c1b00fdfb52d":"0x384524cc70b7780000","0xcb3d766c983f192bcecac70f4ee03dd9ff714d51":"0x56bc75e2d63100000","0xcb42b44eb5fd60b5837e4f9eb47267523d1a229c":"0x2ee449550898e40000","0xcb47bd30cfa8ec5468aaa6a94642ced9c819c8d4":"0xd8d726b7177a800000","0xcb48fe8265d9af55eb7006bc335645b0a3a183be":"0xa2a15d09519be00000","0xcb4a914d2bb029f32e5fef5c234c4fec2d2dd577":"0x6194049f30f7200000","0xcb4abfc282aed76e5d57affda542c1f382fcacf4":"0x1b90f11c3183faa0000","0xcb4ad0c723da46ab56d526da0c1d25c73daff10a":"0x1ba5abf9e779380000","0xcb4bb1c623ba28dc42bdaaa6e74e1d2aa1256c2a":"0x6c6acc67d7b1d40000","0xcb50587412822304ebcba07dab3a0f09fffee486":"0x4a4491bd6dcd280000","0xcb58990bcd90cfbf6d8f0986f6fa600276b94e2d":"0x3634bf39ab98788000","0xcb68ae5abe02dcf8cbc5aa719c25814651af8b85":"0x1b1ae4d6e2ef500000","0xcb7479109b43b26657f4465f4d18c6f974be5f42":"0x62a992e53a0af00000","0xcb7d2b8089e9312cc9aeaa2773f35308ec6c2a7b":"0x21e19e0c9bab2400000","0xcb86edbc8bbb1f9131022be649565ebdb09e32a1":"0x6c6b935b8bbd400000","0xcb93199b9c90bc4915bd859e3d42866dc8c18749":"0xc90df07def78c0000","0xcb94e76febe208116733e76e805d48d112ec9fca":"0x3635c9adc5dea00000","0xcb9b5103e4ce89af4f64916150bff9eecb9faa5c":"0x1b1ae4d6e2ef500000","0xcba25c7a503cc8e0d04971ca05c762f9b762b48b":"0x1b1ae4d6e2ef500000","0xcba288cd3c1eb4d59ddb06a6421c14c345a47b24":"0xd8d726b7177a800000","0xcbb3189e4bd7f45f178b1c30c76e26314d4a4b0a":"0xffe0b677c65a98000","0xcbb7be17953f2ccc93e1bc99805bf45511434e4c":"0xaae5b9df56d2f200000","0xcbc04b4d8b82caf670996f160c362940d66fcf1a":"0x14542ba12a337c00000","0xcbde9734b8e6aa538c291d6d7facedb0f338f857":"0x6c6b935b8bbd400000","0xcbe1b948864d8474e765145858fca4550f784b92":"0x21e19e0c9bab2400000","0xcbe52fc533d7dd608c92a260b37c3f45deb4eb33":"0x3635c9adc5dea00000","0xcbe810fe0fecc964474a1db97728bc87e973fcbd":"0x21e19e0c9bab2400000","0xcbf16a0fe2745258cd52db2bf21954c975fc6a15":"0x1043561a8829300000","0xcbf37ff854a2f1ce53934494777892d3ec655782":"0x21e19e0c9bab2400000","0xcbfa6af6c283b046e2772c6063b0b21553c40106":"0x6c6b935b8bbd400000","0xcbfa76db04ce38fb205d37b8d377cf1380da0317":"0x4d853c8f8908980000","0xcc034985d3f28c2d39b1a34bced4d3b2b6ca234e":"0x9ddc1e3b901180000","0xcc043c4388d345f884c6855e71142a9f41fd6935":"0x1158e460913d00000","0xcc1d6ead01aada3e8dc7b95dca25df26eefa639d":"0x6c6b935b8bbd400000","0xcc2b5f448f3528d3fe41cc7d1fa9c0dc76f1b776":"0x340aad21b3b700000","0xcc2d04f0a4017189b340ca77198641dcf6456b91":"0xd5967be4fc3f100000","0xcc419fd9912b85135659e77a93bc3df182d45115":"0x21e19e0c9bab2400000","0xcc45fb3a555bad807b388a0357c855205f7c75e8":"0x2ee449550898e40000","0xcc48414d2ac4d42a5962f29eee4497092f431352":"0x8ba52e6fc45e40000","0xcc4a2f2cf86cf3e43375f360a4734691195f1490":"0x4915053bd129098000","0xcc4f0ff2aeb67d54ce3bc8c6510b9ae83e9d328b":"0x15af1d78b58c400000","0xcc4faac00be6628f92ef6b8cb1b1e76aac81fa18":"0xb22a2eab0f0fd0000","0xcc4feb72df98ff35a138e01761d1203f9b7edf0a":"0x17b7883c06916600000","0xcc606f511397a38fc7872bd3b0bd03c71bbd768b":"0x3635c9adc5dea00000","0xcc60f836acdef3548a1fefcca13ec6a937db44a0":"0x4b06dbbb40f4a0000","0xcc6c03bd603e09de54e9c4d5ac6d41cbce715724":"0x556f64c1fe7fa0000","0xcc6c2df00e86eca40f21ffda1a67a1690f477c65":"0xab4dcf399a3a600000","0xcc6d7b12061bc96d104d606d65ffa32b0036eb07":"0x21e19e0c9bab2400000","0xcc73dd356b4979b579b401d4cc7a31a268ddce5a":"0x1b1ae4d6e2ef500000","0xcc758d071d25a6320af68c5dc9c4f6955ba94520":"0x14542ba12a337c00000","0xcc7b0481cc32e6faef2386a07022bcb6d2c3b4fc":"0xab4dcf399a3a600000","0xcc943be1222cd1400a2399dd1b459445cf6d54a9":"0x2a740ae6536fc880000","0xcc9519d1f3985f6b255eaded12d5624a972721e1":"0x3635c9adc5dea00000","0xcc9ac715cd6f2610c52b58676456884297018b29":"0xb98bc829a6f90000","0xcca07bb794571d4acf041dad87f0d1ef3185b319":"0x6c6b935b8bbd400000","0xccabc6048a53464424fcf76eeb9e6e1801fa23d4":"0x2ab7b260ff3fd0000","0xccae0d3d852a7da3860f0636154c0a6ca31628d4":"0x5c6d12b6bc1a00000","0xccca24d8c56d6e2c07db086ec07e585be267ac8d":"0xad78ebc5ac6200000","0xccd521132d986cb96869842622a7dda26c3ed057":"0x6c6b935b8bbd400000","0xccf43975b76bfe735fec3cb7d4dd24f805ba0962":"0x340aad21b3b700000","0xccf62a663f1353ba2ef8e6521dc1ecb673ec8ef7":"0x83d6c7aab63600000","0xccf7110d1bd9a74bfd1d7d7d2d9d55607e7b837d":"0x30ca024f987b900000","0xccfd725760a68823ff1e062f4cc97e1360e8d997":"0x15ac56edc4d12c0000","0xcd020f8edfcf524798a9b73a640334bbf72f80a5":"0x73f75d1a085ba0000","0xcd06f8c1b5cdbd28e2d96b6346c3e85a0483ba24":"0x3635c9adc5dea00000","0xcd072e6e1833137995196d7bb1725fef8761f655":"0x14542ba12a337c00000","0xcd0a161bc367ae0927a92aac9cf6e5086714efca":"0x6c6b935b8bbd400000","0xcd0af3474e22f069ec3407870dd770443d5b12b0":"0x8e5eb4ee77b2ef0000","0xcd0b0257e783a3d2c2e3ba9d6e79b75ef98024d4":"0x9fad06241279160000","0xcd102cd6db3df14ad6af0f87c72479861bfc3d24":"0x6c6b935b8bbd400000","0xcd1e66ed539dd92fc40bbaa1fa16de8c02c14d45":"0xc77e4256863d80000","0xcd1ed263fbf6f6f7b48aef8f733d329d4382c7c7":"0x100bd33fb98ba0000","0xcd2a36d753e9e0ed012a584d716807587b41d56a":"0xe2ba75b0b1f1c0000","0xcd32a4a8a27f1cc63954aa634f7857057334c7a3":"0x3ad166576c72d40000","0xcd35ff010ec501a721a1b2f07a9ca5877dfcf95a":"0xd96fce90cfabcc0000","0xcd4306d7f6947ac1744d4e13b8ef32cb657e1c00":"0x1b1ab319f5ec750000","0xcd43258b7392a930839a51b2ef8ad23412f75a9f":"0x6c6b935b8bbd400000","0xcd49bf185e70d04507999f92a4de4455312827d0":"0x3635c9adc5dea00000","0xcd5510a242dfb0183de925fba866e312fabc1657":"0x821ab0d44149800000","0xcd566ad7b883f01fd3998a9a58a9dee4724ddca5":"0x330ae1835be300000","0xcd59f3dde77e09940befb6ee58031965cae7a336":"0x21e19e0c9bab2400000","0xcd725d70be97e677e3c8e85c0b26ef31e9955045":"0x487a9a304539440000","0xcd7e47909464d871b9a6dc76a8e9195db3485e7a":"0x215f835bc769da80000","0xcd7ece086b4b619b3b369352ee38b71ddb06439a":"0xad78ebc5ac6200000","0xcd7f09d7ed66d0c38bc5ad4e32b7f2b08dc1b30d":"0x3e3bb34da2a4700000","0xcd9529492b5c29e475acb941402b3d3ba50686b0":"0x6acb3df27e1f880000","0xcd95fa423d6fc120274aacde19f4eeb766f10420":"0xad78ebc5ac6200000","0xcd9b4cef73390c83a8fd71d7b540a7f9cf8b8c92":"0x4e1003b28d9280000","0xcda1741109c0265b3fb2bf8d5ec9c2b8a3346b63":"0x1158e460913d00000","0xcda1b886e3a795c9ba77914e0a2fe5676f0f5ccf":"0x5bf60ea42c2040000","0xcda4530f4b9bc50905b79d17c28fc46f95349bdf":"0x3310e04911f1f80000","0xcdab46a5902080646fbf954204204ae88404822b":"0x1d8a96e5c606eb0000","0xcdb597299030183f6e2d238533f4642aa58754b6":"0x15af1d78b58c400000","0xcdd5d881a7362c9070073bdfbc75e72453ac510e":"0x2da518eae48ee80000","0xcdd60d73efaad873c9bbfb178ca1b7105a81a681":"0x1bc16d674ec800000","0xcdd9efac4d6d60bd71d95585dce5d59705c13564":"0x56bc75e2d63100000","0xcde36d81d128c59da145652193eec2bfd96586ef":"0xd8d726b7177a800000","0xcdea386f9d0fd804d02818f237b7d9fa7646d35e":"0xa349d36d80ec578000","0xcdecf5675433cdb0c2e55a68db5d8bbe78419dd2":"0x1158e460913d00000","0xcdfd8217339725d7ebac11a63655f265eff1cc3d":"0x10f0c696410e3a90000","0xce079f51887774d8021cb3b575f58f18e9acf984":"0x9c2007651b2500000","0xce1884ddbbb8e10e4dba6e44feeec2a7e5f92f05":"0xd8d726b7177a800000","0xce1b0cb46aaecfd79b880cad0f2dda8a8dedd0b1":"0x1158e460913d00000","0xce26f9a5305f8381094354dbfc92664e84f902b5":"0xc7aaab0591eec0000","0xce2deab51c0a9ae09cd212c4fa4cc52b53cc0dec":"0x6c6b935b8bbd400000","0xce2e0da8934699bb1a553e55a0b85c169435bea3":"0x10f0c696410e3a90000","0xce3a61f0461b00935e85fa1ead82c45e5a64d488":"0x1b1ae4d6e2ef500000","0xce4b065dbcb23047203262fb48c1188364977470":"0x1b1ae4d6e2ef500000","0xce53c8cdd74296aca987b2bc19c2b875a48749d0":"0xa2a15d09519be00000","0xce5e04f0184369bcfa06aca66ffa91bf59fa0fb9":"0x22b1c8c1227a00000","0xce5eb63a7bf4fbc2f6e4baa0c68ab1cb4cf98fb4":"0x6c6b935b8bbd400000","0xce62125adec3370ac52110953a4e760be9451e3b":"0x83d6c7aab63600000","0xce71086d4c602554b82dcbfce88d20634d53cc4d":"0x92896529baddc880000","0xce8a6b6d5033b1498b1ffeb41a41550405fa03a2":"0xd8d726b7177a800000","0xce9786d3712fa200e9f68537eeaa1a06a6f45a4b":"0x61093d7c2c6d380000","0xce9d21c692cd3c01f2011f505f870036fa8f6cd2":"0x15af1d78b58c400000","0xcea2896623f4910287a2bdc5be83aea3f2e6de08":"0x1fb5a3751e490dc0000","0xcea34a4dd93dd9aefd399002a97d997a1b4b89cd":"0x5150ae84a8cdf00000","0xcea43f7075816b60bbfce68b993af0881270f6c4":"0x6c6b935b8bbd400000","0xcea8743341533cb2f0b9c6efb8fda80d77162825":"0x56bc75e2d63100000","0xceb089ec8a78337e8ef88de11b49e3dd910f748f":"0x3635c9adc5dea00000","0xceb33d78e7547a9da2e87d51aec5f3441c87923a":"0x1158e460913d00000","0xceb389381d48a8ae4ffc483ad0bb5e204cfdb1ec":"0x2827e6e4dd62ba8000","0xcec6fc65853f9cce5f8e844676362e1579015f02":"0x6c6b935b8bbd400000","0xced3c7be8de7585140952aeb501dc1f876ecafb0":"0xd8d726b7177a800000","0xced81ec3533ff1bfebf3e3843ee740ad11758d3e":"0x6acb3df27e1f880000","0xcedcb3a1d6843fb6bef643617deaf38f8e98dd5f":"0x19e2a4c818b9060000","0xcee699c0707a7836252b292f047ce8ad289b2f55":"0x119a1e21aa69560000","0xceed47ca5b899fd1623f21e9bd4db65a10e5b09d":"0x73877404c1eee0000","0xcef77451dfa2c643e00b156d6c6ff84e2373eb66":"0xa31062beeed700000","0xcf1169041c1745e45b172435a2fc99b49ace2b00":"0x1bb88baab2d7c0000","0xcf157612764e0fd696c8cb5fba85df4c0ddc3cb0":"0x65a4da25d3016c00000","0xcf1bdb799b2ea63ce134668bdc198b54840f180b":"0xfc936392801c0000","0xcf2288ef4ebf88e86db13d8a0e0bf52a056582c3":"0x89506fbf9740740000","0xcf264e6925130906c4d7c18591aa41b2a67f6f58":"0x6c6b935b8bbd400000","0xcf26b47bd034bc508e6c4bcfd6c7d30034925761":"0x6194049f30f7200000","0xcf2e2ad635e9861ae95cb9bafcca036b5281f5ce":"0x77432217e6836000000","0xcf2e734042a355d05ffb2e3915b16811f45a695e":"0x6c6b935b8bbd400000","0xcf348f2fe47b7e413c077a7baf3a75fbf8428692":"0x6c6b935b8bbd400000","0xcf3f9128b07203a3e10d7d5755c0c4abc6e2cac2":"0x10f0cf064dd59200000","0xcf3fbfa1fd32d7a6e0e6f8ef4eab57be34025c4c":"0x39a1c0f7594d480000","0xcf4166746e1d3bc1f8d0714b01f17e8a62df1464":"0x3677036edf0af60000","0xcf4f1138f1bd6bf5b6d485cce4c1017fcb85f07d":"0x2fd0bc77c32bff0000","0xcf5a6f9df75579c644f794711215b30d77a0ce40":"0x6c6b935b8bbd400000","0xcf5e0eacd1b39d0655f2f77535ef6608eb950ba0":"0x6c6b935b8bbd400000","0xcf684dfb8304729355b58315e8019b1aa2ad1bac":"0x177224aa844c720000","0xcf694081c76d18c64ca71382be5cd63b3cb476f8":"0x3635c9adc5dea00000","0xcf6e52e6b77480b1867efec6446d9fc3cc3577e8":"0xc0901f6bd98790000","0xcf883a20329667ea226a1e3c765dbb6bab32219f":"0xa4be3564d616660000","0xcf8882359c0fb23387f5674074d8b17ade512f98":"0x14542ba12a337c00000","0xcf89f7460ba3dfe83c5a1d3a019ee1250f242f0f":"0x356813cdcefd028000","0xcf923a5d8fbc3d01aa079d1cfe4b43ce071b1611":"0x6c6b935b8bbd400000","0xcf9be9b9ab86c66b59968e67b8d4dcff46b1814a":"0x23c757072b8dd00000","0xcfa8b37127149bdbfee25c34d878510951ea10eb":"0x6c6b935b8bbd400000","0xcfac2e1bf33205b05533691a02267ee19cd81836":"0x3635c9adc5dea00000","0xcfbb32b7d024350e3321fa20c9a914035372ffc6":"0x15be6174e1912e0000","0xcfc4e6f7f8b011414bfba42f23adfaa78d4ecc5e":"0x6449e84e47a8a80000","0xcfd2728dfb8bdbf3bf73598a6e13eaf43052ea2b":"0x93739534d28680000","0xcfd47493c9f89fe680bda5754dd7c9cfe7cb5bbe":"0x2f473513448fe0000","0xcfde0fc75d6f16c443c3038217372d99f5d907f7":"0x83225e6396b5ec0000","0xcfe2caaf3cec97061d0939748739bffe684ae91f":"0x21e19e0c9bab2400000","0xcfeacaaed57285e0ac7268ce6a4e35ecfdb242d7":"0x3ae4d4240190600000","0xcfecbea07c27002f65fe534bb8842d0925c78402":"0xd8d726b7177a800000","0xcfee05c69d1f29e7714684c88de5a16098e91399":"0x6acb3df27e1f880000","0xcff6a6fe3e9a922a12f21faa038156918c4fcb9c":"0x44591d67fecc80000","0xcff7f89a4d4219a38295251331568210ffc1c134":"0x5f68e8131ecf800000","0xcff8d06b00e3f50c191099ad56ba6ae26571cd88":"0x3635c9adc5dea00000","0xcffc49c1787eebb2b56cabe92404b636147d4558":"0x133e0308f40a3da8000","0xd008513b27604a89ba1763b6f84ce688b346945b":"0x3635c9adc5dea00000","0xd00f067286c0fbd082f9f4a61083ec76deb3cee6":"0x3635c9adc5dea00000","0xd015f6fcb84df7bb410e8c8f04894a881dcac237":"0x384524cc70b7780000","0xd01af9134faf5257174e8b79186f42ee354e642d":"0x3635c9adc5dea00000","0xd02108d2ae3cab10cbcf1657af223e027c8210f6":"0x6c6d84bccdd9ce0000","0xd02afecf8e2ec2b62ac8ad204161fd1fae771d0e":"0x6c6b935b8bbd400000","0xd0319139fbab2e8e2accc1d924d4b11df6696c5a":"0xad78ebc5ac6200000","0xd037d215d11d1df3d54fbd321cd295c5465e273b":"0x4be4e7267b6ae00000","0xd03a2da41e868ed3fef5745b96f5eca462ff6fda":"0xa2a15d09519be00000","0xd03fc165576aaed525e5502c8e140f8b2e869639":"0x17356d8b32501c80000","0xd043a011ec4270ee7ec8b968737515e503f83028":"0x1b1ae4d6e2ef500000","0xd04b861b3d9acc563a901689941ab1e1861161a2":"0x1158e460913d00000","0xd05a447c911dbb275bfb2e5a37e5a703a56f9997":"0xad78ebc5ac6200000","0xd05ffb2b74f867204fe531653b0248e21c13544e":"0x3635c9adc5dea00000","0xd062588171cf99bbeb58f126b870f9a3728d61ec":"0xf3f20b8dfa69d00000","0xd0638ea57189a6a699024ad78c71d939c1c2ff8c":"0x8eae566710fc200000","0xd0648a581b3508e135a2935d12c9657045d871ca":"0x1b2df9d219f57980000","0xd071192966eb69c3520fca3aa4dd04297ea04b4e":"0x5f68e8131ecf80000","0xd0718520eae0a4d62d70de1be0ca431c5eea2482":"0x6c6b935b8bbd400000","0xd0775dba2af4c30a3a78365939cd71c2f9de95d2":"0x692ae8897081d00000","0xd07be0f90997caf903c8ac1d53cde904fb190741":"0x36389038b699b40000","0xd07e511864b1cf9969e3560602829e32fc4e71f5":"0x2b5e3af16b1880000","0xd0809498c548047a1e2a2aa6a29cd61a0ee268bd":"0x6c6b935b8bbd400000","0xd082275f745a2cac0276fbdb02d4b2a3ab1711fe":"0x1a055690d9db80000","0xd08fc09a0030fd0928cd321198580182a76aae9f":"0x3635c9adc5dea00000","0xd093e829819fd2e25b973800bb3d5841dd152d05":"0xd8d726b7177a800000","0xd0944aa185a1337061ae20dc9dd96c83b2ba4602":"0xad78ebc5ac6200000","0xd096565b7c7407d06536580355fdd6d239144aa1":"0xd8d726b7177a80000","0xd09cb2e6082d693a13e8d2f68dd1dd8461f55840":"0x3635c9adc5dea00000","0xd0a6c6f9e9c4b383d716b31de78d56414de8fa91":"0x1043561a8829300000","0xd0a7209b80cf60db62f57d0a5d7d521a69606655":"0x8ac7230489e800000","0xd0a8abd80a199b54b08b65f01d209c27fef0115b":"0x161c626dc61a2ef8000","0xd0abcc70c0420e0e172f97d43b87d5e80c336ea9":"0x21e19e0c9bab2400000","0xd0ae735d915e946866e1fea77e5ea466b5cadd16":"0x6c6b935b8bbd400000","0xd0b11d6f2bce945e0c6a5020c3b52753f803f9d1":"0xad78ebc5ac6200000","0xd0c101fd1f01c63f6b1d19bc920d9f932314b136":"0x43c33c1937564800000","0xd0c55abf976fdc3db2afe9be99d499484d576c02":"0x3635c9adc5dea00000","0xd0d0a2ad45f59a9dccc695d85f25ca46ed31a5a3":"0x2d89577d7d40200000","0xd0d62c47ea60fb90a3639209bbfdd4d933991cc6":"0xa844a7424d9c80000","0xd0db456178206f5c4430fe005063903c3d7a49a7":"0x26491e45a753c08000","0xd0e194f34b1db609288509ccd2e73b6131a2538b":"0x36356633ebd8ea0000","0xd0e35e047646e759f4517093d6408642517f084d":"0xd58fa46818eccb8000","0xd0ee4d02cf24382c3090d3e99560de3678735cdf":"0x821ab0d44149800000","0xd0f04f52109aebec9a7b1e9332761e9fe2b97bb5":"0xd8d726b7177a800000","0xd0f9597811b0b992bb7d3757aa25b4c2561d32e2":"0x1b1ae4d6e2ef500000","0xd10302faa1929a326904d376bf0b8dc93ad04c4c":"0x61093d7c2c6d380000","0xd1100dd00fe2ddf18163ad964d0b69f1f2e9658a":"0x143120955b2506b0000","0xd116f3dcd5db744bd008887687aa0ec9fd7292aa":"0x3635c9adc5dea00000","0xd119417c46732cf34d1a1afb79c3e7e2cd8eece4":"0x6c6b935b8bbd400000","0xd12d77ae01a92d35117bac705aacd982d02e74c1":"0x3635c9adc5dea00000","0xd135794b149a18e147d16e621a6931f0a40a969a":"0x43c33c1937564800000","0xd1432538e35b7664956ae495a32abdf041a7a21c":"0x42bf06b78ed3b500000","0xd1438267231704fc7280d563adf4763844a80722":"0xad78ebc5ac6200000","0xd1538e9a87e59ca9ec8e5826a5b793f99f96c4c3":"0x3635c9adc5dea00000","0xd1648503b1ccc5b8be03fa1ec4f3ee267e6adf7b":"0x13befbf51eec0900000","0xd1682c2159018dc3d07f08240a8c606daf65f8e1":"0x2a5a058fc295ed000000","0xd171c3f2258aef35e599c7da1aa07300234da9a6":"0x6c6b935b8bbd400000","0xd1778c13fbd968bc083cb7d1024ffe1f49d02caa":"0xd9ecb4fd208e500000","0xd17fbe22d90462ed37280670a2ea0b3086a0d6d6":"0xad6eedd17cf3b8000","0xd1811c55976980f083901d8a0db269222dfb5cfe":"0x54069233bf7f780000","0xd18eb9e1d285dabe93e5d4bae76beefe43b521e8":"0x243d4d18229ca20000","0xd193e583d6070563e7b862b9614a47e99489f3e5":"0x36356633ebd8ea0000","0xd1978f2e34407fab1dc2183d95cfda6260b35982":"0x2ab7b260ff3fd00000","0xd19caf39bb377fdf2cf19bd4fb52591c2631a63c":"0x3635c9adc5dea00000","0xd1a396dcdab2c7494130b3fd307820340dfd8c1f":"0xf92250e2dfd00000","0xd1a71b2d0858e83270085d95a3b1549650035e23":"0x327bb09d06aa8500000","0xd1acb5adc1183973258d6b8524ffa28ffeb23de3":"0xd8d726b7177a800000","0xd1b37f03cb107424e9c4dd575ccd4f4cee57e6cd":"0x6c6b935b8bbd400000","0xd1b5a454ac3405bb4179208c6c84de006bcb9be9":"0x1b1ae4d6e2ef500000","0xd1c45954a62b911ad701ff2e90131e8ceb89c95c":"0x4b91a2de457e880000","0xd1c96e70f05ae0e6cd6021b2083750a7717cde56":"0x1b1ae4d6e2ef500000","0xd1d5b17ffe2d7bbb79cc7d7930bcb2e518fb1bbf":"0xa2a15d09519be00000","0xd1da0c8fb7c210e0f2ec618f85bdae7d3e734b1c":"0x6acb3df27e1f880000","0xd1dd79fb158160e5b4e8e23f312e6a907fbc4d4e":"0x1b1ae4d6e2ef500000","0xd1de5aad3a5fd803f1b1aeb6103cb8e14fe723b7":"0x1158e460913d00000","0xd1e1f2b9c16c309874dee7fac32675aff129c398":"0x3f24d8e4a00700000","0xd1e5e234a9f44266a4a6241a84d7a1a55ad5a7fe":"0x43c33c1937564800000","0xd1ea4d72a67b5b3e0f315559f52bd0614d713069":"0x6c6b935b8bbd400000","0xd1ee905957fe7cc70ec8f2868b43fe47b13febff":"0x2629f66e0c5300000","0xd1f1694d22671b5aad6a94995c369fbe6133676f":"0x3635c9adc5dea00000","0xd1f4dc1ddb8abb8848a8b14e25f3b55a8591c266":"0xd8d726b7177a80000","0xd1fed0aee6f5dfd7e25769254c3cfad15adeccaa":"0x2792c8fc4b53280000","0xd2051cb3cb6704f0548cc890ab0a19db3415b42a":"0x121b2e5e6464780000","0xd206aaddb336d45e7972e93cb075471d15897b5d":"0x2086ac351052600000","0xd209482bb549abc4777bea6d7f650062c9c57a1c":"0x11651ac3e7a7580000","0xd20dcb0b78682b94bc3000281448d557a20bfc83":"0x30849ebe16369c0000","0xd2107b353726c3a2b46566eaa7d9f80b5d21dbe3":"0x1158e460913d00000","0xd211b21f1b12b5096181590de07ef81a89537ead":"0x6c6b935b8bbd400000","0xd218efb4db981cdd6a797f4bd48c7c26293ceb40":"0xa1466b31c6431c0000","0xd21a7341eb84fd151054e5e387bb25d36e499c09":"0x2f6f10780d22cc00000","0xd224f880f9479a89d32f09e52be990b288135cef":"0x3a9d5baa4abf1d00000","0xd22f0ca4cd479e661775053bcc49e390f670dd8a":"0x3635c9adc5dea00000","0xd231929735132102471ba59007b6644cc0c1de3e":"0x3637096c4bcc690000","0xd235d15cb5eceebb61299e0e827fa82748911d89":"0xd8d726b7177a800000","0xd23a24d7f9468343c143a41d73b88f7cbe63be5e":"0xad78ebc5ac6200000","0xd23d7affacdc3e9f3dae7afcb4006f58f8a44600":"0xc328093e61ee400000","0xd243184c801e5d79d2063f3578dbae81e7b3a9cb":"0x6bdca2681e1aba0000","0xd24b6644f439c8051dfc64d381b8c86c75c17538":"0x6c6b935b8bbd400000","0xd24bf12d2ddf457decb17874efde2052b65cbb49":"0x2f6f10780d22cc00000","0xd251f903ae18727259eee841a189a1f569a5fd76":"0x21e19e0c9bab2400000","0xd252960b0bf6b2848fdead80136db5f507f8be02":"0x6c6b935b8bbd400000","0xd2581a55ce23ab10d8ad8c44378f59079bd6f658":"0x1dd0c885f9a0d800000","0xd25aecd7eb8bd6345b063b5dbd271c77d3514494":"0x62a992e53a0af00000","0xd27c234ff7accace3d996708f8f9b04970f97d36":"0x487a9a304539440000","0xd28298524df5ec4b24b0ffb9df85170a145a9eb5":"0xf98a3b9b337e20000","0xd283b8edb10a25528a4404de1c65e7410dbcaa67":"0x28a857425466f800000","0xd284a50382f83a616d39b8a9c0f396e0ebbfa95d":"0x3636c25e66ece70000","0xd288e7cb7ba9f620ab0f7452e508633d1c5aa276":"0xd8d726b7177a800000","0xd29dc08efbb3d72e263f78ab7610d0226de76b00":"0x28a857425466f800000","0xd2a030ac8952325f9e1db378a71485a24e1b07b2":"0x6c6b935b8bbd400000","0xd2a479404347c5543aab292ae1bb4a6f158357fa":"0xd8d726b7177a800000","0xd2a5a024230a57ccc666760b89b0e26cafd189c7":"0xa96595a5c6e8a3f8000","0xd2a80327cbe55c4c7bd51ff9dde4ca648f9eb3f8":"0x2b5e3af16b1880000","0xd2a84f75675c62d80c88756c428eee2bcb185421":"0x410d586a20a4c00000","0xd2abd84a181093e5e229136f42d835e8235de109":"0x56be03ca3e47d8000","0xd2ac0d3a58605e1d0f0eb3de25b2cad129ed6058":"0xd8d726b7177a800000","0xd2bf67a7f3c6ce56b7be41675dbbadfe7ea93a33":"0x15af1d78b58c400000","0xd2dbebe89b0357aea98bbe8e496338debb28e805":"0xd8d726b7177a800000","0xd2e21ed56868fab28e0947927adaf29f23ebad6c":"0x6c184f1355d0e80000","0xd2e817738abf1fb486583f80c350318bed860c80":"0xd02cecf5f5d810000","0xd2edd1ddd6d86dc005baeb541d22b640d5c7cae5":"0x1158e460913d00000","0xd2f1998e1cb1580cec4f6c047dcd3dcec54cf73c":"0xad78ebc5ac6200000","0xd2f241255dd7c3f73c07043071ec08ddd9c5cde5":"0x1b1ae4d6e2ef500000","0xd2ff672016f63b2f85398f4a6fedbb60a50d3cce":"0x1291246f5b734a0000","0xd30d4c43adcf55b2cb53d68323264134498d89ce":"0x3635c9adc5dea00000","0xd30ee9a12b4d68abace6baca9ad7bf5cd1faf91c":"0x514fcb24ff9c500000","0xd3118ea3c83505a9d893bb67e2de142d537a3ee7":"0x1158e460913d00000","0xd311bcd7aa4e9b4f383ff3d0d6b6e07e21e3705d":"0xad78ebc5ac6200000","0xd315deea1d8c1271f9d1311263ab47c007afb6f5":"0x3c81d4e654b400000","0xd32b2c79c36478c5431901f6d700b04dbe9b8810":"0x15779a9de6eeb00000","0xd32b45564614516c91b07fa9f72dcf787cce4e1c":"0xfc66fae3746ac0000","0xd330728131fe8e3a15487a34573c93457e2afe95":"0xd8d726b7177a800000","0xd331c823825a9e5263d052d8915d4dcde07a5c37":"0x1e931283ccc8500000","0xd333627445f2d787901ef33bb2a8a3675e27ffec":"0x15af1d78b58c400000","0xd33cf82bf14c592640a08608914c237079d5be34":"0x6c6b935b8bbd400000","0xd34d708d7398024533a5a2b2309b19d3c55171bb":"0x15af1d78b58c400000","0xd34e03d36a2bd4d19a5fa16218d1d61e3ffa0b15":"0x1158e460913d000000","0xd35075ca61fe59d123969c36a82d1ab2d918aa38":"0x90f534608a72880000","0xd367009ab658263b62c2333a1c9e4140498e1389":"0x6c6b935b8bbd400000","0xd3679a47df2d99a49b01c98d1c3e0c987ce1e158":"0xf2dc7d47f15600000","0xd38fa2c4cc147ad06ad5a2f75579281f22a7cc1f":"0x43c33c1937564800000","0xd39a5da460392b940b3c69bc03757bf3f2e82489":"0x17c83a97d6b6ca50000","0xd39b7cbc94003fc948f0cde27b100db8ccd6e063":"0x15af1d78b58c400000","0xd3a10ec7a5c9324999dd9e9b6bde7c911e584bda":"0x2086ac351052600000","0xd3a941c961e8ca8b1070f23c6d6d0d2a758a4444":"0xad78ebc5ac6200000","0xd3bb59fa31258be62f8ed232f1a7d47b4a0b41ee":"0x56bc75e2d63100000","0xd3bc730937fa75d8452616ad1ef1fe7fffe0d0e7":"0x484e4ded2eae38000","0xd3c24d4b3a5e0ff8a4622d518edd73f16ab28610":"0x1158e460913d00000","0xd3c6f1e0f50ec3d2a67e6bcd193ec7ae38f1657f":"0x166c5480889db770000","0xd3d6e9fb82542fd29ed9ea3609891e151396b6f7":"0xb6f588aa7bcf5c00000","0xd3dad1b6d08d4581ccae65a8732db6ac69f0c69e":"0x14542ba12a337c00000","0xd3df3b53cb3b4755de54e180451cc44c9e8ae0aa":"0x23c49409b977828000","0xd3f873bd9956135789ab00ebc195b922e94b259d":"0x6c6b935b8bbd400000","0xd402b4f6a099ebe716cb14df4f79c0cd01c6071b":"0x6c6b935b8bbd400000","0xd40d0055fd9a38488aff923fd03d35ec46d711b3":"0x10f08eda8e555098000","0xd40ed66ab3ceff24ca05ecd471efb492c15f5ffa":"0x1b1ae4d6e2ef500000","0xd418870bc2e4fa7b8a6121ae0872d55247b62501":"0x55a6e79ccd1d300000","0xd41d7fb49fe701baac257170426cc9b38ca3a9b2":"0x98a7d9b8314c00000","0xd4205592844055b3c7a1f80cefe3b8eb509bcde7":"0x9b3bfd342a9fc8000","0xd42b20bd0311608b66f8a6d15b2a95e6de27c5bf":"0x6c6b935b8bbd400000","0xd4344f7d5cad65d17e5c2d0e7323943d6f62fe92":"0xe7eeba3410b740000","0xd43ee438d83de9a37562bb4e286cb1bd19f4964d":"0x3635c9adc5dea00000","0xd44334b4e23a169a0c16bd21e866bba52d970587":"0x8cf23f909c0fa00000","0xd44d81e18f46e2cfb5c1fcf5041bc8569767d100":"0x7b442e684f65aa40000","0xd44f4ac5fad76bdc1537a3b3af6472319b410d9d":"0x56bc75e2d631000000","0xd44f5edf2bcf2433f211dadd0cc450db1b008e14":"0xe7eeba3410b740000","0xd44f6ac3923b5fd731a4c45944ec4f7ec52a6ae4":"0x21e19e0c9bab2400000","0xd45b3341e8f15c80329320c3977e3b90e7826a7e":"0x1b1ae4d6e2ef500000","0xd45d5daa138dd1d374c71b9019916811f4b20a4e":"0x1f399b1438a1000000","0xd460a4b908dd2b056759b488850b66a838fc77a8":"0x6acb3df27e1f880000","0xd467cf064c0871989b90d8b2eb14ccc63b360823":"0xad78ebc5ac6200000","0xd46bae61b027e5bb422e83a3f9c93f3c8fc77d27":"0x6c6b935b8bbd400000","0xd46f8223452982a1eea019a8816efc2d6fc00768":"0x76d41c62494840000","0xd475477fa56390d33017518d6711027f05f28dbf":"0x6b111333d4fd4c0000","0xd47c242edffea091bc54d57df5d1fdb93101476c":"0x9df7dfa8f760480000","0xd47d8685faee147c520fd986709175bf2f886bef":"0x6c6b935b8bbd400000","0xd47f50df89a1cff96513bef1b2ae3a2971accf2c":"0x2d89577d7d40200000","0xd482e7f68e41f238fe517829de15477fe0f6dd1d":"0x1b1ae4d6e2ef500000","0xd4879fd12b1f3a27f7e109761b23ca343c48e3d8":"0x241a9b4f617a280000","0xd48e3f9357e303513841b3f84bda83fc89727587":"0x3635c9adc5dea00000","0xd49a75bb933fca1fca9aa1303a64b6cb44ea30e1":"0x21e19e0c9bab2400000","0xd4b085fb086f3d0d68bf12926b1cc3142cae8770":"0xc893d09c8f51500000","0xd4b2ff3bae1993ffea4d3b180231da439f7502a2":"0x6c6b935b8bbd400000","0xd4b38a5fdb63e01714e9801db47bc990bd509183":"0x14534d95bef905c0000","0xd4b8bdf3df9a51b0b91d16abbea05bb4783c8661":"0x3635c9adc5dea00000","0xd4c4d1a7c3c74984f6857b2f5f07e8face68056d":"0x6c6b935b8bbd400000","0xd4c6ac742e7c857d4a05a04c33d4d05c1467571d":"0xad78ebc5ac6200000","0xd4cb21e590c5a0e06801366aff342c7d7db16424":"0x1ac7a08ead02f80000","0xd4d92c62b280e00f626d8657f1b86166cb1f740f":"0xad7f23634cbd60000","0xd4ebb1929a23871cf77fe049ab9602be08be0a73":"0x678a932062e4180000","0xd4ee4919fb37f2bb970c3fff54aaf1f3dda6c03f":"0x878678326eac9000000","0xd4feed99e8917c5c5458635f3603ecb7e817a7d0":"0x1043c43cde1d398000","0xd4ff46203efa23064b1caf00516e28704a82a4f8":"0x487a9a304539440000","0xd500e4d1c9824ba9f5b635cfa3a8c2c38bbd4ced":"0x15af1d78b58c400000","0xd508d39c70916f6abc4cc7f999f011f077105802":"0x5724d24afe77f0000","0xd50f7fa03e389876d3908b60a537a6706304fb56":"0x56bc75e2d63100000","0xd513a45080ff2febe62cd5854abe29ee4467f996":"0x84e13bc4fc5d80000","0xd5276f0cd5ffd5ffb63f98b5703d5594ede0838b":"0x15af1d78b58c400000","0xd5294b666242303b6df0b1c88d37429bc8c965aa":"0x104d0d00d2b7f60000","0xd52aecc6493938a28ca1c367b701c21598b6a02e":"0x3ba1910bf341b00000","0xd53c567f0c3ff2e08b7d59e2b5c73485437fc58d":"0x2086ac351052600000","0xd541ac187ad7e090522de6da3213e9a7f4439673":"0x6c6b935b8bbd400000","0xd54ba2d85681dc130e5b9b02c4e8c851391fd9b9":"0xd5967be4fc3f100000","0xd55508adbbbe9be81b80f97a6ea89add68da674f":"0x6c6b935b8bbd400000","0xd5550caaf743b037c56fd2558a1c8ed235130750":"0x121e4d49036255b0000","0xd5586da4e59583c8d86cccf71a86197f17996749":"0x6c6b935b8bbd400000","0xd55c1c8dfbe1e02cacbca60fdbdd405b09f0b75f":"0x6c6b935b8bbd400000","0xd561cbbc05515de73ab8cf9eae1357341e7dfdf4":"0x14542ba12a337c00000","0xd56a144d7af0ae8df649abae535a15983aa04d02":"0x10f0cf064dd59200000","0xd572309169b1402ec8131a17a6aac3222f89e6eb":"0x2ec1978c47766a00000","0xd5787668c2c5175b01a8ee1ac3ecc9c8b2aba95a":"0x6c6acc67d7b1d40000","0xd588c3a5df228185d98ee7e60748255cdea68b01":"0xd8d726b7177a800000","0xd58a52e078a805596b0d56ea4ae1335af01c66eb":"0xe7eeba3410b740000","0xd5903e9978ee20a38c3f498d63d57f31a39f6a06":"0x232b36ffc672ab00000","0xd59638d3c5faa7711bf085745f9d5bdc23d498d8":"0x6c6b935b8bbd400000","0xd59d92d2c8701980cc073c375d720af064743c0c":"0x405fdf7e5af85e00000","0xd5a7bec332adde18b3104b5792546aa59b879b52":"0x6c6b935b8bbd400000","0xd5b117ec116eb846418961eb7edb629cd0dd697f":"0xa2a15d09519be00000","0xd5b284040130abf7c1d163712371cc7e28ad66da":"0x6acb3df27e1f880000","0xd5b9d277d8aad20697a51f76e20978996bffe055":"0x7c3fe3c076ab50000","0xd5bd5e8455c130169357c471e3e681b7996a7276":"0x2d9e288f8abb360000","0xd5cba5b26bea5d73fabb1abafacdef85def368cc":"0xad78ebc5ac6200000","0xd5ce55d1b62f59433c2126bcec09bafc9dfaa514":"0xaadec983fcff40000","0xd5e55100fbd1956bbed2ca518d4b1fa376032b0b":"0x56bc75e2d63100000","0xd5e5c135d0c4c3303934711993d0d16ff9e7baa0":"0x6c6b935b8bbd400000","0xd5e656a1b916f9bf45afb07dd8afaf73b4c56f41":"0x542253a126ce40000","0xd5ea472cb9466018110af00c37495b5c2c713112":"0x10eee686c854f440000","0xd5f07552b5c693c20067b378b809cee853b8f136":"0x1b67c6df88c6fa0000","0xd5f7c41e07729dfa6dfc64c4423160a22c609fd3":"0x61093d7c2c6d380000","0xd604abce4330842e3d396ca73ddb5519ed3ec03f":"0x8e31fe1689d8a0000","0xd60651e393783423e5cc1bc5f889e44ef7ea243e":"0x159e76371129c80000","0xd609bf4f146eea6b0dc8e06ddcf4448a1fccc9fa":"0x6c6b935b8bbd400000","0xd609ec0be70d0ad26f6e67c9d4762b52ee51122c":"0x3635c9adc5dea00000","0xd60a52580728520df7546bc1e283291788dbae0c":"0x363489ef3ff0d70000","0xd60b247321a32a5affb96b1e279927cc584de943":"0x7ad020d6ddd7760000","0xd6110276cfe31e42825a577f6b435dbcc10cf764":"0x3635c9adc5dea00000","0xd612597bc31743c78633f633f239b1e9426bd925":"0x1017f7df96be17800000","0xd6234aaf45c6f22e66a225ffb93add629b4ef80f":"0x3635c9adc5dea00000","0xd62edb96fce2969aaf6c545e967cf1c0bc805205":"0x4a565536a5ada8000","0xd6300b3215b11de762ecde4b70b7927d01291582":"0x6c6b935b8bbd400000","0xd6395db5a4bb66e60f4cfbcdf0057bb4d97862e2":"0x3154c9729d05780000","0xd64a2d50f8858537188a24e0f50df1681ab07ed7":"0x8375a2abcca24400000","0xd6580ab5ed4c7dfa506fa6fe64ad5ce129707732":"0xd8d726b7177a800000","0xd6598b1386e93c5ccb9602ff4bbbecdbd3701dc4":"0xc25f4ecb041f00000","0xd6644d40e90bc97fe7dfe7cabd3269fd579ba4b3":"0x89e917994f71c0000","0xd6670c036df754be43dadd8f50feea289d061fd6":"0x144a2903448cef78000","0xd668523a90f0293d65c538d2dd6c57673710196e":"0x2242c30b853ee0000","0xd66ab79294074c8b627d842dab41e17dd70c5de5":"0x3635c9adc5dea00000","0xd66acc0d11b689cea6d9ea5ff4014c224a5dc7c4":"0xfc936392801c0000","0xd66ddf1159cf22fd8c7a4bc8d5807756d433c43e":"0x77432217e683600000","0xd687cec0059087fdc713d4d2d65e77daefedc15f":"0x340aad21b3b700000","0xd688e785c98f00f84b3aa1533355c7a258e87948":"0x1b1ae4d6e2ef500000","0xd6a22e598dabd38ea6e958bd79d48ddd9604f4df":"0x3635c9adc5dea00000","0xd6a7ac4de7b510f0e8de519d973fa4c01ba83400":"0x65ea3db75546600000","0xd6acc220ba2e51dfcf21d443361eea765cbd35d8":"0x1158e460913d00000","0xd6acffd0bfd99c382e7bd56ff0e6144a9e52b08e":"0x8ac7230489e800000","0xd6c0d0bc93a62e257174700e10f024c8b23f1f87":"0x6c6b935b8bbd400000","0xd6cf5c1bcf9da662bcea2255905099f9d6e84dcc":"0x1c49e420157d9c20000","0xd6d03572a45245dbd4368c4f82c95714bd2167e2":"0x3f00c3d66686fc0000","0xd6d6776958ee23143a81adadeb08382009e996c2":"0xa2a15d09519be00000","0xd6d9e30f0842012a7176a917d9d2048ca0738759":"0xd8d726b7177a800000","0xd6e09e98fe1300332104c1ca34fbfac554364ed9":"0x6c6b935b8bbd400000","0xd6e8e97ae9839b9ee507eedb28edfb7477031439":"0x6c6b935b8bbd400000","0xd6eea898d4ae2b718027a19ce9a5eb7300abe3ca":"0x17d4aceee63db8000","0xd6f1e55b1694089ebcb4fe7d7882aa66c8976176":"0x43c23bdbe929db30000","0xd6f4a7d04e8faf20e8c6eb859cf7f78dd23d7a15":"0x724ded1c748140000","0xd6fc0446c6a8d40ae3551db7e701d1fa876e4a49":"0x6c6b935b8bbd400000","0xd703c6a4f11d60194579d58c2766a7ef16c30a29":"0x6c6b935b8bbd400000","0xd7052519756af42590f15391b723a03fa564a951":"0xfa3631480d01fd8000","0xd70a612bd6dda9eab0dddcff4aaf4122d38feae4":"0x1d460162f516f00000","0xd70ad2c4e9eebfa637ef56bd486ad2a1e5bce093":"0xad78ebc5ac6200000","0xd7140c8e5a4307fab0cc27badd9295018bf87970":"0x5f1016b5076d00000","0xd7164aa261c09ad9b2b5068d453ed8eb6aa13083":"0xa2a15d09519be00000","0xd71e43a45177ad51cbe0f72184a5cb503917285a":"0xad78ebc5ac6200000","0xd71fb130f0150c565269e00efb43902b52a455a6":"0xad78ebc5ac6200000","0xd7225738dcf3578438f8e7c8b3837e42e04a262f":"0x182b8cebbb83aa0000","0xd7274d50804d9c77da93fa480156efe57ba501de":"0x692ae8897081d00000","0xd731bb6b5f3c37395e09ceaccd14a918a6060789":"0xd5967be4fc3f100000","0xd73ed2d985b5f21b55b274643bc6da031d8edd8d":"0xa6dd90cae5114480000","0xd744ac7e5310be696a63b003c40bd039370561c6":"0x5a87e7d7f5f6580000","0xd74a6e8d6aab34ce85976814c1327bd6ea0784d2":"0x152d02c7e14af6800000","0xd75a502a5b677287470f65c5aa51b87c10150572":"0x3130b4646385740000","0xd76dbaebc30d4ef67b03e6e6ecc6d84e004d502d":"0x6d76b9188e13850000","0xd771d9e0ca8a08a113775731434eb3270599c40d":"0x1158e460913d00000","0xd7788ef28658aa06cc53e1f3f0de58e5c371be78":"0x16a6502f15a1e540000","0xd77892e2273b235d7689e430e7aeed9cbce8a1f3":"0x6c6b935b8bbd400000","0xd781f7fc09184611568570b4986e2c72872b7ed0":"0x1159561065d5d0000","0xd785a8f18c38b9bc4ffb9b8fa8c7727bd642ee1c":"0x3635c9adc5dea00000","0xd78ecd25adc86bc2051d96f65364866b42a426b7":"0xd23058bf2f26120000","0xd78f84e38944a0e0255faece48ba4950d4bd39d2":"0x10f0cf064dd59200000","0xd79483f6a8444f2549d611afe02c432d15e11051":"0x1158e460913d00000","0xd79835e404fb86bf845fba090d6ba25e0c8866a6":"0x821ab0d44149800000","0xd79aff13ba2da75d46240cac0a2467c656949823":"0x5dc892aa1131c80000","0xd79db5ab43621a7a3da795e58929f3dd25af67d9":"0x6c6acc67d7b1d40000","0xd7a1431ee453d1e49a0550d1256879b4f5d10201":"0x5a87e7d7f5f6580000","0xd7ad09c6d32657685355b5c6ec8e9f57b4ebb982":"0x6acb3df27e1f880000","0xd7b740dff8c457668fdf74f6a266bfc1dcb723f9":"0x1158e460913d00000","0xd7c2803ed7b0e0837351411a8e6637d168bc5b05":"0x641daf5c91bd9358000","0xd7c6265dea11876c903b718e4cd8ab24fe265bde":"0x6c6b935b8bbd400000","0xd7ca7fdcfebe4588eff5421d1522b61328df7bf3":"0xd8e6001e6c302b0000","0xd7cdbd41fff20df727c70b6255c1ba7606055468":"0xad78ebc5ac6200000","0xd7d157e4c0a96437a6d285741dd23ec4361fa36b":"0x6c6b935b8bbd400000","0xd7d2c6fca8ad1f75395210b57de5dfd673933909":"0x126e72a69a50d00000","0xd7d3c75920590438b82c3e9515be2eb6ed7a8b1a":"0xcb49b44ba602d800000","0xd7d7f2caa462a41b3b30a34aeb3ba61010e2626f":"0x6c6b935b8bbd400000","0xd7e74afdbad55e96cebc5a374f2c8b768680f2b0":"0x55de6a779bbac0000","0xd7eb903162271c1afa35fe69e37322c8a4d29b11":"0x21e19e0c9bab2400000","0xd7ebddb9f93987779b680155375438db65afcb6a":"0x5741afeff944c0000","0xd7ef340e66b0d7afcce20a19cb7bfc81da33d94e":"0xa2a15d09519be00000","0xd7f370d4bed9d57c6f49c999de729ee569d3f4e4":"0xad78ebc5ac6200000","0xd7fa5ffb6048f96fb1aba09ef87b1c11dd7005e4":"0x3635c9adc5dea00000","0xd8069f84b521493f4715037f3226b25f33b60586":"0x678a932062e4180000","0xd815e1d9f4e2b5e57e34826b7cfd8881b8546890":"0xf015f25736420000","0xd81bd54ba2c44a6f6beb1561d68b80b5444e6dc6":"0x3f170d7ee43c430000","0xd82251456dc1380f8f5692f962828640ab9f2a03":"0x1088b53b2c202be0000","0xd82c6fedbdac98af2eed10b00f32b00056ca5a6d":"0xad78ebc5ac6200000","0xd82fd9fdf6996bedad2843159c06f37e0924337d":"0x5b8ccedc5aa7b00000","0xd83ad260e9a6f432fb6ea28743299b4a09ad658c":"0x6c6b935b8bbd400000","0xd843ee0863ce933e22f89c802d31287b9671e81c":"0xb98bc829a6f90000","0xd84b922f7841fc5774f00e14604ae0df42c8551e":"0xd96fce90cfabcc0000","0xd855b03ccb029a7747b1f07303e0a664793539c8":"0x6c6b935b8bbd400000","0xd85fdeaf2a61f95db902f9b5a53c9b8f9266c3ac":"0x6cf65a7e9047280000","0xd8715ef9176f850b2e30eb8e382707f777a6fbe9":"0x6c6b935b8bbd400000","0xd874b9dfae456a929ba3b1a27e572c9b2cecdfb3":"0x93739534d28680000","0xd8930a39c77357c30ad3a060f00b06046331fd62":"0x2c73c937742c500000","0xd89bc271b27ba3ab6962c94a559006ae38d5f56a":"0x6c6b935b8bbd400000","0xd8b77db9b81bbe90427b62f702b201ffc29ff618":"0x326d1e4396d45c0000","0xd8cd64e0284eec53aa4639afc4750810b97fab56":"0x1158e460913d00000","0xd8d64384249b776794063b569878d5e3b530a4b2":"0x9a043d0b2f9568000","0xd8d65420c18c2327cc5af97425f857e4a9fd51b3":"0x5f68e8131ecf800000","0xd8e5c9675ef4deed266b86956fc4590ea7d4a27d":"0x3635c9adc5dea00000","0xd8e8474292e7a051604ca164c0707783bb2885e8":"0x2d4ca05e2b43ca80000","0xd8eb78503ec31a54a90136781ae109004c743257":"0x3635c9adc5dea00000","0xd8eef4cf4beb01ee20d111748b61cb4d3f641a01":"0x9489237adb9a500000","0xd8f4bae6f84d910d6d7d5ac914b1e68372f94135":"0x56bc75e2d63100000","0xd8f62036f03b7635b858f1103f8a1d9019a892b6":"0x2b5e3af16b1880000","0xd8f665fd8cd5c2bcc6ddc0a8ae521e4dc6aa6060":"0x5c283d410394100000","0xd8f9240c55cff035523c6d5bd300d370dc8f0c95":"0xf732b66015a540000","0xd8f94579496725b5cb53d7985c989749aff849c0":"0x39992648a23c8a00000","0xd8fdf546674738c984d8fab857880b3e4280c09e":"0x1158e460913d00000","0xd8fe088fffce948f5137ee23b01d959e84ac4223":"0xc5b54a94fc0170000","0xd90f3009db437e4e11c780bec8896f738d65ef0d":"0xd8d726b7177a800000","0xd9103bb6b67a55a7fece2d1af62d457c2178946d":"0x3635c9adc5dea00000","0xd913f0771949753c4726acaa2bd3619c5c20ff77":"0xa2a15d09519be00000","0xd91d889164479ce436ece51763e22cda19b22d6b":"0xb66d88126800880000","0xd929c65d69d5bbaea59762662ef418bc21ad924a":"0x3635c9adc5dea00000","0xd930b27a78876485d0f48b70dd5336549679ca8f":"0x22b1c8c1227a00000","0xd931ac2668ba6a84481ab139735aec14b7bfbabf":"0x6c6b935b8bbd400000","0xd9383d4b6d17b3f9cd426e10fb944015c0d44bfb":"0x2b5e3af16b18800000","0xd942de4784f7a48716c0fd4b9d54a6e54c5f2f3e":"0x43c33c1937564800000","0xd944c8a69ff2ca1249690c1229c7192f36251062":"0x6acb3df27e1f880000","0xd94a57882a52739bbe2a0647c80c24f58a2b4f1c":"0x48b54e2adbe12b0000","0xd95342953c8a21e8b635eefac7819bea30f17047":"0x13f06c7ffef05d400000","0xd95c90ffbe5484864780b867494a83c89256d6e4":"0x58e7926ee858a00000","0xd96711540e2e998343d4f590b6fc8fac3bb8b31d":"0x5f5a4068b71cb00000","0xd96ac2507409c7a383ab2eee1822a5d738b36b56":"0xad78ebc5ac6200000","0xd96db33b7b5a950c3efa2dc31b10ba10a532ef87":"0x6c6b935b8bbd400000","0xd9775965b716476675a8d513eb14bbf7b07cd14a":"0x1132e6d2d23c5e40000","0xd97bc84abd47c05bbf457b2ef659d61ca5e5e48f":"0x69d17119dc5a80000","0xd97f4526dea9b163f8e8e33a6bcf92fb907de6ec":"0xf654aaf4db2f00000","0xd97fe6f53f2a58f6d76d752adf74a8a2c18e9074":"0x10cdf9b69a43570000","0xd99999a2490d9494a530cae4daf38554f4dd633e":"0x68155a43676e00000","0xd99df7421b9382e42c89b006c7f087702a0757c0":"0x1a055690d9db800000","0xd9b783d31d32adc50fa3eacaa15d92b568eaeb47":"0x733af90374c1b280000","0xd9d370fec63576ab15b318bf9e58364dc2a3552a":"0x56bc75e2d63100000","0xd9d42fd13ebd4bf69cac5e9c7e82483ab46dd7e9":"0x121ea68c114e5100000","0xd9e27eb07dfc71a706060c7f079238ca93e88539":"0x3635c9adc5dea00000","0xd9e3857efd1e202a441770a777a49dcc45e2e0d3":"0xc1daf81d8a3ce0000","0xd9ec2efe99ff5cf00d03a8317b92a24aef441f7e":"0x6c6b935b8bbd400000","0xd9ec8fe69b7716c0865af888a11b2b12f720ed33":"0xd8d726b7177a800000","0xd9f1b26408f0ec67ad1d0d6fe22e8515e1740624":"0x14d1120d7b1600000","0xd9f547f2c1de0ed98a53d161df57635dd21a00bd":"0x556f64c1fe7fa0000","0xd9ff115d01266c9f73b063c1c238ef3565e63b36":"0x24dce54d34a1a00000","0xda06044e293c652c467fe74146bf185b21338a1c":"0x3635c9adc5dea00000","0xda0b48e489d302b4b7bf204f957c1c9be383b0df":"0x6c6b935b8bbd400000","0xda0d4b7ef91fb55ad265f251142067f10376ced6":"0x43c33c1937564800000","0xda10978a39a46ff0bb848cf65dd9c77509a6d70e":"0x6c6b935b8bbd400000","0xda16dd5c3d1a2714358fe3752cae53dbab2be98c":"0x41bad155e6512200000","0xda214c023e2326ff696c00393168ce46ffac39ec":"0x3635c9adc5dea00000","0xda2a14f9724015d79014ed8e5909681d596148f1":"0x2a10f0f8a91ab8000","0xda2ad58e77deddede2187646c465945a8dc3f641":"0x23c757072b8dd00000","0xda3017c150dd0dce7fcf881b0a48d0d1c756c4c7":"0x56bf91b1a65eb0000","0xda34b2eae30bafe8daeccde819a794cd89e09549":"0x6c6b935b8bbd400000","0xda4a5f557f3bab390a92f49b9b900af30c46ae80":"0x21e19e0c9bab2400000","0xda505537537ffb33c415fec64e69bae090c5f60f":"0x8ac7230489e800000","0xda698d64c65c7f2b2c7253059cd3d181d899b6b7":"0x1004e2e45fb7ee0000","0xda7732f02f2e272eaf28df972ecc0ddeed9cf498":"0xb20bfbf6967890000","0xda7ad025ebde25d22243cb830ea1d3f64a566323":"0x1b1ae4d6e2ef500000","0xda855d53477f505ec4c8d5e8bb9180d38681119c":"0x12f939c99edab800000","0xda875e4e2f3cabe4f37e0eaed7d1f6dcc6ffef43":"0x6c6b935b8bbd400000","0xda8bbee182e455d2098acb338a6d45b4b17ed8b6":"0x6c6b935b8bbd400000","0xda982e9643ffece723075a40fe776e5ace04b29b":"0x8b8b6c9999bf20000","0xda9f55460946d7bfb570ddec757ca5773b58429a":"0x1b845d769eb4480000","0xdaa1bd7a9148fb865cd612dd35f162861d0f3bdc":"0xa638ab72d92c138000","0xdaa63cbda45dd487a3f1cd4a746a01bb5e060b90":"0x10416d9b02a89240000","0xdaa776a6754469d7b9267a89b86725e740da0fa0":"0x6acb3df27e1f880000","0xdaac91c1e859d5e57ed3084b50200f9766e2c52b":"0x15af1d78b58c400000","0xdaacdaf42226d15cb1cf98fa15048c7f4ceefe69":"0x1043561a8829300000","0xdab6bcdb83cf24a0ae1cb21b3b5b83c2f3824927":"0xa968163f0a57b400000","0xdabb0889fc042926b05ef57b2520910abc4b4149":"0x6c6b935b8bbd400000","0xdabc225042a6592cfa13ebe54efa41040878a5a2":"0xe11fad5d85ca30000","0xdac0c177f11c5c3e3e78f2efd663d13221488574":"0x3635c9adc5dea00000","0xdad136b88178b4837a6c780feba226b98569a94c":"0xad78ebc5ac6200000","0xdadbfafd8b62b92a24efd75256dd83abdbd7bbdb":"0x11164759ffb320000","0xdadc00ab7927603c2fcf31cee352f80e6c4d6351":"0x6c66e9a55378b80000","0xdae0d33eaa341569fa9ff5982684854a4a328a6e":"0x3635c9adc5dea00000","0xdae7201eab8c063302930d693929d07f95e71962":"0x91aec028b419810000","0xdaedd4ad107b271e89486cbf80ebd621dd974578":"0x6c6b935b8bbd400000","0xdb04fad9c49f9e880beb8fcf1d3a3890e4b3846f":"0x435ae6cc0c58e50000","0xdb0cc78f74d9827bdc8a6473276eb84fdc976212":"0x6c6b935b8bbd400000","0xdb1293a506e90cad2a59e1b8561f5e66961a6788":"0x6c6b935b8bbd400000","0xdb19a3982230368f0177219cb10cb259cdb2257c":"0x6c6b935b8bbd400000","0xdb23a6fef1af7b581e772cf91882deb2516fc0a7":"0xad78ebc5ac6200000","0xdb244f97d9c44b158a40ed9606d9f7bd38913331":"0x58788cb94b1d80000","0xdb288f80ffe232c2ba47cc94c763cf6fc9b82b0d":"0x49b9ca9a694340000","0xdb2a0c9ab64df58ddfb1dbacf8ba0d89c85b31b4":"0xd8d726b7177a800000","0xdb34745ede8576b499db01beb7c1ecda85cf4abe":"0x4563918244f400000","0xdb3f258ab2a3c2cf339c4499f75a4bd1d3472e9e":"0x5150ae84a8cdf00000","0xdb4bc83b0e6baadb1156c5cf06e0f721808c52c7":"0x2fb474098f67c00000","0xdb63122de7037da4971531fae9af85867886c692":"0xf0425b0641f340000","0xdb6c2a73dac7424ab0d031b66761122566c01043":"0xa2a15d09519be00000","0xdb6e560c9bc620d4bea3a94d47f7880bf47f2d5f":"0x4da0fdfcf05760000","0xdb6ff71b3db0928f839e05a7323bfb57d29c87aa":"0x3154c9729d05780000","0xdb73460b59d8e85045d5e752e62559875e42502e":"0x36330322d5238c0000","0xdb77b88dcb712fd17ee91a5b94748d720c90a994":"0x6c6b935b8bbd400000","0xdb7d4037081f6c65f9476b0687d97f1e044d0a1d":"0x23c757072b8dd00000","0xdb882eacedd0eff263511b312adbbc59c6b8b25b":"0x1ed4fde7a2236b00000","0xdb9371b30c4c844e59e03e924be606a938d1d310":"0x6c6b935b8bbd400000","0xdba4796d0ceb4d3a836b84c96f910afc103f5ba0":"0x908f493f737410000","0xdbadc61ed5f0460a7f18e51b2fb2614d9264a0e0":"0x22b1c8c1227a00000","0xdbb6ac484027041642bbfd8d80f9d0c1cf33c1eb":"0x6c6b935b8bbd400000","0xdbbcbb79bf479a42ad71dbcab77b5adfaa872c58":"0x5dc892aa1131c80000","0xdbc1ce0e49b1a705d22e2037aec878ee0d75c703":"0xd8d726b7177a80000","0xdbc1d0ee2bab531140de137722cd36bdb4e47194":"0xad78ebc5ac6200000","0xdbc59ed88973dead310884223af49763c05030f1":"0x1158e460913d00000","0xdbc66965e426ff1ac87ad6eb78c1d95271158f9f":"0xfc936392801c0000","0xdbcbcd7a57ea9db2349b878af34b1ad642a7f1d1":"0xad78ebc5ac6200000","0xdbd51cdf2c3bfacdff106221de2e19ad6d420414":"0x5f68e8131ecf800000","0xdbd71efa4b93c889e76593de609c3b04cbafbe08":"0x1158e460913d00000","0xdbf5f061a0f48e5e69618739a77d2ec19768d201":"0x83d6c7aab63600000","0xdbf8b13967f55125272de0562536c450ba5655a0":"0x6ef578f06e0ccb0000","0xdbfb1bb464b8a58e500d2ed8de972c45f5f1c0fb":"0x56bc75e2d631000000","0xdc067ed3e12d711ed475f5156ef7e71a80d934b9":"0x205b4dfa1ee74780000","0xdc087f9390fb9e976ac23ab689544a0942ec2021":"0x62a992e53a0af00000","0xdc1eb9b6e64351f56424509645f83e79eee76cf4":"0xd8d726b7177a800000","0xdc1f1979615f082140b8bb78c67b27a1942713b1":"0x340aad21b3b700000","0xdc23b260fcc26e7d10f4bd044af794579460d9da":"0x1b1b6bd7af64c70000","0xdc29119745d2337320da51e19100c948d980b915":"0x8ac7230489e800000","0xdc2d15a69f6bb33b246aef40450751c2f6756ad2":"0x6c341080bd1fb00000","0xdc3dae59ed0fe18b58511e6fe2fb69b219689423":"0x56bc75e2d63100000","0xdc3f0e7672f71fe7525ba30b9755183a20b9166a":"0x2089cf57b5b3e968000","0xdc4345d6812e870ae90c568c67d2c567cfb4f03c":"0x16b352da5e0ed300000","0xdc44275b1715baea1b0345735a29ac42c9f51b4f":"0x3f19beb8dd1ab00000","0xdc46c13325cd8edf0230d068896486f007bf4ef1":"0x487a9a304539440000","0xdc51b2dc9d247a1d0e5bc36ca3156f7af21ff9f6":"0x3635c9adc5dea00000","0xdc5305b4020a06b49d657c7ca34c35c91c5f2c56":"0x17df6c10dbeba970000","0xdc57345b38e0f067c9a31d9deac5275a10949321":"0xad78ebc5ac6200000","0xdc57477dafa42f705c7fe40eae9c81756e0225f1":"0x1b1b8128a7416e0000","0xdc5f5ad663a6f263327d64cac9cb133d2c960597":"0x6c6b935b8bbd400000","0xdc703a5f3794c84d6cb3544918cae14a35c3bd4f":"0x6449e84e47a8a80000","0xdc738fb217cead2f69594c08170de1af10c419e3":"0x152d02c7e14af6800000","0xdc76e85ba50b9b31ec1e2620bce6e7c8058c0eaf":"0x1158e460913d00000","0xdc83b6fd0d512131204707eaf72ea0c8c9bef976":"0x6c6b935b8bbd400000","0xdc8c2912f084a6d184aa73638513ccbc326e0102":"0x4633bc36cbc2dc0000","0xdc911cf7dc5dd0813656670528e9338e67034786":"0x6c6b935b8bbd400000","0xdcb03bfa6c1131234e56b7ea7c4f721487546b7a":"0x487a9a304539440000","0xdcb64df43758c7cf974fa660484fbb718f8c67c1":"0x43c33c1937564800000","0xdcc52d8f8d9fc742a8b82767f0555387c563efff":"0x1b1ae4d6e2ef500000","0xdccb370ed68aa922283043ef7cad1b9d403fc34a":"0xd8d726b7177a800000","0xdccca42045ec3e16508b603fd936e7fd7de5f36a":"0x11164759ffb320000","0xdcd10c55bb854f754434f1219c2c9a98ace79f03":"0xd8d8583fa2d52f0000","0xdcd5bca2005395b675fde5035659b26bfefc49ee":"0xaadec983fcff40000","0xdcdbbd4e2604e40e1710cc6730289dccfad3892d":"0xf95dd2ec27cce00000","0xdce30c31f3ca66721ecb213c809aab561d9b52e4":"0x6c6b935b8bbd400000","0xdcf33965531380163168fc11f67e89c6f1bc178a":"0x122776853406b08000","0xdcf6b657266e91a4dae6033ddac15332dd8d2b34":"0x5f68e8131ecf800000","0xdcf9719be87c6f46756db4891db9b611d2469c50":"0x3635c9adc5dea00000","0xdcfff3e8d23c2a34b56bd1b3bd45c79374432239":"0x10f0cf064dd59200000","0xdd04eee74e0bf30c3f8d6c2c7f52e0519210df93":"0x4563918244f400000","0xdd26b429fd43d84ec179825324bad5bfb916b360":"0x116bf95bc8432980000","0xdd2a233adede66fe1126d6c16823b62a021feddb":"0x6c6b935b8bbd400000","0xdd2bdfa917c1f310e6fa35aa8af16939c233cd7d":"0x15af1d78b58c400000","0xdd35cfdbcb993395537aecc9f59085a8d5ddb6f5":"0x3635c9adc5dea00000","0xdd47189a3e64397167f0620e484565b762bfbbf4":"0x6449e84e47a8a80000","0xdd4dd6d36033b0636fcc8d0938609f4dd64f4a86":"0x340aad21b3b700000","0xdd4f5fa2111db68f6bde3589b63029395b69a92d":"0x8963dd8c2c5e00000","0xdd63042f25ed32884ad26e3ad959eb94ea36bf67":"0x484d7fde7d593f00000","0xdd65f6e17163b5d203641f51cc7b24b00f02c8fb":"0xad78ebc5ac6200000","0xdd6c062193eac23d2fdbf997d5063a346bb3b470":"0x1158e460913d00000","0xdd7bcda65924aaa49b80984ae173750258b92847":"0x21e19e0c9bab2400000","0xdd7ff441ba6ffe3671f3c0dabbff1823a5043370":"0x6c6b935b8bbd400000","0xdd8254121a6e942fc90828f2431f511dad7f32e6":"0xa39b29e1f360e80000","0xdd8af9e7765223f4446f44d3d509819a3d3db411":"0x21e19e0c9bab2400000","0xdd95dbe30f1f1877c5dd7684aeef302ab6885192":"0x1c5d8d6eb3e32500000","0xdd967c4c5f8ae47e266fb416aad1964ee3e7e8c3":"0x1a420db02bd7d580000","0xdd9b485a3b1cd33a6a9c62f1e5bee92701856d25":"0xc3383ed031b7e8000","0xdda371e600d30688d4710e088e02fdf2b9524d5f":"0x177224aa844c7200000","0xdda4ed2a58a8dd20a73275347b580d71b95bf99a":"0x15a13cc201e4dc0000","0xdda4ff7de491c687df4574dd1b17ff8f246ba3d1":"0x42684a41abfd8400000","0xddab6b51a9030b40fb95cf0b748a059c2417bec7":"0x6c6b935b8bbd400000","0xddab75fb2ff9fecb88f89476688e2b00e367ebf9":"0x41bad155e6512200000","0xddabf13c3c8ea4e3d73d78ec717afafa430e5479":"0x8cf23f909c0fa000000","0xddac312a9655426a9c0c9efa3fd82559ef4505bf":"0x15be6174e1912e0000","0xddac6bf4bbdd7d597d9c686d0695593bedccc7fa":"0x2ee449550898e40000","0xddbd2b932c763ba5b1b7ae3b362eac3e8d40121a":"0x21e19e0c9bab2400000","0xddbddd1bbd38ffade0305d30f02028d92e9f3aa8":"0x6c6b935b8bbd400000","0xddbee6f094eae63420b003fb4757142aea6cd0fd":"0x6c6b935b8bbd400000","0xddd69c5b9bf5eb5a39cee7c3341a120d973fdb34":"0x6bc14b8f8e1b350000","0xdddd7b9e6eab409b92263ac272da801b664f8a57":"0x69e10de76676d0800000","0xdde670d01639667576a22dd05d3246d61f06e083":"0x1731790534df20000","0xdde77a4740ba08e7f73fbe3a1674912931742eeb":"0x434fe4d4382f1d48000","0xdde8f0c31b7415511dced1cd7d46323e4bd12232":"0x57473d05dabae80000","0xdde969aef34ea87ac299b7597e292b4a0155cc8a":"0x1032f2594a01738000","0xddf0cce1fe996d917635f00712f4052091dff9ea":"0x6c6b935b8bbd400000","0xddf3ad76353810be6a89d731b787f6f17188612b":"0x43c33c1937564800000","0xddf5810a0eb2fb2e32323bb2c99509ab320f24ac":"0x3ca5c66d9bc44300000","0xddf95c1e99ce2f9f5698057c19d5c94027ee4a6e":"0x14542ba12a337c00000","0xddfafdbc7c90f1320e54b98f374617fbd01d109f":"0xb98bc829a6f90000","0xddfcca13f934f0cfbe231da13039d70475e6a1d0":"0x3638221660a5aa8000","0xde027efbb38503226ed871099cb30bdb02af1335":"0x3635c9adc5dea00000","0xde06d5ea777a4eb1475e605dbcbf43444e8037ea":"0xa968163f0a57b400000","0xde07fb5b7a464e3ba7fbe09e9acb271af5338c58":"0x2b5e3af16b1880000","0xde1121829c9a08284087a43fbd2fc1142a3233b4":"0x3635c9adc5dea00000","0xde176b5284bcee3a838ba24f67fc7cbf67d78ef6":"0x209ce08c962b00000","0xde212293f8f1d231fa10e609470d512cb8ffc512":"0x6c6b935b8bbd400000","0xde30e49e5ab313214d2f01dcabce8940b81b1c76":"0xaadec983fcff40000","0xde33d708a3b89e909eaf653b30fdc3a5d5ccb4b3":"0x99c88229fd4c20000","0xde374299c1d07d79537385190f442ef9ca24061f":"0x73f75d1a085ba0000","0xde42fcd24ce4239383304367595f068f0c610740":"0x2722a70f1a9a00000","0xde50868eb7e3c71937ec73fa89dd8b9ee10d45aa":"0x3635c9adc5dea00000","0xde55de0458f850b37e4d78a641dd2eb2dd8f38ce":"0xd8d726b7177a800000","0xde5b005fe8daae8d1f05de3eda042066c6c4691c":"0x3ba1910bf341b00000","0xde612d0724e84ea4a7feaa3d2142bd5ee82d3201":"0x1158e460913d00000","0xde6d363106cc6238d2f092f0f0372136d1cd50c6":"0x121ea68c114e5100000","0xde7dee220f0457a7187d56c1c41f2eb00ac56021":"0x2225f39c85052a0000","0xde82cc8d4a1bb1d9434392965b3e80bad3c03d4f":"0x50186e75de97a60000","0xde97f4330700b48c496d437c91ca1de9c4b01ba4":"0x9dcc0515b56e0c0000","0xde9eff4c798811d968dccb460d9b069cf30278e0":"0x15af1d78b58c400000","0xdeb1bc34d86d4a4dde2580d8beaf074eb0e1a244":"0x55a6e79ccd1d300000","0xdeb2495d6aca7b2a6a2d138b6e1a42e2dc311fdd":"0x6c6b935b8bbd400000","0xdeb97254474c0d2f5a7970dcdb2f52fb1098b896":"0x3635c9adc5dea00000","0xdeb9a49a43873020f0759185e20bbb4cf381bb8f":"0xb78edb0bf2e5e0000","0xdebbdd831e0f20ae6e378252decdf92f7cf0c658":"0x6c6b935b8bbd400000","0xdec3eec2640a752c466e2b7e7ee685afe9ac41f4":"0x47c99753596b288000","0xdec82373ade8ebcf2acb6f8bc2414dd7abb70d77":"0xad78ebc5ac6200000","0xdec8a1a898f1b895d8301fe64ab3ad5de941f689":"0x2ab4f67e8a730f8000","0xdec99e972fca7177508c8e1a47ac22d768acab7c":"0x6c6b935b8bbd400000","0xded877378407b94e781c4ef4af7cfc5bc220b516":"0x143179d86911020000","0xdee942d5caf5fac11421d86b010b458e5c392990":"0xd8d726b7177a800000","0xdeee2689fa9006b59cf285237de53b3a7fd01438":"0x186579f29e20250000","0xdefddfd59b8d2c154eecf5c7c167bf0ba2905d3e":"0x512cb5e2647420000","0xdefe9141f4704599159d7b223de42bffd80496b3":"0x56bc75e2d63100000","0xdf098f5e4e3dffa51af237bda8652c4f73ed9ca6":"0x1b36a6444a3e180000","0xdf0d08617bd252a911df8bd41a39b83ddf809673":"0x21e19e0c9bab2400000","0xdf0ff1f3d27a8ec9fb8f6b0cb254a63bba8224a5":"0xecc5202945d0020000","0xdf1fa2e20e31985ebe2c0f0c93b54c0fb67a264b":"0xad78ebc5ac6200000","0xdf211cd21288d6c56fae66c3ff54625dd4b15427":"0x8786cd764e1f2c0000","0xdf236bf6abf4f3293795bf0c28718f93e3b1b36b":"0x487a9a304539440000","0xdf31025f5649d2c6eea41ed3bdd3471a790f759a":"0x1158e460913d00000","0xdf37c22e603aedb60a627253c47d8ba866f6d972":"0x5150ae84a8cdf000000","0xdf3b72c5bd71d4814e88a62321a93d4011e3578b":"0xd8d726b7177a800000","0xdf3f57b8ee6434d047223def74b20f63f9e4f955":"0xd9462c6cb4b5a0000","0xdf44c47fc303ac76e74f97194cca67b5bb3c023f":"0x2009c5c8bf6fdc0000","0xdf47a61b72535193c561cccc75c3f3ce0804a20e":"0x15935c0b4e3d780000","0xdf47a8ef95f2f49f8e6f58184154145d11f72797":"0x678a932062e4180000","0xdf53003346d65c5e7a646bc034f2b7d32fcbe56a":"0x6c6b935b8bbd400000","0xdf57353aaff2aadb0a04f9014e8da7884e86589c":"0x84886a66e4fb00000","0xdf60f18c812a11ed4e2776e7a80ecf5e5305b3d6":"0x30ca024f987b900000","0xdf6485c4297ac152b289b19dde32c77ec417f47d":"0x3635c9adc5dea00000","0xdf660a91dab9f730f6190d50c8390561500756ca":"0x6c6b935b8bbd400000","0xdf6ed6006a6abe886ed33d95a4de28fc12183927":"0x3154c9729d05780000","0xdf8510793eee811c2dab1c93c6f4473f30fbef5b":"0x3635c9adc5dea00000","0xdf8d48b1eb07b3c217790e6c2df04dc319e7e848":"0x1b1ae4d6e2ef500000","0xdfa6b8b8ad3184e357da282951d79161cfb089bc":"0x15af1d78b58c400000","0xdfaf31e622c03d9e18a0ddb8be60fbe3e661be0a":"0x21e171a3ec9f72c0000","0xdfb1626ef48a1d7d7552a5e0298f1fc23a3b482d":"0x5ce895dd949efa0000","0xdfb4d4ade52fcc818acc7a2c6bb2b00224658f78":"0x1a420db02bd7d580000","0xdfbd4232c17c407a980db87ffbcda03630e5c459":"0x1dfc7f924923530000","0xdfcbdf09454e1a5e4a40d3eef7c5cf1cd3de9486":"0xd8d726b7177a800000","0xdfdbcec1014b96da2158ca513e9c8d3b9af1c3d0":"0x6c6b935b8bbd400000","0xdfded2574b27d1613a7d98b715159b0d00baab28":"0x43c33c1937564800000","0xdfdf43393c649caebe1bb18059decb39f09fb4e8":"0x15af1d78b58c400000","0xdfe3c52a92c30396a4e33a50170dc900fcf8c9cf":"0x2b5e3af16b1880000","0xdfe549fe8430e552c6d07cc3b92ccd43b12fb50f":"0x48875eaf6562a0000","0xdfe929a61c1b38eddbe82c25c2d6753cb1e12d68":"0x15d1cf4176aeba0000","0xdff1b220de3d8e9ca4c1b5be34a799bcded4f61c":"0x14e4e353ea39420000","0xdff4007931786593b229efe5959f3a4e219e51af":"0x10afc1ade3b4ed40000","0xdffcea5421ec15900c6ecfc777184e140e209e24":"0x115473824344e0000","0xe001aba77c02e172086c1950fffbcaa30b83488f":"0x6acb3df27e1f880000","0xe00484788db50fc6a48e379d123e508b0f6e5ab1":"0x3635c9adc5dea00000","0xe0060462c47ff9679baef07159cae08c29f274a9":"0x6c6b935b8bbd400000","0xe00d153b10369143f97f54b8d4ca229eb3e8f324":"0x83d6c7aab63600000","0xe012db453827a58e16c1365608d36ed658720507":"0x6c6b935b8bbd400000","0xe01547ba42fcafaf93938becf7699f74290af74f":"0x6c6b935b8bbd400000","0xe016dc138e25815b90be3fe9eee8ffb2e105624f":"0x1b1ae4d6e2ef500000","0xe01859f242f1a0ec602fa8a3b0b57640ec89075e":"0x1e162c177be5cc0000","0xe020e86362b487752836a6de0bc02cd8d89a8b6a":"0x14542ba12a337c00000","0xe023f09b2887612c7c9cf1988e3a3a602b3394c9":"0x6c6b935b8bbd400000","0xe0272213e8d2fd3e96bd6217b24b4ba01b617079":"0x1158e460913d00000","0xe02b74a47628be315b1f76b315054ad44ae9716f":"0xd8d726b7177a800000","0xe03220c697bcd28f26ef0b74404a8beb06b2ba7b":"0x1b1ae4d6e2ef5000000","0xe0352fdf819ba265f14c06a6315c4ac1fe131b2e":"0x3635c9adc5dea00000","0xe0388aeddd3fe2ad56f85748e80e710a34b7c92e":"0x1b1ae4d6e2ef500000","0xe03c00d00388ecbf4f263d0ac778bb41a57a40d9":"0x3636c9796436740000","0xe04920dc6ecc1d6ecc084f88aa0af5db97bf893a":"0x9ddc1e3b901180000","0xe04972a83ca4112bc871c72d4ae1616c2f0728db":"0xe81c77f29a32f0000","0xe04ff5e5a7e2af995d8857ce0290b53a2b0eda5d":"0x3635c9adc5dea00000","0xe05029aceb0778675bef1741ab2cd2931ef7c84b":"0x10f0dbae61009528000","0xe056bf3ff41c26256fef51716612b9d39ade999c":"0x56be757a12e0a8000","0xe061a4f2fc77b296d19ada238e49a5cb8ecbfa70":"0xd8d726b7177a800000","0xe0663e8cd66792a641f56e5003660147880f018e":"0x6c6b935b8bbd400000","0xe0668fa82c14d6e8d93a53113ef2862fa81581bc":"0x2f2f39fc6c54000000","0xe069c0173352b10bf6834719db5bed01adf97bbc":"0x10634f8e5323b0000","0xe06c29a81517e0d487b67fb0b6aabc4f57368388":"0x15be6174e1912e0000","0xe06cb6294704eea7437c2fc3d30773b7bf38889a":"0x116dc3a8994b30000","0xe07137ae0d116d033533c4eab496f8a9fb09569c":"0x4be4e7267b6ae00000","0xe076db30ab486f79194ebbc45d8fab9a9242f654":"0x106607e3494baa00000","0xe07ebbc7f4da416e42c8d4f842aba16233c12580":"0x6c6b935b8bbd400000","0xe081ca1f4882db6043d5a9190703fde0ab3bf56d":"0x15af1d78b58c400000","0xe083d34863e0e17f926b7928edff317e998e9c4b":"0x15af1d78b58c400000","0xe08b9aba6bd9d28bc2056779d2fbf0f2855a3d9d":"0x6c6b935b8bbd400000","0xe08bc29c2b48b169ff2bdc16714c586e6cb85ccf":"0x1158e460913d00000","0xe08c60313106e3f9334fe6f7e7624d211130c077":"0x22b1c8c1227a00000","0xe09c68e61998d9c81b14e4ee802ba7adf6d74cdb":"0xd8d726b7177a800000","0xe09fea755aee1a44c0a89f03b5deb762ba33006f":"0x3ba289bc944ff70000","0xe0a254ac09b9725bebc8e460431dd0732ebcabbf":"0x14542ba12a337c00000","0xe0aa69365555b73f282333d1e30c1bbd072854e8":"0x17b7883c06916600000","0xe0bad98eee9698dbf6d76085b7923de5754e906d":"0x90d972f32323c0000","0xe0c4ab9072b4e6e3654a49f8a8db026a4b3386a9":"0x6c6b935b8bbd400000","0xe0ce80a461b648a501fd0b824690c8868b0e4de8":"0x1b1ae4d6e2ef500000","0xe0cf698a053327ebd16b7d7700092fe2e8542446":"0x52a34cbb61f578000","0xe0d231e144ec9107386c7c9b02f1702ceaa4f700":"0x10f0dbae61009528000","0xe0d76b7166b1f3a12b4091ee2b29de8caa7d07db":"0x6c6b935b8bbd400000","0xe0e0b2e29dde73af75987ee4446c829a189c95bc":"0x813ca56906d340000","0xe0e978753d982f7f9d1d238a18bd4889aefe451b":"0x20dd68aaf3289100000","0xe0f372347c96b55f7d4306034beb83266fd90966":"0x15af1d78b58c400000","0xe0f903c1e48ac421ab48528f3d4a2648080fe043":"0x3708baed3d68900000","0xe0ff0bd9154439c4a5b7233e291d7d868af53f33":"0x1579216a51bbfb0000","0xe10ac19c546fc2547c61c139f5d1f45a6666d5b0":"0x102da6fd0f73a3c0000","0xe10c540088113fa6ec00b4b2c8824f8796e96ec4":"0x320f4509ab1ec7c00000","0xe1173a247d29d8238df0922f4df25a05f2af77c3":"0x878c95d560f30478000","0xe1203eb3a723e99c2220117ca6afeb66fa424f61":"0x200ef929e3256fe0000","0xe131f87efc5ef07e43f0f2f4a747b551d750d9e6":"0x43c25e0dcc1bd1c0000","0xe1334e998379dfe983177062791b90f80ee22d8d":"0x1b1ae4d6e2ef500000","0xe13540ecee11b212e8b775dc8e71f374aae9b3f8":"0x6c6b935b8bbd400000","0xe13b3d2bbfdcbc8772a23315724c1425167c5688":"0x37f379141ed04b8000","0xe1443dbd95cc41237f613a48456988a04f683282":"0xd8d8583fa2d52f0000","0xe14617f6022501e97e7b3e2d8836aa61f0ff2dba":"0xad78ebc5ac6200000","0xe149b5726caf6d5eb5bf2acc41d4e2dc328de182":"0x692ae8897081d00000","0xe154daeadb545838cbc6aa0c55751902f528682a":"0x10afc1ade3b4ed40000","0xe16ce35961cd74bd590d04c4ad4a1989e05691c6":"0x7ea28327577080000","0xe172dfc8f80cd1f8cd8539dc26082014f5a8e3e8":"0xa2a15d09519be00000","0xe177e0c201d335ba3956929c571588b51c5223ae":"0x6c6b935b8bbd400000","0xe17812f66c5e65941e186c46922b6e7b2f0eeb46":"0x62a992e53a0af00000","0xe180de9e86f57bafacd7904f9826b6b4b26337a3":"0x2d041d705a2c600000","0xe192489b85a982c1883246d915b229cb13207f38":"0x10f0cf064dd59200000","0xe1953c6e975814c571311c34c0f6a99cdf48ab82":"0x2b5e3af16b1880000","0xe1ae029b17e373cde3de5a9152201a14cac4e119":"0x56b55ae58ca400000","0xe1b2aca154b8e0766c4eba30bc10c7f35036f368":"0x115473824344e0000","0xe1b39b88d9900dbc4a6cdc481e1060080a8aec3c":"0x6c6b935b8bbd400000","0xe1b63201fae1f129f95c7a116bd9dde5159c6cda":"0x4d60573a2f0c9ef0000","0xe1bfaa5a45c504428923c4a61192a55b1400b45d":"0x90f534608a72880000","0xe1c607c0a8a060da8f02a8eb38a013ea8cda5b8c":"0x2ba39e82ed5d740000","0xe1cb83ec5eb6f1eeb85e99b2fc63812fde957184":"0x43c33c1937564800000","0xe1d91b0954cede221d6f24c7985fc59965fb98b8":"0x6c6b935b8bbd400000","0xe1dfb5cc890ee8b2877e885d267c256187d019e6":"0x56bc75e2d63100000","0xe1e8c50b80a352b240ce7342bbfdf5690cc8cb14":"0x155bd9307f9fe80000","0xe1f63ebbc62c7b7444040eb99623964f7667b376":"0x1158e460913d00000","0xe206fb7324e9deb79e19903496d6961b9be56603":"0x56bc75e2d63100000","0xe207578e1f4ddb8ff6d5867b39582d71b9812ac5":"0xd255d112e103a00000","0xe208812a684098f3da4efe6aba256256adfe3fe6":"0x6c6b935b8bbd400000","0xe20954d0f4108c82d4dcb2148d26bbd924f6dd24":"0x21e19e0c9bab2400000","0xe20bb9f3966419e14bbbaaaa6789e92496cfa479":"0xbbd825030752760000","0xe20d1bcb71286dc7128a9fc7c6ed7f733892eef5":"0x3664f8e7c24af40000","0xe2191215983f33fd33e22cd4a2490054da53fddc":"0xdb44e049bb2c0000","0xe2198c8ca1b399f7521561fd5384a7132fba486b":"0x3708baed3d68900000","0xe21c778ef2a0d7f751ea8c074d1f812243863e4e":"0x11fc70e2c8c8ae18000","0xe229e746a83f2ce253b0b03eb1472411b57e5700":"0x1369fb96128ac480000","0xe22b20c77894463baf774cc256d5bddbbf7ddd09":"0x3635c9adc5dea00000","0xe230fe1bff03186d0219f15d4c481b7d59be286a":"0x1fd741e8088970000","0xe237baa4dbc9926e32a3d85d1264402d54db012f":"0x6c6b935b8bbd400000","0xe24109be2f513d87498e926a286499754f9ed49e":"0x300ea8ad1f27ca0000","0xe246683cc99db7c4a52bcbacaab0b32f6bfc93d7":"0x6c6b935b8bbd400000","0xe25a167b031e84616d0f013f31bda95dcc6350b9":"0x23c757072b8dd000000","0xe25b9f76b8ad023f057eb11ad94257a0862e4e8c":"0x6c6b935b8bbd400000","0xe26657f0ed201ea2392c9222b80a7003608ddf30":"0x22b1c8c1227a00000","0xe26bf322774e18288769d67e3107deb7447707b8":"0x6c6b935b8bbd400000","0xe2728a3e8c2aaac983d05dc6877374a8f446eee9":"0xab640391201300000","0xe28b062259e96eeb3c8d4104943f9eb325893cf5":"0x487a9a304539440000","0xe28dbc8efd5e416a762ec0e018864bb9aa83287b":"0x531f200ab3e030a8000","0xe2904b1aefa056398b6234cb35811288d736db67":"0x22b1c8c1227a00000","0xe29d8ae452dcf3b6ac645e630409385551faae0a":"0x45a0da4adf5420000","0xe2bbf84641e3541f6c33e6ed683a635a70bde2ec":"0x1b413cfcbf59b78000","0xe2cf360aa2329eb79d2bf7ca04a27a17c532e4d8":"0x58788cb94b1d80000","0xe2df23f6ea04becf4ab701748dc0963184555cdb":"0x6c6b935b8bbd400000","0xe2e15c60dd381e3a4be25071ab249a4c5c5264da":"0x7f6bc49b81b5370000","0xe2e26e4e1dcf30d048cc6ecf9d51ec1205a4e926":"0xd8d726b7177a800000","0xe2ee691f237ee6529b6557f2fcdd3dcf0c59ec63":"0x127729c14687c200000","0xe2efa5fca79538ce6068bf31d2c516d4d53c08e5":"0x71cc408df63400000","0xe2efd0a9bc407ece03d67e8ec8e9d283f48d2a49":"0x299b33bf9c584e00000","0xe2f40d358f5e3fe7463ec70480bd2ed398a7063b":"0x1158e460913d00000","0xe2f9383d5810ea7b43182b8704b62b27f5925d39":"0x15af1d78b58c400000","0xe2ff9ee4b6ecc14141cc74ca52a9e7a2ee14d908":"0x4be4e7267b6ae00000","0xe30212b2011bb56bdbf1bc35690f3a4e0fd905ea":"0x1b2df9d219f57980000","0xe303167f3d4960fe881b32800a2b4aeff1b088d4":"0x6c6b935b8bbd400000","0xe304a32f05a83762744a9542976ff9b723fa31ea":"0x5572f240a346200000","0xe308435204793764f5fcbe65eb510f5a744a655a":"0xad78ebc5ac6200000","0xe309974ce39d60aadf2e69673251bf0e04760a10":"0xdc55fdb17647b0000","0xe31b4eef184c24ab098e36c802714bd4743dd0d4":"0xad78ebc5ac6200000","0xe321bb4a946adafdade4571fb15c0043d39ee35f":"0x556475382b4c9e0000","0xe3263ce8af6db3e467584502ed7109125eae22a5":"0x6c6b935b8bbd400000","0xe32b1c4725a1875449e98f970eb3e54062d15800":"0xad78ebc5ac6200000","0xe32f95766d57b5cd4b173289d6876f9e64558194":"0x56bc75e2d63100000","0xe33840d8bca7da98a6f3d096d83de78b70b71ef8":"0x6c6b935b8bbd400000","0xe338e859fe2e8c15554848b75caecda877a0e832":"0x61acff81a78ad40000","0xe33d980220fab259af6a1f4b38cf0ef3c6e2ea1a":"0x6c6b935b8bbd400000","0xe33df4ce80ccb62a76b12bcdfcecc46289973aa9":"0x14542ba12a337c00000","0xe33ff987541dde5cdee0a8a96dcc3f33c3f24cc2":"0x2a5a058fc295ed000000","0xe3410bb7557cf91d79fa69d0dfea0aa075402651":"0x6c6b935b8bbd400000","0xe341642d40d2afce2e9107c67079ac7a2660086c":"0x15af1d78b58c400000","0xe35453eef2cc3c7a044d0ac134ba615908fa82ee":"0x7ff1ccb7561df0000","0xe36a8ea87f1e99e8a2dc1b2608d166667c9dfa01":"0x56bc75e2d63100000","0xe3712701619ca7623c55db3a0ad30e867db0168b":"0x1158e460913d00000","0xe37f5fdc6ec97d2f866a1cfd0d3a4da4387b22b5":"0x21e19e0c9bab2400000","0xe3878f91ca86053fced5444686a330e09cc388fb":"0xa844a7424d9c80000","0xe38b91b35190b6d9deed021c30af094b953fdcaa":"0x1ceaf795b6b860000","0xe38ef28a5ed984a7db24a1ae782dfb87f397dfc6":"0x7c0860e5a80dc0000","0xe3925509c8d0b2a6738c5f6a72f35314491248ce":"0x36e9a8669a44768000","0xe3933d61b77dcdc716407f8250bc91e4ffaeb09d":"0x1256986c95891c200000","0xe3951de5aefaf0458768d774c254f7157735e505":"0x56c95de8e8ca1d0000","0xe399c81a1d701b44f0b66f3399e66b275aaaf8c1":"0x3635c9adc5dea00000","0xe39b11a8ab1ff5e22e5ae6517214f73c5b9b55dc":"0x6c6b935b8bbd400000","0xe39e46e15d22ce56e0c32f1877b7d1a264cf94f3":"0x43c33c1937564800000","0xe3a4621b66004588e31206f718cb00a319889cf0":"0x6c6b935b8bbd400000","0xe3a4f83c39f85af9c8b1b312bfe5fc3423afa634":"0x18d993f34aef10000","0xe3a89a1927cc4e2d43fbcda1e414d324a7d9e057":"0xb23e2a936dec60000","0xe3ab3ca9b870e3f548517306bba4de2591afafc2":"0x410e34aecc8cd30000","0xe3b3d2c9bf570be6a2f72adca1862c310936a43c":"0x56d2aa3a5c09a0000","0xe3c0c128327a9ad80148139e269773428e638cb0":"0x6c6b935b8bbd400000","0xe3c812737ac606baf7522ad817428a36050e7a34":"0x692ae8897081d00000","0xe3cffe239c64e7e20388e622117391301b298696":"0x1b1ae4d6e2ef500000","0xe3d3eaa299887865569e88be219be507189be1c9":"0x18ba6fa92e93160000","0xe3d8bf4efe84b1616d1b89e427ddc6c8830685ae":"0x6c6b935b8bbd400000","0xe3d915eda3b825d6ee4af9328d32ac18ada35497":"0x1b1ae4d6e2ef500000","0xe3da4f3240844c9b6323b4996921207122454399":"0x27190a952df4be58000","0xe3eb2c0a132a524f72ccc0d60fee8b41685d39e2":"0x6acb3df27e1f880000","0xe3ec18a74ed43855409a26ade7830de8e42685ef":"0x11164759ffb320000","0xe3ece1f632711d13bfffa1f8f6840871ee58fb27":"0xd8d726b7177a800000","0xe3f80b40fb83fb97bb0d5230af4f6ed59b1c7cc8":"0x487a9a304539440000","0xe3ffb02cb7d9ea5243701689afd5d417d7ed2ece":"0x43a77aabd00780000","0xe400d651bb3f2d23d5f849e6f92d9c5795c43a8a":"0x90f534608a72880000","0xe406f5dd72cab66d8a6ecbd6bfb494a7b6b09afe":"0x56bc75e2d63100000","0xe408aa99835307eea4a6c5eb801fe694117f707d":"0x1b1ae4d6e2ef500000","0xe408fceaa1b98f3c640f48fcba39f056066d6308":"0x21e19e0c9bab2400000","0xe40a7c82e157540a0b00901dbb86c716e1a062da":"0x2b31d2425f6740000","0xe41aea250b877d423a63ba2bce2f3a61c0248d56":"0xe18398e7601900000","0xe430c0024fdbf73a82e21fccf8cbd09138421c21":"0xd8d726b7177a800000","0xe4324912d64ea3aef76b3c2ff9df82c7e13ae991":"0x6c6b935b8bbd400000","0xe4368bc1420b35efda95fafbc73090521916aa34":"0xd8d726b7177a800000","0xe437acbe0f6227b0e36f36e4bcf7cf613335fb68":"0xad78ebc5ac6200000","0xe44b7264dd836bee8e87970340ed2b9aed8ed0a5":"0x138e7faa01a803a0000","0xe44ea51063405154aae736be2bf1ee3b9be639ae":"0xd8d726b7177a800000","0xe4625501f52b7af52b19ed612e9d54fdd006b492":"0xb5a905a56ddd00000","0xe4715956f52f15306ee9506bf82bccc406b3895e":"0xee79d4f48c5000000","0xe47fbaed99fc209962604ebd20e240f74f4591f1":"0x6c6b935b8bbd400000","0xe482d255ede56b04c3e8df151f56e9ca62aaa8c2":"0x1b1ae4d6e2ef500000","0xe48e65125421880d42bdf1018ab9778d96928f3f":"0xe3aeb5737240a00000","0xe492818aa684e5a676561b725d42f3cc56ae5198":"0x2b5e3af16b18800000","0xe49936a92a8ccf710eaac342bc454b9b14ebecb1":"0x6c6b935b8bbd400000","0xe49af4f34adaa2330b0e49dc74ec18ab2f92f827":"0x6c6b935b8bbd400000","0xe49ba0cd96816c4607773cf8a5970bb5bc16a1e6":"0x5a87e7d7f5f6580000","0xe4a47e3933246c3fd62979a1ea19ffdf8c72ef37":"0x809b383ea7d7e8000","0xe4b6ae22c7735f5b89f34dd77ad0975f0acc9181":"0x3635c9adc5dea00000","0xe4ca0a5238564dfc91e8bf22bade2901619a1cd4":"0x3635c9adc5dea00000","0xe4cafb727fb5c6b70bb27533b8a9ccc9ef6888e1":"0x10497bf4af4caf8000","0xe4dc22ed595bf0a337c01e03cc6be744255fc9e8":"0xa5aa85009e39c0000","0xe4fb26d1ca1eecba3d8298d9d148119ac2bbf580":"0x15af1d78b58c400000","0xe4fc13cfcbac1b17ce7783acd423a845943f6b3a":"0x1158e460913d00000","0xe50b464ac9de35a5618b7cbf254674182b81b97e":"0xde42ee1544dd900000","0xe5102c3b711b810344197419b1cd8a7059f13e32":"0x1043528d0984698000","0xe510d6797fba3d6693835a844ea2ad540691971b":"0x3ae39d47383e8740000","0xe51421f8ee2210c71ed870fe618276c8954afbe9":"0x487a9a304539440000","0xe51eb87e7fb7311f5228c479b48ec9878831ac4c":"0x6c6b935b8bbd400000","0xe5215631b14248d45a255296bed1fbfa0330ff35":"0x4703e6eb5291b80000","0xe528a0e5a267d667e9393a6584e19b34dc9be973":"0x12f939c99edab800000","0xe53425d8df1f11c341ff58ae5f1438abf1ca53cf":"0x1174a5cdf88bc80000","0xe53c68796212033e4e6f9cff56e19c461eb454f9":"0x3635c9adc5dea00000","0xe54102534de8f23effb093b31242ad3b233facfd":"0xd8d726b7177a800000","0xe545ee84ea48e564161e9482d59bcf406a602ca2":"0x6449e84e47a8a80000","0xe5481a7fed42b901bbed20789bd4ade50d5f83b9":"0x6c6b935b8bbd400000","0xe559b5fd337b9c5572a9bf9e0f2521f7d446dbe4":"0xad78ebc5ac6200000","0xe55c80520a1b0f755b9a2cd3ce214f7625653e8a":"0x6c6b935b8bbd400000","0xe56d431324c92911a1749df292709c14b77a65cd":"0x1bc85dc2a89bb200000","0xe57d2995b0ebdf3f3ca6c015eb04260dbb98b7c6":"0x6c6b935b8bbd400000","0xe587b16abc8a74081e3613e14342c03375bf0847":"0x6c6b935b8bbd400000","0xe589fa76984db5ec4004b46ee8a59492c30744ce":"0x97c9ce4cf6d5c00000","0xe58dd23238ee6ea7c2138d385df500c325f376be":"0x62a992e53a0af00000","0xe5953fea497104ef9ad2d4e5841c271f073519c2":"0x2629f66e0c53000000","0xe5968797468ef767101b761d431fce14abffdbb4":"0x1b3d969fa411ca00000","0xe597f083a469c4591c3d2b1d2c772787befe27b2":"0xf2dc7d47f15600000","0xe59b3bd300893f97233ef947c46f7217e392f7e9":"0x3635c9adc5dea00000","0xe5a365343cc4eb1e770368e1f1144a77b832d7e0":"0x1158e460913d00000","0xe5a3d7eb13b15c100177236d1beb30d17ee15420":"0x6c6b935b8bbd400000","0xe5aa0b833bb916dc19a8dd683f0ede241d988eba":"0xa2a15d09519be00000","0xe5b7af146986c0ff8f85d22e6cc334077d84e824":"0x6c6b935b8bbd400000","0xe5b826196c0e1bc1119b021cf6d259a610c99670":"0xad78ebc5ac6200000","0xe5b96fc9ac03d448c1613ac91d15978145dbdfd1":"0xad78ebc5ac6200000","0xe5b980d28eece2c06fca6c9473068b37d4a6d6e9":"0x25afd68cac2b900000","0xe5bab4f0afd8a9d1a381b45761aa18f3d3cce105":"0x51bfd7c13878d10000","0xe5bcc88c3b256f6ed5fe550e4a18198b943356ad":"0x6c6b935b8bbd400000","0xe5bdf34f4ccc483e4ca530cc7cf2bb18febe92b3":"0x6d835a10bbcd20000","0xe5dc9349cb52e161196122cf87a38936e2c57f34":"0x6c6b935b8bbd400000","0xe5e33800a1b2e96bde1031630a959aa007f26e51":"0x487a9a304539440000","0xe5e37e19408f2cfbec83349dd48153a4a795a08f":"0xe3aeb5737240a00000","0xe5edc73e626f5d3441a45539b5f7a398c593edf6":"0x2ee449550898e40000","0xe5edf8123f2403ce1a0299becf7aac744d075f23":"0xada55474b81340000","0xe5f8ef6d970636b0dcaa4f200ffdc9e75af1741c":"0x6c6b935b8bbd400000","0xe5fb31a5caee6a96de393bdbf89fbe65fe125bb3":"0x3635c9adc5dea00000","0xe5fbe34984b637196f331c679d0c0c47d83410e1":"0x6c6c44fe47ec050000","0xe60955dc0bc156f6c41849f6bd776ba44b0ef0a1":"0x10431627a0933b0000","0xe60a55f2df996dc3aedb696c08dde039b2641de8":"0x6c6b935b8bbd400000","0xe6115b13f9795f7e956502d5074567dab945ce6b":"0x152d02c7e14af6800000","0xe61f280915c774a31d223cf80c069266e5adf19b":"0x2fb474098f67c00000","0xe62f98650712eb158753d82972b8e99ca3f61877":"0x6c6b935b8bbd400000","0xe62f9d7c64e8e2635aeb883dd73ba684ee7c1079":"0x1b1ae4d6e2ef5000000","0xe63e787414b9048478a50733359ecdd7e3647aa6":"0x55a6e79ccd1d300000","0xe646665872e40b0d7aa2ff82729caaba5bc3e89e":"0x15af1d78b58c400000","0xe64ef012658d54f8e8609c4e9023c09fe865c83b":"0x18493fba64ef00000","0xe64f6e1d6401b56c076b64a1b0867d0b2f310d4e":"0x2cbad71c53ae50000","0xe667f652f957c28c0e66d0b63417c80c8c9db878":"0x209d922f5259c50000","0xe677c31fd9cb720075dca49f1abccd59ec33f734":"0x1a6d6beb1d42ee00000","0xe67c2c1665c88338688187629f49e99b60b2d3ba":"0xad78ebc5ac6200000","0xe69a6cdb3a8a7db8e1f30c8b84cd73bae02bc0f8":"0x394fdc2e452f6718000","0xe69d1c378b771e0feff051db69d966ac6779f4ed":"0x1dfa6aaa1497040000","0xe69fcc26ed225f7b2e379834c524d70c1735e5bc":"0x6c6b935b8bbd400000","0xe6a3010f0201bc94ff67a2f699dfc206f9e76742":"0x2fa7cbf66464980000","0xe6a6f6dd6f70a456f4ec15ef7ad5e5dbb68bd7dc":"0xad78ebc5ac6200000","0xe6b20f980ad853ad04cbfc887ce6601c6be0b24c":"0xd8d726b7177a800000","0xe6b3ac3f5d4da5a8857d0b3f30fc4b2b692b77d7":"0x4f2591f896a6500000","0xe6b9545f7ed086e552924639f9a9edbbd5540b3e":"0xcbd47b6eaa8cc00000","0xe6bcd30a8fa138c5d9e5f6c7d2da806992812dcd":"0x370ea0d47cf61a800000","0xe6c81ffcecb47ecdc55c0b71e4855f3e5e97fc1e":"0x121ea68c114e510000","0xe6cb260b716d4c0ab726eeeb07c8707204e276ae":"0x3635c9adc5dea00000","0xe6cb3f3124c9c9cc3834b1274bc3336456a38bac":"0x172b1de0a213ff0000","0xe6d22209ffd0b87509ade3a8e2ef429879cb89b5":"0x3a7aa9e1899ca300000","0xe6d49f86c228f47367a35e886caacb271e539429":"0x165ec09da7a1980000","0xe6e621eaab01f20ef0836b7cad47464cb5fd3c96":"0x11219342afa24b0000","0xe6e886317b6a66a5b4f81bf164c538c264351765":"0x6c6b935b8bbd400000","0xe6e9a39d750fe994394eb68286e5ea62a6997882":"0x2086ac351052600000","0xe6ec5cf0c49b9c317e1e706315ef9eb7c0bf11a7":"0x3a469f3467e8ec00000","0xe6f5eb649afb99599c414b27a9c9c855357fa878":"0x90f534608a72880000","0xe6fe0afb9dcedd37b2e22c451ba6feab67348033":"0x21e19e0c9bab2400000","0xe710dcd09b8101f9437bd97db90a73ef993d0bf4":"0x14ee36c05ac2520000","0xe727e67ef911b81f6cf9c73fcbfebc2b02b5bfc6":"0x6c6b935b8bbd400000","0xe72e1d335cc29a96b9b1c02f003a16d971e90b9d":"0x55a6e79ccd1d300000","0xe7311c9533f0092c7248c9739b5b2c864a34b1ce":"0x97f97d6cc26dfe0000","0xe73bfeada6f0fd016fbc843ebcf6e370a65be70c":"0x6acb3df27e1f880000","0xe73ccf436725c151e255ccf5210cfce5a43f13e3":"0x1154e53217ddb0000","0xe742b1e6069a8ffc3c4767235defb0d49cbed222":"0x2b5e3af16b18800000","0xe74608f506866ada6bfbfdf20fea440be76989ef":"0x6c6acc67d7b1d40000","0xe7533e270cc61fa164ac1553455c105d04887e14":"0x696d8590020bb0000","0xe75c1fb177089f3e58b1067935a6596ef1737fb5":"0x56a879fa775470000","0xe75c3b38a58a3f33d55690a5a59766be185e0284":"0x1b1ae4d6e2ef500000","0xe761d27fa3502cc76bb1a608740e1403cf9dfc69":"0xf2dc7d47f15600000","0xe766f34ff16f3cfcc97321721f43ddf5a38b0cf4":"0x54069233bf7f780000","0xe76d945aa89df1e457aa342b31028a5e9130b2ce":"0x3708baed3d68900000","0xe7735ec76518fc6aa92da8715a9ee3f625788f13":"0x6c4d160bafa1b78000","0xe77a89bd45dc04eeb4e41d7b596b707e6e51e74c":"0x28a857425466f800000","0xe77d7deab296c8b4fa07ca3be184163d5a6d606c":"0x5043904b671190000","0xe77febabdf080f0f5dca1d3f5766f2a79c0ffa7c":"0x4b229d28a843680000","0xe780a56306ba1e6bb331952c22539b858af9f77d":"0xa968163f0a57b400000","0xe781ec732d401202bb9bd13860910dd6c29ac0b6":"0x433874f632cc600000","0xe784dcc873aa8c1513ec26ff36bc92eac6d4c968":"0xad78ebc5ac6200000","0xe7912d4cf4562c573ddc5b71e37310e378ef86c9":"0x155bd9307f9fe80000","0xe791d585b89936b25d298f9d35f9f9edc25a2932":"0x6c6b935b8bbd400000","0xe792349ce9f6f14f81d0674096befa1f9221cdea":"0x5b5d234a0db4388000","0xe796fd4e839b4c95d7510fb7c5c72b83c6c3e3c7":"0x1bc433f23f83140000","0xe7a42f59fee074e4fb13ea9e57ecf1cc48282249":"0x43c33c1937564800000","0xe7a4560c84b20e0fb54c49670c2903b0a96c42a4":"0x206aeac7a903980000","0xe7a8e471eafb798f4554cc6e526730fd56e62c7d":"0x3635c9adc5dea00000","0xe7be82c6593c1eeddd2ae0b15001ff201ab57b2f":"0x10910d4cdc9f60000","0xe7c6b5fc05fc748e5b4381726449a1c0ad0fb0f1":"0x6c6b935b8bbd400000","0xe7d17524d00bad82497c0f27156a647ff51d2792":"0x1158e460913d00000","0xe7d213947fcb904ad738480b1eed2f5c329f27e8":"0x103c3b1d3e9c30000","0xe7d6240620f42c5edbb2ede6aec43da4ed9b5757":"0x3635c9adc5dea00000","0xe7da609d40cde80f00ce5b4ffb6aa9d0b03494fc":"0x3635c9adc5dea00000","0xe7f06f699be31c440b43b4db0501ec0e25261644":"0x1b1ae4d6e2ef500000","0xe7f4d7fe6f561f7fa1da3005fd365451ad89df89":"0xad78ebc5ac6200000","0xe7fd8fd959aed2767ea7fa960ce1db53af802573":"0x3635c9adc5dea00000","0xe80e7fef18a5db15b01473f3ad6b78b2a2f8acd9":"0x1b1ae4d6e2ef500000","0xe8137fc1b2ec7cc7103af921899b4a39e1d959a1":"0x50c5e761a444080000","0xe81c2d346c0adf4cc56708f6394ba6c8c8a64a1e":"0x6c6b935b8bbd400000","0xe82c58c579431b673546b53a86459acaf1de9b93":"0x3635c9adc5dea00000","0xe834c64318205ca7dd4a21abcb08266cb21ff02c":"0x3635c6204739d98000","0xe83604e4ff6be7f96f6018d3ec3072ec525dff6b":"0x9ddc1e3b901180000","0xe845e387c4cbdf982280f6aa01c40e4be958ddb2":"0x54b40b1f852bda00000","0xe848ca7ebff5c24f9b9c316797a43bf7c356292d":"0x62e115c008a880000","0xe84b55b525f1039e744b918cb3332492e45eca7a":"0xad78ebc5ac6200000","0xe84f8076a0f2969ecd333eef8de41042986291f2":"0x176b344f2a78c00000","0xe864fec07ed1214a65311e11e329de040d04f0fd":"0x59ca83f5c404968000","0xe87dbac636a37721df54b08a32ef4959b5e4ff82":"0x6c6b935b8bbd400000","0xe87e9bbfbbb71c1a740c74c723426df55d063dd9":"0x1b1928c00c7a6380000","0xe87eac6d602b4109c9671bf57b950c2cfdb99d55":"0x2b4f21972ecce0000","0xe881bbbe69722d81efecaa48d1952a10a2bfac8f":"0x3635c9adc5dea000000","0xe89249738b7eced7cb666a663c49cbf6de8343ea":"0x6c6b935b8bbd400000","0xe89c22f1a4e1d4746ecfaa59ed386fee12d51e37":"0x26f8e87f0a7da0000","0xe89da96e06beaf6bd880b378f0680c43fd2e9d30":"0x209a1a01a56fec0000","0xe8a91da6cf1b9d65c74a02ec1f96eecb6dd241f3":"0x692ae8897081d00000","0xe8a9a41740f44f54c3688b53e1ddd42e43c9fe94":"0xd8d726b7177a800000","0xe8b28acda971725769db8f563d28666d41ddab6c":"0x21e19e0c9bab2400000","0xe8be24f289443ee473bc76822f55098d89b91cc5":"0x6c6b935b8bbd400000","0xe8c3d3b0e17f97d1e756e684f94e1470f99c95a1":"0x15af1d78b58c400000","0xe8c3f045bb7d38c9d2f395b0ba8492b253230901":"0x1e7e4171bf4d3a00000","0xe8cc43bc4f8acf39bff04ebfbf42aac06a328470":"0x15af1d78b58c400000","0xe8d942d82f175ecb1c16a405b10143b3f46b963a":"0x1ed2e8ff6d971c0000","0xe8ddbed732ebfe754096fde9086b8ea4a4cdc616":"0x6c6b935b8bbd400000","0xe8de725eca5def805ff7941d31ac1c2e342dfe95":"0x857e0d6f1da76a0000","0xe8e9850586e94f5299ab494bb821a5f40c00bd04":"0xcf152640c5c8300000","0xe8ead1bb90ccc3aea2b0dcc5b58056554655d1d5":"0x1a4aba225c207400000","0xe8eaf12944092dc3599b3953fa7cb1c9761cc246":"0x6194049f30f7200000","0xe8ed51bbb3ace69e06024b33f86844c47348db9e":"0x22f9ea89f4a7d6c40000","0xe8ef100d7ce0895832f2678df72d4acf8c28b8e3":"0x1b1b6bd7af64c70000","0xe8f29969e75c65e01ce3d86154207d0a9e7c76f2":"0xa22fa9a73a27198000","0xe8fc36b0131ec120ac9e85afc10ce70b56d8b6ba":"0xad78ebc5ac6200000","0xe90a354cec04d69e5d96ddc0c5138d3d33150aa0":"0x1b1a7dcf8a44d38000","0xe9133e7d31845d5f2b66a2618792e869311acf66":"0x517c0cbf9a390880000","0xe91dac0195b19e37b59b53f7c017c0b2395ba44c":"0x65ea3db75546600000","0xe91fa0badaddb9a97e88d3f4db7c55d6bb7430fe":"0x14620c57dddae00000","0xe923c06177b3427ea448c0a6ff019b54cc548d95":"0x1f780014667f28000","0xe93d47a8ca885d540c4e526f25d5c6f2c108c4b8":"0x17da3a04c7b3e0000000","0xe9458f68bb272cb5673a04f781b403556fd3a387":"0x34e8b88cee2d40000","0xe94941b6036019b4016a30c1037d5a6903babaad":"0x2a48acab6204b00000","0xe9495ba5842728c0ed97be37d0e422b98d69202c":"0x6c6b935b8bbd400000","0xe94ded99dcb572b9bb1dcba32f6dee91e057984e":"0x155bd9307f9fe80000","0xe95179527deca5916ca9a38f215c1e9ce737b4c9":"0x21e19e0c9bab2400000","0xe9559185f166fc9513cc71116144ce2deb0f1d4b":"0x43c33c1937564800000","0xe95e92bbc6de07bf3a660ebf5feb1c8a3527e1c5":"0xfc936392801c0000","0xe965daa34039f7f0df62375a37e5ab8a72b301e7":"0x103fddecdb3f5700000","0xe969ea1595edc5c4a707cfde380929633251a2b0":"0xad78ebc5ac6200000","0xe96b184e1f0f54924ac874f60bbf44707446b72b":"0x9dcc0515b56e0c0000","0xe96d7d4cdd15553a4e4d316d6d6480ca3cea1e38":"0x2955d02e1a135a00000","0xe96e2d3813efd1165f12f602f97f4a62909d3c66":"0x7caee97613e6700000","0xe97fde0b67716325cf0ecce8a191a3761b2c791d":"0x3677036edf0af60000","0xe982e6f28c548f5f96f45e63f7ab708724f53fa1":"0x157ae829a41f3b0000","0xe9864c1afc8eaad37f3ba56fcb7477cc622009b7":"0x448586170a7dc0000","0xe987e6139e6146a717fef96bc24934a5447fe05d":"0x6c6b935b8bbd400000","0xe989733ca1d58d9e7b5029ba5d444858bec03172":"0x1f87408313df4f8000","0xe98c91cadd924c92579e11b41217b282956cdaa1":"0x75c9a8480320c0000","0xe99aece90541cae224b87da673965e0aeb296afd":"0x31df9095a18f600000","0xe99de258a4173ce9ac38ede26c0b3bea3c0973d5":"0x59d0b805e5bb300000","0xe9a2b4914e8553bf0d7c00ca532369b879f931bf":"0x6c6b935b8bbd400000","0xe9a39a8bac0f01c349c64cedb69897f633234ed2":"0xd7c198710e66b00000","0xe9a5ae3c9e05977dd1069e9fd9d3aefbae04b8df":"0x6acb3df27e1f880000","0xe9ac36376efa06109d40726307dd1a57e213eaa9":"0xa844a7424d9c80000","0xe9b1f1fca3fa47269f21b061c353b7f5e96d905a":"0x1b1ae4d6e2ef500000","0xe9b36fe9b51412ddca1a521d6e94bc901213dda8":"0x21e19e0c9bab2400000","0xe9b4a4853577a9dbcc2e795be0310d1bed28641a":"0x3635c9adc5dea00000","0xe9b6a790009bc16642c8d820b7cde0e9fd16d8f5":"0xc55325ca7415e00000","0xe9b9a2747510e310241d2ece98f56b3301d757e0":"0x6c6b935b8bbd400000","0xe9c35c913ca1fceab461582fe1a5815164b4fd21":"0x1b1ae4d6e2ef5000000","0xe9c6dfae97f7099fc5f4e94b784db802923a1419":"0x2a53c6d724f100000","0xe9c758f8da41e3346e4350e5ac3976345c6c1082":"0x68a0d3092826ad0000","0xe9caf827be9d607915b365c83f0d3b7ea8c79b50":"0xa2a15d09519be00000","0xe9cafe41a5e8bbd90ba02d9e06585b4eb546c57f":"0x6c6b935b8bbd400000","0xe9d599456b2543e6db80ea9b210e908026e2146e":"0xad78ebc5ac6200000","0xe9e1f7cb00a110edd0ebf8b377ef8a7bb856117f":"0xad78ebc5ac6200000","0xea14bfda0a6e76668f8788321f07df37824ec5df":"0x2a5a058fc295ed000000","0xea1ea0c599afb9cd36caacbbb52b5bbb97597377":"0x39fbae8d042dd00000","0xea1efb3ce789bedec3d67c3e1b3bc0e9aa227f90":"0x27ca4bd719f0b80000","0xea2c197d26e98b0da83e1b72c787618c979d3db0":"0x11164759ffb320000","0xea3779d14a13f6c78566bcde403591413a6239db":"0x29b76432b94451200000","0xea4e809e266ae5f13cdbe38f9d0456e6386d1274":"0xf3f20b8dfa69d00000","0xea53c954f4ed97fd4810111bdab69ef981ef25b9":"0x3a9d5baa4abf1d00000","0xea53d26564859d9e90bb0e53b7abf560e0162c38":"0x15af1d78b58c400000","0xea60436912de6bf187d3a472ff8f5333a0f7ed06":"0x11164759ffb320000","0xea60549ec7553f511d2149f2d4666cbd9243d93c":"0x6c6b935b8bbd400000","0xea66e7b84dcdbf36eea3e75b85382a75f1a15d96":"0x5dbc9191266f118000","0xea686c5057093c171c66db99e01b0ececb308683":"0x14dda85d2ce1478000","0xea6afe2cc928ac8391eb1e165fc40040e37421e7":"0xa27fa063b2e2e68000","0xea79057dabef5e64e7b44f7f18648e7e533718d2":"0xad78ebc5ac6200000","0xea7c4d6dc729cd6b157c03ad237ca19a209346c3":"0x6c6b935b8bbd400000","0xea8168fbf225e786459ca6bb18d963d26b505309":"0x1b1ae4d6e2ef500000","0xea81ca8638540cd9d4d73d060f2cebf2241ffc3e":"0x6acb3df27e1f880000","0xea8317197959424041d9d7c67a3ece1dbb78bb55":"0x155bd9307f9fe80000","0xea8527febfa1ade29e26419329d393b940bbb7dc":"0x6c6acc67d7b1d40000","0xea8f30b6e4c5e65290fb9864259bc5990fa8ee8a":"0x1158e460913d00000","0xea94f32808a2ef8a9bf0861d1d2404f7b7be258a":"0x1158e460913d00000","0xeaa45cea02d87d2cc8fda9434e2d985bd4031584":"0x681fc2cc6e2b8b0000","0xeab0bd148309186cf8cbd13b7232d8095acb833a":"0x2439a881c6a717c0000","0xeabb90d37989aab31feae547e0e6f3999ce6a35d":"0x6c6b935b8bbd400000","0xeac0827eff0c6e3ff28a7d4a54f65cb7689d7b99":"0x9ad9e69f9d47520000","0xeac1482826acb6111e19d340a45fb851576bed60":"0x1be8bab04d9be8000","0xeac17b81ed5191fb0802aa54337313834107aaa4":"0x1b1ae4d6e2ef5000000","0xeac3af5784927fe9a598fc4eec38b8102f37bc58":"0x3635c9adc5dea00000","0xeac6b98842542ea10bb74f26d7c7488f698b6452":"0x43c33c1937564800000","0xeac768bf14b8f9432e69eaa82a99fbeb94cd0c9c":"0x14dbb2195ca228900000","0xead21c1deccfbf1c5cd96688a2476b69ba07ce4a":"0x3f24d8e4a00700000","0xead4d2eefb76abae5533961edd11400406b298fc":"0xd255d112e103a00000","0xead65262ed5d122df2b2751410f98c32d1238f51":"0x58317ed46b9b80000","0xead75016e3a0815072b6b108bcc1b799acf0383e":"0x6c6b935b8bbd400000","0xeaea23aa057200e7c9c15e8ff190d0e66c0c0e83":"0x6c6b935b8bbd400000","0xeaed16eaf5daab5bf0295e5e077f59fb8255900b":"0xd8d726b7177a800000","0xeaedcc6b8b6962d5d9288c156c579d47c0a9fcff":"0x49b9ca9a694340000","0xeaf52388546ec35aca6f6c6393d8d609de3a4bf3":"0x1158e460913d00000","0xeb10458daca79e4a6b24b29a8a8ada711b7f2eb6":"0xd8bb6549b02bb80000","0xeb1cea7b45d1bd4d0e2a007bd3bfb354759e2c16":"0xabbcd4ef377580000","0xeb25481fcd9c221f1ac7e5fd1ecd9307a16215b8":"0xaadec983fcff40000","0xeb2ef3d38fe652403cd4c9d85ed7f0682cd7c2de":"0x90f534608a728800000","0xeb3bdd59dcdda5a9bb2ac1641fd02180f5f36560":"0x165c96647b38a200000","0xeb3ce7fc381c51db7d5fbd692f8f9e058a4c703d":"0xad78ebc5ac6200000","0xeb453f5a3adddd8ab56750fadb0fe7f94d9c89e7":"0x1158e460913d00000","0xeb4f00e28336ea09942588eeac921811c522143c":"0x6c6b935b8bbd400000","0xeb52ab10553492329c1c54833ae610f398a65b9d":"0x83d6c7aab63600000","0xeb570dba975227b1c42d6e8dea2c56c9ad960670":"0x6c6b935b8bbd400000","0xeb6394a7bfa4d28911d5a5b23e93f35e340c2294":"0x43a77aabd00780000","0xeb6810691d1ae0d19e47bd22cebee0b3ba27f88a":"0x87856315d878150000","0xeb76424c0fd597d3e341a9642ad1ee118b2b579d":"0xd8d726b7177a800000","0xeb7c202b462b7cc5855d7484755f6e26ef43a115":"0x6c6b935b8bbd400000","0xeb835c1a911817878a33d167569ea3cdd387f328":"0x3635c9adc5dea00000","0xeb89a882670909cf377e9e78286ee97ba78d46c2":"0x2b7cc2e9c3225c0000","0xeb90c793b3539761e1c814a29671148692193eb4":"0x28a857425466f800000","0xeb9cc9fe0869d2dab52cc7aae8fd57adb35f9feb":"0x6a93bb17af81f80000","0xeba388b0da27c87b1cc0eac6c57b2c5a0b459c1a":"0x170a0f5040e50400000","0xebaa216de9cc5a43031707d36fe6d5bedc05bdf0":"0x6ac5c62d9486070000","0xebac2b4408ef5431a13b8508e86250982114e145":"0xd8d726b7177a800000","0xebb62cf8e22c884b1b28c6fa88fbbc17938aa787":"0x2b42798403c9b80000","0xebb7d2e11bc6b58f0a8d45c2f6de3010570ac891":"0x1731790534df20000","0xebbb4f2c3da8be3eb62d1ffb1f950261cf98ecda":"0x6c6b935b8bbd400000","0xebbd4db9019952d68b1b0f6d8cf0683c00387bb5":"0x120401563d7d910000","0xebbeeb259184a6e01cccfc2207bbd883785ac90a":"0x219bc1b04783d30000","0xebd356156a383123343d48843bffed6103e866b3":"0x6acb3df27e1f880000","0xebd37b256563e30c6f9289a8e2702f0852880833":"0x6c6acc67d7b1d40000","0xebe46cc3c34c32f5add6c3195bb486c4713eb918":"0x3635c9adc5dea00000","0xebff84bbef423071e604c361bba677f5593def4e":"0x21e19e0c9bab2400000","0xec0927bac7dc36669c28354ab1be83d7eec30934":"0x6c6b935b8bbd400000","0xec0e18a01dc4dc5daae567c3fa4c7f8f9b590205":"0x111ffe404a41e60000","0xec11362cec810985d0ebbd7b73451444985b369f":"0x65a4e49577057318000","0xec2cb8b9378dff31aec3c22e0e6dadff314ab5dd":"0x6c6b935b8bbd400000","0xec30addd895b82ee319e54fb04cb2bb03971f36b":"0x6c6b935b8bbd400000","0xec3b8b58a12703e581ce5ffd7e21c57d1e5c663f":"0x5c283d410394100000","0xec4867d2175ab5b9469361595546554684cda460":"0xa2a15d09519be00000","0xec4d08aa2e47496dca87225de33f2b40a8a5b36f":"0x890b0c2e14fb80000","0xec58bc0d0c20d8f49465664153c5c196fe59e6be":"0x15af1d78b58c400000","0xec5b198a00cfb55a97b5d53644cffa8a04d2ab45":"0x6c6b935b8bbd400000","0xec5df227bfa85d7ad76b426e1cee963bc7f519dd":"0x3635c9adc5dea00000","0xec5feafe210c12bfc9a5d05925a123f1e73fbef8":"0x608fcf3d88748d000000","0xec6904bae1f69790591709b0609783733f2573e3":"0x1b1ae4d6e2ef500000","0xec73114c5e406fdbbe09b4fa621bd70ed54ea1ef":"0x53025cd216fce500000","0xec73833de4b810bb027810fc8f69f544e83c12d1":"0x3635c9adc5dea00000","0xec75b4a47513120ba5f86039814f1998e3817ac3":"0x9b0bce2e8fdba0000","0xec76f12e57a65504033f2c0bce6fc03bd7fa0ac4":"0xc2127af858da700000","0xec8014efc7cbe5b0ce50f3562cf4e67f8593cd32":"0xf015f25736420000","0xec82f50d06475f684df1b392e00da341aa145444":"0x6c6b935b8bbd400000","0xec83e798c396b7a55e2a2224abcd834b27ea459c":"0x28a857425466f800000","0xec89f2b678a1a15b9134ec5eb70c6a62071fbaf9":"0xad78ebc5ac6200000","0xec8c1d7b6aaccd429db3a91ee4c9eb1ca4f6f73c":"0xe664992288f2280000","0xec9851bd917270610267d60518b54d3ca2b35b17":"0x878678326eac9000000","0xec99e95dece46ffffb175eb6400fbebb08ee9b95":"0x56bc75e2d63100000","0xeca5f58792b8c62d2af556717ee3ee3028be4dce":"0x6c6b935b8bbd400000","0xecab5aba5b828de1705381f38bc744b32ba1b437":"0x32f51edbaaa3300000","0xecaf3350b7ce144d068b186010852c84dd0ce0f0":"0x6c6b935b8bbd400000","0xecb94c568bfe59ade650645f4f26306c736cace4":"0xe7eeba3410b740000","0xecbe425e670d39094e20fb5643a9d818eed236de":"0x10f0cf064dd59200000","0xecbe5e1c9ad2b1dccf0a305fc9522f4669dd3ae7":"0x10f0cf064dd59200000","0xeccf7a0457b566b346ca673a180f444130216ac3":"0x56bc75e2d63100000","0xecd1a62802351a41568d23033004acc6c005a5d3":"0x2b5e3af16b1880000","0xecd276af64c79d1bd9a92b86b5e88d9a95eb88f8":"0x1158e460913d00000","0xecd486fc196791b92cf612d348614f9156488b7e":"0x28a857425466f800000","0xecdaf93229b45ee672f65db506fb5eca00f7fce6":"0x5701f96dcc40ee8000","0xece111670b563ccdbebca52384290ecd68fe5c92":"0x1158e460913d00000","0xece1152682b7598fe2d1e21ec15533885435ac85":"0xd8d726b7177a800000","0xece1290877b583e361a2d41b009346e6274e2538":"0x1043561a8829300000","0xecf05d07ea026e7ebf4941002335baf2fed0f002":"0xad78ebc5ac6200000","0xecf24cdd7c22928c441e694de4aa31b0fab59778":"0x2086ac351052600000","0xecfd004d02f36cd4d8b4a8c1a9533b6af85cd716":"0x10f41acb4bb3b9c0000","0xed0206cb23315128f8caff26f6a30b985467d022":"0x878678326eac9000000","0xed1065dbcf9d73c04ffc7908870d881468c1e132":"0x6c6b935b8bbd400000","0xed1276513b6fc68628a74185c2e20cbbca7817bf":"0xa5aa85009e39c0000","0xed12a1ba1fb8adfcb20dfa19582e525aa3b74524":"0x16a6502f15a1e540000","0xed16ce39feef3bd7f5d162045e0f67c0f00046bb":"0x1158e460913d00000","0xed1a5c43c574d4e934299b24f1472cdc9fd6f010":"0xad78ebc5ac6200000","0xed1b24b6912d51b334ac0de6e771c7c0454695ea":"0x22b1c8c1227a00000","0xed1f1e115a0d60ce02fb25df014d289e3a0cbe7d":"0x1b1ae4d6e2ef500000","0xed31305c319f9273d3936d8f5b2f71e9b1b22963":"0x56bc75e2d63100000","0xed327a14d5cfadd98103fc0999718d7ed70528ea":"0x4e1003b28d92800000","0xed3cbc3782cebd67989b305c4133b2cde32211eb":"0x15af1d78b58c400000","0xed4014538cee664a2fbcb6dc669f7ab16d0ba57c":"0xad78ebc5ac6200000","0xed41e1a28f5caa843880ef4e8b08bd6c33141edf":"0x2ad5ddfa7a8d830000","0xed4be04a052d7accb3dcce90319dba4020ab2c68":"0x7f37a70eaf362178000","0xed52a2cc0869dc9e9f842bd0957c47a8e9b0c9ff":"0x205b4dfa1ee74780000","0xed5b4c41e762d942404373caf21ed4615d25e6c1":"0x6d2d4f3d9525b40000","0xed60c4ab6e540206317e35947a63a9ca6b03e2cb":"0x31ad9ad0b467f8000","0xed641e06368fb0efaa1703e01fe48f4a685309eb":"0xad78ebc5ac6200000","0xed6643c0e8884b2d3211853785a08bf8f33ed29f":"0x487a9a304539440000","0xed70a37cdd1cbda9746d939658ae2a6181288578":"0x2086ac3510526000000","0xed7346766e1a676d0d06ec821867a276a083bf31":"0xd98a0931cc2d490000","0xed862616fcbfb3becb7406f73c5cbff00c940755":"0x5c283d410394100000","0xed9e030ca75cb1d29ea01d0d4cdfdccd3844b6e4":"0x1acc116cfafb18000","0xed9ebccba42f9815e78233266dd6e835b6afc31b":"0x14542ba12a337c00000","0xed9fb1f5af2fbf7ffc5029cee42b70ff5c275bf5":"0xf2dc7d47f15600000","0xeda4b2fa59d684b27a810df8978a73df308a63c2":"0xd8d726b7177a800000","0xedb473353979a206879de144c10a3c51d7d7081a":"0x14542ba12a337c00000","0xedb71ec41bda7dce86e766e6e8c3e9907723a69b":"0x1158e460913d00000","0xedbac9527b54d6df7ae2e000cca3613ba015cae3":"0x6acb3df27e1f880000","0xedc22fb92c638e1e21ff5cf039daa6e734dafb29":"0x102794ad20da680000","0xeddacd94ec89a2ef968fcf977a08f1fae2757869":"0x1b1ae4d6e2ef5000000","0xeddbaafbc21be8f25562f1ed6d05d6afb58f02c2":"0x6c6b935b8bbd400000","0xede0147ec032c3618310c1ff25690bf172193dac":"0x6c6b935b8bbd400000","0xede5de7c7fb7eee0f36e64530a41440edfbefacf":"0x21755ee1ef2b180000","0xede79ae1ff4f1606d59270216fa46ab2ddd4ecaa":"0x7ea28327577080000","0xede8c2cb876fbe8a4cca8290361a7ea01a69fdf8":"0x1a78c6b44f841838000","0xedeb4894aadd0081bbddd3e8846804b583d19f27":"0x6c6b935b8bbd400000","0xedf603890228d7d5de9309942b5cad4219ef9ad7":"0x10f0cf064dd59200000","0xedf8a3e1d40f13b79ec8e3e1ecf262fd92116263":"0x890b0c2e14fb80000","0xedfda2d5db98f9380714664d54b4ee971a1cae03":"0x22bb8ddd679be0000","0xee0007b0960d00908a94432a737557876aac7c31":"0x2e0421e69c4cc8000","0xee049af005974dd1c7b3a9ca8d9aa77175ba53aa":"0x1211ecb56d13488000","0xee25b9a7032679b113588ed52c137d1a053a1e94":"0xad50f3f4eea8e0000","0xee31167f9cc93b3c6465609d79db0cde90e8484c":"0x6c6b935b8bbd400000","0xee34c7e7995db9f187cff156918cfb6f13f6e003":"0x6a4076cf7995a00000","0xee3564f5f1ba0f94ec7bac164bddbf31c6888b55":"0x56bc75e2d63100000","0xee58fb3db29070d0130188ce472be0a172b89055":"0x21f42dcdc58e39c0000","0xee655bb4ee0e8d5478526fb9f15e4064e09ff3dd":"0xad78ebc5ac6200000","0xee6959de2b67967b71948c891ab00d8c8f38c7dc":"0x6685ac1bfe32c0000","0xee6c03429969ca1262cb3f0a4a54afa7d348d7f5":"0xde219f91fc18a0000","0xee71793e3acf12a7274f563961f537529d89c7de":"0x6c6b935b8bbd400000","0xee7288d91086d9e2eb910014d9ab90a02d78c2a0":"0x6c6b935b8bbd400000","0xee7c3ded7c28f459c92fe13b4d95bafbab02367d":"0x25f273933db5700000","0xee867d20916bd2e9c9ece08aa04385db667c912e":"0xa968163f0a57b400000","0xee899b02cbcb3939cd61de1342d50482abb68532":"0x5f68e8131ecf800000","0xee906d7d5f1748258174be4cbc38930302ab7b42":"0xad78ebc5ac6200000","0xee97aa8ac69edf7a987d6d70979f8ec1fbca7a94":"0x14620c57dddae00000","0xeea1e97988de75d821cd28ad6822b22cce988b31":"0x1c30731cec03200000","0xeed28c3f068e094a304b853c950a6809ebcb03e0":"0x3a9d5baa4abf1d00000","0xeed384ef2d41d9d203974e57c12328ea760e08ea":"0x3635c9adc5dea00000","0xeedf6c4280e6eb05b934ace428e11d4231b5905b":"0xad78ebc5ac6200000","0xeee761847e33fd61d99387ee14628694d1bfd525":"0x6c6b935b8bbd400000","0xeee9d0526eda01e43116a395322dda8970578f39":"0x21e1999bbd5d2be0000","0xeef1bbb1e5a83fde8248f88ee3018afa2d1332eb":"0xad78ebc5ac6200000","0xeefba12dfc996742db790464ca7d273be6e81b3e":"0x3635c9adc5dea00000","0xeefd05b0e3c417d55b3343060486cdd5e92aa7a6":"0x4d853c8f8908980000","0xef0dc7dd7a53d612728bcbd2b27c19dd4d7d666f":"0x26411c5b35f05a0000","0xef115252b1b845cd857f002d630f1b6fa37a4e50":"0x6acb3df27e1f880000","0xef1c0477f1184d60accab374d374557a0a3e10f3":"0x83d6c7aab63600000","0xef2c34bb487d3762c3cca782ccdd7a8fbb0a9931":"0x9c2007651b2500000","0xef35f6d4b1075e6aa139151c974b2f4658f70538":"0x3c3bc33f94e50d8000","0xef39ca9173df15531d73e6b72a684b51ba0f2bb4":"0x56a0b4756ee2380000","0xef463c2679fb279164e20c3d2691358773a0ad95":"0x6c6b935b8bbd400000","0xef47cf073e36f271d522d7fa4e7120ad5007a0bc":"0x878678326eac900000","0xef61155ba009dcdebef10b28d9da3d1bc6c9ced4":"0x3342d60dff1960000","0xef69781f32ffce33346f2c9ae3f08493f3e82f89":"0xfc936392801c0000","0xef76a4cd8febcbc9b818f17828f8d93473f3f3cb":"0xd8d726b7177a800000","0xef93818f684db0c3675ec81332b3183ecc28a495":"0x54069233bf7f780000","0xef9f59aeda418c1494682d941aab4924b5f4929a":"0x152d02c7e14af6800000","0xefa6b1f0db603537826891b8b4bc163984bb40cd":"0x35659ef93f0fc40000","0xefbd52f97da5fd3a673a46cbf330447b7e8aad5c":"0x56c3c9b80a0a68000","0xefc8cf1963c9a95267b228c086239889f4dfd467":"0x21e19e0c9bab2400000","0xefcaae9ff64d2cd95b5249dcffe7faa0a0c0e44d":"0x15be6174e1912e0000","0xefcce06bd6089d0e458ef561f5a689480afe7000":"0x2086ac351052600000","0xefe0675da98a5dda70cd96196b87f4e726b43348":"0x3f19beb8dd1ab00000","0xefe8ff87fc260e0767638dd5d02fc4672e0ec06d":"0x6c6b935b8bbd400000","0xefeb1997aad277cc33430e6111ed0943594048b8":"0x6c6b935b8bbd400000","0xefeea010756f81da4ba25b721787f058170befbd":"0x1c29c9cf770ef0000","0xeff51d72adfae143edf3a42b1aec55a2ccdd0b90":"0x1043561a8829300000","0xeff86b5123bcdc17ed4ce8e05b7e12e51393a1f7":"0x1b1ae4d6e2ef500000","0xeffc15e487b1beda0a8d1325bdb4172240dc540a":"0x3853939eee1de0000","0xf01195d657ef3c942e6cb83949e5a20b5cfa8b1e":"0x57473d05dabae800000","0xf02796295101674288c1d93467053d042219b794":"0x281d901f4fdd100000","0xf039683d7b3d225bc7d8dfadef63163441be41e2":"0x1dd1e4bd8d1ee0000","0xf04a6a379708b9428d722aa2b06b77e88935cf89":"0x1043561a8829300000","0xf04d2c91efb6e9c45ffbe74b434c8c5f2b028f1f":"0x3635c9adc5dea00000","0xf057aa66ca767ede124a1c5b9cc5fc94ef0b0137":"0x70a24bcab6f45d0000","0xf05ba8d7b68539d933300bc9289c3d9474d0419e":"0x6da27024dd9600000","0xf05ceeab65410564709951773c8445ad9f4ec797":"0x10431627a0933b0000","0xf05fcd4c0d73aa167e5553c8c0d6d4f2faa39757":"0x2d2d66c3170b2980000","0xf067e1f1d683556a4cc4fd0c0313239f32c4cfd8":"0x3635c9adc5dea00000","0xf067fb10dfb293e998abe564c055e3348f9fbf1e":"0x6c6b935b8bbd400000","0xf068dfe95d15cd3a7f98ffa688b4346842be2690":"0x440ad819e0974c0000","0xf06a854a3c5dc36d1c49f4c87d6db333b57e4add":"0x21e19e0c9bab2400000","0xf079e1b1265f50e8c8a98ec0c7815eb3aeac9eb4":"0x116dc3a8994b30000","0xf07bd0e5c2ce69c7c4a724bd26bbfa9d2a17ca03":"0x14061b9d77a5e980000","0xf0832a6bb25503eeca435be31b0bf905ca1fcf57":"0x16a6502f15a1e540000","0xf09b3e87f913ddfd57ae8049c731dba9b636dfc3":"0x20f5b1eaad8d800000","0xf0b1340b996f6f0bf0d9561c849caf7f4430befa":"0x56bc75e2d63100000","0xf0b1f9e27832c6de6914d70afc238c749995ace4":"0x6c6b935b8bbd400000","0xf0b469eae89d400ce7d5d66a9695037036b88903":"0x43c33c1937564800000","0xf0b9d683cea12ba600baace219b0b3c97e8c00e4":"0x56bc75e2d63100000","0xf0be0faf4d7923fc444622d1980cf2d990aab307":"0x6c6b935b8bbd400000","0xf0c081da52a9ae36642adf5e08205f05c54168a6":"0x6046f37e5945c0000","0xf0c70d0d6dab7663aa9ed9ceea567ee2c6b02765":"0x71438ac5a791a08000","0xf0cbef84e169630098d4e301b20208ef05846ac9":"0xe0b8345506b4e0000","0xf0d21663d8b0176e05fde1b90ef31f8530fda95f":"0x6c6acc67d7b1d40000","0xf0d5c31ccb6cbe30c7c9ea19f268d159851f8c9c":"0x3894f0e6f9b9f700000","0xf0d64cf9df09741133d170485fd24b005011d520":"0x1b089341e14fcc0000","0xf0d858105e1b648101ac3f85a0f8222bf4f81d6a":"0x2086ac351052600000","0xf0dc43f205619127507b2b1c1cfdf32d28310920":"0x105eb79b9417088000","0xf0e1dfa42adeac2f17f6fdf584c94862fd563393":"0x1b1ae4d6e2ef500000","0xf0e2649c7e6a3f2c5dfe33bbfbd927ca3c350a58":"0x6c6b935b8bbd400000","0xf0e7fb9e420a5340d536f40408344feaefc06aef":"0x3635c9adc5dea00000","0xf10462e58fcc07f39584a187639451167e859201":"0x934dd5d33bc970000","0xf10661ff94140f203e7a482572437938bec9c3f7":"0x43c33c1937564800000","0xf114ff0d0f24eff896edde5471dea484824a99b3":"0xbe202d6a0eda0000","0xf116b0b4680f53ab72c968ba802e10aa1be11dc8":"0x1158e460913d00000","0xf11cf5d363746fee6864d3ca336dd80679bb87ae":"0x878678326eac9000000","0xf11e01c7a9d12499005f4dae7716095a34176277":"0x15af1d78b58c400000","0xf13b083093ba564e2dc631568cf7540d9a0ec719":"0x6c6acc67d7b1d40000","0xf14f0eb86db0eb68753f16918e5d4b807437bd3e":"0xad78ebc5ac6200000","0xf15178ffc43aa8070ece327e930f809ab1a54f9d":"0xab640391201300000","0xf156dc0b2a981e5b55d3f2f03b8134e331dbadb7":"0x56bc75e2d63100000","0xf15d9d5a21b1929e790371a17f16d95f0c69655c":"0x6c6b935b8bbd400000","0xf15e182c4fbbad79bd93342242d4dccf2be58925":"0x692ae8897081d00000","0xf1624d980b65336feac5a6d54125005cfcf2aacb":"0x6c6b935b8bbd400000","0xf167f5868dcf4233a7830609682caf2df4b1b807":"0x81e542e1a7383f0000","0xf16de1891d8196461395f9b136265b3b9546f6ef":"0x1b28e1f98bbce8000","0xf17a92e0361dbacecdc5de0d1894955af6a9b606":"0x6c6b935b8bbd400000","0xf17adb740f45cbbde3094e7e13716f8103f563bd":"0x6c6b935b8bbd400000","0xf18b14cbf6694336d0fe12ac1f25df2da0c05dbb":"0xd8d4602c26bf6c0000","0xf19b39389d47b11b8a2c3f1da9124decffbefaf7":"0x6c6b935b8bbd400000","0xf19f193508393e4d2a127b20b2031f39c82581c6":"0xbdbd7a83bd2f6c0000","0xf1a1f320407964fd3c8f2e2cc8a4580da94f01ea":"0x6c6c2177557c440000","0xf1b4ecc63525f7432c3d834ffe2b970fbeb87212":"0xa2a24068facd800000","0xf1b58faffa8794f50af8e88309c7a6265455d51a":"0x36330322d5238c0000","0xf1c8c4a941b4628c0d6c30fda56452d99c7e1b64":"0x4e8cea1ede75040000","0xf1da40736f99d5df3b068a5d745fafc6463fc9b1":"0x696ca23058da10000","0xf1dc8ac81042c67a9c3c6792b230c46ac016ca10":"0xad78ebc5ac6200000","0xf1df55dcc34a051012b575cb968bc9c458ea09c9":"0xd8d726b7177a800000","0xf1e980c559a1a8e5e50a47f8fffdc773b7e06a54":"0x65ffbcdea04b7480000","0xf1f391ca92808817b755a8b8f4e2ca08d1fd1108":"0x14542ba12a337c00000","0xf1f766b0e46d73fcd4d52e7a72e1b9190cc632b3":"0x1b1ae4d6e2ef5000000","0xf2049532fd458a83ca1bff2eebacb6d5ca63f4a4":"0xc48c991dc1545c8000","0xf206d328e471d0117b246d2a4619827709e96df3":"0xa2af3dc00543440000","0xf20c9a99b74759d782f25c1ceca802a27e0b436c":"0x5a87e7d7f5f6580000","0xf2127d54188fedef0f338a5f38c7ff73ad9f6f42":"0x43c33c1937564800000","0xf2133431d1d9a37ba2f0762bc40c5acc8aa6978e":"0x6c6b935b8bbd400000","0xf21549bdd1487912f900a7523db5f7626121bba3":"0x21e19e0c9bab2400000","0xf218bd848ee7f9d38bfdd1c4eb2ed2496ae4305f":"0x1b1ae4d6e2ef500000","0xf224eb900b37b4490eee6a0b6420d85c947d8733":"0x34957444b840e80000","0xf2294adbb6f0dcc76e632ebef48ab49f124dbba4":"0x4e43393600a7b10000","0xf22f4078febbbaa8b0e78e642c8a42f35d433905":"0x6c6acc67d7b1d40000","0xf237ef05261c34d79cc22b860de0f17f793c3860":"0xad78ebc5ac6200000","0xf23c7b0cb8cd59b82bd890644a57daf40c85e278":"0x2b66aafe326ff0000","0xf23d01589eb12d439f7448ff54307529f191858d":"0x6c6b935b8bbd400000","0xf23e5c633221a8f7363e65870c9f287424d2a960":"0x4acf58e07257100000","0xf242da845d42d4bf779a00f295b40750fe49ea13":"0x3635c9adc5dea00000","0xf25259a5c939cd25966c9b6303d3731c53ddbc4c":"0xad78ebc5ac6200000","0xf25e4c70bc465632c89e5625a832a7722f6bffab":"0xf34b82fd8e91200000","0xf26bcedce3feadcea3bc3e96eb1040dfd8ffe1a0":"0x2a034919dfbfbc0000","0xf270792576f05d514493ffd1f5e84bec4b2df810":"0x3635c9adc5dea00000","0xf2732cf2c13b8bb8e7492a988f5f89e38273ddc8":"0x2086ac351052600000","0xf2742e6859c569d5f2108351e0bf4dca352a48a8":"0x21e19e0c9bab2400000","0xf2813a64c5265d020235cb9c319b6c96f906c41e":"0x12f939c99edab80000","0xf287ff52f461117adb3e1daa71932d1493c65f2e":"0xc55325ca7415e00000","0xf2ab1161750244d0ecd048ee0d3e51abb143a2fd":"0x42fe2b907373bc0000","0xf2b4ab2c9427a9015ef6eefff5edb60139b719d1":"0x26db992a3b18000000","0xf2c03e2a38998c21648760f1e5ae7ea3077d8522":"0x8f3f7193ab079c0000","0xf2c2904e9fa664a11ee25656d8fd2cc0d9a522a0":"0xb98bc829a6f90000","0xf2c362b0ef991bc82fb36e66ff75932ae8dd8225":"0x402f4cfee62e80000","0xf2d0e986d814ea13c8f466a0538c53dc922651f0":"0x4acf58e07257100000","0xf2d1b7357724ec4c03185b879b63f57e26589153":"0x14542ba12a337c00000","0xf2d5763ce073127e2cedde6faba786c73ca94141":"0x1ac4286100191f00000","0xf2d59c8923759073d6f415aaf8eb065ff2f3b685":"0x1ab2cf7c9f87e200000","0xf2e99f5cbb836b7ad36247571a302cbe4b481c69":"0x6acb3df27e1f880000","0xf2ed3e77254acb83231dc0860e1a11242ba627db":"0x6b56051582a9700000","0xf2edde37f9a8c39ddea24d79f4015757d06bf786":"0x152d02c7e14af6800000","0xf2efe96560c9d97b72bd36447843885c1d90c231":"0x6c6b935b8bbd400000","0xf2fbb6d887f8b8cc3a869aba847f3d1f643c53d6":"0xd8c9460063d31c0000","0xf3034367f87d24d3077fa9a2e38a8b0ccb1104ef":"0x3635c9adc5dea00000","0xf303d5a816affd97e83d9e4dac2f79072bb0098f":"0x340aad21b3b7000000","0xf3159866c2bc86bba40f9d73bb99f1eee57bb9d7":"0x3635c9adc5dea00000","0xf316ef1df2ff4d6c1808dba663ec8093697968e0":"0x61464d6cdc80f00000","0xf32d25eb0ea2b8b3028a4c7a155dc1aae865784d":"0x13593a9297fdad60000","0xf332c0f3e05a27d9126fd0b641a8c2d4060608fd":"0x10f1b62c4d9644e8000","0xf338459f32a159b23db30ac335769ab2351aa63c":"0x65a4da25d3016c00000","0xf33efc6397aa65fb53a8f07a0f893aae30e8bcee":"0x7cf2381f619f150000","0xf34083ecea385017aa40bdd35ef7effb4ce7762d":"0x15af1d78b58c400000","0xf346d7de92741c08fc58a64db55b062dde012d14":"0xfff6b1f761e6d0000","0xf355d3ec0cfb907d8dbb1bf3464e458128190bac":"0x10b046e7f0d80100000","0xf36df02fbd89607347afce2969b9c4236a58a506":"0x6c6b935b8bbd400000","0xf373e9daac0c8675f53b797a160f6fc034ae6b23":"0x56bc75e2d63100000","0xf37b426547a1642d8033324814f0ede3114fc212":"0x15be6174e1912e0000","0xf37bf78c5875154711cb640d37ea6d28cfcb1259":"0xad78ebc5ac6200000","0xf382df583155d8548f3f93440cd5f68cb79d6026":"0x38757d027fc1fd5c0000","0xf382e4c20410b951089e19ba96a2fee3d91cce7e":"0x111fa56eec2a8380000","0xf38a6ca80168537e974d14e1c3d13990a44c2c1b":"0x14542ba12a337c00000","0xf39a9d7aa3581df07ee4279ae6c312ef21033658":"0xd8d726b7177a800000","0xf3b668b3f14d920ebc379092db98031b67b219b3":"0xad6eedd17cf3b8000","0xf3be99b9103ce7550aa74ff1db18e09dfe32e005":"0x6c6b935b8bbd400000","0xf3c1abd29dc57b41dc192d0e384d021df0b4f6d4":"0x97ae0cdf8f86f80000","0xf3c4716d1ee5279a86d0163a14618181e16136c7":"0x3635c9adc5dea00000","0xf3cc8bcb559465f81bfe583bd7ab0a2306453b9e":"0x43c33c1937564800000","0xf3d688f06bbdbf50f9932c4145cbe48ecdf68904":"0x1158e460913d00000","0xf3dbcf135acb9dee1a489c593c024f03c2bbaece":"0x6c6b935b8bbd400000","0xf3de5f26ef6aded6f06d3b911346ee70401da4a0":"0x133ab37d9f9d030000","0xf3df63a97199933330383b3ed7570b96c4812334":"0x6c6b935b8bbd400000","0xf3e74f470c7d3a3f0033780f76a89f3ef691e6cb":"0xa3cfe631d143640000","0xf3eb1948b951e22df1617829bf3b8d8680ec6b68":"0xd8d726b7177a800000","0xf3f1fa3918ca34e2cf7e84670b1f4d8eca160db3":"0x24dce54d34a1a00000","0xf3f24fc29e20403fc0e8f5ebbb553426f78270a2":"0x56bc75e2d63100000","0xf3fa723552a5d0512e2b62f48dca7b2b8105305b":"0x76d41c62494840000","0xf3fe51fde34413c73318b9c85437fe7e820f561a":"0x3662325cd18fe00000","0xf400f93d5f5c7e3fc303129ac8fb0c2f786407fa":"0x6c6b935b8bbd400000","0xf40b134fea22c6b29c8457f49f000f9cda789adb":"0x2086ac351052600000","0xf41557dfdfb1a1bdcefefe2eba1e21fe0a4a9942":"0x6acb3df27e1f880000","0xf4177a0d85d48b0e264211ce2aa2efd3f1b47f08":"0xc2ccca26b7e80e8000","0xf42f905231c770f0a406f2b768877fb49eee0f21":"0xaadec983fcff40000","0xf432b9dbaf11bdbd73b6519fc0a904198771aac6":"0x83d6c7aab63600000","0xf43da3a4e3f5fab104ca9bc1a0f7f3bb4a56f351":"0x6c6acc67d7b1d40000","0xf447108b98df64b57e871033885c1ad71db1a3f9":"0x176f49ead3483508000","0xf44f8551ace933720712c5c491cdb6f2f951736c":"0xd8d726b7177a800000","0xf456055a11ab91ff668e2ec922961f2a23e3db25":"0xfc936392801c0000","0xf456a75bb99655a7412ce97da081816dfdb2b1f2":"0xad78ebc5ac6200000","0xf45b1dcb2e41dc27ffa024daadf619c11175c087":"0x11164759ffb320000","0xf463a90cb3f13e1f0643423636beab84c123b06d":"0x22b1c8c1227a00000","0xf468906e7edf664ab0d8be3d83eb7ab3f7ffdc78":"0x5c283d410394100000","0xf46980e3a4a9d29a6a6e90604537a3114bcb2897":"0x1b1ae4d6e2ef500000","0xf46b6b9c7cb552829c1d3dfd8ffb11aabae782f6":"0x1236efcbcbb340000","0xf476e1267f86247cc908816f2e7ad5388c952db0":"0xd8d726b7177a800000","0xf476f2cb7208a32e051fd94ea8662992638287a2":"0x56bc75e2d63100000","0xf47bb134da30a812d003af8dccb888f44bbf5724":"0x11959b7fe3395580000","0xf483f607a21fcc28100a018c568ffbe140380410":"0x3635c9adc5dea00000","0xf48e1f13f6af4d84b371d7de4b273d03a263278e":"0x2086ac351052600000","0xf49c47b3efd86b6e6a5bc9418d1f9fec814b69ef":"0x43c33c1937564800000","0xf49f6f9baabc018c8f8e119e0115f491fc92a8a4":"0x21e19e0c9bab2400000","0xf4a367b166d2991a2bfda9f56463a09f252c1b1d":"0x6acb3df27e1f880000","0xf4a51fce4a1d5b94b0718389ba4e7814139ca738":"0x1043561a8829300000","0xf4a9d00cefa97b7a58ef9417fc6267a5069039ee":"0x12e89287fa7840000","0xf4aaa3a6163e3706577b49c0767e948a681e16ee":"0x6c6b935b8bbd400000","0xf4b1626e24f30bcad9273c527fcc714b5d007b8f":"0xad78ebc5ac6200000","0xf4b49100757772f33c177b9a76ba95226c8f3dd8":"0x16b352da5e0ed300000","0xf4b6cdcfcb24230b337d770df6034dfbd4e1503f":"0x405fdf7e5af85e00000","0xf4b759cc8a1c75f80849ebbcda878dc8f0d66de4":"0x15af1d78b58c400000","0xf4ba6a46d55140c439cbcf076cc657136262f4f8":"0x6c6b935b8bbd400000","0xf4d67a9044b435b66e8977ff39a28dc4bd53729a":"0xad78ebc5ac6200000","0xf4d97664cc4eec9edbe7fa09f4750a663b507d79":"0xd8d726b7177a800000","0xf4dc7ba85480bbb3f535c09568aaa3af6f3721c6":"0x1871fb6307e35e50000","0xf4ebf50bc7e54f82e9b9bd24baef29438e259ce6":"0x21e19e0c9bab2400000","0xf4ec8e97a20aa5f8dd206f55207e06b813df2cc0":"0xad78ebc5ac6200000","0xf4ed848ec961739c2c7e352f435ba70a7cd5db38":"0x6acb3df27e1f880000","0xf4fc4d39bc0c2c4068a36de50e4ab4d4db7e340a":"0x16037df87ef6a0000","0xf504943aaf16796e0b341bbcdf21d11cc586cdd1":"0x1e7e4171bf4d3a00000","0xf5061ee2e5ee26b815503677130e1de07a52db07":"0x56bc75e2d63100000","0xf509557e90183fbf0f0651a786487bcc428ba175":"0xa844a7424d9c80000","0xf50abbd4aa45d3eb88515465a8ba0b310fd9b521":"0x16a6502f15a1e540000","0xf50ae7fab4cfb5a646ee04ceadf9bf9dd5a8e540":"0xd8d67c2f5895480000","0xf50cbafd397edd556c0678988cb2af5c2617e0a2":"0x26d07efe782bb00000","0xf51fded80acb502890e87369741f3722514cefff":"0x43c3456ca3c6d110000","0xf52a5882e8927d944b359b26366ba2b9cacfbae8":"0x54b41ce2fe63ba80000","0xf52c0a7877345fe0c233bb0f04fd6ab18b6f14ba":"0x54cbe55989f38de00000","0xf5437e158090b2a2d68f82b54a5864b95dd6dbea":"0xd96c16703b2bfe0000","0xf54c19d9ef3873bfd1f7a622d02d86249a328f06":"0x960ae127af32fb28000","0xf5500178cb998f126417831a08c2d7abfff6ab5f":"0x46f4f4a5875a9f8000","0xf5534815dc635efa5cc84b2ac734723e21b29372":"0x55a6e79ccd1d300000","0xf555a27bb1e2fd4e2cc784caee92939fc06e2fc9":"0x6c6b935b8bbd400000","0xf558a2b2dd26dd9593aae04531fd3c3cc3854b67":"0xabbcd4ef377580000","0xf56048dd2181d4a36f64fcecc6215481e42abc15":"0xad78ebc5ac6200000","0xf56442f60e21691395d0bffaa9194dcaff12e2b7":"0xe18398e7601900000","0xf579714a45eb8f52c3d57bbdefd2c15b2e2f11df":"0x54915956c409600000","0xf593c65285ee6bbd6637f3be8f89ad40d489f655":"0xa2a15d09519be00000","0xf598db2e09a8a5ee7d720d2b5c43bb126d11ecc2":"0xad78ebc5ac6200000","0xf59dab1bf8df11327e61f9b7a14b563a96ec3554":"0x14542ba12a337c00000","0xf59f9f02bbc98efe097eabb78210979021898bfd":"0x21e171a3ec9f72c0000","0xf5a5459fcdd5e5b273830df88eea4cb77ddadfb9":"0x409e52b48369a0000","0xf5a7676ad148ae9c1ef8b6f5e5a0c2c473be850b":"0xad78ebc5ac6200000","0xf5b068989df29c253577d0405ade6e0e7528f89e":"0x57473d05dabae80000","0xf5b6e9061a4eb096160777e26762cf48bdd8b55d":"0xdc55fdb17647b0000","0xf5cffbba624e7eb321bc83c60ca68199b4e36671":"0x6c6b935b8bbd400000","0xf5d14552b1dce0d6dc1f320da6ffc8a331cd6f0c":"0x487a9a304539440000","0xf5d61ac4ca95475e5b7bffd5f2f690b316759615":"0x692ae8897081d000000","0xf5d9cf00d658dd45517a48a9d3f5f633541a533d":"0x64f5fdf494f780000","0xf5eadcd2d1b8657a121f33c458a8b13e76b65526":"0xd8b0f5a5ac24a0000","0xf607c2150d3e1b99f24fa1c7d540add35c4ebe1e":"0xa7f1aa07fc8faa0000","0xf60bd735543e6bfd2ea6f11bff627340bc035a23":"0x6c6b935b8bbd400000","0xf60c1b45f164b9580e20275a5c39e1d71e35f891":"0x6c6b935b8bbd400000","0xf60f62d73937953fef35169e11d872d2ea317eec":"0x121ea68c114e5100000","0xf61283b4bd8504058ca360e993999b62cbc8cd67":"0xdd2d5fcf3bc9c0000","0xf617b967b9bd485f7695d2ef51fb7792d898f500":"0x1b1ae4d6e2ef500000","0xf618d9b104411480a863e623fc55232d1a4f48aa":"0xe689e6d44b1668000","0xf622e584a6623eaaf99f2be49e5380c5cbcf5cd8":"0xad78ebc5ac6200000","0xf632adff490da4b72d1236d04b510f74d2faa3cd":"0x4be4e7267b6ae00000","0xf639ac31da9f67271bd10402b7654e5ce763bd47":"0x15af0f42baf9260000","0xf63a579bc3eac2a9490410128dbcebe6d9de8243":"0x50c5e761a444080000","0xf645dd7c890093e8e4c8aa92a6bb353522d3dc98":"0x7439fa2099e580000","0xf648ea89c27525710172944e79edff847803b775":"0x152d02c7e14af6800000","0xf64a4ac8d540a9289c68d960d5fb7cc45a77831c":"0x6c6b935b8bbd400000","0xf64ecf2117931c6d535a311e4ffeaef9d49405b8":"0x90f534608a72880000","0xf64fe0939a8d1eea2a0ecd9a9730fd7958e33109":"0x11de1e6db450c0000","0xf65616be9c8b797e7415227c9138faa0891742d7":"0x2ad373ce668e980000","0xf657fcbe682eb4e8db152ecf892456000b513d15":"0x692ae8897081d00000","0xf65819ac4cc14c137f05dd7977c7dae08d1a4ab5":"0x58788cb94b1d80000","0xf67bb8e2118bbcd59027666eedf6943ec9f880a5":"0xd8d726b7177a800000","0xf68464bf64f2411356e4d3250efefe5c50a5f65b":"0x1158e460913d00000","0xf686785b89720b61145fea80978d6acc8e0bc196":"0xd8d726b7177a800000","0xf68c5e33fa97139df5b2e63886ce34ebf3e4979c":"0xb3fa4169e2d8e00000","0xf6a8635757c5e8c134d20d028cf778cf8609e46a":"0x4f1d772faec17c0000","0xf6b782f4dcd745a6c0e2e030600e04a24b25e542":"0x15af1d78b58c400000","0xf6bc37b1d2a3788d589b6de212dc1713b2f6e78e":"0x10f0cf064dd59200000","0xf6c3c48a1ac0a34799f04db86ec7a975fe7768f3":"0x6acb3df27e1f880000","0xf6d25d3f3d846d239f525fa8cac97bc43578dbac":"0x30927f74c9de000000","0xf6eaac7032d492ef17fd6095afc11d634f56b382":"0x1b1b6bd7af64c70000","0xf6ead67dbf5b7eb13358e10f36189d53e643cfcf":"0x878678326eac9000000","0xf6f1a44309051c6b25e47dff909b179bb9ab591c":"0x692ae8897081d00000","0xf70328ef97625fe745faa49ee0f9d4aa3b0dfb69":"0x3635c9adc5dea00000","0xf70a998a717b338d1dd99854409b1a338deea4b0":"0x6c6b935b8bbd400000","0xf70d637a845c06db6cdc91e6371ce7c4388a628e":"0x1158e460913d00000","0xf7155213449892744bc60f2e04400788bd041fdd":"0x39fbae8d042dd0000","0xf71b4534f286e43093b1e15efea749e7597b8b57":"0x161c13d3341c87280000","0xf734ec03724ddee5bb5279aa1afcf61b0cb448a1":"0xe5bf2cc9b097800000","0xf736dc96760012388fe88b66c06efe57e0d7cf0a":"0x71d75ab9b920500000","0xf73ac46c203be1538111b151ec8220c786d84144":"0xff7377817b82b8000","0xf73dd9c142b71bce11d06e30e7e7d032f2ec9c9e":"0x6acb3df27e1f880000","0xf7418aa0e713d248228776b2e7434222ae75e3a5":"0x6c6b935b8bbd400000","0xf74e6e145382b4db821fe0f2d98388f45609c69f":"0x56bc75e2d63100000","0xf7500c166f8bea2f82347606e5024be9e4f4ce99":"0x1158e460913d00000","0xf757fc8720d3c4fa5277075e60bd5c411aebd977":"0x6c6b935b8bbd400000","0xf75bb39c799779ebc04a336d260da63146ed98d0":"0x15af1d78b58c40000","0xf768f321fd6433d96b4f354d3cc1652c1732f57f":"0x21e19e0c9bab2400000","0xf76f69cee4faa0a63b30ae1e7881f4f715657010":"0xad78ebc5ac6200000","0xf777361a3dd8ab62e5f1b9b047568cc0b555704c":"0x3635c9adc5dea00000","0xf77c7b845149efba19e261bc7c75157908afa990":"0x6c6b935b8bbd400000","0xf77f9587ff7a2d7295f1f571c886bd33926a527c":"0x6c68ccd09b022c0000","0xf78258c12481bcdddbb72a8ca0c043097261c6c5":"0x1158e460913d00000","0xf798d16da4e460c460cd485fae0fa0599708eb82":"0x3635c9adc5dea00000","0xf7a1ade2d0f529123d1055f19b17919f56214e67":"0x1b1ae4d6e2ef500000","0xf7acff934b84da0969dc37a8fcf643b7d7fbed41":"0x6c6acc67d7b1d40000","0xf7b151cc5e571c17c76539dbe9964cbb6fe5de79":"0x74717cfb6883100000","0xf7b29b82195c882dab7897c2ae95e77710f57875":"0x7735416132dbfc0000","0xf7bc4c44910d5aedd66ed2355538a6b193c361ec":"0x541de2c2d8d620000","0xf7c00cdb1f020310d5acab7b496aaa44b779085e":"0x5a87e7d7f5f6580000","0xf7c1b443968b117b5dd9b755572fcd39ca5ec04b":"0x18b968c292f1b50000","0xf7c50f922ad16b61c6d1baa045ed816815bac48f":"0x2a9396a9784ad7d0000","0xf7c708015071d4fb0a3a2a09a45d156396e3349e":"0xa2a15d09519be00000","0xf7cbdba6be6cfe68dbc23c2b0ff530ee05226f84":"0x1158e460913d00000","0xf7d0d310acea18406138baaabbfe0571e80de85f":"0x487a9a304539440000","0xf7d7af204c56f31fd94398e40df1964bd8bf123c":"0x821d221b5291f8000","0xf7dc251196fbcbb77c947d7c1946b0ff65021cea":"0x3635c9adc5dea00000","0xf7e45a12aa711c709acefe95f33b78612d2ad22a":"0xe0655e2f26bc9180000","0xf7f4898c4c526d955f21f055cb6e47b915e51964":"0x7c0860e5a80dc00000","0xf7f91e7acb5b8129a306877ce3168e6f438b66a1":"0x98a7d9b8314c00000","0xf7fc45abf76f5088e2e5b5a8d132f28a4d4ec1c0":"0x6c6b935b8bbd400000","0xf8063af4cc1dd9619ab5d8bff3fcd1faa8488221":"0x6c6b935b8bbd400000","0xf8086e42661ea929d2dda1ab6c748ce3055d111e":"0x3635c9adc5dea00000","0xf8087786b42da04ed6d1e0fe26f6c0eefe1e9f5a":"0x21e19e0c9bab2400000","0xf80d3619702fa5838c48391859a839fb9ce7160f":"0x6c07a7d1b16e700000","0xf814799f6ddf4dcb29c7ee870e75f9cc2d35326d":"0x3635c9adc5dea00000","0xf815c10a032d13c34b8976fa6e3bd2c9131a8ba9":"0x487a9a304539440000","0xf81622e55757daea6675975dd93538da7d16991e":"0x6c6b935b8bbd400000","0xf824ee331e4ac3cc587693395b57ecf625a6c0c2":"0x56c95de8e8ca1d0000","0xf827d56ed2d32720d4abf103d6d0ef4d3bcd559b":"0x16c80065791a28000","0xf8298591523e50b103f0b701d623cbf0f74556f6":"0xad78ebc5ac6200000","0xf848fce9ab611c7d99206e23fac69ad488b94fe1":"0x2a1129d0936720000","0xf84f090adf3f8db7e194b350fbb77500699f66fd":"0x6acb3df27e1f880000","0xf851b010f633c40af1a8f06a73ebbaab65077ab5":"0xee86442fcd06c00000","0xf858171a04d357a13b4941c16e7e55ddd4941329":"0x246a5218f2a000000","0xf85bab1cb3710fc05fa19ffac22e67521a0ba21d":"0x6c95357fa6b36c0000","0xf86a3ea8071f7095c7db8a05ae507a8929dbb876":"0x1236efcbcbb3400000","0xf8704c16d2fd5ba3a2c01d0eb20484e6ecfa3109":"0xad78ebc5ac6200000","0xf870995fe1e522321d754337a45c0c9d7b38951c":"0x1158e460913d00000","0xf873e57a65c93b6e18cb75f0dc077d5b8933dc5c":"0xaadec983fcff40000","0xf875619d8a23e45d8998d184d480c0748970822a":"0xd8d726b7177a800000","0xf87bb07b289df7301e54c0efda6a2cf291e89200":"0x4be4e7267b6ae00000","0xf88900db737955b1519b1a7d170a18864ce590eb":"0xfc936392801c0000","0xf88b58db37420b464c0be88b45ee2b95290f8cfa":"0x22b1c8c1227a00000","0xf8962b75db5d24c7e8b7cef1068c3e67cebb30a5":"0xf2dc7d47f15600000","0xf8a065f287d91d77cd626af38ffa220d9b552a2b":"0x678a932062e4180000","0xf8a49ca2390c1f6d5c0e62513b079571743f7cc6":"0xa2a15d09519be00000","0xf8a50cee2e688ceee3aca4d4a29725d4072cc483":"0x6c6b935b8bbd400000","0xf8ac4a39b53c11307820973b441365cffe596f66":"0x6c6b935b8bbd400000","0xf8ae857b67a4a2893a3fbe7c7a87ff1c01c6a6e7":"0xd8d726b7177a800000","0xf8bf9c04874e5a77f38f4c38527e80c676f7b887":"0x6c6b935b8bbd400000","0xf8c7f34a38b31801da43063477b12b27d0f203ff":"0x1ad2baba6fef480000","0xf8ca336c8e91bd20e314c20b2dd4608b9c8b9459":"0x2ddc9bc5b32c780000","0xf8d17424c767bea31205739a2b57a7277214eebe":"0x246ddf97976680000","0xf8d52dcc5f96cc28007b3ecbb409f7e22a646caa":"0x81690e18128480000","0xf8dce867f0a39c5bef9eeba609229efa02678b6c":"0x6c6b935b8bbd400000","0xf8f226142a428434ab17a1864a2597f64aab2f06":"0x9598b2fb2e9f28000","0xf8f6645e0dee644b3dad81d571ef9baf840021ad":"0x6c6b935b8bbd400000","0xf901c00fc1db88b69c4bc3252b5ca70ea6ee5cf6":"0x15af1d78b58c400000","0xf93d5bcb0644b0cce5fcdda343f5168ffab2877d":"0xb6207b67d26f90000","0xf9570e924c95debb7061369792cf2efec2a82d5e":"0x1158e460913d00000","0xf9642086b1fbae61a6804dbe5fb15ec2d2b537f4":"0x6c6b935b8bbd400000","0xf96488698590dc3b2c555642b871348dfa067ad5":"0x1b1ae4d6e2ef500000","0xf964d98d281730ba35b2e3a314796e7b42fedf67":"0x53b0876098d80c0000","0xf9650d6989f199ab1cc479636ded30f241021f65":"0x2e141ea081ca080000","0xf96883582459908c827627e86f28e646f9c7fc7a":"0x1c4a78737cdcfb80000","0xf96b4c00766f53736a8574f822e6474c2f21da2d":"0x15af1d78b58c400000","0xf9729d48282c9e87166d5eef2d01eda9dbf78821":"0x56b83ddc728548000","0xf9767e4ecb4a5980527508d7bec3d45e4c649c13":"0x678a932062e4180000","0xf978b025b64233555cc3c19ada7f4199c9348bf7":"0x54b40b1f852bda000000","0xf97b56ebd5b77abc9fbacbabd494b9d2c221cd03":"0x6acb3df27e1f880000","0xf9811fa19dadbf029f8bfe569adb18228c80481a":"0xad78ebc5ac6200000","0xf98250730c4c61c57f129835f2680894794542f3":"0xd8d726b7177a800000","0xf989346772995ec1906faffeba2a7fe7de9c6bab":"0x16a6502f15a1e540000","0xf998ca3411730a6cd10e7455b0410fb0f6d3ff80":"0x6c6b935b8bbd400000","0xf99aee444b5783c093cfffd1c4632cf93c6f050c":"0x15af1d78b58c400000","0xf99eeece39fa7ef5076d855061384009792cf2e0":"0x1b1ae4d6e2ef500000","0xf9a59c3cc5ffacbcb67be0fc7256f64c9b127cb4":"0x6c6b935b8bbd400000","0xf9a94bd56198da245ed01d1e6430b24b2708dcc0":"0x28a77afda87ee50000","0xf9b37825f03073d31e249378c30c795c33f83af2":"0xad9aabf8c9bfc0000","0xf9b617f752edecae3e909fbb911d2f8192f84209":"0x90f534608a72880000","0xf9bfb59d538afc4874d4f5941b08c9730e38e24b":"0x22b1c8c1227a00000","0xf9dd239008182fb519fb30eedd2093fed1639be8":"0x1b1ae4d6e2ef500000","0xf9debaecb5f339beea4894e5204bfa340d067f25":"0x5a42844673b1640000","0xf9e37447406c412197b2e2aebc001d6e30c98c60":"0x1c479bb4349c0ee0000","0xf9e7222faaf0f4da40c1c4a40630373a09bed7b6":"0x9b4fdcb09456240000","0xf9ece022bccd2c92346911e79dd50303c01e0188":"0x3635c9adc5dea00000","0xfa00c376e89c05e887817a9dd0748d96f341aa89":"0x104d0d00d2b7f60000","0xfa0c1a988c8a17ad3528eb28b3409daa58225f26":"0xad78ebc5ac6200000","0xfa105f1a11b6e4b1f56012a27922e2ac2da4812f":"0x205b4dfa1ee74780000","0xfa142fe47eda97e6503b386b18a2bedd73ccb5b1":"0x2e153ad81548100000","0xfa14b566234abee73042c31d21717182cba14aa1":"0x11c7ea162e78200000","0xfa19d6f7a50f4f079893d167bf14e21d0073d196":"0x1cbb3a3ff08d080000","0xfa1f1971a775c3504fef5079f640c2c4bce7ac05":"0x6c6b935b8bbd400000","0xfa279bfd8767f956bf7fa0bd5660168da75686bd":"0x90f534608a72880000","0xfa27cc49d00b6c987336a875ae39da58fb041b2e":"0x21e19e0c9bab2400000","0xfa283299603d8758e8cab082125d2c8f7d445429":"0x15bcacb1e0501ae8000","0xfa2bbca15d3fe39f8a328e91f90da14f7ac6253d":"0xad78ebc5ac6200000","0xfa2fd29d03fee9a07893df3a269f56b72f2e1e64":"0x21e19e0c9bab2400000","0xfa33553285a973719a0d5f956ff861b2d89ed304":"0x1158e460913d00000","0xfa3a0c4b903f6ea52ea7ab7b8863b6a616ad6650":"0x1158e460913d00000","0xfa3a1aa4488b351aa7560cf5ee630a2fd45c3222":"0x2fa47e6aa7340d0000","0xfa410971ad229c3036f41acf852f2ac999281950":"0xd8b311a8ddfa7c0000","0xfa44a855e404c86d0ca8ef3324251dfb349c539e":"0x542253a126ce400000","0xfa5201fe1342af11307b9142a041243ca92e2f09":"0x2038116a3ac043980000","0xfa60868aafd4ff4c5c57914b8ed58b425773dfa9":"0x1cfe5c808f39fbc0000","0xfa67b67b4f37a0150915110ede073b05b853bda2":"0x2319ba947371ad0000","0xfa68e0cb3edf51f0a6f211c9b2cb5e073c9bffe6":"0xfc936392801c00000","0xfa6a37f018e97967937fc5e8617ba1d786dd5f77":"0x43c30fb0884a96c0000","0xfa7606435b356cee257bd2fcd3d9eacb3cd1c4e1":"0x56bc75e2d63100000","0xfa7adf660b8d99ce15933d7c5f072f3cbeb99d33":"0x14061b9d77a5e980000","0xfa86ca27bf2854d98870837fb6f6dfe4bf6453fc":"0x11757e8525cf148000","0xfa8cf4e627698c5d5788abb7880417e750231399":"0xe61a3696eef6100000","0xfa8e3b1f13433900737daaf1f6299c4887f85b5f":"0x26c29e47c4844c0000","0xfa9ec8efe08686fa58c181335872ba698560ecab":"0x6c6acc67d7b1d40000","0xfaad905d847c7b23418aeecbe3addb8dd3f8924a":"0x6acb3df27e1f880000","0xfaaeba8fc0bbda553ca72e30ef3d732e26e82041":"0x488d282aafc9f68000","0xfab487500df20fb83ebed916791d561772adbebf":"0x6c6b4c4da6ddbe0000","0xfac5ca94758078fbfccd19db3558da7ee8a0a768":"0x3728a62b0dcff60000","0xfad96ab6ac768ad5099452ac4777bd1a47edc48f":"0x56bc75e2d63100000","0xfae76719d97eac41870428e940279d97dd57b2f6":"0x14dbb2195ca228900000","0xfae881937047895a660cf229760f27e66828d643":"0x9ddc1e3b901180000","0xfae92c1370e9e1859a5df83b56d0f586aa3b404c":"0x5c5b4f3d843980000","0xfaf5f0b7b6d558f5090d9ea1fb2d42259c586078":"0x15affb8420c6b640000","0xfb126f0ec769f49dcefca2f200286451583084b8":"0x10fcbc2350396bf0000","0xfb135eb15a8bac72b69915342a60bbc06b7e077c":"0x43c33c1937564800000","0xfb223c1e22eac1269b32ee156a5385922ed36fb8":"0x6c6b935b8bbd400000","0xfb37cf6b4f81a9e222fba22e9bd24b5098b733cf":"0x21a754a6dc5280000","0xfb3860f4121c432ebdc8ec6a0331b1b709792e90":"0x208c394af1c8880000","0xfb39189af876e762c71d6c3e741893df226cedd6":"0xd8d726b7177a800000","0xfb3a0b0d6b6a718f6fc0292a825dc9247a90a5d0":"0xad6dd199e975b0000","0xfb3fa1ac08aba9cc3bf0fe9d483820688f65b410":"0x65a4da25d3016c00000","0xfb3fe09bb836861529d7518da27635f538505615":"0x4be39216fda0700000","0xfb5125bf0f5eb0b6f020e56bfc2fdf3d402c097e":"0x14061b9d77a5e980000","0xfb5518714cefc36d04865de5915ef0ff47dfe743":"0x6c6b935b8bbd400000","0xfb5ffaa0f7615726357891475818939d2037cf96":"0x1158e460913d00000","0xfb685c15e439965ef626bf0d834cd1a89f2b5695":"0xd5967be4fc3f100000","0xfb744b951d094b310262c8f986c860df9ab1de65":"0x2d1c515f1cb4a8000","0xfb79abdb925c55b9f98efeef64cfc9eb61f51bb1":"0x6140c056fb0ac80000","0xfb8113f94d9173eefd5a3073f516803a10b286ae":"0x4563918244f400000","0xfb842ca2c5ef133917a236a0d4ac40690110b038":"0x10969a62be15880000","0xfb91fb1a695553f0c68e21276decf0b83909b86d":"0x56c003617af780000","0xfb9473cf7712350a1fa0395273fc80560752e4fb":"0x6af2198ba85aa0000","0xfb949c647fdcfd2514c7d58e31f28a532d8c5833":"0x43c33c1937564800000","0xfba5486d53c6e240494241abf87e43c7600d413a":"0x6bbf61494948340000","0xfbb161fe875f09290a4b262bc60110848f0d2226":"0x6c6b935b8bbd400000","0xfbbbebcfbe235e57dd2306ad1a9ec581c7f9f48f":"0x22b1c8c1227a00000","0xfbc01db54e47cdc3c438694ab717a856c23fe6e9":"0x1ca7150ab174f470000","0xfbcfcc4a7b0f26cf26e9f3332132e2fc6a230766":"0x1b1ae4d6e2ef5000000","0xfbe71622bcbd31c1a36976e7e5f670c07ffe16de":"0x15af1d78b58c400000","0xfbede32c349f3300ef4cd33b4de7dc18e443d326":"0xab4dcf399a3a600000","0xfbf204c813f836d83962c7870c7808ca347fd33e":"0x1158e460913d00000","0xfbf75933e01b75b154ef0669076be87f62dffae1":"0x10846372f249d4c00000","0xfc0096b21e95acb8d619d176a4a1d8d529badbef":"0x14d9693bcbec028000","0xfc00a420a36107dfd5f495128a5fe5abb2db0f34":"0x143179d869110200000","0xfc018a690ad6746dbe3acf9712ddca52b6250039":"0x21e19e0c9bab2400000","0xfc02734033e57f70517e0afc7ee62461f06fad8e":"0x155bd9307f9fe80000","0xfc0ee6f7c2b3714ae9916c45566605b656f32441":"0x5f68e8131ecf800000","0xfc10b7a67b3268d5331bfb6a14def5ea4a162ca3":"0xad78ebc5ac6200000","0xfc15cb99a8d1030b12770add033a79ee0d0c908c":"0x12fa00bd52e6240000","0xfc2952b4c49fedd0bc0528a308495e6d6a1c71d6":"0x6c6b935b8bbd400000","0xfc2c1f88961d019c3e9ea33009152e0693fbf88a":"0x1b1ae4d6e2ef5000000","0xfc361105dd90f9ede566499d69e9130395f12ac8":"0x53a4fe2f204e80e00000","0xfc372ff6927cb396d9cf29803500110da632bc52":"0x6c6b935b8bbd400000","0xfc39be41094b1997d2169e8264c2c3baa6c99bc4":"0x6c6b935b8bbd400000","0xfc3d226bb36a58f526568857b0bb12d109ec9301":"0x6c6b935b8bbd400000","0xfc43829ac787ff88aaf183ba352aadbf5a15b193":"0xd6ac0a2b0552e00000","0xfc49c1439a41d6b3cf26bb67e0365224e5e38f5f":"0x3636d7af5ec98e0000","0xfc5500825105cf712a318a5e9c3bfc69c89d0c12":"0xd8d726b7177a800000","0xfc66faba277f4b5de64ad45eb19c31e00ced3ed5":"0x131beb925ffd3200000","0xfc7e22a503ec5abe9b08c50bd14999f520fa4884":"0x15a477dfbe1ea148000","0xfc8215a0a69913f62a43bf1c8590b9ddcd0d8ddb":"0x6c6b935b8bbd400000","0xfc989cb487bf1a7d17e4c1b7c4b7aafdda6b0a8d":"0x1158e460913d00000","0xfc9b347464b2f9929d807e039dae48d3d98de379":"0x2f6f10780d22cc00000","0xfca43bbc23a0d321ba9e46b929735ce7d8ef0c18":"0x1158e460913d00000","0xfca73eff8771c0103ba3cc1a9c259448c72abf0b":"0x3635c9adc5dea00000","0xfcada300283f6bcc134a91456760b0d77de410e0":"0x6c6b935b8bbd400000","0xfcbc5c71ace79741450b012cf6b8d3f17db68a70":"0x205b4dfa1ee74780000","0xfcbd85feea6a754fcf3449449e37ff9784f7773c":"0xa74ada69abd7780000","0xfcc9d4a4262e7a027ab7519110d802c495ceea39":"0x1595182224b26480000","0xfccd0d1ecee27addea95f6857aeec8c7a04b28ee":"0x21e19e0c9bab2400000","0xfcd0b4827cd208ffbf5e759dba8c3cc61d8c2c3c":"0x1b1ae4d6e2ef5000000","0xfce089635ce97abac06b44819be5bb0a3e2e0b37":"0x503920a7630a78000","0xfcf199f8b854222f182e4e1d099d4e323e2aae01":"0x3635c9adc5dea00000","0xfcfc3a5004d678613f0b36a642269a7f371c3f6a":"0x3635c9adc5dea00000","0xfd191a35157d781373fb411bf9f25290047c5eef":"0x3635c9adc5dea00000","0xfd1faa347b0fcc804c2da86c36d5f1d18b7087bb":"0x2d6eb247a96f60000","0xfd1fb5a89a89a721b8797068fbc47f3e9d52e149":"0xcd0b5837fc6580000","0xfd204f4f4aba2525ba728afdf78792cbdeb735ae":"0x6c6b935b8bbd400000","0xfd2757cc3551a095878d97875615fe0c6a32aa8a":"0x206db15299beac0000","0xfd2872d19e57853cfa16effe93d0b1d47b4f93fb":"0xd8d726b7177a800000","0xfd2929271e9d2095a264767e7b0df52ea0d1d400":"0xa2a1eb251b5ae40000","0xfd377a385272900cb436a3bb7962cdffe93f5dad":"0x6c6b935b8bbd400000","0xfd40242bb34a70855ef0fd90f3802dec2136b327":"0x68a875073e29240000","0xfd452c3969ece3801c542020f1cdcaa1c71ed23d":"0x152d02c7e14af6800000","0xfd4b551f6fdbcda6c511b5bb372250a6b783e534":"0x11de1e6db450c0000","0xfd4b989558ae11be0c3b36e2d6f2a54a9343ca2e":"0x6c6b935b8bbd400000","0xfd4de8e3748a289cf7d060517d9d38388db01fb8":"0xd8d726b7177a80000","0xfd5a63157f914fd398eab19c137dd9550bb7715c":"0x56bc75e2d63100000","0xfd60d2b5af3d35f7aaf0c393052e79c4d823d985":"0x30eb50d2e14080000","0xfd686de53fa97f99639e2568549720bc588c9efc":"0x6ac5c62d9486070000","0xfd7ede8f5240a06541eb699d782c2f9afb2170f6":"0x487a9a304539440000","0xfd812bc69fb170ef57e2327e80affd14f8e4b6d2":"0x6c6b935b8bbd400000","0xfd88d114220f081cb3d5e15be8152ab07366576a":"0x1043561a8829300000","0xfd918536a8efa6f6cefe1fa1153995fef5e33d3b":"0x1b1ae4d6e2ef500000","0xfd920f722682afb5af451b0544d4f41b3b9d5742":"0x7e52056a123f3c0000","0xfd9579f119bbc819a02b61e38d8803c942f24d32":"0x5b97e9081d9400000","0xfda0ce15330707f10bce3201172d2018b9ddea74":"0x2d041d705a2c60000","0xfda3042819af3e662900e1b92b4358eda6e92590":"0x1907a284d58f63e00000","0xfda6810ea5ac985d6ffbf1c511f1c142edcfddf7":"0xd8d726b7177a800000","0xfdb33944f2360615e5be239577c8a19ba52d9887":"0x209d922f5259c50000","0xfdba5359f7ec3bc770ac49975d844ec9716256f1":"0x3635c9adc5dea00000","0xfdc4d4765a942f5bf96931a9e8cc7ab8b757ff4c":"0x126c478a0e3ea8600000","0xfdcd5d80b105897a57abc47865768b2900524295":"0x15af1d78b58c4000000","0xfdd1195f797d4f35717d15e6f9810a9a3ff55460":"0xfc936392801c0000","0xfdd502a74e813bcfa355ceda3c176f6a6871af7f":"0x15af1d78b58c400000","0xfde395bc0b6d5cbb4c1d8fea3e0b4bff635e9db7":"0x6c6b935b8bbd400000","0xfdeaac2acf1d138e19f2fc3f9fb74592e3ed818a":"0x243d4d18229ca20000","0xfdecc82ddfc56192e26f563c3d68cb544a96bfed":"0x17da3a04c7b3e00000","0xfdf42343019b0b0c6bf260b173afab7e45b9d621":"0x6c6acc67d7b1d40000","0xfdf449f108c6fb4f5a2b081eed7e45e6919e4d25":"0x6c6b935b8bbd400000","0xfdfd6134c04a8ab7eb16f00643f8fed7daaaecb2":"0x15af1d78b58c400000","0xfe00bf439911a553982db638039245bcf032dbdc":"0x155bd9307f9fe80000","0xfe016ec17ec5f10e3bb98ff4a1eda045157682ab":"0x145f5402e7b2e60000","0xfe0e30e214290d743dd30eb082f1f0a5225ade61":"0xad78ebc5ac6200000","0xfe210b8f04dc6d4f76216acfcbd59ba83be9b630":"0x1158e460913d00000","0xfe22a0b388668d1ae2643e771dacf38a434223cc":"0xd8db5ebd7b26380000","0xfe362688845fa244cc807e4b1130eb3741a8051e":"0x3635c9adc5dea00000","0xfe3827d57630cf8761d512797b0b858e478bbd12":"0x1158e460913d00000","0xfe418b421a9c6d373602790475d2303e11a75930":"0x3708baed3d68900000","0xfe4249127950e2f896ec0e7e2e3d055aab10550f":"0x243d4d18229ca20000","0xfe4d8403216fd571572bf1bdb01d00578978d688":"0x215f835bc769da80000","0xfe53b94989d89964da2061539526bbe979dd2ea9":"0x68a875073e29240000","0xfe549bbfe64740189892932538daaf46d2b61d4f":"0x22b1c8c1227a00000","0xfe615d975c0887e0c9113ec7298420a793af8b96":"0x1b1ae4d6e2ef5000000","0xfe65c4188d7922576909642044fdc52395560165":"0xd8d726b7177a800000","0xfe697ff22ca547bfc95e33d960da605c6763f35b":"0x47d4119fd960940000","0xfe6a895b795cb4bf85903d3ce09c5aa43953d3bf":"0xb8507a820728200000","0xfe6f5f42b6193b1ad16206e4afb5239d4d7db45e":"0x5dc892aa1131c80000","0xfe7011b698bf3371132d7445b19eb5b094356aee":"0x6c6b935b8bbd400000","0xfe80e9232deaff19baf99869883a4bdf0004e53c":"0x2e62f20a69be400000","0xfe8e6e3665570dff7a1bda697aa589c0b4e9024a":"0x6c6b935b8bbd400000","0xfe8f1fdcab7fbec9a6a3fcc507619600505c36a3":"0x11164759ffb320000","0xfe91eccf2bd566afa11696c5049fa84c69630a52":"0x692ae8897081d00000","0xfe96c4cd381562401aa32a86e65b9d52fa8aee27":"0x8f1d5c1cae37400000","0xfe98c664c3e447a95e69bd582171b7176ea2a685":"0xd8d726b7177a800000","0xfe9ad12ef05d6d90261f96c8340a0381974df477":"0x6c6b935b8bbd400000","0xfe9c0fffefb803081256c0cf4d6659e6d33eb4fb":"0x52d542804f1ce00000","0xfe9cfc3bb293ddb285e625f3582f74a6b0a5a6cd":"0x6acb3df27e1f880000","0xfe9e1197d7974a7648dcc7a03112a88edbc9045d":"0x10afc1ade3b4ed40000","0xfeaca2ac74624bf348dac9985143cfd652a4be55":"0x5897fcbb02914088000","0xfead1803e5e737a68e18472d9ac715f0994cc2be":"0x1b1ae4d6e2ef500000","0xfeb8b8e2af716ae41fc7c04bcf29540156461e6b":"0x545174a528a77a0000","0xfeb92d30bf01ff9a1901666c5573532bfa07eeec":"0x3635c9adc5dea00000","0xfebc3173bc9072136354002b7b4fb3bfc53f22f1":"0x140ec80fa7ee880000","0xfebd48d0ffdbd5656cd5e686363a61145228f279":"0x97c9ce4cf6d5c00000","0xfebd9f81cf78bd5fb6c4b9a24bd414bb9bfa4c4e":"0x6be10fb8ed6e138000","0xfec06fe27b44c784b2396ec92f7b923ad17e9077":"0x6c6b935b8bbd400000","0xfec14e5485de2b3eef5e74c46146db8e454e0335":"0x9b41fbf9e0aec0000","0xfed8476d10d584b38bfa6737600ef19d35c41ed8":"0x62a992e53a0af00000","0xfeef3b6eabc94affd3310c1c4d0e65375e131119":"0x1158e460913d00000","0xfef09d70243f39ed8cd800bf9651479e8f4aca3c":"0xad78ebc5ac6200000","0xfef3b3dead1a6926d49aa32b12c22af54d9ff985":"0x3635c9adc5dea00000","0xff0b7cb71da9d4c1ea6ecc28ebda504c63f82fd1":"0x388a885df2fc6c0000","0xff0c3c7798e8733dd2668152891bab80a8be955c":"0x45946b0f9e9d60000","0xff0cb06c42e3d88948e45bd7b0d4e291aefeea51":"0x678a932062e4180000","0xff0cc8dac824fa24fc3caa2169e6e057cf638ad6":"0xd8d726b7177a800000","0xff0e2fec304207467e1e3307f64cbf30af8fd9cd":"0x6c6b935b8bbd400000","0xff128f4b355be1dc4a6f94fa510d7f15d53c2aff":"0x93739534d286800000","0xff12e49d8e06aa20f886293c0b98ed7eff788805":"0xd8d726b7177a800000","0xff207308ced238a6c01ad0213ca9eb4465d42590":"0x6c6acc67d7b1d40000","0xff26138330274df4e0a3081e6df7dd983ec6e78f":"0x6c6b935b8bbd400000","0xff2726294148b86c78a9372497e459898ed3fee3":"0x6acb3df27e1f880000","0xff3ded7a40d3aff0d7a8c45fa6136aa0433db457":"0x6c68ccd09b022c0000","0xff3eee57c34d6dae970d8b311117c53586cd3502":"0x5c283d410394100000","0xff3ef6ba151c21b59986ae64f6e8228bc9a2c733":"0x6c6b935b8bbd400000","0xff41d9e1b4effe18d8b0d1f63fc4255fb4e06c3d":"0x487a9a304539440000","0xff45cb34c928364d9cc9d8bb00373474618f06f3":"0x56bc75e2d63100000","0xff49a775814ec00051a795a875de24592ea400d4":"0x2a5a058fc295ed000000","0xff4a408f50e9e72146a28ce4fc8d90271f116e84":"0x6acb3df27e1f880000","0xff4d9c8484c43c42ff2c5ab759996498d323994d":"0xd8d726b7177a800000","0xff4fc66069046c525658c337a917f2d4b832b409":"0x6c6b935b8bbd400000","0xff5162f2354dc492c75fd6e3a107268660eecb47":"0x5c283d410394100000","0xff545bbb66fbd00eb5e6373ff4e326f5feb5fe12":"0x1158e460913d00000","0xff5e7ee7d5114821e159dca5e81f18f1bfffbff9":"0x6c6b935b8bbd400000","0xff61c9c1b7a3d8b53bba20b34466544b7b216644":"0x6c6b935b8bbd400000","0xff65511cada259260c1ddc41974ecaecd32d6357":"0x5f68e8131ecf800000","0xff7843c7010aa7e61519b762dfe49124a76b0e4e":"0xc5b17924412b9bb00000","0xff78541756ab2b706e0d70b18adb700fc4f1643d":"0x92896529baddc880000","0xff83855051ee8ffb70b4817dba3211ed2355869d":"0x15af1d78b58c400000","0xff850e3be1eb6a4d726c08fa73aad358f39706da":"0x692ae8897081d00000","0xff86e5e8e15b53909600e41308dab75f0e24e46b":"0x30eb50d2e140800000","0xff88ebacc41b3687f39e4b59e159599b80cba33f":"0x15af1d78b58c400000","0xff8a2ca5a81333f19998255f203256e1a819c0aa":"0xc249fdd3277800000","0xff8eb07de3d49d9d52bbe8e5b26dbe1d160fa834":"0xd814dcb94453080000","0xffa4aff1a37f984b0a67272149273ae9bd41e3bc":"0x21e19e0c9bab2400000","0xffa696ecbd787e66abae4fe87b635f07ca57d848":"0x487a9a304539440000","0xffac3db879a6c7158e8dec603b407463ba0d31cf":"0x6acb3df27e1f880000","0xffad3dd74e2c1f796ac640de56dc99b4c792a402":"0x10f0cf064dd59200000","0xffb04726dfa41afdc819168418610472970d7bfc":"0xd8d726b7177a800000","0xffb3bcc3196a8c3cb834cec94c34fed35b3e1054":"0x48a43c54602f700000","0xffb974673367f5c07be5fd270dc4b7138b074d57":"0x85ebc8bdb9066d8000","0xffb9c7217e66743031eb377af65c77db7359dcda":"0x22b1c8c1227a00000","0xffbc3da0381ec339c1c049eb1ed9ee34fdcea6ca":"0xd8d726b7177a800000","0xffc5fc4b7e8a0293ff39a3a0f7d60d2646d37a74":"0x6c6b935b8bbd400000","0xffc9cc3094b041ad0e076f968a0de3b167255866":"0x1770c1650beee80000","0xffd5170fd1a8118d558e7511e364b24906c4f6b3":"0x341d8cd27f1588000","0xffd6da958eecbc016bab91058440d39b41c7be83":"0x43c33c1937564800000","0xffe0e997f1977a615f5a315af413fd4869343ba0":"0x56cd55fc64dfe0000","0xffe28db53c9044b4ecd4053fd1b4b10d7056c688":"0x56bc75e2d63100000","0xffe2e28c3fb74749d7e780dc8a5d422538e6e451":"0xdbb81e05bc12d8000","0xffe8cbc1681e5e9db74a0f93f8ed25897519120f":"0x51b1d3839261ac0000","0xffeac0305ede3a915295ec8e61c7f881006f4474":"0x556f64c1fe7fa0000","0xffec0913c635baca2f5e57a37aa9fb7b6c9b6e26":"0x2ba39e82ed5d740000","0xfff33a3bd36abdbd412707b8e310d6011454a7ae":"0x1b1ae4d6e2ef5000000","0xfff4bad596633479a2a29f9a8b3f78eefd07e6ee":"0x56bc75e2d63100000","0xfff7ac99c8e4feb60c9750054bdc14ce1857f181":"0x3635c9adc5dea00000"}');

/***/ }),

/***/ "./node_modules/@ethereumjs/common/dist.browser/genesisStates/rinkeby.json":
/*!*********************************************************************************!*\
  !*** ./node_modules/@ethereumjs/common/dist.browser/genesisStates/rinkeby.json ***!
  \*********************************************************************************/
/***/ (function(module) {

"use strict";
module.exports = JSON.parse('{"0x0000000000000000000000000000000000000000":"0x1","0x0000000000000000000000000000000000000001":"0x1","0x0000000000000000000000000000000000000002":"0x1","0x0000000000000000000000000000000000000003":"0x1","0x0000000000000000000000000000000000000004":"0x1","0x0000000000000000000000000000000000000005":"0x1","0x0000000000000000000000000000000000000006":"0x1","0x0000000000000000000000000000000000000007":"0x1","0x0000000000000000000000000000000000000008":"0x1","0x0000000000000000000000000000000000000009":"0x1","0x000000000000000000000000000000000000000a":"0x1","0x000000000000000000000000000000000000000b":"0x1","0x000000000000000000000000000000000000000c":"0x1","0x000000000000000000000000000000000000000d":"0x1","0x000000000000000000000000000000000000000e":"0x1","0x000000000000000000000000000000000000000f":"0x1","0x0000000000000000000000000000000000000010":"0x1","0x0000000000000000000000000000000000000011":"0x1","0x0000000000000000000000000000000000000012":"0x1","0x0000000000000000000000000000000000000013":"0x1","0x0000000000000000000000000000000000000014":"0x1","0x0000000000000000000000000000000000000015":"0x1","0x0000000000000000000000000000000000000016":"0x1","0x0000000000000000000000000000000000000017":"0x1","0x0000000000000000000000000000000000000018":"0x1","0x0000000000000000000000000000000000000019":"0x1","0x000000000000000000000000000000000000001a":"0x1","0x000000000000000000000000000000000000001b":"0x1","0x000000000000000000000000000000000000001c":"0x1","0x000000000000000000000000000000000000001d":"0x1","0x000000000000000000000000000000000000001e":"0x1","0x000000000000000000000000000000000000001f":"0x1","0x0000000000000000000000000000000000000020":"0x1","0x0000000000000000000000000000000000000021":"0x1","0x0000000000000000000000000000000000000022":"0x1","0x0000000000000000000000000000000000000023":"0x1","0x0000000000000000000000000000000000000024":"0x1","0x0000000000000000000000000000000000000025":"0x1","0x0000000000000000000000000000000000000026":"0x1","0x0000000000000000000000000000000000000027":"0x1","0x0000000000000000000000000000000000000028":"0x1","0x0000000000000000000000000000000000000029":"0x1","0x000000000000000000000000000000000000002a":"0x1","0x000000000000000000000000000000000000002b":"0x1","0x000000000000000000000000000000000000002c":"0x1","0x000000000000000000000000000000000000002d":"0x1","0x000000000000000000000000000000000000002e":"0x1","0x000000000000000000000000000000000000002f":"0x1","0x0000000000000000000000000000000000000030":"0x1","0x0000000000000000000000000000000000000031":"0x1","0x0000000000000000000000000000000000000032":"0x1","0x0000000000000000000000000000000000000033":"0x1","0x0000000000000000000000000000000000000034":"0x1","0x0000000000000000000000000000000000000035":"0x1","0x0000000000000000000000000000000000000036":"0x1","0x0000000000000000000000000000000000000037":"0x1","0x0000000000000000000000000000000000000038":"0x1","0x0000000000000000000000000000000000000039":"0x1","0x000000000000000000000000000000000000003a":"0x1","0x000000000000000000000000000000000000003b":"0x1","0x000000000000000000000000000000000000003c":"0x1","0x000000000000000000000000000000000000003d":"0x1","0x000000000000000000000000000000000000003e":"0x1","0x000000000000000000000000000000000000003f":"0x1","0x0000000000000000000000000000000000000040":"0x1","0x0000000000000000000000000000000000000041":"0x1","0x0000000000000000000000000000000000000042":"0x1","0x0000000000000000000000000000000000000043":"0x1","0x0000000000000000000000000000000000000044":"0x1","0x0000000000000000000000000000000000000045":"0x1","0x0000000000000000000000000000000000000046":"0x1","0x0000000000000000000000000000000000000047":"0x1","0x0000000000000000000000000000000000000048":"0x1","0x0000000000000000000000000000000000000049":"0x1","0x000000000000000000000000000000000000004a":"0x1","0x000000000000000000000000000000000000004b":"0x1","0x000000000000000000000000000000000000004c":"0x1","0x000000000000000000000000000000000000004d":"0x1","0x000000000000000000000000000000000000004e":"0x1","0x000000000000000000000000000000000000004f":"0x1","0x0000000000000000000000000000000000000050":"0x1","0x0000000000000000000000000000000000000051":"0x1","0x0000000000000000000000000000000000000052":"0x1","0x0000000000000000000000000000000000000053":"0x1","0x0000000000000000000000000000000000000054":"0x1","0x0000000000000000000000000000000000000055":"0x1","0x0000000000000000000000000000000000000056":"0x1","0x0000000000000000000000000000000000000057":"0x1","0x0000000000000000000000000000000000000058":"0x1","0x0000000000000000000000000000000000000059":"0x1","0x000000000000000000000000000000000000005a":"0x1","0x000000000000000000000000000000000000005b":"0x1","0x000000000000000000000000000000000000005c":"0x1","0x000000000000000000000000000000000000005d":"0x1","0x000000000000000000000000000000000000005e":"0x1","0x000000000000000000000000000000000000005f":"0x1","0x0000000000000000000000000000000000000060":"0x1","0x0000000000000000000000000000000000000061":"0x1","0x0000000000000000000000000000000000000062":"0x1","0x0000000000000000000000000000000000000063":"0x1","0x0000000000000000000000000000000000000064":"0x1","0x0000000000000000000000000000000000000065":"0x1","0x0000000000000000000000000000000000000066":"0x1","0x0000000000000000000000000000000000000067":"0x1","0x0000000000000000000000000000000000000068":"0x1","0x0000000000000000000000000000000000000069":"0x1","0x000000000000000000000000000000000000006a":"0x1","0x000000000000000000000000000000000000006b":"0x1","0x000000000000000000000000000000000000006c":"0x1","0x000000000000000000000000000000000000006d":"0x1","0x000000000000000000000000000000000000006e":"0x1","0x000000000000000000000000000000000000006f":"0x1","0x0000000000000000000000000000000000000070":"0x1","0x0000000000000000000000000000000000000071":"0x1","0x0000000000000000000000000000000000000072":"0x1","0x0000000000000000000000000000000000000073":"0x1","0x0000000000000000000000000000000000000074":"0x1","0x0000000000000000000000000000000000000075":"0x1","0x0000000000000000000000000000000000000076":"0x1","0x0000000000000000000000000000000000000077":"0x1","0x0000000000000000000000000000000000000078":"0x1","0x0000000000000000000000000000000000000079":"0x1","0x000000000000000000000000000000000000007a":"0x1","0x000000000000000000000000000000000000007b":"0x1","0x000000000000000000000000000000000000007c":"0x1","0x000000000000000000000000000000000000007d":"0x1","0x000000000000000000000000000000000000007e":"0x1","0x000000000000000000000000000000000000007f":"0x1","0x0000000000000000000000000000000000000080":"0x1","0x0000000000000000000000000000000000000081":"0x1","0x0000000000000000000000000000000000000082":"0x1","0x0000000000000000000000000000000000000083":"0x1","0x0000000000000000000000000000000000000084":"0x1","0x0000000000000000000000000000000000000085":"0x1","0x0000000000000000000000000000000000000086":"0x1","0x0000000000000000000000000000000000000087":"0x1","0x0000000000000000000000000000000000000088":"0x1","0x0000000000000000000000000000000000000089":"0x1","0x000000000000000000000000000000000000008a":"0x1","0x000000000000000000000000000000000000008b":"0x1","0x000000000000000000000000000000000000008c":"0x1","0x000000000000000000000000000000000000008d":"0x1","0x000000000000000000000000000000000000008e":"0x1","0x000000000000000000000000000000000000008f":"0x1","0x0000000000000000000000000000000000000090":"0x1","0x0000000000000000000000000000000000000091":"0x1","0x0000000000000000000000000000000000000092":"0x1","0x0000000000000000000000000000000000000093":"0x1","0x0000000000000000000000000000000000000094":"0x1","0x0000000000000000000000000000000000000095":"0x1","0x0000000000000000000000000000000000000096":"0x1","0x0000000000000000000000000000000000000097":"0x1","0x0000000000000000000000000000000000000098":"0x1","0x0000000000000000000000000000000000000099":"0x1","0x000000000000000000000000000000000000009a":"0x1","0x000000000000000000000000000000000000009b":"0x1","0x000000000000000000000000000000000000009c":"0x1","0x000000000000000000000000000000000000009d":"0x1","0x000000000000000000000000000000000000009e":"0x1","0x000000000000000000000000000000000000009f":"0x1","0x00000000000000000000000000000000000000a0":"0x1","0x00000000000000000000000000000000000000a1":"0x1","0x00000000000000000000000000000000000000a2":"0x1","0x00000000000000000000000000000000000000a3":"0x1","0x00000000000000000000000000000000000000a4":"0x1","0x00000000000000000000000000000000000000a5":"0x1","0x00000000000000000000000000000000000000a6":"0x1","0x00000000000000000000000000000000000000a7":"0x1","0x00000000000000000000000000000000000000a8":"0x1","0x00000000000000000000000000000000000000a9":"0x1","0x00000000000000000000000000000000000000aa":"0x1","0x00000000000000000000000000000000000000ab":"0x1","0x00000000000000000000000000000000000000ac":"0x1","0x00000000000000000000000000000000000000ad":"0x1","0x00000000000000000000000000000000000000ae":"0x1","0x00000000000000000000000000000000000000af":"0x1","0x00000000000000000000000000000000000000b0":"0x1","0x00000000000000000000000000000000000000b1":"0x1","0x00000000000000000000000000000000000000b2":"0x1","0x00000000000000000000000000000000000000b3":"0x1","0x00000000000000000000000000000000000000b4":"0x1","0x00000000000000000000000000000000000000b5":"0x1","0x00000000000000000000000000000000000000b6":"0x1","0x00000000000000000000000000000000000000b7":"0x1","0x00000000000000000000000000000000000000b8":"0x1","0x00000000000000000000000000000000000000b9":"0x1","0x00000000000000000000000000000000000000ba":"0x1","0x00000000000000000000000000000000000000bb":"0x1","0x00000000000000000000000000000000000000bc":"0x1","0x00000000000000000000000000000000000000bd":"0x1","0x00000000000000000000000000000000000000be":"0x1","0x00000000000000000000000000000000000000bf":"0x1","0x00000000000000000000000000000000000000c0":"0x1","0x00000000000000000000000000000000000000c1":"0x1","0x00000000000000000000000000000000000000c2":"0x1","0x00000000000000000000000000000000000000c3":"0x1","0x00000000000000000000000000000000000000c4":"0x1","0x00000000000000000000000000000000000000c5":"0x1","0x00000000000000000000000000000000000000c6":"0x1","0x00000000000000000000000000000000000000c7":"0x1","0x00000000000000000000000000000000000000c8":"0x1","0x00000000000000000000000000000000000000c9":"0x1","0x00000000000000000000000000000000000000ca":"0x1","0x00000000000000000000000000000000000000cb":"0x1","0x00000000000000000000000000000000000000cc":"0x1","0x00000000000000000000000000000000000000cd":"0x1","0x00000000000000000000000000000000000000ce":"0x1","0x00000000000000000000000000000000000000cf":"0x1","0x00000000000000000000000000000000000000d0":"0x1","0x00000000000000000000000000000000000000d1":"0x1","0x00000000000000000000000000000000000000d2":"0x1","0x00000000000000000000000000000000000000d3":"0x1","0x00000000000000000000000000000000000000d4":"0x1","0x00000000000000000000000000000000000000d5":"0x1","0x00000000000000000000000000000000000000d6":"0x1","0x00000000000000000000000000000000000000d7":"0x1","0x00000000000000000000000000000000000000d8":"0x1","0x00000000000000000000000000000000000000d9":"0x1","0x00000000000000000000000000000000000000da":"0x1","0x00000000000000000000000000000000000000db":"0x1","0x00000000000000000000000000000000000000dc":"0x1","0x00000000000000000000000000000000000000dd":"0x1","0x00000000000000000000000000000000000000de":"0x1","0x00000000000000000000000000000000000000df":"0x1","0x00000000000000000000000000000000000000e0":"0x1","0x00000000000000000000000000000000000000e1":"0x1","0x00000000000000000000000000000000000000e2":"0x1","0x00000000000000000000000000000000000000e3":"0x1","0x00000000000000000000000000000000000000e4":"0x1","0x00000000000000000000000000000000000000e5":"0x1","0x00000000000000000000000000000000000000e6":"0x1","0x00000000000000000000000000000000000000e7":"0x1","0x00000000000000000000000000000000000000e8":"0x1","0x00000000000000000000000000000000000000e9":"0x1","0x00000000000000000000000000000000000000ea":"0x1","0x00000000000000000000000000000000000000eb":"0x1","0x00000000000000000000000000000000000000ec":"0x1","0x00000000000000000000000000000000000000ed":"0x1","0x00000000000000000000000000000000000000ee":"0x1","0x00000000000000000000000000000000000000ef":"0x1","0x00000000000000000000000000000000000000f0":"0x1","0x00000000000000000000000000000000000000f1":"0x1","0x00000000000000000000000000000000000000f2":"0x1","0x00000000000000000000000000000000000000f3":"0x1","0x00000000000000000000000000000000000000f4":"0x1","0x00000000000000000000000000000000000000f5":"0x1","0x00000000000000000000000000000000000000f6":"0x1","0x00000000000000000000000000000000000000f7":"0x1","0x00000000000000000000000000000000000000f8":"0x1","0x00000000000000000000000000000000000000f9":"0x1","0x00000000000000000000000000000000000000fa":"0x1","0x00000000000000000000000000000000000000fb":"0x1","0x00000000000000000000000000000000000000fc":"0x1","0x00000000000000000000000000000000000000fd":"0x1","0x00000000000000000000000000000000000000fe":"0x1","0x00000000000000000000000000000000000000ff":"0x1","0x31b98d14007bdee637298086988a0bbd31184523":"0x200000000000000000000000000000000000000000000000000000000000000"}');

/***/ }),

/***/ "./node_modules/@ethereumjs/common/dist.browser/genesisStates/ropsten.json":
/*!*********************************************************************************!*\
  !*** ./node_modules/@ethereumjs/common/dist.browser/genesisStates/ropsten.json ***!
  \*********************************************************************************/
/***/ (function(module) {

"use strict";
module.exports = JSON.parse('{"0x0000000000000000000000000000000000000000":"0x1","0x0000000000000000000000000000000000000001":"0x1","0x0000000000000000000000000000000000000002":"0x1","0x0000000000000000000000000000000000000003":"0x1","0x0000000000000000000000000000000000000004":"0x1","0x0000000000000000000000000000000000000005":"0x1","0x0000000000000000000000000000000000000006":"0x1","0x0000000000000000000000000000000000000007":"0x1","0x0000000000000000000000000000000000000008":"0x1","0x0000000000000000000000000000000000000009":"0x1","0x000000000000000000000000000000000000000a":"0x0","0x000000000000000000000000000000000000000b":"0x0","0x000000000000000000000000000000000000000c":"0x0","0x000000000000000000000000000000000000000d":"0x0","0x000000000000000000000000000000000000000e":"0x0","0x000000000000000000000000000000000000000f":"0x0","0x0000000000000000000000000000000000000010":"0x0","0x0000000000000000000000000000000000000011":"0x0","0x0000000000000000000000000000000000000012":"0x0","0x0000000000000000000000000000000000000013":"0x0","0x0000000000000000000000000000000000000014":"0x0","0x0000000000000000000000000000000000000015":"0x0","0x0000000000000000000000000000000000000016":"0x0","0x0000000000000000000000000000000000000017":"0x0","0x0000000000000000000000000000000000000018":"0x0","0x0000000000000000000000000000000000000019":"0x0","0x000000000000000000000000000000000000001a":"0x0","0x000000000000000000000000000000000000001b":"0x0","0x000000000000000000000000000000000000001c":"0x0","0x000000000000000000000000000000000000001d":"0x0","0x000000000000000000000000000000000000001e":"0x0","0x000000000000000000000000000000000000001f":"0x0","0x0000000000000000000000000000000000000020":"0x0","0x0000000000000000000000000000000000000021":"0x0","0x0000000000000000000000000000000000000022":"0x0","0x0000000000000000000000000000000000000023":"0x0","0x0000000000000000000000000000000000000024":"0x0","0x0000000000000000000000000000000000000025":"0x0","0x0000000000000000000000000000000000000026":"0x0","0x0000000000000000000000000000000000000027":"0x0","0x0000000000000000000000000000000000000028":"0x0","0x0000000000000000000000000000000000000029":"0x0","0x000000000000000000000000000000000000002a":"0x0","0x000000000000000000000000000000000000002b":"0x0","0x000000000000000000000000000000000000002c":"0x0","0x000000000000000000000000000000000000002d":"0x0","0x000000000000000000000000000000000000002e":"0x0","0x000000000000000000000000000000000000002f":"0x0","0x0000000000000000000000000000000000000030":"0x0","0x0000000000000000000000000000000000000031":"0x0","0x0000000000000000000000000000000000000032":"0x0","0x0000000000000000000000000000000000000033":"0x0","0x0000000000000000000000000000000000000034":"0x0","0x0000000000000000000000000000000000000035":"0x0","0x0000000000000000000000000000000000000036":"0x0","0x0000000000000000000000000000000000000037":"0x0","0x0000000000000000000000000000000000000038":"0x0","0x0000000000000000000000000000000000000039":"0x0","0x000000000000000000000000000000000000003a":"0x0","0x000000000000000000000000000000000000003b":"0x0","0x000000000000000000000000000000000000003c":"0x0","0x000000000000000000000000000000000000003d":"0x0","0x000000000000000000000000000000000000003e":"0x0","0x000000000000000000000000000000000000003f":"0x0","0x0000000000000000000000000000000000000040":"0x0","0x0000000000000000000000000000000000000041":"0x0","0x0000000000000000000000000000000000000042":"0x0","0x0000000000000000000000000000000000000043":"0x0","0x0000000000000000000000000000000000000044":"0x0","0x0000000000000000000000000000000000000045":"0x0","0x0000000000000000000000000000000000000046":"0x0","0x0000000000000000000000000000000000000047":"0x0","0x0000000000000000000000000000000000000048":"0x0","0x0000000000000000000000000000000000000049":"0x0","0x000000000000000000000000000000000000004a":"0x0","0x000000000000000000000000000000000000004b":"0x0","0x000000000000000000000000000000000000004c":"0x0","0x000000000000000000000000000000000000004d":"0x0","0x000000000000000000000000000000000000004e":"0x0","0x000000000000000000000000000000000000004f":"0x0","0x0000000000000000000000000000000000000050":"0x0","0x0000000000000000000000000000000000000051":"0x0","0x0000000000000000000000000000000000000052":"0x0","0x0000000000000000000000000000000000000053":"0x0","0x0000000000000000000000000000000000000054":"0x0","0x0000000000000000000000000000000000000055":"0x0","0x0000000000000000000000000000000000000056":"0x0","0x0000000000000000000000000000000000000057":"0x0","0x0000000000000000000000000000000000000058":"0x0","0x0000000000000000000000000000000000000059":"0x0","0x000000000000000000000000000000000000005a":"0x0","0x000000000000000000000000000000000000005b":"0x0","0x000000000000000000000000000000000000005c":"0x0","0x000000000000000000000000000000000000005d":"0x0","0x000000000000000000000000000000000000005e":"0x0","0x000000000000000000000000000000000000005f":"0x0","0x0000000000000000000000000000000000000060":"0x0","0x0000000000000000000000000000000000000061":"0x0","0x0000000000000000000000000000000000000062":"0x0","0x0000000000000000000000000000000000000063":"0x0","0x0000000000000000000000000000000000000064":"0x0","0x0000000000000000000000000000000000000065":"0x0","0x0000000000000000000000000000000000000066":"0x0","0x0000000000000000000000000000000000000067":"0x0","0x0000000000000000000000000000000000000068":"0x0","0x0000000000000000000000000000000000000069":"0x0","0x000000000000000000000000000000000000006a":"0x0","0x000000000000000000000000000000000000006b":"0x0","0x000000000000000000000000000000000000006c":"0x0","0x000000000000000000000000000000000000006d":"0x0","0x000000000000000000000000000000000000006e":"0x0","0x000000000000000000000000000000000000006f":"0x0","0x0000000000000000000000000000000000000070":"0x0","0x0000000000000000000000000000000000000071":"0x0","0x0000000000000000000000000000000000000072":"0x0","0x0000000000000000000000000000000000000073":"0x0","0x0000000000000000000000000000000000000074":"0x0","0x0000000000000000000000000000000000000075":"0x0","0x0000000000000000000000000000000000000076":"0x0","0x0000000000000000000000000000000000000077":"0x0","0x0000000000000000000000000000000000000078":"0x0","0x0000000000000000000000000000000000000079":"0x0","0x000000000000000000000000000000000000007a":"0x0","0x000000000000000000000000000000000000007b":"0x0","0x000000000000000000000000000000000000007c":"0x0","0x000000000000000000000000000000000000007d":"0x0","0x000000000000000000000000000000000000007e":"0x0","0x000000000000000000000000000000000000007f":"0x0","0x0000000000000000000000000000000000000080":"0x0","0x0000000000000000000000000000000000000081":"0x0","0x0000000000000000000000000000000000000082":"0x0","0x0000000000000000000000000000000000000083":"0x0","0x0000000000000000000000000000000000000084":"0x0","0x0000000000000000000000000000000000000085":"0x0","0x0000000000000000000000000000000000000086":"0x0","0x0000000000000000000000000000000000000087":"0x0","0x0000000000000000000000000000000000000088":"0x0","0x0000000000000000000000000000000000000089":"0x0","0x000000000000000000000000000000000000008a":"0x0","0x000000000000000000000000000000000000008b":"0x0","0x000000000000000000000000000000000000008c":"0x0","0x000000000000000000000000000000000000008d":"0x0","0x000000000000000000000000000000000000008e":"0x0","0x000000000000000000000000000000000000008f":"0x0","0x0000000000000000000000000000000000000090":"0x0","0x0000000000000000000000000000000000000091":"0x0","0x0000000000000000000000000000000000000092":"0x0","0x0000000000000000000000000000000000000093":"0x0","0x0000000000000000000000000000000000000094":"0x0","0x0000000000000000000000000000000000000095":"0x0","0x0000000000000000000000000000000000000096":"0x0","0x0000000000000000000000000000000000000097":"0x0","0x0000000000000000000000000000000000000098":"0x0","0x0000000000000000000000000000000000000099":"0x0","0x000000000000000000000000000000000000009a":"0x0","0x000000000000000000000000000000000000009b":"0x0","0x000000000000000000000000000000000000009c":"0x0","0x000000000000000000000000000000000000009d":"0x0","0x000000000000000000000000000000000000009e":"0x0","0x000000000000000000000000000000000000009f":"0x0","0x00000000000000000000000000000000000000a0":"0x0","0x00000000000000000000000000000000000000a1":"0x0","0x00000000000000000000000000000000000000a2":"0x0","0x00000000000000000000000000000000000000a3":"0x0","0x00000000000000000000000000000000000000a4":"0x0","0x00000000000000000000000000000000000000a5":"0x0","0x00000000000000000000000000000000000000a6":"0x0","0x00000000000000000000000000000000000000a7":"0x0","0x00000000000000000000000000000000000000a8":"0x0","0x00000000000000000000000000000000000000a9":"0x0","0x00000000000000000000000000000000000000aa":"0x0","0x00000000000000000000000000000000000000ab":"0x0","0x00000000000000000000000000000000000000ac":"0x0","0x00000000000000000000000000000000000000ad":"0x0","0x00000000000000000000000000000000000000ae":"0x0","0x00000000000000000000000000000000000000af":"0x0","0x00000000000000000000000000000000000000b0":"0x0","0x00000000000000000000000000000000000000b1":"0x0","0x00000000000000000000000000000000000000b2":"0x0","0x00000000000000000000000000000000000000b3":"0x0","0x00000000000000000000000000000000000000b4":"0x0","0x00000000000000000000000000000000000000b5":"0x0","0x00000000000000000000000000000000000000b6":"0x0","0x00000000000000000000000000000000000000b7":"0x0","0x00000000000000000000000000000000000000b8":"0x0","0x00000000000000000000000000000000000000b9":"0x0","0x00000000000000000000000000000000000000ba":"0x0","0x00000000000000000000000000000000000000bb":"0x0","0x00000000000000000000000000000000000000bc":"0x0","0x00000000000000000000000000000000000000bd":"0x0","0x00000000000000000000000000000000000000be":"0x0","0x00000000000000000000000000000000000000bf":"0x0","0x00000000000000000000000000000000000000c0":"0x0","0x00000000000000000000000000000000000000c1":"0x0","0x00000000000000000000000000000000000000c2":"0x0","0x00000000000000000000000000000000000000c3":"0x0","0x00000000000000000000000000000000000000c4":"0x0","0x00000000000000000000000000000000000000c5":"0x0","0x00000000000000000000000000000000000000c6":"0x0","0x00000000000000000000000000000000000000c7":"0x0","0x00000000000000000000000000000000000000c8":"0x0","0x00000000000000000000000000000000000000c9":"0x0","0x00000000000000000000000000000000000000ca":"0x0","0x00000000000000000000000000000000000000cb":"0x0","0x00000000000000000000000000000000000000cc":"0x0","0x00000000000000000000000000000000000000cd":"0x0","0x00000000000000000000000000000000000000ce":"0x0","0x00000000000000000000000000000000000000cf":"0x0","0x00000000000000000000000000000000000000d0":"0x0","0x00000000000000000000000000000000000000d1":"0x0","0x00000000000000000000000000000000000000d2":"0x0","0x00000000000000000000000000000000000000d3":"0x0","0x00000000000000000000000000000000000000d4":"0x0","0x00000000000000000000000000000000000000d5":"0x0","0x00000000000000000000000000000000000000d6":"0x0","0x00000000000000000000000000000000000000d7":"0x0","0x00000000000000000000000000000000000000d8":"0x0","0x00000000000000000000000000000000000000d9":"0x0","0x00000000000000000000000000000000000000da":"0x0","0x00000000000000000000000000000000000000db":"0x0","0x00000000000000000000000000000000000000dc":"0x0","0x00000000000000000000000000000000000000dd":"0x0","0x00000000000000000000000000000000000000de":"0x0","0x00000000000000000000000000000000000000df":"0x0","0x00000000000000000000000000000000000000e0":"0x0","0x00000000000000000000000000000000000000e1":"0x0","0x00000000000000000000000000000000000000e2":"0x0","0x00000000000000000000000000000000000000e3":"0x0","0x00000000000000000000000000000000000000e4":"0x0","0x00000000000000000000000000000000000000e5":"0x0","0x00000000000000000000000000000000000000e6":"0x0","0x00000000000000000000000000000000000000e7":"0x0","0x00000000000000000000000000000000000000e8":"0x0","0x00000000000000000000000000000000000000e9":"0x0","0x00000000000000000000000000000000000000ea":"0x0","0x00000000000000000000000000000000000000eb":"0x0","0x00000000000000000000000000000000000000ec":"0x0","0x00000000000000000000000000000000000000ed":"0x0","0x00000000000000000000000000000000000000ee":"0x0","0x00000000000000000000000000000000000000ef":"0x0","0x00000000000000000000000000000000000000f0":"0x0","0x00000000000000000000000000000000000000f1":"0x0","0x00000000000000000000000000000000000000f2":"0x0","0x00000000000000000000000000000000000000f3":"0x0","0x00000000000000000000000000000000000000f4":"0x0","0x00000000000000000000000000000000000000f5":"0x0","0x00000000000000000000000000000000000000f6":"0x0","0x00000000000000000000000000000000000000f7":"0x0","0x00000000000000000000000000000000000000f8":"0x0","0x00000000000000000000000000000000000000f9":"0x0","0x00000000000000000000000000000000000000fa":"0x0","0x00000000000000000000000000000000000000fb":"0x0","0x00000000000000000000000000000000000000fc":"0x0","0x00000000000000000000000000000000000000fd":"0x0","0x00000000000000000000000000000000000000fe":"0x0","0x00000000000000000000000000000000000000ff":"0x0","0x874b54a8bd152966d63f706bae1ffeb0411921e5":"0xc9f2c9cd04674edea40000000"}');

/***/ }),

/***/ "./node_modules/@ethereumjs/common/dist.browser/genesisStates/sepolia.json":
/*!*********************************************************************************!*\
  !*** ./node_modules/@ethereumjs/common/dist.browser/genesisStates/sepolia.json ***!
  \*********************************************************************************/
/***/ (function(module) {

"use strict";
module.exports = JSON.parse('{"0xa2A6d93439144FFE4D27c9E088dCD8b783946263":"0xD3C21BCECCEDA1000000","0xBc11295936Aa79d594139de1B2e12629414F3BDB":"0xD3C21BCECCEDA1000000","0x7cF5b79bfe291A67AB02b393E456cCc4c266F753":"0xD3C21BCECCEDA1000000","0xaaec86394441f915bce3e6ab399977e9906f3b69":"0xD3C21BCECCEDA1000000","0xF47CaE1CF79ca6758Bfc787dbD21E6bdBe7112B8":"0xD3C21BCECCEDA1000000","0xd7eDDB78ED295B3C9629240E8924fb8D8874ddD8":"0xD3C21BCECCEDA1000000","0x8b7F0977Bb4f0fBE7076FA22bC24acA043583F5e":"0xD3C21BCECCEDA1000000","0xe2e2659028143784d557bcec6ff3a0721048880a":"0xD3C21BCECCEDA1000000","0xd9a5179f091d85051d3c982785efd1455cec8699":"0xD3C21BCECCEDA1000000","0xbeef32ca5b9a198d27B4e02F4c70439fE60356Cf":"0xD3C21BCECCEDA1000000","0x0000006916a87b82333f4245046623b23794c65c":"0x84595161401484A000000","0xb21c33de1fab3fa15499c62b59fe0cc3250020d1":"0x52B7D2DCC80CD2E4000000","0x10F5d45854e038071485AC9e402308cF80D2d2fE":"0x52B7D2DCC80CD2E4000000","0xd7d76c58b3a519e9fA6Cc4D22dC017259BC49F1E":"0x52B7D2DCC80CD2E4000000","0x799D329e5f583419167cD722962485926E338F4a":"0xDE0B6B3A7640000"}');

/***/ }),

/***/ "./node_modules/@ethereumjs/common/dist.browser/hardforks/arrowGlacier.json":
/*!**********************************************************************************!*\
  !*** ./node_modules/@ethereumjs/common/dist.browser/hardforks/arrowGlacier.json ***!
  \**********************************************************************************/
/***/ (function(module) {

"use strict";
module.exports = JSON.parse('{"name":"arrowGlacier","comment":"HF to delay the difficulty bomb","url":"https://github.com/ethereum/execution-specs/blob/master/network-upgrades/mainnet-upgrades/arrow-glacier.md","status":"Final","eips":[4345],"gasConfig":{},"gasPrices":{},"vm":{},"pow":{}}');

/***/ }),

/***/ "./node_modules/@ethereumjs/common/dist.browser/hardforks/berlin.json":
/*!****************************************************************************!*\
  !*** ./node_modules/@ethereumjs/common/dist.browser/hardforks/berlin.json ***!
  \****************************************************************************/
/***/ (function(module) {

"use strict";
module.exports = JSON.parse('{"name":"berlin","comment":"HF targeted for July 2020 following the Muir Glacier HF","url":"https://eips.ethereum.org/EIPS/eip-2070","status":"Final","eips":[2565,2929,2718,2930]}');

/***/ }),

/***/ "./node_modules/@ethereumjs/common/dist.browser/hardforks/byzantium.json":
/*!*******************************************************************************!*\
  !*** ./node_modules/@ethereumjs/common/dist.browser/hardforks/byzantium.json ***!
  \*******************************************************************************/
/***/ (function(module) {

"use strict";
module.exports = JSON.parse('{"name":"byzantium","comment":"Hardfork with new precompiles, instructions and other protocol changes","url":"https://eips.ethereum.org/EIPS/eip-609","status":"Final","gasConfig":{},"gasPrices":{"modexpGquaddivisor":{"v":20,"d":"Gquaddivisor from modexp precompile for gas calculation"},"ecAdd":{"v":500,"d":"Gas costs for curve addition precompile"},"ecMul":{"v":40000,"d":"Gas costs for curve multiplication precompile"},"ecPairing":{"v":100000,"d":"Base gas costs for curve pairing precompile"},"ecPairingWord":{"v":80000,"d":"Gas costs regarding curve pairing precompile input length"},"revert":{"v":0,"d":"Base fee of the REVERT opcode"},"staticcall":{"v":700,"d":"Base fee of the STATICCALL opcode"},"returndatasize":{"v":2,"d":"Base fee of the RETURNDATASIZE opcode"},"returndatacopy":{"v":3,"d":"Base fee of the RETURNDATACOPY opcode"}},"vm":{},"pow":{"minerReward":{"v":"3000000000000000000","d":"the amount a miner get rewarded for mining a block"},"difficultyBombDelay":{"v":3000000,"d":"the amount of blocks to delay the difficulty bomb with"}}}');

/***/ }),

/***/ "./node_modules/@ethereumjs/common/dist.browser/hardforks/chainstart.json":
/*!********************************************************************************!*\
  !*** ./node_modules/@ethereumjs/common/dist.browser/hardforks/chainstart.json ***!
  \********************************************************************************/
/***/ (function(module) {

"use strict";
module.exports = JSON.parse('{"name":"chainstart","comment":"Start of the Ethereum main chain","url":"","status":"","gasConfig":{"minGasLimit":{"v":5000,"d":"Minimum the gas limit may ever be"},"gasLimitBoundDivisor":{"v":1024,"d":"The bound divisor of the gas limit, used in update calculations"},"maxRefundQuotient":{"v":2,"d":"Maximum refund quotient; max tx refund is min(tx.gasUsed/maxRefundQuotient, tx.gasRefund)"}},"gasPrices":{"base":{"v":2,"d":"Gas base cost, used e.g. for ChainID opcode (Istanbul)"},"tierStep":{"v":[0,2,3,5,8,10,20],"d":"Once per operation, for a selection of them"},"exp":{"v":10,"d":"Base fee of the EXP opcode"},"expByte":{"v":10,"d":"Times ceil(log256(exponent)) for the EXP instruction"},"sha3":{"v":30,"d":"Base fee of the SHA3 opcode"},"sha3Word":{"v":6,"d":"Once per word of the SHA3 operation\'s data"},"sload":{"v":50,"d":"Base fee of the SLOAD opcode"},"sstoreSet":{"v":20000,"d":"Once per SSTORE operation if the zeroness changes from zero"},"sstoreReset":{"v":5000,"d":"Once per SSTORE operation if the zeroness does not change from zero"},"sstoreRefund":{"v":15000,"d":"Once per SSTORE operation if the zeroness changes to zero"},"jumpdest":{"v":1,"d":"Base fee of the JUMPDEST opcode"},"log":{"v":375,"d":"Base fee of the LOG opcode"},"logData":{"v":8,"d":"Per byte in a LOG* operation\'s data"},"logTopic":{"v":375,"d":"Multiplied by the * of the LOG*, per LOG transaction. e.g. LOG0 incurs 0 * c_txLogTopicGas, LOG4 incurs 4 * c_txLogTopicGas"},"create":{"v":32000,"d":"Base fee of the CREATE opcode"},"call":{"v":40,"d":"Base fee of the CALL opcode"},"callStipend":{"v":2300,"d":"Free gas given at beginning of call"},"callValueTransfer":{"v":9000,"d":"Paid for CALL when the value transfor is non-zero"},"callNewAccount":{"v":25000,"d":"Paid for CALL when the destination address didn\'t exist prior"},"selfdestructRefund":{"v":24000,"d":"Refunded following a selfdestruct operation"},"memory":{"v":3,"d":"Times the address of the (highest referenced byte in memory + 1). NOTE: referencing happens on read, write and in instructions such as RETURN and CALL"},"quadCoeffDiv":{"v":512,"d":"Divisor for the quadratic particle of the memory cost equation"},"createData":{"v":200,"d":""},"tx":{"v":21000,"d":"Per transaction. NOTE: Not payable on data of calls between transactions"},"txCreation":{"v":32000,"d":"The cost of creating a contract via tx"},"txDataZero":{"v":4,"d":"Per byte of data attached to a transaction that equals zero. NOTE: Not payable on data of calls between transactions"},"txDataNonZero":{"v":68,"d":"Per byte of data attached to a transaction that is not equal to zero. NOTE: Not payable on data of calls between transactions"},"copy":{"v":3,"d":"Multiplied by the number of 32-byte words that are copied (round up) for any *COPY operation and added"},"ecRecover":{"v":3000,"d":""},"sha256":{"v":60,"d":""},"sha256Word":{"v":12,"d":""},"ripemd160":{"v":600,"d":""},"ripemd160Word":{"v":120,"d":""},"identity":{"v":15,"d":""},"identityWord":{"v":3,"d":""},"stop":{"v":0,"d":"Base fee of the STOP opcode"},"add":{"v":3,"d":"Base fee of the ADD opcode"},"mul":{"v":5,"d":"Base fee of the MUL opcode"},"sub":{"v":3,"d":"Base fee of the SUB opcode"},"div":{"v":5,"d":"Base fee of the DIV opcode"},"sdiv":{"v":5,"d":"Base fee of the SDIV opcode"},"mod":{"v":5,"d":"Base fee of the MOD opcode"},"smod":{"v":5,"d":"Base fee of the SMOD opcode"},"addmod":{"v":8,"d":"Base fee of the ADDMOD opcode"},"mulmod":{"v":8,"d":"Base fee of the MULMOD opcode"},"signextend":{"v":5,"d":"Base fee of the SIGNEXTEND opcode"},"lt":{"v":3,"d":"Base fee of the LT opcode"},"gt":{"v":3,"d":"Base fee of the GT opcode"},"slt":{"v":3,"d":"Base fee of the SLT opcode"},"sgt":{"v":3,"d":"Base fee of the SGT opcode"},"eq":{"v":3,"d":"Base fee of the EQ opcode"},"iszero":{"v":3,"d":"Base fee of the ISZERO opcode"},"and":{"v":3,"d":"Base fee of the AND opcode"},"or":{"v":3,"d":"Base fee of the OR opcode"},"xor":{"v":3,"d":"Base fee of the XOR opcode"},"not":{"v":3,"d":"Base fee of the NOT opcode"},"byte":{"v":3,"d":"Base fee of the BYTE opcode"},"address":{"v":2,"d":"Base fee of the ADDRESS opcode"},"balance":{"v":20,"d":"Base fee of the BALANCE opcode"},"origin":{"v":2,"d":"Base fee of the ORIGIN opcode"},"caller":{"v":2,"d":"Base fee of the CALLER opcode"},"callvalue":{"v":2,"d":"Base fee of the CALLVALUE opcode"},"calldataload":{"v":3,"d":"Base fee of the CALLDATALOAD opcode"},"calldatasize":{"v":2,"d":"Base fee of the CALLDATASIZE opcode"},"calldatacopy":{"v":3,"d":"Base fee of the CALLDATACOPY opcode"},"codesize":{"v":2,"d":"Base fee of the CODESIZE opcode"},"codecopy":{"v":3,"d":"Base fee of the CODECOPY opcode"},"gasprice":{"v":2,"d":"Base fee of the GASPRICE opcode"},"extcodesize":{"v":20,"d":"Base fee of the EXTCODESIZE opcode"},"extcodecopy":{"v":20,"d":"Base fee of the EXTCODECOPY opcode"},"blockhash":{"v":20,"d":"Base fee of the BLOCKHASH opcode"},"coinbase":{"v":2,"d":"Base fee of the COINBASE opcode"},"timestamp":{"v":2,"d":"Base fee of the TIMESTAMP opcode"},"number":{"v":2,"d":"Base fee of the NUMBER opcode"},"difficulty":{"v":2,"d":"Base fee of the DIFFICULTY opcode"},"gaslimit":{"v":2,"d":"Base fee of the GASLIMIT opcode"},"pop":{"v":2,"d":"Base fee of the POP opcode"},"mload":{"v":3,"d":"Base fee of the MLOAD opcode"},"mstore":{"v":3,"d":"Base fee of the MSTORE opcode"},"mstore8":{"v":3,"d":"Base fee of the MSTORE8 opcode"},"sstore":{"v":0,"d":"Base fee of the SSTORE opcode"},"jump":{"v":8,"d":"Base fee of the JUMP opcode"},"jumpi":{"v":10,"d":"Base fee of the JUMPI opcode"},"pc":{"v":2,"d":"Base fee of the PC opcode"},"msize":{"v":2,"d":"Base fee of the MSIZE opcode"},"gas":{"v":2,"d":"Base fee of the GAS opcode"},"push":{"v":3,"d":"Base fee of the PUSH opcode"},"dup":{"v":3,"d":"Base fee of the DUP opcode"},"swap":{"v":3,"d":"Base fee of the SWAP opcode"},"callcode":{"v":40,"d":"Base fee of the CALLCODE opcode"},"return":{"v":0,"d":"Base fee of the RETURN opcode"},"invalid":{"v":0,"d":"Base fee of the INVALID opcode"},"selfdestruct":{"v":0,"d":"Base fee of the SELFDESTRUCT opcode"}},"vm":{"stackLimit":{"v":1024,"d":"Maximum size of VM stack allowed"},"callCreateDepth":{"v":1024,"d":"Maximum depth of call/create stack"},"maxExtraDataSize":{"v":32,"d":"Maximum size extra data may be after Genesis"}},"pow":{"minimumDifficulty":{"v":131072,"d":"The minimum that the difficulty may ever be"},"difficultyBoundDivisor":{"v":2048,"d":"The bound divisor of the difficulty, used in the update calculations"},"durationLimit":{"v":13,"d":"The decision boundary on the blocktime duration used to determine whether difficulty should go up or not"},"epochDuration":{"v":30000,"d":"Duration between proof-of-work epochs"},"timebombPeriod":{"v":100000,"d":"Exponential difficulty timebomb period"},"minerReward":{"v":"5000000000000000000","d":"the amount a miner get rewarded for mining a block"},"difficultyBombDelay":{"v":0,"d":"the amount of blocks to delay the difficulty bomb with"}}}');

/***/ }),

/***/ "./node_modules/@ethereumjs/common/dist.browser/hardforks/constantinople.json":
/*!************************************************************************************!*\
  !*** ./node_modules/@ethereumjs/common/dist.browser/hardforks/constantinople.json ***!
  \************************************************************************************/
/***/ (function(module) {

"use strict";
module.exports = JSON.parse('{"name":"constantinople","comment":"Postponed hardfork including EIP-1283 (SSTORE gas metering changes)","url":"https://eips.ethereum.org/EIPS/eip-1013","status":"Final","gasConfig":{},"gasPrices":{"netSstoreNoopGas":{"v":200,"d":"Once per SSTORE operation if the value doesn\'t change"},"netSstoreInitGas":{"v":20000,"d":"Once per SSTORE operation from clean zero"},"netSstoreCleanGas":{"v":5000,"d":"Once per SSTORE operation from clean non-zero"},"netSstoreDirtyGas":{"v":200,"d":"Once per SSTORE operation from dirty"},"netSstoreClearRefund":{"v":15000,"d":"Once per SSTORE operation for clearing an originally existing storage slot"},"netSstoreResetRefund":{"v":4800,"d":"Once per SSTORE operation for resetting to the original non-zero value"},"netSstoreResetClearRefund":{"v":19800,"d":"Once per SSTORE operation for resetting to the original zero value"},"shl":{"v":3,"d":"Base fee of the SHL opcode"},"shr":{"v":3,"d":"Base fee of the SHR opcode"},"sar":{"v":3,"d":"Base fee of the SAR opcode"},"extcodehash":{"v":400,"d":"Base fee of the EXTCODEHASH opcode"},"create2":{"v":32000,"d":"Base fee of the CREATE2 opcode"}},"vm":{},"pow":{"minerReward":{"v":"2000000000000000000","d":"The amount a miner gets rewarded for mining a block"},"difficultyBombDelay":{"v":5000000,"d":"the amount of blocks to delay the difficulty bomb with"}}}');

/***/ }),

/***/ "./node_modules/@ethereumjs/common/dist.browser/hardforks/dao.json":
/*!*************************************************************************!*\
  !*** ./node_modules/@ethereumjs/common/dist.browser/hardforks/dao.json ***!
  \*************************************************************************/
/***/ (function(module) {

"use strict";
module.exports = JSON.parse('{"name":"dao","comment":"DAO rescue hardfork","url":"https://eips.ethereum.org/EIPS/eip-779","status":"Final","gasConfig":{},"gasPrices":{},"vm":{},"pow":{}}');

/***/ }),

/***/ "./node_modules/@ethereumjs/common/dist.browser/hardforks/grayGlacier.json":
/*!*********************************************************************************!*\
  !*** ./node_modules/@ethereumjs/common/dist.browser/hardforks/grayGlacier.json ***!
  \*********************************************************************************/
/***/ (function(module) {

"use strict";
module.exports = JSON.parse('{"name":"grayGlacier","comment":"Delaying the difficulty bomb to Mid September 2022","url":"https://github.com/ethereum/execution-specs/blob/master/network-upgrades/mainnet-upgrades/gray-glacier.md","status":"Draft","eips":[5133],"gasConfig":{},"gasPrices":{},"vm":{},"pow":{}}');

/***/ }),

/***/ "./node_modules/@ethereumjs/common/dist.browser/hardforks/homestead.json":
/*!*******************************************************************************!*\
  !*** ./node_modules/@ethereumjs/common/dist.browser/hardforks/homestead.json ***!
  \*******************************************************************************/
/***/ (function(module) {

"use strict";
module.exports = JSON.parse('{"name":"homestead","comment":"Homestead hardfork with protocol and network changes","url":"https://eips.ethereum.org/EIPS/eip-606","status":"Final","gasConfig":{},"gasPrices":{"delegatecall":{"v":40,"d":"Base fee of the DELEGATECALL opcode"}},"vm":{},"pow":{}}');

/***/ }),

/***/ "./node_modules/@ethereumjs/common/dist.browser/hardforks/istanbul.json":
/*!******************************************************************************!*\
  !*** ./node_modules/@ethereumjs/common/dist.browser/hardforks/istanbul.json ***!
  \******************************************************************************/
/***/ (function(module) {

"use strict";
module.exports = JSON.parse('{"name":"istanbul","comment":"HF targeted for December 2019 following the Constantinople/Petersburg HF","url":"https://eips.ethereum.org/EIPS/eip-1679","status":"Final","gasConfig":{},"gasPrices":{"blake2Round":{"v":1,"d":"Gas cost per round for the Blake2 F precompile"},"ecAdd":{"v":150,"d":"Gas costs for curve addition precompile"},"ecMul":{"v":6000,"d":"Gas costs for curve multiplication precompile"},"ecPairing":{"v":45000,"d":"Base gas costs for curve pairing precompile"},"ecPairingWord":{"v":34000,"d":"Gas costs regarding curve pairing precompile input length"},"txDataNonZero":{"v":16,"d":"Per byte of data attached to a transaction that is not equal to zero. NOTE: Not payable on data of calls between transactions"},"sstoreSentryGasEIP2200":{"v":2300,"d":"Minimum gas required to be present for an SSTORE call, not consumed"},"sstoreNoopGasEIP2200":{"v":800,"d":"Once per SSTORE operation if the value doesn\'t change"},"sstoreDirtyGasEIP2200":{"v":800,"d":"Once per SSTORE operation if a dirty value is changed"},"sstoreInitGasEIP2200":{"v":20000,"d":"Once per SSTORE operation from clean zero to non-zero"},"sstoreInitRefundEIP2200":{"v":19200,"d":"Once per SSTORE operation for resetting to the original zero value"},"sstoreCleanGasEIP2200":{"v":5000,"d":"Once per SSTORE operation from clean non-zero to something else"},"sstoreCleanRefundEIP2200":{"v":4200,"d":"Once per SSTORE operation for resetting to the original non-zero value"},"sstoreClearRefundEIP2200":{"v":15000,"d":"Once per SSTORE operation for clearing an originally existing storage slot"},"balance":{"v":700,"d":"Base fee of the BALANCE opcode"},"extcodehash":{"v":700,"d":"Base fee of the EXTCODEHASH opcode"},"chainid":{"v":2,"d":"Base fee of the CHAINID opcode"},"selfbalance":{"v":5,"d":"Base fee of the SELFBALANCE opcode"},"sload":{"v":800,"d":"Base fee of the SLOAD opcode"}},"vm":{},"pow":{}}');

/***/ }),

/***/ "./node_modules/@ethereumjs/common/dist.browser/hardforks/london.json":
/*!****************************************************************************!*\
  !*** ./node_modules/@ethereumjs/common/dist.browser/hardforks/london.json ***!
  \****************************************************************************/
/***/ (function(module) {

"use strict";
module.exports = JSON.parse('{"name":"london","comment":"HF targeted for July 2021 following the Berlin fork","url":"https://github.com/ethereum/eth1.0-specs/blob/master/network-upgrades/mainnet-upgrades/london.md","status":"Final","eips":[1559,3198,3529,3541]}');

/***/ }),

/***/ "./node_modules/@ethereumjs/common/dist.browser/hardforks/merge.json":
/*!***************************************************************************!*\
  !*** ./node_modules/@ethereumjs/common/dist.browser/hardforks/merge.json ***!
  \***************************************************************************/
/***/ (function(module) {

"use strict";
module.exports = JSON.parse('{"name":"merge","comment":"Hardfork to upgrade the consensus mechanism to Proof-of-Stake","url":"https://github.com/ethereum/execution-specs/blob/master/network-upgrades/mainnet-upgrades/merge.md","status":"Draft","consensus":{"type":"pos","algorithm":"casper","casper":{}},"eips":[3675,4399]}');

/***/ }),

/***/ "./node_modules/@ethereumjs/common/dist.browser/hardforks/mergeForkIdTransition.json":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@ethereumjs/common/dist.browser/hardforks/mergeForkIdTransition.json ***!
  \*******************************************************************************************/
/***/ (function(module) {

"use strict";
module.exports = JSON.parse('{"name":"mergeForkIdTransition","comment":"Pre-merge hardfork to fork off non-upgraded clients","url":"https://eips.ethereum.org/EIPS/eip-3675","status":"Draft","eips":[]}');

/***/ }),

/***/ "./node_modules/@ethereumjs/common/dist.browser/hardforks/muirGlacier.json":
/*!*********************************************************************************!*\
  !*** ./node_modules/@ethereumjs/common/dist.browser/hardforks/muirGlacier.json ***!
  \*********************************************************************************/
/***/ (function(module) {

"use strict";
module.exports = JSON.parse('{"name":"muirGlacier","comment":"HF to delay the difficulty bomb","url":"https://eips.ethereum.org/EIPS/eip-2384","status":"Final","gasConfig":{},"gasPrices":{},"vm":{},"pow":{"difficultyBombDelay":{"v":9000000,"d":"the amount of blocks to delay the difficulty bomb with"}}}');

/***/ }),

/***/ "./node_modules/@ethereumjs/common/dist.browser/hardforks/petersburg.json":
/*!********************************************************************************!*\
  !*** ./node_modules/@ethereumjs/common/dist.browser/hardforks/petersburg.json ***!
  \********************************************************************************/
/***/ (function(module) {

"use strict";
module.exports = JSON.parse('{"name":"petersburg","comment":"Aka constantinopleFix, removes EIP-1283, activate together with or after constantinople","url":"https://eips.ethereum.org/EIPS/eip-1716","status":"Final","gasConfig":{},"gasPrices":{"netSstoreNoopGas":{"v":null,"d":"Removed along EIP-1283"},"netSstoreInitGas":{"v":null,"d":"Removed along EIP-1283"},"netSstoreCleanGas":{"v":null,"d":"Removed along EIP-1283"},"netSstoreDirtyGas":{"v":null,"d":"Removed along EIP-1283"},"netSstoreClearRefund":{"v":null,"d":"Removed along EIP-1283"},"netSstoreResetRefund":{"v":null,"d":"Removed along EIP-1283"},"netSstoreResetClearRefund":{"v":null,"d":"Removed along EIP-1283"}},"vm":{},"pow":{}}');

/***/ }),

/***/ "./node_modules/@ethereumjs/common/dist.browser/hardforks/shanghai.json":
/*!******************************************************************************!*\
  !*** ./node_modules/@ethereumjs/common/dist.browser/hardforks/shanghai.json ***!
  \******************************************************************************/
/***/ (function(module) {

"use strict";
module.exports = JSON.parse('{"name":"shanghai","comment":"Next feature hardfork after the merge hardfork","url":"https://github.com/ethereum/pm/issues/356","status":"Pre-Draft","eips":[]}');

/***/ }),

/***/ "./node_modules/@ethereumjs/common/dist.browser/hardforks/spuriousDragon.json":
/*!************************************************************************************!*\
  !*** ./node_modules/@ethereumjs/common/dist.browser/hardforks/spuriousDragon.json ***!
  \************************************************************************************/
/***/ (function(module) {

"use strict";
module.exports = JSON.parse('{"name":"spuriousDragon","comment":"HF with EIPs for simple replay attack protection, EXP cost increase, state trie clearing, contract code size limit","url":"https://eips.ethereum.org/EIPS/eip-607","status":"Final","gasConfig":{},"gasPrices":{"expByte":{"v":50,"d":"Times ceil(log256(exponent)) for the EXP instruction"}},"vm":{"maxCodeSize":{"v":24576,"d":"Maximum length of contract code"}},"pow":{}}');

/***/ }),

/***/ "./node_modules/@ethereumjs/common/dist.browser/hardforks/tangerineWhistle.json":
/*!**************************************************************************************!*\
  !*** ./node_modules/@ethereumjs/common/dist.browser/hardforks/tangerineWhistle.json ***!
  \**************************************************************************************/
/***/ (function(module) {

"use strict";
module.exports = JSON.parse('{"name":"tangerineWhistle","comment":"Hardfork with gas cost changes for IO-heavy operations","url":"https://eips.ethereum.org/EIPS/eip-608","status":"Final","gasConfig":{},"gasPrices":{"sload":{"v":200,"d":"Once per SLOAD operation"},"call":{"v":700,"d":"Once per CALL operation & message call transaction"},"extcodesize":{"v":700,"d":"Base fee of the EXTCODESIZE opcode"},"extcodecopy":{"v":700,"d":"Base fee of the EXTCODECOPY opcode"},"balance":{"v":400,"d":"Base fee of the BALANCE opcode"},"delegatecall":{"v":700,"d":"Base fee of the DELEGATECALL opcode"},"callcode":{"v":700,"d":"Base fee of the CALLCODE opcode"},"selfdestruct":{"v":5000,"d":"Base fee of the SELFDESTRUCT opcode"}},"vm":{},"pow":{}}');

/***/ })

}]);